

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul  6 03:51:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,keep,inline
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,keep,inline
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,keep,inline
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,keep,inline
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,keep,inline
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,keep,inline
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,keep,inline
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,keep,inline
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,keep,inline
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,keep,inline
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,keep,inline
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,keep,inline
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,keep,inline
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,keep,inline
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           ; Version 2.05
    78                           ; Generated 20/12/2018 GMT
    79                           ; 
    80                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4550 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  001ECA                     __pidataCOMRAM:
   114                           	opt callstack 0
   115                           
   116                           ;initializer for _mpap_step
   117  001ECA  F2                 	db	low __mpap_step1
   118  001ECB  1E                 	db	high __mpap_step1
   119  001ECC  E8                 	db	low __mpap_step2
   120  001ECD  1E                 	db	high __mpap_step2
   121  001ECE  DE                 	db	low __mpap_step3
   122  001ECF  1E                 	db	high __mpap_step3
   123  001ED0  FC                 	db	low __mpap_step4
   124  001ED1  1E                 	db	high __mpap_step4
   125                           
   126                           ;initializer for _mpap_off
   127  001ED2  D4                 	db	low __mpap_off
   128  001ED3  1E                 	db	high __mpap_off
   129                           
   130                           	psect	idataBANK0
   131  001E82                     __pidataBANK0:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for _multiplexedDisp
   135  001E82  60                 	db	low _multiplexedDisp0_off
   136  001E83  1F                 	db	high _multiplexedDisp0_off
   137  001E84  5C                 	db	low _multiplexedDisp0_on
   138  001E85  1F                 	db	high _multiplexedDisp0_on
   139  001E86  58                 	db	low _multiplexedDisp1_off
   140  001E87  1F                 	db	high _multiplexedDisp1_off
   141  001E88  54                 	db	low _multiplexedDisp1_on
   142  001E89  1F                 	db	high _multiplexedDisp1_on
   143  001E8A  50                 	db	low _multiplexedDisp2_off
   144  001E8B  1F                 	db	high _multiplexedDisp2_off
   145  001E8C  4C                 	db	low _multiplexedDisp2_on
   146  001E8D  1F                 	db	high _multiplexedDisp2_on
   147  001E8E  48                 	db	low _multiplexedDisp3_off
   148  001E8F  1F                 	db	high _multiplexedDisp3_off
   149  001E90  44                 	db	low _multiplexedDisp3_on
   150  001E91  1F                 	db	high _multiplexedDisp3_on
   151  001E92  40                 	db	low _multiplexedDisp4_off
   152  001E93  1F                 	db	high _multiplexedDisp4_off
   153  001E94  64                 	db	low _multiplexedDisp4_on
   154  001E95  1F                 	db	high _multiplexedDisp4_on
   155                           
   156                           	psect	smallconst
   157  000800                     __psmallconst:
   158                           	opt callstack 0
   159  000800  00                 	db	0
   160  000801                     _DISP7S_NUMS:
   161                           	opt callstack 0
   162  000801  3F                 	db	63
   163  000802  06                 	db	6
   164  000803  5B                 	db	91
   165  000804  4F                 	db	79
   166  000805  66                 	db	102
   167  000806  7D                 	db	125
   168  000807  76                 	db	118
   169  000808  07                 	db	7
   170  000809  7F                 	db	127
   171  00080A  67                 	db	103
   172  00080B                     __end_of_DISP7S_NUMS:
   173                           	opt callstack 0
   174  00080B                     _DISP7S_CHARS:
   175                           	opt callstack 0
   176  00080B  00                 	db	0
   177  00080C  40                 	db	64
   178  00080D                     __end_of_DISP7S_CHARS:
   179                           	opt callstack 0
   180  00080D  00                 	db	0	; dummy byte at the end
   181  0000                     
   182                           	psect	nvBANK0
   183  0000C4                     __pnvBANK0:
   184                           	opt callstack 0
   185  0000C4                     _t:
   186                           	opt callstack 0
   187  0000C4                     	ds	2
   188  0000                     _TRISB	set	3987
   189  0000                     _TRISA	set	3986
   190  0000                     _PORTD	set	3971
   191  0000                     _PORTC	set	3970
   192  0000                     _TRISC	set	3988
   193  0000                     _TRISD	set	3989
   194  0000                     _TRISE	set	3990
   195  0000                     _TMR0L	set	4054
   196  0000                     _TMR0H	set	4055
   197  0000                     _T0CON	set	4053
   198  0000                     _UCFG	set	3951
   199  0000                     _UCON	set	3949
   200  0000                     _CMCON	set	4020
   201  0000                     _ADCON1	set	4033
   202  0000                     _LATB	set	3978
   203  0000                     _LATE	set	3981
   204  0000                     _LATC	set	3979
   205  0000                     _LATA	set	3977
   206  0000                     _PORTE	set	3972
   207  0000                     _LATD	set	3980
   208  0000                     _TMR0IF	set	32658
   209  0000                     _GIE	set	32663
   210  0000                     _TMR0IE	set	32661
   211                           
   212                           ; #config settings
   213  0000                     
   214                           	psect	cinit
   215  0019E8                     __pcinit:
   216                           	opt callstack 0
   217  0019E8                     start_initialization:
   218                           	opt callstack 0
   219  0019E8                     __initialization:
   220                           	opt callstack 0
   221                           
   222                           ; Initialize objects allocated to BANK0 (20 bytes)
   223                           ; load TBLPTR registers with __pidataBANK0
   224  0019E8  0E82               	movlw	low __pidataBANK0
   225  0019EA  6EF6               	movwf	tblptrl,c
   226  0019EC  0E1E               	movlw	high __pidataBANK0
   227  0019EE  6EF7               	movwf	tblptrh,c
   228  0019F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   229  0019F2  6EF8               	movwf	tblptru,c
   230  0019F4  EE00  F0B0         	lfsr	0,__pdataBANK0
   231  0019F8  EE10 F014          	lfsr	1,20
   232  0019FC                     copy_data0:
   233  0019FC  0009               	tblrd		*+
   234  0019FE  CFF5 FFEE          	movff	tablat,postinc0
   235  001A02  50E5               	movf	postdec1,w,c
   236  001A04  50E1               	movf	fsr1l,w,c
   237  001A06  E1FA               	bnz	copy_data0
   238                           
   239                           ; Initialize objects allocated to COMRAM (10 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241  001A08  0ECA               	movlw	low __pidataCOMRAM
   242  001A0A  6EF6               	movwf	tblptrl,c
   243  001A0C  0E1E               	movlw	high __pidataCOMRAM
   244  001A0E  6EF7               	movwf	tblptrh,c
   245  001A10  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246  001A12  6EF8               	movwf	tblptru,c
   247  001A14  EE00  F053         	lfsr	0,__pdataCOMRAM
   248  001A18  EE10 F00A          	lfsr	1,10
   249  001A1C                     copy_data1:
   250  001A1C  0009               	tblrd		*+
   251  001A1E  CFF5 FFEE          	movff	tablat,postinc0
   252  001A22  50E5               	movf	postdec1,w,c
   253  001A24  50E1               	movf	fsr1l,w,c
   254  001A26  E1FA               	bnz	copy_data1
   255                           
   256                           ; Clear objects allocated to BANK1 (123 bytes)
   257  001A28  EE01  F000         	lfsr	0,__pbssBANK1
   258  001A2C  0E7B               	movlw	123
   259  001A2E                     clear_0:
   260  001A2E  6AEE               	clrf	postinc0,c
   261  001A30  06E8               	decf	wreg,f,c
   262  001A32  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to BANK0 (80 bytes)
   265  001A34  EE00  F060         	lfsr	0,__pbssBANK0
   266  001A38  0E50               	movlw	80
   267  001A3A                     clear_1:
   268  001A3A  6AEE               	clrf	postinc0,c
   269  001A3C  06E8               	decf	wreg,f,c
   270  001A3E  E1FD               	bnz	clear_1
   271                           
   272                           ; Clear objects allocated to COMRAM (19 bytes)
   273  001A40  EE00  F040         	lfsr	0,__pbssCOMRAM
   274  001A44  0E13               	movlw	19
   275  001A46                     clear_2:
   276  001A46  6AEE               	clrf	postinc0,c
   277  001A48  06E8               	decf	wreg,f,c
   278  001A4A  E1FD               	bnz	clear_2
   279  001A4C                     end_of_initialization:
   280                           	opt callstack 0
   281  001A4C                     __end_of__initialization:
   282                           	opt callstack 0
   283  001A4C  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   284  001A4E  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   285  001A50  0E00               	movlw	low (__Lmediumconst shr (0+16))
   286  001A52  6EF8               	movwf	tblptru,c
   287  001A54  0100               	movlb	0
   288  001A56  EF10  F00A         	goto	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMRAM
   291  000040                     __pbssCOMRAM:
   292                           	opt callstack 0
   293  000040                     _mpap:
   294                           	opt callstack 0
   295  000040                     	ds	8
   296  000048                     _group_x:
   297                           	opt callstack 0
   298  000048                     	ds	5
   299  00004D                     _xx:
   300                           	opt callstack 0
   301  00004D                     	ds	2
   302  00004F                     display7s_job@q:
   303                           	opt callstack 0
   304  00004F                     	ds	1
   305  000050                     mpap_do1step@i:
   306                           	opt callstack 0
   307  000050                     	ds	1
   308  000051                     _main_flag:
   309                           	opt callstack 0
   310  000051                     	ds	1
   311  000052                     _isr_flag:
   312                           	opt callstack 0
   313  000052                     	ds	1
   314                           
   315                           	psect	dataCOMRAM
   316  000053                     __pdataCOMRAM:
   317                           	opt callstack 0
   318  000053                     _mpap_step:
   319                           	opt callstack 0
   320  000053                     	ds	8
   321  00005B                     _mpap_off:
   322                           	opt callstack 0
   323  00005B                     	ds	2
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	opt callstack 0
   328  000060                     _key:
   329                           	opt callstack 0
   330  000060                     	ds	80
   331                           
   332                           	psect	dataBANK0
   333  0000B0                     __pdataBANK0:
   334                           	opt callstack 0
   335  0000B0                     _multiplexedDisp:
   336                           	opt callstack 0
   337  0000B0                     	ds	20
   338                           
   339                           	psect	bssBANK1
   340  000100                     __pbssBANK1:
   341                           	opt callstack 0
   342  000100                     _pulsonic:
   343                           	opt callstack 0
   344  000100                     	ds	123
   345                           
   346                           	psect	cstackCOMRAM
   347  000001                     __pcstackCOMRAM:
   348                           	opt callstack 0
   349  000001                     ??_ikey_is_accessible:
   350  000001                     ??_multiplexedDisp_job:
   351  000001                     ?___wmul:
   352                           	opt callstack 0
   353  000001                     ?___lwdiv:
   354                           	opt callstack 0
   355  000001                     ?___lwmod:
   356                           	opt callstack 0
   357  000001                     ?___ftpack:
   358                           	opt callstack 0
   359  000001                     mpap_do1step@KI:
   360                           	opt callstack 0
   361  000001                     ikb_init@i:
   362                           	opt callstack 0
   363  000001                     ikb_key_is_ready2read@k:
   364                           	opt callstack 0
   365  000001                     ikey_clear_all_flag@i:
   366                           	opt callstack 0
   367  000001                     multiplexedDisp_init@i:
   368                           	opt callstack 0
   369  000001                     ___wmul@multiplier:
   370                           	opt callstack 0
   371  000001                     ___lwdiv@dividend:
   372                           	opt callstack 0
   373  000001                     ___lwmod@dividend:
   374                           	opt callstack 0
   375  000001                     ___ftpack@arg:
   376                           	opt callstack 0
   377                           
   378                           ; 3 bytes @ 0x0
   379  000001                     	ds	1
   380  000002                     ??_mpap_homming:
   381  000002                     mpap_normal_mode@cod_ret:
   382                           	opt callstack 0
   383  000002                     ikey_scan@k:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0x1
   387  000002                     	ds	1
   388  000003                     mpap_homming@cod_ret:
   389                           	opt callstack 0
   390  000003                     ikey_is_accessible@k:
   391                           	opt callstack 0
   392  000003                     ___wmul@multiplicand:
   393                           	opt callstack 0
   394  000003                     ___lwdiv@divisor:
   395                           	opt callstack 0
   396  000003                     ___lwmod@divisor:
   397                           	opt callstack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000003                     	ds	1
   401  000004                     ___ftpack@exp:
   402                           	opt callstack 0
   403                           
   404                           ; 1 bytes @ 0x3
   405  000004                     	ds	1
   406  000005                     ___ftpack@sign:
   407                           	opt callstack 0
   408  000005                     ___lwmod@counter:
   409                           	opt callstack 0
   410  000005                     ___wmul@product:
   411                           	opt callstack 0
   412  000005                     ___lwdiv@quotient:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x4
   416  000005                     	ds	1
   417  000006                     ??___ftpack:
   418                           
   419                           ; 1 bytes @ 0x5
   420  000006                     	ds	1
   421  000007                     multiplexedDisp_job@q:
   422                           	opt callstack 0
   423  000007                     ___lwdiv@counter:
   424                           	opt callstack 0
   425  000007                     mpap_setupToTurn@numSteps_tomove:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x6
   429  000007                     	ds	1
   430  000008                     multiplexedDisp_job@i:
   431                           	opt callstack 0
   432  000008                     utoa@buf:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x7
   436  000008                     	ds	1
   437  000009                     ?___ftadd:
   438                           	opt callstack 0
   439  000009                     ?___ftmul:
   440                           	opt callstack 0
   441  000009                     ?___awtoft:
   442                           	opt callstack 0
   443  000009                     ?___lwtoft:
   444                           	opt callstack 0
   445  000009                     _mpap_setupToTurn$149:
   446                           	opt callstack 0
   447  000009                     ___awtoft@c:
   448                           	opt callstack 0
   449  000009                     ___lwtoft@c:
   450                           	opt callstack 0
   451  000009                     utoa@val:
   452                           	opt callstack 0
   453  000009                     ___ftadd@f1:
   454                           	opt callstack 0
   455  000009                     ___ftmul@f1:
   456                           	opt callstack 0
   457                           
   458                           ; 3 bytes @ 0x8
   459  000009                     	ds	2
   460  00000B                     nozzle_moveto@nozzle:
   461                           	opt callstack 0
   462  00000B                     utoa@base:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0xA
   466  00000B                     	ds	1
   467  00000C                     ___awtoft@sign:
   468                           	opt callstack 0
   469  00000C                     ___ftadd@f2:
   470                           	opt callstack 0
   471  00000C                     ___ftge@ff1:
   472                           	opt callstack 0
   473  00000C                     ___ftmul@f2:
   474                           	opt callstack 0
   475                           
   476                           ; 3 bytes @ 0xB
   477  00000C                     	ds	1
   478  00000D                     utoa@v:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0xC
   482  00000D                     	ds	2
   483  00000F                     ??___ftadd:
   484  00000F                     ??___ftmul:
   485  00000F                     utoa@c:
   486                           	opt callstack 0
   487  00000F                     ___ftge@ff2:
   488                           	opt callstack 0
   489                           
   490                           ; 3 bytes @ 0xE
   491  00000F                     	ds	1
   492  000010                     itoa@buf:
   493                           	opt callstack 0
   494                           
   495                           ; 1 bytes @ 0xF
   496  000010                     	ds	1
   497  000011                     itoa@val:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x10
   501  000011                     	ds	1
   502  000012                     ??___ftge:
   503  000012                     ___ftadd@sign:
   504                           	opt callstack 0
   505  000012                     ___ftmul@exp:
   506                           	opt callstack 0
   507                           
   508                           ; 1 bytes @ 0x11
   509  000012                     	ds	1
   510  000013                     ___ftadd@exp2:
   511                           	opt callstack 0
   512  000013                     itoa@base:
   513                           	opt callstack 0
   514  000013                     ___ftmul@f3_as_product:
   515                           	opt callstack 0
   516                           
   517                           ; 3 bytes @ 0x12
   518  000013                     	ds	1
   519  000014                     ___ftadd@exp1:
   520                           	opt callstack 0
   521                           
   522                           ; 1 bytes @ 0x13
   523  000014                     	ds	1
   524  000015                     ??_ikey_parsing:
   525  000015                     ?___ftsub:
   526                           	opt callstack 0
   527  000015                     ___ftsub@f1:
   528                           	opt callstack 0
   529                           
   530                           ; 3 bytes @ 0x14
   531  000015                     	ds	1
   532  000016                     ___ftmul@cntr:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x15
   536  000016                     	ds	1
   537  000017                     ___ftmul@sign:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x16
   541  000017                     	ds	1
   542  000018                     ?___fttol:
   543                           	opt callstack 0
   544  000018                     ___ftsub@f2:
   545                           	opt callstack 0
   546  000018                     ___fttol@f1:
   547                           	opt callstack 0
   548                           
   549                           ; 3 bytes @ 0x17
   550  000018                     	ds	1
   551  000019                     ikey_parsing@k:
   552                           	opt callstack 0
   553                           
   554                           ; 1 bytes @ 0x18
   555  000019                     	ds	1
   556  00001A                     
   557                           ; 1 bytes @ 0x19
   558  00001A                     	ds	1
   559  00001B                     
   560                           ; 1 bytes @ 0x1A
   561  00001B                     	ds	1
   562  00001C                     ??___fttol:
   563                           
   564                           ; 1 bytes @ 0x1B
   565  00001C                     	ds	5
   566  000021                     ___fttol@sign1:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x20
   570  000021                     	ds	1
   571  000022                     ___fttol@lval:
   572                           	opt callstack 0
   573                           
   574                           ; 4 bytes @ 0x21
   575  000022                     	ds	4
   576  000026                     ___fttol@exp1:
   577                           	opt callstack 0
   578                           
   579                           ; 1 bytes @ 0x25
   580  000026                     	ds	1
   581  000027                     disp_show_quantity@f:
   582                           	opt callstack 0
   583                           
   584                           ; 3 bytes @ 0x26
   585  000027                     	ds	3
   586  00002A                     ??_disp_show_quantity:
   587                           
   588                           ; 1 bytes @ 0x29
   589  00002A                     	ds	1
   590  00002B                     disp_show_quantity@buff:
   591                           	opt callstack 0
   592                           
   593                           ; 10 bytes @ 0x2A
   594  00002B                     	ds	10
   595  000035                     disp_show_quantity@real:
   596                           	opt callstack 0
   597                           
   598                           ; 3 bytes @ 0x34
   599  000035                     	ds	3
   600  000038                     disp_show_quantity@num:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x37
   604  000038                     	ds	1
   605  000039                     disp_show_quantity@last_pos:
   606                           	opt callstack 0
   607                           
   608                           ; 1 bytes @ 0x38
   609  000039                     	ds	1
   610  00003A                     disp_show_quantity@q:
   611                           	opt callstack 0
   612                           
   613                           ; 1 bytes @ 0x39
   614  00003A                     	ds	1
   615  00003B                     disp_show_quantity@I:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x3A
   619  00003B                     	ds	2
   620  00003D                     disp_show_quantity@i:
   621                           	opt callstack 0
   622                           
   623                           ; 1 bytes @ 0x3C
   624  00003D                     	ds	1
   625  00003E                     main@c:
   626                           	opt callstack 0
   627                           
   628                           ; 1 bytes @ 0x3D
   629  00003E                     	ds	1
   630  00003F                     main@c_disp:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x3E
   634  00003F                     	ds	1
   635                           
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 275 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  c_disp          1   62[COMRAM] char 
   646 ;;  c               1   61[COMRAM] char 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 3F/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   656 ;;      Params:         0       0       0       0       0       0       0       0       0
   657 ;;      Locals:         2       0       0       0       0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0
   659 ;;      Totals:         2       0       0       0       0       0       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels required when called:    5
   662 ;; This function calls:
   663 ;;		_disp_show_quantity
   664 ;;		_display7s_init
   665 ;;		_display7s_job
   666 ;;		_ikb_flush
   667 ;;		_ikb_init
   668 ;;		_ikb_job
   669 ;;		_ikb_key_is_ready2read
   670 ;;		_mpap_job
   671 ;;		_mpap_setupToHomming
   672 ;;		_mpap_stop
   673 ;;		_nozzle_moveto
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text0
   680  001420                     __ptext0:
   681                           	opt callstack 0
   682  001420                     _main:
   683                           	opt callstack 26
   684                           
   685                           ;main.c: 277: LATA = 0x00;
   686                           
   687                           ;incstack = 0
   688  001420  0E00               	movlw	0
   689  001422  6E89               	movwf	3977,c	;volatile
   690                           
   691                           ;main.c: 278: LATC = 0x00;
   692  001424  0E00               	movlw	0
   693  001426  6E8B               	movwf	3979,c	;volatile
   694                           
   695                           ;main.c: 279: LATD = 0x00;
   696  001428  0E00               	movlw	0
   697  00142A  6E8C               	movwf	3980,c	;volatile
   698                           
   699                           ;main.c: 280: LATE = 0x00;
   700  00142C  0E00               	movlw	0
   701  00142E  6E8D               	movwf	3981,c	;volatile
   702                           
   703                           ;main.c: 281: LATB = 0x00;
   704  001430  0E00               	movlw	0
   705  001432  6E8A               	movwf	3978,c	;volatile
   706                           
   707                           ;main.c: 285: ADCON1 = 0x0F;
   708  001434  0E0F               	movlw	15
   709  001436  6EC1               	movwf	4033,c	;volatile
   710                           
   711                           ;main.c: 286: CMCON=0xCF;
   712  001438  0ECF               	movlw	207
   713  00143A  6EB4               	movwf	4020,c	;volatile
   714                           
   715                           ;main.c: 289: UCON = 0;
   716  00143C  0E00               	movlw	0
   717  00143E  6E6D               	movwf	3949,c	;volatile
   718                           
   719                           ;main.c: 290: UCFG = 1<<3;
   720  001440  0E08               	movlw	8
   721  001442  6E6F               	movwf	3951,c	;volatile
   722                           
   723                           ;main.c: 296: T0CON = 0B10000111;
   724  001444  0E87               	movlw	135
   725  001446  6ED5               	movwf	4053,c	;volatile
   726                           
   727                           ;main.c: 297: t=(uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) );
   728  001448  0EFF               	movlw	255
   729  00144A  0100               	movlb	0	; () banked
   730  00144C  6FC5               	movwf	(_t+1)& (0+255),b
   731  00144E  0ED1               	movlw	209
   732  001450  6FC4               	movwf	_t& (0+255),b
   733                           
   734                           ; BSR set to: 0
   735                           ;main.c: 298: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ) >
      +                          > 8);
   736  001452  68D7               	setf	4055,c	;volatile
   737                           
   738                           ;main.c: 299: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ));
   739  001454  0ED1               	movlw	209
   740  001456  6ED6               	movwf	4054,c	;volatile
   741                           
   742                           ; BSR set to: 0
   743                           ;main.c: 300: TMR0IE = 1;
   744  001458  8AF2               	bsf	4082,5,c	;volatile
   745                           
   746                           ; BSR set to: 0
   747  00145A  808D               	bsf	3981,0,c	;volatile
   748                           
   749                           ; BSR set to: 0
   750  00145C  9096               	bcf	3990,0,c	;volatile
   751                           
   752                           ; BSR set to: 0
   753  00145E  9095               	bcf	3989,0,c	;volatile
   754                           
   755                           ; BSR set to: 0
   756  001460  9295               	bcf	3989,1,c	;volatile
   757                           
   758                           ; BSR set to: 0
   759  001462  9495               	bcf	3989,2,c	;volatile
   760                           
   761                           ; BSR set to: 0
   762  001464  9695               	bcf	3989,3,c	;volatile
   763                           
   764                           ; BSR set to: 0
   765  001466  928B               	bcf	3979,1,c	;volatile
   766                           
   767                           ; BSR set to: 0
   768  001468  9294               	bcf	3988,1,c	;volatile
   769                           
   770                           ; BSR set to: 0
   771  00146A  8296               	bsf	3990,1,c	;volatile
   772                           
   773                           ; BSR set to: 0
   774                           ;main.c: 316: display7s_init();
   775  00146C  EC82  F00D         	call	_display7s_init	;wreg free
   776                           
   777                           ;main.c: 317: ikb_init();
   778  001470  EC6E  F00B         	call	_ikb_init	;wreg free
   779                           
   780                           ; BSR set to: 0
   781                           ;main.c: 319: disp_show_quantity(1.8);
   782  001474  0E66               	movlw	102
   783  001476  6E27               	movwf	disp_show_quantity@f,c
   784  001478  0EE6               	movlw	230
   785  00147A  6E28               	movwf	disp_show_quantity@f+1,c
   786  00147C  0E3F               	movlw	63
   787  00147E  6E29               	movwf	disp_show_quantity@f+2,c
   788  001480  EC1F  F007         	call	_disp_show_quantity	;wreg free
   789                           
   790                           ;main.c: 321: GIE = 1;
   791  001484  8EF2               	bsf	4082,7,c	;volatile
   792                           
   793                           ;main.c: 322: int8_t c=0;
   794  001486  0E00               	movlw	0
   795  001488  6E3E               	movwf	main@c,c
   796                           
   797                           ;main.c: 323: int8_t c_disp=0;
   798  00148A  0E00               	movlw	0
   799  00148C  6E3F               	movwf	main@c_disp,c
   800  00148E                     l3065:
   801                           
   802                           ;main.c: 325: {;main.c: 326: if (isr_flag.f1ms)
   803  00148E  A052               	btfss	_isr_flag,0,c	;volatile
   804  001490  D002               	goto	l194
   805                           
   806                           ;main.c: 327: {;main.c: 328: isr_flag.f1ms = 0;
   807  001492  9052               	bcf	_isr_flag,0,c	;volatile
   808                           
   809                           ;main.c: 329: main_flag.f1ms = 1;
   810  001494  8051               	bsf	_main_flag,0,c	;volatile
   811  001496                     l194:
   812                           
   813                           ;main.c: 330: };main.c: 332: if (main_flag.f1ms)
   814  001496  A051               	btfss	_main_flag,0,c	;volatile
   815  001498  D03A               	goto	l3099
   816                           
   817                           ;main.c: 333: {;main.c: 334: if (++c==20)
   818  00149A  2A3E               	incf	main@c,f,c
   819  00149C  0E14               	movlw	20
   820  00149E  183E               	xorwf	main@c,w,c
   821  0014A0  A4D8               	btfss	status,2,c
   822  0014A2  D02C               	goto	l196
   823                           
   824                           ;main.c: 335: {;main.c: 336: c = 0;
   825  0014A4  0E00               	movlw	0
   826  0014A6  6E3E               	movwf	main@c,c
   827                           
   828                           ;main.c: 338: ikb_job();
   829  0014A8  EC83  F00F         	call	_ikb_job	;wreg free
   830                           
   831                           ;main.c: 340: if (ikb_key_is_ready2read(0))
   832  0014AC  0E00               	movlw	0
   833  0014AE  EC33  F00F         	call	_ikb_key_is_ready2read
   834  0014B2  0900               	iorlw	0
   835  0014B4  B4D8               	btfsc	status,2,c
   836  0014B6  D002               	goto	l3079
   837                           
   838                           ; BSR set to: 0
   839  0014B8  0E01               	movlw	1
   840  0014BA  1A8A               	xorwf	3978,f,c	;volatile
   841  0014BC                     l3079:
   842                           
   843                           ; BSR set to: 0
   844                           ;main.c: 343: };main.c: 344: if (ikb_key_is_ready2read(1))
   845  0014BC  0E01               	movlw	1
   846  0014BE  EC33  F00F         	call	_ikb_key_is_ready2read
   847  0014C2  0900               	iorlw	0
   848  0014C4  B4D8               	btfsc	status,2,c
   849  0014C6  D002               	goto	l3083
   850                           
   851                           ; BSR set to: 0
   852  0014C8  0E02               	movlw	2
   853  0014CA  1A8A               	xorwf	3978,f,c	;volatile
   854  0014CC                     l3083:
   855                           
   856                           ; BSR set to: 0
   857                           ;main.c: 347: };main.c: 348: if (ikb_key_is_ready2read(2))
   858  0014CC  0E02               	movlw	2
   859  0014CE  EC33  F00F         	call	_ikb_key_is_ready2read
   860  0014D2  0900               	iorlw	0
   861  0014D4  B4D8               	btfsc	status,2,c
   862  0014D6  D002               	goto	l3087
   863                           
   864                           ; BSR set to: 0
   865  0014D8  0E04               	movlw	4
   866  0014DA  1A8A               	xorwf	3978,f,c	;volatile
   867  0014DC                     l3087:
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 351: };main.c: 352: if (ikb_key_is_ready2read(3))
   871  0014DC  0E03               	movlw	3
   872  0014DE  EC33  F00F         	call	_ikb_key_is_ready2read
   873  0014E2  0900               	iorlw	0
   874  0014E4  B4D8               	btfsc	status,2,c
   875  0014E6  D002               	goto	l3091
   876                           
   877                           ; BSR set to: 0
   878  0014E8  0E08               	movlw	8
   879  0014EA  1A8A               	xorwf	3978,f,c	;volatile
   880  0014EC                     l3091:
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 355: };main.c: 356: if (ikb_key_is_ready2read(4))
   884  0014EC  0E04               	movlw	4
   885  0014EE  EC33  F00F         	call	_ikb_key_is_ready2read
   886  0014F2  0900               	iorlw	0
   887  0014F4  B4D8               	btfsc	status,2,c
   888  0014F6  D002               	goto	l196
   889                           
   890                           ; BSR set to: 0
   891  0014F8  0E10               	movlw	16
   892  0014FA  1A8A               	xorwf	3978,f,c	;volatile
   893  0014FC                     l196:
   894                           
   895                           ;main.c: 359: };main.c: 360: };main.c: 362: if (++c_disp == 2)
   896  0014FC  2A3F               	incf	main@c_disp,f,c
   897  0014FE  0E02               	movlw	2
   898  001500  183F               	xorwf	main@c_disp,w,c
   899  001502  A4D8               	btfss	status,2,c
   900  001504  D004               	goto	l3099
   901                           
   902                           ;main.c: 363: {;main.c: 364: c_disp = 0;
   903  001506  0E00               	movlw	0
   904  001508  6E3F               	movwf	main@c_disp,c
   905                           
   906                           ;main.c: 365: display7s_job();
   907  00150A  ECFF  F00E         	call	_display7s_job	;wreg free
   908  00150E                     l3099:
   909                           
   910                           ;main.c: 366: };main.c: 367: };main.c: 370: main_flag.f1ms = 0;
   911  00150E  9051               	bcf	_main_flag,0,c	;volatile
   912                           
   913                           ;main.c: 371: ikb_flush();
   914  001510  EC9D  F00F         	call	_ikb_flush	;wreg free
   915  001514  D7BC               	goto	l3065
   916  001516                     __end_of_main:
   917                           	opt callstack 0
   918                           
   919 ;; *************** function _nozzle_moveto *****************
   920 ;; Defined at:
   921 ;;		line 174 in file "main.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  nozzle          1    wreg     char 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  nozzle          1   10[COMRAM] char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   935 ;;      Params:         0       0       0       0       0       0       0       0       0
   936 ;;      Locals:         1       0       0       0       0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0
   938 ;;      Totals:         1       0       0       0       0       0       0       0       0
   939 ;;Total ram usage:        1 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    2
   942 ;; This function calls:
   943 ;;		___wmul
   944 ;;		_mpap_setupToTurn
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text1
   951  001D86                     __ptext1:
   952                           	opt callstack 0
   953  001D86                     _nozzle_moveto:
   954                           	opt callstack 28
   955                           
   956                           ; BSR set to: 0
   957                           ;incstack = 0
   958                           ;nozzle_moveto@nozzle stored from wreg
   959  001D86  6E0B               	movwf	nozzle_moveto@nozzle,c
   960                           
   961                           ;main.c: 177: mpap_setupToTurn( (nozzle*200) - mpap.numSteps_current);
   962  001D88  500B               	movf	nozzle_moveto@nozzle,w,c
   963  001D8A  6E01               	movwf	___wmul@multiplier,c
   964  001D8C  6A02               	clrf	___wmul@multiplier+1,c
   965  001D8E  BE01               	btfsc	___wmul@multiplier,7,c
   966  001D90  0602               	decf	___wmul@multiplier+1,f,c
   967  001D92  0E00               	movlw	0
   968  001D94  6E04               	movwf	___wmul@multiplicand+1,c
   969  001D96  0EC8               	movlw	200
   970  001D98  6E03               	movwf	___wmul@multiplicand,c
   971  001D9A  ECEC  F00E         	call	___wmul	;wreg free
   972  001D9E  5040               	movf	_mpap,w,c	;volatile
   973  001DA0  5C01               	subwf	?___wmul,w,c
   974  001DA2  6E07               	movwf	mpap_setupToTurn@numSteps_tomove,c
   975  001DA4  5041               	movf	_mpap+1,w,c	;volatile
   976  001DA6  5802               	subwfb	?___wmul+1,w,c
   977  001DA8  6E08               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
   978  001DAA  ECAB  F00E         	call	_mpap_setupToTurn	;wreg free
   979  001DAE  0012               	return		;funcret
   980  001DB0                     __end_of_nozzle_moveto:
   981                           	opt callstack 0
   982                           
   983 ;; *************** function ___wmul *****************
   984 ;; Defined at:
   985 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  multiplier      2    0[COMRAM] unsigned int 
   988 ;;  multiplicand    2    2[COMRAM] unsigned int 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  product         2    4[COMRAM] unsigned int 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  2    0[COMRAM] unsigned int 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, prodl, prodh
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1000 ;;      Params:         4       0       0       0       0       0       0       0       0
  1001 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1003 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1004 ;;Total ram usage:        6 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_nozzle_moveto
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text2
  1015  001DD8                     __ptext2:
  1016                           	opt callstack 0
  1017  001DD8                     ___wmul:
  1018                           	opt callstack 28
  1019                           
  1020                           ;incstack = 0
  1021  001DD8  5001               	movf	___wmul@multiplier,w,c
  1022  001DDA  0203               	mulwf	___wmul@multiplicand,c
  1023  001DDC  CFF3 F005          	movff	prodl,___wmul@product
  1024  001DE0  CFF4 F006          	movff	prodh,___wmul@product+1
  1025  001DE4  5001               	movf	___wmul@multiplier,w,c
  1026  001DE6  0204               	mulwf	___wmul@multiplicand+1,c
  1027  001DE8  50F3               	movf	prodl,w,c
  1028  001DEA  2606               	addwf	___wmul@product+1,f,c
  1029  001DEC  5002               	movf	___wmul@multiplier+1,w,c
  1030  001DEE  0203               	mulwf	___wmul@multiplicand,c
  1031  001DF0  50F3               	movf	prodl,w,c
  1032  001DF2  2606               	addwf	___wmul@product+1,f,c
  1033  001DF4  C005  F001         	movff	___wmul@product,?___wmul
  1034  001DF8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1035  001DFC  0012               	return		;funcret
  1036  001DFE                     __end_of___wmul:
  1037                           	opt callstack 0
  1038                           
  1039 ;; *************** function _mpap_stop *****************
  1040 ;; Defined at:
  1041 ;;		line 186 in file "main.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    2
  1062 ;; This function calls:
  1063 ;;		__mpap_off
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text3
  1070  001EBC                     __ptext3:
  1071                           	opt callstack 0
  1072  001EBC                     _mpap_stop:
  1073                           	opt callstack 28
  1074                           
  1075                           ;main.c: 188: mpap.numSteps_tomove = 0x00;
  1076                           
  1077                           ;incstack = 0
  1078  001EBC  0E00               	movlw	0
  1079  001EBE  6E45               	movwf	_mpap+5,c	;volatile
  1080  001EC0  0E00               	movlw	0
  1081  001EC2  6E44               	movwf	_mpap+4,c	;volatile
  1082                           
  1083                           ;main.c: 189: mpap_off();
  1084  001EC4  EC6A  F00F         	call	__mpap_off	;wreg free
  1085  001EC8  0012               	return		;funcret
  1086  001ECA                     __end_of_mpap_stop:
  1087                           	opt callstack 0
  1088                           
  1089 ;; *************** function __mpap_off *****************
  1090 ;; Defined at:
  1091 ;;		line 117 in file "main.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		status,2, status,0
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_mpap_stop
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text4
  1120  001ED4                     __ptext4:
  1121                           	opt callstack 0
  1122  001ED4                     __mpap_off:
  1123                           	opt callstack 28
  1124                           
  1125                           ;incstack = 0
  1126                           ;main.c: 119: do{LATD &= ~(1<<0);}while(0);
  1127  001ED4  908C               	bcf	3980,0,c	;volatile
  1128                           
  1129                           ;main.c: 120: do{LATD &= ~(1<<1);}while(0);
  1130  001ED6  928C               	bcf	3980,1,c	;volatile
  1131                           
  1132                           ;main.c: 121: do{LATD &= ~(1<<2);}while(0);
  1133  001ED8  948C               	bcf	3980,2,c	;volatile
  1134                           
  1135                           ;main.c: 122: do{LATD &= ~(1<<3);}while(0);
  1136  001EDA  968C               	bcf	3980,3,c	;volatile
  1137  001EDC  0012               	return		;funcret
  1138  001EDE                     __end_of__mpap_off:
  1139                           	opt callstack 0
  1140                           
  1141 ;; *************** function _mpap_setupToHomming *****************
  1142 ;; Defined at:
  1143 ;;		line 167 in file "main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    2
  1164 ;; This function calls:
  1165 ;;		_mpap_setupToTurn
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text5
  1172  001EAA                     __ptext5:
  1173                           	opt callstack 0
  1174  001EAA                     _mpap_setupToHomming:
  1175                           	opt callstack 28
  1176                           
  1177                           ;main.c: 169: mpap_setupToTurn( -1 *( (18*200) +20));
  1178                           
  1179                           ;incstack = 0
  1180  001EAA  0EF1               	movlw	241
  1181  001EAC  6E08               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1182  001EAE  0EDC               	movlw	220
  1183  001EB0  6E07               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1184  001EB2  ECAB  F00E         	call	_mpap_setupToTurn	;wreg free
  1185                           
  1186                           ;main.c: 172: mpap.mode = HOMMING_MODE;
  1187  001EB6  0E02               	movlw	2
  1188  001EB8  6E47               	movwf	_mpap+7,c	;volatile
  1189  001EBA  0012               	return		;funcret
  1190  001EBC                     __end_of_mpap_setupToHomming:
  1191                           	opt callstack 0
  1192                           
  1193 ;; *************** function _mpap_setupToTurn *****************
  1194 ;; Defined at:
  1195 ;;		line 155 in file "main.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  numSteps_tom    2    6[COMRAM] int 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1209 ;;      Params:         2       0       0       0       0       0       0       0       0
  1210 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1212 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1213 ;;Total ram usage:        4 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_mpap_setupToHomming
  1220 ;;		_nozzle_moveto
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text6
  1225  001D56                     __ptext6:
  1226                           	opt callstack 0
  1227  001D56                     _mpap_setupToTurn:
  1228                           	opt callstack 28
  1229                           
  1230                           ;main.c: 158: if (numSteps_tomove !=0)
  1231                           
  1232                           ;incstack = 0
  1233  001D56  5007               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  1234  001D58  1008               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  1235  001D5A  B4D8               	btfsc	status,2,c
  1236  001D5C  0012               	return	
  1237                           
  1238                           ;main.c: 159: {;main.c: 160: mpap.numSteps_tomove = numSteps_tomove;
  1239  001D5E  C007  F044         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  1240  001D62  C008  F045         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  1241                           
  1242                           ;main.c: 161: mpap.KI = (mpap.numSteps_tomove<0)? -1: 1;
  1243  001D66  BE45               	btfsc	_mpap+5,7,c	;volatile
  1244  001D68  D005               	goto	l126
  1245  001D6A  0E00               	movlw	0
  1246  001D6C  6E0A               	movwf	_mpap_setupToTurn$149+1,c
  1247  001D6E  0E01               	movlw	1
  1248  001D70  6E09               	movwf	_mpap_setupToTurn$149,c
  1249  001D72  D002               	goto	l128
  1250  001D74                     l126:
  1251  001D74  6809               	setf	_mpap_setupToTurn$149,c
  1252  001D76  680A               	setf	_mpap_setupToTurn$149+1,c
  1253  001D78                     l128:
  1254  001D78  C009  F046         	movff	_mpap_setupToTurn$149,_mpap+6	;volatile
  1255                           
  1256                           ;main.c: 163: mpap.counter_steps = 0;
  1257  001D7C  0E00               	movlw	0
  1258  001D7E  6E43               	movwf	_mpap+3,c	;volatile
  1259  001D80  0E00               	movlw	0
  1260  001D82  6E42               	movwf	_mpap+2,c	;volatile
  1261  001D84  0012               	return		;funcret
  1262  001D86                     __end_of_mpap_setupToTurn:
  1263                           	opt callstack 0
  1264                           
  1265 ;; *************** function _mpap_job *****************
  1266 ;; Defined at:
  1267 ;;		line 257 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  cod_ret         1    0        char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      char 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1284 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1285 ;;Total ram usage:        1 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    4
  1288 ;; This function calls:
  1289 ;;		_mpap_homming
  1290 ;;		_mpap_normal_mode
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text7
  1297  001DB0                     __ptext7:
  1298                           	opt callstack 0
  1299  001DB0                     _mpap_job:
  1300                           	opt callstack 26
  1301                           
  1302                           ;main.c: 259: int8_t cod_ret;;main.c: 261: if (mpap.mode == HOMMING_MODE)
  1303                           
  1304                           ;incstack = 0
  1305  001DB0  0E02               	movlw	2
  1306  001DB2  1847               	xorwf	_mpap+7,w,c	;volatile
  1307  001DB4  A4D8               	btfss	status,2,c
  1308  001DB6  D003               	goto	l2877
  1309  001DB8  EC2D  F00D         	call	_mpap_homming	;wreg free
  1310  001DBC  0012               	return	
  1311  001DBE                     l2877:
  1312                           
  1313                           ;main.c: 263: else if (mpap.mode == NORMAL_MODE)
  1314  001DBE  0E03               	movlw	3
  1315  001DC0  1847               	xorwf	_mpap+7,w,c	;volatile
  1316  001DC2  A4D8               	btfss	status,2,c
  1317  001DC4  D003               	goto	l2881
  1318  001DC6  ECD0  F00D         	call	_mpap_normal_mode	;wreg free
  1319  001DCA  0012               	return	
  1320  001DCC                     l2881:
  1321                           
  1322                           ;main.c: 266: else if (mpap.mode == STALL_MODE)
  1323  001DCC  0447               	decf	_mpap+7,w,c	;volatile
  1324  001DCE  A4D8               	btfss	status,2,c
  1325  001DD0  0012               	return	
  1326                           
  1327                           ;main.c: 267: mpap.mode = IDLE_MODE;
  1328  001DD2  0E00               	movlw	0
  1329  001DD4  6E47               	movwf	_mpap+7,c	;volatile
  1330  001DD6  0012               	return	
  1331  001DD8                     __end_of_mpap_job:
  1332                           	opt callstack 0
  1333                           
  1334 ;; *************** function _mpap_normal_mode *****************
  1335 ;; Defined at:
  1336 ;;		line 237 in file "main.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  cod_ret         1    1[COMRAM] char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      char 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1350 ;;      Params:         0       0       0       0       0       0       0       0       0
  1351 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1353 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1354 ;;Total ram usage:        1 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    3
  1357 ;; This function calls:
  1358 ;;		_mpap_do1step
  1359 ;; This function is called by:
  1360 ;;		_mpap_job
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text8
  1365  001BA0                     __ptext8:
  1366                           	opt callstack 0
  1367  001BA0                     _mpap_normal_mode:
  1368                           	opt callstack 26
  1369                           
  1370                           ;main.c: 239: int8_t cod_ret = 0;
  1371                           
  1372                           ;incstack = 0
  1373  001BA0  0E00               	movlw	0
  1374  001BA2  6E02               	movwf	mpap_normal_mode@cod_ret,c
  1375                           
  1376                           ;main.c: 240: if (mpap.numSteps_tomove!=0)
  1377  001BA4  5044               	movf	_mpap+4,w,c	;volatile
  1378  001BA6  1045               	iorwf	_mpap+5,w,c	;volatile
  1379  001BA8  B4D8               	btfsc	status,2,c
  1380  001BAA  D01C               	goto	l154
  1381                           
  1382                           ;main.c: 241: {;main.c: 242: mpap_do1step(mpap.KI);
  1383  001BAC  5046               	movf	_mpap+6,w,c	;volatile
  1384  001BAE  ECF4  F00D         	call	_mpap_do1step
  1385                           
  1386                           ;main.c: 244: mpap.counter_steps+= mpap.KI;
  1387  001BB2  5046               	movf	_mpap+6,w,c	;volatile
  1388  001BB4  2642               	addwf	_mpap+2,f,c	;volatile
  1389  001BB6  0E00               	movlw	0
  1390  001BB8  BE46               	btfsc	_mpap+6,7,c	;volatile
  1391  001BBA  0EFF               	movlw	255
  1392  001BBC  2243               	addwfc	_mpap+3,f,c	;volatile
  1393                           
  1394                           ;main.c: 246: mpap.numSteps_current+= mpap.KI;
  1395  001BBE  5046               	movf	_mpap+6,w,c	;volatile
  1396  001BC0  2640               	addwf	_mpap,f,c	;volatile
  1397  001BC2  0E00               	movlw	0
  1398  001BC4  BE46               	btfsc	_mpap+6,7,c	;volatile
  1399  001BC6  0EFF               	movlw	255
  1400  001BC8  2241               	addwfc	_mpap+1,f,c	;volatile
  1401                           
  1402                           ;main.c: 248: if ( mpap.counter_steps == mpap.numSteps_tomove)
  1403  001BCA  5044               	movf	_mpap+4,w,c	;volatile
  1404  001BCC  1842               	xorwf	_mpap+2,w,c	;volatile
  1405  001BCE  E10A               	bnz	l154
  1406  001BD0  5045               	movf	_mpap+5,w,c	;volatile
  1407  001BD2  1843               	xorwf	_mpap+3,w,c	;volatile
  1408  001BD4  A4D8               	btfss	status,2,c
  1409  001BD6  D006               	goto	l154
  1410                           
  1411                           ;main.c: 249: {;main.c: 250: mpap.numSteps_tomove = 0;
  1412  001BD8  0E00               	movlw	0
  1413  001BDA  6E45               	movwf	_mpap+5,c	;volatile
  1414  001BDC  0E00               	movlw	0
  1415  001BDE  6E44               	movwf	_mpap+4,c	;volatile
  1416                           
  1417                           ;main.c: 251: cod_ret = 1;
  1418  001BE0  0E01               	movlw	1
  1419  001BE2  6E02               	movwf	mpap_normal_mode@cod_ret,c
  1420  001BE4                     l154:
  1421                           
  1422                           ;main.c: 252: };main.c: 253: };main.c: 254: return cod_ret;
  1423  001BE4  5002               	movf	mpap_normal_mode@cod_ret,w,c
  1424  001BE6  0012               	return		;funcret
  1425  001BE8                     __end_of_mpap_normal_mode:
  1426                           	opt callstack 0
  1427                           
  1428 ;; *************** function _mpap_homming *****************
  1429 ;; Defined at:
  1430 ;;		line 214 in file "main.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  cod_ret         1    2[COMRAM] char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      char 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         0       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1447 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:        2 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    3
  1451 ;; This function calls:
  1452 ;;		_mpap_do1step
  1453 ;; This function is called by:
  1454 ;;		_mpap_job
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text9
  1459  001A5A                     __ptext9:
  1460                           	opt callstack 0
  1461  001A5A                     _mpap_homming:
  1462                           	opt callstack 26
  1463                           
  1464                           ;main.c: 216: int8_t cod_ret = 0;
  1465                           
  1466                           ;incstack = 0
  1467  001A5A  0E00               	movlw	0
  1468  001A5C  6E03               	movwf	mpap_homming@cod_ret,c
  1469                           
  1470                           ;main.c: 217: if (mpap.numSteps_tomove!=0)
  1471  001A5E  5044               	movf	_mpap+4,w,c	;volatile
  1472  001A60  1045               	iorwf	_mpap+5,w,c	;volatile
  1473  001A62  B4D8               	btfsc	status,2,c
  1474  001A64  D024               	goto	l148
  1475                           
  1476                           ;main.c: 218: {;main.c: 219: mpap_do1step(mpap.KI);
  1477  001A66  5046               	movf	_mpap+6,w,c	;volatile
  1478  001A68  ECF4  F00D         	call	_mpap_do1step
  1479                           
  1480                           ;main.c: 221: mpap.counter_steps+= mpap.KI;
  1481  001A6C  5046               	movf	_mpap+6,w,c	;volatile
  1482  001A6E  2642               	addwf	_mpap+2,f,c	;volatile
  1483  001A70  0E00               	movlw	0
  1484  001A72  BE46               	btfsc	_mpap+6,7,c	;volatile
  1485  001A74  0EFF               	movlw	255
  1486  001A76  2243               	addwfc	_mpap+3,f,c	;volatile
  1487                           
  1488                           ;main.c: 223: if (((PORTE & (1<<1))>>1) == 0)
  1489  001A78  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  1490  001A7C  90D8               	bcf	status,0,c
  1491  001A7E  3202               	rrcf	??_mpap_homming,f,c
  1492  001A80  B002               	btfsc	??_mpap_homming,0,c
  1493  001A82  D006               	goto	l2529
  1494                           
  1495                           ;main.c: 224: {;main.c: 225: mpap.numSteps_tomove = 0x0000;
  1496  001A84  0E00               	movlw	0
  1497  001A86  6E45               	movwf	_mpap+5,c	;volatile
  1498  001A88  0E00               	movlw	0
  1499  001A8A  6E44               	movwf	_mpap+4,c	;volatile
  1500                           
  1501                           ;main.c: 226: cod_ret = 1;
  1502  001A8C  0E01               	movlw	1
  1503  001A8E  6E03               	movwf	mpap_homming@cod_ret,c
  1504  001A90                     l2529:
  1505                           
  1506                           ;main.c: 227: };main.c: 228: if ( mpap.counter_steps == mpap.numSteps_tomove)
  1507  001A90  5044               	movf	_mpap+4,w,c	;volatile
  1508  001A92  1842               	xorwf	_mpap+2,w,c	;volatile
  1509  001A94  E10C               	bnz	l148
  1510  001A96  5045               	movf	_mpap+5,w,c	;volatile
  1511  001A98  1843               	xorwf	_mpap+3,w,c	;volatile
  1512  001A9A  A4D8               	btfss	status,2,c
  1513  001A9C  D008               	goto	l148
  1514                           
  1515                           ;main.c: 229: {;main.c: 230: mpap.numSteps_tomove = 0x0000;
  1516  001A9E  0E00               	movlw	0
  1517  001AA0  6E45               	movwf	_mpap+5,c	;volatile
  1518  001AA2  0E00               	movlw	0
  1519  001AA4  6E44               	movwf	_mpap+4,c	;volatile
  1520                           
  1521                           ;main.c: 231: cod_ret = 1;
  1522  001AA6  0E01               	movlw	1
  1523  001AA8  6E03               	movwf	mpap_homming@cod_ret,c
  1524                           
  1525                           ;main.c: 232: pulsonic.errors.flag.mpap_home_sensor = 1;
  1526  001AAA  0101               	movlb	1	; () banked
  1527  001AAC  8175               	bsf	(_pulsonic+117)& (0+255),0,b
  1528  001AAE                     l148:
  1529                           
  1530                           ;main.c: 233: };main.c: 234: };main.c: 235: return cod_ret;
  1531  001AAE  5003               	movf	mpap_homming@cod_ret,w,c
  1532  001AB0  0012               	return		;funcret
  1533  001AB2                     __end_of_mpap_homming:
  1534                           	opt callstack 0
  1535                           
  1536 ;; *************** function _mpap_do1step *****************
  1537 ;; Defined at:
  1538 ;;		line 194 in file "main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  KI              1    wreg     char 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  KI              1    0[COMRAM] char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0
  1553 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1555 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1556 ;;Total ram usage:        1 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    2
  1559 ;; This function calls:
  1560 ;;		__mpap_step1
  1561 ;;		__mpap_step2
  1562 ;;		__mpap_step3
  1563 ;;		__mpap_step4
  1564 ;; This function is called by:
  1565 ;;		_mpap_homming
  1566 ;;		_mpap_normal_mode
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text10
  1571  001BE8                     __ptext10:
  1572                           	opt callstack 0
  1573  001BE8                     _mpap_do1step:
  1574                           	opt callstack 26
  1575                           
  1576                           ;incstack = 0
  1577                           ;mpap_do1step@KI stored from wreg
  1578  001BE8  6E01               	movwf	mpap_do1step@KI,c
  1579                           
  1580                           ;main.c: 196: static int8_t i;;main.c: 197: mpap_step[i]();
  1581  001BEA  5050               	movf	mpap_do1step@i,w,c
  1582  001BEC  0D02               	mullw	2
  1583  001BEE  50F3               	movf	prodl,w,c
  1584  001BF0  0F53               	addlw	low _mpap_step
  1585  001BF2  6ED9               	movwf	fsr2l,c
  1586  001BF4  6ADA               	clrf	fsr2h,c
  1587  001BF6  D801               	call	u1718
  1588  001BF8  D00A               	goto	u1719
  1589  001BFA                     u1718:
  1590  001BFA  0005               	push	
  1591  001BFC  6EFA               	movwf	pclath,c
  1592  001BFE  50DE               	movf	postinc2,w,c
  1593  001C00  6EFD               	movwf	tosl,c
  1594  001C02  50DE               	movf	postinc2,w,c
  1595  001C04  6EFE               	movwf	tosh,c
  1596  001C06  50F8               	movf	tblptru,w,c
  1597  001C08  6EFF               	movwf	tosu,c
  1598  001C0A  50FA               	movf	pclath,w,c
  1599  001C0C  0012               	return		;indir
  1600  001C0E                     u1719:
  1601                           
  1602                           ;main.c: 198: i+=KI;
  1603  001C0E  5001               	movf	mpap_do1step@KI,w,c
  1604  001C10  2650               	addwf	mpap_do1step@i,f,c
  1605                           
  1606                           ;main.c: 199: if (i>3){i=0;}
  1607  001C12  5050               	movf	mpap_do1step@i,w,c
  1608  001C14  0A80               	xorlw	128
  1609  001C16  0F7C               	addlw	-132
  1610  001C18  A0D8               	btfss	status,0,c
  1611  001C1A  D002               	goto	l2325
  1612  001C1C  0E00               	movlw	0
  1613  001C1E  6E50               	movwf	mpap_do1step@i,c
  1614  001C20                     l2325:
  1615                           
  1616                           ;main.c: 200: if (i<0){i=3;}
  1617  001C20  AE50               	btfss	mpap_do1step@i,7,c
  1618  001C22  0012               	return	
  1619  001C24  0E03               	movlw	3
  1620  001C26  6E50               	movwf	mpap_do1step@i,c
  1621  001C28  0012               	return		;funcret
  1622  001C2A                     __end_of_mpap_do1step:
  1623                           	opt callstack 0
  1624                           
  1625 ;; *************** function __mpap_step3 *****************
  1626 ;; Defined at:
  1627 ;;		line 93 in file "main.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		status,2, status,0
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_mpap_do1step
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text11
  1656  001EDE                     __ptext11:
  1657                           	opt callstack 0
  1658  001EDE                     __mpap_step3:
  1659                           	opt callstack 26
  1660                           
  1661                           ;incstack = 0
  1662                           ;main.c: 95: do{LATD &= ~(1<<0);}while(0);
  1663  001EDE  908C               	bcf	3980,0,c	;volatile
  1664                           
  1665                           ;main.c: 96: do{LATD |= 1<<1;}while(0);
  1666  001EE0  828C               	bsf	3980,1,c	;volatile
  1667                           
  1668                           ;main.c: 97: do{LATD &= ~(1<<2);}while(0);
  1669  001EE2  948C               	bcf	3980,2,c	;volatile
  1670                           
  1671                           ;main.c: 98: do{LATD &= ~(1<<3);}while(0);
  1672  001EE4  968C               	bcf	3980,3,c	;volatile
  1673  001EE6  0012               	return		;funcret
  1674  001EE8                     __end_of__mpap_step3:
  1675                           	opt callstack 0
  1676                           
  1677 ;; *************** function __mpap_step2 *****************
  1678 ;; Defined at:
  1679 ;;		line 86 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1693 ;;      Params:         0       0       0       0       0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1696 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_mpap_do1step
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text12
  1708  001EE8                     __ptext12:
  1709                           	opt callstack 0
  1710  001EE8                     __mpap_step2:
  1711                           	opt callstack 26
  1712                           
  1713                           ;incstack = 0
  1714                           ;main.c: 88: do{LATD &= ~(1<<0);}while(0);
  1715  001EE8  908C               	bcf	3980,0,c	;volatile
  1716                           
  1717                           ;main.c: 89: do{LATD &= ~(1<<1);}while(0);
  1718  001EEA  928C               	bcf	3980,1,c	;volatile
  1719                           
  1720                           ;main.c: 90: do{LATD |= 1<<2;}while(0);
  1721  001EEC  848C               	bsf	3980,2,c	;volatile
  1722                           
  1723                           ;main.c: 91: do{LATD &= ~(1<<3);}while(0);
  1724  001EEE  968C               	bcf	3980,3,c	;volatile
  1725  001EF0  0012               	return		;funcret
  1726  001EF2                     __end_of__mpap_step2:
  1727                           	opt callstack 0
  1728                           
  1729 ;; *************** function __mpap_step1 *****************
  1730 ;; Defined at:
  1731 ;;		line 79 in file "main.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		status,2, status,0
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1748 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_mpap_do1step
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text13
  1760  001EF2                     __ptext13:
  1761                           	opt callstack 0
  1762  001EF2                     __mpap_step1:
  1763                           	opt callstack 26
  1764                           
  1765                           ;incstack = 0
  1766                           ;main.c: 81: do{LATD &= ~(1<<0);}while(0);
  1767  001EF2  908C               	bcf	3980,0,c	;volatile
  1768                           
  1769                           ;main.c: 82: do{LATD &= ~(1<<1);}while(0);
  1770  001EF4  928C               	bcf	3980,1,c	;volatile
  1771                           
  1772                           ;main.c: 83: do{LATD &= ~(1<<2);}while(0);
  1773  001EF6  948C               	bcf	3980,2,c	;volatile
  1774                           
  1775                           ;main.c: 84: do{LATD |= 1<<3;}while(0);
  1776  001EF8  868C               	bsf	3980,3,c	;volatile
  1777  001EFA  0012               	return		;funcret
  1778  001EFC                     __end_of__mpap_step1:
  1779                           	opt callstack 0
  1780                           
  1781 ;; *************** function __mpap_step4 *****************
  1782 ;; Defined at:
  1783 ;;		line 100 in file "main.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1797 ;;      Params:         0       0       0       0       0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1800 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1801 ;;Total ram usage:        0 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_mpap_do1step
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text14
  1812  001EFC                     __ptext14:
  1813                           	opt callstack 0
  1814  001EFC                     __mpap_step4:
  1815                           	opt callstack 26
  1816                           
  1817                           ;incstack = 0
  1818                           ;main.c: 102: do{LATD |= 1<<0;}while(0);
  1819  001EFC  808C               	bsf	3980,0,c	;volatile
  1820                           
  1821                           ;main.c: 103: do{LATD &= ~(1<<1);}while(0);
  1822  001EFE  928C               	bcf	3980,1,c	;volatile
  1823                           
  1824                           ;main.c: 104: do{LATD &= ~(1<<2);}while(0);
  1825  001F00  948C               	bcf	3980,2,c	;volatile
  1826                           
  1827                           ;main.c: 105: do{LATD &= ~(1<<3);}while(0);
  1828  001F02  968C               	bcf	3980,3,c	;volatile
  1829  001F04  0012               	return		;funcret
  1830  001F06                     __end_of__mpap_step4:
  1831                           	opt callstack 0
  1832                           
  1833 ;; *************** function _ikb_key_is_ready2read *****************
  1834 ;; Defined at:
  1835 ;;		line 427 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  k               1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  k               1    0[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      unsigned char 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 3F/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0
  1850 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1852 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1853 ;;Total ram usage:        1 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text15
  1864  001E66                     __ptext15:
  1865                           	opt callstack 0
  1866  001E66                     _ikb_key_is_ready2read:
  1867                           	opt callstack 29
  1868                           
  1869                           ;incstack = 0
  1870                           ;ikb_key_is_ready2read@k stored from wreg
  1871  001E66  6E01               	movwf	ikb_key_is_ready2read@k,c
  1872                           
  1873                           ;ikb.c: 429: return key[k].bf.ReadyToRead;
  1874  001E68  5001               	movf	ikb_key_is_ready2read@k,w,c
  1875  001E6A  0D10               	mullw	16
  1876  001E6C  50F3               	movf	prodl,w,c
  1877  001E6E  0F6A               	addlw	low (_key+10)
  1878  001E70  6ED9               	movwf	fsr2l,c
  1879  001E72  6ADA               	clrf	fsr2h,c
  1880  001E74  0100               	movlb	0	; () banked
  1881  001E76  ACDF               	btfss	indf2,6,c
  1882  001E78  D002               	goto	u3010
  1883  001E7A  0E01               	movlw	1
  1884  001E7C  0012               	return	
  1885  001E7E                     u3010:
  1886  001E7E  0E00               	movlw	0
  1887                           
  1888                           ; BSR set to: 0
  1889  001E80  0012               	return		;funcret
  1890  001E82                     __end_of_ikb_key_is_ready2read:
  1891                           	opt callstack 0
  1892                           
  1893 ;; *************** function _ikb_job *****************
  1894 ;; Defined at:
  1895 ;;		line 414 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1909 ;;      Params:         0       0       0       0       0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1912 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1913 ;;Total ram usage:        0 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    4
  1916 ;; This function calls:
  1917 ;;		_ikey_parsing
  1918 ;;		_ikey_scan
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text16
  1925  001F06                     __ptext16:
  1926                           	opt callstack 0
  1927  001F06                     _ikb_job:
  1928                           	opt callstack 26
  1929                           
  1930                           ;ikb.c: 416: ikey_scan();
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;incstack = 0
  1934  001F06  EC40  F009         	call	_ikey_scan	;wreg free
  1935                           
  1936                           ;ikb.c: 417: ikey_parsing();
  1937  001F0A  EC07  F004         	call	_ikey_parsing	;wreg free
  1938  001F0E  0012               	return		;funcret
  1939  001F10                     __end_of_ikb_job:
  1940                           	opt callstack 0
  1941                           
  1942 ;; *************** function _ikey_scan *****************
  1943 ;; Defined at:
  1944 ;;		line 449 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  k               1    1[COMRAM] char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1960 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1961 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1962 ;;Total ram usage:        2 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    2
  1965 ;; This function calls:
  1966 ;;		_keyRead_pin_key1
  1967 ;;		_keyRead_pin_key2
  1968 ;;		_keyRead_pin_key3
  1969 ;;		_keyRead_pin_key4
  1970 ;;		_keyRead_pin_key5
  1971 ;; This function is called by:
  1972 ;;		_ikb_job
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text17
  1977  001280                     __ptext17:
  1978                           	opt callstack 0
  1979  001280                     _ikey_scan:
  1980                           	opt callstack 27
  1981                           
  1982                           ;ikb.c: 451: int8_t k = 5-1;
  1983                           
  1984                           ;incstack = 0
  1985  001280  0E04               	movlw	4
  1986  001282  6E02               	movwf	ikey_scan@k,c
  1987  001284                     l2555:
  1988                           
  1989                           ;ikb.c: 453: {;ikb.c: 454: if (key[k].sm0 == 0)
  1990  001284  5002               	movf	ikey_scan@k,w,c
  1991  001286  0D10               	mullw	16
  1992  001288  50F3               	movf	prodl,w,c
  1993  00128A  0F64               	addlw	low (_key+4)
  1994  00128C  6ED9               	movwf	fsr2l,c
  1995  00128E  6ADA               	clrf	fsr2h,c
  1996  001290  50DF               	movf	indf2,w,c
  1997  001292  A4D8               	btfss	status,2,c
  1998  001294  D016               	goto	l2561
  1999                           
  2000                           ;ikb.c: 455: {;ikb.c: 456: if (key[k].keyRead() == 0)
  2001  001296  5002               	movf	ikey_scan@k,w,c
  2002  001298  0D10               	mullw	16
  2003  00129A  50F3               	movf	prodl,w,c
  2004  00129C  0F60               	addlw	low _key
  2005  00129E  6ED9               	movwf	fsr2l,c
  2006  0012A0  6ADA               	clrf	fsr2h,c
  2007  0012A2  D801               	call	u2128
  2008  0012A4  D00A               	goto	u2129
  2009  0012A6                     u2128:
  2010  0012A6  0005               	push	
  2011  0012A8  6EFA               	movwf	pclath,c
  2012  0012AA  50DE               	movf	postinc2,w,c
  2013  0012AC  6EFD               	movwf	tosl,c
  2014  0012AE  50DE               	movf	postinc2,w,c
  2015  0012B0  6EFE               	movwf	tosh,c
  2016  0012B2  50F8               	movf	tblptru,w,c
  2017  0012B4  6EFF               	movwf	tosu,c
  2018  0012B6  50FA               	movf	pclath,w,c
  2019  0012B8  0012               	return		;indir
  2020  0012BA                     u2129:
  2021  0012BA  0900               	iorlw	0
  2022  0012BC  A4D8               	btfss	status,2,c
  2023  0012BE  D0AC               	goto	l2591
  2024  0012C0  D041               	goto	L1
  2025  0012C2                     l2561:
  2026                           
  2027                           ;ikb.c: 461: else if (key[k].sm0 == 1)
  2028  0012C2  5002               	movf	ikey_scan@k,w,c
  2029  0012C4  0D10               	mullw	16
  2030  0012C6  50F3               	movf	prodl,w,c
  2031  0012C8  0F64               	addlw	low (_key+4)
  2032  0012CA  6ED9               	movwf	fsr2l,c
  2033  0012CC  6ADA               	clrf	fsr2h,c
  2034  0012CE  04DE               	decf	postinc2,w,c
  2035  0012D0  A4D8               	btfss	status,2,c
  2036  0012D2  D040               	goto	l2573
  2037                           
  2038                           ;ikb.c: 462: {;ikb.c: 463: if (++key[k].counter0 == 4)
  2039  0012D4  5002               	movf	ikey_scan@k,w,c
  2040  0012D6  0D10               	mullw	16
  2041  0012D8  50F3               	movf	prodl,w,c
  2042  0012DA  0F65               	addlw	low (_key+5)
  2043  0012DC  6ED9               	movwf	fsr2l,c
  2044  0012DE  6ADA               	clrf	fsr2h,c
  2045  0012E0  2ADF               	incf	indf2,f,c
  2046  0012E2  0E04               	movlw	4
  2047  0012E4  18DE               	xorwf	postinc2,w,c
  2048  0012E6  A4D8               	btfss	status,2,c
  2049  0012E8  D097               	goto	l2591
  2050                           
  2051                           ;ikb.c: 464: {;ikb.c: 465: key[k].counter0 = 0x00;
  2052  0012EA  5002               	movf	ikey_scan@k,w,c
  2053  0012EC  0D10               	mullw	16
  2054  0012EE  50F3               	movf	prodl,w,c
  2055  0012F0  0F65               	addlw	low (_key+5)
  2056  0012F2  6ED9               	movwf	fsr2l,c
  2057  0012F4  6ADA               	clrf	fsr2h,c
  2058  0012F6  0E00               	movlw	0
  2059  0012F8  6EDF               	movwf	indf2,c
  2060                           
  2061                           ;ikb.c: 467: if (key[k].keyRead() != 0)
  2062  0012FA  5002               	movf	ikey_scan@k,w,c
  2063  0012FC  0D10               	mullw	16
  2064  0012FE  50F3               	movf	prodl,w,c
  2065  001300  0F60               	addlw	low _key
  2066  001302  6ED9               	movwf	fsr2l,c
  2067  001304  6ADA               	clrf	fsr2h,c
  2068  001306  D801               	call	u2168
  2069  001308  D00A               	goto	u2169
  2070  00130A                     u2168:
  2071  00130A  0005               	push	
  2072  00130C  6EFA               	movwf	pclath,c
  2073  00130E  50DE               	movf	postinc2,w,c
  2074  001310  6EFD               	movwf	tosl,c
  2075  001312  50DE               	movf	postinc2,w,c
  2076  001314  6EFE               	movwf	tosh,c
  2077  001316  50F8               	movf	tblptru,w,c
  2078  001318  6EFF               	movwf	tosu,c
  2079  00131A  50FA               	movf	pclath,w,c
  2080  00131C  0012               	return		;indir
  2081  00131E                     u2169:
  2082  00131E  0900               	iorlw	0
  2083  001320  B4D8               	btfsc	status,2,c
  2084  001322  D008               	goto	l2571
  2085  001324                     u2170:
  2086                           
  2087                           ;ikb.c: 468: {;ikb.c: 469: key[k].sm0--;
  2088  001324  5002               	movf	ikey_scan@k,w,c
  2089  001326  0D10               	mullw	16
  2090  001328  50F3               	movf	prodl,w,c
  2091  00132A  0F64               	addlw	low (_key+4)
  2092  00132C  6ED9               	movwf	fsr2l,c
  2093  00132E  6ADA               	clrf	fsr2h,c
  2094  001330  06DF               	decf	indf2,f,c
  2095                           
  2096                           ;ikb.c: 470: }
  2097  001332  D072               	goto	l2591
  2098  001334                     l2571:
  2099                           
  2100                           ;ikb.c: 471: else;ikb.c: 472: {;ikb.c: 473: key[k].bf.state = 1;
  2101  001334  5002               	movf	ikey_scan@k,w,c
  2102  001336  0D10               	mullw	16
  2103  001338  50F3               	movf	prodl,w,c
  2104  00133A  0F6A               	addlw	low (_key+10)
  2105  00133C  6ED9               	movwf	fsr2l,c
  2106  00133E  6ADA               	clrf	fsr2h,c
  2107  001340  0100               	movlb	0	; () banked
  2108  001342  80DF               	bsf	indf2,0,c
  2109  001344                     L1:
  2110                           
  2111                           ;ikb.c: 474: key[k].sm0++;
  2112  001344  5002               	movf	ikey_scan@k,w,c
  2113  001346  0D10               	mullw	16
  2114  001348  50F3               	movf	prodl,w,c
  2115  00134A  0F64               	addlw	low (_key+4)
  2116  00134C  6ED9               	movwf	fsr2l,c
  2117  00134E  6ADA               	clrf	fsr2h,c
  2118  001350  2ADF               	incf	indf2,f,c
  2119  001352  D062               	goto	l2591
  2120  001354                     l2573:
  2121                           
  2122                           ;ikb.c: 478: else if (key[k].sm0 == 2)
  2123  001354  5002               	movf	ikey_scan@k,w,c
  2124  001356  0D10               	mullw	16
  2125  001358  50F3               	movf	prodl,w,c
  2126  00135A  0F64               	addlw	low (_key+4)
  2127  00135C  6ED9               	movwf	fsr2l,c
  2128  00135E  6ADA               	clrf	fsr2h,c
  2129  001360  0E02               	movlw	2
  2130  001362  18DE               	xorwf	postinc2,w,c
  2131  001364  A4D8               	btfss	status,2,c
  2132  001366  D016               	goto	l2579
  2133                           
  2134                           ;ikb.c: 479: {;ikb.c: 480: if (key[k].keyRead() == 1)
  2135  001368  5002               	movf	ikey_scan@k,w,c
  2136  00136A  0D10               	mullw	16
  2137  00136C  50F3               	movf	prodl,w,c
  2138  00136E  0F60               	addlw	low _key
  2139  001370  6ED9               	movwf	fsr2l,c
  2140  001372  6ADA               	clrf	fsr2h,c
  2141  001374  D801               	call	u2198
  2142  001376  D00A               	goto	u2199
  2143  001378                     u2198:
  2144  001378  0005               	push	
  2145  00137A  6EFA               	movwf	pclath,c
  2146  00137C  50DE               	movf	postinc2,w,c
  2147  00137E  6EFD               	movwf	tosl,c
  2148  001380  50DE               	movf	postinc2,w,c
  2149  001382  6EFE               	movwf	tosh,c
  2150  001384  50F8               	movf	tblptru,w,c
  2151  001386  6EFF               	movwf	tosu,c
  2152  001388  50FA               	movf	pclath,w,c
  2153  00138A  0012               	return		;indir
  2154  00138C                     u2199:
  2155  00138C  06E8               	decf	wreg,f,c
  2156  00138E  B4D8               	btfsc	status,2,c
  2157  001390  D7D9               	goto	L1
  2158  001392  D042               	goto	l2591
  2159  001394                     l2579:
  2160                           
  2161                           ;ikb.c: 483: else if (key[k].sm0 == 3)
  2162  001394  5002               	movf	ikey_scan@k,w,c
  2163  001396  0D10               	mullw	16
  2164  001398  50F3               	movf	prodl,w,c
  2165  00139A  0F64               	addlw	low (_key+4)
  2166  00139C  6ED9               	movwf	fsr2l,c
  2167  00139E  6ADA               	clrf	fsr2h,c
  2168  0013A0  0E03               	movlw	3
  2169  0013A2  18DE               	xorwf	postinc2,w,c
  2170  0013A4  A4D8               	btfss	status,2,c
  2171  0013A6  D038               	goto	l2591
  2172                           
  2173                           ;ikb.c: 484: {;ikb.c: 485: if (++key[k].counter0 == 4)
  2174  0013A8  5002               	movf	ikey_scan@k,w,c
  2175  0013AA  0D10               	mullw	16
  2176  0013AC  50F3               	movf	prodl,w,c
  2177  0013AE  0F65               	addlw	low (_key+5)
  2178  0013B0  6ED9               	movwf	fsr2l,c
  2179  0013B2  6ADA               	clrf	fsr2h,c
  2180  0013B4  2ADF               	incf	indf2,f,c
  2181  0013B6  0E04               	movlw	4
  2182  0013B8  18DE               	xorwf	postinc2,w,c
  2183  0013BA  A4D8               	btfss	status,2,c
  2184  0013BC  D02D               	goto	l2591
  2185                           
  2186                           ;ikb.c: 486: {;ikb.c: 487: key[k].counter0 = 0x00;
  2187  0013BE  5002               	movf	ikey_scan@k,w,c
  2188  0013C0  0D10               	mullw	16
  2189  0013C2  50F3               	movf	prodl,w,c
  2190  0013C4  0F65               	addlw	low (_key+5)
  2191  0013C6  6ED9               	movwf	fsr2l,c
  2192  0013C8  6ADA               	clrf	fsr2h,c
  2193  0013CA  0E00               	movlw	0
  2194  0013CC  6EDF               	movwf	indf2,c
  2195                           
  2196                           ;ikb.c: 489: if (key[k].keyRead() != 1)
  2197  0013CE  5002               	movf	ikey_scan@k,w,c
  2198  0013D0  0D10               	mullw	16
  2199  0013D2  50F3               	movf	prodl,w,c
  2200  0013D4  0F60               	addlw	low _key
  2201  0013D6  6ED9               	movwf	fsr2l,c
  2202  0013D8  6ADA               	clrf	fsr2h,c
  2203  0013DA  D801               	call	u2238
  2204  0013DC  D00A               	goto	u2239
  2205  0013DE                     u2238:
  2206  0013DE  0005               	push	
  2207  0013E0  6EFA               	movwf	pclath,c
  2208  0013E2  50DE               	movf	postinc2,w,c
  2209  0013E4  6EFD               	movwf	tosl,c
  2210  0013E6  50DE               	movf	postinc2,w,c
  2211  0013E8  6EFE               	movwf	tosh,c
  2212  0013EA  50F8               	movf	tblptru,w,c
  2213  0013EC  6EFF               	movwf	tosu,c
  2214  0013EE  50FA               	movf	pclath,w,c
  2215  0013F0  0012               	return		;indir
  2216  0013F2                     u2239:
  2217  0013F2  06E8               	decf	wreg,f,c
  2218  0013F4  A4D8               	btfss	status,2,c
  2219  0013F6  D796               	goto	u2170
  2220                           
  2221                           ;ikb.c: 493: else;ikb.c: 494: {;ikb.c: 495: key[k].bf.state = 0;
  2222  0013F8  5002               	movf	ikey_scan@k,w,c
  2223  0013FA  0D10               	mullw	16
  2224  0013FC  50F3               	movf	prodl,w,c
  2225  0013FE  0F6A               	addlw	low (_key+10)
  2226  001400  6ED9               	movwf	fsr2l,c
  2227  001402  6ADA               	clrf	fsr2h,c
  2228  001404  0100               	movlb	0	; () banked
  2229  001406  90DF               	bcf	indf2,0,c
  2230                           
  2231                           ;ikb.c: 496: key[k].sm0 = 0x00;
  2232  001408  5002               	movf	ikey_scan@k,w,c
  2233  00140A  0D10               	mullw	16
  2234  00140C  50F3               	movf	prodl,w,c
  2235  00140E  0F64               	addlw	low (_key+4)
  2236  001410  6ED9               	movwf	fsr2l,c
  2237  001412  6ADA               	clrf	fsr2h,c
  2238  001414  0E00               	movlw	0
  2239  001416  6EDF               	movwf	indf2,c
  2240  001418                     l2591:
  2241                           
  2242                           ;ikb.c: 497: };ikb.c: 498: };ikb.c: 499: };ikb.c: 500: }while (--k >= 0);
  2243  001418  0602               	decf	ikey_scan@k,f,c
  2244  00141A  BE02               	btfsc	ikey_scan@k,7,c
  2245  00141C  0012               	return	
  2246  00141E  D732               	goto	l2555
  2247  001420                     __end_of_ikey_scan:
  2248                           	opt callstack 0
  2249                           
  2250 ;; *************** function _keyRead_pin_key4 *****************
  2251 ;; Defined at:
  2252 ;;		line 206 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      unsigned char 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_ikb_init
  2277 ;;		_ikey_scan
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text18
  2282  001F34                     __ptext18:
  2283                           	opt callstack 0
  2284  001F34                     _keyRead_pin_key4:
  2285                           	opt callstack 27
  2286                           
  2287                           ;ikb.c: 208: return ((PORTC & (1<<7))>>7);
  2288                           
  2289                           ;incstack = 0
  2290  001F34  4482               	rlncf	3970,w,c	;volatile
  2291  001F36  0B01               	andlw	1
  2292  001F38  0012               	return		;funcret
  2293  001F3A                     __end_of_keyRead_pin_key4:
  2294                           	opt callstack 0
  2295                           
  2296 ;; *************** function _keyRead_pin_key3 *****************
  2297 ;; Defined at:
  2298 ;;		line 202 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      unsigned char 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2315 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_ikb_init
  2323 ;;		_ikey_scan
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text19
  2328  001F10                     __ptext19:
  2329                           	opt callstack 0
  2330  001F10                     _keyRead_pin_key3:
  2331                           	opt callstack 27
  2332                           
  2333                           ;ikb.c: 204: return ((PORTC & (1<<6))>>6);
  2334                           
  2335                           ;incstack = 0
  2336  001F10  4482               	rlncf	3970,w,c	;volatile
  2337  001F12  46E8               	rlncf	wreg,f,c
  2338  001F14  0B03               	andlw	3
  2339  001F16  0B01               	andlw	1
  2340  001F18  0012               	return		;funcret
  2341  001F1A                     __end_of_keyRead_pin_key3:
  2342                           	opt callstack 0
  2343                           
  2344 ;; *************** function _keyRead_pin_key2 *****************
  2345 ;; Defined at:
  2346 ;;		line 198 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      unsigned char 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_ikb_init
  2371 ;;		_ikey_scan
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text20
  2376  001F1A                     __ptext20:
  2377                           	opt callstack 0
  2378  001F1A                     _keyRead_pin_key2:
  2379                           	opt callstack 27
  2380                           
  2381                           ;ikb.c: 200: return ((PORTC & (1<<5))>>5);
  2382                           
  2383                           ;incstack = 0
  2384  001F1A  3882               	swapf	3970,w,c	;volatile
  2385  001F1C  42E8               	rrncf	wreg,f,c
  2386  001F1E  0B07               	andlw	7
  2387  001F20  0B01               	andlw	1
  2388  001F22  0012               	return		;funcret
  2389  001F24                     __end_of_keyRead_pin_key2:
  2390                           	opt callstack 0
  2391                           
  2392 ;; *************** function _keyRead_pin_key1 *****************
  2393 ;; Defined at:
  2394 ;;		line 194 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      unsigned char 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2411 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_ikb_init
  2419 ;;		_ikey_scan
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text21
  2424  001F24                     __ptext21:
  2425                           	opt callstack 0
  2426  001F24                     _keyRead_pin_key1:
  2427                           	opt callstack 27
  2428                           
  2429                           ;ikb.c: 196: return ((PORTC & (1<<4))>>4);
  2430                           
  2431                           ;incstack = 0
  2432  001F24  3882               	swapf	3970,w,c	;volatile
  2433  001F26  0B0F               	andlw	15
  2434  001F28  0B01               	andlw	1
  2435  001F2A  0012               	return		;funcret
  2436  001F2C                     __end_of_keyRead_pin_key1:
  2437                           	opt callstack 0
  2438                           
  2439 ;; *************** function _keyRead_pin_key5 *****************
  2440 ;; Defined at:
  2441 ;;		line 210 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      unsigned char 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_ikb_init
  2466 ;;		_ikey_scan
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text22
  2471  001F2C                     __ptext22:
  2472                           	opt callstack 0
  2473  001F2C                     _keyRead_pin_key5:
  2474                           	opt callstack 27
  2475                           
  2476                           ;ikb.c: 212: return ((PORTD & (1<<4))>>4);
  2477                           
  2478                           ;incstack = 0
  2479  001F2C  3883               	swapf	3971,w,c	;volatile
  2480  001F2E  0B0F               	andlw	15
  2481  001F30  0B01               	andlw	1
  2482  001F32  0012               	return		;funcret
  2483  001F34                     __end_of_keyRead_pin_key5:
  2484                           	opt callstack 0
  2485                           
  2486 ;; *************** function _ikey_parsing *****************
  2487 ;; Defined at:
  2488 ;;		line 545 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  k               1   24[COMRAM] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0
  2503 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2504 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2505 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2506 ;;Total ram usage:        5 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    3
  2509 ;; This function calls:
  2510 ;;		___ftge
  2511 ;;		___lwtoft
  2512 ;;		_ikey_is_accessible
  2513 ;; This function is called by:
  2514 ;;		_ikb_job
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text23
  2519  00080E                     __ptext23:
  2520                           	opt callstack 0
  2521  00080E                     _ikey_parsing:
  2522                           	opt callstack 26
  2523                           
  2524                           ;ikb.c: 547: uint8_t k;;ikb.c: 549: for (k=0; k < 5; k++)
  2525                           
  2526                           ;incstack = 0
  2527  00080E  0E00               	movlw	0
  2528  000810  6E19               	movwf	ikey_parsing@k,c
  2529  000812                     l2599:
  2530                           
  2531                           ;ikb.c: 550: {;ikb.c: 551: if ( key[k].sm1 == (0) )
  2532  000812  5019               	movf	ikey_parsing@k,w,c
  2533  000814  0D10               	mullw	16
  2534  000816  50F3               	movf	prodl,w,c
  2535  000818  0F66               	addlw	low (_key+6)
  2536  00081A  6ED9               	movwf	fsr2l,c
  2537  00081C  6ADA               	clrf	fsr2h,c
  2538  00081E  50DF               	movf	indf2,w,c
  2539  000820  A4D8               	btfss	status,2,c
  2540  000822  D08B               	goto	l348
  2541                           
  2542                           ;ikb.c: 552: {;ikb.c: 553: if ( ikey_is_accessible(k) )
  2543  000824  5019               	movf	ikey_parsing@k,w,c
  2544  000826  ECAA  F00D         	call	_ikey_is_accessible
  2545  00082A  0900               	iorlw	0
  2546  00082C  B4D8               	btfsc	status,2,c
  2547  00082E  D085               	goto	l348
  2548                           
  2549                           ;ikb.c: 554: {;ikb.c: 555: if (key[k].bf.state == 1)
  2550  000830  5019               	movf	ikey_parsing@k,w,c
  2551  000832  0D10               	mullw	16
  2552  000834  50F3               	movf	prodl,w,c
  2553  000836  0F6A               	addlw	low (_key+10)
  2554  000838  6ED9               	movwf	fsr2l,c
  2555  00083A  6ADA               	clrf	fsr2h,c
  2556  00083C  0100               	movlb	0	; () banked
  2557  00083E  A0DF               	btfss	indf2,0,c
  2558  000840  D07C               	goto	l348
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;ikb.c: 556: {;ikb.c: 558: if (key[k].bf.OnKeyPressed)
  2562  000842  5019               	movf	ikey_parsing@k,w,c
  2563  000844  0D10               	mullw	16
  2564  000846  50F3               	movf	prodl,w,c
  2565  000848  0F6A               	addlw	low (_key+10)
  2566  00084A  6ED9               	movwf	fsr2l,c
  2567  00084C  6ADA               	clrf	fsr2h,c
  2568  00084E  A2DF               	btfss	indf2,1,c
  2569  000850  D01F               	goto	l2613
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;ikb.c: 559: {;ikb.c: 560: key[k].bf.ReadyToRead = 1;
  2573  000852  5019               	movf	ikey_parsing@k,w,c
  2574  000854  0D10               	mullw	16
  2575  000856  50F3               	movf	prodl,w,c
  2576  000858  0F6A               	addlw	low (_key+10)
  2577  00085A  6ED9               	movwf	fsr2l,c
  2578  00085C  6ADA               	clrf	fsr2h,c
  2579  00085E  8CDF               	bsf	indf2,6,c
  2580                           
  2581                           ;ikb.c: 562: if (key[k].bf.Reptt)
  2582  000860  5019               	movf	ikey_parsing@k,w,c
  2583  000862  0D10               	mullw	16
  2584  000864  50F3               	movf	prodl,w,c
  2585  000866  0F6A               	addlw	low (_key+10)
  2586  000868  6ED9               	movwf	fsr2l,c
  2587  00086A  6ADA               	clrf	fsr2h,c
  2588  00086C  AADF               	btfss	indf2,5,c
  2589  00086E  D008               	goto	l2611
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;ikb.c: 563: {;ikb.c: 564: key[k].sm1 = (6);
  2593  000870  5019               	movf	ikey_parsing@k,w,c
  2594  000872  0D10               	mullw	16
  2595  000874  50F3               	movf	prodl,w,c
  2596  000876  0F66               	addlw	low (_key+6)
  2597  000878  6ED9               	movwf	fsr2l,c
  2598  00087A  6ADA               	clrf	fsr2h,c
  2599  00087C  0E06               	movlw	6
  2600  00087E  D037               	goto	L2
  2601  000880                     l2611:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;ikb.c: 566: else;ikb.c: 567: {;ikb.c: 568: key[k].sm1 = (1);
  2605  000880  5019               	movf	ikey_parsing@k,w,c
  2606  000882  0D10               	mullw	16
  2607  000884  50F3               	movf	prodl,w,c
  2608  000886  0F66               	addlw	low (_key+6)
  2609  000888  6ED9               	movwf	fsr2l,c
  2610  00088A  6ADA               	clrf	fsr2h,c
  2611  00088C  0E01               	movlw	1
  2612  00088E  D02F               	goto	L2
  2613  000890                     l2613:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;ikb.c: 571: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2617  000890  5019               	movf	ikey_parsing@k,w,c
  2618  000892  0D10               	mullw	16
  2619  000894  50F3               	movf	prodl,w,c
  2620  000896  0F6A               	addlw	low (_key+10)
  2621  000898  6ED9               	movwf	fsr2l,c
  2622  00089A  6ADA               	clrf	fsr2h,c
  2623  00089C  A4DF               	btfss	indf2,2,c
  2624  00089E  D008               	goto	l2617
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;ikb.c: 572: {;ikb.c: 573: key[k].sm1 = (5);
  2628  0008A0  5019               	movf	ikey_parsing@k,w,c
  2629  0008A2  0D10               	mullw	16
  2630  0008A4  50F3               	movf	prodl,w,c
  2631  0008A6  0F66               	addlw	low (_key+6)
  2632  0008A8  6ED9               	movwf	fsr2l,c
  2633  0008AA  6ADA               	clrf	fsr2h,c
  2634  0008AC  0E05               	movlw	5
  2635  0008AE  D01F               	goto	L2
  2636  0008B0                     l2617:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;ikb.c: 576: else if (key[k].bf.AtTimeExpired)
  2640  0008B0  5019               	movf	ikey_parsing@k,w,c
  2641  0008B2  0D10               	mullw	16
  2642  0008B4  50F3               	movf	prodl,w,c
  2643  0008B6  0F6A               	addlw	low (_key+10)
  2644  0008B8  6ED9               	movwf	fsr2l,c
  2645  0008BA  6ADA               	clrf	fsr2h,c
  2646  0008BC  A6DF               	btfss	indf2,3,c
  2647  0008BE  D008               	goto	l2621
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;ikb.c: 577: {;ikb.c: 578: key[k].sm1 = (3);
  2651  0008C0  5019               	movf	ikey_parsing@k,w,c
  2652  0008C2  0D10               	mullw	16
  2653  0008C4  50F3               	movf	prodl,w,c
  2654  0008C6  0F66               	addlw	low (_key+6)
  2655  0008C8  6ED9               	movwf	fsr2l,c
  2656  0008CA  6ADA               	clrf	fsr2h,c
  2657  0008CC  0E03               	movlw	3
  2658  0008CE  D00F               	goto	L2
  2659  0008D0                     l2621:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;ikb.c: 580: else if (key[k].bf.AtTimeExpired2)
  2663  0008D0  5019               	movf	ikey_parsing@k,w,c
  2664  0008D2  0D10               	mullw	16
  2665  0008D4  50F3               	movf	prodl,w,c
  2666  0008D6  0F6A               	addlw	low (_key+10)
  2667  0008D8  6ED9               	movwf	fsr2l,c
  2668  0008DA  6ADA               	clrf	fsr2h,c
  2669  0008DC  A8DF               	btfss	indf2,4,c
  2670  0008DE  D008               	goto	l354
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;ikb.c: 581: {;ikb.c: 582: key[k].sm1 = (4);
  2674  0008E0  5019               	movf	ikey_parsing@k,w,c
  2675  0008E2  0D10               	mullw	16
  2676  0008E4  50F3               	movf	prodl,w,c
  2677  0008E6  0F66               	addlw	low (_key+6)
  2678  0008E8  6ED9               	movwf	fsr2l,c
  2679  0008EA  6ADA               	clrf	fsr2h,c
  2680  0008EC  0E04               	movlw	4
  2681  0008EE                     L2:
  2682  0008EE  6EDF               	movwf	indf2,c
  2683  0008F0                     l354:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;ikb.c: 583: };ikb.c: 586: key[k].bf.InProcessing = 1;
  2687  0008F0  5019               	movf	ikey_parsing@k,w,c
  2688  0008F2  0D10               	mullw	16
  2689  0008F4  50F3               	movf	prodl,w,c
  2690  0008F6  0F6B               	addlw	low (_key+11)
  2691  0008F8  6ED9               	movwf	fsr2l,c
  2692  0008FA  6ADA               	clrf	fsr2h,c
  2693  0008FC  82DF               	bsf	indf2,1,c
  2694                           
  2695                           ;ikb.c: 591: if (key[k].num_group_x != 0)
  2696  0008FE  5019               	movf	ikey_parsing@k,w,c
  2697  000900  0D10               	mullw	16
  2698  000902  50F3               	movf	prodl,w,c
  2699  000904  0F69               	addlw	low (_key+9)
  2700  000906  6ED9               	movwf	fsr2l,c
  2701  000908  6ADA               	clrf	fsr2h,c
  2702  00090A  50DF               	movf	indf2,w,c
  2703  00090C  B4D8               	btfsc	status,2,c
  2704  00090E  D015               	goto	l348
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;ikb.c: 592: {;ikb.c: 593: group_x[ key[k].num_group_x ] = 1;
  2708  000910  5019               	movf	ikey_parsing@k,w,c
  2709  000912  0D10               	mullw	16
  2710  000914  50F3               	movf	prodl,w,c
  2711  000916  0F69               	addlw	low (_key+9)
  2712  000918  6ED9               	movwf	fsr2l,c
  2713  00091A  6ADA               	clrf	fsr2h,c
  2714  00091C  50DF               	movf	indf2,w,c
  2715  00091E  6E15               	movwf	??_ikey_parsing& (0+255),c
  2716  000920  5015               	movf	??_ikey_parsing,w,c
  2717  000922  0F48               	addlw	low _group_x
  2718  000924  6ED9               	movwf	fsr2l,c
  2719  000926  6ADA               	clrf	fsr2h,c
  2720  000928  0E01               	movlw	1
  2721  00092A  6EDF               	movwf	indf2,c
  2722                           
  2723                           ;ikb.c: 594: key[k].bf.OwnerOfGroup = 1;
  2724  00092C  5019               	movf	ikey_parsing@k,w,c
  2725  00092E  0D10               	mullw	16
  2726  000930  50F3               	movf	prodl,w,c
  2727  000932  0F6B               	addlw	low (_key+11)
  2728  000934  6ED9               	movwf	fsr2l,c
  2729  000936  6ADA               	clrf	fsr2h,c
  2730  000938  80DF               	bsf	indf2,0,c
  2731  00093A                     l348:
  2732                           
  2733                           ;ikb.c: 595: };ikb.c: 597: };ikb.c: 598: };ikb.c: 599: };ikb.c: 603: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2734  00093A  5019               	movf	ikey_parsing@k,w,c
  2735  00093C  0D10               	mullw	16
  2736  00093E  50F3               	movf	prodl,w,c
  2737  000940  0F66               	addlw	low (_key+6)
  2738  000942  6ED9               	movwf	fsr2l,c
  2739  000944  6ADA               	clrf	fsr2h,c
  2740  000946  0E05               	movlw	5
  2741  000948  64DF               	cpfsgt	indf2,c
  2742  00094A  D024               	goto	l361
  2743  00094C  5019               	movf	ikey_parsing@k,w,c
  2744  00094E  0D10               	mullw	16
  2745  000950  50F3               	movf	prodl,w,c
  2746  000952  0F66               	addlw	low (_key+6)
  2747  000954  6ED9               	movwf	fsr2l,c
  2748  000956  6ADA               	clrf	fsr2h,c
  2749  000958  0E09               	movlw	9
  2750  00095A  60DF               	cpfslt	indf2,c
  2751  00095C  D01B               	goto	l361
  2752                           
  2753                           ;ikb.c: 604: {;ikb.c: 605: if (key[k].bf.state == 0)
  2754  00095E  5019               	movf	ikey_parsing@k,w,c
  2755  000960  0D10               	mullw	16
  2756  000962  50F3               	movf	prodl,w,c
  2757  000964  0F6A               	addlw	low (_key+10)
  2758  000966  6ED9               	movwf	fsr2l,c
  2759  000968  6ADA               	clrf	fsr2h,c
  2760  00096A  0100               	movlb	0	; () banked
  2761  00096C  B0DF               	btfsc	indf2,0,c
  2762  00096E  D012               	goto	l361
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;ikb.c: 606: {;ikb.c: 607: key[k].counter1 = 0;
  2766  000970  5019               	movf	ikey_parsing@k,w,c
  2767  000972  0D10               	mullw	16
  2768  000974  50F3               	movf	prodl,w,c
  2769  000976  0F67               	addlw	low (_key+7)
  2770  000978  6ED9               	movwf	fsr2l,c
  2771  00097A  6ADA               	clrf	fsr2h,c
  2772  00097C  0E00               	movlw	0
  2773  00097E  6EDE               	movwf	postinc2,c
  2774  000980  0E00               	movlw	0
  2775  000982  6EDD               	movwf	postdec2,c
  2776                           
  2777                           ;ikb.c: 608: key[k].sm1 = (2);
  2778  000984  5019               	movf	ikey_parsing@k,w,c
  2779  000986  0D10               	mullw	16
  2780  000988  50F3               	movf	prodl,w,c
  2781  00098A  0F66               	addlw	low (_key+6)
  2782  00098C  6ED9               	movwf	fsr2l,c
  2783  00098E  6ADA               	clrf	fsr2h,c
  2784  000990  0E02               	movlw	2
  2785  000992  6EDF               	movwf	indf2,c
  2786  000994                     l361:
  2787                           
  2788                           ;ikb.c: 609: };ikb.c: 610: };ikb.c: 612: if (key[k].sm1 == (6) )
  2789  000994  5019               	movf	ikey_parsing@k,w,c
  2790  000996  0D10               	mullw	16
  2791  000998  50F3               	movf	prodl,w,c
  2792  00099A  0F66               	addlw	low (_key+6)
  2793  00099C  6ED9               	movwf	fsr2l,c
  2794  00099E  6ADA               	clrf	fsr2h,c
  2795  0009A0  0E06               	movlw	6
  2796  0009A2  18DE               	xorwf	postinc2,w,c
  2797  0009A4  A4D8               	btfss	status,2,c
  2798  0009A6  D027               	goto	l363
  2799                           
  2800                           ;ikb.c: 613: {;ikb.c: 614: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2801  0009A8  5019               	movf	ikey_parsing@k,w,c
  2802  0009AA  0D10               	mullw	16
  2803  0009AC  50F3               	movf	prodl,w,c
  2804  0009AE  0F6C               	addlw	low (_key+12)
  2805  0009B0  6ED9               	movwf	fsr2l,c
  2806  0009B2  6ADA               	clrf	fsr2h,c
  2807  0009B4  5019               	movf	ikey_parsing@k,w,c
  2808  0009B6  0D10               	mullw	16
  2809  0009B8  50F3               	movf	prodl,w,c
  2810  0009BA  0F67               	addlw	low (_key+7)
  2811  0009BC  6EE1               	movwf	fsr1l,c
  2812  0009BE  6AE2               	clrf	fsr1h,c
  2813  0009C0  2AE6               	incf	postinc1,f,c
  2814  0009C2  0E00               	movlw	0
  2815  0009C4  22E5               	addwfc	postdec1,f,c
  2816  0009C6  50DE               	movf	postinc2,w,c
  2817  0009C8  5CE6               	subwf	postinc1,w,c
  2818  0009CA  50DE               	movf	postinc2,w,c
  2819  0009CC  58E6               	subwfb	postinc1,w,c
  2820  0009CE  A0D8               	btfss	status,0,c
  2821  0009D0  D012               	goto	l363
  2822                           
  2823                           ;ikb.c: 615: {;ikb.c: 616: key[k].counter1 =0;
  2824  0009D2  5019               	movf	ikey_parsing@k,w,c
  2825  0009D4  0D10               	mullw	16
  2826  0009D6  50F3               	movf	prodl,w,c
  2827  0009D8  0F67               	addlw	low (_key+7)
  2828  0009DA  6ED9               	movwf	fsr2l,c
  2829  0009DC  6ADA               	clrf	fsr2h,c
  2830  0009DE  0E00               	movlw	0
  2831  0009E0  6EDE               	movwf	postinc2,c
  2832  0009E2  0E00               	movlw	0
  2833  0009E4  6EDD               	movwf	postdec2,c
  2834                           
  2835                           ;ikb.c: 617: key[k].sm1 = (7);
  2836  0009E6  5019               	movf	ikey_parsing@k,w,c
  2837  0009E8  0D10               	mullw	16
  2838  0009EA  50F3               	movf	prodl,w,c
  2839  0009EC  0F66               	addlw	low (_key+6)
  2840  0009EE  6ED9               	movwf	fsr2l,c
  2841  0009F0  6ADA               	clrf	fsr2h,c
  2842  0009F2  0E07               	movlw	7
  2843  0009F4  6EDF               	movwf	indf2,c
  2844  0009F6                     l363:
  2845                           
  2846                           ;ikb.c: 618: };ikb.c: 619: };ikb.c: 620: if (key[k].sm1 == (7))
  2847  0009F6  5019               	movf	ikey_parsing@k,w,c
  2848  0009F8  0D10               	mullw	16
  2849  0009FA  50F3               	movf	prodl,w,c
  2850  0009FC  0F66               	addlw	low (_key+6)
  2851  0009FE  6ED9               	movwf	fsr2l,c
  2852  000A00  6ADA               	clrf	fsr2h,c
  2853  000A02  0E07               	movlw	7
  2854  000A04  18DE               	xorwf	postinc2,w,c
  2855  000A06  A4D8               	btfss	status,2,c
  2856  000A08  D018               	goto	l365
  2857                           
  2858                           ;ikb.c: 621: {;ikb.c: 622: if (key[k].bf.ReadyToRead == 0)
  2859  000A0A  5019               	movf	ikey_parsing@k,w,c
  2860  000A0C  0D10               	mullw	16
  2861  000A0E  50F3               	movf	prodl,w,c
  2862  000A10  0F6A               	addlw	low (_key+10)
  2863  000A12  6ED9               	movwf	fsr2l,c
  2864  000A14  6ADA               	clrf	fsr2h,c
  2865  000A16  0100               	movlb	0	; () banked
  2866  000A18  BCDF               	btfsc	indf2,6,c
  2867  000A1A  D00F               	goto	l365
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;ikb.c: 623: {;ikb.c: 624: key[k].bf.ReadyToRead = 1;
  2871  000A1C  5019               	movf	ikey_parsing@k,w,c
  2872  000A1E  0D10               	mullw	16
  2873  000A20  50F3               	movf	prodl,w,c
  2874  000A22  0F6A               	addlw	low (_key+10)
  2875  000A24  6ED9               	movwf	fsr2l,c
  2876  000A26  6ADA               	clrf	fsr2h,c
  2877  000A28  8CDF               	bsf	indf2,6,c
  2878                           
  2879                           ;ikb.c: 625: key[k].sm1 = (8);
  2880  000A2A  5019               	movf	ikey_parsing@k,w,c
  2881  000A2C  0D10               	mullw	16
  2882  000A2E  50F3               	movf	prodl,w,c
  2883  000A30  0F66               	addlw	low (_key+6)
  2884  000A32  6ED9               	movwf	fsr2l,c
  2885  000A34  6ADA               	clrf	fsr2h,c
  2886  000A36  0E08               	movlw	8
  2887  000A38  6EDF               	movwf	indf2,c
  2888  000A3A                     l365:
  2889                           
  2890                           ;ikb.c: 626: };ikb.c: 627: };ikb.c: 628: if (key[k].sm1 == (8))
  2891  000A3A  5019               	movf	ikey_parsing@k,w,c
  2892  000A3C  0D10               	mullw	16
  2893  000A3E  50F3               	movf	prodl,w,c
  2894  000A40  0F66               	addlw	low (_key+6)
  2895  000A42  6ED9               	movwf	fsr2l,c
  2896  000A44  6ADA               	clrf	fsr2h,c
  2897  000A46  0E08               	movlw	8
  2898  000A48  18DE               	xorwf	postinc2,w,c
  2899  000A4A  A4D8               	btfss	status,2,c
  2900  000A4C  D027               	goto	l367
  2901                           
  2902                           ;ikb.c: 629: {;ikb.c: 630: if ( ++key[k].counter1 >= key[k].repp.after_start)
  2903  000A4E  5019               	movf	ikey_parsing@k,w,c
  2904  000A50  0D10               	mullw	16
  2905  000A52  50F3               	movf	prodl,w,c
  2906  000A54  0F6E               	addlw	low (_key+14)
  2907  000A56  6ED9               	movwf	fsr2l,c
  2908  000A58  6ADA               	clrf	fsr2h,c
  2909  000A5A  5019               	movf	ikey_parsing@k,w,c
  2910  000A5C  0D10               	mullw	16
  2911  000A5E  50F3               	movf	prodl,w,c
  2912  000A60  0F67               	addlw	low (_key+7)
  2913  000A62  6EE1               	movwf	fsr1l,c
  2914  000A64  6AE2               	clrf	fsr1h,c
  2915  000A66  2AE6               	incf	postinc1,f,c
  2916  000A68  0E00               	movlw	0
  2917  000A6A  22E5               	addwfc	postdec1,f,c
  2918  000A6C  50DE               	movf	postinc2,w,c
  2919  000A6E  5CE6               	subwf	postinc1,w,c
  2920  000A70  50DE               	movf	postinc2,w,c
  2921  000A72  58E6               	subwfb	postinc1,w,c
  2922  000A74  A0D8               	btfss	status,0,c
  2923  000A76  D012               	goto	l367
  2924                           
  2925                           ;ikb.c: 631: {;ikb.c: 632: key[k].counter1 = 0;
  2926  000A78  5019               	movf	ikey_parsing@k,w,c
  2927  000A7A  0D10               	mullw	16
  2928  000A7C  50F3               	movf	prodl,w,c
  2929  000A7E  0F67               	addlw	low (_key+7)
  2930  000A80  6ED9               	movwf	fsr2l,c
  2931  000A82  6ADA               	clrf	fsr2h,c
  2932  000A84  0E00               	movlw	0
  2933  000A86  6EDE               	movwf	postinc2,c
  2934  000A88  0E00               	movlw	0
  2935  000A8A  6EDD               	movwf	postdec2,c
  2936                           
  2937                           ;ikb.c: 633: key[k].sm1 = (7);
  2938  000A8C  5019               	movf	ikey_parsing@k,w,c
  2939  000A8E  0D10               	mullw	16
  2940  000A90  50F3               	movf	prodl,w,c
  2941  000A92  0F66               	addlw	low (_key+6)
  2942  000A94  6ED9               	movwf	fsr2l,c
  2943  000A96  6ADA               	clrf	fsr2h,c
  2944  000A98  0E07               	movlw	7
  2945  000A9A  6EDF               	movwf	indf2,c
  2946  000A9C                     l367:
  2947                           
  2948                           ;ikb.c: 634: };ikb.c: 635: };ikb.c: 637: if (key[k].sm1 == (5) )
  2949  000A9C  5019               	movf	ikey_parsing@k,w,c
  2950  000A9E  0D10               	mullw	16
  2951  000AA0  50F3               	movf	prodl,w,c
  2952  000AA2  0F66               	addlw	low (_key+6)
  2953  000AA4  6ED9               	movwf	fsr2l,c
  2954  000AA6  6ADA               	clrf	fsr2h,c
  2955  000AA8  0E05               	movlw	5
  2956  000AAA  18DE               	xorwf	postinc2,w,c
  2957  000AAC  A4D8               	btfss	status,2,c
  2958  000AAE  D018               	goto	l369
  2959                           
  2960                           ;ikb.c: 638: {;ikb.c: 639: if (key[k].bf.state == 0)
  2961  000AB0  5019               	movf	ikey_parsing@k,w,c
  2962  000AB2  0D10               	mullw	16
  2963  000AB4  50F3               	movf	prodl,w,c
  2964  000AB6  0F6A               	addlw	low (_key+10)
  2965  000AB8  6ED9               	movwf	fsr2l,c
  2966  000ABA  6ADA               	clrf	fsr2h,c
  2967  000ABC  0100               	movlb	0	; () banked
  2968  000ABE  B0DF               	btfsc	indf2,0,c
  2969  000AC0  D00F               	goto	l369
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;ikb.c: 640: {;ikb.c: 641: key[k].bf.ReadyToRead = 1;
  2973  000AC2  5019               	movf	ikey_parsing@k,w,c
  2974  000AC4  0D10               	mullw	16
  2975  000AC6  50F3               	movf	prodl,w,c
  2976  000AC8  0F6A               	addlw	low (_key+10)
  2977  000ACA  6ED9               	movwf	fsr2l,c
  2978  000ACC  6ADA               	clrf	fsr2h,c
  2979  000ACE  8CDF               	bsf	indf2,6,c
  2980                           
  2981                           ;ikb.c: 642: key[k].sm1 = (2);
  2982  000AD0  5019               	movf	ikey_parsing@k,w,c
  2983  000AD2  0D10               	mullw	16
  2984  000AD4  50F3               	movf	prodl,w,c
  2985  000AD6  0F66               	addlw	low (_key+6)
  2986  000AD8  6ED9               	movwf	fsr2l,c
  2987  000ADA  6ADA               	clrf	fsr2h,c
  2988  000ADC  0E02               	movlw	2
  2989  000ADE  6EDF               	movwf	indf2,c
  2990  000AE0                     l369:
  2991                           
  2992                           ;ikb.c: 643: };ikb.c: 644: };ikb.c: 646: if (key[k].sm1 == (3) )
  2993  000AE0  5019               	movf	ikey_parsing@k,w,c
  2994  000AE2  0D10               	mullw	16
  2995  000AE4  50F3               	movf	prodl,w,c
  2996  000AE6  0F66               	addlw	low (_key+6)
  2997  000AE8  6ED9               	movwf	fsr2l,c
  2998  000AEA  6ADA               	clrf	fsr2h,c
  2999  000AEC  0E03               	movlw	3
  3000  000AEE  18DE               	xorwf	postinc2,w,c
  3001  000AF0  A4D8               	btfss	status,2,c
  3002  000AF2  D09C               	goto	l371
  3003                           
  3004                           ;ikb.c: 647: {;ikb.c: 648: key[k].counter1++;
  3005  000AF4  5019               	movf	ikey_parsing@k,w,c
  3006  000AF6  0D10               	mullw	16
  3007  000AF8  50F3               	movf	prodl,w,c
  3008  000AFA  0F67               	addlw	low (_key+7)
  3009  000AFC  6ED9               	movwf	fsr2l,c
  3010  000AFE  6ADA               	clrf	fsr2h,c
  3011  000B00  2ADE               	incf	postinc2,f,c
  3012  000B02  0E00               	movlw	0
  3013  000B04  22DD               	addwfc	postdec2,f,c
  3014                           
  3015                           ;ikb.c: 650: if (key[k].bf.state == 0)
  3016  000B06  5019               	movf	ikey_parsing@k,w,c
  3017  000B08  0D10               	mullw	16
  3018  000B0A  50F3               	movf	prodl,w,c
  3019  000B0C  0F6A               	addlw	low (_key+10)
  3020  000B0E  6ED9               	movwf	fsr2l,c
  3021  000B10  6ADA               	clrf	fsr2h,c
  3022  000B12  0100               	movlb	0	; () banked
  3023  000B14  B0DF               	btfsc	indf2,0,c
  3024  000B16  D03D               	goto	l2655
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;ikb.c: 651: {;ikb.c: 652: if (key[k].counter1 <= (1000E-3/5E-3) )
  3028  000B18  0E00               	movlw	0
  3029  000B1A  6E0C               	movwf	___ftge@ff1,c
  3030  000B1C  0E48               	movlw	72
  3031  000B1E  6E0D               	movwf	___ftge@ff1+1,c
  3032  000B20  0E43               	movlw	67
  3033  000B22  6E0E               	movwf	___ftge@ff1+2,c
  3034  000B24  5019               	movf	ikey_parsing@k,w,c
  3035  000B26  0D10               	mullw	16
  3036  000B28  50F3               	movf	prodl,w,c
  3037  000B2A  0F67               	addlw	low (_key+7)
  3038  000B2C  6ED9               	movwf	fsr2l,c
  3039  000B2E  6ADA               	clrf	fsr2h,c
  3040  000B30  CFDE F009          	movff	postinc2,___lwtoft@c
  3041  000B34  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3042  000B38  EC12  F00F         	call	___lwtoft	;wreg free
  3043  000B3C  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3044  000B40  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3045  000B44  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3046  000B48  ECBA  F00C         	call	___ftge	;wreg free
  3047  000B4C  A0D8               	btfss	status,0,c
  3048  000B4E  D021               	goto	l2655
  3049                           
  3050                           ;ikb.c: 653: {;ikb.c: 654: key[k].counter1 = 0;
  3051  000B50  5019               	movf	ikey_parsing@k,w,c
  3052  000B52  0D10               	mullw	16
  3053  000B54  50F3               	movf	prodl,w,c
  3054  000B56  0F67               	addlw	low (_key+7)
  3055  000B58  6ED9               	movwf	fsr2l,c
  3056  000B5A  6ADA               	clrf	fsr2h,c
  3057  000B5C  0E00               	movlw	0
  3058  000B5E  6EDE               	movwf	postinc2,c
  3059  000B60  0E00               	movlw	0
  3060  000B62  6EDD               	movwf	postdec2,c
  3061                           
  3062                           ;ikb.c: 656: key[k].bf.ReadyToRead = 1;
  3063  000B64  5019               	movf	ikey_parsing@k,w,c
  3064  000B66  0D10               	mullw	16
  3065  000B68  50F3               	movf	prodl,w,c
  3066  000B6A  0F6A               	addlw	low (_key+10)
  3067  000B6C  6ED9               	movwf	fsr2l,c
  3068  000B6E  6ADA               	clrf	fsr2h,c
  3069  000B70  0100               	movlb	0	; () banked
  3070  000B72  8CDF               	bsf	indf2,6,c
  3071                           
  3072                           ;ikb.c: 657: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3073  000B74  5019               	movf	ikey_parsing@k,w,c
  3074  000B76  0D10               	mullw	16
  3075  000B78  50F3               	movf	prodl,w,c
  3076  000B7A  0F6A               	addlw	low (_key+10)
  3077  000B7C  6ED9               	movwf	fsr2l,c
  3078  000B7E  6ADA               	clrf	fsr2h,c
  3079  000B80  9EDF               	bcf	indf2,7,c
  3080                           
  3081                           ;ikb.c: 659: key[k].sm1 = (2);
  3082  000B82  5019               	movf	ikey_parsing@k,w,c
  3083  000B84  0D10               	mullw	16
  3084  000B86  50F3               	movf	prodl,w,c
  3085  000B88  0F66               	addlw	low (_key+6)
  3086  000B8A  6ED9               	movwf	fsr2l,c
  3087  000B8C  6ADA               	clrf	fsr2h,c
  3088  000B8E  0E02               	movlw	2
  3089  000B90  6EDF               	movwf	indf2,c
  3090  000B92                     l2655:
  3091                           
  3092                           ;ikb.c: 660: };ikb.c: 661: };ikb.c: 663: if (key[k].counter1 > (1000E-3/5E-3) )
  3093  000B92  0E00               	movlw	0
  3094  000B94  6E0C               	movwf	___ftge@ff1,c
  3095  000B96  0E48               	movlw	72
  3096  000B98  6E0D               	movwf	___ftge@ff1+1,c
  3097  000B9A  0E43               	movlw	67
  3098  000B9C  6E0E               	movwf	___ftge@ff1+2,c
  3099  000B9E  5019               	movf	ikey_parsing@k,w,c
  3100  000BA0  0D10               	mullw	16
  3101  000BA2  50F3               	movf	prodl,w,c
  3102  000BA4  0F67               	addlw	low (_key+7)
  3103  000BA6  6ED9               	movwf	fsr2l,c
  3104  000BA8  6ADA               	clrf	fsr2h,c
  3105  000BAA  CFDE F009          	movff	postinc2,___lwtoft@c
  3106  000BAE  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3107  000BB2  EC12  F00F         	call	___lwtoft	;wreg free
  3108  000BB6  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3109  000BBA  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3110  000BBE  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3111  000BC2  ECBA  F00C         	call	___ftge	;wreg free
  3112  000BC6  B0D8               	btfsc	status,0,c
  3113  000BC8  D031               	goto	l371
  3114                           
  3115                           ;ikb.c: 664: {;ikb.c: 665: key[k].counter1 = 0x0000;
  3116  000BCA  5019               	movf	ikey_parsing@k,w,c
  3117  000BCC  0D10               	mullw	16
  3118  000BCE  50F3               	movf	prodl,w,c
  3119  000BD0  0F67               	addlw	low (_key+7)
  3120  000BD2  6ED9               	movwf	fsr2l,c
  3121  000BD4  6ADA               	clrf	fsr2h,c
  3122  000BD6  0E00               	movlw	0
  3123  000BD8  6EDE               	movwf	postinc2,c
  3124  000BDA  0E00               	movlw	0
  3125  000BDC  6EDD               	movwf	postdec2,c
  3126                           
  3127                           ;ikb.c: 667: key[k].bf.ReadyToRead = 1;
  3128  000BDE  5019               	movf	ikey_parsing@k,w,c
  3129  000BE0  0D10               	mullw	16
  3130  000BE2  50F3               	movf	prodl,w,c
  3131  000BE4  0F6A               	addlw	low (_key+10)
  3132  000BE6  6ED9               	movwf	fsr2l,c
  3133  000BE8  6ADA               	clrf	fsr2h,c
  3134  000BEA  0100               	movlb	0	; () banked
  3135  000BEC  8CDF               	bsf	indf2,6,c
  3136                           
  3137                           ;ikb.c: 668: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3138  000BEE  5019               	movf	ikey_parsing@k,w,c
  3139  000BF0  0D10               	mullw	16
  3140  000BF2  50F3               	movf	prodl,w,c
  3141  000BF4  0F6A               	addlw	low (_key+10)
  3142  000BF6  6ED9               	movwf	fsr2l,c
  3143  000BF8  6ADA               	clrf	fsr2h,c
  3144  000BFA  8EDF               	bsf	indf2,7,c
  3145                           
  3146                           ;ikb.c: 670: if (!key[k].bf.Reptt)
  3147  000BFC  5019               	movf	ikey_parsing@k,w,c
  3148  000BFE  0D10               	mullw	16
  3149  000C00  50F3               	movf	prodl,w,c
  3150  000C02  0F6A               	addlw	low (_key+10)
  3151  000C04  6ED9               	movwf	fsr2l,c
  3152  000C06  6ADA               	clrf	fsr2h,c
  3153  000C08  BADF               	btfsc	indf2,5,c
  3154  000C0A  D008               	goto	l2661
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;ikb.c: 671: {;ikb.c: 672: key[k].sm1 = (1);
  3158  000C0C  5019               	movf	ikey_parsing@k,w,c
  3159  000C0E  0D10               	mullw	16
  3160  000C10  50F3               	movf	prodl,w,c
  3161  000C12  0F66               	addlw	low (_key+6)
  3162  000C14  6ED9               	movwf	fsr2l,c
  3163  000C16  6ADA               	clrf	fsr2h,c
  3164  000C18  0E01               	movlw	1
  3165  000C1A  D007               	goto	L3
  3166  000C1C                     l2661:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;ikb.c: 674: else;ikb.c: 675: {;ikb.c: 676: key[k].sm1 = (8);
  3170  000C1C  5019               	movf	ikey_parsing@k,w,c
  3171  000C1E  0D10               	mullw	16
  3172  000C20  50F3               	movf	prodl,w,c
  3173  000C22  0F66               	addlw	low (_key+6)
  3174  000C24  6ED9               	movwf	fsr2l,c
  3175  000C26  6ADA               	clrf	fsr2h,c
  3176  000C28  0E08               	movlw	8
  3177  000C2A                     L3:
  3178  000C2A  6EDF               	movwf	indf2,c
  3179  000C2C                     l371:
  3180                           
  3181                           ;ikb.c: 677: };ikb.c: 678: };ikb.c: 679: };ikb.c: 684: if (key[k].sm1 == (4))
  3182  000C2C  5019               	movf	ikey_parsing@k,w,c
  3183  000C2E  0D10               	mullw	16
  3184  000C30  50F3               	movf	prodl,w,c
  3185  000C32  0F66               	addlw	low (_key+6)
  3186  000C34  6ED9               	movwf	fsr2l,c
  3187  000C36  6ADA               	clrf	fsr2h,c
  3188  000C38  0E04               	movlw	4
  3189  000C3A  18DE               	xorwf	postinc2,w,c
  3190  000C3C  A4D8               	btfss	status,2,c
  3191  000C3E  D08C               	goto	l377
  3192                           
  3193                           ;ikb.c: 685: {;ikb.c: 686: key[k].counter1++;
  3194  000C40  5019               	movf	ikey_parsing@k,w,c
  3195  000C42  0D10               	mullw	16
  3196  000C44  50F3               	movf	prodl,w,c
  3197  000C46  0F67               	addlw	low (_key+7)
  3198  000C48  6ED9               	movwf	fsr2l,c
  3199  000C4A  6ADA               	clrf	fsr2h,c
  3200  000C4C  2ADE               	incf	postinc2,f,c
  3201  000C4E  0E00               	movlw	0
  3202  000C50  22DD               	addwfc	postdec2,f,c
  3203                           
  3204                           ;ikb.c: 688: if (key[k].bf.state == 0)
  3205  000C52  5019               	movf	ikey_parsing@k,w,c
  3206  000C54  0D10               	mullw	16
  3207  000C56  50F3               	movf	prodl,w,c
  3208  000C58  0F6A               	addlw	low (_key+10)
  3209  000C5A  6ED9               	movwf	fsr2l,c
  3210  000C5C  6ADA               	clrf	fsr2h,c
  3211  000C5E  0100               	movlb	0	; () banked
  3212  000C60  B0DF               	btfsc	indf2,0,c
  3213  000C62  D03D               	goto	l2669
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;ikb.c: 689: {;ikb.c: 690: if (key[k].counter1 <= (1000E-3/5E-3))
  3217  000C64  0E00               	movlw	0
  3218  000C66  6E0C               	movwf	___ftge@ff1,c
  3219  000C68  0E48               	movlw	72
  3220  000C6A  6E0D               	movwf	___ftge@ff1+1,c
  3221  000C6C  0E43               	movlw	67
  3222  000C6E  6E0E               	movwf	___ftge@ff1+2,c
  3223  000C70  5019               	movf	ikey_parsing@k,w,c
  3224  000C72  0D10               	mullw	16
  3225  000C74  50F3               	movf	prodl,w,c
  3226  000C76  0F67               	addlw	low (_key+7)
  3227  000C78  6ED9               	movwf	fsr2l,c
  3228  000C7A  6ADA               	clrf	fsr2h,c
  3229  000C7C  CFDE F009          	movff	postinc2,___lwtoft@c
  3230  000C80  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3231  000C84  EC12  F00F         	call	___lwtoft	;wreg free
  3232  000C88  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3233  000C8C  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3234  000C90  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3235  000C94  ECBA  F00C         	call	___ftge	;wreg free
  3236  000C98  A0D8               	btfss	status,0,c
  3237  000C9A  D021               	goto	l2669
  3238                           
  3239                           ;ikb.c: 691: {;ikb.c: 692: key[k].counter1 = 0;
  3240  000C9C  5019               	movf	ikey_parsing@k,w,c
  3241  000C9E  0D10               	mullw	16
  3242  000CA0  50F3               	movf	prodl,w,c
  3243  000CA2  0F67               	addlw	low (_key+7)
  3244  000CA4  6ED9               	movwf	fsr2l,c
  3245  000CA6  6ADA               	clrf	fsr2h,c
  3246  000CA8  0E00               	movlw	0
  3247  000CAA  6EDE               	movwf	postinc2,c
  3248  000CAC  0E00               	movlw	0
  3249  000CAE  6EDD               	movwf	postdec2,c
  3250                           
  3251                           ;ikb.c: 694: key[k].bf.ReadyToRead = 1;
  3252  000CB0  5019               	movf	ikey_parsing@k,w,c
  3253  000CB2  0D10               	mullw	16
  3254  000CB4  50F3               	movf	prodl,w,c
  3255  000CB6  0F6A               	addlw	low (_key+10)
  3256  000CB8  6ED9               	movwf	fsr2l,c
  3257  000CBA  6ADA               	clrf	fsr2h,c
  3258  000CBC  0100               	movlb	0	; () banked
  3259  000CBE  8CDF               	bsf	indf2,6,c
  3260                           
  3261                           ;ikb.c: 695: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3262  000CC0  5019               	movf	ikey_parsing@k,w,c
  3263  000CC2  0D10               	mullw	16
  3264  000CC4  50F3               	movf	prodl,w,c
  3265  000CC6  0F6A               	addlw	low (_key+10)
  3266  000CC8  6ED9               	movwf	fsr2l,c
  3267  000CCA  6ADA               	clrf	fsr2h,c
  3268  000CCC  9EDF               	bcf	indf2,7,c
  3269                           
  3270                           ;ikb.c: 697: key[k].sm1 = (2);
  3271  000CCE  5019               	movf	ikey_parsing@k,w,c
  3272  000CD0  0D10               	mullw	16
  3273  000CD2  50F3               	movf	prodl,w,c
  3274  000CD4  0F66               	addlw	low (_key+6)
  3275  000CD6  6ED9               	movwf	fsr2l,c
  3276  000CD8  6ADA               	clrf	fsr2h,c
  3277  000CDA  0E02               	movlw	2
  3278  000CDC  6EDF               	movwf	indf2,c
  3279  000CDE                     l2669:
  3280                           
  3281                           ;ikb.c: 698: };ikb.c: 699: };ikb.c: 702: if (key[k].counter1 >= (3000E-3/5E-3))
  3282  000CDE  5019               	movf	ikey_parsing@k,w,c
  3283  000CE0  0D10               	mullw	16
  3284  000CE2  50F3               	movf	prodl,w,c
  3285  000CE4  0F67               	addlw	low (_key+7)
  3286  000CE6  6ED9               	movwf	fsr2l,c
  3287  000CE8  6ADA               	clrf	fsr2h,c
  3288  000CEA  CFDE F009          	movff	postinc2,___lwtoft@c
  3289  000CEE  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3290  000CF2  EC12  F00F         	call	___lwtoft	;wreg free
  3291  000CF6  C009  F00C         	movff	?___lwtoft,___ftge@ff1
  3292  000CFA  C00A  F00D         	movff	?___lwtoft+1,___ftge@ff1+1
  3293  000CFE  C00B  F00E         	movff	?___lwtoft+2,___ftge@ff1+2
  3294  000D02  0E00               	movlw	0
  3295  000D04  6E0F               	movwf	___ftge@ff2,c
  3296  000D06  0E16               	movlw	22
  3297  000D08  6E10               	movwf	___ftge@ff2+1,c
  3298  000D0A  0E44               	movlw	68
  3299  000D0C  6E11               	movwf	___ftge@ff2+2,c
  3300  000D0E  ECBA  F00C         	call	___ftge	;wreg free
  3301  000D12  A0D8               	btfss	status,0,c
  3302  000D14  D021               	goto	l377
  3303                           
  3304                           ;ikb.c: 703: {;ikb.c: 704: key[k].counter1 = 0x0000;
  3305  000D16  5019               	movf	ikey_parsing@k,w,c
  3306  000D18  0D10               	mullw	16
  3307  000D1A  50F3               	movf	prodl,w,c
  3308  000D1C  0F67               	addlw	low (_key+7)
  3309  000D1E  6ED9               	movwf	fsr2l,c
  3310  000D20  6ADA               	clrf	fsr2h,c
  3311  000D22  0E00               	movlw	0
  3312  000D24  6EDE               	movwf	postinc2,c
  3313  000D26  0E00               	movlw	0
  3314  000D28  6EDD               	movwf	postdec2,c
  3315                           
  3316                           ;ikb.c: 706: key[k].bf.ReadyToRead = 1;
  3317  000D2A  5019               	movf	ikey_parsing@k,w,c
  3318  000D2C  0D10               	mullw	16
  3319  000D2E  50F3               	movf	prodl,w,c
  3320  000D30  0F6A               	addlw	low (_key+10)
  3321  000D32  6ED9               	movwf	fsr2l,c
  3322  000D34  6ADA               	clrf	fsr2h,c
  3323  000D36  0100               	movlb	0	; () banked
  3324  000D38  8CDF               	bsf	indf2,6,c
  3325                           
  3326                           ;ikb.c: 707: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3327  000D3A  5019               	movf	ikey_parsing@k,w,c
  3328  000D3C  0D10               	mullw	16
  3329  000D3E  50F3               	movf	prodl,w,c
  3330  000D40  0F6A               	addlw	low (_key+10)
  3331  000D42  6ED9               	movwf	fsr2l,c
  3332  000D44  6ADA               	clrf	fsr2h,c
  3333  000D46  8EDF               	bsf	indf2,7,c
  3334                           
  3335                           ;ikb.c: 710: key[k].sm1 = (1);
  3336  000D48  5019               	movf	ikey_parsing@k,w,c
  3337  000D4A  0D10               	mullw	16
  3338  000D4C  50F3               	movf	prodl,w,c
  3339  000D4E  0F66               	addlw	low (_key+6)
  3340  000D50  6ED9               	movwf	fsr2l,c
  3341  000D52  6ADA               	clrf	fsr2h,c
  3342  000D54  0E01               	movlw	1
  3343  000D56  6EDF               	movwf	indf2,c
  3344  000D58                     l377:
  3345                           
  3346                           ;ikb.c: 711: };ikb.c: 712: };ikb.c: 715: if (key[k].sm1 == (1))
  3347  000D58  5019               	movf	ikey_parsing@k,w,c
  3348  000D5A  0D10               	mullw	16
  3349  000D5C  50F3               	movf	prodl,w,c
  3350  000D5E  0F66               	addlw	low (_key+6)
  3351  000D60  6ED9               	movwf	fsr2l,c
  3352  000D62  6ADA               	clrf	fsr2h,c
  3353  000D64  04DE               	decf	postinc2,w,c
  3354  000D66  A4D8               	btfss	status,2,c
  3355  000D68  D011               	goto	l381
  3356                           
  3357                           ;ikb.c: 716: {;ikb.c: 717: if (key[k].bf.state == 0)
  3358  000D6A  5019               	movf	ikey_parsing@k,w,c
  3359  000D6C  0D10               	mullw	16
  3360  000D6E  50F3               	movf	prodl,w,c
  3361  000D70  0F6A               	addlw	low (_key+10)
  3362  000D72  6ED9               	movwf	fsr2l,c
  3363  000D74  6ADA               	clrf	fsr2h,c
  3364  000D76  0100               	movlb	0	; () banked
  3365  000D78  B0DF               	btfsc	indf2,0,c
  3366  000D7A  D008               	goto	l381
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;ikb.c: 718: {;ikb.c: 719: key[k].sm1 = (2);
  3370  000D7C  5019               	movf	ikey_parsing@k,w,c
  3371  000D7E  0D10               	mullw	16
  3372  000D80  50F3               	movf	prodl,w,c
  3373  000D82  0F66               	addlw	low (_key+6)
  3374  000D84  6ED9               	movwf	fsr2l,c
  3375  000D86  6ADA               	clrf	fsr2h,c
  3376  000D88  0E02               	movlw	2
  3377  000D8A  6EDF               	movwf	indf2,c
  3378  000D8C                     l381:
  3379                           
  3380                           ;ikb.c: 720: };ikb.c: 721: };ikb.c: 723: if (key[k].sm1 == (2))
  3381  000D8C  5019               	movf	ikey_parsing@k,w,c
  3382  000D8E  0D10               	mullw	16
  3383  000D90  50F3               	movf	prodl,w,c
  3384  000D92  0F66               	addlw	low (_key+6)
  3385  000D94  6ED9               	movwf	fsr2l,c
  3386  000D96  6ADA               	clrf	fsr2h,c
  3387  000D98  0E02               	movlw	2
  3388  000D9A  18DE               	xorwf	postinc2,w,c
  3389  000D9C  A4D8               	btfss	status,2,c
  3390  000D9E  D011               	goto	l383
  3391                           
  3392                           ;ikb.c: 724: {;ikb.c: 725: if (key[k].bf.ReadyToRead == 0)
  3393  000DA0  5019               	movf	ikey_parsing@k,w,c
  3394  000DA2  0D10               	mullw	16
  3395  000DA4  50F3               	movf	prodl,w,c
  3396  000DA6  0F6A               	addlw	low (_key+10)
  3397  000DA8  6ED9               	movwf	fsr2l,c
  3398  000DAA  6ADA               	clrf	fsr2h,c
  3399  000DAC  0100               	movlb	0	; () banked
  3400  000DAE  BCDF               	btfsc	indf2,6,c
  3401  000DB0  D008               	goto	l383
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;ikb.c: 726: {;ikb.c: 727: key[k].sm1 = (9);
  3405  000DB2  5019               	movf	ikey_parsing@k,w,c
  3406  000DB4  0D10               	mullw	16
  3407  000DB6  50F3               	movf	prodl,w,c
  3408  000DB8  0F66               	addlw	low (_key+6)
  3409  000DBA  6ED9               	movwf	fsr2l,c
  3410  000DBC  6ADA               	clrf	fsr2h,c
  3411  000DBE  0E09               	movlw	9
  3412  000DC0  6EDF               	movwf	indf2,c
  3413  000DC2                     l383:
  3414                           
  3415                           ;ikb.c: 728: };ikb.c: 729: };ikb.c: 731: if (key[k].sm1 == (9))
  3416  000DC2  5019               	movf	ikey_parsing@k,w,c
  3417  000DC4  0D10               	mullw	16
  3418  000DC6  50F3               	movf	prodl,w,c
  3419  000DC8  0F66               	addlw	low (_key+6)
  3420  000DCA  6ED9               	movwf	fsr2l,c
  3421  000DCC  6ADA               	clrf	fsr2h,c
  3422  000DCE  0E09               	movlw	9
  3423  000DD0  18DE               	xorwf	postinc2,w,c
  3424  000DD2  A4D8               	btfss	status,2,c
  3425  000DD4  D02F               	goto	l2685
  3426                           
  3427                           ;ikb.c: 732: {;ikb.c: 733: if (key[k].num_group_x > 0)
  3428  000DD6  5019               	movf	ikey_parsing@k,w,c
  3429  000DD8  0D10               	mullw	16
  3430  000DDA  50F3               	movf	prodl,w,c
  3431  000DDC  0F69               	addlw	low (_key+9)
  3432  000DDE  6ED9               	movwf	fsr2l,c
  3433  000DE0  6ADA               	clrf	fsr2h,c
  3434  000DE2  50DF               	movf	indf2,w,c
  3435  000DE4  B4D8               	btfsc	status,2,c
  3436  000DE6  D016               	goto	l386
  3437                           
  3438                           ;ikb.c: 734: {;ikb.c: 735: group_x[key[k].num_group_x] = 0;
  3439  000DE8  5019               	movf	ikey_parsing@k,w,c
  3440  000DEA  0D10               	mullw	16
  3441  000DEC  50F3               	movf	prodl,w,c
  3442  000DEE  0F69               	addlw	low (_key+9)
  3443  000DF0  6ED9               	movwf	fsr2l,c
  3444  000DF2  6ADA               	clrf	fsr2h,c
  3445  000DF4  50DF               	movf	indf2,w,c
  3446  000DF6  6E15               	movwf	??_ikey_parsing& (0+255),c
  3447  000DF8  5015               	movf	??_ikey_parsing,w,c
  3448  000DFA  0F48               	addlw	low _group_x
  3449  000DFC  6ED9               	movwf	fsr2l,c
  3450  000DFE  6ADA               	clrf	fsr2h,c
  3451  000E00  0E00               	movlw	0
  3452  000E02  6EDF               	movwf	indf2,c
  3453                           
  3454                           ;ikb.c: 736: key[k].bf.OwnerOfGroup = 0;
  3455  000E04  5019               	movf	ikey_parsing@k,w,c
  3456  000E06  0D10               	mullw	16
  3457  000E08  50F3               	movf	prodl,w,c
  3458  000E0A  0F6B               	addlw	low (_key+11)
  3459  000E0C  6ED9               	movwf	fsr2l,c
  3460  000E0E  6ADA               	clrf	fsr2h,c
  3461  000E10  0100               	movlb	0	; () banked
  3462  000E12  90DF               	bcf	indf2,0,c
  3463  000E14                     l386:
  3464                           
  3465                           ;ikb.c: 737: };ikb.c: 739: key[k].sm1 = (0);
  3466  000E14  5019               	movf	ikey_parsing@k,w,c
  3467  000E16  0D10               	mullw	16
  3468  000E18  50F3               	movf	prodl,w,c
  3469  000E1A  0F66               	addlw	low (_key+6)
  3470  000E1C  6ED9               	movwf	fsr2l,c
  3471  000E1E  6ADA               	clrf	fsr2h,c
  3472  000E20  0E00               	movlw	0
  3473  000E22  6EDF               	movwf	indf2,c
  3474                           
  3475                           ;ikb.c: 742: key[k].bf.InProcessing = 0;
  3476  000E24  5019               	movf	ikey_parsing@k,w,c
  3477  000E26  0D10               	mullw	16
  3478  000E28  50F3               	movf	prodl,w,c
  3479  000E2A  0F6B               	addlw	low (_key+11)
  3480  000E2C  6ED9               	movwf	fsr2l,c
  3481  000E2E  6ADA               	clrf	fsr2h,c
  3482  000E30  0100               	movlb	0	; () banked
  3483  000E32  92DF               	bcf	indf2,1,c
  3484  000E34                     l2685:
  3485  000E34  2A19               	incf	ikey_parsing@k,f,c
  3486  000E36  0E04               	movlw	4
  3487  000E38  6419               	cpfsgt	ikey_parsing@k,c
  3488  000E3A  D4EB               	goto	l2599
  3489  000E3C  0012               	return	
  3490  000E3E                     __end_of_ikey_parsing:
  3491                           	opt callstack 0
  3492                           
  3493 ;; *************** function _ikey_is_accessible *****************
  3494 ;; Defined at:
  3495 ;;		line 510 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  k               1    wreg     unsigned char 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  k               1    2[COMRAM] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      unsigned char 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3509 ;;      Params:         0       0       0       0       0       0       0       0       0
  3510 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3511 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3512 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3513 ;;Total ram usage:        3 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_ikey_parsing
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text24
  3524  001B54                     __ptext24:
  3525                           	opt callstack 0
  3526  001B54                     _ikey_is_accessible:
  3527                           	opt callstack 27
  3528                           
  3529                           ;incstack = 0
  3530                           ;ikey_is_accessible@k stored from wreg
  3531  001B54  6E03               	movwf	ikey_is_accessible@k,c
  3532                           
  3533                           ;ikb.c: 512: if (key[k].num_group_x != 0)
  3534  001B56  5003               	movf	ikey_is_accessible@k,w,c
  3535  001B58  0D10               	mullw	16
  3536  001B5A  50F3               	movf	prodl,w,c
  3537  001B5C  0F69               	addlw	low (_key+9)
  3538  001B5E  6ED9               	movwf	fsr2l,c
  3539  001B60  6ADA               	clrf	fsr2h,c
  3540  001B62  50DF               	movf	indf2,w,c
  3541  001B64  B4D8               	btfsc	status,2,c
  3542  001B66  D01A               	goto	l2359
  3543                           
  3544                           ;ikb.c: 513: {;ikb.c: 515: if (group_x[key[k].num_group_x] == 1)
  3545  001B68  5003               	movf	ikey_is_accessible@k,w,c
  3546  001B6A  0D10               	mullw	16
  3547  001B6C  50F3               	movf	prodl,w,c
  3548  001B6E  0F69               	addlw	low (_key+9)
  3549  001B70  6ED9               	movwf	fsr2l,c
  3550  001B72  6ADA               	clrf	fsr2h,c
  3551  001B74  50DF               	movf	indf2,w,c
  3552  001B76  6E01               	movwf	??_ikey_is_accessible& (0+255),c
  3553  001B78  5001               	movf	??_ikey_is_accessible,w,c
  3554  001B7A  0F48               	addlw	low _group_x
  3555  001B7C  6ED9               	movwf	fsr2l,c
  3556  001B7E  6ADA               	clrf	fsr2h,c
  3557  001B80  04DE               	decf	postinc2,w,c
  3558  001B82  A4D8               	btfss	status,2,c
  3559  001B84  D00B               	goto	l2359
  3560                           
  3561                           ;ikb.c: 516: {;ikb.c: 518: if ( !key[k].bf.OwnerOfGroup)
  3562  001B86  5003               	movf	ikey_is_accessible@k,w,c
  3563  001B88  0D10               	mullw	16
  3564  001B8A  50F3               	movf	prodl,w,c
  3565  001B8C  0F6B               	addlw	low (_key+11)
  3566  001B8E  6ED9               	movwf	fsr2l,c
  3567  001B90  6ADA               	clrf	fsr2h,c
  3568  001B92  0100               	movlb	0	; () banked
  3569  001B94  B0DF               	btfsc	indf2,0,c
  3570  001B96  D002               	goto	l2359
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;ikb.c: 519: {;ikb.c: 520: return 0;
  3574  001B98  0E00               	movlw	0
  3575  001B9A  0012               	return	
  3576  001B9C                     l2359:
  3577                           
  3578                           ;ikb.c: 521: };ikb.c: 522: };ikb.c: 523: };ikb.c: 524: return 1;
  3579  001B9C  0E01               	movlw	1
  3580  001B9E  0012               	return		;funcret
  3581  001BA0                     __end_of_ikey_is_accessible:
  3582                           	opt callstack 0
  3583                           
  3584 ;; *************** function ___lwtoft *****************
  3585 ;; Defined at:
  3586 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  c               2    8[COMRAM] unsigned int 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  3    8[COMRAM] float 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3600 ;;      Params:         3       0       0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3603 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3604 ;;Total ram usage:        3 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    2
  3607 ;; This function calls:
  3608 ;;		___ftpack
  3609 ;; This function is called by:
  3610 ;;		_ikey_parsing
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text25
  3615  001E24                     __ptext25:
  3616                           	opt callstack 0
  3617  001E24                     ___lwtoft:
  3618                           	opt callstack 26
  3619                           
  3620                           ;incstack = 0
  3621  001E24  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  3622  001E28  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  3623  001E2C  6A03               	clrf	___ftpack@arg+2,c
  3624  001E2E  0E8E               	movlw	142
  3625  001E30  6E04               	movwf	___ftpack@exp,c
  3626  001E32  0E00               	movlw	0
  3627  001E34  6E05               	movwf	___ftpack@sign,c
  3628  001E36  ECC9  F00B         	call	___ftpack	;wreg free
  3629  001E3A  C001  F009         	movff	?___ftpack,?___lwtoft
  3630  001E3E  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  3631  001E42  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  3632  001E46  0012               	return		;funcret
  3633  001E48                     __end_of___lwtoft:
  3634                           	opt callstack 0
  3635                           
  3636 ;; *************** function _ikb_init *****************
  3637 ;; Defined at:
  3638 ;;		line 217 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  i               1    0[COMRAM] char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 3F/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0
  3653 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3655 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3656 ;;Total ram usage:        1 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    1
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text26
  3667  0016DC                     __ptext26:
  3668                           	opt callstack 0
  3669  0016DC                     _ikb_init:
  3670                           	opt callstack 29
  3671                           
  3672                           ;incstack = 0
  3673                           ;ikb.c: 219: int8_t i;;ikb.c: 389: do{TRISC |= 1<<4;}while(0);
  3674  0016DC  8894               	bsf	3988,4,c	;volatile
  3675                           
  3676                           ;ikb.c: 390: do{TRISC |= 1<<5;}while(0);
  3677  0016DE  8A94               	bsf	3988,5,c	;volatile
  3678                           
  3679                           ;ikb.c: 391: do{TRISC |= 1<<6;}while(0);
  3680  0016E0  8C94               	bsf	3988,6,c	;volatile
  3681                           
  3682                           ;ikb.c: 392: do{TRISC |= 1<<7;}while(0);
  3683  0016E2  8E94               	bsf	3988,7,c	;volatile
  3684                           
  3685                           ;ikb.c: 393: do{TRISD |= 1<<4;}while(0);
  3686  0016E4  8895               	bsf	3989,4,c	;volatile
  3687                           
  3688                           ;ikb.c: 394: key[0].keyRead = keyRead_pin_key1;
  3689  0016E6  0E24               	movlw	low _keyRead_pin_key1
  3690  0016E8  0100               	movlb	0	; () banked
  3691  0016EA  6F60               	movwf	_key& (0+255),b	;volatile
  3692  0016EC  0E1F               	movlw	high _keyRead_pin_key1
  3693  0016EE  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;ikb.c: 395: key[1].keyRead = keyRead_pin_key2;
  3697  0016F0  0E1A               	movlw	low _keyRead_pin_key2
  3698  0016F2  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3699  0016F4  0E1F               	movlw	high _keyRead_pin_key2
  3700  0016F6  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;ikb.c: 396: key[2].keyRead = keyRead_pin_key3;
  3704  0016F8  0E10               	movlw	low _keyRead_pin_key3
  3705  0016FA  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3706  0016FC  0E1F               	movlw	high _keyRead_pin_key3
  3707  0016FE  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;ikb.c: 397: key[3].keyRead = keyRead_pin_key4;
  3711  001700  0E34               	movlw	low _keyRead_pin_key4
  3712  001702  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3713  001704  0E1F               	movlw	high _keyRead_pin_key4
  3714  001706  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;ikb.c: 398: key[4].keyRead = keyRead_pin_key5;
  3718  001708  0E2C               	movlw	low _keyRead_pin_key5
  3719  00170A  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3720  00170C  0E1F               	movlw	high _keyRead_pin_key5
  3721  00170E  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;ikb.c: 401: for (i=0; i<5; i++)
  3725  001710  0E00               	movlw	0
  3726  001712  6E01               	movwf	ikb_init@i,c
  3727  001714                     l2911:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;ikb.c: 402: {;ikb.c: 403: key[i].bf.OnKeyPressed = 1;
  3731  001714  5001               	movf	ikb_init@i,w,c
  3732  001716  0D10               	mullw	16
  3733  001718  50F3               	movf	prodl,w,c
  3734  00171A  0F6A               	addlw	low (_key+10)
  3735  00171C  6ED9               	movwf	fsr2l,c
  3736  00171E  6ADA               	clrf	fsr2h,c
  3737  001720  82DF               	bsf	indf2,1,c
  3738                           
  3739                           ;ikb.c: 404: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3740  001722  5001               	movf	ikb_init@i,w,c
  3741  001724  0D10               	mullw	16
  3742  001726  50F3               	movf	prodl,w,c
  3743  001728  0F6A               	addlw	low (_key+10)
  3744  00172A  6ED9               	movwf	fsr2l,c
  3745  00172C  6ADA               	clrf	fsr2h,c
  3746  00172E  94DF               	bcf	indf2,2,c
  3747                           
  3748                           ;ikb.c: 405: key[i].bf.AtTimeExpired = 0;
  3749  001730  5001               	movf	ikb_init@i,w,c
  3750  001732  0D10               	mullw	16
  3751  001734  50F3               	movf	prodl,w,c
  3752  001736  0F6A               	addlw	low (_key+10)
  3753  001738  6ED9               	movwf	fsr2l,c
  3754  00173A  6ADA               	clrf	fsr2h,c
  3755  00173C  96DF               	bcf	indf2,3,c
  3756                           
  3757                           ;ikb.c: 406: key[i].bf.Reptt = 0;
  3758  00173E  5001               	movf	ikb_init@i,w,c
  3759  001740  0D10               	mullw	16
  3760  001742  50F3               	movf	prodl,w,c
  3761  001744  0F6A               	addlw	low (_key+10)
  3762  001746  6ED9               	movwf	fsr2l,c
  3763  001748  6ADA               	clrf	fsr2h,c
  3764  00174A  9ADF               	bcf	indf2,5,c
  3765                           
  3766                           ;ikb.c: 407: key[i].num_group_x = 0;
  3767  00174C  5001               	movf	ikb_init@i,w,c
  3768  00174E  0D10               	mullw	16
  3769  001750  50F3               	movf	prodl,w,c
  3770  001752  0F69               	addlw	low (_key+9)
  3771  001754  6ED9               	movwf	fsr2l,c
  3772  001756  6ADA               	clrf	fsr2h,c
  3773  001758  0E00               	movlw	0
  3774  00175A  6EDF               	movwf	indf2,c
  3775                           
  3776                           ;ikb.c: 408: key[i].repp.to_start= (uint16_t)500.0/5;
  3777  00175C  5001               	movf	ikb_init@i,w,c
  3778  00175E  0D10               	mullw	16
  3779  001760  50F3               	movf	prodl,w,c
  3780  001762  0F6C               	addlw	low (_key+12)
  3781  001764  6ED9               	movwf	fsr2l,c
  3782  001766  6ADA               	clrf	fsr2h,c
  3783  001768  0E64               	movlw	100
  3784  00176A  6EDE               	movwf	postinc2,c
  3785  00176C  0E00               	movlw	0
  3786  00176E  6EDD               	movwf	postdec2,c
  3787                           
  3788                           ;ikb.c: 409: key[i].repp.after_start = (uint16_t)200.0/5;
  3789  001770  5001               	movf	ikb_init@i,w,c
  3790  001772  0D10               	mullw	16
  3791  001774  50F3               	movf	prodl,w,c
  3792  001776  0F6E               	addlw	low (_key+14)
  3793  001778  6ED9               	movwf	fsr2l,c
  3794  00177A  6ADA               	clrf	fsr2h,c
  3795  00177C  0E28               	movlw	40
  3796  00177E  6EDE               	movwf	postinc2,c
  3797  001780  0E00               	movlw	0
  3798  001782  6EDD               	movwf	postdec2,c
  3799                           
  3800                           ; BSR set to: 0
  3801  001784  2A01               	incf	ikb_init@i,f,c
  3802                           
  3803                           ; BSR set to: 0
  3804  001786  5001               	movf	ikb_init@i,w,c
  3805  001788  0A80               	xorlw	128
  3806  00178A  0F7B               	addlw	-133
  3807  00178C  B0D8               	btfsc	status,0,c
  3808  00178E  0012               	return	
  3809  001790  D7C1               	goto	l2911
  3810  001792                     __end_of_ikb_init:
  3811                           	opt callstack 0
  3812                           
  3813 ;; *************** function _ikb_flush *****************
  3814 ;; Defined at:
  3815 ;;		line 419 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 3F/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    2
  3836 ;; This function calls:
  3837 ;;		_ikey_clear_all_flag
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text27
  3844  001F3A                     __ptext27:
  3845                           	opt callstack 0
  3846  001F3A                     _ikb_flush:
  3847                           	opt callstack 28
  3848                           
  3849                           ;ikb.c: 421: ikey_clear_all_flag();
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;incstack = 0
  3853  001F3A  EC24  F00F         	call	_ikey_clear_all_flag	;wreg free
  3854                           
  3855                           ; BSR set to: 0
  3856  001F3E  0012               	return		;funcret
  3857  001F40                     __end_of_ikb_flush:
  3858                           	opt callstack 0
  3859                           
  3860 ;; *************** function _ikey_clear_all_flag *****************
  3861 ;; Defined at:
  3862 ;;		line 761 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  i               1    0[COMRAM] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 3F/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0
  3877 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3879 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3880 ;;Total ram usage:        1 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    1
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_ikb_flush
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text28
  3891  001E48                     __ptext28:
  3892                           	opt callstack 0
  3893  001E48                     _ikey_clear_all_flag:
  3894                           	opt callstack 28
  3895                           
  3896                           ;ikb.c: 763: uint8_t i;;ikb.c: 764: for (i=0; i<5; i++)
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;incstack = 0
  3900  001E48  0E00               	movlw	0
  3901  001E4A  6E01               	movwf	ikey_clear_all_flag@i,c
  3902  001E4C                     l2695:
  3903                           
  3904                           ;ikb.c: 765: {;ikb.c: 767: key[i].bf.ReadyToRead = 0;
  3905  001E4C  5001               	movf	ikey_clear_all_flag@i,w,c
  3906  001E4E  0D10               	mullw	16
  3907  001E50  50F3               	movf	prodl,w,c
  3908  001E52  0F6A               	addlw	low (_key+10)
  3909  001E54  6ED9               	movwf	fsr2l,c
  3910  001E56  6ADA               	clrf	fsr2h,c
  3911  001E58  0100               	movlb	0	; () banked
  3912  001E5A  9CDF               	bcf	indf2,6,c
  3913                           
  3914                           ; BSR set to: 0
  3915  001E5C  2A01               	incf	ikey_clear_all_flag@i,f,c
  3916                           
  3917                           ; BSR set to: 0
  3918  001E5E  0E04               	movlw	4
  3919  001E60  6401               	cpfsgt	ikey_clear_all_flag@i,c
  3920  001E62  D7F4               	goto	l2695
  3921  001E64  0012               	return	
  3922  001E66                     __end_of_ikey_clear_all_flag:
  3923                           	opt callstack 0
  3924                           
  3925 ;; *************** function _display7s_job *****************
  3926 ;; Defined at:
  3927 ;;		line 179 in file "pulsonic.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3944 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    3
  3948 ;; This function calls:
  3949 ;;		_multiplexedDisp_job
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text29
  3956  001DFE                     __ptext29:
  3957                           	opt callstack 0
  3958  001DFE                     _display7s_job:
  3959                           	opt callstack 27
  3960                           
  3961                           ;pulsonic.c: 181: static int8_t q;;pulsonic.c: 183: LATB = pulsonic.display7s[q];
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;incstack = 0
  3965  001DFE  0E76               	movlw	low (_pulsonic+118)
  3966  001E00  244F               	addwf	display7s_job@q,w,c
  3967  001E02  6ED9               	movwf	fsr2l,c
  3968  001E04  6ADA               	clrf	fsr2h,c
  3969  001E06  0E01               	movlw	high (_pulsonic+118)
  3970  001E08  22DA               	addwfc	fsr2h,f,c
  3971  001E0A  50DF               	movf	indf2,w,c
  3972  001E0C  6E8A               	movwf	3978,c	;volatile
  3973                           
  3974                           ;pulsonic.c: 184: multiplexedDisp_job(q);
  3975  001E0E  504F               	movf	display7s_job@q,w,c
  3976  001E10  EC20  F00C         	call	_multiplexedDisp_job
  3977                           
  3978                           ;pulsonic.c: 186: if (++q == (2 + 3))
  3979  001E14  2A4F               	incf	display7s_job@q,f,c
  3980  001E16  0E05               	movlw	5
  3981  001E18  184F               	xorwf	display7s_job@q,w,c
  3982  001E1A  A4D8               	btfss	status,2,c
  3983  001E1C  0012               	return	
  3984                           
  3985                           ;pulsonic.c: 187: {q=0;}
  3986  001E1E  0E00               	movlw	0
  3987  001E20  6E4F               	movwf	display7s_job@q,c
  3988  001E22  0012               	return		;funcret
  3989  001E24                     __end_of_display7s_job:
  3990                           	opt callstack 0
  3991                           
  3992 ;; *************** function _multiplexedDisp_job *****************
  3993 ;; Defined at:
  3994 ;;		line 150 in file "pulsonic.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  q               1    wreg     char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  q               1    6[COMRAM] char 
  3999 ;;  i               1    7[COMRAM] char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4009 ;;      Params:         0       0       0       0       0       0       0       0       0
  4010 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4011 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4012 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4013 ;;Total ram usage:        8 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    2
  4016 ;; This function calls:
  4017 ;;		_multiplexedDisp0_off
  4018 ;;		_multiplexedDisp0_on
  4019 ;;		_multiplexedDisp1_off
  4020 ;;		_multiplexedDisp1_on
  4021 ;;		_multiplexedDisp2_off
  4022 ;;		_multiplexedDisp2_on
  4023 ;;		_multiplexedDisp3_off
  4024 ;;		_multiplexedDisp3_on
  4025 ;;		_multiplexedDisp4_off
  4026 ;;		_multiplexedDisp4_on
  4027 ;; This function is called by:
  4028 ;;		_display7s_job
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text30
  4033  001840                     __ptext30:
  4034                           	opt callstack 0
  4035  001840                     _multiplexedDisp_job:
  4036                           	opt callstack 27
  4037                           
  4038                           ;incstack = 0
  4039                           ;multiplexedDisp_job@q stored from wreg
  4040  001840  6E07               	movwf	multiplexedDisp_job@q,c
  4041                           
  4042                           ;pulsonic.c: 152: int8_t i;;pulsonic.c: 153: for (i=0; i< (2 + 3); i++)
  4043  001842  0E00               	movlw	0
  4044  001844  6E08               	movwf	multiplexedDisp_job@i,c
  4045  001846                     l2721:
  4046                           
  4047                           ;pulsonic.c: 154: {;pulsonic.c: 155: if ((0x01<<i) & (0x1<<q))
  4048  001846  C007  F001         	movff	multiplexedDisp_job@q,??_multiplexedDisp_job
  4049  00184A  0E01               	movlw	1
  4050  00184C  6E02               	movwf	(??_multiplexedDisp_job+1)& (0+255),c
  4051  00184E  0E00               	movlw	0
  4052  001850  6E03               	movwf	(??_multiplexedDisp_job+2)& (0+255),c
  4053  001852  2A01               	incf	??_multiplexedDisp_job,f,c
  4054  001854  D003               	goto	u2654
  4055  001856                     u2655:
  4056  001856  90D8               	bcf	status,0,c
  4057  001858  3602               	rlcf	??_multiplexedDisp_job+1,f,c
  4058  00185A  3603               	rlcf	??_multiplexedDisp_job+2,f,c
  4059  00185C                     u2654:
  4060  00185C  2E01               	decfsz	??_multiplexedDisp_job,f,c
  4061  00185E  D7FB               	goto	u2655
  4062  001860  C008  F004         	movff	multiplexedDisp_job@i,??_multiplexedDisp_job+3
  4063  001864  0E01               	movlw	1
  4064  001866  6E05               	movwf	(??_multiplexedDisp_job+4)& (0+255),c
  4065  001868  0E00               	movlw	0
  4066  00186A  6E06               	movwf	(??_multiplexedDisp_job+5)& (0+255),c
  4067  00186C  2A04               	incf	??_multiplexedDisp_job+3,f,c
  4068  00186E  D003               	goto	u2664
  4069  001870                     u2665:
  4070  001870  90D8               	bcf	status,0,c
  4071  001872  3605               	rlcf	??_multiplexedDisp_job+4,f,c
  4072  001874  3606               	rlcf	??_multiplexedDisp_job+5,f,c
  4073  001876                     u2664:
  4074  001876  2E04               	decfsz	??_multiplexedDisp_job+3,f,c
  4075  001878  D7FB               	goto	u2665
  4076  00187A  5002               	movf	??_multiplexedDisp_job+1,w,c
  4077  00187C  1605               	andwf	??_multiplexedDisp_job+4,f,c
  4078  00187E  5003               	movf	??_multiplexedDisp_job+2,w,c
  4079  001880  1606               	andwf	??_multiplexedDisp_job+5,f,c
  4080  001882  5005               	movf	??_multiplexedDisp_job+4,w,c
  4081  001884  1006               	iorwf	??_multiplexedDisp_job+5,w,c
  4082  001886  B4D8               	btfsc	status,2,c
  4083  001888  D012               	goto	l2725
  4084                           
  4085                           ;pulsonic.c: 156: multiplexedDisp[i].Qonoff[1]();
  4086  00188A  5008               	movf	multiplexedDisp_job@i,w,c
  4087  00188C  0D04               	mullw	4
  4088  00188E  50F3               	movf	prodl,w,c
  4089  001890  0FB2               	addlw	low (_multiplexedDisp+2)
  4090  001892  6ED9               	movwf	fsr2l,c
  4091  001894  6ADA               	clrf	fsr2h,c
  4092  001896  D801               	call	u2688
  4093  001898  D01C               	goto	u2699
  4094  00189A                     u2688:
  4095  00189A  0005               	push	
  4096  00189C  6EFA               	movwf	pclath,c
  4097  00189E  50DE               	movf	postinc2,w,c
  4098  0018A0  6EFD               	movwf	tosl,c
  4099  0018A2  50DE               	movf	postinc2,w,c
  4100  0018A4  6EFE               	movwf	tosh,c
  4101  0018A6  50F8               	movf	tblptru,w,c
  4102  0018A8  6EFF               	movwf	tosu,c
  4103  0018AA  50FA               	movf	pclath,w,c
  4104  0018AC  0012               	return		;indir
  4105  0018AE                     l2725:
  4106                           
  4107                           ;pulsonic.c: 157: else;pulsonic.c: 158: multiplexedDisp[i].Qonoff[0]();
  4108  0018AE  5008               	movf	multiplexedDisp_job@i,w,c
  4109  0018B0  0D04               	mullw	4
  4110  0018B2  50F3               	movf	prodl,w,c
  4111  0018B4  0FB0               	addlw	low _multiplexedDisp
  4112  0018B6  6ED9               	movwf	fsr2l,c
  4113  0018B8  6ADA               	clrf	fsr2h,c
  4114  0018BA  D801               	call	u2698
  4115  0018BC  D00A               	goto	u2699
  4116  0018BE                     u2698:
  4117  0018BE  0005               	push	
  4118  0018C0  6EFA               	movwf	pclath,c
  4119  0018C2  50DE               	movf	postinc2,w,c
  4120  0018C4  6EFD               	movwf	tosl,c
  4121  0018C6  50DE               	movf	postinc2,w,c
  4122  0018C8  6EFE               	movwf	tosh,c
  4123  0018CA  50F8               	movf	tblptru,w,c
  4124  0018CC  6EFF               	movwf	tosu,c
  4125  0018CE  50FA               	movf	pclath,w,c
  4126  0018D0  0012               	return		;indir
  4127  0018D2                     u2699:
  4128  0018D2  2A08               	incf	multiplexedDisp_job@i,f,c
  4129  0018D4  5008               	movf	multiplexedDisp_job@i,w,c
  4130  0018D6  0A80               	xorlw	128
  4131  0018D8  0F7B               	addlw	-133
  4132  0018DA  B0D8               	btfsc	status,0,c
  4133  0018DC  0012               	return	
  4134  0018DE  D7B3               	goto	l2721
  4135  0018E0                     __end_of_multiplexedDisp_job:
  4136                           	opt callstack 0
  4137                           
  4138 ;; *************** function _display7s_init *****************
  4139 ;; Defined at:
  4140 ;;		line 166 in file "pulsonic.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 3F/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:    3
  4161 ;; This function calls:
  4162 ;;		_multiplexedDisp_init
  4163 ;; This function is called by:
  4164 ;;		_main
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text31
  4169  001B04                     __ptext31:
  4170                           	opt callstack 0
  4171  001B04                     _display7s_init:
  4172                           	opt callstack 27
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;pulsonic.c: 168: pulsonic.display7s[MODE_DIG_1] = DISP7S_NUMS[2];
  4176                           
  4177                           ;incstack = 0
  4178  001B04  0E03               	movlw	low (_DISP7S_NUMS+2)
  4179  001B06  6EF6               	movwf	tblptrl,c
  4180  001B08                     	if	1	;There is more than 1 active tblptr byte
  4181  001B08  0E08               	movlw	high __smallconst
  4182  001B0A  6EF7               	movwf	tblptrh,c
  4183  001B0C                     	endif
  4184  001B0C                     	if	0	;tblptru may be non-zero
  4185  001B0C                     	endif
  4186  001B0C                     	if	0	;tblptru may be non-zero
  4187  001B0C                     	endif
  4188  001B0C  0008               	tblrd		*
  4189  001B0E  CFF5 F177          	movff	tablat,_pulsonic+119
  4190                           
  4191                           ;pulsonic.c: 169: pulsonic.display7s[MODE_DIG_0] = DISP7S_NUMS[0];
  4192  001B12  0E01               	movlw	low _DISP7S_NUMS
  4193  001B14  6EF6               	movwf	tblptrl,c
  4194  001B16                     	if	1	;There is more than 1 active tblptr byte
  4195  001B16  0E08               	movlw	high _DISP7S_NUMS
  4196  001B18  6EF7               	movwf	tblptrh,c
  4197  001B1A                     	endif
  4198  001B1A                     	if	0	;There are less than 3 active tblptr bytes
  4199  001B1A                     	endif
  4200  001B1A  0008               	tblrd		*
  4201  001B1C  CFF5 F176          	movff	tablat,_pulsonic+118
  4202                           
  4203                           ;pulsonic.c: 171: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[RAYA];
  4204  001B20  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4205  001B22  6EF6               	movwf	tblptrl,c
  4206  001B24                     	if	1	;There is more than 1 active tblptr byte
  4207  001B24  0E08               	movlw	high __smallconst
  4208  001B26  6EF7               	movwf	tblptrh,c
  4209  001B28                     	endif
  4210  001B28                     	if	0	;tblptru may be non-zero
  4211  001B28                     	endif
  4212  001B28                     	if	0	;tblptru may be non-zero
  4213  001B28                     	endif
  4214  001B28  0008               	tblrd		*
  4215  001B2A  CFF5 F178          	movff	tablat,_pulsonic+120
  4216                           
  4217                           ;pulsonic.c: 172: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[RAYA];
  4218  001B2E  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4219  001B30  6EF6               	movwf	tblptrl,c
  4220  001B32                     	if	1	;There is more than 1 active tblptr byte
  4221  001B32  0E08               	movlw	high __smallconst
  4222  001B34  6EF7               	movwf	tblptrh,c
  4223  001B36                     	endif
  4224  001B36                     	if	0	;tblptru may be non-zero
  4225  001B36                     	endif
  4226  001B36                     	if	0	;tblptru may be non-zero
  4227  001B36                     	endif
  4228  001B36  0008               	tblrd		*
  4229  001B38  CFF5 F177          	movff	tablat,_pulsonic+119
  4230                           
  4231                           ;pulsonic.c: 173: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[RAYA];
  4232  001B3C  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4233  001B3E  6EF6               	movwf	tblptrl,c
  4234  001B40                     	if	1	;There is more than 1 active tblptr byte
  4235  001B40  0E08               	movlw	high __smallconst
  4236  001B42  6EF7               	movwf	tblptrh,c
  4237  001B44                     	endif
  4238  001B44                     	if	0	;tblptru may be non-zero
  4239  001B44                     	endif
  4240  001B44                     	if	0	;tblptru may be non-zero
  4241  001B44                     	endif
  4242  001B44  0008               	tblrd		*
  4243  001B46  CFF5 F176          	movff	tablat,_pulsonic+118
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;pulsonic.c: 175: TRISB = 0x00;
  4247  001B4A  0E00               	movlw	0
  4248  001B4C  6E93               	movwf	3987,c	;volatile
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;pulsonic.c: 176: multiplexedDisp_init();
  4252  001B4E  EC36  F00E         	call	_multiplexedDisp_init	;wreg free
  4253  001B52  0012               	return		;funcret
  4254  001B54                     __end_of_display7s_init:
  4255                           	opt callstack 0
  4256                           
  4257 ;; *************** function _multiplexedDisp_init *****************
  4258 ;; Defined at:
  4259 ;;		line 135 in file "pulsonic.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  i               1    0[COMRAM] char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 3F/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0
  4274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4276 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4277 ;;Total ram usage:        1 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    2
  4280 ;; This function calls:
  4281 ;;		_multiplexedDisp0_off
  4282 ;;		_multiplexedDisp0_on
  4283 ;;		_multiplexedDisp1_off
  4284 ;;		_multiplexedDisp1_on
  4285 ;;		_multiplexedDisp2_off
  4286 ;;		_multiplexedDisp2_on
  4287 ;;		_multiplexedDisp3_off
  4288 ;;		_multiplexedDisp3_on
  4289 ;;		_multiplexedDisp4_off
  4290 ;;		_multiplexedDisp4_on
  4291 ;; This function is called by:
  4292 ;;		_display7s_init
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text32
  4297  001C6C                     __ptext32:
  4298                           	opt callstack 0
  4299  001C6C                     _multiplexedDisp_init:
  4300                           	opt callstack 27
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;pulsonic.c: 137: int8_t i;;pulsonic.c: 138: for (i=0; i< (2 + 3); i++)
  4304                           
  4305                           ;incstack = 0
  4306  001C6C  0E00               	movlw	0
  4307  001C6E  6E01               	movwf	multiplexedDisp_init@i,c
  4308  001C70                     l2707:
  4309                           
  4310                           ;pulsonic.c: 139: {;pulsonic.c: 140: multiplexedDisp[i].Qonoff[0]();
  4311  001C70  5001               	movf	multiplexedDisp_init@i,w,c
  4312  001C72  0D04               	mullw	4
  4313  001C74  50F3               	movf	prodl,w,c
  4314  001C76  0FB0               	addlw	low _multiplexedDisp
  4315  001C78  6ED9               	movwf	fsr2l,c
  4316  001C7A  6ADA               	clrf	fsr2h,c
  4317  001C7C  D801               	call	u2638
  4318  001C7E  D00A               	goto	u2639
  4319  001C80                     u2638:
  4320  001C80  0005               	push	
  4321  001C82  6EFA               	movwf	pclath,c
  4322  001C84  50DE               	movf	postinc2,w,c
  4323  001C86  6EFD               	movwf	tosl,c
  4324  001C88  50DE               	movf	postinc2,w,c
  4325  001C8A  6EFE               	movwf	tosh,c
  4326  001C8C  50F8               	movf	tblptru,w,c
  4327  001C8E  6EFF               	movwf	tosu,c
  4328  001C90  50FA               	movf	pclath,w,c
  4329  001C92  0012               	return		;indir
  4330  001C94                     u2639:
  4331  001C94  2A01               	incf	multiplexedDisp_init@i,f,c
  4332  001C96  5001               	movf	multiplexedDisp_init@i,w,c
  4333  001C98  0A80               	xorlw	128
  4334  001C9A  0F7B               	addlw	-133
  4335  001C9C  A0D8               	btfss	status,0,c
  4336  001C9E  D7E8               	goto	l2707
  4337  001CA0  9892               	bcf	3986,4,c	;volatile
  4338                           
  4339                           ;pulsonic.c: 144: do{TRISA &= ~(1<<3);}while(0);
  4340  001CA2  9692               	bcf	3986,3,c	;volatile
  4341                           
  4342                           ;pulsonic.c: 145: do{TRISA &= ~(1<<2);}while(0);
  4343  001CA4  9492               	bcf	3986,2,c	;volatile
  4344                           
  4345                           ;pulsonic.c: 146: do{TRISA &= ~(1<<1);}while(0);
  4346  001CA6  9292               	bcf	3986,1,c	;volatile
  4347                           
  4348                           ;pulsonic.c: 147: do{TRISA &= ~(1<<0);}while(0);
  4349  001CA8  9092               	bcf	3986,0,c	;volatile
  4350  001CAA  0012               	return		;funcret
  4351  001CAC                     __end_of_multiplexedDisp_init:
  4352                           	opt callstack 0
  4353                           
  4354 ;; *************** function _multiplexedDisp4_off *****************
  4355 ;; Defined at:
  4356 ;;		line 92 in file "pulsonic.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_multiplexedDisp_init
  4381 ;;		_multiplexedDisp_job
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text33
  4386  001F40                     __ptext33:
  4387                           	opt callstack 0
  4388  001F40                     _multiplexedDisp4_off:
  4389                           	opt callstack 27
  4390                           
  4391                           ;incstack = 0
  4392                           ;pulsonic.c: 94: do{LATA |= 1<<0;}while(0);
  4393  001F40  8089               	bsf	3977,0,c	;volatile
  4394  001F42  0012               	return		;funcret
  4395  001F44                     __end_of_multiplexedDisp4_off:
  4396                           	opt callstack 0
  4397                           
  4398 ;; *************** function _multiplexedDisp3_on *****************
  4399 ;; Defined at:
  4400 ;;		line 87 in file "pulsonic.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4417 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4418 ;;Total ram usage:        0 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_multiplexedDisp_init
  4425 ;;		_multiplexedDisp_job
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text34
  4430  001F44                     __ptext34:
  4431                           	opt callstack 0
  4432  001F44                     _multiplexedDisp3_on:
  4433                           	opt callstack 27
  4434                           
  4435                           ;incstack = 0
  4436                           ;pulsonic.c: 89: do{LATA &= ~(1<<1);}while(0);
  4437  001F44  9289               	bcf	3977,1,c	;volatile
  4438  001F46  0012               	return		;funcret
  4439  001F48                     __end_of_multiplexedDisp3_on:
  4440                           	opt callstack 0
  4441                           
  4442 ;; *************** function _multiplexedDisp3_off *****************
  4443 ;; Defined at:
  4444 ;;		line 83 in file "pulsonic.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;		None
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4458 ;;      Params:         0       0       0       0       0       0       0       0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4462 ;;Total ram usage:        0 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_multiplexedDisp_init
  4469 ;;		_multiplexedDisp_job
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text35
  4474  001F48                     __ptext35:
  4475                           	opt callstack 0
  4476  001F48                     _multiplexedDisp3_off:
  4477                           	opt callstack 27
  4478                           
  4479                           ;incstack = 0
  4480                           ;pulsonic.c: 85: do{LATA |= 1<<1;}while(0);
  4481  001F48  8289               	bsf	3977,1,c	;volatile
  4482  001F4A  0012               	return		;funcret
  4483  001F4C                     __end_of_multiplexedDisp3_off:
  4484                           	opt callstack 0
  4485                           
  4486 ;; *************** function _multiplexedDisp2_on *****************
  4487 ;; Defined at:
  4488 ;;		line 78 in file "pulsonic.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		status,2, status,0
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4505 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    1
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_multiplexedDisp_init
  4513 ;;		_multiplexedDisp_job
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text36
  4518  001F4C                     __ptext36:
  4519                           	opt callstack 0
  4520  001F4C                     _multiplexedDisp2_on:
  4521                           	opt callstack 27
  4522                           
  4523                           ;incstack = 0
  4524                           ;pulsonic.c: 80: do{LATA &= ~(1<<2);}while(0);
  4525  001F4C  9489               	bcf	3977,2,c	;volatile
  4526  001F4E  0012               	return		;funcret
  4527  001F50                     __end_of_multiplexedDisp2_on:
  4528                           	opt callstack 0
  4529                           
  4530 ;; *************** function _multiplexedDisp2_off *****************
  4531 ;; Defined at:
  4532 ;;		line 74 in file "pulsonic.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4549 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    1
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_multiplexedDisp_init
  4557 ;;		_multiplexedDisp_job
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text37
  4562  001F50                     __ptext37:
  4563                           	opt callstack 0
  4564  001F50                     _multiplexedDisp2_off:
  4565                           	opt callstack 27
  4566                           
  4567                           ;incstack = 0
  4568                           ;pulsonic.c: 76: do{LATA |= 1<<2;}while(0);
  4569  001F50  8489               	bsf	3977,2,c	;volatile
  4570  001F52  0012               	return		;funcret
  4571  001F54                     __end_of_multiplexedDisp2_off:
  4572                           	opt callstack 0
  4573                           
  4574 ;; *************** function _multiplexedDisp1_on *****************
  4575 ;; Defined at:
  4576 ;;		line 69 in file "pulsonic.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4593 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_multiplexedDisp_init
  4601 ;;		_multiplexedDisp_job
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text38
  4606  001F54                     __ptext38:
  4607                           	opt callstack 0
  4608  001F54                     _multiplexedDisp1_on:
  4609                           	opt callstack 27
  4610                           
  4611                           ;incstack = 0
  4612                           ;pulsonic.c: 71: do{LATA &= ~(1<<3);}while(0);
  4613  001F54  9689               	bcf	3977,3,c	;volatile
  4614  001F56  0012               	return		;funcret
  4615  001F58                     __end_of_multiplexedDisp1_on:
  4616                           	opt callstack 0
  4617                           
  4618 ;; *************** function _multiplexedDisp1_off *****************
  4619 ;; Defined at:
  4620 ;;		line 65 in file "pulsonic.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      void 
  4627 ;; Registers used:
  4628 ;;		status,2, status,0
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4634 ;;      Params:         0       0       0       0       0       0       0       0       0
  4635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4637 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4638 ;;Total ram usage:        0 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    1
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_multiplexedDisp_init
  4645 ;;		_multiplexedDisp_job
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text39
  4650  001F58                     __ptext39:
  4651                           	opt callstack 0
  4652  001F58                     _multiplexedDisp1_off:
  4653                           	opt callstack 27
  4654                           
  4655                           ;incstack = 0
  4656                           ;pulsonic.c: 67: do{LATA |= 1<<3;}while(0);
  4657  001F58  8689               	bsf	3977,3,c	;volatile
  4658  001F5A  0012               	return		;funcret
  4659  001F5C                     __end_of_multiplexedDisp1_off:
  4660                           	opt callstack 0
  4661                           
  4662 ;; *************** function _multiplexedDisp0_on *****************
  4663 ;; Defined at:
  4664 ;;		line 60 in file "pulsonic.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_multiplexedDisp_init
  4689 ;;		_multiplexedDisp_job
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text40
  4694  001F5C                     __ptext40:
  4695                           	opt callstack 0
  4696  001F5C                     _multiplexedDisp0_on:
  4697                           	opt callstack 27
  4698                           
  4699                           ;incstack = 0
  4700                           ;pulsonic.c: 62: do{LATA &= ~(1<<4);}while(0);
  4701  001F5C  9889               	bcf	3977,4,c	;volatile
  4702  001F5E  0012               	return		;funcret
  4703  001F60                     __end_of_multiplexedDisp0_on:
  4704                           	opt callstack 0
  4705                           
  4706 ;; *************** function _multiplexedDisp0_off *****************
  4707 ;; Defined at:
  4708 ;;		line 56 in file "pulsonic.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4725 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4726 ;;Total ram usage:        0 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_multiplexedDisp_init
  4733 ;;		_multiplexedDisp_job
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text41
  4738  001F60                     __ptext41:
  4739                           	opt callstack 0
  4740  001F60                     _multiplexedDisp0_off:
  4741                           	opt callstack 27
  4742                           
  4743                           ;incstack = 0
  4744                           ;pulsonic.c: 58: do{LATA |= 1<<4;}while(0);
  4745  001F60  8889               	bsf	3977,4,c	;volatile
  4746  001F62  0012               	return		;funcret
  4747  001F64                     __end_of_multiplexedDisp0_off:
  4748                           	opt callstack 0
  4749                           
  4750 ;; *************** function _multiplexedDisp4_on *****************
  4751 ;; Defined at:
  4752 ;;		line 96 in file "pulsonic.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4769 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:        0 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    1
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_multiplexedDisp_init
  4777 ;;		_multiplexedDisp_job
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text42
  4782  001F64                     __ptext42:
  4783                           	opt callstack 0
  4784  001F64                     _multiplexedDisp4_on:
  4785                           	opt callstack 27
  4786                           
  4787                           ;incstack = 0
  4788                           ;pulsonic.c: 98: do{LATA &= ~(1<<0);}while(0);
  4789  001F64  9089               	bcf	3977,0,c	;volatile
  4790  001F66  0012               	return		;funcret
  4791  001F68                     __end_of_multiplexedDisp4_on:
  4792                           	opt callstack 0
  4793                           
  4794 ;; *************** function _disp_show_quantity *****************
  4795 ;; Defined at:
  4796 ;;		line 193 in file "pulsonic.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  f               3   38[COMRAM] void 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  buff           10   42[COMRAM] unsigned char [10]
  4801 ;;  real            3   52[COMRAM] unsigned char [10]
  4802 ;;  I               2   58[COMRAM] int 
  4803 ;;  i               1   60[COMRAM] char 
  4804 ;;  q               1   57[COMRAM] char 
  4805 ;;  last_pos        1   56[COMRAM] char 
  4806 ;;  num             1   55[COMRAM] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 3F/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4816 ;;      Params:         3       0       0       0       0       0       0       0       0
  4817 ;;      Locals:        19       0       0       0       0       0       0       0       0
  4818 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4819 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4820 ;;Total ram usage:       23 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    4
  4823 ;; This function calls:
  4824 ;;		___awtoft
  4825 ;;		___ftge
  4826 ;;		___ftmul
  4827 ;;		___ftsub
  4828 ;;		___fttol
  4829 ;;		_itoa
  4830 ;; This function is called by:
  4831 ;;		_main
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text43
  4836  000E3E                     __ptext43:
  4837                           	opt callstack 0
  4838  000E3E                     _disp_show_quantity:
  4839                           	opt callstack 26
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;pulsonic.c: 195: int16_t I;;pulsonic.c: 196: double real;;pulsonic.c: 197: char buff[10
      +                          ];;pulsonic.c: 198: uint8_t num;;pulsonic.c: 199: int8_t i;;pulsonic.c: 200: int8_t last
      +                          _pos;;pulsonic.c: 201: int8_t q;;pulsonic.c: 202: xx=f*10;
  4843                           
  4844                           ;incstack = 0
  4845  000E3E  0E00               	movlw	0
  4846  000E40  6E0C               	movwf	___ftmul@f2,c
  4847  000E42  0E20               	movlw	32
  4848  000E44  6E0D               	movwf	___ftmul@f2+1,c
  4849  000E46  0E41               	movlw	65
  4850  000E48  6E0E               	movwf	___ftmul@f2+2,c
  4851  000E4A  C027  F009         	movff	disp_show_quantity@f,___ftmul@f1
  4852  000E4E  C028  F00A         	movff	disp_show_quantity@f+1,___ftmul@f1+1
  4853  000E52  C029  F00B         	movff	disp_show_quantity@f+2,___ftmul@f1+2
  4854  000E56  EC8B  F00A         	call	___ftmul	;wreg free
  4855  000E5A  C009  F018         	movff	?___ftmul,___fttol@f1
  4856  000E5E  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  4857  000E62  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  4858  000E66  EC05  F00B         	call	___fttol	;wreg free
  4859  000E6A  C018  F04D         	movff	?___fttol,_xx
  4860  000E6E  C019  F04E         	movff	?___fttol+1,_xx+1
  4861                           
  4862                           ;pulsonic.c: 203: if (f>= 1000.0f)
  4863  000E72  C027  F00C         	movff	disp_show_quantity@f,___ftge@ff1
  4864  000E76  C028  F00D         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4865  000E7A  C029  F00E         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4866  000E7E  0E00               	movlw	0
  4867  000E80  6E0F               	movwf	___ftge@ff2,c
  4868  000E82  0E7A               	movlw	122
  4869  000E84  6E10               	movwf	___ftge@ff2+1,c
  4870  000E86  0E44               	movlw	68
  4871  000E88  6E11               	movwf	___ftge@ff2+2,c
  4872  000E8A  ECBA  F00C         	call	___ftge	;wreg free
  4873  000E8E  A0D8               	btfss	status,0,c
  4874  000E90  D006               	goto	l2921
  4875                           
  4876                           ;pulsonic.c: 204: f=999.0f;
  4877  000E92  0EC0               	movlw	192
  4878  000E94  6E27               	movwf	disp_show_quantity@f,c
  4879  000E96  0E79               	movlw	121
  4880  000E98  6E28               	movwf	disp_show_quantity@f+1,c
  4881  000E9A  0E44               	movlw	68
  4882  000E9C  6E29               	movwf	disp_show_quantity@f+2,c
  4883  000E9E                     l2921:
  4884                           
  4885                           ;pulsonic.c: 206: I = (int16_t)f;
  4886  000E9E  C027  F018         	movff	disp_show_quantity@f,___fttol@f1
  4887  000EA2  C028  F019         	movff	disp_show_quantity@f+1,___fttol@f1+1
  4888  000EA6  C029  F01A         	movff	disp_show_quantity@f+2,___fttol@f1+2
  4889  000EAA  EC05  F00B         	call	___fttol	;wreg free
  4890  000EAE  C018  F03B         	movff	?___fttol,disp_show_quantity@I
  4891  000EB2  C019  F03C         	movff	?___fttol+1,disp_show_quantity@I+1
  4892                           
  4893                           ;pulsonic.c: 207: real = f-I;
  4894  000EB6  C027  F015         	movff	disp_show_quantity@f,___ftsub@f1
  4895  000EBA  C028  F016         	movff	disp_show_quantity@f+1,___ftsub@f1+1
  4896  000EBE  C029  F017         	movff	disp_show_quantity@f+2,___ftsub@f1+2
  4897  000EC2  C03B  F009         	movff	disp_show_quantity@I,___awtoft@c
  4898  000EC6  C03C  F00A         	movff	disp_show_quantity@I+1,___awtoft@c+1
  4899  000ECA  EC76  F00E         	call	___awtoft	;wreg free
  4900  000ECE  C009  F018         	movff	?___awtoft,___ftsub@f2
  4901  000ED2  C00A  F019         	movff	?___awtoft+1,___ftsub@f2+1
  4902  000ED6  C00B  F01A         	movff	?___awtoft+2,___ftsub@f2+2
  4903  000EDA  EC56  F00E         	call	___ftsub	;wreg free
  4904  000EDE  C015  F035         	movff	?___ftsub,disp_show_quantity@real
  4905  000EE2  C016  F036         	movff	?___ftsub+1,disp_show_quantity@real+1
  4906  000EE6  C017  F037         	movff	?___ftsub+2,disp_show_quantity@real+2
  4907                           
  4908                           ;pulsonic.c: 209: itoa(buff, I, 10);
  4909  000EEA  0E2B               	movlw	low disp_show_quantity@buff
  4910  000EEC  6E10               	movwf	itoa@buf,c
  4911  000EEE  C03B  F011         	movff	disp_show_quantity@I,itoa@val
  4912  000EF2  C03C  F012         	movff	disp_show_quantity@I+1,itoa@val+1
  4913  000EF6  0E00               	movlw	0
  4914  000EF8  6E14               	movwf	itoa@base+1,c
  4915  000EFA  0E0A               	movlw	10
  4916  000EFC  6E13               	movwf	itoa@base,c
  4917  000EFE  EC92  F00E         	call	_itoa	;wreg free
  4918                           
  4919                           ;pulsonic.c: 211: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[OFF];
  4920  000F02  0E0B               	movlw	low _DISP7S_CHARS
  4921  000F04  6EF6               	movwf	tblptrl,c
  4922  000F06                     	if	1	;There is more than 1 active tblptr byte
  4923  000F06  0E08               	movlw	high _DISP7S_CHARS
  4924  000F08  6EF7               	movwf	tblptrh,c
  4925  000F0A                     	endif
  4926  000F0A                     	if	0	;There are less than 3 active tblptr bytes
  4927  000F0A                     	endif
  4928  000F0A  0008               	tblrd		*
  4929  000F0C  CFF5 F178          	movff	tablat,_pulsonic+120
  4930                           
  4931                           ;pulsonic.c: 212: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[OFF];
  4932  000F10  0E0B               	movlw	low _DISP7S_CHARS
  4933  000F12  6EF6               	movwf	tblptrl,c
  4934  000F14                     	if	1	;There is more than 1 active tblptr byte
  4935  000F14  0E08               	movlw	high _DISP7S_CHARS
  4936  000F16  6EF7               	movwf	tblptrh,c
  4937  000F18                     	endif
  4938  000F18                     	if	0	;There are less than 3 active tblptr bytes
  4939  000F18                     	endif
  4940  000F18  0008               	tblrd		*
  4941  000F1A  CFF5 F177          	movff	tablat,_pulsonic+119
  4942                           
  4943                           ;pulsonic.c: 213: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[OFF];
  4944  000F1E  0E0B               	movlw	low _DISP7S_CHARS
  4945  000F20  6EF6               	movwf	tblptrl,c
  4946  000F22                     	if	1	;There is more than 1 active tblptr byte
  4947  000F22  0E08               	movlw	high _DISP7S_CHARS
  4948  000F24  6EF7               	movwf	tblptrh,c
  4949  000F26                     	endif
  4950  000F26                     	if	0	;There are less than 3 active tblptr bytes
  4951  000F26                     	endif
  4952  000F26  0008               	tblrd		*
  4953  000F28  CFF5 F176          	movff	tablat,_pulsonic+118
  4954                           
  4955                           ;pulsonic.c: 215: if (real<0.01)
  4956  000F2C  C035  F00C         	movff	disp_show_quantity@real,___ftge@ff1
  4957  000F30  C036  F00D         	movff	disp_show_quantity@real+1,___ftge@ff1+1
  4958  000F34  C037  F00E         	movff	disp_show_quantity@real+2,___ftge@ff1+2
  4959  000F38  0ED7               	movlw	215
  4960  000F3A  6E0F               	movwf	___ftge@ff2,c
  4961  000F3C  0E23               	movlw	35
  4962  000F3E  6E10               	movwf	___ftge@ff2+1,c
  4963  000F40  0E3C               	movlw	60
  4964  000F42  6E11               	movwf	___ftge@ff2+2,c
  4965  000F44  ECBA  F00C         	call	___ftge	;wreg free
  4966  000F48  B0D8               	btfsc	status,0,c
  4967  000F4A  D036               	goto	l2961
  4968                           
  4969                           ;pulsonic.c: 216: {;pulsonic.c: 219: if (I>99)
  4970  000F4C  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  4971  000F4E  D008               	goto	l2939
  4972  000F50  503C               	movf	disp_show_quantity@I+1,w,c
  4973  000F52  E104               	bnz	u2940
  4974  000F54  0E64               	movlw	100
  4975  000F56  5C3B               	subwf	disp_show_quantity@I,w,c
  4976  000F58  A0D8               	btfss	status,0,c
  4977  000F5A  D002               	goto	l2939
  4978  000F5C                     u2940:
  4979                           
  4980                           ;pulsonic.c: 220: last_pos = 2;
  4981  000F5C  0E02               	movlw	2
  4982  000F5E  D00B               	goto	L4
  4983  000F60                     l2939:
  4984                           
  4985                           ;pulsonic.c: 221: else if (I>9)
  4986  000F60  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  4987  000F62  D008               	goto	l2943
  4988  000F64  503C               	movf	disp_show_quantity@I+1,w,c
  4989  000F66  E104               	bnz	u2950
  4990  000F68  0E0A               	movlw	10
  4991  000F6A  5C3B               	subwf	disp_show_quantity@I,w,c
  4992  000F6C  A0D8               	btfss	status,0,c
  4993  000F6E  D002               	goto	l2943
  4994  000F70                     u2950:
  4995                           
  4996                           ;pulsonic.c: 222: last_pos = 1;
  4997  000F70  0E01               	movlw	1
  4998  000F72  D001               	goto	L4
  4999  000F74                     l2943:
  5000                           
  5001                           ;pulsonic.c: 223: else;pulsonic.c: 224: last_pos = 0;
  5002  000F74  0E00               	movlw	0
  5003  000F76                     L4:
  5004  000F76  6E39               	movwf	disp_show_quantity@last_pos,c
  5005                           
  5006                           ;pulsonic.c: 230: q = 0;
  5007  000F78  0E00               	movlw	0
  5008  000F7A  6E3A               	movwf	disp_show_quantity@q,c
  5009                           
  5010                           ;pulsonic.c: 231: for (i=last_pos; i>=0; i--)
  5011  000F7C  C039  F03D         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  5012  000F80                     l2947:
  5013  000F80  BE3D               	btfsc	disp_show_quantity@i,7,c
  5014  000F82  0012               	return	
  5015                           
  5016                           ;pulsonic.c: 232: {;pulsonic.c: 233: num = buff[i] - 0x30;
  5017  000F84  503D               	movf	disp_show_quantity@i,w,c
  5018  000F86  0F2B               	addlw	low disp_show_quantity@buff
  5019  000F88  6ED9               	movwf	fsr2l,c
  5020  000F8A  6ADA               	clrf	fsr2h,c
  5021  000F8C  50DF               	movf	indf2,w,c
  5022  000F8E  0FD0               	addlw	208
  5023  000F90  6E38               	movwf	disp_show_quantity@num,c
  5024                           
  5025                           ;pulsonic.c: 234: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5026  000F92  5038               	movf	disp_show_quantity@num,w,c
  5027  000F94  0F01               	addlw	low _DISP7S_NUMS
  5028  000F96  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5029  000F98  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5030  000F9C                     	if	1	;There is more than 1 active tblptr byte
  5031  000F9C  0E08               	movlw	high __smallconst
  5032  000F9E  6EF7               	movwf	tblptrh,c
  5033  000FA0                     	endif
  5034  000FA0                     	if	0	;tblptru may be non-zero
  5035  000FA0                     	endif
  5036  000FA0                     	if	0	;tblptru may be non-zero
  5037  000FA0                     	endif
  5038  000FA0  0E76               	movlw	low (_pulsonic+118)
  5039  000FA2  243A               	addwf	disp_show_quantity@q,w,c
  5040  000FA4  6ED9               	movwf	fsr2l,c
  5041  000FA6  6ADA               	clrf	fsr2h,c
  5042  000FA8  0E01               	movlw	high (_pulsonic+118)
  5043  000FAA  22DA               	addwfc	fsr2h,f,c
  5044  000FAC  0008               	tblrd		*
  5045  000FAE  CFF5 FFDF          	movff	tablat,indf2
  5046  000FB2  2A3A               	incf	disp_show_quantity@q,f,c
  5047  000FB4  063D               	decf	disp_show_quantity@i,f,c
  5048  000FB6  D7E4               	goto	l2947
  5049  000FB8                     l2961:
  5050                           
  5051                           ;pulsonic.c: 237: else;pulsonic.c: 238: {;pulsonic.c: 239: if (f<100.0)
  5052  000FB8  C027  F00C         	movff	disp_show_quantity@f,___ftge@ff1
  5053  000FBC  C028  F00D         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  5054  000FC0  C029  F00E         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  5055  000FC4  0E00               	movlw	0
  5056  000FC6  6E0F               	movwf	___ftge@ff2,c
  5057  000FC8  0EC8               	movlw	200
  5058  000FCA  6E10               	movwf	___ftge@ff2+1,c
  5059  000FCC  0E42               	movlw	66
  5060  000FCE  6E11               	movwf	___ftge@ff2+2,c
  5061  000FD0  ECBA  F00C         	call	___ftge	;wreg free
  5062  000FD4  B0D8               	btfsc	status,0,c
  5063  000FD6  D060               	goto	l2993
  5064                           
  5065                           ;pulsonic.c: 240: {;pulsonic.c: 243: itoa(buff, I, 10);
  5066  000FD8  0E2B               	movlw	low disp_show_quantity@buff
  5067  000FDA  6E10               	movwf	itoa@buf,c
  5068  000FDC  C03B  F011         	movff	disp_show_quantity@I,itoa@val
  5069  000FE0  C03C  F012         	movff	disp_show_quantity@I+1,itoa@val+1
  5070  000FE4  0E00               	movlw	0
  5071  000FE6  6E14               	movwf	itoa@base+1,c
  5072  000FE8  0E0A               	movlw	10
  5073  000FEA  6E13               	movwf	itoa@base,c
  5074  000FEC  EC92  F00E         	call	_itoa	;wreg free
  5075                           
  5076                           ;pulsonic.c: 245: if (I>9)
  5077  000FF0  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  5078  000FF2  D008               	goto	l2969
  5079  000FF4  503C               	movf	disp_show_quantity@I+1,w,c
  5080  000FF6  E104               	bnz	u2980
  5081  000FF8  0E0A               	movlw	10
  5082  000FFA  5C3B               	subwf	disp_show_quantity@I,w,c
  5083  000FFC  A0D8               	btfss	status,0,c
  5084  000FFE  D002               	goto	l2969
  5085  001000                     u2980:
  5086                           
  5087                           ;pulsonic.c: 246: last_pos = 1;
  5088  001000  0E01               	movlw	1
  5089  001002  D001               	goto	L5
  5090  001004                     l2969:
  5091                           
  5092                           ;pulsonic.c: 247: else;pulsonic.c: 248: last_pos = 0;
  5093  001004  0E00               	movlw	0
  5094  001006                     L5:
  5095  001006  6E39               	movwf	disp_show_quantity@last_pos,c
  5096                           
  5097                           ;pulsonic.c: 254: q = 1;
  5098  001008  0E01               	movlw	1
  5099  00100A  6E3A               	movwf	disp_show_quantity@q,c
  5100                           
  5101                           ;pulsonic.c: 255: for (i=last_pos; i>=0; i--)
  5102  00100C  C039  F03D         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  5103  001010                     l2973:
  5104  001010  BE3D               	btfsc	disp_show_quantity@i,7,c
  5105  001012  D01A               	goto	l2987
  5106                           
  5107                           ;pulsonic.c: 256: {;pulsonic.c: 257: num = buff[i] - 0x30;
  5108  001014  503D               	movf	disp_show_quantity@i,w,c
  5109  001016  0F2B               	addlw	low disp_show_quantity@buff
  5110  001018  6ED9               	movwf	fsr2l,c
  5111  00101A  6ADA               	clrf	fsr2h,c
  5112  00101C  50DF               	movf	indf2,w,c
  5113  00101E  0FD0               	addlw	208
  5114  001020  6E38               	movwf	disp_show_quantity@num,c
  5115                           
  5116                           ;pulsonic.c: 258: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5117  001022  5038               	movf	disp_show_quantity@num,w,c
  5118  001024  0F01               	addlw	low _DISP7S_NUMS
  5119  001026  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5120  001028  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5121  00102C                     	if	1	;There is more than 1 active tblptr byte
  5122  00102C  0E08               	movlw	high __smallconst
  5123  00102E  6EF7               	movwf	tblptrh,c
  5124  001030                     	endif
  5125  001030                     	if	0	;tblptru may be non-zero
  5126  001030                     	endif
  5127  001030                     	if	0	;tblptru may be non-zero
  5128  001030                     	endif
  5129  001030  0E76               	movlw	low (_pulsonic+118)
  5130  001032  243A               	addwf	disp_show_quantity@q,w,c
  5131  001034  6ED9               	movwf	fsr2l,c
  5132  001036  6ADA               	clrf	fsr2h,c
  5133  001038  0E01               	movlw	high (_pulsonic+118)
  5134  00103A  22DA               	addwfc	fsr2h,f,c
  5135  00103C  0008               	tblrd		*
  5136  00103E  CFF5 FFDF          	movff	tablat,indf2
  5137  001042  2A3A               	incf	disp_show_quantity@q,f,c
  5138  001044  063D               	decf	disp_show_quantity@i,f,c
  5139  001046  D7E4               	goto	l2973
  5140  001048                     l2987:
  5141                           
  5142                           ;pulsonic.c: 259: };pulsonic.c: 261: pulsonic.display7s[QUANT_DIG_1] |= 0x80;
  5143  001048  0101               	movlb	1	; () banked
  5144  00104A  8F77               	bsf	(_pulsonic+119)& (0+255),7,b
  5145                           
  5146                           ; BSR set to: 1
  5147                           ;pulsonic.c: 264: I = (int8_t) (real*10);
  5148  00104C  0E00               	movlw	0
  5149  00104E  6E0C               	movwf	___ftmul@f2,c
  5150  001050  0E20               	movlw	32
  5151  001052  6E0D               	movwf	___ftmul@f2+1,c
  5152  001054  0E41               	movlw	65
  5153  001056  6E0E               	movwf	___ftmul@f2+2,c
  5154  001058  C035  F009         	movff	disp_show_quantity@real,___ftmul@f1
  5155  00105C  C036  F00A         	movff	disp_show_quantity@real+1,___ftmul@f1+1
  5156  001060  C037  F00B         	movff	disp_show_quantity@real+2,___ftmul@f1+2
  5157  001064  EC8B  F00A         	call	___ftmul	;wreg free
  5158  001068  C009  F018         	movff	?___ftmul,___fttol@f1
  5159  00106C  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  5160  001070  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  5161  001074  EC05  F00B         	call	___fttol	;wreg free
  5162  001078  5018               	movf	?___fttol,w,c
  5163  00107A  6E3B               	movwf	disp_show_quantity@I,c
  5164  00107C  6A3C               	clrf	disp_show_quantity@I+1,c
  5165  00107E  BE3B               	btfsc	disp_show_quantity@I,7,c
  5166  001080  063C               	decf	disp_show_quantity@I+1,f,c
  5167                           
  5168                           ;pulsonic.c: 265: pulsonic.display7s[QUANT_DIG_0] = DISP7S_NUMS[I];
  5169  001082  503B               	movf	disp_show_quantity@I,w,c
  5170  001084  0F01               	addlw	low _DISP7S_NUMS
  5171  001086  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5172  001088  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5173  00108C                     	if	1	;There is more than 1 active tblptr byte
  5174  00108C  0E08               	movlw	high __smallconst
  5175  00108E  6EF7               	movwf	tblptrh,c
  5176  001090                     	endif
  5177  001090                     	if	0	;tblptru may be non-zero
  5178  001090                     	endif
  5179  001090                     	if	0	;tblptru may be non-zero
  5180  001090                     	endif
  5181  001090  0008               	tblrd		*
  5182  001092  CFF5 F176          	movff	tablat,_pulsonic+118
  5183                           
  5184                           ;pulsonic.c: 267: }
  5185  001096  0012               	return	
  5186  001098                     l2993:
  5187                           
  5188                           ;pulsonic.c: 268: else;pulsonic.c: 269: {;pulsonic.c: 270: q = 0;
  5189  001098  0E00               	movlw	0
  5190  00109A  6E3A               	movwf	disp_show_quantity@q,c
  5191                           
  5192                           ;pulsonic.c: 272: for (i=last_pos; i>=0; i--)
  5193  00109C  0E02               	movlw	2
  5194  00109E  6E3D               	movwf	disp_show_quantity@i,c
  5195  0010A0                     l3001:
  5196                           
  5197                           ;pulsonic.c: 273: {;pulsonic.c: 274: num = buff[i] - 0x30;
  5198  0010A0  503D               	movf	disp_show_quantity@i,w,c
  5199  0010A2  0F2B               	addlw	low disp_show_quantity@buff
  5200  0010A4  6ED9               	movwf	fsr2l,c
  5201  0010A6  6ADA               	clrf	fsr2h,c
  5202  0010A8  50DF               	movf	indf2,w,c
  5203  0010AA  0FD0               	addlw	208
  5204  0010AC  6E38               	movwf	disp_show_quantity@num,c
  5205                           
  5206                           ;pulsonic.c: 275: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5207  0010AE  5038               	movf	disp_show_quantity@num,w,c
  5208  0010B0  0F01               	addlw	low _DISP7S_NUMS
  5209  0010B2  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5210  0010B4  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5211  0010B8                     	if	1	;There is more than 1 active tblptr byte
  5212  0010B8  0E08               	movlw	high __smallconst
  5213  0010BA  6EF7               	movwf	tblptrh,c
  5214  0010BC                     	endif
  5215  0010BC                     	if	0	;tblptru may be non-zero
  5216  0010BC                     	endif
  5217  0010BC                     	if	0	;tblptru may be non-zero
  5218  0010BC                     	endif
  5219  0010BC  0E76               	movlw	low (_pulsonic+118)
  5220  0010BE  243A               	addwf	disp_show_quantity@q,w,c
  5221  0010C0  6ED9               	movwf	fsr2l,c
  5222  0010C2  6ADA               	clrf	fsr2h,c
  5223  0010C4  0E01               	movlw	high (_pulsonic+118)
  5224  0010C6  22DA               	addwfc	fsr2h,f,c
  5225  0010C8  0008               	tblrd		*
  5226  0010CA  CFF5 FFDF          	movff	tablat,indf2
  5227  0010CE  2A3A               	incf	disp_show_quantity@q,f,c
  5228  0010D0  063D               	decf	disp_show_quantity@i,f,c
  5229  0010D2  BE3D               	btfsc	disp_show_quantity@i,7,c
  5230  0010D4  0012               	return	
  5231  0010D6  D7E4               	goto	l3001
  5232  0010D8                     __end_of_disp_show_quantity:
  5233                           	opt callstack 0
  5234                           
  5235 ;; *************** function _itoa *****************
  5236 ;; Defined at:
  5237 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  buf             1   15[COMRAM] PTR unsigned char 
  5240 ;;		 -> disp_show_quantity@buff(10), 
  5241 ;;  val             2   16[COMRAM] int 
  5242 ;;  base            2   18[COMRAM] int 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  cp              1    0        PTR unsigned char 
  5245 ;;		 -> disp_show_quantity@buff(10), 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      PTR unsigned char 
  5248 ;; Registers used:
  5249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5255 ;;      Params:         5       0       0       0       0       0       0       0       0
  5256 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5258 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5259 ;;Total ram usage:        6 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    3
  5262 ;; This function calls:
  5263 ;;		_utoa
  5264 ;; This function is called by:
  5265 ;;		_disp_show_quantity
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text44
  5270  001D24                     __ptext44:
  5271                           	opt callstack 0
  5272  001D24                     _itoa:
  5273                           	opt callstack 26
  5274                           
  5275                           ;incstack = 0
  5276  001D24  AE12               	btfss	itoa@val+1,7,c
  5277  001D26  D00A               	goto	l2739
  5278  001D28  5010               	movf	itoa@buf,w,c
  5279  001D2A  6ED9               	movwf	fsr2l,c
  5280  001D2C  6ADA               	clrf	fsr2h,c
  5281  001D2E  0E2D               	movlw	45
  5282  001D30  6EDF               	movwf	indf2,c
  5283  001D32  2A10               	incf	itoa@buf,f,c
  5284  001D34  6C11               	negf	itoa@val,c
  5285  001D36  1E12               	comf	itoa@val+1,f,c
  5286  001D38  B0D8               	btfsc	status,0,c
  5287  001D3A  2A12               	incf	itoa@val+1,f,c
  5288  001D3C                     l2739:
  5289  001D3C  C010  F008         	movff	itoa@buf,utoa@buf
  5290  001D40  C011  F009         	movff	itoa@val,utoa@val
  5291  001D44  C012  F00A         	movff	itoa@val+1,utoa@val+1
  5292  001D48  C013  F00B         	movff	itoa@base,utoa@base
  5293  001D4C  C014  F00C         	movff	itoa@base+1,utoa@base+1
  5294  001D50  EC70  F00C         	call	_utoa	;wreg free
  5295  001D54  0012               	return		;funcret
  5296  001D56                     __end_of_itoa:
  5297                           	opt callstack 0
  5298                           
  5299 ;; *************** function _utoa *****************
  5300 ;; Defined at:
  5301 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  buf             1    7[COMRAM] PTR unsigned char 
  5304 ;;		 -> disp_show_quantity@buff(10), 
  5305 ;;  val             2    8[COMRAM] unsigned int 
  5306 ;;  base            2   10[COMRAM] int 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  v               2   12[COMRAM] unsigned int 
  5309 ;;  c               1   14[COMRAM] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      PTR unsigned char 
  5312 ;; Registers used:
  5313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5319 ;;      Params:         5       0       0       0       0       0       0       0       0
  5320 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5322 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5323 ;;Total ram usage:        8 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    2
  5326 ;; This function calls:
  5327 ;;		___lwdiv
  5328 ;;		___lwmod
  5329 ;; This function is called by:
  5330 ;;		_itoa
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text45
  5335  0018E0                     __ptext45:
  5336                           	opt callstack 0
  5337  0018E0                     _utoa:
  5338                           	opt callstack 26
  5339                           
  5340                           ;incstack = 0
  5341  0018E0  C009  F00D         	movff	utoa@val,utoa@v
  5342  0018E4  C00A  F00E         	movff	utoa@val+1,utoa@v+1
  5343  0018E8                     l2477:
  5344  0018E8  C00D  F001         	movff	utoa@v,___lwdiv@dividend
  5345  0018EC  C00E  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  5346  0018F0  C00B  F003         	movff	utoa@base,___lwdiv@divisor
  5347  0018F4  C00C  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  5348  0018F8  EC59  F00D         	call	___lwdiv	;wreg free
  5349  0018FC  C001  F00D         	movff	?___lwdiv,utoa@v
  5350  001900  C002  F00E         	movff	?___lwdiv+1,utoa@v+1
  5351  001904  2A08               	incf	utoa@buf,f,c
  5352  001906  500D               	movf	utoa@v,w,c
  5353  001908  100E               	iorwf	utoa@v+1,w,c
  5354  00190A  A4D8               	btfss	status,2,c
  5355  00190C  D7ED               	goto	l2477
  5356  00190E  5008               	movf	utoa@buf,w,c
  5357  001910  6ED9               	movwf	fsr2l,c
  5358  001912  6ADA               	clrf	fsr2h,c
  5359  001914  0E00               	movlw	0
  5360  001916  6EDF               	movwf	indf2,c
  5361  001918  0608               	decf	utoa@buf,f,c
  5362  00191A                     l2487:
  5363  00191A  C009  F001         	movff	utoa@val,___lwmod@dividend
  5364  00191E  C00A  F002         	movff	utoa@val+1,___lwmod@dividend+1
  5365  001922  C00B  F003         	movff	utoa@base,___lwmod@divisor
  5366  001926  C00C  F004         	movff	utoa@base+1,___lwmod@divisor+1
  5367  00192A  EC15  F00E         	call	___lwmod	;wreg free
  5368  00192E  5001               	movf	?___lwmod,w,c
  5369  001930  6E0F               	movwf	utoa@c,c
  5370  001932  C009  F001         	movff	utoa@val,___lwdiv@dividend
  5371  001936  C00A  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  5372  00193A  C00B  F003         	movff	utoa@base,___lwdiv@divisor
  5373  00193E  C00C  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  5374  001942  EC59  F00D         	call	___lwdiv	;wreg free
  5375  001946  C001  F009         	movff	?___lwdiv,utoa@val
  5376  00194A  C002  F00A         	movff	?___lwdiv+1,utoa@val+1
  5377  00194E  0E09               	movlw	9
  5378  001950  640F               	cpfsgt	utoa@c,c
  5379  001952  D002               	goto	l1207
  5380  001954  0E07               	movlw	7
  5381  001956  260F               	addwf	utoa@c,f,c
  5382  001958                     l1207:
  5383  001958  0E30               	movlw	48
  5384  00195A  260F               	addwf	utoa@c,f,c
  5385  00195C  5008               	movf	utoa@buf,w,c
  5386  00195E  6ED9               	movwf	fsr2l,c
  5387  001960  6ADA               	clrf	fsr2h,c
  5388  001962  C00F  FFDF         	movff	utoa@c,indf2
  5389  001966  0608               	decf	utoa@buf,f,c
  5390  001968  5009               	movf	utoa@val,w,c
  5391  00196A  100A               	iorwf	utoa@val+1,w,c
  5392  00196C  A4D8               	btfss	status,2,c
  5393  00196E  D7D5               	goto	l2487
  5394                           
  5395                           ;	Return value of _utoa is never used
  5396  001970  2A08               	incf	utoa@buf,f,c
  5397  001972  0012               	return		;funcret
  5398  001974                     __end_of_utoa:
  5399                           	opt callstack 0
  5400                           
  5401 ;; *************** function ___lwmod *****************
  5402 ;; Defined at:
  5403 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  dividend        2    0[COMRAM] unsigned int 
  5406 ;;  divisor         2    2[COMRAM] unsigned int 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  counter         1    4[COMRAM] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  2    0[COMRAM] unsigned int 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         4       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:        5 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    1
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_utoa
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text46
  5433  001C2A                     __ptext46:
  5434                           	opt callstack 0
  5435  001C2A                     ___lwmod:
  5436                           	opt callstack 26
  5437                           
  5438                           ;incstack = 0
  5439  001C2A  5003               	movf	___lwmod@divisor,w,c
  5440  001C2C  1004               	iorwf	___lwmod@divisor+1,w,c
  5441  001C2E  B4D8               	btfsc	status,2,c
  5442  001C30  D018               	goto	l1025
  5443  001C32  0E01               	movlw	1
  5444  001C34  6E05               	movwf	___lwmod@counter,c
  5445  001C36  D004               	goto	l2307
  5446  001C38                     l2305:
  5447  001C38  90D8               	bcf	status,0,c
  5448  001C3A  3603               	rlcf	___lwmod@divisor,f,c
  5449  001C3C  3604               	rlcf	___lwmod@divisor+1,f,c
  5450  001C3E  2A05               	incf	___lwmod@counter,f,c
  5451  001C40                     l2307:
  5452  001C40  AE04               	btfss	___lwmod@divisor+1,7,c
  5453  001C42  D7FA               	goto	l2305
  5454  001C44                     u1690:
  5455  001C44  5003               	movf	___lwmod@divisor,w,c
  5456  001C46  5C01               	subwf	___lwmod@dividend,w,c
  5457  001C48  5004               	movf	___lwmod@divisor+1,w,c
  5458  001C4A  5802               	subwfb	___lwmod@dividend+1,w,c
  5459  001C4C  A0D8               	btfss	status,0,c
  5460  001C4E  D004               	goto	l2313
  5461  001C50  5003               	movf	___lwmod@divisor,w,c
  5462  001C52  5E01               	subwf	___lwmod@dividend,f,c
  5463  001C54  5004               	movf	___lwmod@divisor+1,w,c
  5464  001C56  5A02               	subwfb	___lwmod@dividend+1,f,c
  5465  001C58                     l2313:
  5466  001C58  90D8               	bcf	status,0,c
  5467  001C5A  3204               	rrcf	___lwmod@divisor+1,f,c
  5468  001C5C  3203               	rrcf	___lwmod@divisor,f,c
  5469  001C5E  2E05               	decfsz	___lwmod@counter,f,c
  5470  001C60  D7F1               	goto	u1690
  5471  001C62                     l1025:
  5472  001C62  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5473  001C66  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5474  001C6A  0012               	return		;funcret
  5475  001C6C                     __end_of___lwmod:
  5476                           	opt callstack 0
  5477                           
  5478 ;; *************** function ___lwdiv *****************
  5479 ;; Defined at:
  5480 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  dividend        2    0[COMRAM] unsigned int 
  5483 ;;  divisor         2    2[COMRAM] unsigned int 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  quotient        2    4[COMRAM] unsigned int 
  5486 ;;  counter         1    6[COMRAM] unsigned char 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  2    0[COMRAM] unsigned int 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5496 ;;      Params:         4       0       0       0       0       0       0       0       0
  5497 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5499 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5500 ;;Total ram usage:        7 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_utoa
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text47
  5511  001AB2                     __ptext47:
  5512                           	opt callstack 0
  5513  001AB2                     ___lwdiv:
  5514                           	opt callstack 26
  5515                           
  5516                           ;incstack = 0
  5517  001AB2  0E00               	movlw	0
  5518  001AB4  6E06               	movwf	___lwdiv@quotient+1,c
  5519  001AB6  0E00               	movlw	0
  5520  001AB8  6E05               	movwf	___lwdiv@quotient,c
  5521  001ABA  5003               	movf	___lwdiv@divisor,w,c
  5522  001ABC  1004               	iorwf	___lwdiv@divisor+1,w,c
  5523  001ABE  B4D8               	btfsc	status,2,c
  5524  001AC0  D01C               	goto	l1015
  5525  001AC2  0E01               	movlw	1
  5526  001AC4  6E07               	movwf	___lwdiv@counter,c
  5527  001AC6  D004               	goto	l2287
  5528  001AC8                     l2285:
  5529  001AC8  90D8               	bcf	status,0,c
  5530  001ACA  3603               	rlcf	___lwdiv@divisor,f,c
  5531  001ACC  3604               	rlcf	___lwdiv@divisor+1,f,c
  5532  001ACE  2A07               	incf	___lwdiv@counter,f,c
  5533  001AD0                     l2287:
  5534  001AD0  AE04               	btfss	___lwdiv@divisor+1,7,c
  5535  001AD2  D7FA               	goto	l2285
  5536  001AD4                     u1660:
  5537  001AD4  90D8               	bcf	status,0,c
  5538  001AD6  3605               	rlcf	___lwdiv@quotient,f,c
  5539  001AD8  3606               	rlcf	___lwdiv@quotient+1,f,c
  5540  001ADA  5003               	movf	___lwdiv@divisor,w,c
  5541  001ADC  5C01               	subwf	___lwdiv@dividend,w,c
  5542  001ADE  5004               	movf	___lwdiv@divisor+1,w,c
  5543  001AE0  5802               	subwfb	___lwdiv@dividend+1,w,c
  5544  001AE2  A0D8               	btfss	status,0,c
  5545  001AE4  D005               	goto	l2297
  5546  001AE6  5003               	movf	___lwdiv@divisor,w,c
  5547  001AE8  5E01               	subwf	___lwdiv@dividend,f,c
  5548  001AEA  5004               	movf	___lwdiv@divisor+1,w,c
  5549  001AEC  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5550  001AEE  8005               	bsf	___lwdiv@quotient,0,c
  5551  001AF0                     l2297:
  5552  001AF0  90D8               	bcf	status,0,c
  5553  001AF2  3204               	rrcf	___lwdiv@divisor+1,f,c
  5554  001AF4  3203               	rrcf	___lwdiv@divisor,f,c
  5555  001AF6  2E07               	decfsz	___lwdiv@counter,f,c
  5556  001AF8  D7ED               	goto	u1660
  5557  001AFA                     l1015:
  5558  001AFA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5559  001AFE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5560  001B02  0012               	return		;funcret
  5561  001B04                     __end_of___lwdiv:
  5562                           	opt callstack 0
  5563                           
  5564 ;; *************** function ___fttol *****************
  5565 ;; Defined at:
  5566 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  f1              3   23[COMRAM] float 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  lval            4   33[COMRAM] unsigned long 
  5571 ;;  exp1            1   37[COMRAM] unsigned char 
  5572 ;;  sign1           1   32[COMRAM] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  4   23[COMRAM] long 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5582 ;;      Params:         4       0       0       0       0       0       0       0       0
  5583 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5584 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5585 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5586 ;;Total ram usage:       15 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    1
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_disp_show_quantity
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text48
  5597  00160A                     __ptext48:
  5598                           	opt callstack 0
  5599  00160A                     ___fttol:
  5600                           	opt callstack 28
  5601                           
  5602                           ;incstack = 0
  5603  00160A  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  5604  00160E  6A1D               	clrf	(??___fttol+1)& (0+255),c
  5605  001610  6A1E               	clrf	(??___fttol+2)& (0+255),c
  5606  001612  3419               	rlcf	___fttol@f1+1,w,c
  5607  001614  361C               	rlcf	??___fttol& (0+255),f,c
  5608  001616  E301               	bnc	u2801
  5609  001618  801D               	bsf	(??___fttol+1)& (0+255),0,c
  5610  00161A                     u2801:
  5611  00161A  501C               	movf	??___fttol,w,c
  5612  00161C  6E26               	movwf	___fttol@exp1,c
  5613  00161E  5026               	movf	___fttol@exp1,w,c
  5614  001620  A4D8               	btfss	status,2,c
  5615  001622  D009               	goto	l2823
  5616  001624                     u2810:
  5617  001624  0E00               	movlw	0
  5618  001626  6E18               	movwf	?___fttol,c
  5619  001628  0E00               	movlw	0
  5620  00162A  6E19               	movwf	?___fttol+1,c
  5621  00162C  0E00               	movlw	0
  5622  00162E  6E1A               	movwf	?___fttol+2,c
  5623  001630  0E00               	movlw	0
  5624  001632  6E1B               	movwf	?___fttol+3,c
  5625  001634  0012               	return	
  5626  001636                     l2823:
  5627  001636  0E17               	movlw	23
  5628  001638  6E1C               	movwf	??___fttol& (0+255),c
  5629  00163A  C018  F01D         	movff	___fttol@f1,??___fttol+1
  5630  00163E  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  5631  001642  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  5632  001646  281C               	incf	??___fttol,w,c
  5633  001648  6E20               	movwf	(??___fttol+4)& (0+255),c
  5634  00164A  D004               	goto	u2820
  5635  00164C                     u2825:
  5636  00164C  90D8               	bcf	status,0,c
  5637  00164E  321F               	rrcf	??___fttol+3,f,c
  5638  001650  321E               	rrcf	??___fttol+2,f,c
  5639  001652  321D               	rrcf	??___fttol+1,f,c
  5640  001654                     u2820:
  5641  001654  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  5642  001656  D7FA               	goto	u2825
  5643  001658  501D               	movf	??___fttol+1,w,c
  5644  00165A  6E21               	movwf	___fttol@sign1,c
  5645  00165C  8E19               	bsf	___fttol@f1+1,7,c
  5646  00165E  0EFF               	movlw	255
  5647  001660  1618               	andwf	___fttol@f1,f,c
  5648  001662  0EFF               	movlw	255
  5649  001664  1619               	andwf	___fttol@f1+1,f,c
  5650  001666  0E00               	movlw	0
  5651  001668  161A               	andwf	___fttol@f1+2,f,c
  5652  00166A  5018               	movf	___fttol@f1,w,c
  5653  00166C  6E22               	movwf	___fttol@lval,c
  5654  00166E  5019               	movf	___fttol@f1+1,w,c
  5655  001670  6E23               	movwf	___fttol@lval+1,c
  5656  001672  501A               	movf	___fttol@f1+2,w,c
  5657  001674  6E24               	movwf	___fttol@lval+2,c
  5658  001676  6A25               	clrf	___fttol@lval+3,c
  5659  001678  0E8E               	movlw	142
  5660  00167A  5E26               	subwf	___fttol@exp1,f,c
  5661  00167C  AE26               	btfss	___fttol@exp1,7,c
  5662  00167E  D00D               	goto	l2845
  5663  001680  5026               	movf	___fttol@exp1,w,c
  5664  001682  0A80               	xorlw	128
  5665  001684  0F8F               	addlw	143
  5666  001686  A0D8               	btfss	status,0,c
  5667  001688  D7CD               	goto	u2810
  5668  00168A                     l2841:
  5669  00168A  90D8               	bcf	status,0,c
  5670  00168C  3225               	rrcf	___fttol@lval+3,f,c
  5671  00168E  3224               	rrcf	___fttol@lval+2,f,c
  5672  001690  3223               	rrcf	___fttol@lval+1,f,c
  5673  001692  3222               	rrcf	___fttol@lval,f,c
  5674  001694  3E26               	incfsz	___fttol@exp1,f,c
  5675  001696  D7F9               	goto	l2841
  5676  001698  D00D               	goto	u2860
  5677  00169A                     l2845:
  5678  00169A  0E17               	movlw	23
  5679  00169C  6426               	cpfsgt	___fttol@exp1,c
  5680  00169E  D007               	goto	l2853
  5681  0016A0  D7C1               	goto	u2810
  5682  0016A2                     l2851:
  5683  0016A2  90D8               	bcf	status,0,c
  5684  0016A4  3622               	rlcf	___fttol@lval,f,c
  5685  0016A6  3623               	rlcf	___fttol@lval+1,f,c
  5686  0016A8  3624               	rlcf	___fttol@lval+2,f,c
  5687  0016AA  3625               	rlcf	___fttol@lval+3,f,c
  5688  0016AC  0626               	decf	___fttol@exp1,f,c
  5689  0016AE                     l2853:
  5690  0016AE  5026               	movf	___fttol@exp1,w,c
  5691  0016B0  A4D8               	btfss	status,2,c
  5692  0016B2  D7F7               	goto	l2851
  5693  0016B4                     u2860:
  5694  0016B4  5021               	movf	___fttol@sign1,w,c
  5695  0016B6  B4D8               	btfsc	status,2,c
  5696  0016B8  D008               	goto	l2859
  5697  0016BA  1E25               	comf	___fttol@lval+3,f,c
  5698  0016BC  1E24               	comf	___fttol@lval+2,f,c
  5699  0016BE  1E23               	comf	___fttol@lval+1,f,c
  5700  0016C0  6C22               	negf	___fttol@lval,c
  5701  0016C2  0E00               	movlw	0
  5702  0016C4  2223               	addwfc	___fttol@lval+1,f,c
  5703  0016C6  2224               	addwfc	___fttol@lval+2,f,c
  5704  0016C8  2225               	addwfc	___fttol@lval+3,f,c
  5705  0016CA                     l2859:
  5706  0016CA  C022  F018         	movff	___fttol@lval,?___fttol
  5707  0016CE  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  5708  0016D2  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  5709  0016D6  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  5710  0016DA  0012               	return		;funcret
  5711  0016DC                     __end_of___fttol:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function ___ftsub *****************
  5715 ;; Defined at:
  5716 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  f1              3   20[COMRAM] float 
  5719 ;;  f2              3   23[COMRAM] float 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  3   20[COMRAM] float 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5731 ;;      Params:         6       0       0       0       0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5734 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5735 ;;Total ram usage:        6 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    3
  5738 ;; This function calls:
  5739 ;;		___ftadd
  5740 ;; This function is called by:
  5741 ;;		_disp_show_quantity
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text49
  5746  001CAC                     __ptext49:
  5747                           	opt callstack 0
  5748  001CAC                     ___ftsub:
  5749                           	opt callstack 26
  5750                           
  5751                           ;incstack = 0
  5752  001CAC  5018               	movf	___ftsub@f2,w,c
  5753  001CAE  1019               	iorwf	___ftsub@f2+1,w,c
  5754  001CB0  101A               	iorwf	___ftsub@f2+2,w,c
  5755  001CB2  B4D8               	btfsc	status,2,c
  5756  001CB4  D006               	goto	l2801
  5757  001CB6  0E00               	movlw	0
  5758  001CB8  1A18               	xorwf	___ftsub@f2,f,c
  5759  001CBA  0E00               	movlw	0
  5760  001CBC  1A19               	xorwf	___ftsub@f2+1,f,c
  5761  001CBE  0E80               	movlw	128
  5762  001CC0  1A1A               	xorwf	___ftsub@f2+2,f,c
  5763  001CC2                     l2801:
  5764  001CC2  C015  F009         	movff	___ftsub@f1,___ftadd@f1
  5765  001CC6  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
  5766  001CCA  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
  5767  001CCE  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
  5768  001CD2  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
  5769  001CD6  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
  5770  001CDA  EC6C  F008         	call	___ftadd	;wreg free
  5771  001CDE  C009  F015         	movff	?___ftadd,?___ftsub
  5772  001CE2  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
  5773  001CE6  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
  5774  001CEA  0012               	return		;funcret
  5775  001CEC                     __end_of___ftsub:
  5776                           	opt callstack 0
  5777                           
  5778 ;; *************** function ___ftadd *****************
  5779 ;; Defined at:
  5780 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  f1              3    8[COMRAM] float 
  5783 ;;  f2              3   11[COMRAM] float 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  exp1            1   19[COMRAM] unsigned char 
  5786 ;;  exp2            1   18[COMRAM] unsigned char 
  5787 ;;  sign            1   17[COMRAM] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  3    8[COMRAM] float 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5797 ;;      Params:         6       0       0       0       0       0       0       0       0
  5798 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5799 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5800 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5801 ;;Total ram usage:       12 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    2
  5804 ;; This function calls:
  5805 ;;		___ftpack
  5806 ;; This function is called by:
  5807 ;;		___ftsub
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text50
  5812  0010D8                     __ptext50:
  5813                           	opt callstack 0
  5814  0010D8                     ___ftadd:
  5815                           	opt callstack 26
  5816                           
  5817                           ;incstack = 0
  5818  0010D8  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  5819  0010DC  6A10               	clrf	(??___ftadd+1)& (0+255),c
  5820  0010DE  6A11               	clrf	(??___ftadd+2)& (0+255),c
  5821  0010E0  340A               	rlcf	___ftadd@f1+1,w,c
  5822  0010E2  360F               	rlcf	??___ftadd& (0+255),f,c
  5823  0010E4  E301               	bnc	u1771
  5824  0010E6  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  5825  0010E8                     u1771:
  5826  0010E8  500F               	movf	??___ftadd,w,c
  5827  0010EA  6E14               	movwf	___ftadd@exp1,c
  5828  0010EC  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  5829  0010F0  6A10               	clrf	(??___ftadd+1)& (0+255),c
  5830  0010F2  6A11               	clrf	(??___ftadd+2)& (0+255),c
  5831  0010F4  340D               	rlcf	___ftadd@f2+1,w,c
  5832  0010F6  360F               	rlcf	??___ftadd& (0+255),f,c
  5833  0010F8  E301               	bnc	u1781
  5834  0010FA  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  5835  0010FC                     u1781:
  5836  0010FC  500F               	movf	??___ftadd,w,c
  5837  0010FE  6E13               	movwf	___ftadd@exp2,c
  5838  001100  5014               	movf	___ftadd@exp1,w,c
  5839  001102  B4D8               	btfsc	status,2,c
  5840  001104  D00A               	goto	u1810
  5841  001106  5013               	movf	___ftadd@exp2,w,c
  5842  001108  5C14               	subwf	___ftadd@exp1,w,c
  5843  00110A  B0D8               	btfsc	status,0,c
  5844  00110C  D00D               	goto	l2391
  5845  00110E  5014               	movf	___ftadd@exp1,w,c
  5846  001110  5C13               	subwf	___ftadd@exp2,w,c
  5847  001112  6E0F               	movwf	??___ftadd& (0+255),c
  5848  001114  0E18               	movlw	24
  5849  001116  640F               	cpfsgt	??___ftadd,c
  5850  001118  D007               	goto	l2391
  5851  00111A                     u1810:
  5852  00111A  C00C  F009         	movff	___ftadd@f2,?___ftadd
  5853  00111E  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  5854  001122  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  5855  001126  0012               	return	
  5856  001128                     l2391:
  5857  001128  5013               	movf	___ftadd@exp2,w,c
  5858  00112A  B4D8               	btfsc	status,2,c
  5859  00112C  D00A               	goto	u1840
  5860  00112E  5014               	movf	___ftadd@exp1,w,c
  5861  001130  5C13               	subwf	___ftadd@exp2,w,c
  5862  001132  B0D8               	btfsc	status,0,c
  5863  001134  D00D               	goto	l2397
  5864  001136  5013               	movf	___ftadd@exp2,w,c
  5865  001138  5C14               	subwf	___ftadd@exp1,w,c
  5866  00113A  6E0F               	movwf	??___ftadd& (0+255),c
  5867  00113C  0E18               	movlw	24
  5868  00113E  640F               	cpfsgt	??___ftadd,c
  5869  001140  D007               	goto	l2397
  5870  001142                     u1840:
  5871  001142  C009  F009         	movff	___ftadd@f1,?___ftadd
  5872  001146  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  5873  00114A  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  5874  00114E  0012               	return	
  5875  001150                     l2397:
  5876  001150  0E06               	movlw	6
  5877  001152  6E12               	movwf	___ftadd@sign,c
  5878  001154  BE0B               	btfsc	___ftadd@f1+2,7,c
  5879  001156  8E12               	bsf	___ftadd@sign,7,c
  5880  001158  BE0E               	btfsc	___ftadd@f2+2,7,c
  5881  00115A  8C12               	bsf	___ftadd@sign,6,c
  5882  00115C  8E0A               	bsf	___ftadd@f1+1,7,c
  5883  00115E  0EFF               	movlw	255
  5884  001160  1609               	andwf	___ftadd@f1,f,c
  5885  001162  0EFF               	movlw	255
  5886  001164  160A               	andwf	___ftadd@f1+1,f,c
  5887  001166  0E00               	movlw	0
  5888  001168  160B               	andwf	___ftadd@f1+2,f,c
  5889  00116A  8E0D               	bsf	___ftadd@f2+1,7,c
  5890  00116C  0EFF               	movlw	255
  5891  00116E  160C               	andwf	___ftadd@f2,f,c
  5892  001170  0EFF               	movlw	255
  5893  001172  160D               	andwf	___ftadd@f2+1,f,c
  5894  001174  0E00               	movlw	0
  5895  001176  160E               	andwf	___ftadd@f2+2,f,c
  5896  001178  5013               	movf	___ftadd@exp2,w,c
  5897  00117A  5C14               	subwf	___ftadd@exp1,w,c
  5898  00117C  B0D8               	btfsc	status,0,c
  5899  00117E  D01B               	goto	l2423
  5900  001180                     u1870:
  5901  001180  90D8               	bcf	status,0,c
  5902  001182  360C               	rlcf	___ftadd@f2,f,c
  5903  001184  360D               	rlcf	___ftadd@f2+1,f,c
  5904  001186  360E               	rlcf	___ftadd@f2+2,f,c
  5905  001188  0613               	decf	___ftadd@exp2,f,c
  5906  00118A  5014               	movf	___ftadd@exp1,w,c
  5907  00118C  1813               	xorwf	___ftadd@exp2,w,c
  5908  00118E  B4D8               	btfsc	status,2,c
  5909  001190  D00D               	goto	l2421
  5910  001192  0612               	decf	___ftadd@sign,f,c
  5911  001194  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5912  001198  0E07               	movlw	7
  5913  00119A  160F               	andwf	??___ftadd,f,c
  5914  00119C  B4D8               	btfsc	status,2,c
  5915  00119E  D006               	goto	l2421
  5916  0011A0  D7EF               	goto	u1870
  5917  0011A2                     l2419:
  5918  0011A2  90D8               	bcf	status,0,c
  5919  0011A4  320B               	rrcf	___ftadd@f1+2,f,c
  5920  0011A6  320A               	rrcf	___ftadd@f1+1,f,c
  5921  0011A8  3209               	rrcf	___ftadd@f1,f,c
  5922  0011AA  2A14               	incf	___ftadd@exp1,f,c
  5923  0011AC                     l2421:
  5924  0011AC  5013               	movf	___ftadd@exp2,w,c
  5925  0011AE  1814               	xorwf	___ftadd@exp1,w,c
  5926  0011B0  B4D8               	btfsc	status,2,c
  5927  0011B2  D01F               	goto	u1940
  5928  0011B4  D7F6               	goto	l2419
  5929  0011B6                     l2423:
  5930  0011B6  5014               	movf	___ftadd@exp1,w,c
  5931  0011B8  5C13               	subwf	___ftadd@exp2,w,c
  5932  0011BA  B0D8               	btfsc	status,0,c
  5933  0011BC  D01A               	goto	u1940
  5934  0011BE                     u1910:
  5935  0011BE  90D8               	bcf	status,0,c
  5936  0011C0  3609               	rlcf	___ftadd@f1,f,c
  5937  0011C2  360A               	rlcf	___ftadd@f1+1,f,c
  5938  0011C4  360B               	rlcf	___ftadd@f1+2,f,c
  5939  0011C6  0614               	decf	___ftadd@exp1,f,c
  5940  0011C8  5014               	movf	___ftadd@exp1,w,c
  5941  0011CA  1813               	xorwf	___ftadd@exp2,w,c
  5942  0011CC  B4D8               	btfsc	status,2,c
  5943  0011CE  D00D               	goto	l2433
  5944  0011D0  0612               	decf	___ftadd@sign,f,c
  5945  0011D2  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5946  0011D6  0E07               	movlw	7
  5947  0011D8  160F               	andwf	??___ftadd,f,c
  5948  0011DA  B4D8               	btfsc	status,2,c
  5949  0011DC  D006               	goto	l2433
  5950  0011DE  D7EF               	goto	u1910
  5951  0011E0                     l2431:
  5952  0011E0  90D8               	bcf	status,0,c
  5953  0011E2  320E               	rrcf	___ftadd@f2+2,f,c
  5954  0011E4  320D               	rrcf	___ftadd@f2+1,f,c
  5955  0011E6  320C               	rrcf	___ftadd@f2,f,c
  5956  0011E8  2A13               	incf	___ftadd@exp2,f,c
  5957  0011EA                     l2433:
  5958  0011EA  5013               	movf	___ftadd@exp2,w,c
  5959  0011EC  1814               	xorwf	___ftadd@exp1,w,c
  5960  0011EE  A4D8               	btfss	status,2,c
  5961  0011F0  D7F7               	goto	l2431
  5962  0011F2                     u1940:
  5963  0011F2  AE12               	btfss	___ftadd@sign,7,c
  5964  0011F4  D00C               	goto	l866
  5965  0011F6  0EFF               	movlw	255
  5966  0011F8  1A09               	xorwf	___ftadd@f1,f,c
  5967  0011FA  0EFF               	movlw	255
  5968  0011FC  1A0A               	xorwf	___ftadd@f1+1,f,c
  5969  0011FE  0EFF               	movlw	255
  5970  001200  1A0B               	xorwf	___ftadd@f1+2,f,c
  5971  001202  0E01               	movlw	1
  5972  001204  2609               	addwf	___ftadd@f1,f,c
  5973  001206  0E00               	movlw	0
  5974  001208  220A               	addwfc	___ftadd@f1+1,f,c
  5975  00120A  0E00               	movlw	0
  5976  00120C  220B               	addwfc	___ftadd@f1+2,f,c
  5977  00120E                     l866:
  5978  00120E  AC12               	btfss	___ftadd@sign,6,c
  5979  001210  D00C               	goto	l2439
  5980  001212  0EFF               	movlw	255
  5981  001214  1A0C               	xorwf	___ftadd@f2,f,c
  5982  001216  0EFF               	movlw	255
  5983  001218  1A0D               	xorwf	___ftadd@f2+1,f,c
  5984  00121A  0EFF               	movlw	255
  5985  00121C  1A0E               	xorwf	___ftadd@f2+2,f,c
  5986  00121E  0E01               	movlw	1
  5987  001220  260C               	addwf	___ftadd@f2,f,c
  5988  001222  0E00               	movlw	0
  5989  001224  220D               	addwfc	___ftadd@f2+1,f,c
  5990  001226  0E00               	movlw	0
  5991  001228  220E               	addwfc	___ftadd@f2+2,f,c
  5992  00122A                     l2439:
  5993  00122A  0E00               	movlw	0
  5994  00122C  6E12               	movwf	___ftadd@sign,c
  5995  00122E  5009               	movf	___ftadd@f1,w,c
  5996  001230  260C               	addwf	___ftadd@f2,f,c
  5997  001232  500A               	movf	___ftadd@f1+1,w,c
  5998  001234  220D               	addwfc	___ftadd@f2+1,f,c
  5999  001236  500B               	movf	___ftadd@f1+2,w,c
  6000  001238  220E               	addwfc	___ftadd@f2+2,f,c
  6001  00123A  AE0E               	btfss	___ftadd@f2+2,7,c
  6002  00123C  D00E               	goto	l2449
  6003  00123E  0EFF               	movlw	255
  6004  001240  1A0C               	xorwf	___ftadd@f2,f,c
  6005  001242  0EFF               	movlw	255
  6006  001244  1A0D               	xorwf	___ftadd@f2+1,f,c
  6007  001246  0EFF               	movlw	255
  6008  001248  1A0E               	xorwf	___ftadd@f2+2,f,c
  6009  00124A  0E01               	movlw	1
  6010  00124C  260C               	addwf	___ftadd@f2,f,c
  6011  00124E  0E00               	movlw	0
  6012  001250  220D               	addwfc	___ftadd@f2+1,f,c
  6013  001252  0E00               	movlw	0
  6014  001254  220E               	addwfc	___ftadd@f2+2,f,c
  6015  001256  0E01               	movlw	1
  6016  001258  6E12               	movwf	___ftadd@sign,c
  6017  00125A                     l2449:
  6018  00125A  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  6019  00125E  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  6020  001262  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  6021  001266  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  6022  00126A  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  6023  00126E  ECC9  F00B         	call	___ftpack	;wreg free
  6024  001272  C001  F009         	movff	?___ftpack,?___ftadd
  6025  001276  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  6026  00127A  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  6027  00127E  0012               	return		;funcret
  6028  001280                     __end_of___ftadd:
  6029                           	opt callstack 0
  6030                           
  6031 ;; *************** function ___ftmul *****************
  6032 ;; Defined at:
  6033 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  f1              3    8[COMRAM] float 
  6036 ;;  f2              3   11[COMRAM] float 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  6039 ;;  sign            1   22[COMRAM] unsigned char 
  6040 ;;  cntr            1   21[COMRAM] unsigned char 
  6041 ;;  exp             1   17[COMRAM] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  3    8[COMRAM] float 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0, cstack
  6046 ;; Tracked objects:
  6047 ;;		On entry : 3E/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         6       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6053 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6054 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6055 ;;Total ram usage:       15 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    2
  6058 ;; This function calls:
  6059 ;;		___ftpack
  6060 ;; This function is called by:
  6061 ;;		_disp_show_quantity
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text51
  6066  001516                     __ptext51:
  6067                           	opt callstack 0
  6068  001516                     ___ftmul:
  6069                           	opt callstack 27
  6070                           
  6071                           ;incstack = 0
  6072  001516  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  6073  00151A  6A10               	clrf	(??___ftmul+1)& (0+255),c
  6074  00151C  6A11               	clrf	(??___ftmul+2)& (0+255),c
  6075  00151E  340A               	rlcf	___ftmul@f1+1,w,c
  6076  001520  360F               	rlcf	??___ftmul& (0+255),f,c
  6077  001522  E301               	bnc	u2721
  6078  001524  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  6079  001526                     u2721:
  6080  001526  500F               	movf	??___ftmul,w,c
  6081  001528  6E12               	movwf	___ftmul@exp,c
  6082  00152A  5012               	movf	___ftmul@exp,w,c
  6083  00152C  A4D8               	btfss	status,2,c
  6084  00152E  D007               	goto	l2755
  6085  001530  0E00               	movlw	0
  6086  001532  6E09               	movwf	?___ftmul,c
  6087  001534  0E00               	movlw	0
  6088  001536  6E0A               	movwf	?___ftmul+1,c
  6089  001538  0E00               	movlw	0
  6090  00153A  6E0B               	movwf	?___ftmul+2,c
  6091  00153C  0012               	return	
  6092  00153E                     l2755:
  6093  00153E  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  6094  001542  6A10               	clrf	(??___ftmul+1)& (0+255),c
  6095  001544  6A11               	clrf	(??___ftmul+2)& (0+255),c
  6096  001546  340D               	rlcf	___ftmul@f2+1,w,c
  6097  001548  360F               	rlcf	??___ftmul& (0+255),f,c
  6098  00154A  E301               	bnc	u2741
  6099  00154C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  6100  00154E                     u2741:
  6101  00154E  500F               	movf	??___ftmul,w,c
  6102  001550  6E17               	movwf	___ftmul@sign,c
  6103  001552  5017               	movf	___ftmul@sign,w,c
  6104  001554  A4D8               	btfss	status,2,c
  6105  001556  D007               	goto	l2761
  6106  001558  0E00               	movlw	0
  6107  00155A  6E09               	movwf	?___ftmul,c
  6108  00155C  0E00               	movlw	0
  6109  00155E  6E0A               	movwf	?___ftmul+1,c
  6110  001560  0E00               	movlw	0
  6111  001562  6E0B               	movwf	?___ftmul+2,c
  6112  001564  0012               	return	
  6113  001566                     l2761:
  6114  001566  5017               	movf	___ftmul@sign,w,c
  6115  001568  0F7B               	addlw	123
  6116  00156A  2612               	addwf	___ftmul@exp,f,c
  6117  00156C  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  6118  001570  500E               	movf	___ftmul@f2+2,w,c
  6119  001572  1A17               	xorwf	___ftmul@sign,f,c
  6120  001574  0E80               	movlw	128
  6121  001576  1617               	andwf	___ftmul@sign,f,c
  6122  001578  8E0A               	bsf	___ftmul@f1+1,7,c
  6123  00157A  8E0D               	bsf	___ftmul@f2+1,7,c
  6124  00157C  0EFF               	movlw	255
  6125  00157E  160C               	andwf	___ftmul@f2,f,c
  6126  001580  0EFF               	movlw	255
  6127  001582  160D               	andwf	___ftmul@f2+1,f,c
  6128  001584  0E00               	movlw	0
  6129  001586  160E               	andwf	___ftmul@f2+2,f,c
  6130  001588  0E00               	movlw	0
  6131  00158A  6E13               	movwf	___ftmul@f3_as_product,c
  6132  00158C  0E00               	movlw	0
  6133  00158E  6E14               	movwf	___ftmul@f3_as_product+1,c
  6134  001590  0E00               	movlw	0
  6135  001592  6E15               	movwf	___ftmul@f3_as_product+2,c
  6136  001594  0E07               	movlw	7
  6137  001596  6E16               	movwf	___ftmul@cntr,c
  6138  001598                     l2775:
  6139  001598  A009               	btfss	___ftmul@f1,0,c
  6140  00159A  D006               	goto	l2779
  6141  00159C  500C               	movf	___ftmul@f2,w,c
  6142  00159E  2613               	addwf	___ftmul@f3_as_product,f,c
  6143  0015A0  500D               	movf	___ftmul@f2+1,w,c
  6144  0015A2  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  6145  0015A4  500E               	movf	___ftmul@f2+2,w,c
  6146  0015A6  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  6147  0015A8                     l2779:
  6148  0015A8  90D8               	bcf	status,0,c
  6149  0015AA  320B               	rrcf	___ftmul@f1+2,f,c
  6150  0015AC  320A               	rrcf	___ftmul@f1+1,f,c
  6151  0015AE  3209               	rrcf	___ftmul@f1,f,c
  6152  0015B0  90D8               	bcf	status,0,c
  6153  0015B2  360C               	rlcf	___ftmul@f2,f,c
  6154  0015B4  360D               	rlcf	___ftmul@f2+1,f,c
  6155  0015B6  360E               	rlcf	___ftmul@f2+2,f,c
  6156  0015B8  2E16               	decfsz	___ftmul@cntr,f,c
  6157  0015BA  D7EE               	goto	l2775
  6158  0015BC  0E09               	movlw	9
  6159  0015BE  6E16               	movwf	___ftmul@cntr,c
  6160  0015C0                     l2785:
  6161  0015C0  A009               	btfss	___ftmul@f1,0,c
  6162  0015C2  D006               	goto	l2789
  6163  0015C4  500C               	movf	___ftmul@f2,w,c
  6164  0015C6  2613               	addwf	___ftmul@f3_as_product,f,c
  6165  0015C8  500D               	movf	___ftmul@f2+1,w,c
  6166  0015CA  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  6167  0015CC  500E               	movf	___ftmul@f2+2,w,c
  6168  0015CE  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  6169  0015D0                     l2789:
  6170  0015D0  90D8               	bcf	status,0,c
  6171  0015D2  320B               	rrcf	___ftmul@f1+2,f,c
  6172  0015D4  320A               	rrcf	___ftmul@f1+1,f,c
  6173  0015D6  3209               	rrcf	___ftmul@f1,f,c
  6174  0015D8  90D8               	bcf	status,0,c
  6175  0015DA  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  6176  0015DC  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  6177  0015DE  3213               	rrcf	___ftmul@f3_as_product,f,c
  6178  0015E0  2E16               	decfsz	___ftmul@cntr,f,c
  6179  0015E2  D7EE               	goto	l2785
  6180  0015E4  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  6181  0015E8  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6182  0015EC  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6183  0015F0  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  6184  0015F4  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  6185  0015F8  ECC9  F00B         	call	___ftpack	;wreg free
  6186  0015FC  C001  F009         	movff	?___ftpack,?___ftmul
  6187  001600  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  6188  001604  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  6189  001608  0012               	return		;funcret
  6190  00160A                     __end_of___ftmul:
  6191                           	opt callstack 0
  6192                           
  6193 ;; *************** function ___ftge *****************
  6194 ;; Defined at:
  6195 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;  ff1             3   11[COMRAM] float 
  6198 ;;  ff2             3   14[COMRAM] float 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;		None               void
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6210 ;;      Params:         6       0       0       0       0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6212 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6213 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6214 ;;Total ram usage:        9 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    1
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_ikey_parsing
  6221 ;;		_disp_show_quantity
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text52
  6226  001974                     __ptext52:
  6227                           	opt callstack 0
  6228  001974                     ___ftge:
  6229                           	opt callstack 27
  6230                           
  6231                           ;incstack = 0
  6232  001974  AE0E               	btfss	___ftge@ff1+2,7,c
  6233  001976  D00F               	goto	l2457
  6234  001978  0E00               	movlw	0
  6235  00197A  6E12               	movwf	??___ftge& (0+255),c
  6236  00197C  0E00               	movlw	0
  6237  00197E  6E13               	movwf	(??___ftge+1)& (0+255),c
  6238  001980  0E80               	movlw	128
  6239  001982  6E14               	movwf	(??___ftge+2)& (0+255),c
  6240  001984  500C               	movf	___ftge@ff1,w,c
  6241  001986  5C12               	subwf	??___ftge,w,c
  6242  001988  6E0C               	movwf	___ftge@ff1,c
  6243  00198A  500D               	movf	___ftge@ff1+1,w,c
  6244  00198C  5813               	subwfb	??___ftge+1,w,c
  6245  00198E  6E0D               	movwf	___ftge@ff1+1,c
  6246  001990  500E               	movf	___ftge@ff1+2,w,c
  6247  001992  5814               	subwfb	??___ftge+2,w,c
  6248  001994  6E0E               	movwf	___ftge@ff1+2,c
  6249  001996                     l2457:
  6250  001996  AE11               	btfss	___ftge@ff2+2,7,c
  6251  001998  D00F               	goto	l2461
  6252  00199A  0E00               	movlw	0
  6253  00199C  6E12               	movwf	??___ftge& (0+255),c
  6254  00199E  0E00               	movlw	0
  6255  0019A0  6E13               	movwf	(??___ftge+1)& (0+255),c
  6256  0019A2  0E80               	movlw	128
  6257  0019A4  6E14               	movwf	(??___ftge+2)& (0+255),c
  6258  0019A6  500F               	movf	___ftge@ff2,w,c
  6259  0019A8  5C12               	subwf	??___ftge,w,c
  6260  0019AA  6E0F               	movwf	___ftge@ff2,c
  6261  0019AC  5010               	movf	___ftge@ff2+1,w,c
  6262  0019AE  5813               	subwfb	??___ftge+1,w,c
  6263  0019B0  6E10               	movwf	___ftge@ff2+1,c
  6264  0019B2  5011               	movf	___ftge@ff2+2,w,c
  6265  0019B4  5814               	subwfb	??___ftge+2,w,c
  6266  0019B6  6E11               	movwf	___ftge@ff2+2,c
  6267  0019B8                     l2461:
  6268  0019B8  0E00               	movlw	0
  6269  0019BA  1A0C               	xorwf	___ftge@ff1,f,c
  6270  0019BC  0E00               	movlw	0
  6271  0019BE  1A0D               	xorwf	___ftge@ff1+1,f,c
  6272  0019C0  0E80               	movlw	128
  6273  0019C2  1A0E               	xorwf	___ftge@ff1+2,f,c
  6274  0019C4  0E00               	movlw	0
  6275  0019C6  1A0F               	xorwf	___ftge@ff2,f,c
  6276  0019C8  0E00               	movlw	0
  6277  0019CA  1A10               	xorwf	___ftge@ff2+1,f,c
  6278  0019CC  0E80               	movlw	128
  6279  0019CE  1A11               	xorwf	___ftge@ff2+2,f,c
  6280  0019D0  500F               	movf	___ftge@ff2,w,c
  6281  0019D2  5C0C               	subwf	___ftge@ff1,w,c
  6282  0019D4  5010               	movf	___ftge@ff2+1,w,c
  6283  0019D6  580D               	subwfb	___ftge@ff1+1,w,c
  6284  0019D8  5011               	movf	___ftge@ff2+2,w,c
  6285  0019DA  580E               	subwfb	___ftge@ff1+2,w,c
  6286  0019DC  B0D8               	btfsc	status,0,c
  6287  0019DE  D002               	goto	l2467
  6288  0019E0  90D8               	bcf	status,0,c
  6289  0019E2  0012               	return	
  6290  0019E4                     l2467:
  6291  0019E4  80D8               	bsf	status,0,c
  6292  0019E6  0012               	return		;funcret
  6293  0019E8                     __end_of___ftge:
  6294                           	opt callstack 0
  6295                           
  6296 ;; *************** function ___awtoft *****************
  6297 ;; Defined at:
  6298 ;;		line 32 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awtoft.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  c               2    8[COMRAM] int 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  sign            1   11[COMRAM] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  3    8[COMRAM] float 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6312 ;;      Params:         3       0       0       0       0       0       0       0       0
  6313 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6315 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6316 ;;Total ram usage:        4 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    2
  6319 ;; This function calls:
  6320 ;;		___ftpack
  6321 ;; This function is called by:
  6322 ;;		_disp_show_quantity
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text53
  6327  001CEC                     __ptext53:
  6328                           	opt callstack 0
  6329  001CEC                     ___awtoft:
  6330                           	opt callstack 27
  6331                           
  6332                           ;incstack = 0
  6333  001CEC  0E00               	movlw	0
  6334  001CEE  6E0C               	movwf	___awtoft@sign,c
  6335  001CF0  AE0A               	btfss	___awtoft@c+1,7,c
  6336  001CF2  D006               	goto	l2813
  6337  001CF4  6C09               	negf	___awtoft@c,c
  6338  001CF6  1E0A               	comf	___awtoft@c+1,f,c
  6339  001CF8  B0D8               	btfsc	status,0,c
  6340  001CFA  2A0A               	incf	___awtoft@c+1,f,c
  6341  001CFC  0E01               	movlw	1
  6342  001CFE  6E0C               	movwf	___awtoft@sign,c
  6343  001D00                     l2813:
  6344  001D00  C009  F001         	movff	___awtoft@c,___ftpack@arg
  6345  001D04  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  6346  001D08  6A03               	clrf	___ftpack@arg+2,c
  6347  001D0A  0E8E               	movlw	142
  6348  001D0C  6E04               	movwf	___ftpack@exp,c
  6349  001D0E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  6350  001D12  ECC9  F00B         	call	___ftpack	;wreg free
  6351  001D16  C001  F009         	movff	?___ftpack,?___awtoft
  6352  001D1A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  6353  001D1E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  6354  001D22  0012               	return		;funcret
  6355  001D24                     __end_of___awtoft:
  6356                           	opt callstack 0
  6357                           
  6358 ;; *************** function ___ftpack *****************
  6359 ;; Defined at:
  6360 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  arg             3    0[COMRAM] unsigned um
  6363 ;;  exp             1    3[COMRAM] unsigned char 
  6364 ;;  sign            1    4[COMRAM] unsigned char 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  3    0[COMRAM] float 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6376 ;;      Params:         5       0       0       0       0       0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6378 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6379 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6380 ;;Total ram usage:        8 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    1
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		___awtoft
  6387 ;;		___ftadd
  6388 ;;		___ftmul
  6389 ;;		___lwtoft
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text54
  6394  001792                     __ptext54:
  6395                           	opt callstack 0
  6396  001792                     ___ftpack:
  6397                           	opt callstack 26
  6398                           
  6399                           ;incstack = 0
  6400  001792  5004               	movf	___ftpack@exp,w,c
  6401  001794  B4D8               	btfsc	status,2,c
  6402  001796  D005               	goto	u1580
  6403  001798  5001               	movf	___ftpack@arg,w,c
  6404  00179A  1002               	iorwf	___ftpack@arg+1,w,c
  6405  00179C  1003               	iorwf	___ftpack@arg+2,w,c
  6406  00179E  A4D8               	btfss	status,2,c
  6407  0017A0  D00C               	goto	l2253
  6408  0017A2                     u1580:
  6409  0017A2  0E00               	movlw	0
  6410  0017A4  6E01               	movwf	?___ftpack,c
  6411  0017A6  0E00               	movlw	0
  6412  0017A8  6E02               	movwf	?___ftpack+1,c
  6413  0017AA  0E00               	movlw	0
  6414  0017AC  6E03               	movwf	?___ftpack+2,c
  6415  0017AE  0012               	return	
  6416  0017B0                     l2251:
  6417  0017B0  2A04               	incf	___ftpack@exp,f,c
  6418  0017B2  90D8               	bcf	status,0,c
  6419  0017B4  3203               	rrcf	___ftpack@arg+2,f,c
  6420  0017B6  3202               	rrcf	___ftpack@arg+1,f,c
  6421  0017B8  3201               	rrcf	___ftpack@arg,f,c
  6422  0017BA                     l2253:
  6423  0017BA  0E00               	movlw	0
  6424  0017BC  1401               	andwf	___ftpack@arg,w,c
  6425  0017BE  6E06               	movwf	??___ftpack& (0+255),c
  6426  0017C0  0E00               	movlw	0
  6427  0017C2  1402               	andwf	___ftpack@arg+1,w,c
  6428  0017C4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6429  0017C6  0EFE               	movlw	254
  6430  0017C8  1403               	andwf	___ftpack@arg+2,w,c
  6431  0017CA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6432  0017CC  5006               	movf	??___ftpack,w,c
  6433  0017CE  1007               	iorwf	??___ftpack+1,w,c
  6434  0017D0  1008               	iorwf	??___ftpack+2,w,c
  6435  0017D2  B4D8               	btfsc	status,2,c
  6436  0017D4  D00C               	goto	l2259
  6437  0017D6  D7EC               	goto	l2251
  6438  0017D8                     l2255:
  6439  0017D8  2A04               	incf	___ftpack@exp,f,c
  6440  0017DA  0E01               	movlw	1
  6441  0017DC  2601               	addwf	___ftpack@arg,f,c
  6442  0017DE  0E00               	movlw	0
  6443  0017E0  2202               	addwfc	___ftpack@arg+1,f,c
  6444  0017E2  0E00               	movlw	0
  6445  0017E4  2203               	addwfc	___ftpack@arg+2,f,c
  6446  0017E6  90D8               	bcf	status,0,c
  6447  0017E8  3203               	rrcf	___ftpack@arg+2,f,c
  6448  0017EA  3202               	rrcf	___ftpack@arg+1,f,c
  6449  0017EC  3201               	rrcf	___ftpack@arg,f,c
  6450  0017EE                     l2259:
  6451  0017EE  0E00               	movlw	0
  6452  0017F0  1401               	andwf	___ftpack@arg,w,c
  6453  0017F2  6E06               	movwf	??___ftpack& (0+255),c
  6454  0017F4  0E00               	movlw	0
  6455  0017F6  1402               	andwf	___ftpack@arg+1,w,c
  6456  0017F8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6457  0017FA  0EFF               	movlw	255
  6458  0017FC  1403               	andwf	___ftpack@arg+2,w,c
  6459  0017FE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6460  001800  5006               	movf	??___ftpack,w,c
  6461  001802  1007               	iorwf	??___ftpack+1,w,c
  6462  001804  1008               	iorwf	??___ftpack+2,w,c
  6463  001806  B4D8               	btfsc	status,2,c
  6464  001808  D006               	goto	l2263
  6465  00180A  D7E6               	goto	l2255
  6466  00180C                     l2261:
  6467  00180C  0604               	decf	___ftpack@exp,f,c
  6468  00180E  90D8               	bcf	status,0,c
  6469  001810  3601               	rlcf	___ftpack@arg,f,c
  6470  001812  3602               	rlcf	___ftpack@arg+1,f,c
  6471  001814  3603               	rlcf	___ftpack@arg+2,f,c
  6472  001816                     l2263:
  6473  001816  BE02               	btfsc	___ftpack@arg+1,7,c
  6474  001818  D003               	goto	u1620
  6475  00181A  0E02               	movlw	2
  6476  00181C  6004               	cpfslt	___ftpack@exp,c
  6477  00181E  D7F6               	goto	l2261
  6478  001820                     u1620:
  6479  001820  A004               	btfss	___ftpack@exp,0,c
  6480  001822  9E02               	bcf	___ftpack@arg+1,7,c
  6481  001824  90D8               	bcf	status,0,c
  6482  001826  3204               	rrcf	___ftpack@exp,f,c
  6483  001828  5004               	movf	___ftpack@exp,w,c
  6484  00182A  1203               	iorwf	___ftpack@arg+2,f,c
  6485  00182C  5005               	movf	___ftpack@sign,w,c
  6486  00182E  A4D8               	btfss	status,2,c
  6487  001830  8E03               	bsf	___ftpack@arg+2,7,c
  6488  001832  C001  F001         	movff	___ftpack@arg,?___ftpack
  6489  001836  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6490  00183A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6491  00183E  0012               	return		;funcret
  6492  001840                     __end_of___ftpack:
  6493                           	opt callstack 0
  6494                           
  6495 ;; *************** function _INTERRUPCION *****************
  6496 ;; Defined at:
  6497 ;;		line 447 in file "main.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;		None
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  1    wreg      void 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0
  6512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6514 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6515 ;;Total ram usage:        0 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; This function calls:
  6518 ;;		Nothing
  6519 ;; This function is called by:
  6520 ;;		Interrupt level 2
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           	psect	intcode
  6525  000008                     __pintcode:
  6526                           	opt callstack 0
  6527  000008                     _INTERRUPCION:
  6528                           	opt callstack 26
  6529                           
  6530                           ;incstack = 0
  6531  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6532  00000A  ED4B  F00F         	call	int_func,f	;refresh shadow registers
  6533                           
  6534                           	psect	intcode_body
  6535  001E96                     __pintcode_body:
  6536                           	opt callstack 26
  6537  001E96                     int_func:
  6538                           	opt callstack 26
  6539  001E96  0006               	pop		; remove dummy address from shadow register refresh
  6540                           
  6541                           ;main.c: 450: if (TMR0IF)
  6542  001E98  A4F2               	btfss	4082,2,c	;volatile
  6543  001E9A  D005               	goto	i2l248
  6544                           
  6545                           ;main.c: 451: {;main.c: 452: isr_flag.f1ms = 1;
  6546  001E9C  8052               	bsf	_isr_flag,0,c	;volatile
  6547                           
  6548                           ;main.c: 454: TMR0IF = 0;
  6549  001E9E  94F2               	bcf	4082,2,c	;volatile
  6550                           
  6551                           ;main.c: 455: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ) >
      +                          > 8);
  6552  001EA0  68D7               	setf	4055,c	;volatile
  6553                           
  6554                           ;main.c: 456: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ));
  6555  001EA2  0ED1               	movlw	209
  6556  001EA4  6ED6               	movwf	4054,c	;volatile
  6557  001EA6                     i2l248:
  6558  001EA6  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6559  001EA8  0011               	retfie		f
  6560  001EAA                     __end_of_INTERRUPCION:
  6561                           	opt callstack 0
  6562                           
  6563                           	psect	rparam
  6564  0000                     
  6565                           	psect	temp
  6566  00005D                     btemp:
  6567                           	opt callstack 0
  6568  00005D                     	ds	1
  6569  0000                     int$flags	set	btemp
  6570  0000                     wtemp8	set	btemp+1
  6571  0000                     ttemp5	set	btemp+1
  6572  0000                     ttemp6	set	btemp+4
  6573  0000                     ttemp7	set	btemp+8
  6574                           tosu	equ	0xFFF
  6575                           tosh	equ	0xFFE
  6576                           tosl	equ	0xFFD
  6577                           stkptr	equ	0xFFC
  6578                           pclatu	equ	0xFFB
  6579                           pclath	equ	0xFFA
  6580                           pcl	equ	0xFF9
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           prodh	equ	0xFF4
  6586                           prodl	equ	0xFF3
  6587                           indf0	equ	0xFEF
  6588                           postinc0	equ	0xFEE
  6589                           postdec0	equ	0xFED
  6590                           preinc0	equ	0xFEC
  6591                           plusw0	equ	0xFEB
  6592                           fsr0h	equ	0xFEA
  6593                           fsr0l	equ	0xFE9
  6594                           wreg	equ	0xFE8
  6595                           indf1	equ	0xFE7
  6596                           postinc1	equ	0xFE6
  6597                           postdec1	equ	0xFE5
  6598                           preinc1	equ	0xFE4
  6599                           plusw1	equ	0xFE3
  6600                           fsr1h	equ	0xFE2
  6601                           fsr1l	equ	0xFE1
  6602                           bsr	equ	0xFE0
  6603                           indf2	equ	0xFDF
  6604                           postinc2	equ	0xFDE
  6605                           postdec2	equ	0xFDD
  6606                           preinc2	equ	0xFDC
  6607                           plusw2	equ	0xFDB
  6608                           fsr2h	equ	0xFDA
  6609                           fsr2l	equ	0xFD9
  6610                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        30
    BSS         222
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      92
    BANK0           160      0     102
    BANK1           256      0     123
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    S318_multiplexedDisp$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    multiplexedDisp.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    S205_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S205_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 


Critical Paths under _main in COMRAM

    _main->_disp_show_quantity
    _nozzle_moveto->_mpap_setupToTurn
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _ikb_flush->_ikey_clear_all_flag
    _display7s_job->_multiplexedDisp_job
    _display7s_init->_multiplexedDisp_init
    _disp_show_quantity->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___awtoft->___ftpack

Critical Paths under _INTERRUPCION in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24269
                                             61 COMRAM     2     2      0
                 _disp_show_quantity
                     _display7s_init
                      _display7s_job
                          _ikb_flush
                           _ikb_init
                            _ikb_job
              _ikb_key_is_ready2read
                           _mpap_job
                _mpap_setupToHomming
                          _mpap_stop
                      _nozzle_moveto
 ---------------------------------------------------------------------------------
 (1) _nozzle_moveto                                        1     1      0     979
                                             10 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     737
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _mpap_stop                                            0     0      0       0
                          __mpap_off
 ---------------------------------------------------------------------------------
 (2) __mpap_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mpap_setupToHomming                                  0     0      0     220
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToTurn                                     4     2      2     220
                                              6 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (2) _mpap_normal_mode                                     1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (2) _mpap_homming                                         2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (3) _mpap_do1step                                         1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (4) __mpap_step4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_key_is_ready2read                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    6790
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                              0 COMRAM     2     2      0
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
                   _keyRead_pin_key5 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key5                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    6327
                                             20 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3233
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_flush                                            0     0      0      68
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (2) _ikey_clear_all_flag                                  1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display7s_job                                        0     0      0     134
                _multiplexedDisp_job
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_job                                  8     8      0     134
                                              0 COMRAM     8     8      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (1) _display7s_init                                       0     0      0      68
               _multiplexedDisp_init
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_init                                 1     1      0      68
                                              0 COMRAM     1     1      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disp_show_quantity                                  23    20      3   15639
                                             38 COMRAM    23    20      3
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     1      5    1926
                                             15 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     3      5    1307
                                              7 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     543
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4433
                                             20 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4088
                                              8 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3602
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1200
                                             11 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3011
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPCION                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disp_show_quantity
     ___awtoft
       ___ftpack
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _display7s_init
     _multiplexedDisp_init
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _display7s_job
     _multiplexedDisp_job
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
       _keyRead_pin_key5 *
   _ikb_key_is_ready2read
   _mpap_job
     _mpap_homming
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
   _mpap_setupToHomming
     _mpap_setupToTurn
       ___wmul (ARG)
   _mpap_stop
     __mpap_off
   _nozzle_moveto
     ___wmul
     _mpap_setupToTurn
       ___wmul (ARG)

 _INTERRUPCION (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7B       7       48.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      66       5       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13D      20        0.0%
DATA                 0      0     13D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul  6 03:51:58 2019

                              _t 00C4            ??_mpap_setupToHomming 000B  
                             _xx 004D              ___wmul@multiplicand 0003  
                    __CFG_BORV$3 000000                     ___ftadd@exp1 0014  
                   ___ftadd@exp2 0013                     ___ftadd@sign 0012  
                            l126 1D74                              l128 1D78  
                            l154 1BE4                              l148 1AAE  
                            l361 0994                              l354 08F0  
                            l194 1496                              l371 0C2C  
                            l363 09F6                              l348 093A  
                            l196 14FC                              l381 0D8C  
                            l365 0A3A                              l383 0DC2  
                            l367 0A9C                              l377 0D58  
                            l369 0AE0                              l386 0E14  
                            l866 120E                              _GIE 007F97  
                 ?_display7s_job 0001                     __CFG_BOR$OFF 000000  
                            _key 0060                              tosl 000FFD  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             l1015 1AFA  
                           l1025 1C62                             l1207 1958  
                           l3001 10A0                             l2313 1C58  
                           l2305 1C38                             l2251 17B0  
                           l2307 1C40                             l2261 180C  
                           l2253 17BA                             l2421 11AC  
                           l2325 1C20                             l2263 1816  
                           l2255 17D8                             l2431 11E0  
                           l2423 11B6                             l2433 11EA  
                           l3065 148E                             l2259 17EE  
                           l2419 11A2                             l2611 0880  
                           l3091 14EC                             l3083 14CC  
                           l2461 19B8                             l2285 1AC8  
                           l2621 08D0                             l2613 0890  
                           l2439 122A                             l2391 1128  
                           l2287 1AD0                             l2359 1B9C  
                           l3087 14DC                             l3079 14BC  
                           l2457 1996                             l2449 125A  
                           l2801 1CC2                             l2297 1AF0  
                           l2721 1846                             l2617 08B0  
                           l2561 12C2                             l2529 1A90  
                           l2467 19E4                             l2707 1C70  
                           l2571 1334                             l2555 1284  
                           l3099 150E                             l2813 1D00  
                           l2397 1150                             l2477 18E8  
                           l2725 18AE                             l2661 0C1C  
                           l2573 1354                             l2823 1636  
                           l2487 191A                             l2911 1714  
                           l2655 0B92                             l2591 1418  
                           l2761 1566                             l2841 168A  
                           l2921 0E9E                             l2755 153E  
                           l2851 16A2                             l2739 1D3C  
                           l2579 1394                             l2853 16AE  
                           l2845 169A                             l2685 0E34  
                           l2669 0CDE                             l2775 1598  
                           l2943 0F74                             l2695 1E4C  
                           l2599 0812                             l2785 15C0  
                           l2961 0FB8                             l2881 1DCC  
                           l2779 15A8                             l2859 16CA  
                           l2947 0F80                             l2939 0F60  
                           l2789 15D0                             l2973 1010  
                           l2877 1DBE                             l2969 1004  
                           l2993 1098                             l2987 1048  
                           u3010 1E7E                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           u2128 12A6                             _LATD 000F8C  
                           u2129 12BA                             _LATE 000F8D  
                           u2170 1324                             u1620 1820  
                           u2238 13DE                             u2239 13F2  
                           u2168 130A                             u2169 131E  
                           u1810 111A                             u1580 17A2  
                           u1660 1AD4                             u1910 11BE  
                           u2198 1378                             u1718 1BFA  
                           u2199 138C                             u1719 1C0E  
                           u1840 1142                             u2721 1526  
                           u2801 161A                             u2810 1624  
                           u1690 1C44                             u1771 10E8  
                           u1940 11F2                             u2820 1654  
                           u2741 154E                             u1781 10FC  
                           u1870 1180                             u2638 1C80  
                           u2654 185C                             u2639 1C94  
                           u2655 1856                             u2664 1876  
                           u2825 164C                             u2665 1870  
                           u2860 16B4                             u2940 0F5C  
                           u2950 0F70                             u2688 189A  
                           u2698 18BE                             u2699 18D2  
                           u2980 1000                             _UCFG 000F6F  
                           _UCON 000F6D                     __CFG_PWRT$ON 000000  
          _ikb_key_is_ready2read 1E66                  ?_display7s_init 0001  
    __size_of_disp_show_quantity 029A                             _main 1420  
                   ___ftpack@arg 0001                             _itoa 1D24  
                           _mpap 0040                     ___ftpack@exp 0004  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 005D  
                           _utoa 18E0                    _nozzle_moveto 1D86  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                    __CFG_IESO$OFF 000000  
            _multiplexedDisp0_on 1F5C              _multiplexedDisp1_on 1F54  
            _multiplexedDisp2_on 1F4C              _multiplexedDisp3_on 1F44  
            _multiplexedDisp4_on 1F64                    __CFG_MCLRE$ON 000000  
                   ___ftmul@cntr 0016             __end_of_DISP7S_CHARS 080D  
                   ___param_bank 000000                     ___ftmul@sign 0017  
            _multiplexedDisp_job 1840                     ___fttol@exp1 0026  
                   ___fttol@lval 0022                    __CFG_PLLDIV$5 000000  
                          ?_main 0001                            ?_itoa 0010  
                __end_of___ftadd 1280                            _CMCON 000FB4  
                          ?_utoa 0008                  __end_of___ftmul 160A  
                          _T0CON 000FD5                  __end_of___ftsub 1CEC  
                __end_of___fttol 16DC                  __end_of___lwdiv 1B04  
                __end_of___lwmod 1C6C                            i2l248 1EA6  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _PORTC 000F82                            _PORTD 000F83  
                          _PORTE 000F84                    __CFG_USBDIV$2 000000  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96             ?_multiplexedDisp0_on 0001  
           ?_multiplexedDisp1_on 0001             ?_multiplexedDisp2_on 0001  
           ?_multiplexedDisp3_on 0001             ?_multiplexedDisp4_on 0001  
                 __CFG_FCMEN$OFF 000000                  __end_of_ikb_job 1F10  
           ?_multiplexedDisp_job 0001                    ___awtoft@sign 000C  
                  ?_INTERRUPCION 0001                    ___ftpack@sign 0005  
                          main@c 003E                            pclath 000FFA  
                          tablat 000FF5                            ttemp5 005E  
                          ttemp6 0061                            ttemp7 0065  
                          utoa@c 000F                            utoa@v 000D  
                          status 000FD8                   ?_nozzle_moveto 0001  
                          wtemp8 005E      __size_of_ikey_is_accessible 004C  
           _multiplexedDisp0_off 1F60             _multiplexedDisp1_off 1F58  
           _multiplexedDisp2_off 1F50             _multiplexedDisp3_off 1F48  
           _multiplexedDisp4_off 1F40                    ?_ikey_parsing 0001  
           __size_of__mpap_step1 000A             __size_of__mpap_step2 000A  
           __size_of__mpap_step3 000A             __size_of__mpap_step4 000A  
                __initialization 19E8                     __end_of_main 1516  
                   __end_of_itoa 1D56             _multiplexedDisp_init 1C6C  
                   __end_of_utoa 1974                  ??_display7s_job 0009  
                         ??_main 003E                    ___fttol@sign1 0021  
                         ??_itoa 0015                           ??_utoa 000D  
                  mpap_do1step@i 0050                    __activetblptr 000002  
          ??_multiplexedDisp0_on 0001            ??_multiplexedDisp1_on 0001  
          ??_multiplexedDisp2_on 0001            ??_multiplexedDisp3_on 0001  
          ??_multiplexedDisp4_on 0001            ??_multiplexedDisp_job 0001  
                 ??_INTERRUPCION 0001                           _ADCON1 000FC1  
       __end_of_keyRead_pin_key1 1F2C         __end_of_keyRead_pin_key2 1F24  
       __end_of_keyRead_pin_key3 1F1A         __end_of_keyRead_pin_key4 1F3A  
       __end_of_keyRead_pin_key5 1F34           ?_ikb_key_is_ready2read 0001  
               __end_of___awtoft 1D24                 __end_of___ftpack 1840  
               __end_of___lwtoft 1E48                           _TMR0IE 007F95  
                         _TMR0IF 007F92            ?_multiplexedDisp0_off 0001  
          ?_multiplexedDisp1_off 0001            ?_multiplexedDisp2_off 0001  
          ?_multiplexedDisp3_off 0001            ?_multiplexedDisp4_off 0001  
                 ??_ikey_parsing 0015                   __CFG_VREGEN$ON 000000  
       __end_of_mpap_normal_mode 1BE8                 __end_of_ikb_init 1792  
          ?_multiplexedDisp_init 0001                           ___ftge 1974  
                         ___wmul 1DD8                        ??___ftadd 000F  
                      ??___ftmul 000F                        ??___ftsub 001B  
                      ??___fttol 001C                        ??___lwdiv 0005  
                      ??___lwmod 0005                           clear_0 1A2E  
                         clear_1 1A3A                           clear_2 1A46  
               __end_of_mpap_job 1DD8                        ??_ikb_job 001A  
          ___ftmul@f3_as_product 0013         __end_of_mpap_setupToTurn 1D86  
                   __pdataCOMRAM 0053                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8              ikey_is_accessible@k 0003  
                ??_nozzle_moveto 000B     __size_of_ikey_clear_all_flag 001E  
                     __accesstop 0060          __end_of__initialization 1A4C  
                __CFG_PBADEN$OFF 000000                    ?_mpap_do1step 0001  
                     ___ftadd@f1 0009                       ___ftadd@f2 000C  
                     ___ftge@ff1 000C                       ___ftge@ff2 000F  
                  ___rparam_used 000001                       ___awtoft@c 0009  
                     ___ftmul@f1 0009                       ___ftmul@f2 000C  
                     ___ftsub@f1 0015                       ___ftsub@f2 0018  
                     ___fttol@f1 0018                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1E82                    ?_mpap_homming 0001  
             __size_of__mpap_off 000A                       ___lwtoft@c 0009  
               ??_display7s_init 0002                     _DISP7S_CHARS 080B  
             __size_of_ikb_flush 0006                   mpap_do1step@KI 0001  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                 ??_mpap_do1step 0001           ??_multiplexedDisp0_off 0001  
         ??_multiplexedDisp1_off 0001           ??_multiplexedDisp2_off 0001  
         ??_multiplexedDisp3_off 0001           ??_multiplexedDisp4_off 0001  
             __size_of_ikey_scan 01A0      __end_of_mpap_setupToHomming 1EBC  
         ??_multiplexedDisp_init 0001                   ??_mpap_homming 0002  
                        ?___ftge 000C             __end_of_INTERRUPCION 1EAA  
             __size_of_mpap_stop 000E                          ?___wmul 0001  
                      ?___awtoft 0009                        ?___ftpack 0001  
                      ?___lwtoft 0009             __end_of_ikey_parsing 0E3E  
     __end_of_disp_show_quantity 10D8                        ?_ikb_init 0001  
              __end_of__mpap_off 1EDE                   display7s_job@q 004F  
                      ?_mpap_job 0001                          __Hparam 0000  
                        __Lparam 0000                __end_of_ikb_flush 1F40  
                __size_of___ftge 0074                          ___ftadd 10D8  
                __size_of___wmul 0026                          ___ftmul 1516  
                        ___ftsub 1CAC                          ___fttol 160A  
                        ___lwdiv 1AB2                          ___lwmod 1C2A  
                   __psmallconst 0800                          __pcinit 19E8  
                     ??___awtoft 000C                       ??___ftpack 0006  
                        __ramtop 0800                          __ptext0 1420  
                        __ptext1 1D86                          __ptext2 1DD8  
                        __ptext3 1EBC                          __ptext4 1ED4  
                        __ptext5 1EAA                          __ptext6 1D56  
                        __ptext7 1DB0                          __ptext8 1BA0  
                        __ptext9 1A5A                __end_of_ikey_scan 1420  
                        _ikb_job 1F06                       ??___lwtoft 000C  
                        _group_x 0048          ??_ikb_key_is_ready2read 0001  
     disp_show_quantity@last_pos 0039                __end_of_mpap_stop 1ECA  
        mpap_normal_mode@cod_ret 0002                       ??_ikb_init 0001  
                 __pintcode_body 1E96             end_of_initialization 1A4C  
     __end_of_ikey_is_accessible 1BA0                ?_keyRead_pin_key1 0001  
              ?_keyRead_pin_key2 0001                ?_keyRead_pin_key3 0001  
              ?_keyRead_pin_key4 0001                ?_keyRead_pin_key5 0001  
                  ??__mpap_step1 0001                    ??__mpap_step2 0001  
                  ??__mpap_step3 0001                    ??__mpap_step4 0001  
                        itoa@buf 0010                          itoa@val 0011  
                  __Lmediumconst 0000                          int_func 1E96  
             ??_keyRead_pin_key1 0001               ??_keyRead_pin_key2 0001  
             ??_keyRead_pin_key3 0001               ??_keyRead_pin_key4 0001  
             ??_keyRead_pin_key5 0001                       ??_mpap_job 0004  
              ?_mpap_normal_mode 0001                          postdec1 000FE5  
                        postdec2 000FDD               ??_mpap_normal_mode 0002  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE           ikb_key_is_ready2read@k 0001  
                        utoa@buf 0008      __end_of_multiplexedDisp0_on 1F60  
    __end_of_multiplexedDisp1_on 1F58      __end_of_multiplexedDisp2_on 1F50  
    __end_of_multiplexedDisp3_on 1F48                          utoa@val 0009  
    __end_of_multiplexedDisp4_on 1F68              _ikey_clear_all_flag 1E48  
    __end_of_multiplexedDisp_job 18E0             __end_of_mpap_do1step 1C2A  
          __end_of_display7s_job 1E24             ikey_clear_all_flag@i 0001  
              ?_mpap_setupToTurn 0007               ??_mpap_setupToTurn 0009  
           __end_of_mpap_homming 1AB2              nozzle_moveto@nozzle 000B  
           ?_ikey_clear_all_flag 0001                       main@c_disp 003F  
          __size_of_INTERRUPCION 1EA2                      ___ftmul@exp 0012  
            __end_of__mpap_step1 1EFC              __end_of__mpap_step2 1EF2  
            __end_of__mpap_step3 1EE8              __end_of__mpap_step4 1F06  
            __end_of_DISP7S_NUMS 080B                   __end_of___ftge 19E8  
mpap_setupToTurn@numSteps_tomove 0007            __size_of_ikey_parsing 0630  
                 __end_of___wmul 1DFE                    __pidataCOMRAM 1ECA  
            start_initialization 19E8                     _INTERRUPCION 0008  
          ??_ikey_clear_all_flag 0001                       ikey_scan@k 0002  
          __end_of_nozzle_moveto 1DB0                     _ikey_parsing 080E  
         disp_show_quantity@buff 002B                         ??___ftge 0012  
         disp_show_quantity@real 0035                         ??___wmul 0005  
                    __pdataBANK0 00B0                __size_of___awtoft 0038  
              __size_of___ftpack 00AE                      __pbssCOMRAM 0040  
              __size_of___lwtoft 0024                    ikey_parsing@k 0019  
              __size_of_ikb_init 00B6                      __mpap_step1 1EF2  
                    __mpap_step2 1EE8                      __mpap_step3 1EDE  
                    __mpap_step4 1EFC                      _DISP7S_NUMS 0801  
                      __pnvBANK0 00C4    __size_of_multiplexedDisp0_off 0004  
  __size_of_multiplexedDisp1_off 0004    __size_of_multiplexedDisp2_off 0004  
  __size_of_multiplexedDisp3_off 0004    __size_of_multiplexedDisp4_off 0004  
                      __mpap_off 1ED4                 ___lwdiv@dividend 0001  
             _disp_show_quantity 0E3E                __size_of_mpap_job 0028  
                      __pintcode 0008    __size_of_multiplexedDisp_init 0040  
          __size_of_mpap_do1step 0042                         ?___ftadd 0009  
                       ?___ftmul 0009                         ?___ftsub 0015  
                       ?___fttol 0018                         ?___lwdiv 0001  
                       ?___lwmod 0001     __size_of_mpap_setupToHomming 0012  
            ?_disp_show_quantity 0027                        _ikb_flush 1F3A  
                       ?_ikb_job 0001                      __smallconst 0800  
          __size_of_mpap_homming 0058                  _multiplexedDisp 00B0  
                      _main_flag 0051            multiplexedDisp_init@i 0001  
                      _ikey_scan 1280   __size_of_ikb_key_is_ready2read 001C  
               ___lwdiv@quotient 0005    __end_of_ikb_key_is_ready2read 1E82  
           ??_disp_show_quantity 002A                        _mpap_step 0053  
                      _mpap_stop 1EBC                   ___wmul@product 0005  
                   _mpap_do1step 1BE8          __size_of_display7s_init 0050  
                     ?__mpap_off 0001               _ikey_is_accessible 1B54  
                   _mpap_homming 1A5A        __size_of_keyRead_pin_key1 0008  
      __size_of_keyRead_pin_key2 000A        __size_of_keyRead_pin_key3 000A  
      __size_of_keyRead_pin_key4 0006        __size_of_keyRead_pin_key5 0008  
                     ?_ikb_flush 0001                ___wmul@multiplier 0001  
            ?_ikey_is_accessible 0001                        ikb_init@i 0001  
      __size_of_mpap_normal_mode 0048                       ?_ikey_scan 0001  
                      copy_data0 19FC                        copy_data1 1A1C  
            mpap_homming@cod_ret 0003                       ?_mpap_stop 0001  
           ??_ikey_is_accessible 0001        __size_of_mpap_setupToTurn 0030  
                       __Hrparam 0000                         __Lrparam 0000  
          disp_show_quantity@num 0038                 __size_of___ftadd 01A8  
               __size_of___ftmul 00F4                 __size_of___ftsub 0040  
               __size_of___fttol 00D2                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042                         ___awtoft 1CEC  
                       ___ftpack 1792                         ___lwtoft 1E24  
               __size_of_ikb_job 000A     __size_of_multiplexedDisp0_on 0004  
   __size_of_multiplexedDisp1_on 0004     __size_of_multiplexedDisp2_on 0004  
   __size_of_multiplexedDisp3_on 0004     __size_of_multiplexedDisp4_on 0004  
                ___lwdiv@divisor 0003     __size_of_multiplexedDisp_job 00A0  
                ___lwdiv@counter 0007                         __ptext10 1BE8  
                       __ptext11 1EDE                         __ptext20 1F1A  
                       __ptext12 1EE8                         __ptext21 1F24  
                       __ptext13 1EF2                         __ptext30 1840  
                       __ptext22 1F2C                         __ptext14 1EFC  
                       __ptext31 1B04                         __ptext23 080E  
                       __ptext15 1E66                         __ptext40 1F5C  
                       __ptext32 1C6C                         __ptext24 1B54  
                       __ptext16 1F06                         __ptext41 1F60  
                       __ptext33 1F40                         __ptext25 1E24  
                       __ptext17 1280                         __ptext50 10D8  
                       __ptext42 1F64                         __ptext34 1F44  
                       __ptext26 16DC                         __ptext18 1F34  
                       __ptext51 1516                         __ptext43 0E3E  
                       __ptext35 1F48                         __ptext27 1F3A  
                       __ptext19 1F10                         __ptext52 1974  
                       __ptext44 1D24                         __ptext36 1F4C  
                       __ptext28 1E48                         __ptext53 1CEC  
                       __ptext45 18E0                         __ptext37 1F50  
                       __ptext29 1DFE                         __ptext54 1792  
                       __ptext46 1C2A                         __ptext38 1F54  
                       __ptext47 1AB2                         __ptext39 1F58  
                       __ptext48 160A                         __ptext49 1CAC  
                       _ikb_init 16DC             _mpap_setupToTurn$149 0009  
           multiplexedDisp_job@i 0008             multiplexedDisp_job@q 0007  
                  __size_of_main 00F6                    __size_of_itoa 0032  
                  __size_of_utoa 0094                         _isr_flag 0052  
                       _mpap_job 1DB0                         _mpap_off 005B  
                    ??__mpap_off 0001           __size_of_display7s_job 0026  
                       int$flags 005D                         _pulsonic 0100  
                    ??_ikb_flush 0002            __CFG_CPUDIV$OSC1_PLL2 000000  
    __end_of_ikey_clear_all_flag 1E66                      ??_ikey_scan 0001  
                       itoa@base 0013                         intlevel2 0000  
            _mpap_setupToHomming 1EAA                 ___lwmod@dividend 0001  
                    ??_mpap_stop 0001                     ?__mpap_step1 0001  
                   ?__mpap_step2 0001                     ?__mpap_step3 0001  
                   ?__mpap_step4 0001                   _display7s_init 1B04  
               _keyRead_pin_key1 1F24                 _keyRead_pin_key2 1F1A  
               _keyRead_pin_key3 1F10                 _keyRead_pin_key4 1F34  
               _keyRead_pin_key5 1F2C             ?_mpap_setupToHomming 0001  
            disp_show_quantity@I 003B              disp_show_quantity@f 0027  
            disp_show_quantity@i 003D              disp_show_quantity@q 003A  
                       utoa@base 000B     __end_of_multiplexedDisp0_off 1F64  
   __end_of_multiplexedDisp1_off 1F5C     __end_of_multiplexedDisp2_off 1F54  
   __end_of_multiplexedDisp3_off 1F4C     __end_of_multiplexedDisp4_off 1F44  
         __size_of_nozzle_moveto 002A                  ___lwmod@divisor 0003  
               _mpap_normal_mode 1BA0                    _display7s_job 1DFE  
                ___lwmod@counter 0005     __end_of_multiplexedDisp_init 1CAC  
             __CFG_FOSC$HSPLL_HS 000000           __end_of_display7s_init 1B54  
               _mpap_setupToTurn 1D56  
