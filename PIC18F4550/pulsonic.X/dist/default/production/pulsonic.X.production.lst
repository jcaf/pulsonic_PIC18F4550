

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul 11 16:03:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,keep,inline
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,keep,inline
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,keep,inline
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,keep,inline
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,keep,inline
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,keep,inline
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,keep,inline
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,keep,inline
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,keep,inline
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  002070                     __pidataCOMRAM:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for mpap_do1step@i
   119  002070  FF                 	db	255
   120                           
   121                           	psect	idataBANK0
   122  001F72                     __pidataBANK0:
   123                           	opt callstack 0
   124                           
   125                           ;initializer for _multiplexedDisp
   126  001F72  68                 	db	low _multiplexedDisp0_off
   127  001F73  20                 	db	high _multiplexedDisp0_off
   128  001F74  64                 	db	low _multiplexedDisp0_on
   129  001F75  20                 	db	high _multiplexedDisp0_on
   130  001F76  60                 	db	low _multiplexedDisp1_off
   131  001F77  20                 	db	high _multiplexedDisp1_off
   132  001F78  5C                 	db	low _multiplexedDisp1_on
   133  001F79  20                 	db	high _multiplexedDisp1_on
   134  001F7A  58                 	db	low _multiplexedDisp2_off
   135  001F7B  20                 	db	high _multiplexedDisp2_off
   136  001F7C  54                 	db	low _multiplexedDisp2_on
   137  001F7D  20                 	db	high _multiplexedDisp2_on
   138  001F7E  50                 	db	low _multiplexedDisp3_off
   139  001F7F  20                 	db	high _multiplexedDisp3_off
   140  001F80  4C                 	db	low _multiplexedDisp3_on
   141  001F81  20                 	db	high _multiplexedDisp3_on
   142  001F82  48                 	db	low _multiplexedDisp4_off
   143  001F83  20                 	db	high _multiplexedDisp4_off
   144  001F84  6C                 	db	low _multiplexedDisp4_on
   145  001F85  20                 	db	high _multiplexedDisp4_on
   146                           
   147                           ;initializer for _mpap_step
   148  001F86  0E                 	db	low __mpap_step1
   149  001F87  20                 	db	high __mpap_step1
   150  001F88  04                 	db	low __mpap_step2
   151  001F89  20                 	db	high __mpap_step2
   152  001F8A  FA                 	db	low __mpap_step3
   153  001F8B  1F                 	db	high __mpap_step3
   154  001F8C  18                 	db	low __mpap_step4
   155  001F8D  20                 	db	high __mpap_step4
   156                           
   157                           ;initializer for _mpap_off
   158  001F8E  22                 	db	low __mpap_off
   159  001F8F  20                 	db	high __mpap_off
   160                           
   161                           	psect	smallconst
   162  000800                     __psmallconst:
   163                           	opt callstack 0
   164  000800  00                 	db	0
   165  000801                     _DISP7S_NUMS:
   166                           	opt callstack 0
   167  000801  3F                 	db	63
   168  000802  06                 	db	6
   169  000803  5B                 	db	91
   170  000804  4F                 	db	79
   171  000805  66                 	db	102
   172  000806  6D                 	db	109
   173  000807  7C                 	db	124
   174  000808  07                 	db	7
   175  000809  7F                 	db	127
   176  00080A  67                 	db	103
   177  00080B                     __end_of_DISP7S_NUMS:
   178                           	opt callstack 0
   179  00080B                     _DISP7S_CHARS:
   180                           	opt callstack 0
   181  00080B  00                 	db	0
   182  00080C  40                 	db	64
   183  00080D                     __end_of_DISP7S_CHARS:
   184                           	opt callstack 0
   185  0000                     _PORTE	set	3972
   186  0000                     _TRISB	set	3987
   187  0000                     _TRISA	set	3986
   188  0000                     _PORTD	set	3971
   189  0000                     _PORTC	set	3970
   190  0000                     _TRISC	set	3988
   191  0000                     _TRISD	set	3989
   192  0000                     _TRISE	set	3990
   193  0000                     _TMR0L	set	4054
   194  0000                     _TMR0H	set	4055
   195  0000                     _T0CON	set	4053
   196  0000                     _UCFG	set	3951
   197  0000                     _UCON	set	3949
   198  0000                     _CMCON	set	4020
   199  0000                     _ADCON1	set	4033
   200  0000                     _LATB	set	3978
   201  0000                     _LATD	set	3980
   202  0000                     _LATC	set	3979
   203  0000                     _LATA	set	3977
   204  0000                     _LATE	set	3981
   205  0000                     _TMR0IF	set	32658
   206  0000                     _GIE	set	32663
   207  0000                     _TMR0IE	set	32661
   208                           
   209                           ; #config settings
   210  00080D  00                 	db	0	; dummy byte at the end
   211  0000                     
   212                           	psect	cinit
   213  001A7E                     __pcinit:
   214                           	opt callstack 0
   215  001A7E                     start_initialization:
   216                           	opt callstack 0
   217  001A7E                     __initialization:
   218                           	opt callstack 0
   219                           
   220                           ; Initialize objects allocated to BANK0 (30 bytes)
   221                           ; load TBLPTR registers with __pidataBANK0
   222  001A7E  0E72               	movlw	low __pidataBANK0
   223  001A80  6EF6               	movwf	tblptrl,c
   224  001A82  0E1F               	movlw	high __pidataBANK0
   225  001A84  6EF7               	movwf	tblptrh,c
   226  001A86  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   227  001A88  6EF8               	movwf	tblptru,c
   228  001A8A  EE00  F0BE         	lfsr	0,__pdataBANK0
   229  001A8E  EE10 F01E          	lfsr	1,30
   230  001A92                     copy_data0:
   231  001A92  0009               	tblrd		*+
   232  001A94  CFF5 FFEE          	movff	tablat,postinc0
   233  001A98  50E5               	movf	postdec1,w,c
   234  001A9A  50E1               	movf	fsr1l,w,c
   235  001A9C  E1FA               	bnz	copy_data0
   236                           
   237                           ; Initialize objects allocated to COMRAM (1 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239  001A9E  0E70               	movlw	low __pidataCOMRAM
   240  001AA0  6EF6               	movwf	tblptrl,c
   241  001AA2  0E20               	movlw	high __pidataCOMRAM
   242  001AA4  6EF7               	movwf	tblptrh,c
   243  001AA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244  001AA8  6EF8               	movwf	tblptru,c
   245  001AAA  0009               	tblrd		*+	;fetch initializer
   246  001AAC  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   247                           
   248                           ; Clear objects allocated to BANK1 (123 bytes)
   249  001AB0  EE01  F000         	lfsr	0,__pbssBANK1
   250  001AB4  0E7B               	movlw	123
   251  001AB6                     clear_0:
   252  001AB6  6AEE               	clrf	postinc0,c
   253  001AB8  06E8               	decf	wreg,f,c
   254  001ABA  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to BANK0 (94 bytes)
   257  001ABC  EE00  F060         	lfsr	0,__pbssBANK0
   258  001AC0  0E5E               	movlw	94
   259  001AC2                     clear_1:
   260  001AC2  6AEE               	clrf	postinc0,c
   261  001AC4  06E8               	decf	wreg,f,c
   262  001AC6  E1FD               	bnz	clear_1
   263                           
   264                           ; Clear objects allocated to COMRAM (19 bytes)
   265  001AC8  EE00  F038         	lfsr	0,__pbssCOMRAM
   266  001ACC  0E13               	movlw	19
   267  001ACE                     clear_2:
   268  001ACE  6AEE               	clrf	postinc0,c
   269  001AD0  06E8               	decf	wreg,f,c
   270  001AD2  E1FD               	bnz	clear_2
   271  001AD4                     end_of_initialization:
   272                           	opt callstack 0
   273  001AD4                     __end_of__initialization:
   274                           	opt callstack 0
   275  001AD4  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276  001AD6  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277  001AD8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  001ADA  6EF8               	movwf	tblptru,c
   279  001ADC  0100               	movlb	0
   280  001ADE  EF13  F00A         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMRAM
   283  000038                     __pbssCOMRAM:
   284                           	opt callstack 0
   285  000038                     _mpap:
   286                           	opt callstack 0
   287  000038                     	ds	8
   288  000040                     mpap_sych@c:
   289                           	opt callstack 0
   290  000040                     	ds	1
   291  000041                     mpap_sych@sm0:
   292                           	opt callstack 0
   293  000041                     	ds	1
   294  000042                     display7s_job@q:
   295                           	opt callstack 0
   296  000042                     	ds	1
   297  000043                     _error_requestToWriteDisp:
   298                           	opt callstack 0
   299  000043                     	ds	1
   300  000044                     _disp_owner:
   301                           	opt callstack 0
   302  000044                     	ds	1
   303  000045                     _machineState:
   304                           	opt callstack 0
   305  000045                     	ds	1
   306  000046                     _lock:
   307                           	opt callstack 0
   308  000046                     	ds	1
   309  000047                     pump_tick@c:
   310                           	opt callstack 0
   311  000047                     	ds	1
   312  000048                     pump_tick@sm0:
   313                           	opt callstack 0
   314  000048                     	ds	1
   315  000049                     _main_flag:
   316                           	opt callstack 0
   317  000049                     	ds	1
   318  00004A                     _isr_flag:
   319                           	opt callstack 0
   320  00004A                     	ds	1
   321                           
   322                           	psect	dataCOMRAM
   323  00004B                     __pdataCOMRAM:
   324                           	opt callstack 0
   325  00004B                     mpap_do1step@i:
   326                           	opt callstack 0
   327  00004B                     	ds	1
   328                           
   329                           	psect	bssBANK0
   330  000060                     __pbssBANK0:
   331                           	opt callstack 0
   332  000060                     _key:
   333                           	opt callstack 0
   334  000060                     	ds	80
   335  0000B0                     _group_x:
   336                           	opt callstack 0
   337  0000B0                     	ds	5
   338  0000B5                     	ds	2
   339  0000B7                     	ds	1
   340  0000B8                     	ds	1
   341  0000B9                     	ds	1
   342  0000BA                     	ds	1
   343  0000BB                     	ds	1
   344  0000BC                     	ds	1
   345  0000BD                     _error_grantedToWriteDisp:
   346                           	opt callstack 0
   347  0000BD                     	ds	1
   348                           
   349                           	psect	dataBANK0
   350  0000BE                     __pdataBANK0:
   351                           	opt callstack 0
   352  0000BE                     _multiplexedDisp:
   353                           	opt callstack 0
   354  0000BE                     	ds	20
   355  0000D2                     _mpap_step:
   356                           	opt callstack 0
   357  0000D2                     	ds	8
   358  0000DA                     _mpap_off:
   359                           	opt callstack 0
   360  0000DA                     	ds	2
   361                           
   362                           	psect	bssBANK1
   363  000100                     __pbssBANK1:
   364                           	opt callstack 0
   365  000100                     _pulsonic:
   366                           	opt callstack 0
   367  000100                     	ds	123
   368                           
   369                           	psect	cstackBANK0
   370  0000DC                     __pcstackBANK0:
   371                           	opt callstack 0
   372  0000DC                     disp_show_quantity@buff:
   373                           	opt callstack 0
   374                           
   375                           ; 10 bytes @ 0x0
   376  0000DC                     	ds	10
   377  0000E6                     disp_show_quantity@real:
   378                           	opt callstack 0
   379                           
   380                           ; 3 bytes @ 0xA
   381  0000E6                     	ds	3
   382  0000E9                     disp_show_quantity@num:
   383                           	opt callstack 0
   384                           
   385                           ; 1 bytes @ 0xD
   386  0000E9                     	ds	1
   387  0000EA                     disp_show_quantity@q:
   388                           	opt callstack 0
   389                           
   390                           ; 1 bytes @ 0xE
   391  0000EA                     	ds	1
   392  0000EB                     disp_show_quantity@last_pos:
   393                           	opt callstack 0
   394                           
   395                           ; 1 bytes @ 0xF
   396  0000EB                     	ds	1
   397  0000EC                     disp_show_quantity@I:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x10
   401  0000EC                     	ds	2
   402  0000EE                     disp_show_quantity@i:
   403                           	opt callstack 0
   404                           
   405                           ; 1 bytes @ 0x12
   406  0000EE                     	ds	1
   407                           
   408                           	psect	cstackCOMRAM
   409  000001                     __pcstackCOMRAM:
   410                           	opt callstack 0
   411  000001                     mpap_do1step@KI:
   412                           	opt callstack 0
   413                           
   414                           ; 1 bytes @ 0x0
   415  000001                     	ds	1
   416  000002                     ??_mpap_homming:
   417  000002                     mpap_normal_mode@cod_ret:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x1
   421  000002                     	ds	1
   422  000003                     mpap_homming@cod_ret:
   423                           	opt callstack 0
   424                           
   425                           ; 1 bytes @ 0x2
   426  000003                     	ds	1
   427  000004                     
   428                           ; 1 bytes @ 0x3
   429  000004                     	ds	1
   430  000005                     ??_INTERRUPCION:
   431                           
   432                           ; 1 bytes @ 0x4
   433  000005                     	ds	6
   434  00000B                     ??_ikey_is_accessible:
   435  00000B                     ??_multiplexedDisp_job:
   436  00000B                     ?___wmul:
   437                           	opt callstack 0
   438  00000B                     ?___lwdiv:
   439                           	opt callstack 0
   440  00000B                     ?___lwmod:
   441                           	opt callstack 0
   442  00000B                     ?___ftpack:
   443                           	opt callstack 0
   444  00000B                     pump_tick@cod_ret:
   445                           	opt callstack 0
   446  00000B                     ikb_init@i:
   447                           	opt callstack 0
   448  00000B                     ikb_key_is_ready2read@k:
   449                           	opt callstack 0
   450  00000B                     ikey_clear_all_flag@i:
   451                           	opt callstack 0
   452  00000B                     multiplexedDisp_init@i:
   453                           	opt callstack 0
   454  00000B                     ___wmul@multiplier:
   455                           	opt callstack 0
   456  00000B                     ___lwdiv@dividend:
   457                           	opt callstack 0
   458  00000B                     ___lwmod@dividend:
   459                           	opt callstack 0
   460  00000B                     ___ftpack@arg:
   461                           	opt callstack 0
   462                           
   463                           ; 3 bytes @ 0xA
   464  00000B                     	ds	1
   465  00000C                     ikey_scan@k:
   466                           	opt callstack 0
   467                           
   468                           ; 1 bytes @ 0xB
   469  00000C                     	ds	1
   470  00000D                     ikey_is_accessible@k:
   471                           	opt callstack 0
   472  00000D                     ___wmul@multiplicand:
   473                           	opt callstack 0
   474  00000D                     ___lwdiv@divisor:
   475                           	opt callstack 0
   476  00000D                     ___lwmod@divisor:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0xC
   480  00000D                     	ds	1
   481  00000E                     ___ftpack@exp:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0xD
   485  00000E                     	ds	1
   486  00000F                     ___ftpack@sign:
   487                           	opt callstack 0
   488  00000F                     ___lwdiv@counter:
   489                           	opt callstack 0
   490  00000F                     ___lwmod@counter:
   491                           	opt callstack 0
   492  00000F                     ___wmul@product:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0xE
   496  00000F                     	ds	1
   497  000010                     ??___ftpack:
   498  000010                     ___lwdiv@quotient:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0xF
   502  000010                     	ds	1
   503  000011                     multiplexedDisp_job@q:
   504                           	opt callstack 0
   505  000011                     mpap_setupToTurn@numSteps_tomove:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x10
   509  000011                     	ds	1
   510  000012                     multiplexedDisp_job@i:
   511                           	opt callstack 0
   512  000012                     utoa@buf:
   513                           	opt callstack 0
   514                           
   515                           ; 1 bytes @ 0x11
   516  000012                     	ds	1
   517  000013                     ?___ftadd:
   518                           	opt callstack 0
   519  000013                     ?___ftmul:
   520                           	opt callstack 0
   521  000013                     ?___awtoft:
   522                           	opt callstack 0
   523  000013                     ?___lwtoft:
   524                           	opt callstack 0
   525  000013                     _mpap_setupToTurn$515:
   526                           	opt callstack 0
   527  000013                     ___awtoft@c:
   528                           	opt callstack 0
   529  000013                     ___lwtoft@c:
   530                           	opt callstack 0
   531  000013                     utoa@val:
   532                           	opt callstack 0
   533  000013                     ___ftadd@f1:
   534                           	opt callstack 0
   535  000013                     ___ftmul@f1:
   536                           	opt callstack 0
   537                           
   538                           ; 3 bytes @ 0x12
   539  000013                     	ds	2
   540  000015                     nozzle_moveto@nozzle:
   541                           	opt callstack 0
   542  000015                     utoa@base:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x14
   546  000015                     	ds	1
   547  000016                     ___awtoft@sign:
   548                           	opt callstack 0
   549  000016                     ___ftadd@f2:
   550                           	opt callstack 0
   551  000016                     ___ftge@ff1:
   552                           	opt callstack 0
   553  000016                     ___ftmul@f2:
   554                           	opt callstack 0
   555                           
   556                           ; 3 bytes @ 0x15
   557  000016                     	ds	1
   558  000017                     utoa@v:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x16
   562  000017                     	ds	2
   563  000019                     ??___ftadd:
   564  000019                     ??___ftmul:
   565  000019                     utoa@c:
   566                           	opt callstack 0
   567  000019                     ___ftge@ff2:
   568                           	opt callstack 0
   569                           
   570                           ; 3 bytes @ 0x18
   571  000019                     	ds	1
   572  00001A                     itoa@buf:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x19
   576  00001A                     	ds	1
   577  00001B                     itoa@val:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x1A
   581  00001B                     	ds	1
   582  00001C                     ??___ftge:
   583  00001C                     ___ftadd@sign:
   584                           	opt callstack 0
   585  00001C                     ___ftmul@exp:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x1B
   589  00001C                     	ds	1
   590  00001D                     ___ftadd@exp2:
   591                           	opt callstack 0
   592  00001D                     itoa@base:
   593                           	opt callstack 0
   594  00001D                     ___ftmul@f3_as_product:
   595                           	opt callstack 0
   596                           
   597                           ; 3 bytes @ 0x1C
   598  00001D                     	ds	1
   599  00001E                     ___ftadd@exp1:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x1D
   603  00001E                     	ds	1
   604  00001F                     ??_ikey_parsing:
   605  00001F                     ?___ftsub:
   606                           	opt callstack 0
   607  00001F                     ___ftsub@f1:
   608                           	opt callstack 0
   609                           
   610                           ; 3 bytes @ 0x1E
   611  00001F                     	ds	1
   612  000020                     ___ftmul@cntr:
   613                           	opt callstack 0
   614                           
   615                           ; 1 bytes @ 0x1F
   616  000020                     	ds	1
   617  000021                     ___ftmul@sign:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0x20
   621  000021                     	ds	1
   622  000022                     ?___fttol:
   623                           	opt callstack 0
   624  000022                     ___ftsub@f2:
   625                           	opt callstack 0
   626  000022                     ___fttol@f1:
   627                           	opt callstack 0
   628                           
   629                           ; 3 bytes @ 0x21
   630  000022                     	ds	1
   631  000023                     ikey_parsing@k:
   632                           	opt callstack 0
   633                           
   634                           ; 1 bytes @ 0x22
   635  000023                     	ds	1
   636  000024                     
   637                           ; 1 bytes @ 0x23
   638  000024                     	ds	1
   639  000025                     
   640                           ; 1 bytes @ 0x24
   641  000025                     	ds	1
   642  000026                     ??___fttol:
   643                           
   644                           ; 1 bytes @ 0x25
   645  000026                     	ds	5
   646  00002B                     ___fttol@sign1:
   647                           	opt callstack 0
   648                           
   649                           ; 1 bytes @ 0x2A
   650  00002B                     	ds	1
   651  00002C                     ___fttol@lval:
   652                           	opt callstack 0
   653                           
   654                           ; 4 bytes @ 0x2B
   655  00002C                     	ds	4
   656  000030                     ___fttol@exp1:
   657                           	opt callstack 0
   658                           
   659                           ; 1 bytes @ 0x2F
   660  000030                     	ds	1
   661  000031                     disp_show_quantity@f:
   662                           	opt callstack 0
   663                           
   664                           ; 3 bytes @ 0x30
   665  000031                     	ds	3
   666  000034                     ??_disp_show_quantity:
   667                           
   668                           ; 1 bytes @ 0x33
   669  000034                     	ds	1
   670  000035                     main@c_access_kb:
   671                           	opt callstack 0
   672                           
   673                           ; 1 bytes @ 0x34
   674  000035                     	ds	1
   675  000036                     main@c_access_disp:
   676                           	opt callstack 0
   677                           
   678                           ; 1 bytes @ 0x35
   679  000036                     	ds	1
   680  000037                     main@unlock_pump:
   681                           	opt callstack 0
   682                           
   683                           ; 1 bytes @ 0x36
   684  000037                     	ds	1
   685                           
   686 ;;
   687 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   688 ;;
   689 ;; *************** function _main *****************
   690 ;; Defined at:
   691 ;;		line 113 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  unlock_pump     1   54[COMRAM] char 
   696 ;;  c_access_dis    1   53[COMRAM] char 
   697 ;;  c_access_kb     1   52[COMRAM] char 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 3F/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   707 ;;      Params:         0       0       0       0       0       0       0       0       0
   708 ;;      Locals:         3       0       0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0
   710 ;;      Totals:         3       0       0       0       0       0       0       0       0
   711 ;;Total ram usage:        3 bytes
   712 ;; Hardware stack levels required when called:    9
   713 ;; This function calls:
   714 ;;		_disp_show_quantity
   715 ;;		_display7s_init
   716 ;;		_display7s_job
   717 ;;		_ikb_flush
   718 ;;		_ikb_init
   719 ;;		_ikb_job
   720 ;;		_ikb_key_is_ready2read
   721 ;;		_mpap_setupToHomming
   722 ;;		_mpap_sych
   723 ;;		_nozzle_moveto
   724 ;;		_pump_tick
   725 ;; This function is called by:
   726 ;;		Startup code after reset
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text0
   731  001426                     __ptext0:
   732                           	opt callstack 0
   733  001426                     _main:
   734                           	opt callstack 22
   735                           
   736                           ;main.c: 115: int8_t c_access_kb=0;
   737                           
   738                           ;incstack = 0
   739  001426  0E00               	movlw	0
   740  001428  6E35               	movwf	main@c_access_kb,c
   741                           
   742                           ;main.c: 116: int8_t c_access_disp=0;
   743  00142A  0E00               	movlw	0
   744  00142C  6E36               	movwf	main@c_access_disp,c
   745                           
   746                           ;main.c: 118: LATA = 0x00;
   747  00142E  0E00               	movlw	0
   748  001430  6E89               	movwf	3977,c	;volatile
   749                           
   750                           ;main.c: 119: LATC = 0x00;
   751  001432  0E00               	movlw	0
   752  001434  6E8B               	movwf	3979,c	;volatile
   753                           
   754                           ;main.c: 120: LATD = 0x00;
   755  001436  0E00               	movlw	0
   756  001438  6E8C               	movwf	3980,c	;volatile
   757                           
   758                           ;main.c: 121: LATE = 0x00;
   759  00143A  0E00               	movlw	0
   760  00143C  6E8D               	movwf	3981,c	;volatile
   761                           
   762                           ;main.c: 122: LATB = 0x00;
   763  00143E  0E00               	movlw	0
   764  001440  6E8A               	movwf	3978,c	;volatile
   765                           
   766                           ;main.c: 126: ADCON1 = 0x0F;
   767  001442  0E0F               	movlw	15
   768  001444  6EC1               	movwf	4033,c	;volatile
   769                           
   770                           ;main.c: 127: CMCON=0xCF;
   771  001446  0ECF               	movlw	207
   772  001448  6EB4               	movwf	4020,c	;volatile
   773                           
   774                           ;main.c: 130: UCON = 0;
   775  00144A  0E00               	movlw	0
   776  00144C  6E6D               	movwf	3949,c	;volatile
   777                           
   778                           ;main.c: 131: UCFG = 1<<3;
   779  00144E  0E08               	movlw	8
   780  001450  6E6F               	movwf	3951,c	;volatile
   781                           
   782                           ;main.c: 132: T0CON = 0B10000111;
   783  001452  0E87               	movlw	135
   784  001454  6ED5               	movwf	4053,c	;volatile
   785                           
   786                           ;main.c: 135: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
   787  001456  68D7               	setf	4055,c	;volatile
   788                           
   789                           ;main.c: 136: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
   790  001458  0ED1               	movlw	209
   791  00145A  6ED6               	movwf	4054,c	;volatile
   792                           
   793                           ;main.c: 137: TMR0IE = 1;
   794  00145C  8AF2               	bsf	4082,5,c	;volatile
   795  00145E  808D               	bsf	3981,0,c	;volatile
   796  001460  9096               	bcf	3990,0,c	;volatile
   797  001462  9095               	bcf	3989,0,c	;volatile
   798  001464  9295               	bcf	3989,1,c	;volatile
   799  001466  9495               	bcf	3989,2,c	;volatile
   800  001468  9695               	bcf	3989,3,c	;volatile
   801  00146A  928B               	bcf	3979,1,c	;volatile
   802  00146C  9294               	bcf	3988,1,c	;volatile
   803  00146E  8296               	bsf	3990,1,c	;volatile
   804  001470  8094               	bsf	3988,0,c	;volatile
   805  001472  8496               	bsf	3990,2,c	;volatile
   806                           
   807                           ;main.c: 155: display7s_init();
   808  001474  ECC6  F00D         	call	_display7s_init	;wreg free
   809                           
   810                           ;main.c: 156: ikb_init();
   811  001478  EC79  F00B         	call	_ikb_init	;wreg free
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 158: disp_show_quantity(77.7);
   815  00147C  0E66               	movlw	102
   816  00147E  6E31               	movwf	disp_show_quantity@f,c
   817  001480  0E9B               	movlw	155
   818  001482  6E32               	movwf	disp_show_quantity@f+1,c
   819  001484  0E42               	movlw	66
   820  001486  6E33               	movwf	disp_show_quantity@f+2,c
   821  001488  EC1F  F007         	call	_disp_show_quantity	;wreg free
   822                           
   823                           ;main.c: 159: GIE = 1;
   824  00148C  8EF2               	bsf	4082,7,c	;volatile
   825                           
   826                           ;main.c: 161: mpap_setupToHomming();
   827  00148E  ECE5  F00F         	call	_mpap_setupToHomming	;wreg free
   828                           
   829                           ;main.c: 163: int8_t unlock_pump = 0;
   830  001492  0E00               	movlw	0
   831  001494  6E37               	movwf	main@unlock_pump,c
   832  001496                     l3901:
   833                           
   834                           ;main.c: 165: {;main.c: 166: if (isr_flag.f1ms)
   835  001496  A04A               	btfss	_isr_flag,0,c	;volatile
   836  001498  D002               	goto	l134
   837                           
   838                           ;main.c: 167: {;main.c: 168: isr_flag.f1ms = 0;
   839  00149A  904A               	bcf	_isr_flag,0,c	;volatile
   840                           
   841                           ;main.c: 169: main_flag.f1ms = 1;
   842  00149C  8049               	bsf	_main_flag,0,c	;volatile
   843  00149E                     l134:
   844                           
   845                           ;main.c: 170: };main.c: 172: if (main_flag.f1ms)
   846  00149E  A049               	btfss	_main_flag,0,c	;volatile
   847  0014A0  D035               	goto	l3933
   848                           
   849                           ;main.c: 173: {;main.c: 174: if (++c_access_kb == 20)
   850  0014A2  2A35               	incf	main@c_access_kb,f,c
   851  0014A4  0E14               	movlw	20
   852  0014A6  1835               	xorwf	main@c_access_kb,w,c
   853  0014A8  A4D8               	btfss	status,2,c
   854  0014AA  D027               	goto	l3927
   855                           
   856                           ;main.c: 175: {;main.c: 176: c_access_kb = 0;
   857  0014AC  0E00               	movlw	0
   858  0014AE  6E35               	movwf	main@c_access_kb,c
   859                           
   860                           ;main.c: 178: ikb_job();
   861  0014B0  ECEE  F00F         	call	_ikb_job	;wreg free
   862                           
   863                           ;main.c: 179: if (ikb_key_is_ready2read(0))
   864  0014B4  0E00               	movlw	0
   865  0014B6  ECD7  F00F         	call	_ikb_key_is_ready2read
   866  0014BA  0900               	iorlw	0
   867  0014BC  B4D8               	btfsc	status,2,c
   868  0014BE  D003               	goto	l3915
   869                           
   870                           ; BSR set to: 0
   871                           ;main.c: 180: {;main.c: 181: nozzle_moveto(0);
   872  0014C0  0E00               	movlw	0
   873  0014C2  EC6A  F00F         	call	_nozzle_moveto
   874  0014C6                     l3915:
   875                           
   876                           ;main.c: 182: };main.c: 183: if (ikb_key_is_ready2read(1))
   877  0014C6  0E01               	movlw	1
   878  0014C8  ECD7  F00F         	call	_ikb_key_is_ready2read
   879  0014CC  0900               	iorlw	0
   880  0014CE  B4D8               	btfsc	status,2,c
   881  0014D0  D003               	goto	l3919
   882                           
   883                           ; BSR set to: 0
   884                           ;main.c: 184: {;main.c: 185: nozzle_moveto(1);
   885  0014D2  0E01               	movlw	1
   886  0014D4  EC6A  F00F         	call	_nozzle_moveto
   887  0014D8                     l3919:
   888                           
   889                           ;main.c: 186: };main.c: 187: if (ikb_key_is_ready2read(2))
   890  0014D8  0E02               	movlw	2
   891  0014DA  ECD7  F00F         	call	_ikb_key_is_ready2read
   892  0014DE  0900               	iorlw	0
   893  0014E0  B4D8               	btfsc	status,2,c
   894  0014E2  D003               	goto	l3923
   895                           
   896                           ; BSR set to: 0
   897                           ;main.c: 188: {;main.c: 189: nozzle_moveto(2);
   898  0014E4  0E02               	movlw	2
   899  0014E6  EC6A  F00F         	call	_nozzle_moveto
   900  0014EA                     l3923:
   901                           
   902                           ;main.c: 190: };main.c: 191: if (ikb_key_is_ready2read(3))
   903  0014EA  0E03               	movlw	3
   904  0014EC  ECD7  F00F         	call	_ikb_key_is_ready2read
   905  0014F0  0900               	iorlw	0
   906  0014F2  B4D8               	btfsc	status,2,c
   907  0014F4  D002               	goto	l3927
   908                           
   909                           ; BSR set to: 0
   910                           ;main.c: 192: {;main.c: 194: unlock_pump = 1;
   911  0014F6  0E01               	movlw	1
   912  0014F8  6E37               	movwf	main@unlock_pump,c
   913  0014FA                     l3927:
   914                           
   915                           ;main.c: 195: };main.c: 196: };main.c: 199: if (++c_access_disp == 2)
   916  0014FA  2A36               	incf	main@c_access_disp,f,c
   917  0014FC  0E02               	movlw	2
   918  0014FE  1836               	xorwf	main@c_access_disp,w,c
   919  001500  A4D8               	btfss	status,2,c
   920  001502  D004               	goto	l3933
   921                           
   922                           ;main.c: 200: {;main.c: 201: c_access_disp = 0;
   923  001504  0E00               	movlw	0
   924  001506  6E36               	movwf	main@c_access_disp,c
   925                           
   926                           ;main.c: 202: display7s_job();
   927  001508  EC94  F00F         	call	_display7s_job	;wreg free
   928  00150C                     l3933:
   929                           
   930                           ;main.c: 203: };main.c: 204: };main.c: 205: if (unlock_pump)
   931  00150C  5037               	movf	main@unlock_pump,w,c
   932  00150E  B4D8               	btfsc	status,2,c
   933  001510  D007               	goto	l3939
   934                           
   935                           ;main.c: 206: {;main.c: 207: if (pump_tick())
   936  001512  EC1F  F00F         	call	_pump_tick	;wreg free
   937  001516  0900               	iorlw	0
   938  001518  B4D8               	btfsc	status,2,c
   939  00151A  D002               	goto	l3939
   940                           
   941                           ;main.c: 208: {;main.c: 209: unlock_pump = 0;
   942  00151C  0E00               	movlw	0
   943  00151E  6E37               	movwf	main@unlock_pump,c
   944  001520                     l3939:
   945                           
   946                           ;main.c: 210: };main.c: 211: };main.c: 214: mpap_sych();
   947  001520  ECC5  F00C         	call	_mpap_sych	;wreg free
   948                           
   949                           ;main.c: 217: main_flag.f1ms = 0;
   950  001524  9049               	bcf	_main_flag,0,c	;volatile
   951                           
   952                           ;main.c: 218: ikb_flush();
   953  001526  EC21  F010         	call	_ikb_flush	;wreg free
   954  00152A  D7B5               	goto	l3901
   955  00152C                     __end_of_main:
   956                           	opt callstack 0
   957                           
   958 ;; *************** function _pump_tick *****************
   959 ;; Defined at:
   960 ;;		line 42 in file "main.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  cod_ret         1   10[COMRAM] char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      char 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   974 ;;      Params:         0       0       0       0       0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0
   977 ;;      Totals:         1       0       0       0       0       0       0       0       0
   978 ;;Total ram usage:        1 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    5
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text1
   989  001E3E                     __ptext1:
   990                           	opt callstack 0
   991  001E3E                     _pump_tick:
   992                           	opt callstack 25
   993                           
   994                           ;main.c: 44: int8_t cod_ret = 0;
   995                           
   996                           ; BSR set to: 0
   997                           ;incstack = 0
   998  001E3E  0E00               	movlw	0
   999  001E40  6E0B               	movwf	pump_tick@cod_ret,c
  1000                           
  1001                           ;main.c: 45: static int8_t sm0;;main.c: 46: static int8_t c;;main.c: 48: if (sm0 == 0)
  1002  001E42  5048               	movf	pump_tick@sm0,w,c
  1003  001E44  A4D8               	btfss	status,2,c
  1004  001E46  D005               	goto	l2055
  1005  001E48  908D               	bcf	3981,0,c	;volatile
  1006                           
  1007                           ;main.c: 51: c = 0x0;
  1008  001E4A  0E00               	movlw	0
  1009  001E4C  6E47               	movwf	pump_tick@c,c
  1010                           
  1011                           ;main.c: 52: sm0++;
  1012  001E4E  2A48               	incf	pump_tick@sm0,f,c
  1013                           
  1014                           ;main.c: 53: }
  1015  001E50  D00E               	goto	l85
  1016  001E52                     l2055:
  1017                           
  1018                           ;main.c: 54: else if (sm0 == 1)
  1019  001E52  0448               	decf	pump_tick@sm0,w,c
  1020  001E54  B4D8               	btfsc	status,2,c
  1021                           
  1022                           ;main.c: 55: {;main.c: 56: if (main_flag.f1ms)
  1023  001E56  A049               	btfss	_main_flag,0,c	;volatile
  1024  001E58  D00A               	goto	l85
  1025                           
  1026                           ;main.c: 57: {;main.c: 58: if (++c == 50)
  1027  001E5A  2A47               	incf	pump_tick@c,f,c
  1028  001E5C  0E32               	movlw	50
  1029  001E5E  1847               	xorwf	pump_tick@c,w,c
  1030  001E60  A4D8               	btfss	status,2,c
  1031  001E62  D005               	goto	l85
  1032                           
  1033                           ;main.c: 59: {;main.c: 60: sm0 = 0x00;
  1034  001E64  0E00               	movlw	0
  1035  001E66  6E48               	movwf	pump_tick@sm0,c
  1036  001E68  808D               	bsf	3981,0,c	;volatile
  1037                           
  1038                           ;main.c: 63: cod_ret = 1;
  1039  001E6A  0E01               	movlw	1
  1040  001E6C  6E0B               	movwf	pump_tick@cod_ret,c
  1041  001E6E                     l85:
  1042                           
  1043                           ;main.c: 64: };main.c: 65: };main.c: 66: };main.c: 67: return cod_ret;
  1044  001E6E  500B               	movf	pump_tick@cod_ret,w,c
  1045  001E70  0012               	return		;funcret
  1046  001E72                     __end_of_pump_tick:
  1047                           	opt callstack 0
  1048                           
  1049 ;; *************** function _nozzle_moveto *****************
  1050 ;; Defined at:
  1051 ;;		line 76 in file "mpap.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  nozzle          1    wreg     char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  nozzle          1   20[COMRAM] char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 3F/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1065 ;;      Params:         0       0       0       0       0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1068 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1069 ;;Total ram usage:        1 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    6
  1072 ;; This function calls:
  1073 ;;		___wmul
  1074 ;;		_mpap_setupToTurn
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text2
  1081  001ED4                     __ptext2:
  1082                           	opt callstack 0
  1083  001ED4                     _nozzle_moveto:
  1084                           	opt callstack 24
  1085                           
  1086                           ;incstack = 0
  1087                           ;nozzle_moveto@nozzle stored from wreg
  1088  001ED4  6E15               	movwf	nozzle_moveto@nozzle,c
  1089                           
  1090                           ;mpap.c: 79: mpap_setupToTurn( (nozzle*200) - mpap.numSteps_current);
  1091  001ED6  5015               	movf	nozzle_moveto@nozzle,w,c
  1092  001ED8  6E0B               	movwf	___wmul@multiplier,c
  1093  001EDA  6A0C               	clrf	___wmul@multiplier+1,c
  1094  001EDC  BE0B               	btfsc	___wmul@multiplier,7,c
  1095  001EDE  060C               	decf	___wmul@multiplier+1,f,c
  1096  001EE0  0E00               	movlw	0
  1097  001EE2  6E0E               	movwf	___wmul@multiplicand+1,c
  1098  001EE4  0EC8               	movlw	200
  1099  001EE6  6E0D               	movwf	___wmul@multiplicand,c
  1100  001EE8  EC81  F00F         	call	___wmul	;wreg free
  1101  001EEC  5038               	movf	_mpap,w,c	;volatile
  1102  001EEE  5C0B               	subwf	?___wmul,w,c
  1103  001EF0  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1104  001EF2  5039               	movf	_mpap+1,w,c	;volatile
  1105  001EF4  580C               	subwfb	?___wmul+1,w,c
  1106  001EF6  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1107  001EF8  EC52  F00F         	call	_mpap_setupToTurn	;wreg free
  1108                           
  1109                           ;mpap.c: 81: mpap.mode = NORMAL_MODE;
  1110  001EFC  0E03               	movlw	3
  1111  001EFE  6E3F               	movwf	_mpap+7,c	;volatile
  1112  001F00  0012               	return		;funcret
  1113  001F02                     __end_of_nozzle_moveto:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function ___wmul *****************
  1117 ;; Defined at:
  1118 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  multiplier      2   10[COMRAM] unsigned int 
  1121 ;;  multiplicand    2   12[COMRAM] unsigned int 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  product         2   14[COMRAM] unsigned int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   10[COMRAM] unsigned int 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, prodl, prodh
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1133 ;;      Params:         4       0       0       0       0       0       0       0       0
  1134 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1136 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1137 ;;Total ram usage:        6 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    5
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_nozzle_moveto
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text3
  1148  001F02                     __ptext3:
  1149                           	opt callstack 0
  1150  001F02                     ___wmul:
  1151                           	opt callstack 24
  1152                           
  1153                           ;incstack = 0
  1154  001F02  500B               	movf	___wmul@multiplier,w,c
  1155  001F04  020D               	mulwf	___wmul@multiplicand,c
  1156  001F06  CFF3 F00F          	movff	prodl,___wmul@product
  1157  001F0A  CFF4 F010          	movff	prodh,___wmul@product+1
  1158  001F0E  500B               	movf	___wmul@multiplier,w,c
  1159  001F10  020E               	mulwf	___wmul@multiplicand+1,c
  1160  001F12  50F3               	movf	prodl,w,c
  1161  001F14  2610               	addwf	___wmul@product+1,f,c
  1162  001F16  500C               	movf	___wmul@multiplier+1,w,c
  1163  001F18  020D               	mulwf	___wmul@multiplicand,c
  1164  001F1A  50F3               	movf	prodl,w,c
  1165  001F1C  2610               	addwf	___wmul@product+1,f,c
  1166  001F1E  C00F  F00B         	movff	___wmul@product,?___wmul
  1167  001F22  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  1168  001F26  0012               	return		;funcret
  1169  001F28                     __end_of___wmul:
  1170                           	opt callstack 0
  1171                           
  1172 ;; *************** function _mpap_sych *****************
  1173 ;; Defined at:
  1174 ;;		line 171 in file "mpap.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1188 ;;      Params:         0       0       0       0       0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1191 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    5
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text4
  1203  00198A                     __ptext4:
  1204                           	opt callstack 0
  1205  00198A                     _mpap_sych:
  1206                           	opt callstack 25
  1207                           
  1208                           ;mpap.c: 173: static int8_t sm0;;mpap.c: 174: static int8_t c;;mpap.c: 175: if (sm0 == 0
      +                          )
  1209                           
  1210                           ;incstack = 0
  1211  00198A  5041               	movf	mpap_sych@sm0,w,c
  1212  00198C  A4D8               	btfss	status,2,c
  1213  00198E  D010               	goto	l3185
  1214                           
  1215                           ;mpap.c: 176: {;mpap.c: 177: if ((mpap.mode == NORMAL_MODE) || (mpap.mode == HOMMING_MOD
      +                          E))
  1216  001990  0E03               	movlw	3
  1217  001992  183F               	xorwf	_mpap+7,w,c	;volatile
  1218  001994  B4D8               	btfsc	status,2,c
  1219  001996  D004               	goto	u3270
  1220  001998  0E02               	movlw	2
  1221  00199A  183F               	xorwf	_mpap+7,w,c	;volatile
  1222  00199C  A4D8               	btfss	status,2,c
  1223  00199E  D002               	goto	l3181
  1224  0019A0                     u3270:
  1225                           
  1226                           ;mpap.c: 178: {;mpap.c: 179: sm0++;
  1227  0019A0  2A41               	incf	mpap_sych@sm0,f,c
  1228                           
  1229                           ;mpap.c: 180: }
  1230  0019A2  0012               	return	
  1231  0019A4                     l3181:
  1232                           
  1233                           ;mpap.c: 181: else if (mpap.mode == STALL_MODE)
  1234  0019A4  043F               	decf	_mpap+7,w,c	;volatile
  1235  0019A6  A4D8               	btfss	status,2,c
  1236  0019A8  0012               	return	
  1237                           
  1238                           ;mpap.c: 182: {;mpap.c: 183: sm0 = 2;
  1239  0019AA  0E02               	movlw	2
  1240  0019AC  6E41               	movwf	mpap_sych@sm0,c
  1241  0019AE  0012               	return	
  1242  0019B0                     l3185:
  1243                           
  1244                           ;mpap.c: 186: else if (sm0 == 1)
  1245  0019B0  0441               	decf	mpap_sych@sm0,w,c
  1246  0019B2  A4D8               	btfss	status,2,c
  1247  0019B4  D012               	goto	l3201
  1248                           
  1249                           ;mpap.c: 187: {;mpap.c: 188: if (mpap.numSteps_tomove == 0)
  1250  0019B6  503C               	movf	_mpap+4,w,c	;volatile
  1251  0019B8  103D               	iorwf	_mpap+5,w,c	;volatile
  1252  0019BA  A4D8               	btfss	status,2,c
  1253  0019BC  0012               	return	
  1254                           
  1255                           ;mpap.c: 189: {;mpap.c: 190: if (mpap.mode == HOMMING_MODE)
  1256  0019BE  0E02               	movlw	2
  1257  0019C0  183F               	xorwf	_mpap+7,w,c	;volatile
  1258  0019C2  A4D8               	btfss	status,2,c
  1259  0019C4  D005               	goto	l3195
  1260                           
  1261                           ;mpap.c: 191: {;mpap.c: 192: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  1262  0019C6  0101               	movlb	1	; () banked
  1263  0019C8  A175               	btfss	(_pulsonic+117)& (0+255),0,b
  1264  0019CA  D003               	goto	l3197
  1265                           
  1266                           ; BSR set to: 1
  1267                           ;mpap.c: 193: {;mpap.c: 194: pulsonic.errors.flag.mpap_home_sensor = 0;
  1268  0019CC  9175               	bcf	(_pulsonic+117)& (0+255),0,b
  1269  0019CE  D001               	goto	l3197
  1270  0019D0                     l3195:
  1271                           
  1272                           ;mpap.c: 198: else if (mpap.mode == NORMAL_MODE)
  1273  0019D0  503F               	movf	_mpap+7,w,c	;volatile
  1274  0019D2                     l3197:
  1275                           
  1276                           ;mpap.c: 200: };mpap.c: 201: sm0++;
  1277  0019D2  2A41               	incf	mpap_sych@sm0,f,c
  1278                           
  1279                           ;mpap.c: 202: c = 0;
  1280  0019D4  0E00               	movlw	0
  1281  0019D6  6E40               	movwf	mpap_sych@c,c
  1282  0019D8  0012               	return	
  1283  0019DA                     l3201:
  1284                           
  1285                           ;mpap.c: 205: else if (sm0 == 2)
  1286  0019DA  0E02               	movlw	2
  1287  0019DC  1841               	xorwf	mpap_sych@sm0,w,c
  1288  0019DE  A4D8               	btfss	status,2,c
  1289  0019E0  D00A               	goto	l3211
  1290                           
  1291                           ;mpap.c: 206: {;mpap.c: 207: if (main_flag.f1ms)
  1292  0019E2  A049               	btfss	_main_flag,0,c	;volatile
  1293  0019E4  0012               	return	
  1294                           
  1295                           ;mpap.c: 208: {;mpap.c: 209: if (++c == 10)
  1296  0019E6  2A40               	incf	mpap_sych@c,f,c
  1297  0019E8  0E0A               	movlw	10
  1298  0019EA  1840               	xorwf	mpap_sych@c,w,c
  1299  0019EC  A4D8               	btfss	status,2,c
  1300  0019EE  0012               	return	
  1301                           
  1302                           ;mpap.c: 210: {;mpap.c: 212: mpap.mode = STALL_MODE;
  1303  0019F0  0E01               	movlw	1
  1304  0019F2  6E3F               	movwf	_mpap+7,c	;volatile
  1305  0019F4  D7D5               	goto	u3270
  1306  0019F6                     l3211:
  1307                           
  1308                           ;mpap.c: 217: else if (sm0 == 3)
  1309  0019F6  0E03               	movlw	3
  1310  0019F8  1841               	xorwf	mpap_sych@sm0,w,c
  1311  0019FA  A4D8               	btfss	status,2,c
  1312  0019FC  0012               	return	
  1313                           
  1314                           ;mpap.c: 218: {;mpap.c: 219: if (mpap.mode == IDLE_MODE)
  1315  0019FE  503F               	movf	_mpap+7,w,c	;volatile
  1316  001A00  A4D8               	btfss	status,2,c
  1317  001A02  0012               	return	
  1318                           
  1319                           ;mpap.c: 220: {;mpap.c: 222: sm0 = 0;
  1320  001A04  0E00               	movlw	0
  1321  001A06  6E41               	movwf	mpap_sych@sm0,c
  1322  001A08  0012               	return		;funcret
  1323  001A0A                     __end_of_mpap_sych:
  1324                           	opt callstack 0
  1325                           
  1326 ;; *************** function _mpap_setupToHomming *****************
  1327 ;; Defined at:
  1328 ;;		line 69 in file "mpap.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 3E/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1342 ;;      Params:         0       0       0       0       0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1346 ;;Total ram usage:        0 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    6
  1349 ;; This function calls:
  1350 ;;		_mpap_setupToTurn
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text5
  1357  001FCA                     __ptext5:
  1358                           	opt callstack 0
  1359  001FCA                     _mpap_setupToHomming:
  1360                           	opt callstack 24
  1361                           
  1362                           ;mpap.c: 71: mpap_setupToTurn( -1 *( (18*200) +20));
  1363                           
  1364                           ;incstack = 0
  1365  001FCA  0EF1               	movlw	241
  1366  001FCC  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1367  001FCE  0EDC               	movlw	220
  1368  001FD0  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1369  001FD2  EC52  F00F         	call	_mpap_setupToTurn	;wreg free
  1370                           
  1371                           ;mpap.c: 74: mpap.mode = HOMMING_MODE;
  1372  001FD6  0E02               	movlw	2
  1373  001FD8  6E3F               	movwf	_mpap+7,c	;volatile
  1374  001FDA  0012               	return		;funcret
  1375  001FDC                     __end_of_mpap_setupToHomming:
  1376                           	opt callstack 0
  1377                           
  1378 ;; *************** function _mpap_setupToTurn *****************
  1379 ;; Defined at:
  1380 ;;		line 57 in file "mpap.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  numSteps_tom    2   16[COMRAM] int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1394 ;;      Params:         2       0       0       0       0       0       0       0       0
  1395 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1397 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1398 ;;Total ram usage:        4 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    5
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_mpap_setupToHomming
  1405 ;;		_nozzle_moveto
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text6
  1410  001EA4                     __ptext6:
  1411                           	opt callstack 0
  1412  001EA4                     _mpap_setupToTurn:
  1413                           	opt callstack 24
  1414                           
  1415                           ;mpap.c: 60: if (numSteps_tomove !=0)
  1416                           
  1417                           ;incstack = 0
  1418  001EA4  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  1419  001EA6  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  1420  001EA8  B4D8               	btfsc	status,2,c
  1421  001EAA  0012               	return	
  1422                           
  1423                           ;mpap.c: 61: {;mpap.c: 62: mpap.KI = (numSteps_tomove<0)? -1: 1;
  1424  001EAC  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  1425  001EAE  D005               	goto	l564
  1426  001EB0  0E00               	movlw	0
  1427  001EB2  6E14               	movwf	_mpap_setupToTurn$515+1,c
  1428  001EB4  0E01               	movlw	1
  1429  001EB6  6E13               	movwf	_mpap_setupToTurn$515,c
  1430  001EB8  D002               	goto	l566
  1431  001EBA                     l564:
  1432  001EBA  6813               	setf	_mpap_setupToTurn$515,c
  1433  001EBC  6814               	setf	_mpap_setupToTurn$515+1,c
  1434  001EBE                     l566:
  1435  001EBE  C013  F03E         	movff	_mpap_setupToTurn$515,_mpap+6	;volatile
  1436                           
  1437                           ;mpap.c: 64: mpap.counter_steps = 0;
  1438  001EC2  0E00               	movlw	0
  1439  001EC4  6E3B               	movwf	_mpap+3,c	;volatile
  1440  001EC6  0E00               	movlw	0
  1441  001EC8  6E3A               	movwf	_mpap+2,c	;volatile
  1442                           
  1443                           ;mpap.c: 66: mpap.numSteps_tomove = numSteps_tomove;
  1444  001ECA  C011  F03C         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  1445  001ECE  C012  F03D         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  1446  001ED2  0012               	return		;funcret
  1447  001ED4                     __end_of_mpap_setupToTurn:
  1448                           	opt callstack 0
  1449                           
  1450 ;; *************** function _ikb_key_is_ready2read *****************
  1451 ;; Defined at:
  1452 ;;		line 427 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  k               1    wreg     unsigned char 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  k               1   10[COMRAM] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      unsigned char 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 3F/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0
  1467 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1469 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1470 ;;Total ram usage:        1 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    5
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text7
  1481  001FAE                     __ptext7:
  1482                           	opt callstack 0
  1483  001FAE                     _ikb_key_is_ready2read:
  1484                           	opt callstack 25
  1485                           
  1486                           ;incstack = 0
  1487                           ;ikb_key_is_ready2read@k stored from wreg
  1488  001FAE  6E0B               	movwf	ikb_key_is_ready2read@k,c
  1489                           
  1490                           ;ikb.c: 429: return key[k].bf.ReadyToRead;
  1491  001FB0  500B               	movf	ikb_key_is_ready2read@k,w,c
  1492  001FB2  0D10               	mullw	16
  1493  001FB4  50F3               	movf	prodl,w,c
  1494  001FB6  0F6A               	addlw	low (_key+10)
  1495  001FB8  6ED9               	movwf	fsr2l,c
  1496  001FBA  6ADA               	clrf	fsr2h,c
  1497  001FBC  0100               	movlb	0	; () banked
  1498  001FBE  ACDF               	btfss	indf2,6,c
  1499  001FC0  D002               	goto	u3230
  1500  001FC2  0E01               	movlw	1
  1501  001FC4  0012               	return	
  1502  001FC6                     u3230:
  1503  001FC6  0E00               	movlw	0
  1504                           
  1505                           ; BSR set to: 0
  1506  001FC8  0012               	return		;funcret
  1507  001FCA                     __end_of_ikb_key_is_ready2read:
  1508                           	opt callstack 0
  1509                           
  1510 ;; *************** function _ikb_job *****************
  1511 ;; Defined at:
  1512 ;;		line 414 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    8
  1533 ;; This function calls:
  1534 ;;		_ikey_parsing
  1535 ;;		_ikey_scan
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text8
  1542  001FDC                     __ptext8:
  1543                           	opt callstack 0
  1544  001FDC                     _ikb_job:
  1545                           	opt callstack 22
  1546                           
  1547                           ;ikb.c: 416: ikey_scan();
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;incstack = 0
  1551  001FDC  EC43  F009         	call	_ikey_scan	;wreg free
  1552                           
  1553                           ;ikb.c: 417: ikey_parsing();
  1554  001FE0  EC07  F004         	call	_ikey_parsing	;wreg free
  1555  001FE4  0012               	return		;funcret
  1556  001FE6                     __end_of_ikb_job:
  1557                           	opt callstack 0
  1558                           
  1559 ;; *************** function _ikey_scan *****************
  1560 ;; Defined at:
  1561 ;;		line 449 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  k               1   11[COMRAM] char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1575 ;;      Params:         0       0       0       0       0       0       0       0       0
  1576 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1577 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1578 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1579 ;;Total ram usage:        2 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    6
  1582 ;; This function calls:
  1583 ;;		_keyRead_pin_key1
  1584 ;;		_keyRead_pin_key2
  1585 ;;		_keyRead_pin_key3
  1586 ;;		_keyRead_pin_key4
  1587 ;;		_keyRead_pin_key5
  1588 ;; This function is called by:
  1589 ;;		_ikb_job
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text9
  1594  001286                     __ptext9:
  1595                           	opt callstack 0
  1596  001286                     _ikey_scan:
  1597                           	opt callstack 23
  1598                           
  1599                           ;ikb.c: 451: int8_t k = 5-1;
  1600                           
  1601                           ;incstack = 0
  1602  001286  0E04               	movlw	4
  1603  001288  6E0C               	movwf	ikey_scan@k,c
  1604  00128A                     l2661:
  1605                           
  1606                           ;ikb.c: 453: {;ikb.c: 454: if (key[k].sm0 == 0)
  1607  00128A  500C               	movf	ikey_scan@k,w,c
  1608  00128C  0D10               	mullw	16
  1609  00128E  50F3               	movf	prodl,w,c
  1610  001290  0F64               	addlw	low (_key+4)
  1611  001292  6ED9               	movwf	fsr2l,c
  1612  001294  6ADA               	clrf	fsr2h,c
  1613  001296  50DF               	movf	indf2,w,c
  1614  001298  A4D8               	btfss	status,2,c
  1615  00129A  D016               	goto	l2667
  1616                           
  1617                           ;ikb.c: 455: {;ikb.c: 456: if (key[k].keyRead() == 0)
  1618  00129C  500C               	movf	ikey_scan@k,w,c
  1619  00129E  0D10               	mullw	16
  1620  0012A0  50F3               	movf	prodl,w,c
  1621  0012A2  0F60               	addlw	low _key
  1622  0012A4  6ED9               	movwf	fsr2l,c
  1623  0012A6  6ADA               	clrf	fsr2h,c
  1624  0012A8  D801               	call	u2278
  1625  0012AA  D00A               	goto	u2279
  1626  0012AC                     u2278:
  1627  0012AC  0005               	push	
  1628  0012AE  6EFA               	movwf	pclath,c
  1629  0012B0  50DE               	movf	postinc2,w,c
  1630  0012B2  6EFD               	movwf	tosl,c
  1631  0012B4  50DE               	movf	postinc2,w,c
  1632  0012B6  6EFE               	movwf	tosh,c
  1633  0012B8  50F8               	movf	tblptru,w,c
  1634  0012BA  6EFF               	movwf	tosu,c
  1635  0012BC  50FA               	movf	pclath,w,c
  1636  0012BE  0012               	return		;indir
  1637  0012C0                     u2279:
  1638  0012C0  0900               	iorlw	0
  1639  0012C2  A4D8               	btfss	status,2,c
  1640  0012C4  D0AC               	goto	l2697
  1641  0012C6  D041               	goto	L1
  1642  0012C8                     l2667:
  1643                           
  1644                           ;ikb.c: 461: else if (key[k].sm0 == 1)
  1645  0012C8  500C               	movf	ikey_scan@k,w,c
  1646  0012CA  0D10               	mullw	16
  1647  0012CC  50F3               	movf	prodl,w,c
  1648  0012CE  0F64               	addlw	low (_key+4)
  1649  0012D0  6ED9               	movwf	fsr2l,c
  1650  0012D2  6ADA               	clrf	fsr2h,c
  1651  0012D4  04DE               	decf	postinc2,w,c
  1652  0012D6  A4D8               	btfss	status,2,c
  1653  0012D8  D040               	goto	l2679
  1654                           
  1655                           ;ikb.c: 462: {;ikb.c: 463: if (++key[k].counter0 == 4)
  1656  0012DA  500C               	movf	ikey_scan@k,w,c
  1657  0012DC  0D10               	mullw	16
  1658  0012DE  50F3               	movf	prodl,w,c
  1659  0012E0  0F65               	addlw	low (_key+5)
  1660  0012E2  6ED9               	movwf	fsr2l,c
  1661  0012E4  6ADA               	clrf	fsr2h,c
  1662  0012E6  2ADF               	incf	indf2,f,c
  1663  0012E8  0E04               	movlw	4
  1664  0012EA  18DE               	xorwf	postinc2,w,c
  1665  0012EC  A4D8               	btfss	status,2,c
  1666  0012EE  D097               	goto	l2697
  1667                           
  1668                           ;ikb.c: 464: {;ikb.c: 465: key[k].counter0 = 0x00;
  1669  0012F0  500C               	movf	ikey_scan@k,w,c
  1670  0012F2  0D10               	mullw	16
  1671  0012F4  50F3               	movf	prodl,w,c
  1672  0012F6  0F65               	addlw	low (_key+5)
  1673  0012F8  6ED9               	movwf	fsr2l,c
  1674  0012FA  6ADA               	clrf	fsr2h,c
  1675  0012FC  0E00               	movlw	0
  1676  0012FE  6EDF               	movwf	indf2,c
  1677                           
  1678                           ;ikb.c: 467: if (key[k].keyRead() != 0)
  1679  001300  500C               	movf	ikey_scan@k,w,c
  1680  001302  0D10               	mullw	16
  1681  001304  50F3               	movf	prodl,w,c
  1682  001306  0F60               	addlw	low _key
  1683  001308  6ED9               	movwf	fsr2l,c
  1684  00130A  6ADA               	clrf	fsr2h,c
  1685  00130C  D801               	call	u2318
  1686  00130E  D00A               	goto	u2319
  1687  001310                     u2318:
  1688  001310  0005               	push	
  1689  001312  6EFA               	movwf	pclath,c
  1690  001314  50DE               	movf	postinc2,w,c
  1691  001316  6EFD               	movwf	tosl,c
  1692  001318  50DE               	movf	postinc2,w,c
  1693  00131A  6EFE               	movwf	tosh,c
  1694  00131C  50F8               	movf	tblptru,w,c
  1695  00131E  6EFF               	movwf	tosu,c
  1696  001320  50FA               	movf	pclath,w,c
  1697  001322  0012               	return		;indir
  1698  001324                     u2319:
  1699  001324  0900               	iorlw	0
  1700  001326  B4D8               	btfsc	status,2,c
  1701  001328  D008               	goto	l2677
  1702  00132A                     u2320:
  1703                           
  1704                           ;ikb.c: 468: {;ikb.c: 469: key[k].sm0--;
  1705  00132A  500C               	movf	ikey_scan@k,w,c
  1706  00132C  0D10               	mullw	16
  1707  00132E  50F3               	movf	prodl,w,c
  1708  001330  0F64               	addlw	low (_key+4)
  1709  001332  6ED9               	movwf	fsr2l,c
  1710  001334  6ADA               	clrf	fsr2h,c
  1711  001336  06DF               	decf	indf2,f,c
  1712                           
  1713                           ;ikb.c: 470: }
  1714  001338  D072               	goto	l2697
  1715  00133A                     l2677:
  1716                           
  1717                           ;ikb.c: 471: else;ikb.c: 472: {;ikb.c: 473: key[k].bf.state = 1;
  1718  00133A  500C               	movf	ikey_scan@k,w,c
  1719  00133C  0D10               	mullw	16
  1720  00133E  50F3               	movf	prodl,w,c
  1721  001340  0F6A               	addlw	low (_key+10)
  1722  001342  6ED9               	movwf	fsr2l,c
  1723  001344  6ADA               	clrf	fsr2h,c
  1724  001346  0100               	movlb	0	; () banked
  1725  001348  80DF               	bsf	indf2,0,c
  1726  00134A                     L1:
  1727                           
  1728                           ;ikb.c: 474: key[k].sm0++;
  1729  00134A  500C               	movf	ikey_scan@k,w,c
  1730  00134C  0D10               	mullw	16
  1731  00134E  50F3               	movf	prodl,w,c
  1732  001350  0F64               	addlw	low (_key+4)
  1733  001352  6ED9               	movwf	fsr2l,c
  1734  001354  6ADA               	clrf	fsr2h,c
  1735  001356  2ADF               	incf	indf2,f,c
  1736  001358  D062               	goto	l2697
  1737  00135A                     l2679:
  1738                           
  1739                           ;ikb.c: 478: else if (key[k].sm0 == 2)
  1740  00135A  500C               	movf	ikey_scan@k,w,c
  1741  00135C  0D10               	mullw	16
  1742  00135E  50F3               	movf	prodl,w,c
  1743  001360  0F64               	addlw	low (_key+4)
  1744  001362  6ED9               	movwf	fsr2l,c
  1745  001364  6ADA               	clrf	fsr2h,c
  1746  001366  0E02               	movlw	2
  1747  001368  18DE               	xorwf	postinc2,w,c
  1748  00136A  A4D8               	btfss	status,2,c
  1749  00136C  D016               	goto	l2685
  1750                           
  1751                           ;ikb.c: 479: {;ikb.c: 480: if (key[k].keyRead() == 1)
  1752  00136E  500C               	movf	ikey_scan@k,w,c
  1753  001370  0D10               	mullw	16
  1754  001372  50F3               	movf	prodl,w,c
  1755  001374  0F60               	addlw	low _key
  1756  001376  6ED9               	movwf	fsr2l,c
  1757  001378  6ADA               	clrf	fsr2h,c
  1758  00137A  D801               	call	u2348
  1759  00137C  D00A               	goto	u2349
  1760  00137E                     u2348:
  1761  00137E  0005               	push	
  1762  001380  6EFA               	movwf	pclath,c
  1763  001382  50DE               	movf	postinc2,w,c
  1764  001384  6EFD               	movwf	tosl,c
  1765  001386  50DE               	movf	postinc2,w,c
  1766  001388  6EFE               	movwf	tosh,c
  1767  00138A  50F8               	movf	tblptru,w,c
  1768  00138C  6EFF               	movwf	tosu,c
  1769  00138E  50FA               	movf	pclath,w,c
  1770  001390  0012               	return		;indir
  1771  001392                     u2349:
  1772  001392  06E8               	decf	wreg,f,c
  1773  001394  B4D8               	btfsc	status,2,c
  1774  001396  D7D9               	goto	L1
  1775  001398  D042               	goto	l2697
  1776  00139A                     l2685:
  1777                           
  1778                           ;ikb.c: 483: else if (key[k].sm0 == 3)
  1779  00139A  500C               	movf	ikey_scan@k,w,c
  1780  00139C  0D10               	mullw	16
  1781  00139E  50F3               	movf	prodl,w,c
  1782  0013A0  0F64               	addlw	low (_key+4)
  1783  0013A2  6ED9               	movwf	fsr2l,c
  1784  0013A4  6ADA               	clrf	fsr2h,c
  1785  0013A6  0E03               	movlw	3
  1786  0013A8  18DE               	xorwf	postinc2,w,c
  1787  0013AA  A4D8               	btfss	status,2,c
  1788  0013AC  D038               	goto	l2697
  1789                           
  1790                           ;ikb.c: 484: {;ikb.c: 485: if (++key[k].counter0 == 4)
  1791  0013AE  500C               	movf	ikey_scan@k,w,c
  1792  0013B0  0D10               	mullw	16
  1793  0013B2  50F3               	movf	prodl,w,c
  1794  0013B4  0F65               	addlw	low (_key+5)
  1795  0013B6  6ED9               	movwf	fsr2l,c
  1796  0013B8  6ADA               	clrf	fsr2h,c
  1797  0013BA  2ADF               	incf	indf2,f,c
  1798  0013BC  0E04               	movlw	4
  1799  0013BE  18DE               	xorwf	postinc2,w,c
  1800  0013C0  A4D8               	btfss	status,2,c
  1801  0013C2  D02D               	goto	l2697
  1802                           
  1803                           ;ikb.c: 486: {;ikb.c: 487: key[k].counter0 = 0x00;
  1804  0013C4  500C               	movf	ikey_scan@k,w,c
  1805  0013C6  0D10               	mullw	16
  1806  0013C8  50F3               	movf	prodl,w,c
  1807  0013CA  0F65               	addlw	low (_key+5)
  1808  0013CC  6ED9               	movwf	fsr2l,c
  1809  0013CE  6ADA               	clrf	fsr2h,c
  1810  0013D0  0E00               	movlw	0
  1811  0013D2  6EDF               	movwf	indf2,c
  1812                           
  1813                           ;ikb.c: 489: if (key[k].keyRead() != 1)
  1814  0013D4  500C               	movf	ikey_scan@k,w,c
  1815  0013D6  0D10               	mullw	16
  1816  0013D8  50F3               	movf	prodl,w,c
  1817  0013DA  0F60               	addlw	low _key
  1818  0013DC  6ED9               	movwf	fsr2l,c
  1819  0013DE  6ADA               	clrf	fsr2h,c
  1820  0013E0  D801               	call	u2388
  1821  0013E2  D00A               	goto	u2389
  1822  0013E4                     u2388:
  1823  0013E4  0005               	push	
  1824  0013E6  6EFA               	movwf	pclath,c
  1825  0013E8  50DE               	movf	postinc2,w,c
  1826  0013EA  6EFD               	movwf	tosl,c
  1827  0013EC  50DE               	movf	postinc2,w,c
  1828  0013EE  6EFE               	movwf	tosh,c
  1829  0013F0  50F8               	movf	tblptru,w,c
  1830  0013F2  6EFF               	movwf	tosu,c
  1831  0013F4  50FA               	movf	pclath,w,c
  1832  0013F6  0012               	return		;indir
  1833  0013F8                     u2389:
  1834  0013F8  06E8               	decf	wreg,f,c
  1835  0013FA  A4D8               	btfss	status,2,c
  1836  0013FC  D796               	goto	u2320
  1837                           
  1838                           ;ikb.c: 493: else;ikb.c: 494: {;ikb.c: 495: key[k].bf.state = 0;
  1839  0013FE  500C               	movf	ikey_scan@k,w,c
  1840  001400  0D10               	mullw	16
  1841  001402  50F3               	movf	prodl,w,c
  1842  001404  0F6A               	addlw	low (_key+10)
  1843  001406  6ED9               	movwf	fsr2l,c
  1844  001408  6ADA               	clrf	fsr2h,c
  1845  00140A  0100               	movlb	0	; () banked
  1846  00140C  90DF               	bcf	indf2,0,c
  1847                           
  1848                           ;ikb.c: 496: key[k].sm0 = 0x00;
  1849  00140E  500C               	movf	ikey_scan@k,w,c
  1850  001410  0D10               	mullw	16
  1851  001412  50F3               	movf	prodl,w,c
  1852  001414  0F64               	addlw	low (_key+4)
  1853  001416  6ED9               	movwf	fsr2l,c
  1854  001418  6ADA               	clrf	fsr2h,c
  1855  00141A  0E00               	movlw	0
  1856  00141C  6EDF               	movwf	indf2,c
  1857  00141E                     l2697:
  1858                           
  1859                           ;ikb.c: 497: };ikb.c: 498: };ikb.c: 499: };ikb.c: 500: }while (--k >= 0);
  1860  00141E  060C               	decf	ikey_scan@k,f,c
  1861  001420  BE0C               	btfsc	ikey_scan@k,7,c
  1862  001422  0012               	return	
  1863  001424  D732               	goto	l2661
  1864  001426                     __end_of_ikey_scan:
  1865                           	opt callstack 0
  1866                           
  1867 ;; *************** function _keyRead_pin_key4 *****************
  1868 ;; Defined at:
  1869 ;;		line 206 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      unsigned char 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1883 ;;      Params:         0       0       0       0       0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1886 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    5
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_ikb_init
  1894 ;;		_ikey_scan
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text10
  1899  00203C                     __ptext10:
  1900                           	opt callstack 0
  1901  00203C                     _keyRead_pin_key4:
  1902                           	opt callstack 23
  1903                           
  1904                           ;ikb.c: 208: return ((PORTC & (1<<7))>>7);
  1905                           
  1906                           ;incstack = 0
  1907  00203C  4482               	rlncf	3970,w,c	;volatile
  1908  00203E  0B01               	andlw	1
  1909  002040  0012               	return		;funcret
  1910  002042                     __end_of_keyRead_pin_key4:
  1911                           	opt callstack 0
  1912                           
  1913 ;; *************** function _keyRead_pin_key3 *****************
  1914 ;; Defined at:
  1915 ;;		line 202 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      unsigned char 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    5
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_ikb_init
  1940 ;;		_ikey_scan
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text11
  1945  001FE6                     __ptext11:
  1946                           	opt callstack 0
  1947  001FE6                     _keyRead_pin_key3:
  1948                           	opt callstack 23
  1949                           
  1950                           ;ikb.c: 204: return ((PORTC & (1<<6))>>6);
  1951                           
  1952                           ;incstack = 0
  1953  001FE6  4482               	rlncf	3970,w,c	;volatile
  1954  001FE8  46E8               	rlncf	wreg,f,c
  1955  001FEA  0B03               	andlw	3
  1956  001FEC  0B01               	andlw	1
  1957  001FEE  0012               	return		;funcret
  1958  001FF0                     __end_of_keyRead_pin_key3:
  1959                           	opt callstack 0
  1960                           
  1961 ;; *************** function _keyRead_pin_key2 *****************
  1962 ;; Defined at:
  1963 ;;		line 198 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      unsigned char 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    5
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_ikb_init
  1988 ;;		_ikey_scan
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text12
  1993  001FF0                     __ptext12:
  1994                           	opt callstack 0
  1995  001FF0                     _keyRead_pin_key2:
  1996                           	opt callstack 23
  1997                           
  1998                           ;ikb.c: 200: return ((PORTC & (1<<5))>>5);
  1999                           
  2000                           ;incstack = 0
  2001  001FF0  3882               	swapf	3970,w,c	;volatile
  2002  001FF2  42E8               	rrncf	wreg,f,c
  2003  001FF4  0B07               	andlw	7
  2004  001FF6  0B01               	andlw	1
  2005  001FF8  0012               	return		;funcret
  2006  001FFA                     __end_of_keyRead_pin_key2:
  2007                           	opt callstack 0
  2008                           
  2009 ;; *************** function _keyRead_pin_key1 *****************
  2010 ;; Defined at:
  2011 ;;		line 194 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      unsigned char 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    5
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_ikb_init
  2036 ;;		_ikey_scan
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text13
  2041  00202C                     __ptext13:
  2042                           	opt callstack 0
  2043  00202C                     _keyRead_pin_key1:
  2044                           	opt callstack 23
  2045                           
  2046                           ;ikb.c: 196: return ((PORTC & (1<<4))>>4);
  2047                           
  2048                           ;incstack = 0
  2049  00202C  3882               	swapf	3970,w,c	;volatile
  2050  00202E  0B0F               	andlw	15
  2051  002030  0B01               	andlw	1
  2052  002032  0012               	return		;funcret
  2053  002034                     __end_of_keyRead_pin_key1:
  2054                           	opt callstack 0
  2055                           
  2056 ;; *************** function _keyRead_pin_key5 *****************
  2057 ;; Defined at:
  2058 ;;		line 210 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      unsigned char 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:         0       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    5
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_ikb_init
  2083 ;;		_ikey_scan
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text14
  2088  002034                     __ptext14:
  2089                           	opt callstack 0
  2090  002034                     _keyRead_pin_key5:
  2091                           	opt callstack 23
  2092                           
  2093                           ;ikb.c: 212: return ((PORTD & (1<<4))>>4);
  2094                           
  2095                           ;incstack = 0
  2096  002034  3883               	swapf	3971,w,c	;volatile
  2097  002036  0B0F               	andlw	15
  2098  002038  0B01               	andlw	1
  2099  00203A  0012               	return		;funcret
  2100  00203C                     __end_of_keyRead_pin_key5:
  2101                           	opt callstack 0
  2102                           
  2103 ;; *************** function _ikey_parsing *****************
  2104 ;; Defined at:
  2105 ;;		line 545 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  k               1   34[COMRAM] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0
  2120 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2121 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2122 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2123 ;;Total ram usage:        5 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    7
  2126 ;; This function calls:
  2127 ;;		___ftge
  2128 ;;		___lwtoft
  2129 ;;		_ikey_is_accessible
  2130 ;; This function is called by:
  2131 ;;		_ikb_job
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text15
  2136  00080E                     __ptext15:
  2137                           	opt callstack 0
  2138  00080E                     _ikey_parsing:
  2139                           	opt callstack 22
  2140                           
  2141                           ;ikb.c: 547: uint8_t k;;ikb.c: 549: for (k=0; k < 5; k++)
  2142                           
  2143                           ;incstack = 0
  2144  00080E  0E00               	movlw	0
  2145  000810  6E23               	movwf	ikey_parsing@k,c
  2146  000812                     l3539:
  2147                           
  2148                           ;ikb.c: 550: {;ikb.c: 551: if ( key[k].sm1 == (0) )
  2149  000812  5023               	movf	ikey_parsing@k,w,c
  2150  000814  0D10               	mullw	16
  2151  000816  50F3               	movf	prodl,w,c
  2152  000818  0F66               	addlw	low (_key+6)
  2153  00081A  6ED9               	movwf	fsr2l,c
  2154  00081C  6ADA               	clrf	fsr2h,c
  2155  00081E  50DF               	movf	indf2,w,c
  2156  000820  A4D8               	btfss	status,2,c
  2157  000822  D08B               	goto	l303
  2158                           
  2159                           ;ikb.c: 552: {;ikb.c: 553: if ( ikey_is_accessible(k) )
  2160  000824  5023               	movf	ikey_parsing@k,w,c
  2161  000826  ECEE  F00D         	call	_ikey_is_accessible
  2162  00082A  0900               	iorlw	0
  2163  00082C  B4D8               	btfsc	status,2,c
  2164  00082E  D085               	goto	l303
  2165                           
  2166                           ;ikb.c: 554: {;ikb.c: 555: if (key[k].bf.state == 1)
  2167  000830  5023               	movf	ikey_parsing@k,w,c
  2168  000832  0D10               	mullw	16
  2169  000834  50F3               	movf	prodl,w,c
  2170  000836  0F6A               	addlw	low (_key+10)
  2171  000838  6ED9               	movwf	fsr2l,c
  2172  00083A  6ADA               	clrf	fsr2h,c
  2173  00083C  0100               	movlb	0	; () banked
  2174  00083E  A0DF               	btfss	indf2,0,c
  2175  000840  D07C               	goto	l303
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;ikb.c: 556: {;ikb.c: 558: if (key[k].bf.OnKeyPressed)
  2179  000842  5023               	movf	ikey_parsing@k,w,c
  2180  000844  0D10               	mullw	16
  2181  000846  50F3               	movf	prodl,w,c
  2182  000848  0F6A               	addlw	low (_key+10)
  2183  00084A  6ED9               	movwf	fsr2l,c
  2184  00084C  6ADA               	clrf	fsr2h,c
  2185  00084E  A2DF               	btfss	indf2,1,c
  2186  000850  D01F               	goto	l3553
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;ikb.c: 559: {;ikb.c: 560: key[k].bf.ReadyToRead = 1;
  2190  000852  5023               	movf	ikey_parsing@k,w,c
  2191  000854  0D10               	mullw	16
  2192  000856  50F3               	movf	prodl,w,c
  2193  000858  0F6A               	addlw	low (_key+10)
  2194  00085A  6ED9               	movwf	fsr2l,c
  2195  00085C  6ADA               	clrf	fsr2h,c
  2196  00085E  8CDF               	bsf	indf2,6,c
  2197                           
  2198                           ;ikb.c: 562: if (key[k].bf.Reptt)
  2199  000860  5023               	movf	ikey_parsing@k,w,c
  2200  000862  0D10               	mullw	16
  2201  000864  50F3               	movf	prodl,w,c
  2202  000866  0F6A               	addlw	low (_key+10)
  2203  000868  6ED9               	movwf	fsr2l,c
  2204  00086A  6ADA               	clrf	fsr2h,c
  2205  00086C  AADF               	btfss	indf2,5,c
  2206  00086E  D008               	goto	l3551
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;ikb.c: 563: {;ikb.c: 564: key[k].sm1 = (6);
  2210  000870  5023               	movf	ikey_parsing@k,w,c
  2211  000872  0D10               	mullw	16
  2212  000874  50F3               	movf	prodl,w,c
  2213  000876  0F66               	addlw	low (_key+6)
  2214  000878  6ED9               	movwf	fsr2l,c
  2215  00087A  6ADA               	clrf	fsr2h,c
  2216  00087C  0E06               	movlw	6
  2217  00087E  D037               	goto	L2
  2218  000880                     l3551:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;ikb.c: 566: else;ikb.c: 567: {;ikb.c: 568: key[k].sm1 = (1);
  2222  000880  5023               	movf	ikey_parsing@k,w,c
  2223  000882  0D10               	mullw	16
  2224  000884  50F3               	movf	prodl,w,c
  2225  000886  0F66               	addlw	low (_key+6)
  2226  000888  6ED9               	movwf	fsr2l,c
  2227  00088A  6ADA               	clrf	fsr2h,c
  2228  00088C  0E01               	movlw	1
  2229  00088E  D02F               	goto	L2
  2230  000890                     l3553:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;ikb.c: 571: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2234  000890  5023               	movf	ikey_parsing@k,w,c
  2235  000892  0D10               	mullw	16
  2236  000894  50F3               	movf	prodl,w,c
  2237  000896  0F6A               	addlw	low (_key+10)
  2238  000898  6ED9               	movwf	fsr2l,c
  2239  00089A  6ADA               	clrf	fsr2h,c
  2240  00089C  A4DF               	btfss	indf2,2,c
  2241  00089E  D008               	goto	l3557
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;ikb.c: 572: {;ikb.c: 573: key[k].sm1 = (5);
  2245  0008A0  5023               	movf	ikey_parsing@k,w,c
  2246  0008A2  0D10               	mullw	16
  2247  0008A4  50F3               	movf	prodl,w,c
  2248  0008A6  0F66               	addlw	low (_key+6)
  2249  0008A8  6ED9               	movwf	fsr2l,c
  2250  0008AA  6ADA               	clrf	fsr2h,c
  2251  0008AC  0E05               	movlw	5
  2252  0008AE  D01F               	goto	L2
  2253  0008B0                     l3557:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;ikb.c: 576: else if (key[k].bf.AtTimeExpired)
  2257  0008B0  5023               	movf	ikey_parsing@k,w,c
  2258  0008B2  0D10               	mullw	16
  2259  0008B4  50F3               	movf	prodl,w,c
  2260  0008B6  0F6A               	addlw	low (_key+10)
  2261  0008B8  6ED9               	movwf	fsr2l,c
  2262  0008BA  6ADA               	clrf	fsr2h,c
  2263  0008BC  A6DF               	btfss	indf2,3,c
  2264  0008BE  D008               	goto	l3561
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;ikb.c: 577: {;ikb.c: 578: key[k].sm1 = (3);
  2268  0008C0  5023               	movf	ikey_parsing@k,w,c
  2269  0008C2  0D10               	mullw	16
  2270  0008C4  50F3               	movf	prodl,w,c
  2271  0008C6  0F66               	addlw	low (_key+6)
  2272  0008C8  6ED9               	movwf	fsr2l,c
  2273  0008CA  6ADA               	clrf	fsr2h,c
  2274  0008CC  0E03               	movlw	3
  2275  0008CE  D00F               	goto	L2
  2276  0008D0                     l3561:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;ikb.c: 580: else if (key[k].bf.AtTimeExpired2)
  2280  0008D0  5023               	movf	ikey_parsing@k,w,c
  2281  0008D2  0D10               	mullw	16
  2282  0008D4  50F3               	movf	prodl,w,c
  2283  0008D6  0F6A               	addlw	low (_key+10)
  2284  0008D8  6ED9               	movwf	fsr2l,c
  2285  0008DA  6ADA               	clrf	fsr2h,c
  2286  0008DC  A8DF               	btfss	indf2,4,c
  2287  0008DE  D008               	goto	l309
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;ikb.c: 581: {;ikb.c: 582: key[k].sm1 = (4);
  2291  0008E0  5023               	movf	ikey_parsing@k,w,c
  2292  0008E2  0D10               	mullw	16
  2293  0008E4  50F3               	movf	prodl,w,c
  2294  0008E6  0F66               	addlw	low (_key+6)
  2295  0008E8  6ED9               	movwf	fsr2l,c
  2296  0008EA  6ADA               	clrf	fsr2h,c
  2297  0008EC  0E04               	movlw	4
  2298  0008EE                     L2:
  2299  0008EE  6EDF               	movwf	indf2,c
  2300  0008F0                     l309:
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;ikb.c: 583: };ikb.c: 586: key[k].bf.InProcessing = 1;
  2304  0008F0  5023               	movf	ikey_parsing@k,w,c
  2305  0008F2  0D10               	mullw	16
  2306  0008F4  50F3               	movf	prodl,w,c
  2307  0008F6  0F6B               	addlw	low (_key+11)
  2308  0008F8  6ED9               	movwf	fsr2l,c
  2309  0008FA  6ADA               	clrf	fsr2h,c
  2310  0008FC  82DF               	bsf	indf2,1,c
  2311                           
  2312                           ;ikb.c: 591: if (key[k].num_group_x != 0)
  2313  0008FE  5023               	movf	ikey_parsing@k,w,c
  2314  000900  0D10               	mullw	16
  2315  000902  50F3               	movf	prodl,w,c
  2316  000904  0F69               	addlw	low (_key+9)
  2317  000906  6ED9               	movwf	fsr2l,c
  2318  000908  6ADA               	clrf	fsr2h,c
  2319  00090A  50DF               	movf	indf2,w,c
  2320  00090C  B4D8               	btfsc	status,2,c
  2321  00090E  D015               	goto	l303
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;ikb.c: 592: {;ikb.c: 593: group_x[ key[k].num_group_x ] = 1;
  2325  000910  5023               	movf	ikey_parsing@k,w,c
  2326  000912  0D10               	mullw	16
  2327  000914  50F3               	movf	prodl,w,c
  2328  000916  0F69               	addlw	low (_key+9)
  2329  000918  6ED9               	movwf	fsr2l,c
  2330  00091A  6ADA               	clrf	fsr2h,c
  2331  00091C  50DF               	movf	indf2,w,c
  2332  00091E  6E1F               	movwf	??_ikey_parsing& (0+255),c
  2333  000920  501F               	movf	??_ikey_parsing,w,c
  2334  000922  0FB0               	addlw	low _group_x
  2335  000924  6ED9               	movwf	fsr2l,c
  2336  000926  6ADA               	clrf	fsr2h,c
  2337  000928  0E01               	movlw	1
  2338  00092A  6EDF               	movwf	indf2,c
  2339                           
  2340                           ;ikb.c: 594: key[k].bf.OwnerOfGroup = 1;
  2341  00092C  5023               	movf	ikey_parsing@k,w,c
  2342  00092E  0D10               	mullw	16
  2343  000930  50F3               	movf	prodl,w,c
  2344  000932  0F6B               	addlw	low (_key+11)
  2345  000934  6ED9               	movwf	fsr2l,c
  2346  000936  6ADA               	clrf	fsr2h,c
  2347  000938  80DF               	bsf	indf2,0,c
  2348  00093A                     l303:
  2349                           
  2350                           ;ikb.c: 595: };ikb.c: 597: };ikb.c: 598: };ikb.c: 599: };ikb.c: 603: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2351  00093A  5023               	movf	ikey_parsing@k,w,c
  2352  00093C  0D10               	mullw	16
  2353  00093E  50F3               	movf	prodl,w,c
  2354  000940  0F66               	addlw	low (_key+6)
  2355  000942  6ED9               	movwf	fsr2l,c
  2356  000944  6ADA               	clrf	fsr2h,c
  2357  000946  0E05               	movlw	5
  2358  000948  64DF               	cpfsgt	indf2,c
  2359  00094A  D024               	goto	l316
  2360  00094C  5023               	movf	ikey_parsing@k,w,c
  2361  00094E  0D10               	mullw	16
  2362  000950  50F3               	movf	prodl,w,c
  2363  000952  0F66               	addlw	low (_key+6)
  2364  000954  6ED9               	movwf	fsr2l,c
  2365  000956  6ADA               	clrf	fsr2h,c
  2366  000958  0E09               	movlw	9
  2367  00095A  60DF               	cpfslt	indf2,c
  2368  00095C  D01B               	goto	l316
  2369                           
  2370                           ;ikb.c: 604: {;ikb.c: 605: if (key[k].bf.state == 0)
  2371  00095E  5023               	movf	ikey_parsing@k,w,c
  2372  000960  0D10               	mullw	16
  2373  000962  50F3               	movf	prodl,w,c
  2374  000964  0F6A               	addlw	low (_key+10)
  2375  000966  6ED9               	movwf	fsr2l,c
  2376  000968  6ADA               	clrf	fsr2h,c
  2377  00096A  0100               	movlb	0	; () banked
  2378  00096C  B0DF               	btfsc	indf2,0,c
  2379  00096E  D012               	goto	l316
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;ikb.c: 606: {;ikb.c: 607: key[k].counter1 = 0;
  2383  000970  5023               	movf	ikey_parsing@k,w,c
  2384  000972  0D10               	mullw	16
  2385  000974  50F3               	movf	prodl,w,c
  2386  000976  0F67               	addlw	low (_key+7)
  2387  000978  6ED9               	movwf	fsr2l,c
  2388  00097A  6ADA               	clrf	fsr2h,c
  2389  00097C  0E00               	movlw	0
  2390  00097E  6EDE               	movwf	postinc2,c
  2391  000980  0E00               	movlw	0
  2392  000982  6EDD               	movwf	postdec2,c
  2393                           
  2394                           ;ikb.c: 608: key[k].sm1 = (2);
  2395  000984  5023               	movf	ikey_parsing@k,w,c
  2396  000986  0D10               	mullw	16
  2397  000988  50F3               	movf	prodl,w,c
  2398  00098A  0F66               	addlw	low (_key+6)
  2399  00098C  6ED9               	movwf	fsr2l,c
  2400  00098E  6ADA               	clrf	fsr2h,c
  2401  000990  0E02               	movlw	2
  2402  000992  6EDF               	movwf	indf2,c
  2403  000994                     l316:
  2404                           
  2405                           ;ikb.c: 609: };ikb.c: 610: };ikb.c: 612: if (key[k].sm1 == (6) )
  2406  000994  5023               	movf	ikey_parsing@k,w,c
  2407  000996  0D10               	mullw	16
  2408  000998  50F3               	movf	prodl,w,c
  2409  00099A  0F66               	addlw	low (_key+6)
  2410  00099C  6ED9               	movwf	fsr2l,c
  2411  00099E  6ADA               	clrf	fsr2h,c
  2412  0009A0  0E06               	movlw	6
  2413  0009A2  18DE               	xorwf	postinc2,w,c
  2414  0009A4  A4D8               	btfss	status,2,c
  2415  0009A6  D027               	goto	l318
  2416                           
  2417                           ;ikb.c: 613: {;ikb.c: 614: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2418  0009A8  5023               	movf	ikey_parsing@k,w,c
  2419  0009AA  0D10               	mullw	16
  2420  0009AC  50F3               	movf	prodl,w,c
  2421  0009AE  0F6C               	addlw	low (_key+12)
  2422  0009B0  6ED9               	movwf	fsr2l,c
  2423  0009B2  6ADA               	clrf	fsr2h,c
  2424  0009B4  5023               	movf	ikey_parsing@k,w,c
  2425  0009B6  0D10               	mullw	16
  2426  0009B8  50F3               	movf	prodl,w,c
  2427  0009BA  0F67               	addlw	low (_key+7)
  2428  0009BC  6EE1               	movwf	fsr1l,c
  2429  0009BE  6AE2               	clrf	fsr1h,c
  2430  0009C0  2AE6               	incf	postinc1,f,c
  2431  0009C2  0E00               	movlw	0
  2432  0009C4  22E5               	addwfc	postdec1,f,c
  2433  0009C6  50DE               	movf	postinc2,w,c
  2434  0009C8  5CE6               	subwf	postinc1,w,c
  2435  0009CA  50DE               	movf	postinc2,w,c
  2436  0009CC  58E6               	subwfb	postinc1,w,c
  2437  0009CE  A0D8               	btfss	status,0,c
  2438  0009D0  D012               	goto	l318
  2439                           
  2440                           ;ikb.c: 615: {;ikb.c: 616: key[k].counter1 =0;
  2441  0009D2  5023               	movf	ikey_parsing@k,w,c
  2442  0009D4  0D10               	mullw	16
  2443  0009D6  50F3               	movf	prodl,w,c
  2444  0009D8  0F67               	addlw	low (_key+7)
  2445  0009DA  6ED9               	movwf	fsr2l,c
  2446  0009DC  6ADA               	clrf	fsr2h,c
  2447  0009DE  0E00               	movlw	0
  2448  0009E0  6EDE               	movwf	postinc2,c
  2449  0009E2  0E00               	movlw	0
  2450  0009E4  6EDD               	movwf	postdec2,c
  2451                           
  2452                           ;ikb.c: 617: key[k].sm1 = (7);
  2453  0009E6  5023               	movf	ikey_parsing@k,w,c
  2454  0009E8  0D10               	mullw	16
  2455  0009EA  50F3               	movf	prodl,w,c
  2456  0009EC  0F66               	addlw	low (_key+6)
  2457  0009EE  6ED9               	movwf	fsr2l,c
  2458  0009F0  6ADA               	clrf	fsr2h,c
  2459  0009F2  0E07               	movlw	7
  2460  0009F4  6EDF               	movwf	indf2,c
  2461  0009F6                     l318:
  2462                           
  2463                           ;ikb.c: 618: };ikb.c: 619: };ikb.c: 620: if (key[k].sm1 == (7))
  2464  0009F6  5023               	movf	ikey_parsing@k,w,c
  2465  0009F8  0D10               	mullw	16
  2466  0009FA  50F3               	movf	prodl,w,c
  2467  0009FC  0F66               	addlw	low (_key+6)
  2468  0009FE  6ED9               	movwf	fsr2l,c
  2469  000A00  6ADA               	clrf	fsr2h,c
  2470  000A02  0E07               	movlw	7
  2471  000A04  18DE               	xorwf	postinc2,w,c
  2472  000A06  A4D8               	btfss	status,2,c
  2473  000A08  D018               	goto	l320
  2474                           
  2475                           ;ikb.c: 621: {;ikb.c: 622: if (key[k].bf.ReadyToRead == 0)
  2476  000A0A  5023               	movf	ikey_parsing@k,w,c
  2477  000A0C  0D10               	mullw	16
  2478  000A0E  50F3               	movf	prodl,w,c
  2479  000A10  0F6A               	addlw	low (_key+10)
  2480  000A12  6ED9               	movwf	fsr2l,c
  2481  000A14  6ADA               	clrf	fsr2h,c
  2482  000A16  0100               	movlb	0	; () banked
  2483  000A18  BCDF               	btfsc	indf2,6,c
  2484  000A1A  D00F               	goto	l320
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;ikb.c: 623: {;ikb.c: 624: key[k].bf.ReadyToRead = 1;
  2488  000A1C  5023               	movf	ikey_parsing@k,w,c
  2489  000A1E  0D10               	mullw	16
  2490  000A20  50F3               	movf	prodl,w,c
  2491  000A22  0F6A               	addlw	low (_key+10)
  2492  000A24  6ED9               	movwf	fsr2l,c
  2493  000A26  6ADA               	clrf	fsr2h,c
  2494  000A28  8CDF               	bsf	indf2,6,c
  2495                           
  2496                           ;ikb.c: 625: key[k].sm1 = (8);
  2497  000A2A  5023               	movf	ikey_parsing@k,w,c
  2498  000A2C  0D10               	mullw	16
  2499  000A2E  50F3               	movf	prodl,w,c
  2500  000A30  0F66               	addlw	low (_key+6)
  2501  000A32  6ED9               	movwf	fsr2l,c
  2502  000A34  6ADA               	clrf	fsr2h,c
  2503  000A36  0E08               	movlw	8
  2504  000A38  6EDF               	movwf	indf2,c
  2505  000A3A                     l320:
  2506                           
  2507                           ;ikb.c: 626: };ikb.c: 627: };ikb.c: 628: if (key[k].sm1 == (8))
  2508  000A3A  5023               	movf	ikey_parsing@k,w,c
  2509  000A3C  0D10               	mullw	16
  2510  000A3E  50F3               	movf	prodl,w,c
  2511  000A40  0F66               	addlw	low (_key+6)
  2512  000A42  6ED9               	movwf	fsr2l,c
  2513  000A44  6ADA               	clrf	fsr2h,c
  2514  000A46  0E08               	movlw	8
  2515  000A48  18DE               	xorwf	postinc2,w,c
  2516  000A4A  A4D8               	btfss	status,2,c
  2517  000A4C  D027               	goto	l322
  2518                           
  2519                           ;ikb.c: 629: {;ikb.c: 630: if ( ++key[k].counter1 >= key[k].repp.after_start)
  2520  000A4E  5023               	movf	ikey_parsing@k,w,c
  2521  000A50  0D10               	mullw	16
  2522  000A52  50F3               	movf	prodl,w,c
  2523  000A54  0F6E               	addlw	low (_key+14)
  2524  000A56  6ED9               	movwf	fsr2l,c
  2525  000A58  6ADA               	clrf	fsr2h,c
  2526  000A5A  5023               	movf	ikey_parsing@k,w,c
  2527  000A5C  0D10               	mullw	16
  2528  000A5E  50F3               	movf	prodl,w,c
  2529  000A60  0F67               	addlw	low (_key+7)
  2530  000A62  6EE1               	movwf	fsr1l,c
  2531  000A64  6AE2               	clrf	fsr1h,c
  2532  000A66  2AE6               	incf	postinc1,f,c
  2533  000A68  0E00               	movlw	0
  2534  000A6A  22E5               	addwfc	postdec1,f,c
  2535  000A6C  50DE               	movf	postinc2,w,c
  2536  000A6E  5CE6               	subwf	postinc1,w,c
  2537  000A70  50DE               	movf	postinc2,w,c
  2538  000A72  58E6               	subwfb	postinc1,w,c
  2539  000A74  A0D8               	btfss	status,0,c
  2540  000A76  D012               	goto	l322
  2541                           
  2542                           ;ikb.c: 631: {;ikb.c: 632: key[k].counter1 = 0;
  2543  000A78  5023               	movf	ikey_parsing@k,w,c
  2544  000A7A  0D10               	mullw	16
  2545  000A7C  50F3               	movf	prodl,w,c
  2546  000A7E  0F67               	addlw	low (_key+7)
  2547  000A80  6ED9               	movwf	fsr2l,c
  2548  000A82  6ADA               	clrf	fsr2h,c
  2549  000A84  0E00               	movlw	0
  2550  000A86  6EDE               	movwf	postinc2,c
  2551  000A88  0E00               	movlw	0
  2552  000A8A  6EDD               	movwf	postdec2,c
  2553                           
  2554                           ;ikb.c: 633: key[k].sm1 = (7);
  2555  000A8C  5023               	movf	ikey_parsing@k,w,c
  2556  000A8E  0D10               	mullw	16
  2557  000A90  50F3               	movf	prodl,w,c
  2558  000A92  0F66               	addlw	low (_key+6)
  2559  000A94  6ED9               	movwf	fsr2l,c
  2560  000A96  6ADA               	clrf	fsr2h,c
  2561  000A98  0E07               	movlw	7
  2562  000A9A  6EDF               	movwf	indf2,c
  2563  000A9C                     l322:
  2564                           
  2565                           ;ikb.c: 634: };ikb.c: 635: };ikb.c: 637: if (key[k].sm1 == (5) )
  2566  000A9C  5023               	movf	ikey_parsing@k,w,c
  2567  000A9E  0D10               	mullw	16
  2568  000AA0  50F3               	movf	prodl,w,c
  2569  000AA2  0F66               	addlw	low (_key+6)
  2570  000AA4  6ED9               	movwf	fsr2l,c
  2571  000AA6  6ADA               	clrf	fsr2h,c
  2572  000AA8  0E05               	movlw	5
  2573  000AAA  18DE               	xorwf	postinc2,w,c
  2574  000AAC  A4D8               	btfss	status,2,c
  2575  000AAE  D018               	goto	l324
  2576                           
  2577                           ;ikb.c: 638: {;ikb.c: 639: if (key[k].bf.state == 0)
  2578  000AB0  5023               	movf	ikey_parsing@k,w,c
  2579  000AB2  0D10               	mullw	16
  2580  000AB4  50F3               	movf	prodl,w,c
  2581  000AB6  0F6A               	addlw	low (_key+10)
  2582  000AB8  6ED9               	movwf	fsr2l,c
  2583  000ABA  6ADA               	clrf	fsr2h,c
  2584  000ABC  0100               	movlb	0	; () banked
  2585  000ABE  B0DF               	btfsc	indf2,0,c
  2586  000AC0  D00F               	goto	l324
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;ikb.c: 640: {;ikb.c: 641: key[k].bf.ReadyToRead = 1;
  2590  000AC2  5023               	movf	ikey_parsing@k,w,c
  2591  000AC4  0D10               	mullw	16
  2592  000AC6  50F3               	movf	prodl,w,c
  2593  000AC8  0F6A               	addlw	low (_key+10)
  2594  000ACA  6ED9               	movwf	fsr2l,c
  2595  000ACC  6ADA               	clrf	fsr2h,c
  2596  000ACE  8CDF               	bsf	indf2,6,c
  2597                           
  2598                           ;ikb.c: 642: key[k].sm1 = (2);
  2599  000AD0  5023               	movf	ikey_parsing@k,w,c
  2600  000AD2  0D10               	mullw	16
  2601  000AD4  50F3               	movf	prodl,w,c
  2602  000AD6  0F66               	addlw	low (_key+6)
  2603  000AD8  6ED9               	movwf	fsr2l,c
  2604  000ADA  6ADA               	clrf	fsr2h,c
  2605  000ADC  0E02               	movlw	2
  2606  000ADE  6EDF               	movwf	indf2,c
  2607  000AE0                     l324:
  2608                           
  2609                           ;ikb.c: 643: };ikb.c: 644: };ikb.c: 646: if (key[k].sm1 == (3) )
  2610  000AE0  5023               	movf	ikey_parsing@k,w,c
  2611  000AE2  0D10               	mullw	16
  2612  000AE4  50F3               	movf	prodl,w,c
  2613  000AE6  0F66               	addlw	low (_key+6)
  2614  000AE8  6ED9               	movwf	fsr2l,c
  2615  000AEA  6ADA               	clrf	fsr2h,c
  2616  000AEC  0E03               	movlw	3
  2617  000AEE  18DE               	xorwf	postinc2,w,c
  2618  000AF0  A4D8               	btfss	status,2,c
  2619  000AF2  D09C               	goto	l326
  2620                           
  2621                           ;ikb.c: 647: {;ikb.c: 648: key[k].counter1++;
  2622  000AF4  5023               	movf	ikey_parsing@k,w,c
  2623  000AF6  0D10               	mullw	16
  2624  000AF8  50F3               	movf	prodl,w,c
  2625  000AFA  0F67               	addlw	low (_key+7)
  2626  000AFC  6ED9               	movwf	fsr2l,c
  2627  000AFE  6ADA               	clrf	fsr2h,c
  2628  000B00  2ADE               	incf	postinc2,f,c
  2629  000B02  0E00               	movlw	0
  2630  000B04  22DD               	addwfc	postdec2,f,c
  2631                           
  2632                           ;ikb.c: 650: if (key[k].bf.state == 0)
  2633  000B06  5023               	movf	ikey_parsing@k,w,c
  2634  000B08  0D10               	mullw	16
  2635  000B0A  50F3               	movf	prodl,w,c
  2636  000B0C  0F6A               	addlw	low (_key+10)
  2637  000B0E  6ED9               	movwf	fsr2l,c
  2638  000B10  6ADA               	clrf	fsr2h,c
  2639  000B12  0100               	movlb	0	; () banked
  2640  000B14  B0DF               	btfsc	indf2,0,c
  2641  000B16  D03D               	goto	l3595
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;ikb.c: 651: {;ikb.c: 652: if (key[k].counter1 <= (1000E-3/5E-3) )
  2645  000B18  0E00               	movlw	0
  2646  000B1A  6E16               	movwf	___ftge@ff1,c
  2647  000B1C  0E48               	movlw	72
  2648  000B1E  6E17               	movwf	___ftge@ff1+1,c
  2649  000B20  0E43               	movlw	67
  2650  000B22  6E18               	movwf	___ftge@ff1+2,c
  2651  000B24  5023               	movf	ikey_parsing@k,w,c
  2652  000B26  0D10               	mullw	16
  2653  000B28  50F3               	movf	prodl,w,c
  2654  000B2A  0F67               	addlw	low (_key+7)
  2655  000B2C  6ED9               	movwf	fsr2l,c
  2656  000B2E  6ADA               	clrf	fsr2h,c
  2657  000B30  CFDE F013          	movff	postinc2,___lwtoft@c
  2658  000B34  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2659  000B38  ECA7  F00F         	call	___lwtoft	;wreg free
  2660  000B3C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2661  000B40  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2662  000B44  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2663  000B48  EC05  F00D         	call	___ftge	;wreg free
  2664  000B4C  A0D8               	btfss	status,0,c
  2665  000B4E  D021               	goto	l3595
  2666                           
  2667                           ;ikb.c: 653: {;ikb.c: 654: key[k].counter1 = 0;
  2668  000B50  5023               	movf	ikey_parsing@k,w,c
  2669  000B52  0D10               	mullw	16
  2670  000B54  50F3               	movf	prodl,w,c
  2671  000B56  0F67               	addlw	low (_key+7)
  2672  000B58  6ED9               	movwf	fsr2l,c
  2673  000B5A  6ADA               	clrf	fsr2h,c
  2674  000B5C  0E00               	movlw	0
  2675  000B5E  6EDE               	movwf	postinc2,c
  2676  000B60  0E00               	movlw	0
  2677  000B62  6EDD               	movwf	postdec2,c
  2678                           
  2679                           ;ikb.c: 656: key[k].bf.ReadyToRead = 1;
  2680  000B64  5023               	movf	ikey_parsing@k,w,c
  2681  000B66  0D10               	mullw	16
  2682  000B68  50F3               	movf	prodl,w,c
  2683  000B6A  0F6A               	addlw	low (_key+10)
  2684  000B6C  6ED9               	movwf	fsr2l,c
  2685  000B6E  6ADA               	clrf	fsr2h,c
  2686  000B70  0100               	movlb	0	; () banked
  2687  000B72  8CDF               	bsf	indf2,6,c
  2688                           
  2689                           ;ikb.c: 657: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  2690  000B74  5023               	movf	ikey_parsing@k,w,c
  2691  000B76  0D10               	mullw	16
  2692  000B78  50F3               	movf	prodl,w,c
  2693  000B7A  0F6A               	addlw	low (_key+10)
  2694  000B7C  6ED9               	movwf	fsr2l,c
  2695  000B7E  6ADA               	clrf	fsr2h,c
  2696  000B80  9EDF               	bcf	indf2,7,c
  2697                           
  2698                           ;ikb.c: 659: key[k].sm1 = (2);
  2699  000B82  5023               	movf	ikey_parsing@k,w,c
  2700  000B84  0D10               	mullw	16
  2701  000B86  50F3               	movf	prodl,w,c
  2702  000B88  0F66               	addlw	low (_key+6)
  2703  000B8A  6ED9               	movwf	fsr2l,c
  2704  000B8C  6ADA               	clrf	fsr2h,c
  2705  000B8E  0E02               	movlw	2
  2706  000B90  6EDF               	movwf	indf2,c
  2707  000B92                     l3595:
  2708                           
  2709                           ;ikb.c: 660: };ikb.c: 661: };ikb.c: 663: if (key[k].counter1 > (1000E-3/5E-3) )
  2710  000B92  0E00               	movlw	0
  2711  000B94  6E16               	movwf	___ftge@ff1,c
  2712  000B96  0E48               	movlw	72
  2713  000B98  6E17               	movwf	___ftge@ff1+1,c
  2714  000B9A  0E43               	movlw	67
  2715  000B9C  6E18               	movwf	___ftge@ff1+2,c
  2716  000B9E  5023               	movf	ikey_parsing@k,w,c
  2717  000BA0  0D10               	mullw	16
  2718  000BA2  50F3               	movf	prodl,w,c
  2719  000BA4  0F67               	addlw	low (_key+7)
  2720  000BA6  6ED9               	movwf	fsr2l,c
  2721  000BA8  6ADA               	clrf	fsr2h,c
  2722  000BAA  CFDE F013          	movff	postinc2,___lwtoft@c
  2723  000BAE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2724  000BB2  ECA7  F00F         	call	___lwtoft	;wreg free
  2725  000BB6  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2726  000BBA  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2727  000BBE  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2728  000BC2  EC05  F00D         	call	___ftge	;wreg free
  2729  000BC6  B0D8               	btfsc	status,0,c
  2730  000BC8  D031               	goto	l326
  2731                           
  2732                           ;ikb.c: 664: {;ikb.c: 665: key[k].counter1 = 0x0000;
  2733  000BCA  5023               	movf	ikey_parsing@k,w,c
  2734  000BCC  0D10               	mullw	16
  2735  000BCE  50F3               	movf	prodl,w,c
  2736  000BD0  0F67               	addlw	low (_key+7)
  2737  000BD2  6ED9               	movwf	fsr2l,c
  2738  000BD4  6ADA               	clrf	fsr2h,c
  2739  000BD6  0E00               	movlw	0
  2740  000BD8  6EDE               	movwf	postinc2,c
  2741  000BDA  0E00               	movlw	0
  2742  000BDC  6EDD               	movwf	postdec2,c
  2743                           
  2744                           ;ikb.c: 667: key[k].bf.ReadyToRead = 1;
  2745  000BDE  5023               	movf	ikey_parsing@k,w,c
  2746  000BE0  0D10               	mullw	16
  2747  000BE2  50F3               	movf	prodl,w,c
  2748  000BE4  0F6A               	addlw	low (_key+10)
  2749  000BE6  6ED9               	movwf	fsr2l,c
  2750  000BE8  6ADA               	clrf	fsr2h,c
  2751  000BEA  0100               	movlb	0	; () banked
  2752  000BEC  8CDF               	bsf	indf2,6,c
  2753                           
  2754                           ;ikb.c: 668: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  2755  000BEE  5023               	movf	ikey_parsing@k,w,c
  2756  000BF0  0D10               	mullw	16
  2757  000BF2  50F3               	movf	prodl,w,c
  2758  000BF4  0F6A               	addlw	low (_key+10)
  2759  000BF6  6ED9               	movwf	fsr2l,c
  2760  000BF8  6ADA               	clrf	fsr2h,c
  2761  000BFA  8EDF               	bsf	indf2,7,c
  2762                           
  2763                           ;ikb.c: 670: if (!key[k].bf.Reptt)
  2764  000BFC  5023               	movf	ikey_parsing@k,w,c
  2765  000BFE  0D10               	mullw	16
  2766  000C00  50F3               	movf	prodl,w,c
  2767  000C02  0F6A               	addlw	low (_key+10)
  2768  000C04  6ED9               	movwf	fsr2l,c
  2769  000C06  6ADA               	clrf	fsr2h,c
  2770  000C08  BADF               	btfsc	indf2,5,c
  2771  000C0A  D008               	goto	l3601
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;ikb.c: 671: {;ikb.c: 672: key[k].sm1 = (1);
  2775  000C0C  5023               	movf	ikey_parsing@k,w,c
  2776  000C0E  0D10               	mullw	16
  2777  000C10  50F3               	movf	prodl,w,c
  2778  000C12  0F66               	addlw	low (_key+6)
  2779  000C14  6ED9               	movwf	fsr2l,c
  2780  000C16  6ADA               	clrf	fsr2h,c
  2781  000C18  0E01               	movlw	1
  2782  000C1A  D007               	goto	L3
  2783  000C1C                     l3601:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;ikb.c: 674: else;ikb.c: 675: {;ikb.c: 676: key[k].sm1 = (8);
  2787  000C1C  5023               	movf	ikey_parsing@k,w,c
  2788  000C1E  0D10               	mullw	16
  2789  000C20  50F3               	movf	prodl,w,c
  2790  000C22  0F66               	addlw	low (_key+6)
  2791  000C24  6ED9               	movwf	fsr2l,c
  2792  000C26  6ADA               	clrf	fsr2h,c
  2793  000C28  0E08               	movlw	8
  2794  000C2A                     L3:
  2795  000C2A  6EDF               	movwf	indf2,c
  2796  000C2C                     l326:
  2797                           
  2798                           ;ikb.c: 677: };ikb.c: 678: };ikb.c: 679: };ikb.c: 684: if (key[k].sm1 == (4))
  2799  000C2C  5023               	movf	ikey_parsing@k,w,c
  2800  000C2E  0D10               	mullw	16
  2801  000C30  50F3               	movf	prodl,w,c
  2802  000C32  0F66               	addlw	low (_key+6)
  2803  000C34  6ED9               	movwf	fsr2l,c
  2804  000C36  6ADA               	clrf	fsr2h,c
  2805  000C38  0E04               	movlw	4
  2806  000C3A  18DE               	xorwf	postinc2,w,c
  2807  000C3C  A4D8               	btfss	status,2,c
  2808  000C3E  D08C               	goto	l332
  2809                           
  2810                           ;ikb.c: 685: {;ikb.c: 686: key[k].counter1++;
  2811  000C40  5023               	movf	ikey_parsing@k,w,c
  2812  000C42  0D10               	mullw	16
  2813  000C44  50F3               	movf	prodl,w,c
  2814  000C46  0F67               	addlw	low (_key+7)
  2815  000C48  6ED9               	movwf	fsr2l,c
  2816  000C4A  6ADA               	clrf	fsr2h,c
  2817  000C4C  2ADE               	incf	postinc2,f,c
  2818  000C4E  0E00               	movlw	0
  2819  000C50  22DD               	addwfc	postdec2,f,c
  2820                           
  2821                           ;ikb.c: 688: if (key[k].bf.state == 0)
  2822  000C52  5023               	movf	ikey_parsing@k,w,c
  2823  000C54  0D10               	mullw	16
  2824  000C56  50F3               	movf	prodl,w,c
  2825  000C58  0F6A               	addlw	low (_key+10)
  2826  000C5A  6ED9               	movwf	fsr2l,c
  2827  000C5C  6ADA               	clrf	fsr2h,c
  2828  000C5E  0100               	movlb	0	; () banked
  2829  000C60  B0DF               	btfsc	indf2,0,c
  2830  000C62  D03D               	goto	l3609
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;ikb.c: 689: {;ikb.c: 690: if (key[k].counter1 <= (1000E-3/5E-3))
  2834  000C64  0E00               	movlw	0
  2835  000C66  6E16               	movwf	___ftge@ff1,c
  2836  000C68  0E48               	movlw	72
  2837  000C6A  6E17               	movwf	___ftge@ff1+1,c
  2838  000C6C  0E43               	movlw	67
  2839  000C6E  6E18               	movwf	___ftge@ff1+2,c
  2840  000C70  5023               	movf	ikey_parsing@k,w,c
  2841  000C72  0D10               	mullw	16
  2842  000C74  50F3               	movf	prodl,w,c
  2843  000C76  0F67               	addlw	low (_key+7)
  2844  000C78  6ED9               	movwf	fsr2l,c
  2845  000C7A  6ADA               	clrf	fsr2h,c
  2846  000C7C  CFDE F013          	movff	postinc2,___lwtoft@c
  2847  000C80  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2848  000C84  ECA7  F00F         	call	___lwtoft	;wreg free
  2849  000C88  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2850  000C8C  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2851  000C90  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2852  000C94  EC05  F00D         	call	___ftge	;wreg free
  2853  000C98  A0D8               	btfss	status,0,c
  2854  000C9A  D021               	goto	l3609
  2855                           
  2856                           ;ikb.c: 691: {;ikb.c: 692: key[k].counter1 = 0;
  2857  000C9C  5023               	movf	ikey_parsing@k,w,c
  2858  000C9E  0D10               	mullw	16
  2859  000CA0  50F3               	movf	prodl,w,c
  2860  000CA2  0F67               	addlw	low (_key+7)
  2861  000CA4  6ED9               	movwf	fsr2l,c
  2862  000CA6  6ADA               	clrf	fsr2h,c
  2863  000CA8  0E00               	movlw	0
  2864  000CAA  6EDE               	movwf	postinc2,c
  2865  000CAC  0E00               	movlw	0
  2866  000CAE  6EDD               	movwf	postdec2,c
  2867                           
  2868                           ;ikb.c: 694: key[k].bf.ReadyToRead = 1;
  2869  000CB0  5023               	movf	ikey_parsing@k,w,c
  2870  000CB2  0D10               	mullw	16
  2871  000CB4  50F3               	movf	prodl,w,c
  2872  000CB6  0F6A               	addlw	low (_key+10)
  2873  000CB8  6ED9               	movwf	fsr2l,c
  2874  000CBA  6ADA               	clrf	fsr2h,c
  2875  000CBC  0100               	movlb	0	; () banked
  2876  000CBE  8CDF               	bsf	indf2,6,c
  2877                           
  2878                           ;ikb.c: 695: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  2879  000CC0  5023               	movf	ikey_parsing@k,w,c
  2880  000CC2  0D10               	mullw	16
  2881  000CC4  50F3               	movf	prodl,w,c
  2882  000CC6  0F6A               	addlw	low (_key+10)
  2883  000CC8  6ED9               	movwf	fsr2l,c
  2884  000CCA  6ADA               	clrf	fsr2h,c
  2885  000CCC  9EDF               	bcf	indf2,7,c
  2886                           
  2887                           ;ikb.c: 697: key[k].sm1 = (2);
  2888  000CCE  5023               	movf	ikey_parsing@k,w,c
  2889  000CD0  0D10               	mullw	16
  2890  000CD2  50F3               	movf	prodl,w,c
  2891  000CD4  0F66               	addlw	low (_key+6)
  2892  000CD6  6ED9               	movwf	fsr2l,c
  2893  000CD8  6ADA               	clrf	fsr2h,c
  2894  000CDA  0E02               	movlw	2
  2895  000CDC  6EDF               	movwf	indf2,c
  2896  000CDE                     l3609:
  2897                           
  2898                           ;ikb.c: 698: };ikb.c: 699: };ikb.c: 702: if (key[k].counter1 >= (3000E-3/5E-3))
  2899  000CDE  5023               	movf	ikey_parsing@k,w,c
  2900  000CE0  0D10               	mullw	16
  2901  000CE2  50F3               	movf	prodl,w,c
  2902  000CE4  0F67               	addlw	low (_key+7)
  2903  000CE6  6ED9               	movwf	fsr2l,c
  2904  000CE8  6ADA               	clrf	fsr2h,c
  2905  000CEA  CFDE F013          	movff	postinc2,___lwtoft@c
  2906  000CEE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2907  000CF2  ECA7  F00F         	call	___lwtoft	;wreg free
  2908  000CF6  C013  F016         	movff	?___lwtoft,___ftge@ff1
  2909  000CFA  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  2910  000CFE  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  2911  000D02  0E00               	movlw	0
  2912  000D04  6E19               	movwf	___ftge@ff2,c
  2913  000D06  0E16               	movlw	22
  2914  000D08  6E1A               	movwf	___ftge@ff2+1,c
  2915  000D0A  0E44               	movlw	68
  2916  000D0C  6E1B               	movwf	___ftge@ff2+2,c
  2917  000D0E  EC05  F00D         	call	___ftge	;wreg free
  2918  000D12  A0D8               	btfss	status,0,c
  2919  000D14  D021               	goto	l332
  2920                           
  2921                           ;ikb.c: 703: {;ikb.c: 704: key[k].counter1 = 0x0000;
  2922  000D16  5023               	movf	ikey_parsing@k,w,c
  2923  000D18  0D10               	mullw	16
  2924  000D1A  50F3               	movf	prodl,w,c
  2925  000D1C  0F67               	addlw	low (_key+7)
  2926  000D1E  6ED9               	movwf	fsr2l,c
  2927  000D20  6ADA               	clrf	fsr2h,c
  2928  000D22  0E00               	movlw	0
  2929  000D24  6EDE               	movwf	postinc2,c
  2930  000D26  0E00               	movlw	0
  2931  000D28  6EDD               	movwf	postdec2,c
  2932                           
  2933                           ;ikb.c: 706: key[k].bf.ReadyToRead = 1;
  2934  000D2A  5023               	movf	ikey_parsing@k,w,c
  2935  000D2C  0D10               	mullw	16
  2936  000D2E  50F3               	movf	prodl,w,c
  2937  000D30  0F6A               	addlw	low (_key+10)
  2938  000D32  6ED9               	movwf	fsr2l,c
  2939  000D34  6ADA               	clrf	fsr2h,c
  2940  000D36  0100               	movlb	0	; () banked
  2941  000D38  8CDF               	bsf	indf2,6,c
  2942                           
  2943                           ;ikb.c: 707: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  2944  000D3A  5023               	movf	ikey_parsing@k,w,c
  2945  000D3C  0D10               	mullw	16
  2946  000D3E  50F3               	movf	prodl,w,c
  2947  000D40  0F6A               	addlw	low (_key+10)
  2948  000D42  6ED9               	movwf	fsr2l,c
  2949  000D44  6ADA               	clrf	fsr2h,c
  2950  000D46  8EDF               	bsf	indf2,7,c
  2951                           
  2952                           ;ikb.c: 710: key[k].sm1 = (1);
  2953  000D48  5023               	movf	ikey_parsing@k,w,c
  2954  000D4A  0D10               	mullw	16
  2955  000D4C  50F3               	movf	prodl,w,c
  2956  000D4E  0F66               	addlw	low (_key+6)
  2957  000D50  6ED9               	movwf	fsr2l,c
  2958  000D52  6ADA               	clrf	fsr2h,c
  2959  000D54  0E01               	movlw	1
  2960  000D56  6EDF               	movwf	indf2,c
  2961  000D58                     l332:
  2962                           
  2963                           ;ikb.c: 711: };ikb.c: 712: };ikb.c: 715: if (key[k].sm1 == (1))
  2964  000D58  5023               	movf	ikey_parsing@k,w,c
  2965  000D5A  0D10               	mullw	16
  2966  000D5C  50F3               	movf	prodl,w,c
  2967  000D5E  0F66               	addlw	low (_key+6)
  2968  000D60  6ED9               	movwf	fsr2l,c
  2969  000D62  6ADA               	clrf	fsr2h,c
  2970  000D64  04DE               	decf	postinc2,w,c
  2971  000D66  A4D8               	btfss	status,2,c
  2972  000D68  D011               	goto	l336
  2973                           
  2974                           ;ikb.c: 716: {;ikb.c: 717: if (key[k].bf.state == 0)
  2975  000D6A  5023               	movf	ikey_parsing@k,w,c
  2976  000D6C  0D10               	mullw	16
  2977  000D6E  50F3               	movf	prodl,w,c
  2978  000D70  0F6A               	addlw	low (_key+10)
  2979  000D72  6ED9               	movwf	fsr2l,c
  2980  000D74  6ADA               	clrf	fsr2h,c
  2981  000D76  0100               	movlb	0	; () banked
  2982  000D78  B0DF               	btfsc	indf2,0,c
  2983  000D7A  D008               	goto	l336
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;ikb.c: 718: {;ikb.c: 719: key[k].sm1 = (2);
  2987  000D7C  5023               	movf	ikey_parsing@k,w,c
  2988  000D7E  0D10               	mullw	16
  2989  000D80  50F3               	movf	prodl,w,c
  2990  000D82  0F66               	addlw	low (_key+6)
  2991  000D84  6ED9               	movwf	fsr2l,c
  2992  000D86  6ADA               	clrf	fsr2h,c
  2993  000D88  0E02               	movlw	2
  2994  000D8A  6EDF               	movwf	indf2,c
  2995  000D8C                     l336:
  2996                           
  2997                           ;ikb.c: 720: };ikb.c: 721: };ikb.c: 723: if (key[k].sm1 == (2))
  2998  000D8C  5023               	movf	ikey_parsing@k,w,c
  2999  000D8E  0D10               	mullw	16
  3000  000D90  50F3               	movf	prodl,w,c
  3001  000D92  0F66               	addlw	low (_key+6)
  3002  000D94  6ED9               	movwf	fsr2l,c
  3003  000D96  6ADA               	clrf	fsr2h,c
  3004  000D98  0E02               	movlw	2
  3005  000D9A  18DE               	xorwf	postinc2,w,c
  3006  000D9C  A4D8               	btfss	status,2,c
  3007  000D9E  D011               	goto	l338
  3008                           
  3009                           ;ikb.c: 724: {;ikb.c: 725: if (key[k].bf.ReadyToRead == 0)
  3010  000DA0  5023               	movf	ikey_parsing@k,w,c
  3011  000DA2  0D10               	mullw	16
  3012  000DA4  50F3               	movf	prodl,w,c
  3013  000DA6  0F6A               	addlw	low (_key+10)
  3014  000DA8  6ED9               	movwf	fsr2l,c
  3015  000DAA  6ADA               	clrf	fsr2h,c
  3016  000DAC  0100               	movlb	0	; () banked
  3017  000DAE  BCDF               	btfsc	indf2,6,c
  3018  000DB0  D008               	goto	l338
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;ikb.c: 726: {;ikb.c: 727: key[k].sm1 = (9);
  3022  000DB2  5023               	movf	ikey_parsing@k,w,c
  3023  000DB4  0D10               	mullw	16
  3024  000DB6  50F3               	movf	prodl,w,c
  3025  000DB8  0F66               	addlw	low (_key+6)
  3026  000DBA  6ED9               	movwf	fsr2l,c
  3027  000DBC  6ADA               	clrf	fsr2h,c
  3028  000DBE  0E09               	movlw	9
  3029  000DC0  6EDF               	movwf	indf2,c
  3030  000DC2                     l338:
  3031                           
  3032                           ;ikb.c: 728: };ikb.c: 729: };ikb.c: 731: if (key[k].sm1 == (9))
  3033  000DC2  5023               	movf	ikey_parsing@k,w,c
  3034  000DC4  0D10               	mullw	16
  3035  000DC6  50F3               	movf	prodl,w,c
  3036  000DC8  0F66               	addlw	low (_key+6)
  3037  000DCA  6ED9               	movwf	fsr2l,c
  3038  000DCC  6ADA               	clrf	fsr2h,c
  3039  000DCE  0E09               	movlw	9
  3040  000DD0  18DE               	xorwf	postinc2,w,c
  3041  000DD2  A4D8               	btfss	status,2,c
  3042  000DD4  D02F               	goto	l3625
  3043                           
  3044                           ;ikb.c: 732: {;ikb.c: 733: if (key[k].num_group_x > 0)
  3045  000DD6  5023               	movf	ikey_parsing@k,w,c
  3046  000DD8  0D10               	mullw	16
  3047  000DDA  50F3               	movf	prodl,w,c
  3048  000DDC  0F69               	addlw	low (_key+9)
  3049  000DDE  6ED9               	movwf	fsr2l,c
  3050  000DE0  6ADA               	clrf	fsr2h,c
  3051  000DE2  50DF               	movf	indf2,w,c
  3052  000DE4  B4D8               	btfsc	status,2,c
  3053  000DE6  D016               	goto	l341
  3054                           
  3055                           ;ikb.c: 734: {;ikb.c: 735: group_x[key[k].num_group_x] = 0;
  3056  000DE8  5023               	movf	ikey_parsing@k,w,c
  3057  000DEA  0D10               	mullw	16
  3058  000DEC  50F3               	movf	prodl,w,c
  3059  000DEE  0F69               	addlw	low (_key+9)
  3060  000DF0  6ED9               	movwf	fsr2l,c
  3061  000DF2  6ADA               	clrf	fsr2h,c
  3062  000DF4  50DF               	movf	indf2,w,c
  3063  000DF6  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3064  000DF8  501F               	movf	??_ikey_parsing,w,c
  3065  000DFA  0FB0               	addlw	low _group_x
  3066  000DFC  6ED9               	movwf	fsr2l,c
  3067  000DFE  6ADA               	clrf	fsr2h,c
  3068  000E00  0E00               	movlw	0
  3069  000E02  6EDF               	movwf	indf2,c
  3070                           
  3071                           ;ikb.c: 736: key[k].bf.OwnerOfGroup = 0;
  3072  000E04  5023               	movf	ikey_parsing@k,w,c
  3073  000E06  0D10               	mullw	16
  3074  000E08  50F3               	movf	prodl,w,c
  3075  000E0A  0F6B               	addlw	low (_key+11)
  3076  000E0C  6ED9               	movwf	fsr2l,c
  3077  000E0E  6ADA               	clrf	fsr2h,c
  3078  000E10  0100               	movlb	0	; () banked
  3079  000E12  90DF               	bcf	indf2,0,c
  3080  000E14                     l341:
  3081                           
  3082                           ;ikb.c: 737: };ikb.c: 739: key[k].sm1 = (0);
  3083  000E14  5023               	movf	ikey_parsing@k,w,c
  3084  000E16  0D10               	mullw	16
  3085  000E18  50F3               	movf	prodl,w,c
  3086  000E1A  0F66               	addlw	low (_key+6)
  3087  000E1C  6ED9               	movwf	fsr2l,c
  3088  000E1E  6ADA               	clrf	fsr2h,c
  3089  000E20  0E00               	movlw	0
  3090  000E22  6EDF               	movwf	indf2,c
  3091                           
  3092                           ;ikb.c: 742: key[k].bf.InProcessing = 0;
  3093  000E24  5023               	movf	ikey_parsing@k,w,c
  3094  000E26  0D10               	mullw	16
  3095  000E28  50F3               	movf	prodl,w,c
  3096  000E2A  0F6B               	addlw	low (_key+11)
  3097  000E2C  6ED9               	movwf	fsr2l,c
  3098  000E2E  6ADA               	clrf	fsr2h,c
  3099  000E30  0100               	movlb	0	; () banked
  3100  000E32  92DF               	bcf	indf2,1,c
  3101  000E34                     l3625:
  3102  000E34  2A23               	incf	ikey_parsing@k,f,c
  3103  000E36  0E04               	movlw	4
  3104  000E38  6423               	cpfsgt	ikey_parsing@k,c
  3105  000E3A  D4EB               	goto	l3539
  3106  000E3C  0012               	return	
  3107  000E3E                     __end_of_ikey_parsing:
  3108                           	opt callstack 0
  3109                           
  3110 ;; *************** function _ikey_is_accessible *****************
  3111 ;; Defined at:
  3112 ;;		line 510 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  k               1    wreg     unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  k               1   12[COMRAM] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      unsigned char 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0
  3127 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3128 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3129 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3130 ;;Total ram usage:        3 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    5
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_ikey_parsing
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text16
  3141  001BDC                     __ptext16:
  3142                           	opt callstack 0
  3143  001BDC                     _ikey_is_accessible:
  3144                           	opt callstack 23
  3145                           
  3146                           ;incstack = 0
  3147                           ;ikey_is_accessible@k stored from wreg
  3148  001BDC  6E0D               	movwf	ikey_is_accessible@k,c
  3149                           
  3150                           ;ikb.c: 512: if (key[k].num_group_x != 0)
  3151  001BDE  500D               	movf	ikey_is_accessible@k,w,c
  3152  001BE0  0D10               	mullw	16
  3153  001BE2  50F3               	movf	prodl,w,c
  3154  001BE4  0F69               	addlw	low (_key+9)
  3155  001BE6  6ED9               	movwf	fsr2l,c
  3156  001BE8  6ADA               	clrf	fsr2h,c
  3157  001BEA  50DF               	movf	indf2,w,c
  3158  001BEC  B4D8               	btfsc	status,2,c
  3159  001BEE  D01A               	goto	l2503
  3160                           
  3161                           ;ikb.c: 513: {;ikb.c: 515: if (group_x[key[k].num_group_x] == 1)
  3162  001BF0  500D               	movf	ikey_is_accessible@k,w,c
  3163  001BF2  0D10               	mullw	16
  3164  001BF4  50F3               	movf	prodl,w,c
  3165  001BF6  0F69               	addlw	low (_key+9)
  3166  001BF8  6ED9               	movwf	fsr2l,c
  3167  001BFA  6ADA               	clrf	fsr2h,c
  3168  001BFC  50DF               	movf	indf2,w,c
  3169  001BFE  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  3170  001C00  500B               	movf	??_ikey_is_accessible,w,c
  3171  001C02  0FB0               	addlw	low _group_x
  3172  001C04  6ED9               	movwf	fsr2l,c
  3173  001C06  6ADA               	clrf	fsr2h,c
  3174  001C08  04DE               	decf	postinc2,w,c
  3175  001C0A  A4D8               	btfss	status,2,c
  3176  001C0C  D00B               	goto	l2503
  3177                           
  3178                           ;ikb.c: 516: {;ikb.c: 518: if ( !key[k].bf.OwnerOfGroup)
  3179  001C0E  500D               	movf	ikey_is_accessible@k,w,c
  3180  001C10  0D10               	mullw	16
  3181  001C12  50F3               	movf	prodl,w,c
  3182  001C14  0F6B               	addlw	low (_key+11)
  3183  001C16  6ED9               	movwf	fsr2l,c
  3184  001C18  6ADA               	clrf	fsr2h,c
  3185  001C1A  0100               	movlb	0	; () banked
  3186  001C1C  B0DF               	btfsc	indf2,0,c
  3187  001C1E  D002               	goto	l2503
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;ikb.c: 519: {;ikb.c: 520: return 0;
  3191  001C20  0E00               	movlw	0
  3192  001C22  0012               	return	
  3193  001C24                     l2503:
  3194                           
  3195                           ;ikb.c: 521: };ikb.c: 522: };ikb.c: 523: };ikb.c: 524: return 1;
  3196  001C24  0E01               	movlw	1
  3197  001C26  0012               	return		;funcret
  3198  001C28                     __end_of_ikey_is_accessible:
  3199                           	opt callstack 0
  3200                           
  3201 ;; *************** function ___lwtoft *****************
  3202 ;; Defined at:
  3203 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  c               2   18[COMRAM] unsigned int 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  3   18[COMRAM] float 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3217 ;;      Params:         3       0       0       0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3220 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3221 ;;Total ram usage:        3 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    6
  3224 ;; This function calls:
  3225 ;;		___ftpack
  3226 ;; This function is called by:
  3227 ;;		_ikey_parsing
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text17
  3232  001F4E                     __ptext17:
  3233                           	opt callstack 0
  3234  001F4E                     ___lwtoft:
  3235                           	opt callstack 22
  3236                           
  3237                           ;incstack = 0
  3238  001F4E  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  3239  001F52  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  3240  001F56  6A0D               	clrf	___ftpack@arg+2,c
  3241  001F58  0E8E               	movlw	142
  3242  001F5A  6E0E               	movwf	___ftpack@exp,c
  3243  001F5C  0E00               	movlw	0
  3244  001F5E  6E0F               	movwf	___ftpack@sign,c
  3245  001F60  ECD4  F00B         	call	___ftpack	;wreg free
  3246  001F64  C00B  F013         	movff	?___ftpack,?___lwtoft
  3247  001F68  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  3248  001F6C  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  3249  001F70  0012               	return		;funcret
  3250  001F72                     __end_of___lwtoft:
  3251                           	opt callstack 0
  3252                           
  3253 ;; *************** function _ikb_init *****************
  3254 ;; Defined at:
  3255 ;;		line 217 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  i               1   10[COMRAM] char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 3F/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        1 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    5
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text18
  3284  0016F2                     __ptext18:
  3285                           	opt callstack 0
  3286  0016F2                     _ikb_init:
  3287                           	opt callstack 25
  3288                           
  3289                           ;incstack = 0
  3290                           ;ikb.c: 219: int8_t i;;ikb.c: 389: do{TRISC |= 1<<4;}while(0);
  3291  0016F2  8894               	bsf	3988,4,c	;volatile
  3292                           
  3293                           ;ikb.c: 390: do{TRISC |= 1<<5;}while(0);
  3294  0016F4  8A94               	bsf	3988,5,c	;volatile
  3295                           
  3296                           ;ikb.c: 391: do{TRISC |= 1<<6;}while(0);
  3297  0016F6  8C94               	bsf	3988,6,c	;volatile
  3298                           
  3299                           ;ikb.c: 392: do{TRISC |= 1<<7;}while(0);
  3300  0016F8  8E94               	bsf	3988,7,c	;volatile
  3301                           
  3302                           ;ikb.c: 393: do{TRISD |= 1<<4;}while(0);
  3303  0016FA  8895               	bsf	3989,4,c	;volatile
  3304                           
  3305                           ;ikb.c: 394: key[0].keyRead = keyRead_pin_key1;
  3306  0016FC  0E2C               	movlw	low _keyRead_pin_key1
  3307  0016FE  0100               	movlb	0	; () banked
  3308  001700  6F60               	movwf	_key& (0+255),b	;volatile
  3309  001702  0E20               	movlw	high _keyRead_pin_key1
  3310  001704  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;ikb.c: 395: key[1].keyRead = keyRead_pin_key2;
  3314  001706  0EF0               	movlw	low _keyRead_pin_key2
  3315  001708  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3316  00170A  0E1F               	movlw	high _keyRead_pin_key2
  3317  00170C  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;ikb.c: 396: key[2].keyRead = keyRead_pin_key3;
  3321  00170E  0EE6               	movlw	low _keyRead_pin_key3
  3322  001710  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3323  001712  0E1F               	movlw	high _keyRead_pin_key3
  3324  001714  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;ikb.c: 397: key[3].keyRead = keyRead_pin_key4;
  3328  001716  0E3C               	movlw	low _keyRead_pin_key4
  3329  001718  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3330  00171A  0E20               	movlw	high _keyRead_pin_key4
  3331  00171C  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;ikb.c: 398: key[4].keyRead = keyRead_pin_key5;
  3335  00171E  0E34               	movlw	low _keyRead_pin_key5
  3336  001720  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3337  001722  0E20               	movlw	high _keyRead_pin_key5
  3338  001724  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;ikb.c: 401: for (i=0; i<5; i++)
  3342  001726  0E00               	movlw	0
  3343  001728  6E0B               	movwf	ikb_init@i,c
  3344  00172A                     l3041:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;ikb.c: 402: {;ikb.c: 403: key[i].bf.OnKeyPressed = 1;
  3348  00172A  500B               	movf	ikb_init@i,w,c
  3349  00172C  0D10               	mullw	16
  3350  00172E  50F3               	movf	prodl,w,c
  3351  001730  0F6A               	addlw	low (_key+10)
  3352  001732  6ED9               	movwf	fsr2l,c
  3353  001734  6ADA               	clrf	fsr2h,c
  3354  001736  82DF               	bsf	indf2,1,c
  3355                           
  3356                           ;ikb.c: 404: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3357  001738  500B               	movf	ikb_init@i,w,c
  3358  00173A  0D10               	mullw	16
  3359  00173C  50F3               	movf	prodl,w,c
  3360  00173E  0F6A               	addlw	low (_key+10)
  3361  001740  6ED9               	movwf	fsr2l,c
  3362  001742  6ADA               	clrf	fsr2h,c
  3363  001744  94DF               	bcf	indf2,2,c
  3364                           
  3365                           ;ikb.c: 405: key[i].bf.AtTimeExpired = 0;
  3366  001746  500B               	movf	ikb_init@i,w,c
  3367  001748  0D10               	mullw	16
  3368  00174A  50F3               	movf	prodl,w,c
  3369  00174C  0F6A               	addlw	low (_key+10)
  3370  00174E  6ED9               	movwf	fsr2l,c
  3371  001750  6ADA               	clrf	fsr2h,c
  3372  001752  96DF               	bcf	indf2,3,c
  3373                           
  3374                           ;ikb.c: 406: key[i].bf.Reptt = 0;
  3375  001754  500B               	movf	ikb_init@i,w,c
  3376  001756  0D10               	mullw	16
  3377  001758  50F3               	movf	prodl,w,c
  3378  00175A  0F6A               	addlw	low (_key+10)
  3379  00175C  6ED9               	movwf	fsr2l,c
  3380  00175E  6ADA               	clrf	fsr2h,c
  3381  001760  9ADF               	bcf	indf2,5,c
  3382                           
  3383                           ;ikb.c: 407: key[i].num_group_x = 0;
  3384  001762  500B               	movf	ikb_init@i,w,c
  3385  001764  0D10               	mullw	16
  3386  001766  50F3               	movf	prodl,w,c
  3387  001768  0F69               	addlw	low (_key+9)
  3388  00176A  6ED9               	movwf	fsr2l,c
  3389  00176C  6ADA               	clrf	fsr2h,c
  3390  00176E  0E00               	movlw	0
  3391  001770  6EDF               	movwf	indf2,c
  3392                           
  3393                           ;ikb.c: 408: key[i].repp.to_start= (uint16_t)500.0/5;
  3394  001772  500B               	movf	ikb_init@i,w,c
  3395  001774  0D10               	mullw	16
  3396  001776  50F3               	movf	prodl,w,c
  3397  001778  0F6C               	addlw	low (_key+12)
  3398  00177A  6ED9               	movwf	fsr2l,c
  3399  00177C  6ADA               	clrf	fsr2h,c
  3400  00177E  0E64               	movlw	100
  3401  001780  6EDE               	movwf	postinc2,c
  3402  001782  0E00               	movlw	0
  3403  001784  6EDD               	movwf	postdec2,c
  3404                           
  3405                           ;ikb.c: 409: key[i].repp.after_start = (uint16_t)200.0/5;
  3406  001786  500B               	movf	ikb_init@i,w,c
  3407  001788  0D10               	mullw	16
  3408  00178A  50F3               	movf	prodl,w,c
  3409  00178C  0F6E               	addlw	low (_key+14)
  3410  00178E  6ED9               	movwf	fsr2l,c
  3411  001790  6ADA               	clrf	fsr2h,c
  3412  001792  0E28               	movlw	40
  3413  001794  6EDE               	movwf	postinc2,c
  3414  001796  0E00               	movlw	0
  3415  001798  6EDD               	movwf	postdec2,c
  3416                           
  3417                           ; BSR set to: 0
  3418  00179A  2A0B               	incf	ikb_init@i,f,c
  3419                           
  3420                           ; BSR set to: 0
  3421  00179C  500B               	movf	ikb_init@i,w,c
  3422  00179E  0A80               	xorlw	128
  3423  0017A0  0F7B               	addlw	-133
  3424  0017A2  B0D8               	btfsc	status,0,c
  3425  0017A4  0012               	return	
  3426  0017A6  D7C1               	goto	l3041
  3427  0017A8                     __end_of_ikb_init:
  3428                           	opt callstack 0
  3429                           
  3430 ;; *************** function _ikb_flush *****************
  3431 ;; Defined at:
  3432 ;;		line 419 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 3F/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    6
  3453 ;; This function calls:
  3454 ;;		_ikey_clear_all_flag
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text19
  3461  002042                     __ptext19:
  3462                           	opt callstack 0
  3463  002042                     _ikb_flush:
  3464                           	opt callstack 24
  3465                           
  3466                           ;ikb.c: 421: ikey_clear_all_flag();
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;incstack = 0
  3470  002042  ECC8  F00F         	call	_ikey_clear_all_flag	;wreg free
  3471                           
  3472                           ; BSR set to: 0
  3473  002046  0012               	return		;funcret
  3474  002048                     __end_of_ikb_flush:
  3475                           	opt callstack 0
  3476                           
  3477 ;; *************** function _ikey_clear_all_flag *****************
  3478 ;; Defined at:
  3479 ;;		line 761 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  i               1   10[COMRAM] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 3F/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0
  3494 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3496 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3497 ;;Total ram usage:        1 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    5
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_ikb_flush
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text20
  3508  001F90                     __ptext20:
  3509                           	opt callstack 0
  3510  001F90                     _ikey_clear_all_flag:
  3511                           	opt callstack 24
  3512                           
  3513                           ;ikb.c: 763: uint8_t i;;ikb.c: 764: for (i=0; i<5; i++)
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;incstack = 0
  3517  001F90  0E00               	movlw	0
  3518  001F92  6E0B               	movwf	ikey_clear_all_flag@i,c
  3519  001F94                     l2801:
  3520                           
  3521                           ;ikb.c: 765: {;ikb.c: 767: key[i].bf.ReadyToRead = 0;
  3522  001F94  500B               	movf	ikey_clear_all_flag@i,w,c
  3523  001F96  0D10               	mullw	16
  3524  001F98  50F3               	movf	prodl,w,c
  3525  001F9A  0F6A               	addlw	low (_key+10)
  3526  001F9C  6ED9               	movwf	fsr2l,c
  3527  001F9E  6ADA               	clrf	fsr2h,c
  3528  001FA0  0100               	movlb	0	; () banked
  3529  001FA2  9CDF               	bcf	indf2,6,c
  3530                           
  3531                           ; BSR set to: 0
  3532  001FA4  2A0B               	incf	ikey_clear_all_flag@i,f,c
  3533                           
  3534                           ; BSR set to: 0
  3535  001FA6  0E04               	movlw	4
  3536  001FA8  640B               	cpfsgt	ikey_clear_all_flag@i,c
  3537  001FAA  D7F4               	goto	l2801
  3538  001FAC  0012               	return	
  3539  001FAE                     __end_of_ikey_clear_all_flag:
  3540                           	opt callstack 0
  3541                           
  3542 ;; *************** function _display7s_job *****************
  3543 ;; Defined at:
  3544 ;;		line 174 in file "pulsonic.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    7
  3565 ;; This function calls:
  3566 ;;		_multiplexedDisp_job
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text21
  3573  001F28                     __ptext21:
  3574                           	opt callstack 0
  3575  001F28                     _display7s_job:
  3576                           	opt callstack 23
  3577                           
  3578                           ;pulsonic.c: 176: static int8_t q;;pulsonic.c: 178: LATB = pulsonic.display7s[q];
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;incstack = 0
  3582  001F28  0E76               	movlw	low (_pulsonic+118)
  3583  001F2A  2442               	addwf	display7s_job@q,w,c
  3584  001F2C  6ED9               	movwf	fsr2l,c
  3585  001F2E  6ADA               	clrf	fsr2h,c
  3586  001F30  0E01               	movlw	high (_pulsonic+118)
  3587  001F32  22DA               	addwfc	fsr2h,f,c
  3588  001F34  50DF               	movf	indf2,w,c
  3589  001F36  6E8A               	movwf	3978,c	;volatile
  3590                           
  3591                           ;pulsonic.c: 179: multiplexedDisp_job(q);
  3592  001F38  5042               	movf	display7s_job@q,w,c
  3593  001F3A  EC2B  F00C         	call	_multiplexedDisp_job
  3594                           
  3595                           ;pulsonic.c: 181: if (++q == (2 + 3))
  3596  001F3E  2A42               	incf	display7s_job@q,f,c
  3597  001F40  0E05               	movlw	5
  3598  001F42  1842               	xorwf	display7s_job@q,w,c
  3599  001F44  A4D8               	btfss	status,2,c
  3600  001F46  0012               	return	
  3601                           
  3602                           ;pulsonic.c: 182: {q=0;}
  3603  001F48  0E00               	movlw	0
  3604  001F4A  6E42               	movwf	display7s_job@q,c
  3605  001F4C  0012               	return		;funcret
  3606  001F4E                     __end_of_display7s_job:
  3607                           	opt callstack 0
  3608                           
  3609 ;; *************** function _multiplexedDisp_job *****************
  3610 ;; Defined at:
  3611 ;;		line 145 in file "pulsonic.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  q               1    wreg     char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  q               1   16[COMRAM] char 
  3616 ;;  i               1   17[COMRAM] char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3626 ;;      Params:         0       0       0       0       0       0       0       0       0
  3627 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3628 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3629 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3630 ;;Total ram usage:        8 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    6
  3633 ;; This function calls:
  3634 ;;		_multiplexedDisp0_off
  3635 ;;		_multiplexedDisp0_on
  3636 ;;		_multiplexedDisp1_off
  3637 ;;		_multiplexedDisp1_on
  3638 ;;		_multiplexedDisp2_off
  3639 ;;		_multiplexedDisp2_on
  3640 ;;		_multiplexedDisp3_off
  3641 ;;		_multiplexedDisp3_on
  3642 ;;		_multiplexedDisp4_off
  3643 ;;		_multiplexedDisp4_on
  3644 ;; This function is called by:
  3645 ;;		_display7s_job
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text22
  3650  001856                     __ptext22:
  3651                           	opt callstack 0
  3652  001856                     _multiplexedDisp_job:
  3653                           	opt callstack 23
  3654                           
  3655                           ;incstack = 0
  3656                           ;multiplexedDisp_job@q stored from wreg
  3657  001856  6E11               	movwf	multiplexedDisp_job@q,c
  3658                           
  3659                           ;pulsonic.c: 147: int8_t i;;pulsonic.c: 148: for (i=0; i< (2 + 3); i++)
  3660  001858  0E00               	movlw	0
  3661  00185A  6E12               	movwf	multiplexedDisp_job@i,c
  3662  00185C                     l2827:
  3663                           
  3664                           ;pulsonic.c: 149: {;pulsonic.c: 150: if ((0x01<<i) & (0x1<<q))
  3665  00185C  C011  F00B         	movff	multiplexedDisp_job@q,??_multiplexedDisp_job
  3666  001860  0E01               	movlw	1
  3667  001862  6E0C               	movwf	(??_multiplexedDisp_job+1)& (0+255),c
  3668  001864  0E00               	movlw	0
  3669  001866  6E0D               	movwf	(??_multiplexedDisp_job+2)& (0+255),c
  3670  001868  2A0B               	incf	??_multiplexedDisp_job,f,c
  3671  00186A  D003               	goto	u2804
  3672  00186C                     u2805:
  3673  00186C  90D8               	bcf	status,0,c
  3674  00186E  360C               	rlcf	??_multiplexedDisp_job+1,f,c
  3675  001870  360D               	rlcf	??_multiplexedDisp_job+2,f,c
  3676  001872                     u2804:
  3677  001872  2E0B               	decfsz	??_multiplexedDisp_job,f,c
  3678  001874  D7FB               	goto	u2805
  3679  001876  C012  F00E         	movff	multiplexedDisp_job@i,??_multiplexedDisp_job+3
  3680  00187A  0E01               	movlw	1
  3681  00187C  6E0F               	movwf	(??_multiplexedDisp_job+4)& (0+255),c
  3682  00187E  0E00               	movlw	0
  3683  001880  6E10               	movwf	(??_multiplexedDisp_job+5)& (0+255),c
  3684  001882  2A0E               	incf	??_multiplexedDisp_job+3,f,c
  3685  001884  D003               	goto	u2814
  3686  001886                     u2815:
  3687  001886  90D8               	bcf	status,0,c
  3688  001888  360F               	rlcf	??_multiplexedDisp_job+4,f,c
  3689  00188A  3610               	rlcf	??_multiplexedDisp_job+5,f,c
  3690  00188C                     u2814:
  3691  00188C  2E0E               	decfsz	??_multiplexedDisp_job+3,f,c
  3692  00188E  D7FB               	goto	u2815
  3693  001890  500C               	movf	??_multiplexedDisp_job+1,w,c
  3694  001892  160F               	andwf	??_multiplexedDisp_job+4,f,c
  3695  001894  500D               	movf	??_multiplexedDisp_job+2,w,c
  3696  001896  1610               	andwf	??_multiplexedDisp_job+5,f,c
  3697  001898  500F               	movf	??_multiplexedDisp_job+4,w,c
  3698  00189A  1010               	iorwf	??_multiplexedDisp_job+5,w,c
  3699  00189C  B4D8               	btfsc	status,2,c
  3700  00189E  D012               	goto	l2831
  3701                           
  3702                           ;pulsonic.c: 151: multiplexedDisp[i].Qonoff[1]();
  3703  0018A0  5012               	movf	multiplexedDisp_job@i,w,c
  3704  0018A2  0D04               	mullw	4
  3705  0018A4  50F3               	movf	prodl,w,c
  3706  0018A6  0FC0               	addlw	low (_multiplexedDisp+2)
  3707  0018A8  6ED9               	movwf	fsr2l,c
  3708  0018AA  6ADA               	clrf	fsr2h,c
  3709  0018AC  D801               	call	u2838
  3710  0018AE  D01C               	goto	u2849
  3711  0018B0                     u2838:
  3712  0018B0  0005               	push	
  3713  0018B2  6EFA               	movwf	pclath,c
  3714  0018B4  50DE               	movf	postinc2,w,c
  3715  0018B6  6EFD               	movwf	tosl,c
  3716  0018B8  50DE               	movf	postinc2,w,c
  3717  0018BA  6EFE               	movwf	tosh,c
  3718  0018BC  50F8               	movf	tblptru,w,c
  3719  0018BE  6EFF               	movwf	tosu,c
  3720  0018C0  50FA               	movf	pclath,w,c
  3721  0018C2  0012               	return		;indir
  3722  0018C4                     l2831:
  3723                           
  3724                           ;pulsonic.c: 152: else;pulsonic.c: 153: multiplexedDisp[i].Qonoff[0]();
  3725  0018C4  5012               	movf	multiplexedDisp_job@i,w,c
  3726  0018C6  0D04               	mullw	4
  3727  0018C8  50F3               	movf	prodl,w,c
  3728  0018CA  0FBE               	addlw	low _multiplexedDisp
  3729  0018CC  6ED9               	movwf	fsr2l,c
  3730  0018CE  6ADA               	clrf	fsr2h,c
  3731  0018D0  D801               	call	u2848
  3732  0018D2  D00A               	goto	u2849
  3733  0018D4                     u2848:
  3734  0018D4  0005               	push	
  3735  0018D6  6EFA               	movwf	pclath,c
  3736  0018D8  50DE               	movf	postinc2,w,c
  3737  0018DA  6EFD               	movwf	tosl,c
  3738  0018DC  50DE               	movf	postinc2,w,c
  3739  0018DE  6EFE               	movwf	tosh,c
  3740  0018E0  50F8               	movf	tblptru,w,c
  3741  0018E2  6EFF               	movwf	tosu,c
  3742  0018E4  50FA               	movf	pclath,w,c
  3743  0018E6  0012               	return		;indir
  3744  0018E8                     u2849:
  3745  0018E8  2A12               	incf	multiplexedDisp_job@i,f,c
  3746  0018EA  5012               	movf	multiplexedDisp_job@i,w,c
  3747  0018EC  0A80               	xorlw	128
  3748  0018EE  0F7B               	addlw	-133
  3749  0018F0  B0D8               	btfsc	status,0,c
  3750  0018F2  0012               	return	
  3751  0018F4  D7B3               	goto	l2827
  3752  0018F6                     __end_of_multiplexedDisp_job:
  3753                           	opt callstack 0
  3754                           
  3755 ;; *************** function _display7s_init *****************
  3756 ;; Defined at:
  3757 ;;		line 161 in file "pulsonic.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3771 ;;      Params:         0       0       0       0       0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3774 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3775 ;;Total ram usage:        0 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    7
  3778 ;; This function calls:
  3779 ;;		_multiplexedDisp_init
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text23
  3786  001B8C                     __ptext23:
  3787                           	opt callstack 0
  3788  001B8C                     _display7s_init:
  3789                           	opt callstack 23
  3790                           
  3791                           ;pulsonic.c: 163: pulsonic.display7s[MODE_DIG_1] = DISP7S_NUMS[2];
  3792                           
  3793                           ;incstack = 0
  3794  001B8C  0E03               	movlw	low (_DISP7S_NUMS+2)
  3795  001B8E  6EF6               	movwf	tblptrl,c
  3796  001B90                     	if	1	;There is more than 1 active tblptr byte
  3797  001B90  0E08               	movlw	high __smallconst
  3798  001B92  6EF7               	movwf	tblptrh,c
  3799  001B94                     	endif
  3800  001B94                     	if	0	;tblptru may be non-zero
  3801  001B94                     	endif
  3802  001B94                     	if	0	;tblptru may be non-zero
  3803  001B94                     	endif
  3804  001B94  0008               	tblrd		*
  3805  001B96  CFF5 F177          	movff	tablat,_pulsonic+119
  3806                           
  3807                           ;pulsonic.c: 164: pulsonic.display7s[MODE_DIG_0] = DISP7S_NUMS[0];
  3808  001B9A  0E01               	movlw	low _DISP7S_NUMS
  3809  001B9C  6EF6               	movwf	tblptrl,c
  3810  001B9E                     	if	1	;There is more than 1 active tblptr byte
  3811  001B9E  0E08               	movlw	high _DISP7S_NUMS
  3812  001BA0  6EF7               	movwf	tblptrh,c
  3813  001BA2                     	endif
  3814  001BA2                     	if	0	;There are less than 3 active tblptr bytes
  3815  001BA2                     	endif
  3816  001BA2  0008               	tblrd		*
  3817  001BA4  CFF5 F176          	movff	tablat,_pulsonic+118
  3818                           
  3819                           ;pulsonic.c: 166: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[RAYA];
  3820  001BA8  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3821  001BAA  6EF6               	movwf	tblptrl,c
  3822  001BAC                     	if	1	;There is more than 1 active tblptr byte
  3823  001BAC  0E08               	movlw	high __smallconst
  3824  001BAE  6EF7               	movwf	tblptrh,c
  3825  001BB0                     	endif
  3826  001BB0                     	if	0	;tblptru may be non-zero
  3827  001BB0                     	endif
  3828  001BB0                     	if	0	;tblptru may be non-zero
  3829  001BB0                     	endif
  3830  001BB0  0008               	tblrd		*
  3831  001BB2  CFF5 F178          	movff	tablat,_pulsonic+120
  3832                           
  3833                           ;pulsonic.c: 167: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[RAYA];
  3834  001BB6  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3835  001BB8  6EF6               	movwf	tblptrl,c
  3836  001BBA                     	if	1	;There is more than 1 active tblptr byte
  3837  001BBA  0E08               	movlw	high __smallconst
  3838  001BBC  6EF7               	movwf	tblptrh,c
  3839  001BBE                     	endif
  3840  001BBE                     	if	0	;tblptru may be non-zero
  3841  001BBE                     	endif
  3842  001BBE                     	if	0	;tblptru may be non-zero
  3843  001BBE                     	endif
  3844  001BBE  0008               	tblrd		*
  3845  001BC0  CFF5 F177          	movff	tablat,_pulsonic+119
  3846                           
  3847                           ;pulsonic.c: 168: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[RAYA];
  3848  001BC4  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3849  001BC6  6EF6               	movwf	tblptrl,c
  3850  001BC8                     	if	1	;There is more than 1 active tblptr byte
  3851  001BC8  0E08               	movlw	high __smallconst
  3852  001BCA  6EF7               	movwf	tblptrh,c
  3853  001BCC                     	endif
  3854  001BCC                     	if	0	;tblptru may be non-zero
  3855  001BCC                     	endif
  3856  001BCC                     	if	0	;tblptru may be non-zero
  3857  001BCC                     	endif
  3858  001BCC  0008               	tblrd		*
  3859  001BCE  CFF5 F176          	movff	tablat,_pulsonic+118
  3860                           
  3861                           ;pulsonic.c: 170: TRISB = 0x00;
  3862  001BD2  0E00               	movlw	0
  3863  001BD4  6E93               	movwf	3987,c	;volatile
  3864                           
  3865                           ;pulsonic.c: 171: multiplexedDisp_init();
  3866  001BD6  ECC3  F00E         	call	_multiplexedDisp_init	;wreg free
  3867  001BDA  0012               	return		;funcret
  3868  001BDC                     __end_of_display7s_init:
  3869                           	opt callstack 0
  3870                           
  3871 ;; *************** function _multiplexedDisp_init *****************
  3872 ;; Defined at:
  3873 ;;		line 130 in file "pulsonic.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  i               1   10[COMRAM] char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0
  3888 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3890 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3891 ;;Total ram usage:        1 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    6
  3894 ;; This function calls:
  3895 ;;		_multiplexedDisp0_off
  3896 ;;		_multiplexedDisp0_on
  3897 ;;		_multiplexedDisp1_off
  3898 ;;		_multiplexedDisp1_on
  3899 ;;		_multiplexedDisp2_off
  3900 ;;		_multiplexedDisp2_on
  3901 ;;		_multiplexedDisp3_off
  3902 ;;		_multiplexedDisp3_on
  3903 ;;		_multiplexedDisp4_off
  3904 ;;		_multiplexedDisp4_on
  3905 ;; This function is called by:
  3906 ;;		_display7s_init
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text24
  3911  001D86                     __ptext24:
  3912                           	opt callstack 0
  3913  001D86                     _multiplexedDisp_init:
  3914                           	opt callstack 23
  3915                           
  3916                           ;pulsonic.c: 132: int8_t i;;pulsonic.c: 133: for (i=0; i< (2 + 3); i++)
  3917                           
  3918                           ;incstack = 0
  3919  001D86  0E00               	movlw	0
  3920  001D88  6E0B               	movwf	multiplexedDisp_init@i,c
  3921  001D8A                     l2813:
  3922                           
  3923                           ;pulsonic.c: 134: {;pulsonic.c: 135: multiplexedDisp[i].Qonoff[0]();
  3924  001D8A  500B               	movf	multiplexedDisp_init@i,w,c
  3925  001D8C  0D04               	mullw	4
  3926  001D8E  50F3               	movf	prodl,w,c
  3927  001D90  0FBE               	addlw	low _multiplexedDisp
  3928  001D92  6ED9               	movwf	fsr2l,c
  3929  001D94  6ADA               	clrf	fsr2h,c
  3930  001D96  D801               	call	u2788
  3931  001D98  D00A               	goto	u2789
  3932  001D9A                     u2788:
  3933  001D9A  0005               	push	
  3934  001D9C  6EFA               	movwf	pclath,c
  3935  001D9E  50DE               	movf	postinc2,w,c
  3936  001DA0  6EFD               	movwf	tosl,c
  3937  001DA2  50DE               	movf	postinc2,w,c
  3938  001DA4  6EFE               	movwf	tosh,c
  3939  001DA6  50F8               	movf	tblptru,w,c
  3940  001DA8  6EFF               	movwf	tosu,c
  3941  001DAA  50FA               	movf	pclath,w,c
  3942  001DAC  0012               	return		;indir
  3943  001DAE                     u2789:
  3944  001DAE  2A0B               	incf	multiplexedDisp_init@i,f,c
  3945  001DB0  500B               	movf	multiplexedDisp_init@i,w,c
  3946  001DB2  0A80               	xorlw	128
  3947  001DB4  0F7B               	addlw	-133
  3948  001DB6  A0D8               	btfss	status,0,c
  3949  001DB8  D7E8               	goto	l2813
  3950  001DBA  9892               	bcf	3986,4,c	;volatile
  3951                           
  3952                           ;pulsonic.c: 139: do{TRISA &= ~(1<<3);}while(0);
  3953  001DBC  9692               	bcf	3986,3,c	;volatile
  3954                           
  3955                           ;pulsonic.c: 140: do{TRISA &= ~(1<<2);}while(0);
  3956  001DBE  9492               	bcf	3986,2,c	;volatile
  3957                           
  3958                           ;pulsonic.c: 141: do{TRISA &= ~(1<<1);}while(0);
  3959  001DC0  9292               	bcf	3986,1,c	;volatile
  3960                           
  3961                           ;pulsonic.c: 142: do{TRISA &= ~(1<<0);}while(0);
  3962  001DC2  9092               	bcf	3986,0,c	;volatile
  3963  001DC4  0012               	return		;funcret
  3964  001DC6                     __end_of_multiplexedDisp_init:
  3965                           	opt callstack 0
  3966                           
  3967 ;; *************** function _multiplexedDisp4_off *****************
  3968 ;; Defined at:
  3969 ;;		line 91 in file "pulsonic.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3986 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3987 ;;Total ram usage:        0 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    5
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_multiplexedDisp_init
  3994 ;;		_multiplexedDisp_job
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text25
  3999  002048                     __ptext25:
  4000                           	opt callstack 0
  4001  002048                     _multiplexedDisp4_off:
  4002                           	opt callstack 23
  4003                           
  4004                           ;incstack = 0
  4005                           ;pulsonic.c: 93: do{LATA |= 1<<0;}while(0);
  4006  002048  8089               	bsf	3977,0,c	;volatile
  4007  00204A  0012               	return		;funcret
  4008  00204C                     __end_of_multiplexedDisp4_off:
  4009                           	opt callstack 0
  4010                           
  4011 ;; *************** function _multiplexedDisp3_on *****************
  4012 ;; Defined at:
  4013 ;;		line 86 in file "pulsonic.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0
  4028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4030 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4031 ;;Total ram usage:        0 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    5
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_multiplexedDisp_init
  4038 ;;		_multiplexedDisp_job
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text26
  4043  00204C                     __ptext26:
  4044                           	opt callstack 0
  4045  00204C                     _multiplexedDisp3_on:
  4046                           	opt callstack 23
  4047                           
  4048                           ;incstack = 0
  4049                           ;pulsonic.c: 88: do{LATA &= ~(1<<1);}while(0);
  4050  00204C  9289               	bcf	3977,1,c	;volatile
  4051  00204E  0012               	return		;funcret
  4052  002050                     __end_of_multiplexedDisp3_on:
  4053                           	opt callstack 0
  4054                           
  4055 ;; *************** function _multiplexedDisp3_off *****************
  4056 ;; Defined at:
  4057 ;;		line 82 in file "pulsonic.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4074 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4075 ;;Total ram usage:        0 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    5
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_multiplexedDisp_init
  4082 ;;		_multiplexedDisp_job
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text27
  4087  002050                     __ptext27:
  4088                           	opt callstack 0
  4089  002050                     _multiplexedDisp3_off:
  4090                           	opt callstack 23
  4091                           
  4092                           ;incstack = 0
  4093                           ;pulsonic.c: 84: do{LATA |= 1<<1;}while(0);
  4094  002050  8289               	bsf	3977,1,c	;volatile
  4095  002052  0012               	return		;funcret
  4096  002054                     __end_of_multiplexedDisp3_off:
  4097                           	opt callstack 0
  4098                           
  4099 ;; *************** function _multiplexedDisp2_on *****************
  4100 ;; Defined at:
  4101 ;;		line 77 in file "pulsonic.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;		None
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		status,2, status,0
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4115 ;;      Params:         0       0       0       0       0       0       0       0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4118 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4119 ;;Total ram usage:        0 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    5
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_multiplexedDisp_init
  4126 ;;		_multiplexedDisp_job
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text28
  4131  002054                     __ptext28:
  4132                           	opt callstack 0
  4133  002054                     _multiplexedDisp2_on:
  4134                           	opt callstack 23
  4135                           
  4136                           ;incstack = 0
  4137                           ;pulsonic.c: 79: do{LATA &= ~(1<<2);}while(0);
  4138  002054  9489               	bcf	3977,2,c	;volatile
  4139  002056  0012               	return		;funcret
  4140  002058                     __end_of_multiplexedDisp2_on:
  4141                           	opt callstack 0
  4142                           
  4143 ;; *************** function _multiplexedDisp2_off *****************
  4144 ;; Defined at:
  4145 ;;		line 73 in file "pulsonic.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		status,2, status,0
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4162 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4163 ;;Total ram usage:        0 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    5
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_multiplexedDisp_init
  4170 ;;		_multiplexedDisp_job
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text29
  4175  002058                     __ptext29:
  4176                           	opt callstack 0
  4177  002058                     _multiplexedDisp2_off:
  4178                           	opt callstack 23
  4179                           
  4180                           ;incstack = 0
  4181                           ;pulsonic.c: 75: do{LATA |= 1<<2;}while(0);
  4182  002058  8489               	bsf	3977,2,c	;volatile
  4183  00205A  0012               	return		;funcret
  4184  00205C                     __end_of_multiplexedDisp2_off:
  4185                           	opt callstack 0
  4186                           
  4187 ;; *************** function _multiplexedDisp1_on *****************
  4188 ;; Defined at:
  4189 ;;		line 68 in file "pulsonic.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		status,2, status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4207 ;;Total ram usage:        0 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    5
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_multiplexedDisp_init
  4214 ;;		_multiplexedDisp_job
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text30
  4219  00205C                     __ptext30:
  4220                           	opt callstack 0
  4221  00205C                     _multiplexedDisp1_on:
  4222                           	opt callstack 23
  4223                           
  4224                           ;incstack = 0
  4225                           ;pulsonic.c: 70: do{LATA &= ~(1<<3);}while(0);
  4226  00205C  9689               	bcf	3977,3,c	;volatile
  4227  00205E  0012               	return		;funcret
  4228  002060                     __end_of_multiplexedDisp1_on:
  4229                           	opt callstack 0
  4230                           
  4231 ;; *************** function _multiplexedDisp1_off *****************
  4232 ;; Defined at:
  4233 ;;		line 64 in file "pulsonic.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		status,2, status,0
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4247 ;;      Params:         0       0       0       0       0       0       0       0       0
  4248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4250 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4251 ;;Total ram usage:        0 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    5
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_multiplexedDisp_init
  4258 ;;		_multiplexedDisp_job
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text31
  4263  002060                     __ptext31:
  4264                           	opt callstack 0
  4265  002060                     _multiplexedDisp1_off:
  4266                           	opt callstack 23
  4267                           
  4268                           ;incstack = 0
  4269                           ;pulsonic.c: 66: do{LATA |= 1<<3;}while(0);
  4270  002060  8689               	bsf	3977,3,c	;volatile
  4271  002062  0012               	return		;funcret
  4272  002064                     __end_of_multiplexedDisp1_off:
  4273                           	opt callstack 0
  4274                           
  4275 ;; *************** function _multiplexedDisp0_on *****************
  4276 ;; Defined at:
  4277 ;;		line 59 in file "pulsonic.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4294 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:        0 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    5
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_multiplexedDisp_init
  4302 ;;		_multiplexedDisp_job
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text32
  4307  002064                     __ptext32:
  4308                           	opt callstack 0
  4309  002064                     _multiplexedDisp0_on:
  4310                           	opt callstack 23
  4311                           
  4312                           ;incstack = 0
  4313                           ;pulsonic.c: 61: do{LATA &= ~(1<<4);}while(0);
  4314  002064  9889               	bcf	3977,4,c	;volatile
  4315  002066  0012               	return		;funcret
  4316  002068                     __end_of_multiplexedDisp0_on:
  4317                           	opt callstack 0
  4318                           
  4319 ;; *************** function _multiplexedDisp0_off *****************
  4320 ;; Defined at:
  4321 ;;		line 55 in file "pulsonic.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;		None
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;		None
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      void 
  4328 ;; Registers used:
  4329 ;;		status,2, status,0
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4335 ;;      Params:         0       0       0       0       0       0       0       0       0
  4336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4339 ;;Total ram usage:        0 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:    5
  4342 ;; This function calls:
  4343 ;;		Nothing
  4344 ;; This function is called by:
  4345 ;;		_multiplexedDisp_init
  4346 ;;		_multiplexedDisp_job
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text33
  4351  002068                     __ptext33:
  4352                           	opt callstack 0
  4353  002068                     _multiplexedDisp0_off:
  4354                           	opt callstack 23
  4355                           
  4356                           ;incstack = 0
  4357                           ;pulsonic.c: 57: do{LATA |= 1<<4;}while(0);
  4358  002068  8889               	bsf	3977,4,c	;volatile
  4359  00206A  0012               	return		;funcret
  4360  00206C                     __end_of_multiplexedDisp0_off:
  4361                           	opt callstack 0
  4362                           
  4363 ;; *************** function _multiplexedDisp4_on *****************
  4364 ;; Defined at:
  4365 ;;		line 95 in file "pulsonic.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    5
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_multiplexedDisp_init
  4390 ;;		_multiplexedDisp_job
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text34
  4395  00206C                     __ptext34:
  4396                           	opt callstack 0
  4397  00206C                     _multiplexedDisp4_on:
  4398                           	opt callstack 23
  4399                           
  4400                           ;incstack = 0
  4401                           ;pulsonic.c: 97: do{LATA &= ~(1<<0);}while(0);
  4402  00206C  9089               	bcf	3977,0,c	;volatile
  4403  00206E  0012               	return		;funcret
  4404  002070                     __end_of_multiplexedDisp4_on:
  4405                           	opt callstack 0
  4406                           
  4407 ;; *************** function _disp_show_quantity *****************
  4408 ;; Defined at:
  4409 ;;		line 186 in file "pulsonic.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  f               3   48[COMRAM] void 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  buff           10    0[BANK0 ] unsigned char [10]
  4414 ;;  real            3   10[BANK0 ] unsigned char [10]
  4415 ;;  I               2   16[BANK0 ] int 
  4416 ;;  i               1   18[BANK0 ] char 
  4417 ;;  last_pos        1   15[BANK0 ] char 
  4418 ;;  q               1   14[BANK0 ] char 
  4419 ;;  num             1   13[BANK0 ] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 3F/0
  4426 ;;		On exit  : 3E/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4429 ;;      Params:         3       0       0       0       0       0       0       0       0
  4430 ;;      Locals:         0      19       0       0       0       0       0       0       0
  4431 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4432 ;;      Totals:         4      19       0       0       0       0       0       0       0
  4433 ;;Total ram usage:       23 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    8
  4436 ;; This function calls:
  4437 ;;		___awtoft
  4438 ;;		___ftge
  4439 ;;		___ftmul
  4440 ;;		___ftsub
  4441 ;;		___fttol
  4442 ;;		_itoa
  4443 ;; This function is called by:
  4444 ;;		_main
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text35
  4449  000E3E                     __ptext35:
  4450                           	opt callstack 0
  4451  000E3E                     _disp_show_quantity:
  4452                           	opt callstack 22
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;pulsonic.c: 188: int16_t I;;pulsonic.c: 189: char buff[10];;pulsonic.c: 190: uint8_t nu
      +                          m;;pulsonic.c: 191: int8_t i;;pulsonic.c: 192: int8_t last_pos;;pulsonic.c: 193: int8_t 
      +                          q;;pulsonic.c: 194: double real;;pulsonic.c: 196: if (f>= 1000.0f)
  4456                           
  4457                           ;incstack = 0
  4458  000E3E  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4459  000E42  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4460  000E46  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4461  000E4A  0E00               	movlw	0
  4462  000E4C  6E19               	movwf	___ftge@ff2,c
  4463  000E4E  0E7A               	movlw	122
  4464  000E50  6E1A               	movwf	___ftge@ff2+1,c
  4465  000E52  0E44               	movlw	68
  4466  000E54  6E1B               	movwf	___ftge@ff2+2,c
  4467  000E56  EC05  F00D         	call	___ftge	;wreg free
  4468  000E5A  A0D8               	btfss	status,0,c
  4469  000E5C  D006               	goto	l3759
  4470                           
  4471                           ;pulsonic.c: 197: f=999.0f;
  4472  000E5E  0EC0               	movlw	192
  4473  000E60  6E31               	movwf	disp_show_quantity@f,c
  4474  000E62  0E79               	movlw	121
  4475  000E64  6E32               	movwf	disp_show_quantity@f+1,c
  4476  000E66  0E44               	movlw	68
  4477  000E68  6E33               	movwf	disp_show_quantity@f+2,c
  4478  000E6A                     l3759:
  4479                           
  4480                           ;pulsonic.c: 199: I = (int16_t)f;
  4481  000E6A  C031  F022         	movff	disp_show_quantity@f,___fttol@f1
  4482  000E6E  C032  F023         	movff	disp_show_quantity@f+1,___fttol@f1+1
  4483  000E72  C033  F024         	movff	disp_show_quantity@f+2,___fttol@f1+2
  4484  000E76  EC10  F00B         	call	___fttol	;wreg free
  4485  000E7A  C022  F0EC         	movff	?___fttol,disp_show_quantity@I
  4486  000E7E  C023  F0ED         	movff	?___fttol+1,disp_show_quantity@I+1
  4487                           
  4488                           ;pulsonic.c: 200: real = f-I;
  4489  000E82  C031  F01F         	movff	disp_show_quantity@f,___ftsub@f1
  4490  000E86  C032  F020         	movff	disp_show_quantity@f+1,___ftsub@f1+1
  4491  000E8A  C033  F021         	movff	disp_show_quantity@f+2,___ftsub@f1+2
  4492  000E8E  C0EC  F013         	movff	disp_show_quantity@I,___awtoft@c
  4493  000E92  C0ED  F014         	movff	disp_show_quantity@I+1,___awtoft@c+1
  4494  000E96  EC03  F00F         	call	___awtoft	;wreg free
  4495  000E9A  C013  F022         	movff	?___awtoft,___ftsub@f2
  4496  000E9E  C014  F023         	movff	?___awtoft+1,___ftsub@f2+1
  4497  000EA2  C015  F024         	movff	?___awtoft+2,___ftsub@f2+2
  4498  000EA6  ECE3  F00E         	call	___ftsub	;wreg free
  4499  000EAA  C01F  F0E6         	movff	?___ftsub,disp_show_quantity@real
  4500  000EAE  C020  F0E7         	movff	?___ftsub+1,disp_show_quantity@real+1
  4501  000EB2  C021  F0E8         	movff	?___ftsub+2,disp_show_quantity@real+2
  4502                           
  4503                           ;pulsonic.c: 201: if (real > 0.0f)
  4504  000EB6  0E00               	movlw	0
  4505  000EB8  6E16               	movwf	___ftge@ff1,c
  4506  000EBA  0E00               	movlw	0
  4507  000EBC  6E17               	movwf	___ftge@ff1+1,c
  4508  000EBE  0E00               	movlw	0
  4509  000EC0  6E18               	movwf	___ftge@ff1+2,c
  4510  000EC2  C0E6  F019         	movff	disp_show_quantity@real,___ftge@ff2
  4511  000EC6  C0E7  F01A         	movff	disp_show_quantity@real+1,___ftge@ff2+1
  4512  000ECA  C0E8  F01B         	movff	disp_show_quantity@real+2,___ftge@ff2+2
  4513  000ECE  EC05  F00D         	call	___ftge	;wreg free
  4514  000ED2  B0D8               	btfsc	status,0,c
  4515  000ED4  D02A               	goto	l3769
  4516                           
  4517                           ;pulsonic.c: 202: {;pulsonic.c: 203: if (f<100.0f)
  4518  000ED6  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4519  000EDA  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4520  000EDE  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4521  000EE2  0E00               	movlw	0
  4522  000EE4  6E19               	movwf	___ftge@ff2,c
  4523  000EE6  0EC8               	movlw	200
  4524  000EE8  6E1A               	movwf	___ftge@ff2+1,c
  4525  000EEA  0E42               	movlw	66
  4526  000EEC  6E1B               	movwf	___ftge@ff2+2,c
  4527  000EEE  EC05  F00D         	call	___ftge	;wreg free
  4528  000EF2  B0D8               	btfsc	status,0,c
  4529  000EF4  D01A               	goto	l3769
  4530                           
  4531                           ;pulsonic.c: 204: {;pulsonic.c: 205: I = (int)(f*10);
  4532  000EF6  0E00               	movlw	0
  4533  000EF8  6E16               	movwf	___ftmul@f2,c
  4534  000EFA  0E20               	movlw	32
  4535  000EFC  6E17               	movwf	___ftmul@f2+1,c
  4536  000EFE  0E41               	movlw	65
  4537  000F00  6E18               	movwf	___ftmul@f2+2,c
  4538  000F02  C031  F013         	movff	disp_show_quantity@f,___ftmul@f1
  4539  000F06  C032  F014         	movff	disp_show_quantity@f+1,___ftmul@f1+1
  4540  000F0A  C033  F015         	movff	disp_show_quantity@f+2,___ftmul@f1+2
  4541  000F0E  EC96  F00A         	call	___ftmul	;wreg free
  4542  000F12  C013  F022         	movff	?___ftmul,___fttol@f1
  4543  000F16  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  4544  000F1A  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  4545  000F1E  EC10  F00B         	call	___fttol	;wreg free
  4546  000F22  C022  F0EC         	movff	?___fttol,disp_show_quantity@I
  4547  000F26  C023  F0ED         	movff	?___fttol+1,disp_show_quantity@I+1
  4548  000F2A                     l3769:
  4549                           
  4550                           ;pulsonic.c: 206: };pulsonic.c: 208: };pulsonic.c: 209: itoa(buff, I, 10);
  4551  000F2A  0EDC               	movlw	low disp_show_quantity@buff
  4552  000F2C  6E1A               	movwf	itoa@buf,c
  4553  000F2E  C0EC  F01B         	movff	disp_show_quantity@I,itoa@val
  4554  000F32  C0ED  F01C         	movff	disp_show_quantity@I+1,itoa@val+1
  4555  000F36  0E00               	movlw	0
  4556  000F38  6E1E               	movwf	itoa@base+1,c
  4557  000F3A  0E0A               	movlw	10
  4558  000F3C  6E1D               	movwf	itoa@base,c
  4559  000F3E  EC39  F00F         	call	_itoa	;wreg free
  4560                           
  4561                           ;pulsonic.c: 211: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[OFF];
  4562  000F42  0E0B               	movlw	low _DISP7S_CHARS
  4563  000F44  6EF6               	movwf	tblptrl,c
  4564  000F46                     	if	1	;There is more than 1 active tblptr byte
  4565  000F46  0E08               	movlw	high _DISP7S_CHARS
  4566  000F48  6EF7               	movwf	tblptrh,c
  4567  000F4A                     	endif
  4568  000F4A                     	if	0	;There are less than 3 active tblptr bytes
  4569  000F4A                     	endif
  4570  000F4A  0008               	tblrd		*
  4571  000F4C  CFF5 F178          	movff	tablat,_pulsonic+120
  4572                           
  4573                           ;pulsonic.c: 212: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[OFF];
  4574  000F50  0E0B               	movlw	low _DISP7S_CHARS
  4575  000F52  6EF6               	movwf	tblptrl,c
  4576  000F54                     	if	1	;There is more than 1 active tblptr byte
  4577  000F54  0E08               	movlw	high _DISP7S_CHARS
  4578  000F56  6EF7               	movwf	tblptrh,c
  4579  000F58                     	endif
  4580  000F58                     	if	0	;There are less than 3 active tblptr bytes
  4581  000F58                     	endif
  4582  000F58  0008               	tblrd		*
  4583  000F5A  CFF5 F177          	movff	tablat,_pulsonic+119
  4584                           
  4585                           ;pulsonic.c: 213: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[OFF];
  4586  000F5E  0E0B               	movlw	low _DISP7S_CHARS
  4587  000F60  6EF6               	movwf	tblptrl,c
  4588  000F62                     	if	1	;There is more than 1 active tblptr byte
  4589  000F62  0E08               	movlw	high _DISP7S_CHARS
  4590  000F64  6EF7               	movwf	tblptrh,c
  4591  000F66                     	endif
  4592  000F66                     	if	0	;There are less than 3 active tblptr bytes
  4593  000F66                     	endif
  4594  000F66  0008               	tblrd		*
  4595  000F68  CFF5 F176          	movff	tablat,_pulsonic+118
  4596                           
  4597                           ;pulsonic.c: 215: if (real<0.01)
  4598  000F6C  C0E6  F016         	movff	disp_show_quantity@real,___ftge@ff1
  4599  000F70  C0E7  F017         	movff	disp_show_quantity@real+1,___ftge@ff1+1
  4600  000F74  C0E8  F018         	movff	disp_show_quantity@real+2,___ftge@ff1+2
  4601  000F78  0ED7               	movlw	215
  4602  000F7A  6E19               	movwf	___ftge@ff2,c
  4603  000F7C  0E23               	movlw	35
  4604  000F7E  6E1A               	movwf	___ftge@ff2+1,c
  4605  000F80  0E3C               	movlw	60
  4606  000F82  6E1B               	movwf	___ftge@ff2+2,c
  4607  000F84  EC05  F00D         	call	___ftge	;wreg free
  4608  000F88  B0D8               	btfsc	status,0,c
  4609  000F8A  D037               	goto	l3805
  4610                           
  4611                           ;pulsonic.c: 216: {;pulsonic.c: 217: if (I>99)
  4612  000F8C  0100               	movlb	0	; () banked
  4613  000F8E  BFED               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4614  000F90  D008               	goto	l3783
  4615  000F92  51ED               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4616  000F94  E104               	bnz	u4510
  4617  000F96  0E64               	movlw	100
  4618  000F98  5DEC               	subwf	disp_show_quantity@I& (0+255),w,b
  4619  000F9A  A0D8               	btfss	status,0,c
  4620  000F9C  D002               	goto	l3783
  4621  000F9E                     u4510:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;pulsonic.c: 218: last_pos = 2;
  4625  000F9E  0E02               	movlw	2
  4626  000FA0  D00B               	goto	L4
  4627  000FA2                     l3783:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;pulsonic.c: 219: else if (I>9)
  4631  000FA2  BFED               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4632  000FA4  D008               	goto	l3787
  4633  000FA6  51ED               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4634  000FA8  E104               	bnz	u4520
  4635  000FAA  0E0A               	movlw	10
  4636  000FAC  5DEC               	subwf	disp_show_quantity@I& (0+255),w,b
  4637  000FAE  A0D8               	btfss	status,0,c
  4638  000FB0  D002               	goto	l3787
  4639  000FB2                     u4520:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;pulsonic.c: 220: last_pos = 1;
  4643  000FB2  0E01               	movlw	1
  4644  000FB4  D001               	goto	L4
  4645  000FB6                     l3787:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;pulsonic.c: 221: else;pulsonic.c: 222: last_pos = 0;
  4649  000FB6  0E00               	movlw	0
  4650  000FB8                     L4:
  4651  000FB8  6FEB               	movwf	disp_show_quantity@last_pos& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;pulsonic.c: 224: q = 0;
  4655  000FBA  0E00               	movlw	0
  4656  000FBC  6FEA               	movwf	disp_show_quantity@q& (0+255),b
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;pulsonic.c: 225: for (i=last_pos; i>=0; i--)
  4660  000FBE  C0EB  F0EE         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4661  000FC2                     l3791:
  4662                           
  4663                           ; BSR set to: 0
  4664  000FC2  BFEE               	btfsc	disp_show_quantity@i& (0+255),7,b
  4665  000FC4  0012               	return	
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;pulsonic.c: 226: {;pulsonic.c: 227: num = buff[i] - 0x30;
  4669  000FC6  51EE               	movf	disp_show_quantity@i& (0+255),w,b
  4670  000FC8  0FDC               	addlw	low disp_show_quantity@buff
  4671  000FCA  6ED9               	movwf	fsr2l,c
  4672  000FCC  6ADA               	clrf	fsr2h,c
  4673  000FCE  50DF               	movf	indf2,w,c
  4674  000FD0  0FD0               	addlw	208
  4675  000FD2  6FE9               	movwf	disp_show_quantity@num& (0+255),b
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;pulsonic.c: 228: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4679  000FD4  51E9               	movf	disp_show_quantity@num& (0+255),w,b
  4680  000FD6  0F01               	addlw	low _DISP7S_NUMS
  4681  000FD8  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4682  000FDA  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4683  000FDE                     	if	1	;There is more than 1 active tblptr byte
  4684  000FDE  0E08               	movlw	high __smallconst
  4685  000FE0  6EF7               	movwf	tblptrh,c
  4686  000FE2                     	endif
  4687  000FE2                     	if	0	;tblptru may be non-zero
  4688  000FE2                     	endif
  4689  000FE2                     	if	0	;tblptru may be non-zero
  4690  000FE2                     	endif
  4691  000FE2  0E76               	movlw	low (_pulsonic+118)
  4692  000FE4  25EA               	addwf	disp_show_quantity@q& (0+255),w,b
  4693  000FE6  6ED9               	movwf	fsr2l,c
  4694  000FE8  6ADA               	clrf	fsr2h,c
  4695  000FEA  0E01               	movlw	high (_pulsonic+118)
  4696  000FEC  22DA               	addwfc	fsr2h,f,c
  4697  000FEE  0008               	tblrd		*
  4698  000FF0  CFF5 FFDF          	movff	tablat,indf2
  4699                           
  4700                           ; BSR set to: 0
  4701  000FF4  2BEA               	incf	disp_show_quantity@q& (0+255),f,b
  4702                           
  4703                           ; BSR set to: 0
  4704  000FF6  07EE               	decf	disp_show_quantity@i& (0+255),f,b
  4705  000FF8  D7E4               	goto	l3791
  4706  000FFA                     l3805:
  4707                           
  4708                           ;pulsonic.c: 231: else;pulsonic.c: 232: {;pulsonic.c: 233: if (f<100.0)
  4709  000FFA  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4710  000FFE  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4711  001002  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4712  001006  0E00               	movlw	0
  4713  001008  6E19               	movwf	___ftge@ff2,c
  4714  00100A  0EC8               	movlw	200
  4715  00100C  6E1A               	movwf	___ftge@ff2+1,c
  4716  00100E  0E42               	movlw	66
  4717  001010  6E1B               	movwf	___ftge@ff2+2,c
  4718  001012  EC05  F00D         	call	___ftge	;wreg free
  4719  001016  B0D8               	btfsc	status,0,c
  4720  001018  D041               	goto	l3839
  4721                           
  4722                           ;pulsonic.c: 234: {;pulsonic.c: 238: if (I>99)
  4723  00101A  0100               	movlb	0	; () banked
  4724  00101C  BFED               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4725  00101E  D008               	goto	l3811
  4726  001020  51ED               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4727  001022  E104               	bnz	u4550
  4728  001024  0E64               	movlw	100
  4729  001026  5DEC               	subwf	disp_show_quantity@I& (0+255),w,b
  4730  001028  A0D8               	btfss	status,0,c
  4731  00102A  D002               	goto	l3811
  4732  00102C                     u4550:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;pulsonic.c: 239: {last_pos = 2;}
  4736  00102C  0E02               	movlw	2
  4737  00102E  D012               	goto	L5
  4738  001030                     l3811:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;pulsonic.c: 240: else if (I>9)
  4742  001030  BFED               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4743  001032  D008               	goto	l3815
  4744  001034  51ED               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4745  001036  E104               	bnz	u4560
  4746  001038  0E0A               	movlw	10
  4747  00103A  5DEC               	subwf	disp_show_quantity@I& (0+255),w,b
  4748  00103C  A0D8               	btfss	status,0,c
  4749  00103E  D002               	goto	l3815
  4750  001040                     u4560:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;pulsonic.c: 241: {last_pos = 1;}
  4754  001040  0E01               	movlw	1
  4755  001042  D008               	goto	L5
  4756  001044                     l3815:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;pulsonic.c: 242: else;pulsonic.c: 243: {;pulsonic.c: 244: pulsonic.display7s[QUANT_DIG_
      +                          1] = DISP7S_NUMS[0];
  4760  001044  0E01               	movlw	low _DISP7S_NUMS
  4761  001046  6EF6               	movwf	tblptrl,c
  4762  001048                     	if	1	;There is more than 1 active tblptr byte
  4763  001048  0E08               	movlw	high _DISP7S_NUMS
  4764  00104A  6EF7               	movwf	tblptrh,c
  4765  00104C                     	endif
  4766  00104C                     	if	0	;There are less than 3 active tblptr bytes
  4767  00104C                     	endif
  4768  00104C  0008               	tblrd		*
  4769  00104E  CFF5 F177          	movff	tablat,_pulsonic+119
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;pulsonic.c: 245: last_pos = 0;
  4773  001052  0E00               	movlw	0
  4774  001054                     L5:
  4775  001054  6FEB               	movwf	disp_show_quantity@last_pos& (0+255),b
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;pulsonic.c: 246: };pulsonic.c: 248: q = 0;
  4779  001056  0E00               	movlw	0
  4780  001058  6FEA               	movwf	disp_show_quantity@q& (0+255),b
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;pulsonic.c: 249: for (i=last_pos; i>=0; i--)
  4784  00105A  C0EB  F0EE         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4785  00105E                     l3823:
  4786                           
  4787                           ; BSR set to: 0
  4788  00105E  BFEE               	btfsc	disp_show_quantity@i& (0+255),7,b
  4789  001060  D01A               	goto	l3837
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;pulsonic.c: 250: {;pulsonic.c: 251: num = buff[i] - 0x30;
  4793  001062  51EE               	movf	disp_show_quantity@i& (0+255),w,b
  4794  001064  0FDC               	addlw	low disp_show_quantity@buff
  4795  001066  6ED9               	movwf	fsr2l,c
  4796  001068  6ADA               	clrf	fsr2h,c
  4797  00106A  50DF               	movf	indf2,w,c
  4798  00106C  0FD0               	addlw	208
  4799  00106E  6FE9               	movwf	disp_show_quantity@num& (0+255),b
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;pulsonic.c: 252: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4803  001070  51E9               	movf	disp_show_quantity@num& (0+255),w,b
  4804  001072  0F01               	addlw	low _DISP7S_NUMS
  4805  001074  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4806  001076  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4807  00107A                     	if	1	;There is more than 1 active tblptr byte
  4808  00107A  0E08               	movlw	high __smallconst
  4809  00107C  6EF7               	movwf	tblptrh,c
  4810  00107E                     	endif
  4811  00107E                     	if	0	;tblptru may be non-zero
  4812  00107E                     	endif
  4813  00107E                     	if	0	;tblptru may be non-zero
  4814  00107E                     	endif
  4815  00107E  0E76               	movlw	low (_pulsonic+118)
  4816  001080  25EA               	addwf	disp_show_quantity@q& (0+255),w,b
  4817  001082  6ED9               	movwf	fsr2l,c
  4818  001084  6ADA               	clrf	fsr2h,c
  4819  001086  0E01               	movlw	high (_pulsonic+118)
  4820  001088  22DA               	addwfc	fsr2h,f,c
  4821  00108A  0008               	tblrd		*
  4822  00108C  CFF5 FFDF          	movff	tablat,indf2
  4823                           
  4824                           ; BSR set to: 0
  4825  001090  2BEA               	incf	disp_show_quantity@q& (0+255),f,b
  4826                           
  4827                           ; BSR set to: 0
  4828  001092  07EE               	decf	disp_show_quantity@i& (0+255),f,b
  4829  001094  D7E4               	goto	l3823
  4830  001096                     l3837:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;pulsonic.c: 253: };pulsonic.c: 254: pulsonic.display7s[QUANT_DIG_1] |= 0x80;
  4834  001096  0101               	movlb	1	; () banked
  4835  001098  8F77               	bsf	(_pulsonic+119)& (0+255),7,b
  4836                           
  4837                           ;pulsonic.c: 255: }
  4838  00109A  0012               	return	
  4839  00109C                     l3839:
  4840                           
  4841                           ;pulsonic.c: 256: else;pulsonic.c: 257: {;pulsonic.c: 258: q = 0;
  4842  00109C  0E00               	movlw	0
  4843  00109E  0100               	movlb	0	; () banked
  4844  0010A0  6FEA               	movwf	disp_show_quantity@q& (0+255),b
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;pulsonic.c: 260: for (i=last_pos; i>=0; i--)
  4848  0010A2  0E02               	movlw	2
  4849  0010A4  6FEE               	movwf	disp_show_quantity@i& (0+255),b
  4850  0010A6                     l3847:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;pulsonic.c: 261: {;pulsonic.c: 262: num = buff[i] - 0x30;
  4854  0010A6  51EE               	movf	disp_show_quantity@i& (0+255),w,b
  4855  0010A8  0FDC               	addlw	low disp_show_quantity@buff
  4856  0010AA  6ED9               	movwf	fsr2l,c
  4857  0010AC  6ADA               	clrf	fsr2h,c
  4858  0010AE  50DF               	movf	indf2,w,c
  4859  0010B0  0FD0               	addlw	208
  4860  0010B2  6FE9               	movwf	disp_show_quantity@num& (0+255),b
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;pulsonic.c: 263: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4864  0010B4  51E9               	movf	disp_show_quantity@num& (0+255),w,b
  4865  0010B6  0F01               	addlw	low _DISP7S_NUMS
  4866  0010B8  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4867  0010BA  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4868  0010BE                     	if	1	;There is more than 1 active tblptr byte
  4869  0010BE  0E08               	movlw	high __smallconst
  4870  0010C0  6EF7               	movwf	tblptrh,c
  4871  0010C2                     	endif
  4872  0010C2                     	if	0	;tblptru may be non-zero
  4873  0010C2                     	endif
  4874  0010C2                     	if	0	;tblptru may be non-zero
  4875  0010C2                     	endif
  4876  0010C2  0E76               	movlw	low (_pulsonic+118)
  4877  0010C4  25EA               	addwf	disp_show_quantity@q& (0+255),w,b
  4878  0010C6  6ED9               	movwf	fsr2l,c
  4879  0010C8  6ADA               	clrf	fsr2h,c
  4880  0010CA  0E01               	movlw	high (_pulsonic+118)
  4881  0010CC  22DA               	addwfc	fsr2h,f,c
  4882  0010CE  0008               	tblrd		*
  4883  0010D0  CFF5 FFDF          	movff	tablat,indf2
  4884                           
  4885                           ; BSR set to: 0
  4886  0010D4  2BEA               	incf	disp_show_quantity@q& (0+255),f,b
  4887                           
  4888                           ; BSR set to: 0
  4889  0010D6  07EE               	decf	disp_show_quantity@i& (0+255),f,b
  4890                           
  4891                           ; BSR set to: 0
  4892  0010D8  BFEE               	btfsc	disp_show_quantity@i& (0+255),7,b
  4893  0010DA  0012               	return	
  4894  0010DC  D7E4               	goto	l3847
  4895  0010DE                     __end_of_disp_show_quantity:
  4896                           	opt callstack 0
  4897                           
  4898 ;; *************** function _itoa *****************
  4899 ;; Defined at:
  4900 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  buf             1   25[COMRAM] PTR unsigned char 
  4903 ;;		 -> disp_show_quantity@buff(10), 
  4904 ;;  val             2   26[COMRAM] int 
  4905 ;;  base            2   28[COMRAM] int 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  cp              1    0        PTR unsigned char 
  4908 ;;		 -> disp_show_quantity@buff(10), 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      PTR unsigned char 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4918 ;;      Params:         5       0       0       0       0       0       0       0       0
  4919 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4921 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4922 ;;Total ram usage:        6 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    7
  4925 ;; This function calls:
  4926 ;;		_utoa
  4927 ;; This function is called by:
  4928 ;;		_disp_show_quantity
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text36
  4933  001E72                     __ptext36:
  4934                           	opt callstack 0
  4935  001E72                     _itoa:
  4936                           	opt callstack 22
  4937                           
  4938                           ;incstack = 0
  4939  001E72  AE1C               	btfss	itoa@val+1,7,c
  4940  001E74  D00A               	goto	l3637
  4941  001E76  501A               	movf	itoa@buf,w,c
  4942  001E78  6ED9               	movwf	fsr2l,c
  4943  001E7A  6ADA               	clrf	fsr2h,c
  4944  001E7C  0E2D               	movlw	45
  4945  001E7E  6EDF               	movwf	indf2,c
  4946  001E80  2A1A               	incf	itoa@buf,f,c
  4947  001E82  6C1B               	negf	itoa@val,c
  4948  001E84  1E1C               	comf	itoa@val+1,f,c
  4949  001E86  B0D8               	btfsc	status,0,c
  4950  001E88  2A1C               	incf	itoa@val+1,f,c
  4951  001E8A                     l3637:
  4952  001E8A  C01A  F012         	movff	itoa@buf,utoa@buf
  4953  001E8E  C01B  F013         	movff	itoa@val,utoa@val
  4954  001E92  C01C  F014         	movff	itoa@val+1,utoa@val+1
  4955  001E96  C01D  F015         	movff	itoa@base,utoa@base
  4956  001E9A  C01E  F016         	movff	itoa@base+1,utoa@base+1
  4957  001E9E  EC7B  F00C         	call	_utoa	;wreg free
  4958  001EA2  0012               	return		;funcret
  4959  001EA4                     __end_of_itoa:
  4960                           	opt callstack 0
  4961                           
  4962 ;; *************** function _utoa *****************
  4963 ;; Defined at:
  4964 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  buf             1   17[COMRAM] PTR unsigned char 
  4967 ;;		 -> disp_show_quantity@buff(10), 
  4968 ;;  val             2   18[COMRAM] unsigned int 
  4969 ;;  base            2   20[COMRAM] int 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  v               2   22[COMRAM] unsigned int 
  4972 ;;  c               1   24[COMRAM] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      PTR unsigned char 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         5       0       0       0       0       0       0       0       0
  4983 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4985 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4986 ;;Total ram usage:        8 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    6
  4989 ;; This function calls:
  4990 ;;		___lwdiv
  4991 ;;		___lwmod
  4992 ;; This function is called by:
  4993 ;;		_itoa
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text37
  4998  0018F6                     __ptext37:
  4999                           	opt callstack 0
  5000  0018F6                     _utoa:
  5001                           	opt callstack 22
  5002                           
  5003                           ;incstack = 0
  5004  0018F6  C013  F017         	movff	utoa@val,utoa@v
  5005  0018FA  C014  F018         	movff	utoa@val+1,utoa@v+1
  5006  0018FE                     l3505:
  5007  0018FE  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  5008  001902  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  5009  001906  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  5010  00190A  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  5011  00190E  EC9D  F00D         	call	___lwdiv	;wreg free
  5012  001912  C00B  F017         	movff	?___lwdiv,utoa@v
  5013  001916  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  5014  00191A  2A12               	incf	utoa@buf,f,c
  5015  00191C  5017               	movf	utoa@v,w,c
  5016  00191E  1018               	iorwf	utoa@v+1,w,c
  5017  001920  A4D8               	btfss	status,2,c
  5018  001922  D7ED               	goto	l3505
  5019  001924  5012               	movf	utoa@buf,w,c
  5020  001926  6ED9               	movwf	fsr2l,c
  5021  001928  6ADA               	clrf	fsr2h,c
  5022  00192A  0E00               	movlw	0
  5023  00192C  6EDF               	movwf	indf2,c
  5024  00192E  0612               	decf	utoa@buf,f,c
  5025  001930                     l3515:
  5026  001930  C013  F00B         	movff	utoa@val,___lwmod@dividend
  5027  001934  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  5028  001938  C015  F00D         	movff	utoa@base,___lwmod@divisor
  5029  00193C  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  5030  001940  EC81  F00E         	call	___lwmod	;wreg free
  5031  001944  500B               	movf	?___lwmod,w,c
  5032  001946  6E19               	movwf	utoa@c,c
  5033  001948  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  5034  00194C  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  5035  001950  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  5036  001954  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  5037  001958  EC9D  F00D         	call	___lwdiv	;wreg free
  5038  00195C  C00B  F013         	movff	?___lwdiv,utoa@val
  5039  001960  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  5040  001964  0E09               	movlw	9
  5041  001966  6419               	cpfsgt	utoa@c,c
  5042  001968  D002               	goto	l1319
  5043  00196A  0E07               	movlw	7
  5044  00196C  2619               	addwf	utoa@c,f,c
  5045  00196E                     l1319:
  5046  00196E  0E30               	movlw	48
  5047  001970  2619               	addwf	utoa@c,f,c
  5048  001972  5012               	movf	utoa@buf,w,c
  5049  001974  6ED9               	movwf	fsr2l,c
  5050  001976  6ADA               	clrf	fsr2h,c
  5051  001978  C019  FFDF         	movff	utoa@c,indf2
  5052  00197C  0612               	decf	utoa@buf,f,c
  5053  00197E  5013               	movf	utoa@val,w,c
  5054  001980  1014               	iorwf	utoa@val+1,w,c
  5055  001982  A4D8               	btfss	status,2,c
  5056  001984  D7D5               	goto	l3515
  5057                           
  5058                           ;	Return value of _utoa is never used
  5059  001986  2A12               	incf	utoa@buf,f,c
  5060  001988  0012               	return		;funcret
  5061  00198A                     __end_of_utoa:
  5062                           	opt callstack 0
  5063                           
  5064 ;; *************** function ___lwmod *****************
  5065 ;; Defined at:
  5066 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  dividend        2   10[COMRAM] unsigned int 
  5069 ;;  divisor         2   12[COMRAM] unsigned int 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  counter         1   14[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  2   10[COMRAM] unsigned int 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5081 ;;      Params:         4       0       0       0       0       0       0       0       0
  5082 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5084 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5085 ;;Total ram usage:        5 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    5
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_utoa
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text38
  5096  001D02                     __ptext38:
  5097                           	opt callstack 0
  5098  001D02                     ___lwmod:
  5099                           	opt callstack 22
  5100                           
  5101                           ;incstack = 0
  5102  001D02  500D               	movf	___lwmod@divisor,w,c
  5103  001D04  100E               	iorwf	___lwmod@divisor+1,w,c
  5104  001D06  B4D8               	btfsc	status,2,c
  5105  001D08  D018               	goto	l1137
  5106  001D0A  0E01               	movlw	1
  5107  001D0C  6E0F               	movwf	___lwmod@counter,c
  5108  001D0E  D004               	goto	l3401
  5109  001D10                     l3399:
  5110  001D10  90D8               	bcf	status,0,c
  5111  001D12  360D               	rlcf	___lwmod@divisor,f,c
  5112  001D14  360E               	rlcf	___lwmod@divisor+1,f,c
  5113  001D16  2A0F               	incf	___lwmod@counter,f,c
  5114  001D18                     l3401:
  5115  001D18  AE0E               	btfss	___lwmod@divisor+1,7,c
  5116  001D1A  D7FA               	goto	l3399
  5117  001D1C                     u3650:
  5118  001D1C  500D               	movf	___lwmod@divisor,w,c
  5119  001D1E  5C0B               	subwf	___lwmod@dividend,w,c
  5120  001D20  500E               	movf	___lwmod@divisor+1,w,c
  5121  001D22  580C               	subwfb	___lwmod@dividend+1,w,c
  5122  001D24  A0D8               	btfss	status,0,c
  5123  001D26  D004               	goto	l3407
  5124  001D28  500D               	movf	___lwmod@divisor,w,c
  5125  001D2A  5E0B               	subwf	___lwmod@dividend,f,c
  5126  001D2C  500E               	movf	___lwmod@divisor+1,w,c
  5127  001D2E  5A0C               	subwfb	___lwmod@dividend+1,f,c
  5128  001D30                     l3407:
  5129  001D30  90D8               	bcf	status,0,c
  5130  001D32  320E               	rrcf	___lwmod@divisor+1,f,c
  5131  001D34  320D               	rrcf	___lwmod@divisor,f,c
  5132  001D36  2E0F               	decfsz	___lwmod@counter,f,c
  5133  001D38  D7F1               	goto	u3650
  5134  001D3A                     l1137:
  5135  001D3A  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  5136  001D3E  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  5137  001D42  0012               	return		;funcret
  5138  001D44                     __end_of___lwmod:
  5139                           	opt callstack 0
  5140                           
  5141 ;; *************** function ___lwdiv *****************
  5142 ;; Defined at:
  5143 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  dividend        2   10[COMRAM] unsigned int 
  5146 ;;  divisor         2   12[COMRAM] unsigned int 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  quotient        2   15[COMRAM] unsigned int 
  5149 ;;  counter         1   14[COMRAM] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  2   10[COMRAM] unsigned int 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5159 ;;      Params:         4       0       0       0       0       0       0       0       0
  5160 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5162 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5163 ;;Total ram usage:        7 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    5
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_utoa
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text39
  5174  001B3A                     __ptext39:
  5175                           	opt callstack 0
  5176  001B3A                     ___lwdiv:
  5177                           	opt callstack 22
  5178                           
  5179                           ;incstack = 0
  5180  001B3A  0E00               	movlw	0
  5181  001B3C  6E11               	movwf	___lwdiv@quotient+1,c
  5182  001B3E  0E00               	movlw	0
  5183  001B40  6E10               	movwf	___lwdiv@quotient,c
  5184  001B42  500D               	movf	___lwdiv@divisor,w,c
  5185  001B44  100E               	iorwf	___lwdiv@divisor+1,w,c
  5186  001B46  B4D8               	btfsc	status,2,c
  5187  001B48  D01C               	goto	l1127
  5188  001B4A  0E01               	movlw	1
  5189  001B4C  6E0F               	movwf	___lwdiv@counter,c
  5190  001B4E  D004               	goto	l3381
  5191  001B50                     l3379:
  5192  001B50  90D8               	bcf	status,0,c
  5193  001B52  360D               	rlcf	___lwdiv@divisor,f,c
  5194  001B54  360E               	rlcf	___lwdiv@divisor+1,f,c
  5195  001B56  2A0F               	incf	___lwdiv@counter,f,c
  5196  001B58                     l3381:
  5197  001B58  AE0E               	btfss	___lwdiv@divisor+1,7,c
  5198  001B5A  D7FA               	goto	l3379
  5199  001B5C                     u3620:
  5200  001B5C  90D8               	bcf	status,0,c
  5201  001B5E  3610               	rlcf	___lwdiv@quotient,f,c
  5202  001B60  3611               	rlcf	___lwdiv@quotient+1,f,c
  5203  001B62  500D               	movf	___lwdiv@divisor,w,c
  5204  001B64  5C0B               	subwf	___lwdiv@dividend,w,c
  5205  001B66  500E               	movf	___lwdiv@divisor+1,w,c
  5206  001B68  580C               	subwfb	___lwdiv@dividend+1,w,c
  5207  001B6A  A0D8               	btfss	status,0,c
  5208  001B6C  D005               	goto	l3391
  5209  001B6E  500D               	movf	___lwdiv@divisor,w,c
  5210  001B70  5E0B               	subwf	___lwdiv@dividend,f,c
  5211  001B72  500E               	movf	___lwdiv@divisor+1,w,c
  5212  001B74  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  5213  001B76  8010               	bsf	___lwdiv@quotient,0,c
  5214  001B78                     l3391:
  5215  001B78  90D8               	bcf	status,0,c
  5216  001B7A  320E               	rrcf	___lwdiv@divisor+1,f,c
  5217  001B7C  320D               	rrcf	___lwdiv@divisor,f,c
  5218  001B7E  2E0F               	decfsz	___lwdiv@counter,f,c
  5219  001B80  D7ED               	goto	u3620
  5220  001B82                     l1127:
  5221  001B82  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  5222  001B86  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5223  001B8A  0012               	return		;funcret
  5224  001B8C                     __end_of___lwdiv:
  5225                           	opt callstack 0
  5226                           
  5227 ;; *************** function ___fttol *****************
  5228 ;; Defined at:
  5229 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  f1              3   33[COMRAM] float 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  lval            4   43[COMRAM] unsigned long 
  5234 ;;  exp1            1   47[COMRAM] unsigned char 
  5235 ;;  sign1           1   42[COMRAM] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  4   33[COMRAM] long 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5245 ;;      Params:         4       0       0       0       0       0       0       0       0
  5246 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5247 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5248 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5249 ;;Total ram usage:       15 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    5
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_disp_show_quantity
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text40
  5260  001620                     __ptext40:
  5261                           	opt callstack 0
  5262  001620                     ___fttol:
  5263                           	opt callstack 24
  5264                           
  5265                           ;incstack = 0
  5266  001620  C024  F026         	movff	___fttol@f1+2,??___fttol
  5267  001624  6A27               	clrf	(??___fttol+1)& (0+255),c
  5268  001626  6A28               	clrf	(??___fttol+2)& (0+255),c
  5269  001628  3423               	rlcf	___fttol@f1+1,w,c
  5270  00162A  3626               	rlcf	??___fttol& (0+255),f,c
  5271  00162C  E301               	bnc	u4391
  5272  00162E  8027               	bsf	(??___fttol+1)& (0+255),0,c
  5273  001630                     u4391:
  5274  001630  5026               	movf	??___fttol,w,c
  5275  001632  6E30               	movwf	___fttol@exp1,c
  5276  001634  5030               	movf	___fttol@exp1,w,c
  5277  001636  A4D8               	btfss	status,2,c
  5278  001638  D009               	goto	l3715
  5279  00163A                     u4400:
  5280  00163A  0E00               	movlw	0
  5281  00163C  6E22               	movwf	?___fttol,c
  5282  00163E  0E00               	movlw	0
  5283  001640  6E23               	movwf	?___fttol+1,c
  5284  001642  0E00               	movlw	0
  5285  001644  6E24               	movwf	?___fttol+2,c
  5286  001646  0E00               	movlw	0
  5287  001648  6E25               	movwf	?___fttol+3,c
  5288  00164A  0012               	return	
  5289  00164C                     l3715:
  5290  00164C  0E17               	movlw	23
  5291  00164E  6E26               	movwf	??___fttol& (0+255),c
  5292  001650  C022  F027         	movff	___fttol@f1,??___fttol+1
  5293  001654  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  5294  001658  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  5295  00165C  2826               	incf	??___fttol,w,c
  5296  00165E  6E2A               	movwf	(??___fttol+4)& (0+255),c
  5297  001660  D004               	goto	u4410
  5298  001662                     u4415:
  5299  001662  90D8               	bcf	status,0,c
  5300  001664  3229               	rrcf	??___fttol+3,f,c
  5301  001666  3228               	rrcf	??___fttol+2,f,c
  5302  001668  3227               	rrcf	??___fttol+1,f,c
  5303  00166A                     u4410:
  5304  00166A  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  5305  00166C  D7FA               	goto	u4415
  5306  00166E  5027               	movf	??___fttol+1,w,c
  5307  001670  6E2B               	movwf	___fttol@sign1,c
  5308  001672  8E23               	bsf	___fttol@f1+1,7,c
  5309  001674  0EFF               	movlw	255
  5310  001676  1622               	andwf	___fttol@f1,f,c
  5311  001678  0EFF               	movlw	255
  5312  00167A  1623               	andwf	___fttol@f1+1,f,c
  5313  00167C  0E00               	movlw	0
  5314  00167E  1624               	andwf	___fttol@f1+2,f,c
  5315  001680  5022               	movf	___fttol@f1,w,c
  5316  001682  6E2C               	movwf	___fttol@lval,c
  5317  001684  5023               	movf	___fttol@f1+1,w,c
  5318  001686  6E2D               	movwf	___fttol@lval+1,c
  5319  001688  5024               	movf	___fttol@f1+2,w,c
  5320  00168A  6E2E               	movwf	___fttol@lval+2,c
  5321  00168C  6A2F               	clrf	___fttol@lval+3,c
  5322  00168E  0E8E               	movlw	142
  5323  001690  5E30               	subwf	___fttol@exp1,f,c
  5324  001692  AE30               	btfss	___fttol@exp1,7,c
  5325  001694  D00D               	goto	l3737
  5326  001696  5030               	movf	___fttol@exp1,w,c
  5327  001698  0A80               	xorlw	128
  5328  00169A  0F8F               	addlw	143
  5329  00169C  A0D8               	btfss	status,0,c
  5330  00169E  D7CD               	goto	u4400
  5331  0016A0                     l3733:
  5332  0016A0  90D8               	bcf	status,0,c
  5333  0016A2  322F               	rrcf	___fttol@lval+3,f,c
  5334  0016A4  322E               	rrcf	___fttol@lval+2,f,c
  5335  0016A6  322D               	rrcf	___fttol@lval+1,f,c
  5336  0016A8  322C               	rrcf	___fttol@lval,f,c
  5337  0016AA  3E30               	incfsz	___fttol@exp1,f,c
  5338  0016AC  D7F9               	goto	l3733
  5339  0016AE  D00D               	goto	u4450
  5340  0016B0                     l3737:
  5341  0016B0  0E17               	movlw	23
  5342  0016B2  6430               	cpfsgt	___fttol@exp1,c
  5343  0016B4  D007               	goto	l3745
  5344  0016B6  D7C1               	goto	u4400
  5345  0016B8                     l3743:
  5346  0016B8  90D8               	bcf	status,0,c
  5347  0016BA  362C               	rlcf	___fttol@lval,f,c
  5348  0016BC  362D               	rlcf	___fttol@lval+1,f,c
  5349  0016BE  362E               	rlcf	___fttol@lval+2,f,c
  5350  0016C0  362F               	rlcf	___fttol@lval+3,f,c
  5351  0016C2  0630               	decf	___fttol@exp1,f,c
  5352  0016C4                     l3745:
  5353  0016C4  5030               	movf	___fttol@exp1,w,c
  5354  0016C6  A4D8               	btfss	status,2,c
  5355  0016C8  D7F7               	goto	l3743
  5356  0016CA                     u4450:
  5357  0016CA  502B               	movf	___fttol@sign1,w,c
  5358  0016CC  B4D8               	btfsc	status,2,c
  5359  0016CE  D008               	goto	l3751
  5360  0016D0  1E2F               	comf	___fttol@lval+3,f,c
  5361  0016D2  1E2E               	comf	___fttol@lval+2,f,c
  5362  0016D4  1E2D               	comf	___fttol@lval+1,f,c
  5363  0016D6  6C2C               	negf	___fttol@lval,c
  5364  0016D8  0E00               	movlw	0
  5365  0016DA  222D               	addwfc	___fttol@lval+1,f,c
  5366  0016DC  222E               	addwfc	___fttol@lval+2,f,c
  5367  0016DE  222F               	addwfc	___fttol@lval+3,f,c
  5368  0016E0                     l3751:
  5369  0016E0  C02C  F022         	movff	___fttol@lval,?___fttol
  5370  0016E4  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  5371  0016E8  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  5372  0016EC  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  5373  0016F0  0012               	return		;funcret
  5374  0016F2                     __end_of___fttol:
  5375                           	opt callstack 0
  5376                           
  5377 ;; *************** function ___ftsub *****************
  5378 ;; Defined at:
  5379 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  f1              3   30[COMRAM] float 
  5382 ;;  f2              3   33[COMRAM] float 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  3   30[COMRAM] float 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0, cstack
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5394 ;;      Params:         6       0       0       0       0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5397 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5398 ;;Total ram usage:        6 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; Hardware stack levels required when called:    7
  5401 ;; This function calls:
  5402 ;;		___ftadd
  5403 ;; This function is called by:
  5404 ;;		_disp_show_quantity
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text41
  5409  001DC6                     __ptext41:
  5410                           	opt callstack 0
  5411  001DC6                     ___ftsub:
  5412                           	opt callstack 22
  5413                           
  5414                           ;incstack = 0
  5415  001DC6  5022               	movf	___ftsub@f2,w,c
  5416  001DC8  1023               	iorwf	___ftsub@f2+1,w,c
  5417  001DCA  1024               	iorwf	___ftsub@f2+2,w,c
  5418  001DCC  B4D8               	btfsc	status,2,c
  5419  001DCE  D006               	goto	l3693
  5420  001DD0  0E00               	movlw	0
  5421  001DD2  1A22               	xorwf	___ftsub@f2,f,c
  5422  001DD4  0E00               	movlw	0
  5423  001DD6  1A23               	xorwf	___ftsub@f2+1,f,c
  5424  001DD8  0E80               	movlw	128
  5425  001DDA  1A24               	xorwf	___ftsub@f2+2,f,c
  5426  001DDC                     l3693:
  5427  001DDC  C01F  F013         	movff	___ftsub@f1,___ftadd@f1
  5428  001DE0  C020  F014         	movff	___ftsub@f1+1,___ftadd@f1+1
  5429  001DE4  C021  F015         	movff	___ftsub@f1+2,___ftadd@f1+2
  5430  001DE8  C022  F016         	movff	___ftsub@f2,___ftadd@f2
  5431  001DEC  C023  F017         	movff	___ftsub@f2+1,___ftadd@f2+1
  5432  001DF0  C024  F018         	movff	___ftsub@f2+2,___ftadd@f2+2
  5433  001DF4  EC6F  F008         	call	___ftadd	;wreg free
  5434  001DF8  C013  F01F         	movff	?___ftadd,?___ftsub
  5435  001DFC  C014  F020         	movff	?___ftadd+1,?___ftsub+1
  5436  001E00  C015  F021         	movff	?___ftadd+2,?___ftsub+2
  5437  001E04  0012               	return		;funcret
  5438  001E06                     __end_of___ftsub:
  5439                           	opt callstack 0
  5440                           
  5441 ;; *************** function ___ftadd *****************
  5442 ;; Defined at:
  5443 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  f1              3   18[COMRAM] float 
  5446 ;;  f2              3   21[COMRAM] float 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  exp1            1   29[COMRAM] unsigned char 
  5449 ;;  exp2            1   28[COMRAM] unsigned char 
  5450 ;;  sign            1   27[COMRAM] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  3   18[COMRAM] float 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5460 ;;      Params:         6       0       0       0       0       0       0       0       0
  5461 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5462 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5463 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5464 ;;Total ram usage:       12 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    6
  5467 ;; This function calls:
  5468 ;;		___ftpack
  5469 ;; This function is called by:
  5470 ;;		___ftsub
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text42
  5475  0010DE                     __ptext42:
  5476                           	opt callstack 0
  5477  0010DE                     ___ftadd:
  5478                           	opt callstack 22
  5479                           
  5480                           ;incstack = 0
  5481  0010DE  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  5482  0010E2  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  5483  0010E4  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  5484  0010E6  3414               	rlcf	___ftadd@f1+1,w,c
  5485  0010E8  3619               	rlcf	??___ftadd& (0+255),f,c
  5486  0010EA  E301               	bnc	u3671
  5487  0010EC  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  5488  0010EE                     u3671:
  5489  0010EE  5019               	movf	??___ftadd,w,c
  5490  0010F0  6E1E               	movwf	___ftadd@exp1,c
  5491  0010F2  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  5492  0010F6  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  5493  0010F8  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  5494  0010FA  3417               	rlcf	___ftadd@f2+1,w,c
  5495  0010FC  3619               	rlcf	??___ftadd& (0+255),f,c
  5496  0010FE  E301               	bnc	u3681
  5497  001100  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  5498  001102                     u3681:
  5499  001102  5019               	movf	??___ftadd,w,c
  5500  001104  6E1D               	movwf	___ftadd@exp2,c
  5501  001106  501E               	movf	___ftadd@exp1,w,c
  5502  001108  B4D8               	btfsc	status,2,c
  5503  00110A  D00A               	goto	u3710
  5504  00110C  501D               	movf	___ftadd@exp2,w,c
  5505  00110E  5C1E               	subwf	___ftadd@exp1,w,c
  5506  001110  B0D8               	btfsc	status,0,c
  5507  001112  D00D               	goto	l3419
  5508  001114  501E               	movf	___ftadd@exp1,w,c
  5509  001116  5C1D               	subwf	___ftadd@exp2,w,c
  5510  001118  6E19               	movwf	??___ftadd& (0+255),c
  5511  00111A  0E18               	movlw	24
  5512  00111C  6419               	cpfsgt	??___ftadd,c
  5513  00111E  D007               	goto	l3419
  5514  001120                     u3710:
  5515  001120  C016  F013         	movff	___ftadd@f2,?___ftadd
  5516  001124  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  5517  001128  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  5518  00112C  0012               	return	
  5519  00112E                     l3419:
  5520  00112E  501D               	movf	___ftadd@exp2,w,c
  5521  001130  B4D8               	btfsc	status,2,c
  5522  001132  D00A               	goto	u3740
  5523  001134  501E               	movf	___ftadd@exp1,w,c
  5524  001136  5C1D               	subwf	___ftadd@exp2,w,c
  5525  001138  B0D8               	btfsc	status,0,c
  5526  00113A  D00D               	goto	l3425
  5527  00113C  501D               	movf	___ftadd@exp2,w,c
  5528  00113E  5C1E               	subwf	___ftadd@exp1,w,c
  5529  001140  6E19               	movwf	??___ftadd& (0+255),c
  5530  001142  0E18               	movlw	24
  5531  001144  6419               	cpfsgt	??___ftadd,c
  5532  001146  D007               	goto	l3425
  5533  001148                     u3740:
  5534  001148  C013  F013         	movff	___ftadd@f1,?___ftadd
  5535  00114C  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  5536  001150  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  5537  001154  0012               	return	
  5538  001156                     l3425:
  5539  001156  0E06               	movlw	6
  5540  001158  6E1C               	movwf	___ftadd@sign,c
  5541  00115A  BE15               	btfsc	___ftadd@f1+2,7,c
  5542  00115C  8E1C               	bsf	___ftadd@sign,7,c
  5543  00115E  BE18               	btfsc	___ftadd@f2+2,7,c
  5544  001160  8C1C               	bsf	___ftadd@sign,6,c
  5545  001162  8E14               	bsf	___ftadd@f1+1,7,c
  5546  001164  0EFF               	movlw	255
  5547  001166  1613               	andwf	___ftadd@f1,f,c
  5548  001168  0EFF               	movlw	255
  5549  00116A  1614               	andwf	___ftadd@f1+1,f,c
  5550  00116C  0E00               	movlw	0
  5551  00116E  1615               	andwf	___ftadd@f1+2,f,c
  5552  001170  8E17               	bsf	___ftadd@f2+1,7,c
  5553  001172  0EFF               	movlw	255
  5554  001174  1616               	andwf	___ftadd@f2,f,c
  5555  001176  0EFF               	movlw	255
  5556  001178  1617               	andwf	___ftadd@f2+1,f,c
  5557  00117A  0E00               	movlw	0
  5558  00117C  1618               	andwf	___ftadd@f2+2,f,c
  5559  00117E  501D               	movf	___ftadd@exp2,w,c
  5560  001180  5C1E               	subwf	___ftadd@exp1,w,c
  5561  001182  B0D8               	btfsc	status,0,c
  5562  001184  D01B               	goto	l3451
  5563  001186                     u3770:
  5564  001186  90D8               	bcf	status,0,c
  5565  001188  3616               	rlcf	___ftadd@f2,f,c
  5566  00118A  3617               	rlcf	___ftadd@f2+1,f,c
  5567  00118C  3618               	rlcf	___ftadd@f2+2,f,c
  5568  00118E  061D               	decf	___ftadd@exp2,f,c
  5569  001190  501E               	movf	___ftadd@exp1,w,c
  5570  001192  181D               	xorwf	___ftadd@exp2,w,c
  5571  001194  B4D8               	btfsc	status,2,c
  5572  001196  D00D               	goto	l3449
  5573  001198  061C               	decf	___ftadd@sign,f,c
  5574  00119A  C01C  F019         	movff	___ftadd@sign,??___ftadd
  5575  00119E  0E07               	movlw	7
  5576  0011A0  1619               	andwf	??___ftadd,f,c
  5577  0011A2  B4D8               	btfsc	status,2,c
  5578  0011A4  D006               	goto	l3449
  5579  0011A6  D7EF               	goto	u3770
  5580  0011A8                     l3447:
  5581  0011A8  90D8               	bcf	status,0,c
  5582  0011AA  3215               	rrcf	___ftadd@f1+2,f,c
  5583  0011AC  3214               	rrcf	___ftadd@f1+1,f,c
  5584  0011AE  3213               	rrcf	___ftadd@f1,f,c
  5585  0011B0  2A1E               	incf	___ftadd@exp1,f,c
  5586  0011B2                     l3449:
  5587  0011B2  501D               	movf	___ftadd@exp2,w,c
  5588  0011B4  181E               	xorwf	___ftadd@exp1,w,c
  5589  0011B6  B4D8               	btfsc	status,2,c
  5590  0011B8  D01F               	goto	u3840
  5591  0011BA  D7F6               	goto	l3447
  5592  0011BC                     l3451:
  5593  0011BC  501E               	movf	___ftadd@exp1,w,c
  5594  0011BE  5C1D               	subwf	___ftadd@exp2,w,c
  5595  0011C0  B0D8               	btfsc	status,0,c
  5596  0011C2  D01A               	goto	u3840
  5597  0011C4                     u3810:
  5598  0011C4  90D8               	bcf	status,0,c
  5599  0011C6  3613               	rlcf	___ftadd@f1,f,c
  5600  0011C8  3614               	rlcf	___ftadd@f1+1,f,c
  5601  0011CA  3615               	rlcf	___ftadd@f1+2,f,c
  5602  0011CC  061E               	decf	___ftadd@exp1,f,c
  5603  0011CE  501E               	movf	___ftadd@exp1,w,c
  5604  0011D0  181D               	xorwf	___ftadd@exp2,w,c
  5605  0011D2  B4D8               	btfsc	status,2,c
  5606  0011D4  D00D               	goto	l3461
  5607  0011D6  061C               	decf	___ftadd@sign,f,c
  5608  0011D8  C01C  F019         	movff	___ftadd@sign,??___ftadd
  5609  0011DC  0E07               	movlw	7
  5610  0011DE  1619               	andwf	??___ftadd,f,c
  5611  0011E0  B4D8               	btfsc	status,2,c
  5612  0011E2  D006               	goto	l3461
  5613  0011E4  D7EF               	goto	u3810
  5614  0011E6                     l3459:
  5615  0011E6  90D8               	bcf	status,0,c
  5616  0011E8  3218               	rrcf	___ftadd@f2+2,f,c
  5617  0011EA  3217               	rrcf	___ftadd@f2+1,f,c
  5618  0011EC  3216               	rrcf	___ftadd@f2,f,c
  5619  0011EE  2A1D               	incf	___ftadd@exp2,f,c
  5620  0011F0                     l3461:
  5621  0011F0  501D               	movf	___ftadd@exp2,w,c
  5622  0011F2  181E               	xorwf	___ftadd@exp1,w,c
  5623  0011F4  A4D8               	btfss	status,2,c
  5624  0011F6  D7F7               	goto	l3459
  5625  0011F8                     u3840:
  5626  0011F8  AE1C               	btfss	___ftadd@sign,7,c
  5627  0011FA  D00C               	goto	l978
  5628  0011FC  0EFF               	movlw	255
  5629  0011FE  1A13               	xorwf	___ftadd@f1,f,c
  5630  001200  0EFF               	movlw	255
  5631  001202  1A14               	xorwf	___ftadd@f1+1,f,c
  5632  001204  0EFF               	movlw	255
  5633  001206  1A15               	xorwf	___ftadd@f1+2,f,c
  5634  001208  0E01               	movlw	1
  5635  00120A  2613               	addwf	___ftadd@f1,f,c
  5636  00120C  0E00               	movlw	0
  5637  00120E  2214               	addwfc	___ftadd@f1+1,f,c
  5638  001210  0E00               	movlw	0
  5639  001212  2215               	addwfc	___ftadd@f1+2,f,c
  5640  001214                     l978:
  5641  001214  AC1C               	btfss	___ftadd@sign,6,c
  5642  001216  D00C               	goto	l3467
  5643  001218  0EFF               	movlw	255
  5644  00121A  1A16               	xorwf	___ftadd@f2,f,c
  5645  00121C  0EFF               	movlw	255
  5646  00121E  1A17               	xorwf	___ftadd@f2+1,f,c
  5647  001220  0EFF               	movlw	255
  5648  001222  1A18               	xorwf	___ftadd@f2+2,f,c
  5649  001224  0E01               	movlw	1
  5650  001226  2616               	addwf	___ftadd@f2,f,c
  5651  001228  0E00               	movlw	0
  5652  00122A  2217               	addwfc	___ftadd@f2+1,f,c
  5653  00122C  0E00               	movlw	0
  5654  00122E  2218               	addwfc	___ftadd@f2+2,f,c
  5655  001230                     l3467:
  5656  001230  0E00               	movlw	0
  5657  001232  6E1C               	movwf	___ftadd@sign,c
  5658  001234  5013               	movf	___ftadd@f1,w,c
  5659  001236  2616               	addwf	___ftadd@f2,f,c
  5660  001238  5014               	movf	___ftadd@f1+1,w,c
  5661  00123A  2217               	addwfc	___ftadd@f2+1,f,c
  5662  00123C  5015               	movf	___ftadd@f1+2,w,c
  5663  00123E  2218               	addwfc	___ftadd@f2+2,f,c
  5664  001240  AE18               	btfss	___ftadd@f2+2,7,c
  5665  001242  D00E               	goto	l3477
  5666  001244  0EFF               	movlw	255
  5667  001246  1A16               	xorwf	___ftadd@f2,f,c
  5668  001248  0EFF               	movlw	255
  5669  00124A  1A17               	xorwf	___ftadd@f2+1,f,c
  5670  00124C  0EFF               	movlw	255
  5671  00124E  1A18               	xorwf	___ftadd@f2+2,f,c
  5672  001250  0E01               	movlw	1
  5673  001252  2616               	addwf	___ftadd@f2,f,c
  5674  001254  0E00               	movlw	0
  5675  001256  2217               	addwfc	___ftadd@f2+1,f,c
  5676  001258  0E00               	movlw	0
  5677  00125A  2218               	addwfc	___ftadd@f2+2,f,c
  5678  00125C  0E01               	movlw	1
  5679  00125E  6E1C               	movwf	___ftadd@sign,c
  5680  001260                     l3477:
  5681  001260  C016  F00B         	movff	___ftadd@f2,___ftpack@arg
  5682  001264  C017  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  5683  001268  C018  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  5684  00126C  C01E  F00E         	movff	___ftadd@exp1,___ftpack@exp
  5685  001270  C01C  F00F         	movff	___ftadd@sign,___ftpack@sign
  5686  001274  ECD4  F00B         	call	___ftpack	;wreg free
  5687  001278  C00B  F013         	movff	?___ftpack,?___ftadd
  5688  00127C  C00C  F014         	movff	?___ftpack+1,?___ftadd+1
  5689  001280  C00D  F015         	movff	?___ftpack+2,?___ftadd+2
  5690  001284  0012               	return		;funcret
  5691  001286                     __end_of___ftadd:
  5692                           	opt callstack 0
  5693                           
  5694 ;; *************** function ___ftmul *****************
  5695 ;; Defined at:
  5696 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  f1              3   18[COMRAM] float 
  5699 ;;  f2              3   21[COMRAM] float 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  5702 ;;  sign            1   32[COMRAM] unsigned char 
  5703 ;;  cntr            1   31[COMRAM] unsigned char 
  5704 ;;  exp             1   27[COMRAM] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  3   18[COMRAM] float 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5714 ;;      Params:         6       0       0       0       0       0       0       0       0
  5715 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5716 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5717 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5718 ;;Total ram usage:       15 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    6
  5721 ;; This function calls:
  5722 ;;		___ftpack
  5723 ;; This function is called by:
  5724 ;;		_disp_show_quantity
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text43
  5729  00152C                     __ptext43:
  5730                           	opt callstack 0
  5731  00152C                     ___ftmul:
  5732                           	opt callstack 23
  5733                           
  5734                           ;incstack = 0
  5735  00152C  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  5736  001530  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  5737  001532  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  5738  001534  3414               	rlcf	___ftmul@f1+1,w,c
  5739  001536  3619               	rlcf	??___ftmul& (0+255),f,c
  5740  001538  E301               	bnc	u4311
  5741  00153A  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  5742  00153C                     u4311:
  5743  00153C  5019               	movf	??___ftmul,w,c
  5744  00153E  6E1C               	movwf	___ftmul@exp,c
  5745  001540  501C               	movf	___ftmul@exp,w,c
  5746  001542  A4D8               	btfss	status,2,c
  5747  001544  D007               	goto	l3647
  5748  001546  0E00               	movlw	0
  5749  001548  6E13               	movwf	?___ftmul,c
  5750  00154A  0E00               	movlw	0
  5751  00154C  6E14               	movwf	?___ftmul+1,c
  5752  00154E  0E00               	movlw	0
  5753  001550  6E15               	movwf	?___ftmul+2,c
  5754  001552  0012               	return	
  5755  001554                     l3647:
  5756  001554  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  5757  001558  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  5758  00155A  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  5759  00155C  3417               	rlcf	___ftmul@f2+1,w,c
  5760  00155E  3619               	rlcf	??___ftmul& (0+255),f,c
  5761  001560  E301               	bnc	u4331
  5762  001562  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  5763  001564                     u4331:
  5764  001564  5019               	movf	??___ftmul,w,c
  5765  001566  6E21               	movwf	___ftmul@sign,c
  5766  001568  5021               	movf	___ftmul@sign,w,c
  5767  00156A  A4D8               	btfss	status,2,c
  5768  00156C  D007               	goto	l3653
  5769  00156E  0E00               	movlw	0
  5770  001570  6E13               	movwf	?___ftmul,c
  5771  001572  0E00               	movlw	0
  5772  001574  6E14               	movwf	?___ftmul+1,c
  5773  001576  0E00               	movlw	0
  5774  001578  6E15               	movwf	?___ftmul+2,c
  5775  00157A  0012               	return	
  5776  00157C                     l3653:
  5777  00157C  5021               	movf	___ftmul@sign,w,c
  5778  00157E  0F7B               	addlw	123
  5779  001580  261C               	addwf	___ftmul@exp,f,c
  5780  001582  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  5781  001586  5018               	movf	___ftmul@f2+2,w,c
  5782  001588  1A21               	xorwf	___ftmul@sign,f,c
  5783  00158A  0E80               	movlw	128
  5784  00158C  1621               	andwf	___ftmul@sign,f,c
  5785  00158E  8E14               	bsf	___ftmul@f1+1,7,c
  5786  001590  8E17               	bsf	___ftmul@f2+1,7,c
  5787  001592  0EFF               	movlw	255
  5788  001594  1616               	andwf	___ftmul@f2,f,c
  5789  001596  0EFF               	movlw	255
  5790  001598  1617               	andwf	___ftmul@f2+1,f,c
  5791  00159A  0E00               	movlw	0
  5792  00159C  1618               	andwf	___ftmul@f2+2,f,c
  5793  00159E  0E00               	movlw	0
  5794  0015A0  6E1D               	movwf	___ftmul@f3_as_product,c
  5795  0015A2  0E00               	movlw	0
  5796  0015A4  6E1E               	movwf	___ftmul@f3_as_product+1,c
  5797  0015A6  0E00               	movlw	0
  5798  0015A8  6E1F               	movwf	___ftmul@f3_as_product+2,c
  5799  0015AA  0E07               	movlw	7
  5800  0015AC  6E20               	movwf	___ftmul@cntr,c
  5801  0015AE                     l3667:
  5802  0015AE  A013               	btfss	___ftmul@f1,0,c
  5803  0015B0  D006               	goto	l3671
  5804  0015B2  5016               	movf	___ftmul@f2,w,c
  5805  0015B4  261D               	addwf	___ftmul@f3_as_product,f,c
  5806  0015B6  5017               	movf	___ftmul@f2+1,w,c
  5807  0015B8  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  5808  0015BA  5018               	movf	___ftmul@f2+2,w,c
  5809  0015BC  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  5810  0015BE                     l3671:
  5811  0015BE  90D8               	bcf	status,0,c
  5812  0015C0  3215               	rrcf	___ftmul@f1+2,f,c
  5813  0015C2  3214               	rrcf	___ftmul@f1+1,f,c
  5814  0015C4  3213               	rrcf	___ftmul@f1,f,c
  5815  0015C6  90D8               	bcf	status,0,c
  5816  0015C8  3616               	rlcf	___ftmul@f2,f,c
  5817  0015CA  3617               	rlcf	___ftmul@f2+1,f,c
  5818  0015CC  3618               	rlcf	___ftmul@f2+2,f,c
  5819  0015CE  2E20               	decfsz	___ftmul@cntr,f,c
  5820  0015D0  D7EE               	goto	l3667
  5821  0015D2  0E09               	movlw	9
  5822  0015D4  6E20               	movwf	___ftmul@cntr,c
  5823  0015D6                     l3677:
  5824  0015D6  A013               	btfss	___ftmul@f1,0,c
  5825  0015D8  D006               	goto	l3681
  5826  0015DA  5016               	movf	___ftmul@f2,w,c
  5827  0015DC  261D               	addwf	___ftmul@f3_as_product,f,c
  5828  0015DE  5017               	movf	___ftmul@f2+1,w,c
  5829  0015E0  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  5830  0015E2  5018               	movf	___ftmul@f2+2,w,c
  5831  0015E4  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  5832  0015E6                     l3681:
  5833  0015E6  90D8               	bcf	status,0,c
  5834  0015E8  3215               	rrcf	___ftmul@f1+2,f,c
  5835  0015EA  3214               	rrcf	___ftmul@f1+1,f,c
  5836  0015EC  3213               	rrcf	___ftmul@f1,f,c
  5837  0015EE  90D8               	bcf	status,0,c
  5838  0015F0  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  5839  0015F2  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  5840  0015F4  321D               	rrcf	___ftmul@f3_as_product,f,c
  5841  0015F6  2E20               	decfsz	___ftmul@cntr,f,c
  5842  0015F8  D7EE               	goto	l3677
  5843  0015FA  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  5844  0015FE  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5845  001602  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5846  001606  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  5847  00160A  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  5848  00160E  ECD4  F00B         	call	___ftpack	;wreg free
  5849  001612  C00B  F013         	movff	?___ftpack,?___ftmul
  5850  001616  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  5851  00161A  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  5852  00161E  0012               	return		;funcret
  5853  001620                     __end_of___ftmul:
  5854                           	opt callstack 0
  5855                           
  5856 ;; *************** function ___ftge *****************
  5857 ;; Defined at:
  5858 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  ff1             3   21[COMRAM] float 
  5861 ;;  ff2             3   24[COMRAM] float 
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;		None               void
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5873 ;;      Params:         6       0       0       0       0       0       0       0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5875 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5876 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5877 ;;Total ram usage:        9 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    5
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_ikey_parsing
  5884 ;;		_disp_show_quantity
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text44
  5889  001A0A                     __ptext44:
  5890                           	opt callstack 0
  5891  001A0A                     ___ftge:
  5892                           	opt callstack 23
  5893                           
  5894                           ;incstack = 0
  5895  001A0A  AE18               	btfss	___ftge@ff1+2,7,c
  5896  001A0C  D00F               	goto	l3485
  5897  001A0E  0E00               	movlw	0
  5898  001A10  6E1C               	movwf	??___ftge& (0+255),c
  5899  001A12  0E00               	movlw	0
  5900  001A14  6E1D               	movwf	(??___ftge+1)& (0+255),c
  5901  001A16  0E80               	movlw	128
  5902  001A18  6E1E               	movwf	(??___ftge+2)& (0+255),c
  5903  001A1A  5016               	movf	___ftge@ff1,w,c
  5904  001A1C  5C1C               	subwf	??___ftge,w,c
  5905  001A1E  6E16               	movwf	___ftge@ff1,c
  5906  001A20  5017               	movf	___ftge@ff1+1,w,c
  5907  001A22  581D               	subwfb	??___ftge+1,w,c
  5908  001A24  6E17               	movwf	___ftge@ff1+1,c
  5909  001A26  5018               	movf	___ftge@ff1+2,w,c
  5910  001A28  581E               	subwfb	??___ftge+2,w,c
  5911  001A2A  6E18               	movwf	___ftge@ff1+2,c
  5912  001A2C                     l3485:
  5913  001A2C  AE1B               	btfss	___ftge@ff2+2,7,c
  5914  001A2E  D00F               	goto	l3489
  5915  001A30  0E00               	movlw	0
  5916  001A32  6E1C               	movwf	??___ftge& (0+255),c
  5917  001A34  0E00               	movlw	0
  5918  001A36  6E1D               	movwf	(??___ftge+1)& (0+255),c
  5919  001A38  0E80               	movlw	128
  5920  001A3A  6E1E               	movwf	(??___ftge+2)& (0+255),c
  5921  001A3C  5019               	movf	___ftge@ff2,w,c
  5922  001A3E  5C1C               	subwf	??___ftge,w,c
  5923  001A40  6E19               	movwf	___ftge@ff2,c
  5924  001A42  501A               	movf	___ftge@ff2+1,w,c
  5925  001A44  581D               	subwfb	??___ftge+1,w,c
  5926  001A46  6E1A               	movwf	___ftge@ff2+1,c
  5927  001A48  501B               	movf	___ftge@ff2+2,w,c
  5928  001A4A  581E               	subwfb	??___ftge+2,w,c
  5929  001A4C  6E1B               	movwf	___ftge@ff2+2,c
  5930  001A4E                     l3489:
  5931  001A4E  0E00               	movlw	0
  5932  001A50  1A16               	xorwf	___ftge@ff1,f,c
  5933  001A52  0E00               	movlw	0
  5934  001A54  1A17               	xorwf	___ftge@ff1+1,f,c
  5935  001A56  0E80               	movlw	128
  5936  001A58  1A18               	xorwf	___ftge@ff1+2,f,c
  5937  001A5A  0E00               	movlw	0
  5938  001A5C  1A19               	xorwf	___ftge@ff2,f,c
  5939  001A5E  0E00               	movlw	0
  5940  001A60  1A1A               	xorwf	___ftge@ff2+1,f,c
  5941  001A62  0E80               	movlw	128
  5942  001A64  1A1B               	xorwf	___ftge@ff2+2,f,c
  5943  001A66  5019               	movf	___ftge@ff2,w,c
  5944  001A68  5C16               	subwf	___ftge@ff1,w,c
  5945  001A6A  501A               	movf	___ftge@ff2+1,w,c
  5946  001A6C  5817               	subwfb	___ftge@ff1+1,w,c
  5947  001A6E  501B               	movf	___ftge@ff2+2,w,c
  5948  001A70  5818               	subwfb	___ftge@ff1+2,w,c
  5949  001A72  B0D8               	btfsc	status,0,c
  5950  001A74  D002               	goto	l3495
  5951  001A76  90D8               	bcf	status,0,c
  5952  001A78  0012               	return	
  5953  001A7A                     l3495:
  5954  001A7A  80D8               	bsf	status,0,c
  5955  001A7C  0012               	return		;funcret
  5956  001A7E                     __end_of___ftge:
  5957                           	opt callstack 0
  5958                           
  5959 ;; *************** function ___awtoft *****************
  5960 ;; Defined at:
  5961 ;;		line 32 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awtoft.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  c               2   18[COMRAM] int 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  sign            1   21[COMRAM] unsigned char 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  3   18[COMRAM] float 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5975 ;;      Params:         3       0       0       0       0       0       0       0       0
  5976 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5978 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5979 ;;Total ram usage:        4 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    6
  5982 ;; This function calls:
  5983 ;;		___ftpack
  5984 ;; This function is called by:
  5985 ;;		_disp_show_quantity
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text45
  5990  001E06                     __ptext45:
  5991                           	opt callstack 0
  5992  001E06                     ___awtoft:
  5993                           	opt callstack 23
  5994                           
  5995                           ;incstack = 0
  5996  001E06  0E00               	movlw	0
  5997  001E08  6E16               	movwf	___awtoft@sign,c
  5998  001E0A  AE14               	btfss	___awtoft@c+1,7,c
  5999  001E0C  D006               	goto	l3705
  6000  001E0E  6C13               	negf	___awtoft@c,c
  6001  001E10  1E14               	comf	___awtoft@c+1,f,c
  6002  001E12  B0D8               	btfsc	status,0,c
  6003  001E14  2A14               	incf	___awtoft@c+1,f,c
  6004  001E16  0E01               	movlw	1
  6005  001E18  6E16               	movwf	___awtoft@sign,c
  6006  001E1A                     l3705:
  6007  001E1A  C013  F00B         	movff	___awtoft@c,___ftpack@arg
  6008  001E1E  C014  F00C         	movff	___awtoft@c+1,___ftpack@arg+1
  6009  001E22  6A0D               	clrf	___ftpack@arg+2,c
  6010  001E24  0E8E               	movlw	142
  6011  001E26  6E0E               	movwf	___ftpack@exp,c
  6012  001E28  C016  F00F         	movff	___awtoft@sign,___ftpack@sign
  6013  001E2C  ECD4  F00B         	call	___ftpack	;wreg free
  6014  001E30  C00B  F013         	movff	?___ftpack,?___awtoft
  6015  001E34  C00C  F014         	movff	?___ftpack+1,?___awtoft+1
  6016  001E38  C00D  F015         	movff	?___ftpack+2,?___awtoft+2
  6017  001E3C  0012               	return		;funcret
  6018  001E3E                     __end_of___awtoft:
  6019                           	opt callstack 0
  6020                           
  6021 ;; *************** function ___ftpack *****************
  6022 ;; Defined at:
  6023 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  arg             3   10[COMRAM] unsigned um
  6026 ;;  exp             1   13[COMRAM] unsigned char 
  6027 ;;  sign            1   14[COMRAM] unsigned char 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  3   10[COMRAM] float 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6039 ;;      Params:         5       0       0       0       0       0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6041 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6042 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6043 ;;Total ram usage:        8 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    5
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		___awtoft
  6050 ;;		___ftadd
  6051 ;;		___ftmul
  6052 ;;		___lwtoft
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text46
  6057  0017A8                     __ptext46:
  6058                           	opt callstack 0
  6059  0017A8                     ___ftpack:
  6060                           	opt callstack 22
  6061                           
  6062                           ;incstack = 0
  6063  0017A8  500E               	movf	___ftpack@exp,w,c
  6064  0017AA  B4D8               	btfsc	status,2,c
  6065  0017AC  D005               	goto	u3540
  6066  0017AE  500B               	movf	___ftpack@arg,w,c
  6067  0017B0  100C               	iorwf	___ftpack@arg+1,w,c
  6068  0017B2  100D               	iorwf	___ftpack@arg+2,w,c
  6069  0017B4  A4D8               	btfss	status,2,c
  6070  0017B6  D00C               	goto	l3347
  6071  0017B8                     u3540:
  6072  0017B8  0E00               	movlw	0
  6073  0017BA  6E0B               	movwf	?___ftpack,c
  6074  0017BC  0E00               	movlw	0
  6075  0017BE  6E0C               	movwf	?___ftpack+1,c
  6076  0017C0  0E00               	movlw	0
  6077  0017C2  6E0D               	movwf	?___ftpack+2,c
  6078  0017C4  0012               	return	
  6079  0017C6                     l3345:
  6080  0017C6  2A0E               	incf	___ftpack@exp,f,c
  6081  0017C8  90D8               	bcf	status,0,c
  6082  0017CA  320D               	rrcf	___ftpack@arg+2,f,c
  6083  0017CC  320C               	rrcf	___ftpack@arg+1,f,c
  6084  0017CE  320B               	rrcf	___ftpack@arg,f,c
  6085  0017D0                     l3347:
  6086  0017D0  0E00               	movlw	0
  6087  0017D2  140B               	andwf	___ftpack@arg,w,c
  6088  0017D4  6E10               	movwf	??___ftpack& (0+255),c
  6089  0017D6  0E00               	movlw	0
  6090  0017D8  140C               	andwf	___ftpack@arg+1,w,c
  6091  0017DA  6E11               	movwf	(??___ftpack+1)& (0+255),c
  6092  0017DC  0EFE               	movlw	254
  6093  0017DE  140D               	andwf	___ftpack@arg+2,w,c
  6094  0017E0  6E12               	movwf	(??___ftpack+2)& (0+255),c
  6095  0017E2  5010               	movf	??___ftpack,w,c
  6096  0017E4  1011               	iorwf	??___ftpack+1,w,c
  6097  0017E6  1012               	iorwf	??___ftpack+2,w,c
  6098  0017E8  B4D8               	btfsc	status,2,c
  6099  0017EA  D00C               	goto	l3353
  6100  0017EC  D7EC               	goto	l3345
  6101  0017EE                     l3349:
  6102  0017EE  2A0E               	incf	___ftpack@exp,f,c
  6103  0017F0  0E01               	movlw	1
  6104  0017F2  260B               	addwf	___ftpack@arg,f,c
  6105  0017F4  0E00               	movlw	0
  6106  0017F6  220C               	addwfc	___ftpack@arg+1,f,c
  6107  0017F8  0E00               	movlw	0
  6108  0017FA  220D               	addwfc	___ftpack@arg+2,f,c
  6109  0017FC  90D8               	bcf	status,0,c
  6110  0017FE  320D               	rrcf	___ftpack@arg+2,f,c
  6111  001800  320C               	rrcf	___ftpack@arg+1,f,c
  6112  001802  320B               	rrcf	___ftpack@arg,f,c
  6113  001804                     l3353:
  6114  001804  0E00               	movlw	0
  6115  001806  140B               	andwf	___ftpack@arg,w,c
  6116  001808  6E10               	movwf	??___ftpack& (0+255),c
  6117  00180A  0E00               	movlw	0
  6118  00180C  140C               	andwf	___ftpack@arg+1,w,c
  6119  00180E  6E11               	movwf	(??___ftpack+1)& (0+255),c
  6120  001810  0EFF               	movlw	255
  6121  001812  140D               	andwf	___ftpack@arg+2,w,c
  6122  001814  6E12               	movwf	(??___ftpack+2)& (0+255),c
  6123  001816  5010               	movf	??___ftpack,w,c
  6124  001818  1011               	iorwf	??___ftpack+1,w,c
  6125  00181A  1012               	iorwf	??___ftpack+2,w,c
  6126  00181C  B4D8               	btfsc	status,2,c
  6127  00181E  D006               	goto	l3357
  6128  001820  D7E6               	goto	l3349
  6129  001822                     l3355:
  6130  001822  060E               	decf	___ftpack@exp,f,c
  6131  001824  90D8               	bcf	status,0,c
  6132  001826  360B               	rlcf	___ftpack@arg,f,c
  6133  001828  360C               	rlcf	___ftpack@arg+1,f,c
  6134  00182A  360D               	rlcf	___ftpack@arg+2,f,c
  6135  00182C                     l3357:
  6136  00182C  BE0C               	btfsc	___ftpack@arg+1,7,c
  6137  00182E  D003               	goto	u3580
  6138  001830  0E02               	movlw	2
  6139  001832  600E               	cpfslt	___ftpack@exp,c
  6140  001834  D7F6               	goto	l3355
  6141  001836                     u3580:
  6142  001836  A00E               	btfss	___ftpack@exp,0,c
  6143  001838  9E0C               	bcf	___ftpack@arg+1,7,c
  6144  00183A  90D8               	bcf	status,0,c
  6145  00183C  320E               	rrcf	___ftpack@exp,f,c
  6146  00183E  500E               	movf	___ftpack@exp,w,c
  6147  001840  120D               	iorwf	___ftpack@arg+2,f,c
  6148  001842  500F               	movf	___ftpack@sign,w,c
  6149  001844  A4D8               	btfss	status,2,c
  6150  001846  8E0D               	bsf	___ftpack@arg+2,7,c
  6151  001848  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  6152  00184C  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  6153  001850  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  6154  001854  0012               	return		;funcret
  6155  001856                     __end_of___ftpack:
  6156                           	opt callstack 0
  6157                           
  6158 ;; *************** function _INTERRUPCION *****************
  6159 ;; Defined at:
  6160 ;;		line 366 in file "main.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6176 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6177 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6178 ;;Total ram usage:        6 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    4
  6181 ;; This function calls:
  6182 ;;		_mpap_job
  6183 ;; This function is called by:
  6184 ;;		Interrupt level 2
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	intcode
  6189  000008                     __pintcode:
  6190                           	opt callstack 0
  6191  000008                     _INTERRUPCION:
  6192                           	opt callstack 22
  6193                           
  6194                           ;incstack = 0
  6195  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6196  00000A  ED39  F00E         	call	int_func,f	;refresh shadow registers
  6197                           
  6198                           	psect	intcode_body
  6199  001C72                     __pintcode_body:
  6200                           	opt callstack 22
  6201  001C72                     int_func:
  6202                           	opt callstack 22
  6203  001C72  0006               	pop		; remove dummy address from shadow register refresh
  6204  001C74  CFFA F005          	movff	pclath,??_INTERRUPCION
  6205  001C78  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  6206  001C7C  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  6207  001C80  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  6208  001C84  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  6209  001C88  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  6210                           
  6211                           ;main.c: 368: if (TMR0IF)
  6212  001C8C  A4F2               	btfss	4082,2,c	;volatile
  6213  001C8E  D007               	goto	i2l152
  6214                           
  6215                           ;main.c: 369: {;main.c: 370: isr_flag.f1ms = 1;
  6216  001C90  804A               	bsf	_isr_flag,0,c	;volatile
  6217                           
  6218                           ;main.c: 371: mpap_job();
  6219  001C92  EC14  F00E         	call	_mpap_job	;wreg free
  6220                           
  6221                           ;main.c: 373: TMR0IF = 0;
  6222  001C96  94F2               	bcf	4082,2,c	;volatile
  6223                           
  6224                           ;main.c: 374: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  6225  001C98  68D7               	setf	4055,c	;volatile
  6226                           
  6227                           ;main.c: 375: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  6228  001C9A  0ED1               	movlw	209
  6229  001C9C  6ED6               	movwf	4054,c	;volatile
  6230  001C9E                     i2l152:
  6231  001C9E  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  6232  001CA2  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  6233  001CA6  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  6234  001CAA  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  6235  001CAE  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  6236  001CB2  C005  FFFA         	movff	??_INTERRUPCION,pclath
  6237  001CB6  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6238  001CB8  0011               	retfie		f
  6239  001CBA                     __end_of_INTERRUPCION:
  6240                           	opt callstack 0
  6241                           
  6242 ;; *************** function _mpap_job *****************
  6243 ;; Defined at:
  6244 ;;		line 151 in file "mpap.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  cod_ret         1    0        char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      char 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0
  6259 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6261 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6262 ;;Total ram usage:        1 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    3
  6265 ;; This function calls:
  6266 ;;		__mpap_off
  6267 ;;		_mpap_homming
  6268 ;;		_mpap_normal_mode
  6269 ;; This function is called by:
  6270 ;;		_INTERRUPCION
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text48
  6275  001C28                     __ptext48:
  6276                           	opt callstack 0
  6277  001C28                     _mpap_job:
  6278                           	opt callstack 22
  6279                           
  6280                           ;mpap.c: 153: int8_t cod_ret;;mpap.c: 155: if (mpap.mode == HOMMING_MODE)
  6281                           
  6282                           ;incstack = 0
  6283  001C28  0E02               	movlw	2
  6284  001C2A  183F               	xorwf	_mpap+7,w,c	;volatile
  6285  001C2C  A4D8               	btfss	status,2,c
  6286  001C2E  D003               	goto	i2l3223
  6287  001C30  EC71  F00D         	call	_mpap_homming	;wreg free
  6288  001C34  0012               	return	
  6289  001C36                     i2l3223:
  6290                           
  6291                           ;mpap.c: 158: else if (mpap.mode == NORMAL_MODE)
  6292  001C36  0E03               	movlw	3
  6293  001C38  183F               	xorwf	_mpap+7,w,c	;volatile
  6294  001C3A  A4D8               	btfss	status,2,c
  6295  001C3C  D003               	goto	i2l3227
  6296  001C3E  EC5D  F00E         	call	_mpap_normal_mode	;wreg free
  6297  001C42  0012               	return	
  6298  001C44                     i2l3227:
  6299                           
  6300                           ;mpap.c: 161: else if (mpap.mode == STALL_MODE)
  6301  001C44  043F               	decf	_mpap+7,w,c	;volatile
  6302  001C46  A4D8               	btfss	status,2,c
  6303  001C48  0012               	return	
  6304                           
  6305                           ;mpap.c: 162: {;mpap.c: 163: mpap.numSteps_tomove = 0x00;
  6306  001C4A  0E00               	movlw	0
  6307  001C4C  6E3D               	movwf	_mpap+5,c	;volatile
  6308  001C4E  0E00               	movlw	0
  6309  001C50  6E3C               	movwf	_mpap+4,c	;volatile
  6310                           
  6311                           ;mpap.c: 164: mpap_off();
  6312  001C52  D801               	call	i2u341_48
  6313  001C54  D00B               	goto	i2u341_49
  6314  001C56                     i2u341_48:
  6315  001C56  0005               	push	
  6316  001C58  0100               	movlb	0	; () banked
  6317  001C5A  6EFA               	movwf	pclath,c
  6318  001C5C  51DA               	movf	_mpap_off& (0+255),w,b
  6319  001C5E  6EFD               	movwf	tosl,c
  6320  001C60  51DB               	movf	(_mpap_off+1)& (0+255),w,b
  6321  001C62  6EFE               	movwf	tosh,c
  6322  001C64  50F8               	movf	tblptru,w,c
  6323  001C66  6EFF               	movwf	tosu,c
  6324  001C68  50FA               	movf	pclath,w,c
  6325  001C6A  0012               	return		;indir
  6326  001C6C                     i2u341_49:
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;mpap.c: 166: mpap.mode = IDLE_MODE;
  6330  001C6C  0E00               	movlw	0
  6331  001C6E  6E3F               	movwf	_mpap+7,c	;volatile
  6332  001C70  0012               	return	
  6333  001C72                     __end_of_mpap_job:
  6334                           	opt callstack 0
  6335                           
  6336 ;; *************** function _mpap_normal_mode *****************
  6337 ;; Defined at:
  6338 ;;		line 131 in file "mpap.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;		None
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  cod_ret         1    1[COMRAM] char 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      char 
  6345 ;; Registers used:
  6346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6352 ;;      Params:         0       0       0       0       0       0       0       0       0
  6353 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6355 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6356 ;;Total ram usage:        1 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    2
  6359 ;; This function calls:
  6360 ;;		_mpap_do1step
  6361 ;; This function is called by:
  6362 ;;		_mpap_job
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text49
  6367  001CBA                     __ptext49:
  6368                           	opt callstack 0
  6369  001CBA                     _mpap_normal_mode:
  6370                           	opt callstack 22
  6371                           
  6372                           ;mpap.c: 133: int8_t cod_ret = 0;
  6373                           
  6374                           ;incstack = 0
  6375  001CBA  0E00               	movlw	0
  6376  001CBC  6E02               	movwf	mpap_normal_mode@cod_ret,c
  6377                           
  6378                           ;mpap.c: 134: if (mpap.numSteps_tomove!=0)
  6379  001CBE  503C               	movf	_mpap+4,w,c	;volatile
  6380  001CC0  103D               	iorwf	_mpap+5,w,c	;volatile
  6381  001CC2  B4D8               	btfsc	status,2,c
  6382  001CC4  D01C               	goto	i2l589
  6383                           
  6384                           ;mpap.c: 135: {;mpap.c: 136: mpap_do1step(mpap.KI);
  6385  001CC6  503E               	movf	_mpap+6,w,c	;volatile
  6386  001CC8  ECA2  F00E         	call	_mpap_do1step
  6387                           
  6388                           ;mpap.c: 138: mpap.counter_steps+= mpap.KI;
  6389  001CCC  503E               	movf	_mpap+6,w,c	;volatile
  6390  001CCE  263A               	addwf	_mpap+2,f,c	;volatile
  6391  001CD0  0E00               	movlw	0
  6392  001CD2  BE3E               	btfsc	_mpap+6,7,c	;volatile
  6393  001CD4  0EFF               	movlw	255
  6394  001CD6  223B               	addwfc	_mpap+3,f,c	;volatile
  6395                           
  6396                           ;mpap.c: 140: mpap.numSteps_current+= mpap.KI;
  6397  001CD8  503E               	movf	_mpap+6,w,c	;volatile
  6398  001CDA  2638               	addwf	_mpap,f,c	;volatile
  6399  001CDC  0E00               	movlw	0
  6400  001CDE  BE3E               	btfsc	_mpap+6,7,c	;volatile
  6401  001CE0  0EFF               	movlw	255
  6402  001CE2  2239               	addwfc	_mpap+1,f,c	;volatile
  6403                           
  6404                           ;mpap.c: 142: if ( mpap.counter_steps== mpap.numSteps_tomove)
  6405  001CE4  503C               	movf	_mpap+4,w,c	;volatile
  6406  001CE6  183A               	xorwf	_mpap+2,w,c	;volatile
  6407  001CE8  E10A               	bnz	i2l589
  6408  001CEA  503D               	movf	_mpap+5,w,c	;volatile
  6409  001CEC  183B               	xorwf	_mpap+3,w,c	;volatile
  6410  001CEE  A4D8               	btfss	status,2,c
  6411  001CF0  D006               	goto	i2l589
  6412                           
  6413                           ;mpap.c: 143: {;mpap.c: 144: mpap.numSteps_tomove = 0;
  6414  001CF2  0E00               	movlw	0
  6415  001CF4  6E3D               	movwf	_mpap+5,c	;volatile
  6416  001CF6  0E00               	movlw	0
  6417  001CF8  6E3C               	movwf	_mpap+4,c	;volatile
  6418                           
  6419                           ;mpap.c: 145: cod_ret = 1;
  6420  001CFA  0E01               	movlw	1
  6421  001CFC  6E02               	movwf	mpap_normal_mode@cod_ret,c
  6422  001CFE                     i2l589:
  6423                           
  6424                           ;mpap.c: 146: };mpap.c: 147: };mpap.c: 148: return cod_ret;
  6425  001CFE  5002               	movf	mpap_normal_mode@cod_ret,w,c
  6426  001D00  0012               	return		;funcret
  6427  001D02                     __end_of_mpap_normal_mode:
  6428                           	opt callstack 0
  6429                           
  6430 ;; *************** function _mpap_homming *****************
  6431 ;; Defined at:
  6432 ;;		line 108 in file "mpap.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;		None
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  cod_ret         1    2[COMRAM] char 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      char 
  6439 ;; Registers used:
  6440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6446 ;;      Params:         0       0       0       0       0       0       0       0       0
  6447 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6448 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6449 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6450 ;;Total ram usage:        2 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    2
  6453 ;; This function calls:
  6454 ;;		_mpap_do1step
  6455 ;; This function is called by:
  6456 ;;		_mpap_job
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text50
  6461  001AE2                     __ptext50:
  6462                           	opt callstack 0
  6463  001AE2                     _mpap_homming:
  6464                           	opt callstack 22
  6465                           
  6466                           ;mpap.c: 110: int8_t cod_ret = 0;
  6467                           
  6468                           ;incstack = 0
  6469  001AE2  0E00               	movlw	0
  6470  001AE4  6E03               	movwf	mpap_homming@cod_ret,c
  6471                           
  6472                           ;mpap.c: 111: if (mpap.numSteps_tomove!=0)
  6473  001AE6  503C               	movf	_mpap+4,w,c	;volatile
  6474  001AE8  103D               	iorwf	_mpap+5,w,c	;volatile
  6475  001AEA  B4D8               	btfsc	status,2,c
  6476  001AEC  D024               	goto	i2l583
  6477                           
  6478                           ;mpap.c: 112: {;mpap.c: 113: mpap_do1step(mpap.KI);
  6479  001AEE  503E               	movf	_mpap+6,w,c	;volatile
  6480  001AF0  ECA2  F00E         	call	_mpap_do1step
  6481                           
  6482                           ;mpap.c: 115: mpap.counter_steps+= mpap.KI;
  6483  001AF4  503E               	movf	_mpap+6,w,c	;volatile
  6484  001AF6  263A               	addwf	_mpap+2,f,c	;volatile
  6485  001AF8  0E00               	movlw	0
  6486  001AFA  BE3E               	btfsc	_mpap+6,7,c	;volatile
  6487  001AFC  0EFF               	movlw	255
  6488  001AFE  223B               	addwfc	_mpap+3,f,c	;volatile
  6489                           
  6490                           ;mpap.c: 117: if (((PORTE & (1<<1))>>1) == 0)
  6491  001B00  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  6492  001B04  90D8               	bcf	status,0,c
  6493  001B06  3202               	rrcf	??_mpap_homming,f,c
  6494  001B08  B002               	btfsc	??_mpap_homming,0,c
  6495  001B0A  D006               	goto	i2l2873
  6496                           
  6497                           ;mpap.c: 118: {;mpap.c: 119: mpap.numSteps_tomove = 0x0000;
  6498  001B0C  0E00               	movlw	0
  6499  001B0E  6E3D               	movwf	_mpap+5,c	;volatile
  6500  001B10  0E00               	movlw	0
  6501  001B12  6E3C               	movwf	_mpap+4,c	;volatile
  6502                           
  6503                           ;mpap.c: 120: cod_ret = 1;
  6504  001B14  0E01               	movlw	1
  6505  001B16  6E03               	movwf	mpap_homming@cod_ret,c
  6506  001B18                     i2l2873:
  6507                           
  6508                           ;mpap.c: 121: };mpap.c: 122: if ( mpap.counter_steps == mpap.numSteps_tomove)
  6509  001B18  503C               	movf	_mpap+4,w,c	;volatile
  6510  001B1A  183A               	xorwf	_mpap+2,w,c	;volatile
  6511  001B1C  E10C               	bnz	i2l583
  6512  001B1E  503D               	movf	_mpap+5,w,c	;volatile
  6513  001B20  183B               	xorwf	_mpap+3,w,c	;volatile
  6514  001B22  A4D8               	btfss	status,2,c
  6515  001B24  D008               	goto	i2l583
  6516                           
  6517                           ;mpap.c: 123: {;mpap.c: 124: mpap.numSteps_tomove = 0x0000;
  6518  001B26  0E00               	movlw	0
  6519  001B28  6E3D               	movwf	_mpap+5,c	;volatile
  6520  001B2A  0E00               	movlw	0
  6521  001B2C  6E3C               	movwf	_mpap+4,c	;volatile
  6522                           
  6523                           ;mpap.c: 125: cod_ret = 1;
  6524  001B2E  0E01               	movlw	1
  6525  001B30  6E03               	movwf	mpap_homming@cod_ret,c
  6526                           
  6527                           ;mpap.c: 126: pulsonic.errors.flag.mpap_home_sensor = 1;
  6528  001B32  0101               	movlb	1	; () banked
  6529  001B34  8175               	bsf	(_pulsonic+117)& (0+255),0,b
  6530  001B36                     i2l583:
  6531                           
  6532                           ;mpap.c: 127: };mpap.c: 128: };mpap.c: 129: return cod_ret;
  6533  001B36  5003               	movf	mpap_homming@cod_ret,w,c
  6534  001B38  0012               	return		;funcret
  6535  001B3A                     __end_of_mpap_homming:
  6536                           	opt callstack 0
  6537                           
  6538 ;; *************** function _mpap_do1step *****************
  6539 ;; Defined at:
  6540 ;;		line 88 in file "mpap.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  KI              1    wreg     char 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  KI              1    0[COMRAM] char 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6554 ;;      Params:         0       0       0       0       0       0       0       0       0
  6555 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6557 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6558 ;;Total ram usage:        1 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    1
  6561 ;; This function calls:
  6562 ;;		__mpap_step1
  6563 ;;		__mpap_step2
  6564 ;;		__mpap_step3
  6565 ;;		__mpap_step4
  6566 ;; This function is called by:
  6567 ;;		_mpap_homming
  6568 ;;		_mpap_normal_mode
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text51
  6573  001D44                     __ptext51:
  6574                           	opt callstack 0
  6575  001D44                     _mpap_do1step:
  6576                           	opt callstack 22
  6577                           
  6578                           ;incstack = 0
  6579                           ;mpap_do1step@KI stored from wreg
  6580  001D44  6E01               	movwf	mpap_do1step@KI,c
  6581                           
  6582                           ;mpap.c: 90: static int8_t i = -1;;mpap.c: 92: i= i + KI;
  6583  001D46  504B               	movf	mpap_do1step@i,w,c
  6584  001D48  2401               	addwf	mpap_do1step@KI,w,c
  6585  001D4A  6E4B               	movwf	mpap_do1step@i,c
  6586                           
  6587                           ;mpap.c: 94: if (i>3){i=0;}
  6588  001D4C  504B               	movf	mpap_do1step@i,w,c
  6589  001D4E  0A80               	xorlw	128
  6590  001D50  0F7C               	addlw	-132
  6591  001D52  A0D8               	btfss	status,0,c
  6592  001D54  D002               	goto	i2l2531
  6593  001D56  0E00               	movlw	0
  6594  001D58  6E4B               	movwf	mpap_do1step@i,c
  6595  001D5A                     i2l2531:
  6596                           
  6597                           ;mpap.c: 95: if (i<0){i=3;}
  6598  001D5A  AE4B               	btfss	mpap_do1step@i,7,c
  6599  001D5C  D002               	goto	i2l2535
  6600  001D5E  0E03               	movlw	3
  6601  001D60  6E4B               	movwf	mpap_do1step@i,c
  6602  001D62                     i2l2535:
  6603                           
  6604                           ;mpap.c: 97: mpap_step[i]();
  6605  001D62  504B               	movf	mpap_do1step@i,w,c
  6606  001D64  0D02               	mullw	2
  6607  001D66  50F3               	movf	prodl,w,c
  6608  001D68  0FD2               	addlw	low _mpap_step
  6609  001D6A  6ED9               	movwf	fsr2l,c
  6610  001D6C  6ADA               	clrf	fsr2h,c
  6611  001D6E  D801               	call	i2u198_48
  6612  001D70  0012               	return	
  6613  001D72                     i2u198_48:
  6614  001D72  0005               	push	
  6615  001D74  6EFA               	movwf	pclath,c
  6616  001D76  50DE               	movf	postinc2,w,c
  6617  001D78  6EFD               	movwf	tosl,c
  6618  001D7A  50DE               	movf	postinc2,w,c
  6619  001D7C  6EFE               	movwf	tosh,c
  6620  001D7E  50F8               	movf	tblptru,w,c
  6621  001D80  6EFF               	movwf	tosu,c
  6622  001D82  50FA               	movf	pclath,w,c
  6623  001D84  0012               	return		;indir
  6624  001D86                     __end_of_mpap_do1step:
  6625                           	opt callstack 0
  6626                           
  6627 ;; *************** function __mpap_step3 *****************
  6628 ;; Defined at:
  6629 ;;		line 23 in file "mpap.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6643 ;;      Params:         0       0       0       0       0       0       0       0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6646 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6647 ;;Total ram usage:        0 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_mpap_do1step
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text52
  6657  001FFA                     __ptext52:
  6658                           	opt callstack 0
  6659  001FFA                     __mpap_step3:
  6660                           	opt callstack 22
  6661                           
  6662                           ;incstack = 0
  6663                           ;mpap.c: 25: do{LATD &= ~(1<<0);}while(0);
  6664  001FFA  908C               	bcf	3980,0,c	;volatile
  6665                           
  6666                           ;mpap.c: 26: do{LATD |= 1<<1;}while(0);
  6667  001FFC  828C               	bsf	3980,1,c	;volatile
  6668                           
  6669                           ;mpap.c: 27: do{LATD &= ~(1<<2);}while(0);
  6670  001FFE  948C               	bcf	3980,2,c	;volatile
  6671                           
  6672                           ;mpap.c: 28: do{LATD &= ~(1<<3);}while(0);
  6673  002000  968C               	bcf	3980,3,c	;volatile
  6674  002002  0012               	return		;funcret
  6675  002004                     __end_of__mpap_step3:
  6676                           	opt callstack 0
  6677                           
  6678 ;; *************** function __mpap_step2 *****************
  6679 ;; Defined at:
  6680 ;;		line 15 in file "mpap.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;		None
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      void 
  6687 ;; Registers used:
  6688 ;;		status,2, status,0
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6694 ;;      Params:         0       0       0       0       0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6697 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6698 ;;Total ram usage:        0 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_mpap_do1step
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text53
  6708  002004                     __ptext53:
  6709                           	opt callstack 0
  6710  002004                     __mpap_step2:
  6711                           	opt callstack 22
  6712                           
  6713                           ;incstack = 0
  6714                           ;mpap.c: 17: do{LATD &= ~(1<<0);}while(0);
  6715  002004  908C               	bcf	3980,0,c	;volatile
  6716                           
  6717                           ;mpap.c: 18: do{LATD &= ~(1<<1);}while(0);
  6718  002006  928C               	bcf	3980,1,c	;volatile
  6719                           
  6720                           ;mpap.c: 19: do{LATD |= 1<<2;}while(0);
  6721  002008  848C               	bsf	3980,2,c	;volatile
  6722                           
  6723                           ;mpap.c: 20: do{LATD &= ~(1<<3);}while(0);
  6724  00200A  968C               	bcf	3980,3,c	;volatile
  6725  00200C  0012               	return		;funcret
  6726  00200E                     __end_of__mpap_step2:
  6727                           	opt callstack 0
  6728                           
  6729 ;; *************** function __mpap_step1 *****************
  6730 ;; Defined at:
  6731 ;;		line 7 in file "mpap.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      void 
  6738 ;; Registers used:
  6739 ;;		status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6745 ;;      Params:         0       0       0       0       0       0       0       0       0
  6746 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6748 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6749 ;;Total ram usage:        0 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		_mpap_do1step
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text54
  6759  00200E                     __ptext54:
  6760                           	opt callstack 0
  6761  00200E                     __mpap_step1:
  6762                           	opt callstack 22
  6763                           
  6764                           ;incstack = 0
  6765                           ;mpap.c: 9: do{LATD &= ~(1<<0);}while(0);
  6766  00200E  908C               	bcf	3980,0,c	;volatile
  6767                           
  6768                           ;mpap.c: 10: do{LATD &= ~(1<<1);}while(0);
  6769  002010  928C               	bcf	3980,1,c	;volatile
  6770                           
  6771                           ;mpap.c: 11: do{LATD &= ~(1<<2);}while(0);
  6772  002012  948C               	bcf	3980,2,c	;volatile
  6773                           
  6774                           ;mpap.c: 12: do{LATD |= 1<<3;}while(0);
  6775  002014  868C               	bsf	3980,3,c	;volatile
  6776  002016  0012               	return		;funcret
  6777  002018                     __end_of__mpap_step1:
  6778                           	opt callstack 0
  6779                           
  6780 ;; *************** function __mpap_step4 *****************
  6781 ;; Defined at:
  6782 ;;		line 31 in file "mpap.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;		None
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      void 
  6789 ;; Registers used:
  6790 ;;		status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6796 ;;      Params:         0       0       0       0       0       0       0       0       0
  6797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6799 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6800 ;;Total ram usage:        0 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_mpap_do1step
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text55
  6810  002018                     __ptext55:
  6811                           	opt callstack 0
  6812  002018                     __mpap_step4:
  6813                           	opt callstack 22
  6814                           
  6815                           ;incstack = 0
  6816                           ;mpap.c: 33: do{LATD |= 1<<0;}while(0);
  6817  002018  808C               	bsf	3980,0,c	;volatile
  6818                           
  6819                           ;mpap.c: 34: do{LATD &= ~(1<<1);}while(0);
  6820  00201A  928C               	bcf	3980,1,c	;volatile
  6821                           
  6822                           ;mpap.c: 35: do{LATD &= ~(1<<2);}while(0);
  6823  00201C  948C               	bcf	3980,2,c	;volatile
  6824                           
  6825                           ;mpap.c: 36: do{LATD &= ~(1<<3);}while(0);
  6826  00201E  968C               	bcf	3980,3,c	;volatile
  6827  002020  0012               	return		;funcret
  6828  002022                     __end_of__mpap_step4:
  6829                           	opt callstack 0
  6830                           
  6831 ;; *************** function __mpap_off *****************
  6832 ;; Defined at:
  6833 ;;		line 45 in file "mpap.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		status,2, status,0
  6842 ;; Tracked objects:
  6843 ;;		On entry : 3F/0
  6844 ;;		On exit  : 3F/0
  6845 ;;		Unchanged: 3F/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6847 ;;      Params:         0       0       0       0       0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6851 ;;Total ram usage:        0 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_mpap_job
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text56
  6861  002022                     __ptext56:
  6862                           	opt callstack 0
  6863  002022                     __mpap_off:
  6864                           	opt callstack 24
  6865                           
  6866                           ; BSR set to: 0
  6867                           
  6868                           ; BSR set to: 0
  6869                           
  6870                           ;incstack = 0
  6871                           ;mpap.c: 47: do{LATD &= ~(1<<0);}while(0);
  6872  002022  908C               	bcf	3980,0,c	;volatile
  6873                           
  6874                           ; BSR set to: 0
  6875                           
  6876                           ;mpap.c: 48: do{LATD &= ~(1<<1);}while(0);
  6877  002024  928C               	bcf	3980,1,c	;volatile
  6878                           
  6879                           ; BSR set to: 0
  6880                           
  6881                           ;mpap.c: 49: do{LATD &= ~(1<<2);}while(0);
  6882  002026  948C               	bcf	3980,2,c	;volatile
  6883                           
  6884                           ; BSR set to: 0
  6885                           
  6886                           ;mpap.c: 50: do{LATD &= ~(1<<3);}while(0);
  6887  002028  968C               	bcf	3980,3,c	;volatile
  6888                           
  6889                           ; BSR set to: 0
  6890  00202A  0012               	return		;funcret
  6891  00202C                     __end_of__mpap_off:
  6892                           	opt callstack 0
  6893                           
  6894                           	psect	text57
  6895  000000                     __ptext57:
  6896                           	opt callstack 0
  6897                           
  6898                           	psect	rparam
  6899  0000                     
  6900                           	psect	temp
  6901  00004C                     btemp:
  6902                           	opt callstack 0
  6903  00004C                     	ds	1
  6904  0000                     int$flags	set	btemp
  6905  0000                     wtemp8	set	btemp+1
  6906  0000                     ttemp5	set	btemp+1
  6907  0000                     ttemp6	set	btemp+4
  6908  0000                     ttemp7	set	btemp+8
  6909                           tosu	equ	0xFFF
  6910                           tosh	equ	0xFFE
  6911                           tosl	equ	0xFFD
  6912                           stkptr	equ	0xFFC
  6913                           pclatu	equ	0xFFB
  6914                           pclath	equ	0xFFA
  6915                           pcl	equ	0xFF9
  6916                           tblptru	equ	0xFF8
  6917                           tblptrh	equ	0xFF7
  6918                           tblptrl	equ	0xFF6
  6919                           tablat	equ	0xFF5
  6920                           prodh	equ	0xFF4
  6921                           prodl	equ	0xFF3
  6922                           indf0	equ	0xFEF
  6923                           postinc0	equ	0xFEE
  6924                           postdec0	equ	0xFED
  6925                           preinc0	equ	0xFEC
  6926                           plusw0	equ	0xFEB
  6927                           fsr0h	equ	0xFEA
  6928                           fsr0l	equ	0xFE9
  6929                           wreg	equ	0xFE8
  6930                           indf1	equ	0xFE7
  6931                           postinc1	equ	0xFE6
  6932                           postdec1	equ	0xFE5
  6933                           preinc1	equ	0xFE4
  6934                           plusw1	equ	0xFE3
  6935                           fsr1h	equ	0xFE2
  6936                           fsr1l	equ	0xFE1
  6937                           bsr	equ	0xFE0
  6938                           indf2	equ	0xFDF
  6939                           postinc2	equ	0xFDE
  6940                           postdec2	equ	0xFDD
  6941                           preinc2	equ	0xFDC
  6942                           plusw2	equ	0xFDB
  6943                           fsr2h	equ	0xFDA
  6944                           fsr2l	equ	0xFD9
  6945                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        31
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      75
    BANK0           160     19     143
    BANK1           256      0     123
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    S388_multiplexedDisp$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    multiplexedDisp.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    S275_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S275_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 


Critical Paths under _main in COMRAM

    _main->_disp_show_quantity
    _nozzle_moveto->_mpap_setupToTurn
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _ikb_flush->_ikey_clear_all_flag
    _display7s_job->_multiplexedDisp_job
    _display7s_init->_multiplexedDisp_init
    _disp_show_quantity->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___awtoft->___ftpack

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _main->_disp_show_quantity

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   29617
                                             52 COMRAM     3     3      0
                 _disp_show_quantity
                     _display7s_init
                      _display7s_job
                          _ikb_flush
                           _ikb_init
                            _ikb_job
              _ikb_key_is_ready2read
                _mpap_setupToHomming
                          _mpap_sych
                      _nozzle_moveto
                          _pump_tick
 ---------------------------------------------------------------------------------
 (1) _pump_tick                                            1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _nozzle_moveto                                        1     1      0    1001
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     737
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mpap_setupToHomming                                  0     0      0     242
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToTurn                                     4     2      2     242
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ikb_key_is_ready2read                                1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8700
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
                   _keyRead_pin_key5 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key5                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    8237
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3774
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_flush                                            0     0      0      68
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (2) _ikey_clear_all_flag                                  1     1      0      68
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display7s_job                                        0     0      0     134
                _multiplexedDisp_job
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_job                                  8     8      0     134
                                             10 COMRAM     8     8      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (1) _display7s_init                                       0     0      0      68
               _multiplexedDisp_init
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_init                                 1     1      0      68
                                             10 COMRAM     1     1      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disp_show_quantity                                  23    20      3   19053
                                             48 COMRAM     4     1      3
                                              0 BANK0     19    19      0
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     1      5    2226
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     621
                                             33 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5414
                                             30 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4998
                                             18 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4127
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1818
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3536
                                             18 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3313
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (6) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (7) _mpap_normal_mode                                     1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (7) _mpap_homming                                         2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (8) _mpap_do1step                                         1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (9) __mpap_step4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) __mpap_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disp_show_quantity
     ___awtoft
       ___ftpack
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _display7s_init
     _multiplexedDisp_init
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _display7s_job
     _multiplexedDisp_job
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
       _keyRead_pin_key5 *
   _ikb_key_is_ready2read
   _mpap_setupToHomming
     _mpap_setupToTurn
       ___wmul (ARG)
   _mpap_sych
   _nozzle_moveto
     ___wmul
     _mpap_setupToTurn
       ___wmul (ARG)
   _pump_tick

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7B       7       48.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      8F       5       89.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     155      20        0.0%
DATA                 0      0     155       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul 11 16:03:29 2019

          ??_mpap_setupToHomming 0015                               l85 1E6E  
            ___wmul@multiplicand 000D                      __CFG_BORV$3 000000  
                   ___ftadd@exp1 001E                     ___ftadd@exp2 001D  
                   ___ftadd@sign 001C                              l134 149E  
                            l303 093A                              l320 0A3A  
                            l322 0A9C                              l332 0D58  
                            l324 0AE0                              l316 0994  
                            l341 0E14                              l309 08F0  
                            l326 0C2C                              l318 09F6  
                            l336 0D8C                              l338 0DC2  
                            l564 1EBA                              l566 1EBE  
                            l978 1214                              _GIE 007F97  
                 ?_display7s_job 0001                     __CFG_BOR$OFF 000000  
                            _key 0060                              tosl 000FFD  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             l1127 1B82  
                           l1137 1D3A                             l1319 196E  
                           l2055 1E52                             l3041 172A  
                           l3201 19DA                             l3211 19F6  
                           l2503 1C24                             l3401 1D18  
                           l3181 19A4                             l3407 1D30  
                           l3353 1804                             l3345 17C6  
                           l3425 1156                             l3505 18FE  
                           l2801 1F94                             l3601 0C1C  
                           l3185 19B0                             l3355 1822  
                           l3347 17D0                             l3451 11BC  
                           l3419 112E                             l3515 1930  
                           l3195 19D0                             l3357 182C  
                           l3349 17EE                             l3461 11F0  
                           l3381 1B58                             l2813 1D8A  
                           l2661 128A                             l3197 19D2  
                           l3447 11A8                             l3391 1B78  
                           l2831 18C4                             l3551 0880  
                           l3705 1E1A                             l3449 11B2  
                           l3625 0E34                             l3609 0CDE  
                           l3561 08D0                             l3553 0890  
                           l3467 1230                             l3459 11E6  
                           l3715 164C                             l3379 1B50  
                           l3811 1030                             l2827 185C  
                           l3539 0812                             l2667 12C8  
                           l3485 1A2C                             l3653 157C  
                           l3477 1260                             l3733 16A0  
                           l3637 1E8A                             l3805 0FFA  
                           l3557 08B0                             l2685 139A  
                           l2677 133A                             l3901 1496  
                           l3495 1A7A                             l3671 15BE  
                           l3647 1554                             l3751 16E0  
                           l3743 16B8                             l3399 1D10  
                           l3823 105E                             l3815 1044  
                           l2679 135A                             l3489 1A4E  
                           l3681 15E6                             l3745 16C4  
                           l3737 16B0                             l2697 141E  
                           l3667 15AE                             l3595 0B92  
                           l3923 14EA                             l3915 14C6  
                           l3677 15D6                             l3693 1DDC  
                           l3837 1096                             l3933 150C  
                           l3847 10A6                             l3839 109C  
                           l3791 0FC2                             l3783 0FA2  
                           l3759 0E6A                             l3919 14D8  
                           l3927 14FA                             l3769 0F2A  
                           l3787 0FB6                             l3939 1520  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             u2320 132A  
                           _LATD 000F8C                             _LATE 000F8D  
                           u2318 1310                             u3230 1FC6  
                           u2319 1324                             u2348 137E  
                           u2349 1392                             u2278 12AC  
                           u3270 19A0                             u4311 153C  
                           u2279 12C0                             u4400 163A  
                           u4410 166A                             u4331 1564  
                           u3540 17B8                             u3620 1B5C  
                           u2804 1872                             u2388 13E4  
                           u2805 186C                             u2389 13F8  
                           u3710 1120                             u4510 0F9E  
                           u2814 188C                             u4415 1662  
                           u2815 1886                             u4520 0FB2  
                           u3810 11C4                             u4450 16CA  
                           u3650 1D1C                             u3580 1836  
                           u3740 1148                             u4550 102C  
                           u2838 18B0                             u3671 10EE  
                           u4391 1630                             u3840 11F8  
                           u4560 1040                             u2848 18D4  
                           u3681 1102                             u2849 18E8  
                           u3770 1186                             u2788 1D9A  
                           u2789 1DAE                             _UCFG 000F6F  
                           _UCON 000F6D                     __CFG_PWRT$ON 000000  
          _ikb_key_is_ready2read 1FAE                  ?_display7s_init 0001  
    __size_of_disp_show_quantity 02A0                             _main 1426  
                   ___ftpack@arg 000B                             _lock 0046  
                           _itoa 1E72                             _mpap 0038  
                   ___ftpack@exp 000E                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 004C                             _utoa 18F6  
                  _nozzle_moveto 1ED4                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
                  __CFG_IESO$OFF 000000              _multiplexedDisp0_on 2064  
            _multiplexedDisp1_on 205C              _multiplexedDisp2_on 2054  
            _multiplexedDisp3_on 204C              _multiplexedDisp4_on 206C  
                  __CFG_MCLRE$ON 000000                     ___ftmul@cntr 0020  
           __end_of_DISP7S_CHARS 080D                     ___param_bank 000000  
                   ___ftmul@sign 0021              _multiplexedDisp_job 1856  
                   ___fttol@exp1 0030                     ___fttol@lval 002C  
                  __CFG_PLLDIV$5 000000                            ?_main 0001  
                          ?_itoa 001A                  __end_of___ftadd 1286  
                          _CMCON 000FB4                            ?_utoa 0012  
                __end_of___ftmul 1620                            _T0CON 000FD5  
                __end_of___ftsub 1E06                  __end_of___fttol 16F2  
                __end_of___lwdiv 1B8C                  __end_of___lwmod 1D44  
                          i2l152 1C9E                            i2l583 1B36  
                          i2l589 1CFE                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
                  __CFG_USBDIV$2 000000                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
           ?_multiplexedDisp0_on 0001             ?_multiplexedDisp1_on 0001  
           ?_multiplexedDisp2_on 0001             ?_multiplexedDisp3_on 0001  
           ?_multiplexedDisp4_on 0001                   __CFG_FCMEN$OFF 000000  
                __end_of_ikb_job 1FE6             ?_multiplexedDisp_job 0001  
                  ___awtoft@sign 0016                    ?_INTERRUPCION 0001  
                  ___ftpack@sign 000F                            pclath 000FFA  
                          tablat 000FF5                            ttemp5 004D  
                          ttemp6 0050                            ttemp7 0054  
                          utoa@c 0019                            utoa@v 0017  
                          status 000FD8                   ?_nozzle_moveto 0001  
                          wtemp8 004D      __size_of_ikey_is_accessible 004C  
           _multiplexedDisp0_off 2068             _multiplexedDisp1_off 2060  
           _multiplexedDisp2_off 2058             _multiplexedDisp3_off 2050  
           _multiplexedDisp4_off 2048                    ?_ikey_parsing 0001  
           __size_of__mpap_step1 000A             __size_of__mpap_step2 000A  
           __size_of__mpap_step3 000A             __size_of__mpap_step4 000A  
                __initialization 1A7E                     __end_of_main 152C  
                   __end_of_itoa 1EA4             _multiplexedDisp_init 1D86  
                   __end_of_utoa 198A                  ??_display7s_job 0013  
                         ??_main 0035                    ___fttol@sign1 002B  
                         ??_itoa 001F                           ??_utoa 0017  
                  mpap_do1step@i 004B                    __activetblptr 000002  
          ??_multiplexedDisp0_on 000B            ??_multiplexedDisp1_on 000B  
          ??_multiplexedDisp2_on 000B            ??_multiplexedDisp3_on 000B  
          ??_multiplexedDisp4_on 000B            ??_multiplexedDisp_job 000B  
                 ??_INTERRUPCION 0005                           _ADCON1 000FC1  
       __end_of_keyRead_pin_key1 2034         __end_of_keyRead_pin_key2 1FFA  
       __end_of_keyRead_pin_key3 1FF0         __end_of_keyRead_pin_key4 2042  
       __end_of_keyRead_pin_key5 203C           ?_ikb_key_is_ready2read 0001  
               __end_of___awtoft 1E3E                 __end_of___ftpack 1856  
                         i2l3223 1C36                           i2l2531 1D5A  
                         i2l3227 1C44                           i2l2535 1D62  
                         i2l2873 1B18                 __end_of___lwtoft 1F72  
               pump_tick@cod_ret 000B                           _TMR0IE 007F95  
                         _TMR0IF 007F92            ?_multiplexedDisp0_off 0001  
          ?_multiplexedDisp1_off 0001            ?_multiplexedDisp2_off 0001  
          ?_multiplexedDisp3_off 0001            ?_multiplexedDisp4_off 0001  
                 ??_ikey_parsing 001F                   __CFG_VREGEN$ON 000000  
       __end_of_mpap_normal_mode 1D02                     pump_tick@sm0 0048  
       _error_requestToWriteDisp 0043                 __end_of_ikb_init 17A8  
          ?_multiplexedDisp_init 0001                           ___ftge 1A0A  
                         ___wmul 1F02                        ??___ftadd 0019  
                      ??___ftmul 0019                        ??___ftsub 0025  
                      ??___fttol 0026                        ??___lwdiv 000F  
                      ??___lwmod 000F                           clear_0 1AB6  
                         clear_1 1AC2                           clear_2 1ACE  
               __end_of_mpap_job 1C72                        ??_ikb_job 0024  
          ___ftmul@f3_as_product 001D         __end_of_mpap_setupToTurn 1ED4  
                   __pdataCOMRAM 004B                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8              ikey_is_accessible@k 000D  
                ??_nozzle_moveto 0015     __size_of_ikey_clear_all_flag 001E  
                     __accesstop 0060          __end_of__initialization 1AD4  
                __CFG_PBADEN$OFF 000000                    ?_mpap_do1step 0001  
                     ___ftadd@f1 0013                       ___ftadd@f2 0016  
                     ___ftge@ff1 0016                       ___ftge@ff2 0019  
                  ___rparam_used 000001                       ___awtoft@c 0013  
                     ___ftmul@f1 0013                       ___ftmul@f2 0016  
                     ___ftsub@f1 001F                       ___ftsub@f2 0022  
                     ___fttol@f1 0022                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1F72                    ?_mpap_homming 0001  
             __size_of__mpap_off 000A                       ___lwtoft@c 0013  
               ??_display7s_init 000C                     _DISP7S_CHARS 080B  
             __size_of_ikb_flush 0006                   mpap_do1step@KI 0001  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                 ??_mpap_do1step 0001           ??_multiplexedDisp0_off 000B  
         ??_multiplexedDisp1_off 000B           ??_multiplexedDisp2_off 000B  
         ??_multiplexedDisp3_off 000B           ??_multiplexedDisp4_off 000B  
             __size_of_ikey_scan 01A0      __end_of_mpap_setupToHomming 1FDC  
         ??_multiplexedDisp_init 000B                   ??_mpap_homming 0002  
                        ?___ftge 0016             __end_of_INTERRUPCION 1CBA  
             __size_of_mpap_sych 0080                          ?___wmul 000B  
                      ?___awtoft 0013                        ?___ftpack 000B  
                      ?___lwtoft 0013             __end_of_ikey_parsing 0E3E  
                     _disp_owner 0044               __size_of_pump_tick 0034  
     __end_of_disp_show_quantity 10DE                        ?_ikb_init 0001  
              __end_of__mpap_off 202C                   display7s_job@q 0042  
                      ?_mpap_job 0001                          __Hparam 0000  
                        __Lparam 0000                __end_of_ikb_flush 2048  
                __size_of___ftge 0074                          ___ftadd 10DE  
                __size_of___wmul 0026                          ___ftmul 152C  
                        ___ftsub 1DC6                          ___fttol 1620  
                        ___lwdiv 1B3A                          ___lwmod 1D02  
                   __psmallconst 0800                          __pcinit 1A7E  
                     ??___awtoft 0016                       ??___ftpack 0010  
                        __ramtop 0800                          __ptext0 1426  
                        __ptext1 1E3E                          __ptext2 1ED4  
                        __ptext3 1F02                          __ptext4 198A  
                        __ptext5 1FCA                          __ptext6 1EA4  
                        __ptext7 1FAE                          __ptext8 1FDC  
                        __ptext9 1286                __end_of_ikey_scan 1426  
                        _ikb_job 1FDC                       ??___lwtoft 0016  
                        _group_x 00B0         _error_grantedToWriteDisp 00BD  
        ??_ikb_key_is_ready2read 000B       disp_show_quantity@last_pos 00EB  
              __end_of_mpap_sych 1A0A          mpap_normal_mode@cod_ret 0002  
                     ??_ikb_init 000B                   __pintcode_body 1C72  
           end_of_initialization 1AD4       __end_of_ikey_is_accessible 1C28  
              ?_keyRead_pin_key1 0001                ?_keyRead_pin_key2 0001  
              ?_keyRead_pin_key3 0001                ?_keyRead_pin_key4 0001  
              ?_keyRead_pin_key5 0001                    ??__mpap_step1 0001  
                  ??__mpap_step2 0001                    ??__mpap_step3 0001  
                  ??__mpap_step4 0001                          itoa@buf 001A  
                        itoa@val 001B                    __Lmediumconst 0000  
                        int_func 1C72               ??_keyRead_pin_key1 000B  
             ??_keyRead_pin_key2 000B               ??_keyRead_pin_key3 000B  
             ??_keyRead_pin_key4 000B               ??_keyRead_pin_key5 000B  
            errorHandler_queue@c 00B5              errorHandler_queue@i 00B8  
                     ??_mpap_job 0004                ?_mpap_normal_mode 0001  
                main@c_access_kb 0035                          postdec1 000FE5  
                        postdec2 000FDD               ??_mpap_normal_mode 0002  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE           ikb_key_is_ready2read@k 000B  
              __end_of_pump_tick 1E72                          utoa@buf 0012  
    __end_of_multiplexedDisp0_on 2068      __end_of_multiplexedDisp1_on 2060  
    __end_of_multiplexedDisp2_on 2058      __end_of_multiplexedDisp3_on 2050  
                        utoa@val 0013      __end_of_multiplexedDisp4_on 2070  
            _ikey_clear_all_flag 1F90      __end_of_multiplexedDisp_job 18F6  
                   _machineState 0045             __end_of_mpap_do1step 1D86  
          __end_of_display7s_job 1F4E             ikey_clear_all_flag@i 000B  
              ?_mpap_setupToTurn 0011               ??_mpap_setupToTurn 0013  
           __end_of_mpap_homming 1B3A              nozzle_moveto@nozzle 0015  
           ?_ikey_clear_all_flag 0001            __size_of_INTERRUPCION 1CB2  
                    ___ftmul@exp 001C              __end_of__mpap_step1 2018  
            __end_of__mpap_step2 200E              __end_of__mpap_step3 2004  
            __end_of__mpap_step4 2022              __end_of_DISP7S_NUMS 080B  
                 __end_of___ftge 1A7E  mpap_setupToTurn@numSteps_tomove 0011  
          __size_of_ikey_parsing 0630                   __end_of___wmul 1F28  
                  __pidataCOMRAM 2070              start_initialization 1A7E  
                   _INTERRUPCION 0008            ??_ikey_clear_all_flag 000B  
                     ikey_scan@k 000C            __end_of_nozzle_moveto 1F02  
                   _ikey_parsing 080E           disp_show_quantity@buff 00DC  
                       ??___ftge 001C           disp_show_quantity@real 00E6  
                       ??___wmul 000F                      __pdataBANK0 00BE  
              __size_of___awtoft 0038                __size_of___ftpack 00AE  
                    __pbssCOMRAM 0038                __size_of___lwtoft 0024  
                  __pcstackBANK0 00DC                     mpap_sych@sm0 0041  
                  ikey_parsing@k 0023                __size_of_ikb_init 00B6  
                    __mpap_step1 200E                      __mpap_step2 2004  
                    __mpap_step3 1FFA                      __mpap_step4 2018  
                    _DISP7S_NUMS 0801    __size_of_multiplexedDisp0_off 0004  
  __size_of_multiplexedDisp1_off 0004    __size_of_multiplexedDisp2_off 0004  
  __size_of_multiplexedDisp3_off 0004    __size_of_multiplexedDisp4_off 0004  
                     mpap_sych@c 0040                        __mpap_off 2022  
               ___lwdiv@dividend 000B               _disp_show_quantity 0E3E  
              __size_of_mpap_job 004A                        __pintcode 0008  
  __size_of_multiplexedDisp_init 0040            __size_of_mpap_do1step 0042  
                       ?___ftadd 0013                         ?___ftmul 0013  
                       ?___ftsub 001F                         ?___fttol 0022  
                       ?___lwdiv 000B                         ?___lwmod 000B  
   __size_of_mpap_setupToHomming 0012              ?_disp_show_quantity 0031  
                      _ikb_flush 2042                         ?_ikb_job 0001  
                    __smallconst 0800            __size_of_mpap_homming 0058  
                _multiplexedDisp 00BE                        _main_flag 0049  
          multiplexedDisp_init@i 000B                        _ikey_scan 1286  
 __size_of_ikb_key_is_ready2read 001C                 ___lwdiv@quotient 0010  
  __end_of_ikb_key_is_ready2read 1FCA             ??_disp_show_quantity 0034  
                      _mpap_step 00D2                        _mpap_sych 198A  
                 ___wmul@product 000F                     _mpap_do1step 1D44  
        __size_of_display7s_init 0050                       ?__mpap_off 0001  
                       i2u341_48 1C56                         i2u341_49 1C6C  
                       i2u198_48 1D72               _ikey_is_accessible 1BDC  
                   _mpap_homming 1AE2        __size_of_keyRead_pin_key1 0008  
      __size_of_keyRead_pin_key2 000A        __size_of_keyRead_pin_key3 000A  
      __size_of_keyRead_pin_key4 0006        __size_of_keyRead_pin_key5 0008  
                     ?_ikb_flush 0001                ___wmul@multiplier 000B  
            ?_ikey_is_accessible 0001                        _pump_tick 1E3E  
                      ikb_init@i 000B        __size_of_mpap_normal_mode 0048  
                     ?_ikey_scan 0001                        copy_data0 1A92  
            mpap_homming@cod_ret 0003                       ?_mpap_sych 0001  
           ??_ikey_is_accessible 000B        __size_of_mpap_setupToTurn 0030  
                       __Hrparam 0000                       pump_tick@c 0047  
                       __Lrparam 0000            disp_show_quantity@num 00E9  
           check_startSignal@sm0 00BC             check_startSignal@sm1 00BB  
               __size_of___ftadd 01A8                 __size_of___ftmul 00F4  
               __size_of___ftsub 0040                 __size_of___fttol 00D2  
               __size_of___lwdiv 0052                 __size_of___lwmod 0042  
                       ___awtoft 1E06                         ___ftpack 17A8  
                     ?_pump_tick 0001                         ___lwtoft 1F4E  
               __size_of_ikb_job 000A     __size_of_multiplexedDisp0_on 0004  
   __size_of_multiplexedDisp1_on 0004     __size_of_multiplexedDisp2_on 0004  
   __size_of_multiplexedDisp3_on 0004     __size_of_multiplexedDisp4_on 0004  
          errorHandler_queue@sm0 00B7                  ___lwdiv@divisor 000D  
              check_oilLevel@sm0 00BA                check_oilLevel@sm1 00B9  
   __size_of_multiplexedDisp_job 00A0                  ___lwdiv@counter 000F  
                       __ptext10 203C                         __ptext11 1FE6  
                       __ptext20 1F90                         __ptext12 1FF0  
                       __ptext21 1F28                         __ptext13 202C  
                       __ptext30 205C                         __ptext22 1856  
                       __ptext14 2034                         __ptext31 2060  
                       __ptext23 1B8C                         __ptext15 080E  
                       __ptext40 1620                         __ptext32 2064  
                       __ptext24 1D86                         __ptext16 1BDC  
                       __ptext41 1DC6                         __ptext33 2068  
                       __ptext25 2048                         __ptext17 1F4E  
                       __ptext50 1AE2                         __ptext42 10DE  
                       __ptext34 206C                         __ptext26 204C  
                       __ptext18 16F2                         __ptext51 1D44  
                       __ptext43 152C                         __ptext35 0E3E  
                       __ptext27 2050                         __ptext19 2042  
                       __ptext52 1FFA                         __ptext44 1A0A  
                       __ptext36 1E72                         __ptext28 2054  
                       __ptext53 2004                         __ptext45 1E06  
                       __ptext37 18F6                         __ptext29 2058  
                       __ptext54 200E                         __ptext46 17A8  
                       __ptext38 1D02                         __ptext55 2018  
                       __ptext39 1B3A                         __ptext56 2022  
                       __ptext48 1C28                         __ptext57 0000  
                       __ptext49 1CBA                         _ikb_init 16F2  
           _mpap_setupToTurn$515 0013             multiplexedDisp_job@i 0012  
           multiplexedDisp_job@q 0011                    __size_of_main 0106  
                  __size_of_itoa 0032                    __size_of_utoa 0094  
                       _isr_flag 004A                         _mpap_job 1C28  
                       _mpap_off 00DA                      ??__mpap_off 0001  
         __size_of_display7s_job 0026                main@c_access_disp 0036  
                       int$flags 004C                         _pulsonic 0100  
                    ??_ikb_flush 000C            __CFG_CPUDIV$OSC1_PLL2 000000  
    __end_of_ikey_clear_all_flag 1FAE                      ??_ikey_scan 000B  
                       itoa@base 001D                         intlevel2 0000  
            _mpap_setupToHomming 1FCA                      ??_mpap_sych 000B  
               ___lwmod@dividend 000B                     ?__mpap_step1 0001  
                   ?__mpap_step2 0001                     ?__mpap_step3 0001  
                   ?__mpap_step4 0001                   _display7s_init 1B8C  
               _keyRead_pin_key1 202C                 _keyRead_pin_key2 1FF0  
               _keyRead_pin_key3 1FE6                 _keyRead_pin_key4 203C  
               _keyRead_pin_key5 2034             ?_mpap_setupToHomming 0001  
            disp_show_quantity@I 00EC              disp_show_quantity@f 0031  
            disp_show_quantity@i 00EE              disp_show_quantity@q 00EA  
                       utoa@base 0015                      ??_pump_tick 000B  
   __end_of_multiplexedDisp0_off 206C     __end_of_multiplexedDisp1_off 2064  
   __end_of_multiplexedDisp2_off 205C     __end_of_multiplexedDisp3_off 2054  
   __end_of_multiplexedDisp4_off 204C           __size_of_nozzle_moveto 002E  
                ___lwmod@divisor 000D                 _mpap_normal_mode 1CBA  
                  _display7s_job 1F28                  ___lwmod@counter 000F  
   __end_of_multiplexedDisp_init 1DC6                  main@unlock_pump 0037  
             __CFG_FOSC$HSPLL_HS 000000           __end_of_display7s_init 1BDC  
               _mpap_setupToTurn 1EA4  
