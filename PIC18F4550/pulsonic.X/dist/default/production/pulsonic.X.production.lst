

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul  6 04:09:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,keep,inline
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,keep,inline
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,keep,inline
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,keep,inline
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,keep,inline
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,keep,inline
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,keep,inline
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,keep,inline
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,keep,inline
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,keep,inline
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,keep,inline
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,keep,inline
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,keep,inline
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,keep,inline
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           ; Version 2.05
    78                           ; Generated 20/12/2018 GMT
    79                           ; 
    80                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4550 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  001ED4                     __pidataCOMRAM:
   114                           	opt callstack 0
   115                           
   116                           ;initializer for _mpap_step
   117  001ED4  FC                 	db	low __mpap_step1
   118  001ED5  1E                 	db	high __mpap_step1
   119  001ED6  F2                 	db	low __mpap_step2
   120  001ED7  1E                 	db	high __mpap_step2
   121  001ED8  E8                 	db	low __mpap_step3
   122  001ED9  1E                 	db	high __mpap_step3
   123  001EDA  06                 	db	low __mpap_step4
   124  001EDB  1F                 	db	high __mpap_step4
   125                           
   126                           ;initializer for _mpap_off
   127  001EDC  DE                 	db	low __mpap_off
   128  001EDD  1E                 	db	high __mpap_off
   129                           
   130                           	psect	idataBANK0
   131  001E8C                     __pidataBANK0:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for _multiplexedDisp
   135  001E8C  6A                 	db	low _multiplexedDisp0_off
   136  001E8D  1F                 	db	high _multiplexedDisp0_off
   137  001E8E  66                 	db	low _multiplexedDisp0_on
   138  001E8F  1F                 	db	high _multiplexedDisp0_on
   139  001E90  62                 	db	low _multiplexedDisp1_off
   140  001E91  1F                 	db	high _multiplexedDisp1_off
   141  001E92  5E                 	db	low _multiplexedDisp1_on
   142  001E93  1F                 	db	high _multiplexedDisp1_on
   143  001E94  5A                 	db	low _multiplexedDisp2_off
   144  001E95  1F                 	db	high _multiplexedDisp2_off
   145  001E96  56                 	db	low _multiplexedDisp2_on
   146  001E97  1F                 	db	high _multiplexedDisp2_on
   147  001E98  52                 	db	low _multiplexedDisp3_off
   148  001E99  1F                 	db	high _multiplexedDisp3_off
   149  001E9A  4E                 	db	low _multiplexedDisp3_on
   150  001E9B  1F                 	db	high _multiplexedDisp3_on
   151  001E9C  4A                 	db	low _multiplexedDisp4_off
   152  001E9D  1F                 	db	high _multiplexedDisp4_off
   153  001E9E  6E                 	db	low _multiplexedDisp4_on
   154  001E9F  1F                 	db	high _multiplexedDisp4_on
   155                           
   156                           	psect	smallconst
   157  000800                     __psmallconst:
   158                           	opt callstack 0
   159  000800  00                 	db	0
   160  000801                     _DISP7S_NUMS:
   161                           	opt callstack 0
   162  000801  3F                 	db	63
   163  000802  06                 	db	6
   164  000803  5B                 	db	91
   165  000804  4F                 	db	79
   166  000805  66                 	db	102
   167  000806  7D                 	db	125
   168  000807  76                 	db	118
   169  000808  07                 	db	7
   170  000809  7F                 	db	127
   171  00080A  67                 	db	103
   172  00080B                     __end_of_DISP7S_NUMS:
   173                           	opt callstack 0
   174  00080B                     _DISP7S_CHARS:
   175                           	opt callstack 0
   176  00080B  00                 	db	0
   177  00080C  40                 	db	64
   178  00080D                     __end_of_DISP7S_CHARS:
   179                           	opt callstack 0
   180  00080D  00                 	db	0	; dummy byte at the end
   181  0000                     
   182                           	psect	nvCOMRAM
   183  00005D                     __pnvCOMRAM:
   184                           	opt callstack 0
   185  00005D                     _t:
   186                           	opt callstack 0
   187  00005D                     	ds	2
   188  0000                     _TRISB	set	3987
   189  0000                     _TRISA	set	3986
   190  0000                     _PORTD	set	3971
   191  0000                     _PORTC	set	3970
   192  0000                     _TRISC	set	3988
   193  0000                     _TRISD	set	3989
   194  0000                     _TRISE	set	3990
   195  0000                     _TMR0L	set	4054
   196  0000                     _TMR0H	set	4055
   197  0000                     _T0CON	set	4053
   198  0000                     _UCFG	set	3951
   199  0000                     _UCON	set	3949
   200  0000                     _CMCON	set	4020
   201  0000                     _ADCON1	set	4033
   202  0000                     _LATB	set	3978
   203  0000                     _LATE	set	3981
   204  0000                     _LATC	set	3979
   205  0000                     _LATA	set	3977
   206  0000                     _PORTE	set	3972
   207  0000                     _LATD	set	3980
   208  0000                     _TMR0IF	set	32658
   209  0000                     _GIE	set	32663
   210  0000                     _TMR0IE	set	32661
   211                           
   212                           ; #config settings
   213  0000                     
   214                           	psect	cinit
   215  0019F2                     __pcinit:
   216                           	opt callstack 0
   217  0019F2                     start_initialization:
   218                           	opt callstack 0
   219  0019F2                     __initialization:
   220                           	opt callstack 0
   221                           
   222                           ; Initialize objects allocated to BANK0 (20 bytes)
   223                           ; load TBLPTR registers with __pidataBANK0
   224  0019F2  0E8C               	movlw	low __pidataBANK0
   225  0019F4  6EF6               	movwf	tblptrl,c
   226  0019F6  0E1E               	movlw	high __pidataBANK0
   227  0019F8  6EF7               	movwf	tblptrh,c
   228  0019FA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   229  0019FC  6EF8               	movwf	tblptru,c
   230  0019FE  EE00  F0B0         	lfsr	0,__pdataBANK0
   231  001A02  EE10 F014          	lfsr	1,20
   232  001A06                     copy_data0:
   233  001A06  0009               	tblrd		*+
   234  001A08  CFF5 FFEE          	movff	tablat,postinc0
   235  001A0C  50E5               	movf	postdec1,w,c
   236  001A0E  50E1               	movf	fsr1l,w,c
   237  001A10  E1FA               	bnz	copy_data0
   238                           
   239                           ; Initialize objects allocated to COMRAM (10 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241  001A12  0ED4               	movlw	low __pidataCOMRAM
   242  001A14  6EF6               	movwf	tblptrl,c
   243  001A16  0E1E               	movlw	high __pidataCOMRAM
   244  001A18  6EF7               	movwf	tblptrh,c
   245  001A1A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246  001A1C  6EF8               	movwf	tblptru,c
   247  001A1E  EE00  F053         	lfsr	0,__pdataCOMRAM
   248  001A22  EE10 F00A          	lfsr	1,10
   249  001A26                     copy_data1:
   250  001A26  0009               	tblrd		*+
   251  001A28  CFF5 FFEE          	movff	tablat,postinc0
   252  001A2C  50E5               	movf	postdec1,w,c
   253  001A2E  50E1               	movf	fsr1l,w,c
   254  001A30  E1FA               	bnz	copy_data1
   255                           
   256                           ; Clear objects allocated to BANK1 (123 bytes)
   257  001A32  EE01  F000         	lfsr	0,__pbssBANK1
   258  001A36  0E7B               	movlw	123
   259  001A38                     clear_0:
   260  001A38  6AEE               	clrf	postinc0,c
   261  001A3A  06E8               	decf	wreg,f,c
   262  001A3C  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to BANK0 (80 bytes)
   265  001A3E  EE00  F060         	lfsr	0,__pbssBANK0
   266  001A42  0E50               	movlw	80
   267  001A44                     clear_1:
   268  001A44  6AEE               	clrf	postinc0,c
   269  001A46  06E8               	decf	wreg,f,c
   270  001A48  E1FD               	bnz	clear_1
   271                           
   272                           ; Clear objects allocated to COMRAM (19 bytes)
   273  001A4A  EE00  F040         	lfsr	0,__pbssCOMRAM
   274  001A4E  0E13               	movlw	19
   275  001A50                     clear_2:
   276  001A50  6AEE               	clrf	postinc0,c
   277  001A52  06E8               	decf	wreg,f,c
   278  001A54  E1FD               	bnz	clear_2
   279  001A56                     end_of_initialization:
   280                           	opt callstack 0
   281  001A56                     __end_of__initialization:
   282                           	opt callstack 0
   283  001A56  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   284  001A58  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   285  001A5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   286  001A5C  6EF8               	movwf	tblptru,c
   287  001A5E  0100               	movlb	0
   288  001A60  EF16  F00A         	goto	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMRAM
   291  000040                     __pbssCOMRAM:
   292                           	opt callstack 0
   293  000040                     _mpap:
   294                           	opt callstack 0
   295  000040                     	ds	8
   296  000048                     _group_x:
   297                           	opt callstack 0
   298  000048                     	ds	5
   299  00004D                     _xx:
   300                           	opt callstack 0
   301  00004D                     	ds	2
   302  00004F                     display7s_job@q:
   303                           	opt callstack 0
   304  00004F                     	ds	1
   305  000050                     mpap_do1step@i:
   306                           	opt callstack 0
   307  000050                     	ds	1
   308  000051                     _main_flag:
   309                           	opt callstack 0
   310  000051                     	ds	1
   311  000052                     _isr_flag:
   312                           	opt callstack 0
   313  000052                     	ds	1
   314                           
   315                           	psect	dataCOMRAM
   316  000053                     __pdataCOMRAM:
   317                           	opt callstack 0
   318  000053                     _mpap_step:
   319                           	opt callstack 0
   320  000053                     	ds	8
   321  00005B                     _mpap_off:
   322                           	opt callstack 0
   323  00005B                     	ds	2
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	opt callstack 0
   328  000060                     _key:
   329                           	opt callstack 0
   330  000060                     	ds	80
   331                           
   332                           	psect	dataBANK0
   333  0000B0                     __pdataBANK0:
   334                           	opt callstack 0
   335  0000B0                     _multiplexedDisp:
   336                           	opt callstack 0
   337  0000B0                     	ds	20
   338                           
   339                           	psect	bssBANK1
   340  000100                     __pbssBANK1:
   341                           	opt callstack 0
   342  000100                     _pulsonic:
   343                           	opt callstack 0
   344  000100                     	ds	123
   345                           
   346                           	psect	cstackCOMRAM
   347  000001                     __pcstackCOMRAM:
   348                           	opt callstack 0
   349  000001                     ??_ikey_is_accessible:
   350  000001                     ??_multiplexedDisp_job:
   351  000001                     ?___wmul:
   352                           	opt callstack 0
   353  000001                     ?___lwdiv:
   354                           	opt callstack 0
   355  000001                     ?___lwmod:
   356                           	opt callstack 0
   357  000001                     ?___ftpack:
   358                           	opt callstack 0
   359  000001                     mpap_do1step@KI:
   360                           	opt callstack 0
   361  000001                     ikb_init@i:
   362                           	opt callstack 0
   363  000001                     ikb_key_is_ready2read@k:
   364                           	opt callstack 0
   365  000001                     ikey_clear_all_flag@i:
   366                           	opt callstack 0
   367  000001                     multiplexedDisp_init@i:
   368                           	opt callstack 0
   369  000001                     ___wmul@multiplier:
   370                           	opt callstack 0
   371  000001                     ___lwdiv@dividend:
   372                           	opt callstack 0
   373  000001                     ___lwmod@dividend:
   374                           	opt callstack 0
   375  000001                     ___ftpack@arg:
   376                           	opt callstack 0
   377                           
   378                           ; 3 bytes @ 0x0
   379  000001                     	ds	1
   380  000002                     ??_mpap_homming:
   381  000002                     mpap_normal_mode@cod_ret:
   382                           	opt callstack 0
   383  000002                     ikey_scan@k:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0x1
   387  000002                     	ds	1
   388  000003                     mpap_homming@cod_ret:
   389                           	opt callstack 0
   390  000003                     ikey_is_accessible@k:
   391                           	opt callstack 0
   392  000003                     ___wmul@multiplicand:
   393                           	opt callstack 0
   394  000003                     ___lwdiv@divisor:
   395                           	opt callstack 0
   396  000003                     ___lwmod@divisor:
   397                           	opt callstack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000003                     	ds	1
   401  000004                     ___ftpack@exp:
   402                           	opt callstack 0
   403                           
   404                           ; 1 bytes @ 0x3
   405  000004                     	ds	1
   406  000005                     ___ftpack@sign:
   407                           	opt callstack 0
   408  000005                     ___lwmod@counter:
   409                           	opt callstack 0
   410  000005                     ___wmul@product:
   411                           	opt callstack 0
   412  000005                     ___lwdiv@quotient:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x4
   416  000005                     	ds	1
   417  000006                     ??___ftpack:
   418                           
   419                           ; 1 bytes @ 0x5
   420  000006                     	ds	1
   421  000007                     multiplexedDisp_job@q:
   422                           	opt callstack 0
   423  000007                     ___lwdiv@counter:
   424                           	opt callstack 0
   425  000007                     mpap_setupToTurn@numSteps_tomove:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x6
   429  000007                     	ds	1
   430  000008                     multiplexedDisp_job@i:
   431                           	opt callstack 0
   432  000008                     utoa@buf:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x7
   436  000008                     	ds	1
   437  000009                     ?___ftadd:
   438                           	opt callstack 0
   439  000009                     ?___ftmul:
   440                           	opt callstack 0
   441  000009                     ?___awtoft:
   442                           	opt callstack 0
   443  000009                     ?___lwtoft:
   444                           	opt callstack 0
   445  000009                     _mpap_setupToTurn$149:
   446                           	opt callstack 0
   447  000009                     ___awtoft@c:
   448                           	opt callstack 0
   449  000009                     ___lwtoft@c:
   450                           	opt callstack 0
   451  000009                     utoa@val:
   452                           	opt callstack 0
   453  000009                     ___ftadd@f1:
   454                           	opt callstack 0
   455  000009                     ___ftmul@f1:
   456                           	opt callstack 0
   457                           
   458                           ; 3 bytes @ 0x8
   459  000009                     	ds	2
   460  00000B                     nozzle_moveto@nozzle:
   461                           	opt callstack 0
   462  00000B                     utoa@base:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0xA
   466  00000B                     	ds	1
   467  00000C                     ___awtoft@sign:
   468                           	opt callstack 0
   469  00000C                     ___ftadd@f2:
   470                           	opt callstack 0
   471  00000C                     ___ftge@ff1:
   472                           	opt callstack 0
   473  00000C                     ___ftmul@f2:
   474                           	opt callstack 0
   475                           
   476                           ; 3 bytes @ 0xB
   477  00000C                     	ds	1
   478  00000D                     utoa@v:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0xC
   482  00000D                     	ds	2
   483  00000F                     ??___ftadd:
   484  00000F                     ??___ftmul:
   485  00000F                     utoa@c:
   486                           	opt callstack 0
   487  00000F                     ___ftge@ff2:
   488                           	opt callstack 0
   489                           
   490                           ; 3 bytes @ 0xE
   491  00000F                     	ds	1
   492  000010                     itoa@buf:
   493                           	opt callstack 0
   494                           
   495                           ; 1 bytes @ 0xF
   496  000010                     	ds	1
   497  000011                     itoa@val:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x10
   501  000011                     	ds	1
   502  000012                     ??___ftge:
   503  000012                     ___ftadd@sign:
   504                           	opt callstack 0
   505  000012                     ___ftmul@exp:
   506                           	opt callstack 0
   507                           
   508                           ; 1 bytes @ 0x11
   509  000012                     	ds	1
   510  000013                     ___ftadd@exp2:
   511                           	opt callstack 0
   512  000013                     itoa@base:
   513                           	opt callstack 0
   514  000013                     ___ftmul@f3_as_product:
   515                           	opt callstack 0
   516                           
   517                           ; 3 bytes @ 0x12
   518  000013                     	ds	1
   519  000014                     ___ftadd@exp1:
   520                           	opt callstack 0
   521                           
   522                           ; 1 bytes @ 0x13
   523  000014                     	ds	1
   524  000015                     ??_ikey_parsing:
   525  000015                     ?___ftsub:
   526                           	opt callstack 0
   527  000015                     ___ftsub@f1:
   528                           	opt callstack 0
   529                           
   530                           ; 3 bytes @ 0x14
   531  000015                     	ds	1
   532  000016                     ___ftmul@cntr:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x15
   536  000016                     	ds	1
   537  000017                     ___ftmul@sign:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x16
   541  000017                     	ds	1
   542  000018                     ?___fttol:
   543                           	opt callstack 0
   544  000018                     ___ftsub@f2:
   545                           	opt callstack 0
   546  000018                     ___fttol@f1:
   547                           	opt callstack 0
   548                           
   549                           ; 3 bytes @ 0x17
   550  000018                     	ds	1
   551  000019                     ikey_parsing@k:
   552                           	opt callstack 0
   553                           
   554                           ; 1 bytes @ 0x18
   555  000019                     	ds	1
   556  00001A                     
   557                           ; 1 bytes @ 0x19
   558  00001A                     	ds	1
   559  00001B                     
   560                           ; 1 bytes @ 0x1A
   561  00001B                     	ds	1
   562  00001C                     ??___fttol:
   563                           
   564                           ; 1 bytes @ 0x1B
   565  00001C                     	ds	5
   566  000021                     ___fttol@sign1:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x20
   570  000021                     	ds	1
   571  000022                     ___fttol@lval:
   572                           	opt callstack 0
   573                           
   574                           ; 4 bytes @ 0x21
   575  000022                     	ds	4
   576  000026                     ___fttol@exp1:
   577                           	opt callstack 0
   578                           
   579                           ; 1 bytes @ 0x25
   580  000026                     	ds	1
   581  000027                     disp_show_quantity@f:
   582                           	opt callstack 0
   583                           
   584                           ; 3 bytes @ 0x26
   585  000027                     	ds	3
   586  00002A                     ??_disp_show_quantity:
   587                           
   588                           ; 1 bytes @ 0x29
   589  00002A                     	ds	1
   590  00002B                     disp_show_quantity@buff:
   591                           	opt callstack 0
   592                           
   593                           ; 10 bytes @ 0x2A
   594  00002B                     	ds	10
   595  000035                     disp_show_quantity@real:
   596                           	opt callstack 0
   597                           
   598                           ; 3 bytes @ 0x34
   599  000035                     	ds	3
   600  000038                     disp_show_quantity@num:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x37
   604  000038                     	ds	1
   605  000039                     disp_show_quantity@q:
   606                           	opt callstack 0
   607                           
   608                           ; 1 bytes @ 0x38
   609  000039                     	ds	1
   610  00003A                     disp_show_quantity@last_pos:
   611                           	opt callstack 0
   612                           
   613                           ; 1 bytes @ 0x39
   614  00003A                     	ds	1
   615  00003B                     disp_show_quantity@I:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x3A
   619  00003B                     	ds	2
   620  00003D                     disp_show_quantity@i:
   621                           	opt callstack 0
   622                           
   623                           ; 1 bytes @ 0x3C
   624  00003D                     	ds	1
   625  00003E                     main@c:
   626                           	opt callstack 0
   627                           
   628                           ; 1 bytes @ 0x3D
   629  00003E                     	ds	1
   630  00003F                     main@c_disp:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x3E
   634  00003F                     	ds	1
   635                           
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 275 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  c_disp          1   62[COMRAM] char 
   646 ;;  c               1   61[COMRAM] char 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 3F/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   656 ;;      Params:         0       0       0       0       0       0       0       0       0
   657 ;;      Locals:         2       0       0       0       0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0
   659 ;;      Totals:         2       0       0       0       0       0       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels required when called:    5
   662 ;; This function calls:
   663 ;;		_disp_show_quantity
   664 ;;		_display7s_init
   665 ;;		_display7s_job
   666 ;;		_ikb_flush
   667 ;;		_ikb_init
   668 ;;		_ikb_job
   669 ;;		_ikb_key_is_ready2read
   670 ;;		_mpap_job
   671 ;;		_mpap_setupToHomming
   672 ;;		_mpap_stop
   673 ;;		_nozzle_moveto
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text0
   680  00142C                     __ptext0:
   681                           	opt callstack 0
   682  00142C                     _main:
   683                           	opt callstack 26
   684                           
   685                           ;main.c: 277: LATA = 0x00;
   686                           
   687                           ;incstack = 0
   688  00142C  0E00               	movlw	0
   689  00142E  6E89               	movwf	3977,c	;volatile
   690                           
   691                           ;main.c: 278: LATC = 0x00;
   692  001430  0E00               	movlw	0
   693  001432  6E8B               	movwf	3979,c	;volatile
   694                           
   695                           ;main.c: 279: LATD = 0x00;
   696  001434  0E00               	movlw	0
   697  001436  6E8C               	movwf	3980,c	;volatile
   698                           
   699                           ;main.c: 280: LATE = 0x00;
   700  001438  0E00               	movlw	0
   701  00143A  6E8D               	movwf	3981,c	;volatile
   702                           
   703                           ;main.c: 281: LATB = 0x00;
   704  00143C  0E00               	movlw	0
   705  00143E  6E8A               	movwf	3978,c	;volatile
   706                           
   707                           ;main.c: 285: ADCON1 = 0x0F;
   708  001440  0E0F               	movlw	15
   709  001442  6EC1               	movwf	4033,c	;volatile
   710                           
   711                           ;main.c: 286: CMCON=0xCF;
   712  001444  0ECF               	movlw	207
   713  001446  6EB4               	movwf	4020,c	;volatile
   714                           
   715                           ;main.c: 289: UCON = 0;
   716  001448  0E00               	movlw	0
   717  00144A  6E6D               	movwf	3949,c	;volatile
   718                           
   719                           ;main.c: 290: UCFG = 1<<3;
   720  00144C  0E08               	movlw	8
   721  00144E  6E6F               	movwf	3951,c	;volatile
   722                           
   723                           ;main.c: 296: T0CON = 0B10000111;
   724  001450  0E87               	movlw	135
   725  001452  6ED5               	movwf	4053,c	;volatile
   726                           
   727                           ;main.c: 297: t=(uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) );
   728  001454  0EFF               	movlw	255
   729  001456  6E5E               	movwf	_t+1,c
   730  001458  0ED1               	movlw	209
   731  00145A  6E5D               	movwf	_t,c
   732                           
   733                           ;main.c: 298: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ) >
      +                          > 8);
   734  00145C  68D7               	setf	4055,c	;volatile
   735                           
   736                           ;main.c: 299: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ));
   737  00145E  0ED1               	movlw	209
   738  001460  6ED6               	movwf	4054,c	;volatile
   739                           
   740                           ;main.c: 300: TMR0IE = 1;
   741  001462  8AF2               	bsf	4082,5,c	;volatile
   742  001464  808D               	bsf	3981,0,c	;volatile
   743  001466  9096               	bcf	3990,0,c	;volatile
   744  001468  9095               	bcf	3989,0,c	;volatile
   745  00146A  9295               	bcf	3989,1,c	;volatile
   746  00146C  9495               	bcf	3989,2,c	;volatile
   747  00146E  9695               	bcf	3989,3,c	;volatile
   748  001470  928B               	bcf	3979,1,c	;volatile
   749  001472  9294               	bcf	3988,1,c	;volatile
   750  001474  8296               	bsf	3990,1,c	;volatile
   751                           
   752                           ;main.c: 316: display7s_init();
   753  001476  EC87  F00D         	call	_display7s_init	;wreg free
   754                           
   755                           ;main.c: 317: ikb_init();
   756  00147A  EC73  F00B         	call	_ikb_init	;wreg free
   757                           
   758                           ; BSR set to: 0
   759                           ;main.c: 319: disp_show_quantity(99.8);
   760  00147E  0E9A               	movlw	154
   761  001480  6E27               	movwf	disp_show_quantity@f,c
   762  001482  0EC7               	movlw	199
   763  001484  6E28               	movwf	disp_show_quantity@f+1,c
   764  001486  0E42               	movlw	66
   765  001488  6E29               	movwf	disp_show_quantity@f+2,c
   766  00148A  EC1F  F007         	call	_disp_show_quantity	;wreg free
   767                           
   768                           ;main.c: 321: GIE = 1;
   769  00148E  8EF2               	bsf	4082,7,c	;volatile
   770                           
   771                           ;main.c: 322: int8_t c=0;
   772  001490  0E00               	movlw	0
   773  001492  6E3E               	movwf	main@c,c
   774                           
   775                           ;main.c: 323: int8_t c_disp=0;
   776  001494  0E00               	movlw	0
   777  001496  6E3F               	movwf	main@c_disp,c
   778  001498                     l3079:
   779                           
   780                           ;main.c: 325: {;main.c: 326: if (isr_flag.f1ms)
   781  001498  A052               	btfss	_isr_flag,0,c	;volatile
   782  00149A  D002               	goto	l194
   783                           
   784                           ;main.c: 327: {;main.c: 328: isr_flag.f1ms = 0;
   785  00149C  9052               	bcf	_isr_flag,0,c	;volatile
   786                           
   787                           ;main.c: 329: main_flag.f1ms = 1;
   788  00149E  8051               	bsf	_main_flag,0,c	;volatile
   789  0014A0                     l194:
   790                           
   791                           ;main.c: 330: };main.c: 332: if (main_flag.f1ms)
   792  0014A0  A051               	btfss	_main_flag,0,c	;volatile
   793  0014A2  D03A               	goto	l3113
   794                           
   795                           ;main.c: 333: {;main.c: 334: if (++c==20)
   796  0014A4  2A3E               	incf	main@c,f,c
   797  0014A6  0E14               	movlw	20
   798  0014A8  183E               	xorwf	main@c,w,c
   799  0014AA  A4D8               	btfss	status,2,c
   800  0014AC  D02C               	goto	l196
   801                           
   802                           ;main.c: 335: {;main.c: 336: c = 0;
   803  0014AE  0E00               	movlw	0
   804  0014B0  6E3E               	movwf	main@c,c
   805                           
   806                           ;main.c: 338: ikb_job();
   807  0014B2  EC88  F00F         	call	_ikb_job	;wreg free
   808                           
   809                           ;main.c: 340: if (ikb_key_is_ready2read(0))
   810  0014B6  0E00               	movlw	0
   811  0014B8  EC38  F00F         	call	_ikb_key_is_ready2read
   812  0014BC  0900               	iorlw	0
   813  0014BE  B4D8               	btfsc	status,2,c
   814  0014C0  D002               	goto	l3093
   815                           
   816                           ; BSR set to: 0
   817  0014C2  0E01               	movlw	1
   818  0014C4  1A8A               	xorwf	3978,f,c	;volatile
   819  0014C6                     l3093:
   820                           
   821                           ; BSR set to: 0
   822                           ;main.c: 343: };main.c: 344: if (ikb_key_is_ready2read(1))
   823  0014C6  0E01               	movlw	1
   824  0014C8  EC38  F00F         	call	_ikb_key_is_ready2read
   825  0014CC  0900               	iorlw	0
   826  0014CE  B4D8               	btfsc	status,2,c
   827  0014D0  D002               	goto	l3097
   828                           
   829                           ; BSR set to: 0
   830  0014D2  0E02               	movlw	2
   831  0014D4  1A8A               	xorwf	3978,f,c	;volatile
   832  0014D6                     l3097:
   833                           
   834                           ; BSR set to: 0
   835                           ;main.c: 347: };main.c: 348: if (ikb_key_is_ready2read(2))
   836  0014D6  0E02               	movlw	2
   837  0014D8  EC38  F00F         	call	_ikb_key_is_ready2read
   838  0014DC  0900               	iorlw	0
   839  0014DE  B4D8               	btfsc	status,2,c
   840  0014E0  D002               	goto	l3101
   841                           
   842                           ; BSR set to: 0
   843  0014E2  0E04               	movlw	4
   844  0014E4  1A8A               	xorwf	3978,f,c	;volatile
   845  0014E6                     l3101:
   846                           
   847                           ; BSR set to: 0
   848                           ;main.c: 351: };main.c: 352: if (ikb_key_is_ready2read(3))
   849  0014E6  0E03               	movlw	3
   850  0014E8  EC38  F00F         	call	_ikb_key_is_ready2read
   851  0014EC  0900               	iorlw	0
   852  0014EE  B4D8               	btfsc	status,2,c
   853  0014F0  D002               	goto	l3105
   854                           
   855                           ; BSR set to: 0
   856  0014F2  0E08               	movlw	8
   857  0014F4  1A8A               	xorwf	3978,f,c	;volatile
   858  0014F6                     l3105:
   859                           
   860                           ; BSR set to: 0
   861                           ;main.c: 355: };main.c: 356: if (ikb_key_is_ready2read(4))
   862  0014F6  0E04               	movlw	4
   863  0014F8  EC38  F00F         	call	_ikb_key_is_ready2read
   864  0014FC  0900               	iorlw	0
   865  0014FE  B4D8               	btfsc	status,2,c
   866  001500  D002               	goto	l196
   867                           
   868                           ; BSR set to: 0
   869  001502  0E10               	movlw	16
   870  001504  1A8A               	xorwf	3978,f,c	;volatile
   871  001506                     l196:
   872                           
   873                           ;main.c: 359: };main.c: 360: };main.c: 362: if (++c_disp == 2)
   874  001506  2A3F               	incf	main@c_disp,f,c
   875  001508  0E02               	movlw	2
   876  00150A  183F               	xorwf	main@c_disp,w,c
   877  00150C  A4D8               	btfss	status,2,c
   878  00150E  D004               	goto	l3113
   879                           
   880                           ;main.c: 363: {;main.c: 364: c_disp = 0;
   881  001510  0E00               	movlw	0
   882  001512  6E3F               	movwf	main@c_disp,c
   883                           
   884                           ;main.c: 365: display7s_job();
   885  001514  EC04  F00F         	call	_display7s_job	;wreg free
   886  001518                     l3113:
   887                           
   888                           ;main.c: 366: };main.c: 367: };main.c: 370: main_flag.f1ms = 0;
   889  001518  9051               	bcf	_main_flag,0,c	;volatile
   890                           
   891                           ;main.c: 371: ikb_flush();
   892  00151A  ECA2  F00F         	call	_ikb_flush	;wreg free
   893  00151E  D7BC               	goto	l3079
   894  001520                     __end_of_main:
   895                           	opt callstack 0
   896                           
   897 ;; *************** function _nozzle_moveto *****************
   898 ;; Defined at:
   899 ;;		line 174 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  nozzle          1    wreg     char 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  nozzle          1   10[COMRAM] char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   913 ;;      Params:         0       0       0       0       0       0       0       0       0
   914 ;;      Locals:         1       0       0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0
   916 ;;      Totals:         1       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        1 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    2
   920 ;; This function calls:
   921 ;;		___wmul
   922 ;;		_mpap_setupToTurn
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text1
   929  001D90                     __ptext1:
   930                           	opt callstack 0
   931  001D90                     _nozzle_moveto:
   932                           	opt callstack 28
   933                           
   934                           ; BSR set to: 0
   935                           ;incstack = 0
   936                           ;nozzle_moveto@nozzle stored from wreg
   937  001D90  6E0B               	movwf	nozzle_moveto@nozzle,c
   938                           
   939                           ;main.c: 177: mpap_setupToTurn( (nozzle*200) - mpap.numSteps_current);
   940  001D92  500B               	movf	nozzle_moveto@nozzle,w,c
   941  001D94  6E01               	movwf	___wmul@multiplier,c
   942  001D96  6A02               	clrf	___wmul@multiplier+1,c
   943  001D98  BE01               	btfsc	___wmul@multiplier,7,c
   944  001D9A  0602               	decf	___wmul@multiplier+1,f,c
   945  001D9C  0E00               	movlw	0
   946  001D9E  6E04               	movwf	___wmul@multiplicand+1,c
   947  001DA0  0EC8               	movlw	200
   948  001DA2  6E03               	movwf	___wmul@multiplicand,c
   949  001DA4  ECF1  F00E         	call	___wmul	;wreg free
   950  001DA8  5040               	movf	_mpap,w,c	;volatile
   951  001DAA  5C01               	subwf	?___wmul,w,c
   952  001DAC  6E07               	movwf	mpap_setupToTurn@numSteps_tomove,c
   953  001DAE  5041               	movf	_mpap+1,w,c	;volatile
   954  001DB0  5802               	subwfb	?___wmul+1,w,c
   955  001DB2  6E08               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
   956  001DB4  ECB0  F00E         	call	_mpap_setupToTurn	;wreg free
   957  001DB8  0012               	return		;funcret
   958  001DBA                     __end_of_nozzle_moveto:
   959                           	opt callstack 0
   960                           
   961 ;; *************** function ___wmul *****************
   962 ;; Defined at:
   963 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  multiplier      2    0[COMRAM] unsigned int 
   966 ;;  multiplicand    2    2[COMRAM] unsigned int 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  product         2    4[COMRAM] unsigned int 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  2    0[COMRAM] unsigned int 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, prodl, prodh
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   978 ;;      Params:         4       0       0       0       0       0       0       0       0
   979 ;;      Locals:         2       0       0       0       0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0
   981 ;;      Totals:         6       0       0       0       0       0       0       0       0
   982 ;;Total ram usage:        6 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_nozzle_moveto
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text2
   993  001DE2                     __ptext2:
   994                           	opt callstack 0
   995  001DE2                     ___wmul:
   996                           	opt callstack 28
   997                           
   998                           ;incstack = 0
   999  001DE2  5001               	movf	___wmul@multiplier,w,c
  1000  001DE4  0203               	mulwf	___wmul@multiplicand,c
  1001  001DE6  CFF3 F005          	movff	prodl,___wmul@product
  1002  001DEA  CFF4 F006          	movff	prodh,___wmul@product+1
  1003  001DEE  5001               	movf	___wmul@multiplier,w,c
  1004  001DF0  0204               	mulwf	___wmul@multiplicand+1,c
  1005  001DF2  50F3               	movf	prodl,w,c
  1006  001DF4  2606               	addwf	___wmul@product+1,f,c
  1007  001DF6  5002               	movf	___wmul@multiplier+1,w,c
  1008  001DF8  0203               	mulwf	___wmul@multiplicand,c
  1009  001DFA  50F3               	movf	prodl,w,c
  1010  001DFC  2606               	addwf	___wmul@product+1,f,c
  1011  001DFE  C005  F001         	movff	___wmul@product,?___wmul
  1012  001E02  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1013  001E06  0012               	return		;funcret
  1014  001E08                     __end_of___wmul:
  1015                           	opt callstack 0
  1016                           
  1017 ;; *************** function _mpap_stop *****************
  1018 ;; Defined at:
  1019 ;;		line 186 in file "main.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    2
  1040 ;; This function calls:
  1041 ;;		__mpap_off
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text3
  1048  001EC6                     __ptext3:
  1049                           	opt callstack 0
  1050  001EC6                     _mpap_stop:
  1051                           	opt callstack 28
  1052                           
  1053                           ;main.c: 188: mpap.numSteps_tomove = 0x00;
  1054                           
  1055                           ;incstack = 0
  1056  001EC6  0E00               	movlw	0
  1057  001EC8  6E45               	movwf	_mpap+5,c	;volatile
  1058  001ECA  0E00               	movlw	0
  1059  001ECC  6E44               	movwf	_mpap+4,c	;volatile
  1060                           
  1061                           ;main.c: 189: mpap_off();
  1062  001ECE  EC6F  F00F         	call	__mpap_off	;wreg free
  1063  001ED2  0012               	return		;funcret
  1064  001ED4                     __end_of_mpap_stop:
  1065                           	opt callstack 0
  1066                           
  1067 ;; *************** function __mpap_off *****************
  1068 ;; Defined at:
  1069 ;;		line 117 in file "main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1086 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1087 ;;Total ram usage:        0 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    1
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_mpap_stop
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text4
  1098  001EDE                     __ptext4:
  1099                           	opt callstack 0
  1100  001EDE                     __mpap_off:
  1101                           	opt callstack 28
  1102                           
  1103                           ;incstack = 0
  1104                           ;main.c: 119: do{LATD &= ~(1<<0);}while(0);
  1105  001EDE  908C               	bcf	3980,0,c	;volatile
  1106                           
  1107                           ;main.c: 120: do{LATD &= ~(1<<1);}while(0);
  1108  001EE0  928C               	bcf	3980,1,c	;volatile
  1109                           
  1110                           ;main.c: 121: do{LATD &= ~(1<<2);}while(0);
  1111  001EE2  948C               	bcf	3980,2,c	;volatile
  1112                           
  1113                           ;main.c: 122: do{LATD &= ~(1<<3);}while(0);
  1114  001EE4  968C               	bcf	3980,3,c	;volatile
  1115  001EE6  0012               	return		;funcret
  1116  001EE8                     __end_of__mpap_off:
  1117                           	opt callstack 0
  1118                           
  1119 ;; *************** function _mpap_setupToHomming *****************
  1120 ;; Defined at:
  1121 ;;		line 167 in file "main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		_mpap_setupToTurn
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text5
  1150  001EB4                     __ptext5:
  1151                           	opt callstack 0
  1152  001EB4                     _mpap_setupToHomming:
  1153                           	opt callstack 28
  1154                           
  1155                           ;main.c: 169: mpap_setupToTurn( -1 *( (18*200) +20));
  1156                           
  1157                           ;incstack = 0
  1158  001EB4  0EF1               	movlw	241
  1159  001EB6  6E08               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1160  001EB8  0EDC               	movlw	220
  1161  001EBA  6E07               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1162  001EBC  ECB0  F00E         	call	_mpap_setupToTurn	;wreg free
  1163                           
  1164                           ;main.c: 172: mpap.mode = HOMMING_MODE;
  1165  001EC0  0E02               	movlw	2
  1166  001EC2  6E47               	movwf	_mpap+7,c	;volatile
  1167  001EC4  0012               	return		;funcret
  1168  001EC6                     __end_of_mpap_setupToHomming:
  1169                           	opt callstack 0
  1170                           
  1171 ;; *************** function _mpap_setupToTurn *****************
  1172 ;; Defined at:
  1173 ;;		line 155 in file "main.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  numSteps_tom    2    6[COMRAM] int 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1187 ;;      Params:         2       0       0       0       0       0       0       0       0
  1188 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1190 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1191 ;;Total ram usage:        4 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    1
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_mpap_setupToHomming
  1198 ;;		_nozzle_moveto
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text6
  1203  001D60                     __ptext6:
  1204                           	opt callstack 0
  1205  001D60                     _mpap_setupToTurn:
  1206                           	opt callstack 28
  1207                           
  1208                           ;main.c: 158: if (numSteps_tomove !=0)
  1209                           
  1210                           ;incstack = 0
  1211  001D60  5007               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  1212  001D62  1008               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  1213  001D64  B4D8               	btfsc	status,2,c
  1214  001D66  0012               	return	
  1215                           
  1216                           ;main.c: 159: {;main.c: 160: mpap.numSteps_tomove = numSteps_tomove;
  1217  001D68  C007  F044         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  1218  001D6C  C008  F045         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  1219                           
  1220                           ;main.c: 161: mpap.KI = (mpap.numSteps_tomove<0)? -1: 1;
  1221  001D70  BE45               	btfsc	_mpap+5,7,c	;volatile
  1222  001D72  D005               	goto	l126
  1223  001D74  0E00               	movlw	0
  1224  001D76  6E0A               	movwf	_mpap_setupToTurn$149+1,c
  1225  001D78  0E01               	movlw	1
  1226  001D7A  6E09               	movwf	_mpap_setupToTurn$149,c
  1227  001D7C  D002               	goto	l128
  1228  001D7E                     l126:
  1229  001D7E  6809               	setf	_mpap_setupToTurn$149,c
  1230  001D80  680A               	setf	_mpap_setupToTurn$149+1,c
  1231  001D82                     l128:
  1232  001D82  C009  F046         	movff	_mpap_setupToTurn$149,_mpap+6	;volatile
  1233                           
  1234                           ;main.c: 163: mpap.counter_steps = 0;
  1235  001D86  0E00               	movlw	0
  1236  001D88  6E43               	movwf	_mpap+3,c	;volatile
  1237  001D8A  0E00               	movlw	0
  1238  001D8C  6E42               	movwf	_mpap+2,c	;volatile
  1239  001D8E  0012               	return		;funcret
  1240  001D90                     __end_of_mpap_setupToTurn:
  1241                           	opt callstack 0
  1242                           
  1243 ;; *************** function _mpap_job *****************
  1244 ;; Defined at:
  1245 ;;		line 257 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  cod_ret         1    0        char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      char 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0
  1260 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1262 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1263 ;;Total ram usage:        1 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    4
  1266 ;; This function calls:
  1267 ;;		_mpap_homming
  1268 ;;		_mpap_normal_mode
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text7
  1275  001DBA                     __ptext7:
  1276                           	opt callstack 0
  1277  001DBA                     _mpap_job:
  1278                           	opt callstack 26
  1279                           
  1280                           ;main.c: 259: int8_t cod_ret;;main.c: 261: if (mpap.mode == HOMMING_MODE)
  1281                           
  1282                           ;incstack = 0
  1283  001DBA  0E02               	movlw	2
  1284  001DBC  1847               	xorwf	_mpap+7,w,c	;volatile
  1285  001DBE  A4D8               	btfss	status,2,c
  1286  001DC0  D003               	goto	l2885
  1287  001DC2  EC32  F00D         	call	_mpap_homming	;wreg free
  1288  001DC6  0012               	return	
  1289  001DC8                     l2885:
  1290                           
  1291                           ;main.c: 263: else if (mpap.mode == NORMAL_MODE)
  1292  001DC8  0E03               	movlw	3
  1293  001DCA  1847               	xorwf	_mpap+7,w,c	;volatile
  1294  001DCC  A4D8               	btfss	status,2,c
  1295  001DCE  D003               	goto	l2889
  1296  001DD0  ECD5  F00D         	call	_mpap_normal_mode	;wreg free
  1297  001DD4  0012               	return	
  1298  001DD6                     l2889:
  1299                           
  1300                           ;main.c: 266: else if (mpap.mode == STALL_MODE)
  1301  001DD6  0447               	decf	_mpap+7,w,c	;volatile
  1302  001DD8  A4D8               	btfss	status,2,c
  1303  001DDA  0012               	return	
  1304                           
  1305                           ;main.c: 267: mpap.mode = IDLE_MODE;
  1306  001DDC  0E00               	movlw	0
  1307  001DDE  6E47               	movwf	_mpap+7,c	;volatile
  1308  001DE0  0012               	return	
  1309  001DE2                     __end_of_mpap_job:
  1310                           	opt callstack 0
  1311                           
  1312 ;; *************** function _mpap_normal_mode *****************
  1313 ;; Defined at:
  1314 ;;		line 237 in file "main.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  cod_ret         1    1[COMRAM] char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      char 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0
  1329 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1331 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1332 ;;Total ram usage:        1 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    3
  1335 ;; This function calls:
  1336 ;;		_mpap_do1step
  1337 ;; This function is called by:
  1338 ;;		_mpap_job
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text8
  1343  001BAA                     __ptext8:
  1344                           	opt callstack 0
  1345  001BAA                     _mpap_normal_mode:
  1346                           	opt callstack 26
  1347                           
  1348                           ;main.c: 239: int8_t cod_ret = 0;
  1349                           
  1350                           ;incstack = 0
  1351  001BAA  0E00               	movlw	0
  1352  001BAC  6E02               	movwf	mpap_normal_mode@cod_ret,c
  1353                           
  1354                           ;main.c: 240: if (mpap.numSteps_tomove!=0)
  1355  001BAE  5044               	movf	_mpap+4,w,c	;volatile
  1356  001BB0  1045               	iorwf	_mpap+5,w,c	;volatile
  1357  001BB2  B4D8               	btfsc	status,2,c
  1358  001BB4  D01C               	goto	l154
  1359                           
  1360                           ;main.c: 241: {;main.c: 242: mpap_do1step(mpap.KI);
  1361  001BB6  5046               	movf	_mpap+6,w,c	;volatile
  1362  001BB8  ECF9  F00D         	call	_mpap_do1step
  1363                           
  1364                           ;main.c: 244: mpap.counter_steps+= mpap.KI;
  1365  001BBC  5046               	movf	_mpap+6,w,c	;volatile
  1366  001BBE  2642               	addwf	_mpap+2,f,c	;volatile
  1367  001BC0  0E00               	movlw	0
  1368  001BC2  BE46               	btfsc	_mpap+6,7,c	;volatile
  1369  001BC4  0EFF               	movlw	255
  1370  001BC6  2243               	addwfc	_mpap+3,f,c	;volatile
  1371                           
  1372                           ;main.c: 246: mpap.numSteps_current+= mpap.KI;
  1373  001BC8  5046               	movf	_mpap+6,w,c	;volatile
  1374  001BCA  2640               	addwf	_mpap,f,c	;volatile
  1375  001BCC  0E00               	movlw	0
  1376  001BCE  BE46               	btfsc	_mpap+6,7,c	;volatile
  1377  001BD0  0EFF               	movlw	255
  1378  001BD2  2241               	addwfc	_mpap+1,f,c	;volatile
  1379                           
  1380                           ;main.c: 248: if ( mpap.counter_steps == mpap.numSteps_tomove)
  1381  001BD4  5044               	movf	_mpap+4,w,c	;volatile
  1382  001BD6  1842               	xorwf	_mpap+2,w,c	;volatile
  1383  001BD8  E10A               	bnz	l154
  1384  001BDA  5045               	movf	_mpap+5,w,c	;volatile
  1385  001BDC  1843               	xorwf	_mpap+3,w,c	;volatile
  1386  001BDE  A4D8               	btfss	status,2,c
  1387  001BE0  D006               	goto	l154
  1388                           
  1389                           ;main.c: 249: {;main.c: 250: mpap.numSteps_tomove = 0;
  1390  001BE2  0E00               	movlw	0
  1391  001BE4  6E45               	movwf	_mpap+5,c	;volatile
  1392  001BE6  0E00               	movlw	0
  1393  001BE8  6E44               	movwf	_mpap+4,c	;volatile
  1394                           
  1395                           ;main.c: 251: cod_ret = 1;
  1396  001BEA  0E01               	movlw	1
  1397  001BEC  6E02               	movwf	mpap_normal_mode@cod_ret,c
  1398  001BEE                     l154:
  1399                           
  1400                           ;main.c: 252: };main.c: 253: };main.c: 254: return cod_ret;
  1401  001BEE  5002               	movf	mpap_normal_mode@cod_ret,w,c
  1402  001BF0  0012               	return		;funcret
  1403  001BF2                     __end_of_mpap_normal_mode:
  1404                           	opt callstack 0
  1405                           
  1406 ;; *************** function _mpap_homming *****************
  1407 ;; Defined at:
  1408 ;;		line 214 in file "main.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  cod_ret         1    2[COMRAM] char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      char 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0
  1423 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1424 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1425 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1426 ;;Total ram usage:        2 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    3
  1429 ;; This function calls:
  1430 ;;		_mpap_do1step
  1431 ;; This function is called by:
  1432 ;;		_mpap_job
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text9
  1437  001A64                     __ptext9:
  1438                           	opt callstack 0
  1439  001A64                     _mpap_homming:
  1440                           	opt callstack 26
  1441                           
  1442                           ;main.c: 216: int8_t cod_ret = 0;
  1443                           
  1444                           ;incstack = 0
  1445  001A64  0E00               	movlw	0
  1446  001A66  6E03               	movwf	mpap_homming@cod_ret,c
  1447                           
  1448                           ;main.c: 217: if (mpap.numSteps_tomove!=0)
  1449  001A68  5044               	movf	_mpap+4,w,c	;volatile
  1450  001A6A  1045               	iorwf	_mpap+5,w,c	;volatile
  1451  001A6C  B4D8               	btfsc	status,2,c
  1452  001A6E  D024               	goto	l148
  1453                           
  1454                           ;main.c: 218: {;main.c: 219: mpap_do1step(mpap.KI);
  1455  001A70  5046               	movf	_mpap+6,w,c	;volatile
  1456  001A72  ECF9  F00D         	call	_mpap_do1step
  1457                           
  1458                           ;main.c: 221: mpap.counter_steps+= mpap.KI;
  1459  001A76  5046               	movf	_mpap+6,w,c	;volatile
  1460  001A78  2642               	addwf	_mpap+2,f,c	;volatile
  1461  001A7A  0E00               	movlw	0
  1462  001A7C  BE46               	btfsc	_mpap+6,7,c	;volatile
  1463  001A7E  0EFF               	movlw	255
  1464  001A80  2243               	addwfc	_mpap+3,f,c	;volatile
  1465                           
  1466                           ;main.c: 223: if (((PORTE & (1<<1))>>1) == 0)
  1467  001A82  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  1468  001A86  90D8               	bcf	status,0,c
  1469  001A88  3202               	rrcf	??_mpap_homming,f,c
  1470  001A8A  B002               	btfsc	??_mpap_homming,0,c
  1471  001A8C  D006               	goto	l2537
  1472                           
  1473                           ;main.c: 224: {;main.c: 225: mpap.numSteps_tomove = 0x0000;
  1474  001A8E  0E00               	movlw	0
  1475  001A90  6E45               	movwf	_mpap+5,c	;volatile
  1476  001A92  0E00               	movlw	0
  1477  001A94  6E44               	movwf	_mpap+4,c	;volatile
  1478                           
  1479                           ;main.c: 226: cod_ret = 1;
  1480  001A96  0E01               	movlw	1
  1481  001A98  6E03               	movwf	mpap_homming@cod_ret,c
  1482  001A9A                     l2537:
  1483                           
  1484                           ;main.c: 227: };main.c: 228: if ( mpap.counter_steps == mpap.numSteps_tomove)
  1485  001A9A  5044               	movf	_mpap+4,w,c	;volatile
  1486  001A9C  1842               	xorwf	_mpap+2,w,c	;volatile
  1487  001A9E  E10C               	bnz	l148
  1488  001AA0  5045               	movf	_mpap+5,w,c	;volatile
  1489  001AA2  1843               	xorwf	_mpap+3,w,c	;volatile
  1490  001AA4  A4D8               	btfss	status,2,c
  1491  001AA6  D008               	goto	l148
  1492                           
  1493                           ;main.c: 229: {;main.c: 230: mpap.numSteps_tomove = 0x0000;
  1494  001AA8  0E00               	movlw	0
  1495  001AAA  6E45               	movwf	_mpap+5,c	;volatile
  1496  001AAC  0E00               	movlw	0
  1497  001AAE  6E44               	movwf	_mpap+4,c	;volatile
  1498                           
  1499                           ;main.c: 231: cod_ret = 1;
  1500  001AB0  0E01               	movlw	1
  1501  001AB2  6E03               	movwf	mpap_homming@cod_ret,c
  1502                           
  1503                           ;main.c: 232: pulsonic.errors.flag.mpap_home_sensor = 1;
  1504  001AB4  0101               	movlb	1	; () banked
  1505  001AB6  8175               	bsf	(_pulsonic+117)& (0+255),0,b
  1506  001AB8                     l148:
  1507                           
  1508                           ;main.c: 233: };main.c: 234: };main.c: 235: return cod_ret;
  1509  001AB8  5003               	movf	mpap_homming@cod_ret,w,c
  1510  001ABA  0012               	return		;funcret
  1511  001ABC                     __end_of_mpap_homming:
  1512                           	opt callstack 0
  1513                           
  1514 ;; *************** function _mpap_do1step *****************
  1515 ;; Defined at:
  1516 ;;		line 194 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  KI              1    wreg     char 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  KI              1    0[COMRAM] char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1530 ;;      Params:         0       0       0       0       0       0       0       0       0
  1531 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1533 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1534 ;;Total ram usage:        1 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    2
  1537 ;; This function calls:
  1538 ;;		__mpap_step1
  1539 ;;		__mpap_step2
  1540 ;;		__mpap_step3
  1541 ;;		__mpap_step4
  1542 ;; This function is called by:
  1543 ;;		_mpap_homming
  1544 ;;		_mpap_normal_mode
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text10
  1549  001BF2                     __ptext10:
  1550                           	opt callstack 0
  1551  001BF2                     _mpap_do1step:
  1552                           	opt callstack 26
  1553                           
  1554                           ;incstack = 0
  1555                           ;mpap_do1step@KI stored from wreg
  1556  001BF2  6E01               	movwf	mpap_do1step@KI,c
  1557                           
  1558                           ;main.c: 196: static int8_t i;;main.c: 197: mpap_step[i]();
  1559  001BF4  5050               	movf	mpap_do1step@i,w,c
  1560  001BF6  0D02               	mullw	2
  1561  001BF8  50F3               	movf	prodl,w,c
  1562  001BFA  0F53               	addlw	low _mpap_step
  1563  001BFC  6ED9               	movwf	fsr2l,c
  1564  001BFE  6ADA               	clrf	fsr2h,c
  1565  001C00  D801               	call	u1728
  1566  001C02  D00A               	goto	u1729
  1567  001C04                     u1728:
  1568  001C04  0005               	push	
  1569  001C06  6EFA               	movwf	pclath,c
  1570  001C08  50DE               	movf	postinc2,w,c
  1571  001C0A  6EFD               	movwf	tosl,c
  1572  001C0C  50DE               	movf	postinc2,w,c
  1573  001C0E  6EFE               	movwf	tosh,c
  1574  001C10  50F8               	movf	tblptru,w,c
  1575  001C12  6EFF               	movwf	tosu,c
  1576  001C14  50FA               	movf	pclath,w,c
  1577  001C16  0012               	return		;indir
  1578  001C18                     u1729:
  1579                           
  1580                           ;main.c: 198: i+=KI;
  1581  001C18  5001               	movf	mpap_do1step@KI,w,c
  1582  001C1A  2650               	addwf	mpap_do1step@i,f,c
  1583                           
  1584                           ;main.c: 199: if (i>3){i=0;}
  1585  001C1C  5050               	movf	mpap_do1step@i,w,c
  1586  001C1E  0A80               	xorlw	128
  1587  001C20  0F7C               	addlw	-132
  1588  001C22  A0D8               	btfss	status,0,c
  1589  001C24  D002               	goto	l2333
  1590  001C26  0E00               	movlw	0
  1591  001C28  6E50               	movwf	mpap_do1step@i,c
  1592  001C2A                     l2333:
  1593                           
  1594                           ;main.c: 200: if (i<0){i=3;}
  1595  001C2A  AE50               	btfss	mpap_do1step@i,7,c
  1596  001C2C  0012               	return	
  1597  001C2E  0E03               	movlw	3
  1598  001C30  6E50               	movwf	mpap_do1step@i,c
  1599  001C32  0012               	return		;funcret
  1600  001C34                     __end_of_mpap_do1step:
  1601                           	opt callstack 0
  1602                           
  1603 ;; *************** function __mpap_step3 *****************
  1604 ;; Defined at:
  1605 ;;		line 93 in file "main.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1619 ;;      Params:         0       0       0       0       0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1622 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_mpap_do1step
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text11
  1634  001EE8                     __ptext11:
  1635                           	opt callstack 0
  1636  001EE8                     __mpap_step3:
  1637                           	opt callstack 26
  1638                           
  1639                           ;incstack = 0
  1640                           ;main.c: 95: do{LATD &= ~(1<<0);}while(0);
  1641  001EE8  908C               	bcf	3980,0,c	;volatile
  1642                           
  1643                           ;main.c: 96: do{LATD |= 1<<1;}while(0);
  1644  001EEA  828C               	bsf	3980,1,c	;volatile
  1645                           
  1646                           ;main.c: 97: do{LATD &= ~(1<<2);}while(0);
  1647  001EEC  948C               	bcf	3980,2,c	;volatile
  1648                           
  1649                           ;main.c: 98: do{LATD &= ~(1<<3);}while(0);
  1650  001EEE  968C               	bcf	3980,3,c	;volatile
  1651  001EF0  0012               	return		;funcret
  1652  001EF2                     __end_of__mpap_step3:
  1653                           	opt callstack 0
  1654                           
  1655 ;; *************** function __mpap_step2 *****************
  1656 ;; Defined at:
  1657 ;;		line 86 in file "main.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_mpap_do1step
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text12
  1686  001EF2                     __ptext12:
  1687                           	opt callstack 0
  1688  001EF2                     __mpap_step2:
  1689                           	opt callstack 26
  1690                           
  1691                           ;incstack = 0
  1692                           ;main.c: 88: do{LATD &= ~(1<<0);}while(0);
  1693  001EF2  908C               	bcf	3980,0,c	;volatile
  1694                           
  1695                           ;main.c: 89: do{LATD &= ~(1<<1);}while(0);
  1696  001EF4  928C               	bcf	3980,1,c	;volatile
  1697                           
  1698                           ;main.c: 90: do{LATD |= 1<<2;}while(0);
  1699  001EF6  848C               	bsf	3980,2,c	;volatile
  1700                           
  1701                           ;main.c: 91: do{LATD &= ~(1<<3);}while(0);
  1702  001EF8  968C               	bcf	3980,3,c	;volatile
  1703  001EFA  0012               	return		;funcret
  1704  001EFC                     __end_of__mpap_step2:
  1705                           	opt callstack 0
  1706                           
  1707 ;; *************** function __mpap_step1 *****************
  1708 ;; Defined at:
  1709 ;;		line 79 in file "main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_mpap_do1step
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text13
  1738  001EFC                     __ptext13:
  1739                           	opt callstack 0
  1740  001EFC                     __mpap_step1:
  1741                           	opt callstack 26
  1742                           
  1743                           ;incstack = 0
  1744                           ;main.c: 81: do{LATD &= ~(1<<0);}while(0);
  1745  001EFC  908C               	bcf	3980,0,c	;volatile
  1746                           
  1747                           ;main.c: 82: do{LATD &= ~(1<<1);}while(0);
  1748  001EFE  928C               	bcf	3980,1,c	;volatile
  1749                           
  1750                           ;main.c: 83: do{LATD &= ~(1<<2);}while(0);
  1751  001F00  948C               	bcf	3980,2,c	;volatile
  1752                           
  1753                           ;main.c: 84: do{LATD |= 1<<3;}while(0);
  1754  001F02  868C               	bsf	3980,3,c	;volatile
  1755  001F04  0012               	return		;funcret
  1756  001F06                     __end_of__mpap_step1:
  1757                           	opt callstack 0
  1758                           
  1759 ;; *************** function __mpap_step4 *****************
  1760 ;; Defined at:
  1761 ;;		line 100 in file "main.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1775 ;;      Params:         0       0       0       0       0       0       0       0       0
  1776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1778 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1779 ;;Total ram usage:        0 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_mpap_do1step
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text14
  1790  001F06                     __ptext14:
  1791                           	opt callstack 0
  1792  001F06                     __mpap_step4:
  1793                           	opt callstack 26
  1794                           
  1795                           ;incstack = 0
  1796                           ;main.c: 102: do{LATD |= 1<<0;}while(0);
  1797  001F06  808C               	bsf	3980,0,c	;volatile
  1798                           
  1799                           ;main.c: 103: do{LATD &= ~(1<<1);}while(0);
  1800  001F08  928C               	bcf	3980,1,c	;volatile
  1801                           
  1802                           ;main.c: 104: do{LATD &= ~(1<<2);}while(0);
  1803  001F0A  948C               	bcf	3980,2,c	;volatile
  1804                           
  1805                           ;main.c: 105: do{LATD &= ~(1<<3);}while(0);
  1806  001F0C  968C               	bcf	3980,3,c	;volatile
  1807  001F0E  0012               	return		;funcret
  1808  001F10                     __end_of__mpap_step4:
  1809                           	opt callstack 0
  1810                           
  1811 ;; *************** function _ikb_key_is_ready2read *****************
  1812 ;; Defined at:
  1813 ;;		line 427 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  k               1    wreg     unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  k               1    0[COMRAM] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      unsigned char 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 3F/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0
  1828 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        1 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text15
  1842  001E70                     __ptext15:
  1843                           	opt callstack 0
  1844  001E70                     _ikb_key_is_ready2read:
  1845                           	opt callstack 29
  1846                           
  1847                           ;incstack = 0
  1848                           ;ikb_key_is_ready2read@k stored from wreg
  1849  001E70  6E01               	movwf	ikb_key_is_ready2read@k,c
  1850                           
  1851                           ;ikb.c: 429: return key[k].bf.ReadyToRead;
  1852  001E72  5001               	movf	ikb_key_is_ready2read@k,w,c
  1853  001E74  0D10               	mullw	16
  1854  001E76  50F3               	movf	prodl,w,c
  1855  001E78  0F6A               	addlw	low (_key+10)
  1856  001E7A  6ED9               	movwf	fsr2l,c
  1857  001E7C  6ADA               	clrf	fsr2h,c
  1858  001E7E  0100               	movlb	0	; () banked
  1859  001E80  ACDF               	btfss	indf2,6,c
  1860  001E82  D002               	goto	u3030
  1861  001E84  0E01               	movlw	1
  1862  001E86  0012               	return	
  1863  001E88                     u3030:
  1864  001E88  0E00               	movlw	0
  1865                           
  1866                           ; BSR set to: 0
  1867  001E8A  0012               	return		;funcret
  1868  001E8C                     __end_of_ikb_key_is_ready2read:
  1869                           	opt callstack 0
  1870                           
  1871 ;; *************** function _ikb_job *****************
  1872 ;; Defined at:
  1873 ;;		line 414 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1891 ;;Total ram usage:        0 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    4
  1894 ;; This function calls:
  1895 ;;		_ikey_parsing
  1896 ;;		_ikey_scan
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text16
  1903  001F10                     __ptext16:
  1904                           	opt callstack 0
  1905  001F10                     _ikb_job:
  1906                           	opt callstack 26
  1907                           
  1908                           ;ikb.c: 416: ikey_scan();
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;incstack = 0
  1912  001F10  EC46  F009         	call	_ikey_scan	;wreg free
  1913                           
  1914                           ;ikb.c: 417: ikey_parsing();
  1915  001F14  EC07  F004         	call	_ikey_parsing	;wreg free
  1916  001F18  0012               	return		;funcret
  1917  001F1A                     __end_of_ikb_job:
  1918                           	opt callstack 0
  1919                           
  1920 ;; *************** function _ikey_scan *****************
  1921 ;; Defined at:
  1922 ;;		line 449 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  k               1    1[COMRAM] char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0
  1937 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1938 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1939 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    2
  1943 ;; This function calls:
  1944 ;;		_keyRead_pin_key1
  1945 ;;		_keyRead_pin_key2
  1946 ;;		_keyRead_pin_key3
  1947 ;;		_keyRead_pin_key4
  1948 ;;		_keyRead_pin_key5
  1949 ;; This function is called by:
  1950 ;;		_ikb_job
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text17
  1955  00128C                     __ptext17:
  1956                           	opt callstack 0
  1957  00128C                     _ikey_scan:
  1958                           	opt callstack 27
  1959                           
  1960                           ;ikb.c: 451: int8_t k = 5-1;
  1961                           
  1962                           ;incstack = 0
  1963  00128C  0E04               	movlw	4
  1964  00128E  6E02               	movwf	ikey_scan@k,c
  1965  001290                     l2563:
  1966                           
  1967                           ;ikb.c: 453: {;ikb.c: 454: if (key[k].sm0 == 0)
  1968  001290  5002               	movf	ikey_scan@k,w,c
  1969  001292  0D10               	mullw	16
  1970  001294  50F3               	movf	prodl,w,c
  1971  001296  0F64               	addlw	low (_key+4)
  1972  001298  6ED9               	movwf	fsr2l,c
  1973  00129A  6ADA               	clrf	fsr2h,c
  1974  00129C  50DF               	movf	indf2,w,c
  1975  00129E  A4D8               	btfss	status,2,c
  1976  0012A0  D016               	goto	l2569
  1977                           
  1978                           ;ikb.c: 455: {;ikb.c: 456: if (key[k].keyRead() == 0)
  1979  0012A2  5002               	movf	ikey_scan@k,w,c
  1980  0012A4  0D10               	mullw	16
  1981  0012A6  50F3               	movf	prodl,w,c
  1982  0012A8  0F60               	addlw	low _key
  1983  0012AA  6ED9               	movwf	fsr2l,c
  1984  0012AC  6ADA               	clrf	fsr2h,c
  1985  0012AE  D801               	call	u2138
  1986  0012B0  D00A               	goto	u2139
  1987  0012B2                     u2138:
  1988  0012B2  0005               	push	
  1989  0012B4  6EFA               	movwf	pclath,c
  1990  0012B6  50DE               	movf	postinc2,w,c
  1991  0012B8  6EFD               	movwf	tosl,c
  1992  0012BA  50DE               	movf	postinc2,w,c
  1993  0012BC  6EFE               	movwf	tosh,c
  1994  0012BE  50F8               	movf	tblptru,w,c
  1995  0012C0  6EFF               	movwf	tosu,c
  1996  0012C2  50FA               	movf	pclath,w,c
  1997  0012C4  0012               	return		;indir
  1998  0012C6                     u2139:
  1999  0012C6  0900               	iorlw	0
  2000  0012C8  A4D8               	btfss	status,2,c
  2001  0012CA  D0AC               	goto	l2599
  2002  0012CC  D041               	goto	L1
  2003  0012CE                     l2569:
  2004                           
  2005                           ;ikb.c: 461: else if (key[k].sm0 == 1)
  2006  0012CE  5002               	movf	ikey_scan@k,w,c
  2007  0012D0  0D10               	mullw	16
  2008  0012D2  50F3               	movf	prodl,w,c
  2009  0012D4  0F64               	addlw	low (_key+4)
  2010  0012D6  6ED9               	movwf	fsr2l,c
  2011  0012D8  6ADA               	clrf	fsr2h,c
  2012  0012DA  04DE               	decf	postinc2,w,c
  2013  0012DC  A4D8               	btfss	status,2,c
  2014  0012DE  D040               	goto	l2581
  2015                           
  2016                           ;ikb.c: 462: {;ikb.c: 463: if (++key[k].counter0 == 4)
  2017  0012E0  5002               	movf	ikey_scan@k,w,c
  2018  0012E2  0D10               	mullw	16
  2019  0012E4  50F3               	movf	prodl,w,c
  2020  0012E6  0F65               	addlw	low (_key+5)
  2021  0012E8  6ED9               	movwf	fsr2l,c
  2022  0012EA  6ADA               	clrf	fsr2h,c
  2023  0012EC  2ADF               	incf	indf2,f,c
  2024  0012EE  0E04               	movlw	4
  2025  0012F0  18DE               	xorwf	postinc2,w,c
  2026  0012F2  A4D8               	btfss	status,2,c
  2027  0012F4  D097               	goto	l2599
  2028                           
  2029                           ;ikb.c: 464: {;ikb.c: 465: key[k].counter0 = 0x00;
  2030  0012F6  5002               	movf	ikey_scan@k,w,c
  2031  0012F8  0D10               	mullw	16
  2032  0012FA  50F3               	movf	prodl,w,c
  2033  0012FC  0F65               	addlw	low (_key+5)
  2034  0012FE  6ED9               	movwf	fsr2l,c
  2035  001300  6ADA               	clrf	fsr2h,c
  2036  001302  0E00               	movlw	0
  2037  001304  6EDF               	movwf	indf2,c
  2038                           
  2039                           ;ikb.c: 467: if (key[k].keyRead() != 0)
  2040  001306  5002               	movf	ikey_scan@k,w,c
  2041  001308  0D10               	mullw	16
  2042  00130A  50F3               	movf	prodl,w,c
  2043  00130C  0F60               	addlw	low _key
  2044  00130E  6ED9               	movwf	fsr2l,c
  2045  001310  6ADA               	clrf	fsr2h,c
  2046  001312  D801               	call	u2178
  2047  001314  D00A               	goto	u2179
  2048  001316                     u2178:
  2049  001316  0005               	push	
  2050  001318  6EFA               	movwf	pclath,c
  2051  00131A  50DE               	movf	postinc2,w,c
  2052  00131C  6EFD               	movwf	tosl,c
  2053  00131E  50DE               	movf	postinc2,w,c
  2054  001320  6EFE               	movwf	tosh,c
  2055  001322  50F8               	movf	tblptru,w,c
  2056  001324  6EFF               	movwf	tosu,c
  2057  001326  50FA               	movf	pclath,w,c
  2058  001328  0012               	return		;indir
  2059  00132A                     u2179:
  2060  00132A  0900               	iorlw	0
  2061  00132C  B4D8               	btfsc	status,2,c
  2062  00132E  D008               	goto	l2579
  2063  001330                     u2180:
  2064                           
  2065                           ;ikb.c: 468: {;ikb.c: 469: key[k].sm0--;
  2066  001330  5002               	movf	ikey_scan@k,w,c
  2067  001332  0D10               	mullw	16
  2068  001334  50F3               	movf	prodl,w,c
  2069  001336  0F64               	addlw	low (_key+4)
  2070  001338  6ED9               	movwf	fsr2l,c
  2071  00133A  6ADA               	clrf	fsr2h,c
  2072  00133C  06DF               	decf	indf2,f,c
  2073                           
  2074                           ;ikb.c: 470: }
  2075  00133E  D072               	goto	l2599
  2076  001340                     l2579:
  2077                           
  2078                           ;ikb.c: 471: else;ikb.c: 472: {;ikb.c: 473: key[k].bf.state = 1;
  2079  001340  5002               	movf	ikey_scan@k,w,c
  2080  001342  0D10               	mullw	16
  2081  001344  50F3               	movf	prodl,w,c
  2082  001346  0F6A               	addlw	low (_key+10)
  2083  001348  6ED9               	movwf	fsr2l,c
  2084  00134A  6ADA               	clrf	fsr2h,c
  2085  00134C  0100               	movlb	0	; () banked
  2086  00134E  80DF               	bsf	indf2,0,c
  2087  001350                     L1:
  2088                           
  2089                           ;ikb.c: 474: key[k].sm0++;
  2090  001350  5002               	movf	ikey_scan@k,w,c
  2091  001352  0D10               	mullw	16
  2092  001354  50F3               	movf	prodl,w,c
  2093  001356  0F64               	addlw	low (_key+4)
  2094  001358  6ED9               	movwf	fsr2l,c
  2095  00135A  6ADA               	clrf	fsr2h,c
  2096  00135C  2ADF               	incf	indf2,f,c
  2097  00135E  D062               	goto	l2599
  2098  001360                     l2581:
  2099                           
  2100                           ;ikb.c: 478: else if (key[k].sm0 == 2)
  2101  001360  5002               	movf	ikey_scan@k,w,c
  2102  001362  0D10               	mullw	16
  2103  001364  50F3               	movf	prodl,w,c
  2104  001366  0F64               	addlw	low (_key+4)
  2105  001368  6ED9               	movwf	fsr2l,c
  2106  00136A  6ADA               	clrf	fsr2h,c
  2107  00136C  0E02               	movlw	2
  2108  00136E  18DE               	xorwf	postinc2,w,c
  2109  001370  A4D8               	btfss	status,2,c
  2110  001372  D016               	goto	l2587
  2111                           
  2112                           ;ikb.c: 479: {;ikb.c: 480: if (key[k].keyRead() == 1)
  2113  001374  5002               	movf	ikey_scan@k,w,c
  2114  001376  0D10               	mullw	16
  2115  001378  50F3               	movf	prodl,w,c
  2116  00137A  0F60               	addlw	low _key
  2117  00137C  6ED9               	movwf	fsr2l,c
  2118  00137E  6ADA               	clrf	fsr2h,c
  2119  001380  D801               	call	u2208
  2120  001382  D00A               	goto	u2209
  2121  001384                     u2208:
  2122  001384  0005               	push	
  2123  001386  6EFA               	movwf	pclath,c
  2124  001388  50DE               	movf	postinc2,w,c
  2125  00138A  6EFD               	movwf	tosl,c
  2126  00138C  50DE               	movf	postinc2,w,c
  2127  00138E  6EFE               	movwf	tosh,c
  2128  001390  50F8               	movf	tblptru,w,c
  2129  001392  6EFF               	movwf	tosu,c
  2130  001394  50FA               	movf	pclath,w,c
  2131  001396  0012               	return		;indir
  2132  001398                     u2209:
  2133  001398  06E8               	decf	wreg,f,c
  2134  00139A  B4D8               	btfsc	status,2,c
  2135  00139C  D7D9               	goto	L1
  2136  00139E  D042               	goto	l2599
  2137  0013A0                     l2587:
  2138                           
  2139                           ;ikb.c: 483: else if (key[k].sm0 == 3)
  2140  0013A0  5002               	movf	ikey_scan@k,w,c
  2141  0013A2  0D10               	mullw	16
  2142  0013A4  50F3               	movf	prodl,w,c
  2143  0013A6  0F64               	addlw	low (_key+4)
  2144  0013A8  6ED9               	movwf	fsr2l,c
  2145  0013AA  6ADA               	clrf	fsr2h,c
  2146  0013AC  0E03               	movlw	3
  2147  0013AE  18DE               	xorwf	postinc2,w,c
  2148  0013B0  A4D8               	btfss	status,2,c
  2149  0013B2  D038               	goto	l2599
  2150                           
  2151                           ;ikb.c: 484: {;ikb.c: 485: if (++key[k].counter0 == 4)
  2152  0013B4  5002               	movf	ikey_scan@k,w,c
  2153  0013B6  0D10               	mullw	16
  2154  0013B8  50F3               	movf	prodl,w,c
  2155  0013BA  0F65               	addlw	low (_key+5)
  2156  0013BC  6ED9               	movwf	fsr2l,c
  2157  0013BE  6ADA               	clrf	fsr2h,c
  2158  0013C0  2ADF               	incf	indf2,f,c
  2159  0013C2  0E04               	movlw	4
  2160  0013C4  18DE               	xorwf	postinc2,w,c
  2161  0013C6  A4D8               	btfss	status,2,c
  2162  0013C8  D02D               	goto	l2599
  2163                           
  2164                           ;ikb.c: 486: {;ikb.c: 487: key[k].counter0 = 0x00;
  2165  0013CA  5002               	movf	ikey_scan@k,w,c
  2166  0013CC  0D10               	mullw	16
  2167  0013CE  50F3               	movf	prodl,w,c
  2168  0013D0  0F65               	addlw	low (_key+5)
  2169  0013D2  6ED9               	movwf	fsr2l,c
  2170  0013D4  6ADA               	clrf	fsr2h,c
  2171  0013D6  0E00               	movlw	0
  2172  0013D8  6EDF               	movwf	indf2,c
  2173                           
  2174                           ;ikb.c: 489: if (key[k].keyRead() != 1)
  2175  0013DA  5002               	movf	ikey_scan@k,w,c
  2176  0013DC  0D10               	mullw	16
  2177  0013DE  50F3               	movf	prodl,w,c
  2178  0013E0  0F60               	addlw	low _key
  2179  0013E2  6ED9               	movwf	fsr2l,c
  2180  0013E4  6ADA               	clrf	fsr2h,c
  2181  0013E6  D801               	call	u2248
  2182  0013E8  D00A               	goto	u2249
  2183  0013EA                     u2248:
  2184  0013EA  0005               	push	
  2185  0013EC  6EFA               	movwf	pclath,c
  2186  0013EE  50DE               	movf	postinc2,w,c
  2187  0013F0  6EFD               	movwf	tosl,c
  2188  0013F2  50DE               	movf	postinc2,w,c
  2189  0013F4  6EFE               	movwf	tosh,c
  2190  0013F6  50F8               	movf	tblptru,w,c
  2191  0013F8  6EFF               	movwf	tosu,c
  2192  0013FA  50FA               	movf	pclath,w,c
  2193  0013FC  0012               	return		;indir
  2194  0013FE                     u2249:
  2195  0013FE  06E8               	decf	wreg,f,c
  2196  001400  A4D8               	btfss	status,2,c
  2197  001402  D796               	goto	u2180
  2198                           
  2199                           ;ikb.c: 493: else;ikb.c: 494: {;ikb.c: 495: key[k].bf.state = 0;
  2200  001404  5002               	movf	ikey_scan@k,w,c
  2201  001406  0D10               	mullw	16
  2202  001408  50F3               	movf	prodl,w,c
  2203  00140A  0F6A               	addlw	low (_key+10)
  2204  00140C  6ED9               	movwf	fsr2l,c
  2205  00140E  6ADA               	clrf	fsr2h,c
  2206  001410  0100               	movlb	0	; () banked
  2207  001412  90DF               	bcf	indf2,0,c
  2208                           
  2209                           ;ikb.c: 496: key[k].sm0 = 0x00;
  2210  001414  5002               	movf	ikey_scan@k,w,c
  2211  001416  0D10               	mullw	16
  2212  001418  50F3               	movf	prodl,w,c
  2213  00141A  0F64               	addlw	low (_key+4)
  2214  00141C  6ED9               	movwf	fsr2l,c
  2215  00141E  6ADA               	clrf	fsr2h,c
  2216  001420  0E00               	movlw	0
  2217  001422  6EDF               	movwf	indf2,c
  2218  001424                     l2599:
  2219                           
  2220                           ;ikb.c: 497: };ikb.c: 498: };ikb.c: 499: };ikb.c: 500: }while (--k >= 0);
  2221  001424  0602               	decf	ikey_scan@k,f,c
  2222  001426  BE02               	btfsc	ikey_scan@k,7,c
  2223  001428  0012               	return	
  2224  00142A  D732               	goto	l2563
  2225  00142C                     __end_of_ikey_scan:
  2226                           	opt callstack 0
  2227                           
  2228 ;; *************** function _keyRead_pin_key4 *****************
  2229 ;; Defined at:
  2230 ;;		line 206 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      unsigned char 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    1
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_ikb_init
  2255 ;;		_ikey_scan
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text18
  2260  001F3E                     __ptext18:
  2261                           	opt callstack 0
  2262  001F3E                     _keyRead_pin_key4:
  2263                           	opt callstack 27
  2264                           
  2265                           ;ikb.c: 208: return ((PORTC & (1<<7))>>7);
  2266                           
  2267                           ;incstack = 0
  2268  001F3E  4482               	rlncf	3970,w,c	;volatile
  2269  001F40  0B01               	andlw	1
  2270  001F42  0012               	return		;funcret
  2271  001F44                     __end_of_keyRead_pin_key4:
  2272                           	opt callstack 0
  2273                           
  2274 ;; *************** function _keyRead_pin_key3 *****************
  2275 ;; Defined at:
  2276 ;;		line 202 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      unsigned char 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_ikb_init
  2301 ;;		_ikey_scan
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text19
  2306  001F1A                     __ptext19:
  2307                           	opt callstack 0
  2308  001F1A                     _keyRead_pin_key3:
  2309                           	opt callstack 27
  2310                           
  2311                           ;ikb.c: 204: return ((PORTC & (1<<6))>>6);
  2312                           
  2313                           ;incstack = 0
  2314  001F1A  4482               	rlncf	3970,w,c	;volatile
  2315  001F1C  46E8               	rlncf	wreg,f,c
  2316  001F1E  0B03               	andlw	3
  2317  001F20  0B01               	andlw	1
  2318  001F22  0012               	return		;funcret
  2319  001F24                     __end_of_keyRead_pin_key3:
  2320                           	opt callstack 0
  2321                           
  2322 ;; *************** function _keyRead_pin_key2 *****************
  2323 ;; Defined at:
  2324 ;;		line 198 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      unsigned char 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2338 ;;      Params:         0       0       0       0       0       0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2341 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_ikb_init
  2349 ;;		_ikey_scan
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text20
  2354  001F24                     __ptext20:
  2355                           	opt callstack 0
  2356  001F24                     _keyRead_pin_key2:
  2357                           	opt callstack 27
  2358                           
  2359                           ;ikb.c: 200: return ((PORTC & (1<<5))>>5);
  2360                           
  2361                           ;incstack = 0
  2362  001F24  3882               	swapf	3970,w,c	;volatile
  2363  001F26  42E8               	rrncf	wreg,f,c
  2364  001F28  0B07               	andlw	7
  2365  001F2A  0B01               	andlw	1
  2366  001F2C  0012               	return		;funcret
  2367  001F2E                     __end_of_keyRead_pin_key2:
  2368                           	opt callstack 0
  2369                           
  2370 ;; *************** function _keyRead_pin_key1 *****************
  2371 ;; Defined at:
  2372 ;;		line 194 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      unsigned char 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2389 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    1
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_ikb_init
  2397 ;;		_ikey_scan
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text21
  2402  001F2E                     __ptext21:
  2403                           	opt callstack 0
  2404  001F2E                     _keyRead_pin_key1:
  2405                           	opt callstack 27
  2406                           
  2407                           ;ikb.c: 196: return ((PORTC & (1<<4))>>4);
  2408                           
  2409                           ;incstack = 0
  2410  001F2E  3882               	swapf	3970,w,c	;volatile
  2411  001F30  0B0F               	andlw	15
  2412  001F32  0B01               	andlw	1
  2413  001F34  0012               	return		;funcret
  2414  001F36                     __end_of_keyRead_pin_key1:
  2415                           	opt callstack 0
  2416                           
  2417 ;; *************** function _keyRead_pin_key5 *****************
  2418 ;; Defined at:
  2419 ;;		line 210 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      unsigned char 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    1
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_ikb_init
  2444 ;;		_ikey_scan
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text22
  2449  001F36                     __ptext22:
  2450                           	opt callstack 0
  2451  001F36                     _keyRead_pin_key5:
  2452                           	opt callstack 27
  2453                           
  2454                           ;ikb.c: 212: return ((PORTD & (1<<4))>>4);
  2455                           
  2456                           ;incstack = 0
  2457  001F36  3883               	swapf	3971,w,c	;volatile
  2458  001F38  0B0F               	andlw	15
  2459  001F3A  0B01               	andlw	1
  2460  001F3C  0012               	return		;funcret
  2461  001F3E                     __end_of_keyRead_pin_key5:
  2462                           	opt callstack 0
  2463                           
  2464 ;; *************** function _ikey_parsing *****************
  2465 ;; Defined at:
  2466 ;;		line 545 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  k               1   24[COMRAM] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0
  2481 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2482 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2483 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2484 ;;Total ram usage:        5 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    3
  2487 ;; This function calls:
  2488 ;;		___ftge
  2489 ;;		___lwtoft
  2490 ;;		_ikey_is_accessible
  2491 ;; This function is called by:
  2492 ;;		_ikb_job
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text23
  2497  00080E                     __ptext23:
  2498                           	opt callstack 0
  2499  00080E                     _ikey_parsing:
  2500                           	opt callstack 26
  2501                           
  2502                           ;ikb.c: 547: uint8_t k;;ikb.c: 549: for (k=0; k < 5; k++)
  2503                           
  2504                           ;incstack = 0
  2505  00080E  0E00               	movlw	0
  2506  000810  6E19               	movwf	ikey_parsing@k,c
  2507  000812                     l2607:
  2508                           
  2509                           ;ikb.c: 550: {;ikb.c: 551: if ( key[k].sm1 == (0) )
  2510  000812  5019               	movf	ikey_parsing@k,w,c
  2511  000814  0D10               	mullw	16
  2512  000816  50F3               	movf	prodl,w,c
  2513  000818  0F66               	addlw	low (_key+6)
  2514  00081A  6ED9               	movwf	fsr2l,c
  2515  00081C  6ADA               	clrf	fsr2h,c
  2516  00081E  50DF               	movf	indf2,w,c
  2517  000820  A4D8               	btfss	status,2,c
  2518  000822  D08B               	goto	l348
  2519                           
  2520                           ;ikb.c: 552: {;ikb.c: 553: if ( ikey_is_accessible(k) )
  2521  000824  5019               	movf	ikey_parsing@k,w,c
  2522  000826  ECAF  F00D         	call	_ikey_is_accessible
  2523  00082A  0900               	iorlw	0
  2524  00082C  B4D8               	btfsc	status,2,c
  2525  00082E  D085               	goto	l348
  2526                           
  2527                           ;ikb.c: 554: {;ikb.c: 555: if (key[k].bf.state == 1)
  2528  000830  5019               	movf	ikey_parsing@k,w,c
  2529  000832  0D10               	mullw	16
  2530  000834  50F3               	movf	prodl,w,c
  2531  000836  0F6A               	addlw	low (_key+10)
  2532  000838  6ED9               	movwf	fsr2l,c
  2533  00083A  6ADA               	clrf	fsr2h,c
  2534  00083C  0100               	movlb	0	; () banked
  2535  00083E  A0DF               	btfss	indf2,0,c
  2536  000840  D07C               	goto	l348
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;ikb.c: 556: {;ikb.c: 558: if (key[k].bf.OnKeyPressed)
  2540  000842  5019               	movf	ikey_parsing@k,w,c
  2541  000844  0D10               	mullw	16
  2542  000846  50F3               	movf	prodl,w,c
  2543  000848  0F6A               	addlw	low (_key+10)
  2544  00084A  6ED9               	movwf	fsr2l,c
  2545  00084C  6ADA               	clrf	fsr2h,c
  2546  00084E  A2DF               	btfss	indf2,1,c
  2547  000850  D01F               	goto	l2621
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;ikb.c: 559: {;ikb.c: 560: key[k].bf.ReadyToRead = 1;
  2551  000852  5019               	movf	ikey_parsing@k,w,c
  2552  000854  0D10               	mullw	16
  2553  000856  50F3               	movf	prodl,w,c
  2554  000858  0F6A               	addlw	low (_key+10)
  2555  00085A  6ED9               	movwf	fsr2l,c
  2556  00085C  6ADA               	clrf	fsr2h,c
  2557  00085E  8CDF               	bsf	indf2,6,c
  2558                           
  2559                           ;ikb.c: 562: if (key[k].bf.Reptt)
  2560  000860  5019               	movf	ikey_parsing@k,w,c
  2561  000862  0D10               	mullw	16
  2562  000864  50F3               	movf	prodl,w,c
  2563  000866  0F6A               	addlw	low (_key+10)
  2564  000868  6ED9               	movwf	fsr2l,c
  2565  00086A  6ADA               	clrf	fsr2h,c
  2566  00086C  AADF               	btfss	indf2,5,c
  2567  00086E  D008               	goto	l2619
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;ikb.c: 563: {;ikb.c: 564: key[k].sm1 = (6);
  2571  000870  5019               	movf	ikey_parsing@k,w,c
  2572  000872  0D10               	mullw	16
  2573  000874  50F3               	movf	prodl,w,c
  2574  000876  0F66               	addlw	low (_key+6)
  2575  000878  6ED9               	movwf	fsr2l,c
  2576  00087A  6ADA               	clrf	fsr2h,c
  2577  00087C  0E06               	movlw	6
  2578  00087E  D037               	goto	L2
  2579  000880                     l2619:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;ikb.c: 566: else;ikb.c: 567: {;ikb.c: 568: key[k].sm1 = (1);
  2583  000880  5019               	movf	ikey_parsing@k,w,c
  2584  000882  0D10               	mullw	16
  2585  000884  50F3               	movf	prodl,w,c
  2586  000886  0F66               	addlw	low (_key+6)
  2587  000888  6ED9               	movwf	fsr2l,c
  2588  00088A  6ADA               	clrf	fsr2h,c
  2589  00088C  0E01               	movlw	1
  2590  00088E  D02F               	goto	L2
  2591  000890                     l2621:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;ikb.c: 571: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2595  000890  5019               	movf	ikey_parsing@k,w,c
  2596  000892  0D10               	mullw	16
  2597  000894  50F3               	movf	prodl,w,c
  2598  000896  0F6A               	addlw	low (_key+10)
  2599  000898  6ED9               	movwf	fsr2l,c
  2600  00089A  6ADA               	clrf	fsr2h,c
  2601  00089C  A4DF               	btfss	indf2,2,c
  2602  00089E  D008               	goto	l2625
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;ikb.c: 572: {;ikb.c: 573: key[k].sm1 = (5);
  2606  0008A0  5019               	movf	ikey_parsing@k,w,c
  2607  0008A2  0D10               	mullw	16
  2608  0008A4  50F3               	movf	prodl,w,c
  2609  0008A6  0F66               	addlw	low (_key+6)
  2610  0008A8  6ED9               	movwf	fsr2l,c
  2611  0008AA  6ADA               	clrf	fsr2h,c
  2612  0008AC  0E05               	movlw	5
  2613  0008AE  D01F               	goto	L2
  2614  0008B0                     l2625:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;ikb.c: 576: else if (key[k].bf.AtTimeExpired)
  2618  0008B0  5019               	movf	ikey_parsing@k,w,c
  2619  0008B2  0D10               	mullw	16
  2620  0008B4  50F3               	movf	prodl,w,c
  2621  0008B6  0F6A               	addlw	low (_key+10)
  2622  0008B8  6ED9               	movwf	fsr2l,c
  2623  0008BA  6ADA               	clrf	fsr2h,c
  2624  0008BC  A6DF               	btfss	indf2,3,c
  2625  0008BE  D008               	goto	l2629
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;ikb.c: 577: {;ikb.c: 578: key[k].sm1 = (3);
  2629  0008C0  5019               	movf	ikey_parsing@k,w,c
  2630  0008C2  0D10               	mullw	16
  2631  0008C4  50F3               	movf	prodl,w,c
  2632  0008C6  0F66               	addlw	low (_key+6)
  2633  0008C8  6ED9               	movwf	fsr2l,c
  2634  0008CA  6ADA               	clrf	fsr2h,c
  2635  0008CC  0E03               	movlw	3
  2636  0008CE  D00F               	goto	L2
  2637  0008D0                     l2629:
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;ikb.c: 580: else if (key[k].bf.AtTimeExpired2)
  2641  0008D0  5019               	movf	ikey_parsing@k,w,c
  2642  0008D2  0D10               	mullw	16
  2643  0008D4  50F3               	movf	prodl,w,c
  2644  0008D6  0F6A               	addlw	low (_key+10)
  2645  0008D8  6ED9               	movwf	fsr2l,c
  2646  0008DA  6ADA               	clrf	fsr2h,c
  2647  0008DC  A8DF               	btfss	indf2,4,c
  2648  0008DE  D008               	goto	l354
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;ikb.c: 581: {;ikb.c: 582: key[k].sm1 = (4);
  2652  0008E0  5019               	movf	ikey_parsing@k,w,c
  2653  0008E2  0D10               	mullw	16
  2654  0008E4  50F3               	movf	prodl,w,c
  2655  0008E6  0F66               	addlw	low (_key+6)
  2656  0008E8  6ED9               	movwf	fsr2l,c
  2657  0008EA  6ADA               	clrf	fsr2h,c
  2658  0008EC  0E04               	movlw	4
  2659  0008EE                     L2:
  2660  0008EE  6EDF               	movwf	indf2,c
  2661  0008F0                     l354:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;ikb.c: 583: };ikb.c: 586: key[k].bf.InProcessing = 1;
  2665  0008F0  5019               	movf	ikey_parsing@k,w,c
  2666  0008F2  0D10               	mullw	16
  2667  0008F4  50F3               	movf	prodl,w,c
  2668  0008F6  0F6B               	addlw	low (_key+11)
  2669  0008F8  6ED9               	movwf	fsr2l,c
  2670  0008FA  6ADA               	clrf	fsr2h,c
  2671  0008FC  82DF               	bsf	indf2,1,c
  2672                           
  2673                           ;ikb.c: 591: if (key[k].num_group_x != 0)
  2674  0008FE  5019               	movf	ikey_parsing@k,w,c
  2675  000900  0D10               	mullw	16
  2676  000902  50F3               	movf	prodl,w,c
  2677  000904  0F69               	addlw	low (_key+9)
  2678  000906  6ED9               	movwf	fsr2l,c
  2679  000908  6ADA               	clrf	fsr2h,c
  2680  00090A  50DF               	movf	indf2,w,c
  2681  00090C  B4D8               	btfsc	status,2,c
  2682  00090E  D015               	goto	l348
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;ikb.c: 592: {;ikb.c: 593: group_x[ key[k].num_group_x ] = 1;
  2686  000910  5019               	movf	ikey_parsing@k,w,c
  2687  000912  0D10               	mullw	16
  2688  000914  50F3               	movf	prodl,w,c
  2689  000916  0F69               	addlw	low (_key+9)
  2690  000918  6ED9               	movwf	fsr2l,c
  2691  00091A  6ADA               	clrf	fsr2h,c
  2692  00091C  50DF               	movf	indf2,w,c
  2693  00091E  6E15               	movwf	??_ikey_parsing& (0+255),c
  2694  000920  5015               	movf	??_ikey_parsing,w,c
  2695  000922  0F48               	addlw	low _group_x
  2696  000924  6ED9               	movwf	fsr2l,c
  2697  000926  6ADA               	clrf	fsr2h,c
  2698  000928  0E01               	movlw	1
  2699  00092A  6EDF               	movwf	indf2,c
  2700                           
  2701                           ;ikb.c: 594: key[k].bf.OwnerOfGroup = 1;
  2702  00092C  5019               	movf	ikey_parsing@k,w,c
  2703  00092E  0D10               	mullw	16
  2704  000930  50F3               	movf	prodl,w,c
  2705  000932  0F6B               	addlw	low (_key+11)
  2706  000934  6ED9               	movwf	fsr2l,c
  2707  000936  6ADA               	clrf	fsr2h,c
  2708  000938  80DF               	bsf	indf2,0,c
  2709  00093A                     l348:
  2710                           
  2711                           ;ikb.c: 595: };ikb.c: 597: };ikb.c: 598: };ikb.c: 599: };ikb.c: 603: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2712  00093A  5019               	movf	ikey_parsing@k,w,c
  2713  00093C  0D10               	mullw	16
  2714  00093E  50F3               	movf	prodl,w,c
  2715  000940  0F66               	addlw	low (_key+6)
  2716  000942  6ED9               	movwf	fsr2l,c
  2717  000944  6ADA               	clrf	fsr2h,c
  2718  000946  0E05               	movlw	5
  2719  000948  64DF               	cpfsgt	indf2,c
  2720  00094A  D024               	goto	l361
  2721  00094C  5019               	movf	ikey_parsing@k,w,c
  2722  00094E  0D10               	mullw	16
  2723  000950  50F3               	movf	prodl,w,c
  2724  000952  0F66               	addlw	low (_key+6)
  2725  000954  6ED9               	movwf	fsr2l,c
  2726  000956  6ADA               	clrf	fsr2h,c
  2727  000958  0E09               	movlw	9
  2728  00095A  60DF               	cpfslt	indf2,c
  2729  00095C  D01B               	goto	l361
  2730                           
  2731                           ;ikb.c: 604: {;ikb.c: 605: if (key[k].bf.state == 0)
  2732  00095E  5019               	movf	ikey_parsing@k,w,c
  2733  000960  0D10               	mullw	16
  2734  000962  50F3               	movf	prodl,w,c
  2735  000964  0F6A               	addlw	low (_key+10)
  2736  000966  6ED9               	movwf	fsr2l,c
  2737  000968  6ADA               	clrf	fsr2h,c
  2738  00096A  0100               	movlb	0	; () banked
  2739  00096C  B0DF               	btfsc	indf2,0,c
  2740  00096E  D012               	goto	l361
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;ikb.c: 606: {;ikb.c: 607: key[k].counter1 = 0;
  2744  000970  5019               	movf	ikey_parsing@k,w,c
  2745  000972  0D10               	mullw	16
  2746  000974  50F3               	movf	prodl,w,c
  2747  000976  0F67               	addlw	low (_key+7)
  2748  000978  6ED9               	movwf	fsr2l,c
  2749  00097A  6ADA               	clrf	fsr2h,c
  2750  00097C  0E00               	movlw	0
  2751  00097E  6EDE               	movwf	postinc2,c
  2752  000980  0E00               	movlw	0
  2753  000982  6EDD               	movwf	postdec2,c
  2754                           
  2755                           ;ikb.c: 608: key[k].sm1 = (2);
  2756  000984  5019               	movf	ikey_parsing@k,w,c
  2757  000986  0D10               	mullw	16
  2758  000988  50F3               	movf	prodl,w,c
  2759  00098A  0F66               	addlw	low (_key+6)
  2760  00098C  6ED9               	movwf	fsr2l,c
  2761  00098E  6ADA               	clrf	fsr2h,c
  2762  000990  0E02               	movlw	2
  2763  000992  6EDF               	movwf	indf2,c
  2764  000994                     l361:
  2765                           
  2766                           ;ikb.c: 609: };ikb.c: 610: };ikb.c: 612: if (key[k].sm1 == (6) )
  2767  000994  5019               	movf	ikey_parsing@k,w,c
  2768  000996  0D10               	mullw	16
  2769  000998  50F3               	movf	prodl,w,c
  2770  00099A  0F66               	addlw	low (_key+6)
  2771  00099C  6ED9               	movwf	fsr2l,c
  2772  00099E  6ADA               	clrf	fsr2h,c
  2773  0009A0  0E06               	movlw	6
  2774  0009A2  18DE               	xorwf	postinc2,w,c
  2775  0009A4  A4D8               	btfss	status,2,c
  2776  0009A6  D027               	goto	l363
  2777                           
  2778                           ;ikb.c: 613: {;ikb.c: 614: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2779  0009A8  5019               	movf	ikey_parsing@k,w,c
  2780  0009AA  0D10               	mullw	16
  2781  0009AC  50F3               	movf	prodl,w,c
  2782  0009AE  0F6C               	addlw	low (_key+12)
  2783  0009B0  6ED9               	movwf	fsr2l,c
  2784  0009B2  6ADA               	clrf	fsr2h,c
  2785  0009B4  5019               	movf	ikey_parsing@k,w,c
  2786  0009B6  0D10               	mullw	16
  2787  0009B8  50F3               	movf	prodl,w,c
  2788  0009BA  0F67               	addlw	low (_key+7)
  2789  0009BC  6EE1               	movwf	fsr1l,c
  2790  0009BE  6AE2               	clrf	fsr1h,c
  2791  0009C0  2AE6               	incf	postinc1,f,c
  2792  0009C2  0E00               	movlw	0
  2793  0009C4  22E5               	addwfc	postdec1,f,c
  2794  0009C6  50DE               	movf	postinc2,w,c
  2795  0009C8  5CE6               	subwf	postinc1,w,c
  2796  0009CA  50DE               	movf	postinc2,w,c
  2797  0009CC  58E6               	subwfb	postinc1,w,c
  2798  0009CE  A0D8               	btfss	status,0,c
  2799  0009D0  D012               	goto	l363
  2800                           
  2801                           ;ikb.c: 615: {;ikb.c: 616: key[k].counter1 =0;
  2802  0009D2  5019               	movf	ikey_parsing@k,w,c
  2803  0009D4  0D10               	mullw	16
  2804  0009D6  50F3               	movf	prodl,w,c
  2805  0009D8  0F67               	addlw	low (_key+7)
  2806  0009DA  6ED9               	movwf	fsr2l,c
  2807  0009DC  6ADA               	clrf	fsr2h,c
  2808  0009DE  0E00               	movlw	0
  2809  0009E0  6EDE               	movwf	postinc2,c
  2810  0009E2  0E00               	movlw	0
  2811  0009E4  6EDD               	movwf	postdec2,c
  2812                           
  2813                           ;ikb.c: 617: key[k].sm1 = (7);
  2814  0009E6  5019               	movf	ikey_parsing@k,w,c
  2815  0009E8  0D10               	mullw	16
  2816  0009EA  50F3               	movf	prodl,w,c
  2817  0009EC  0F66               	addlw	low (_key+6)
  2818  0009EE  6ED9               	movwf	fsr2l,c
  2819  0009F0  6ADA               	clrf	fsr2h,c
  2820  0009F2  0E07               	movlw	7
  2821  0009F4  6EDF               	movwf	indf2,c
  2822  0009F6                     l363:
  2823                           
  2824                           ;ikb.c: 618: };ikb.c: 619: };ikb.c: 620: if (key[k].sm1 == (7))
  2825  0009F6  5019               	movf	ikey_parsing@k,w,c
  2826  0009F8  0D10               	mullw	16
  2827  0009FA  50F3               	movf	prodl,w,c
  2828  0009FC  0F66               	addlw	low (_key+6)
  2829  0009FE  6ED9               	movwf	fsr2l,c
  2830  000A00  6ADA               	clrf	fsr2h,c
  2831  000A02  0E07               	movlw	7
  2832  000A04  18DE               	xorwf	postinc2,w,c
  2833  000A06  A4D8               	btfss	status,2,c
  2834  000A08  D018               	goto	l365
  2835                           
  2836                           ;ikb.c: 621: {;ikb.c: 622: if (key[k].bf.ReadyToRead == 0)
  2837  000A0A  5019               	movf	ikey_parsing@k,w,c
  2838  000A0C  0D10               	mullw	16
  2839  000A0E  50F3               	movf	prodl,w,c
  2840  000A10  0F6A               	addlw	low (_key+10)
  2841  000A12  6ED9               	movwf	fsr2l,c
  2842  000A14  6ADA               	clrf	fsr2h,c
  2843  000A16  0100               	movlb	0	; () banked
  2844  000A18  BCDF               	btfsc	indf2,6,c
  2845  000A1A  D00F               	goto	l365
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;ikb.c: 623: {;ikb.c: 624: key[k].bf.ReadyToRead = 1;
  2849  000A1C  5019               	movf	ikey_parsing@k,w,c
  2850  000A1E  0D10               	mullw	16
  2851  000A20  50F3               	movf	prodl,w,c
  2852  000A22  0F6A               	addlw	low (_key+10)
  2853  000A24  6ED9               	movwf	fsr2l,c
  2854  000A26  6ADA               	clrf	fsr2h,c
  2855  000A28  8CDF               	bsf	indf2,6,c
  2856                           
  2857                           ;ikb.c: 625: key[k].sm1 = (8);
  2858  000A2A  5019               	movf	ikey_parsing@k,w,c
  2859  000A2C  0D10               	mullw	16
  2860  000A2E  50F3               	movf	prodl,w,c
  2861  000A30  0F66               	addlw	low (_key+6)
  2862  000A32  6ED9               	movwf	fsr2l,c
  2863  000A34  6ADA               	clrf	fsr2h,c
  2864  000A36  0E08               	movlw	8
  2865  000A38  6EDF               	movwf	indf2,c
  2866  000A3A                     l365:
  2867                           
  2868                           ;ikb.c: 626: };ikb.c: 627: };ikb.c: 628: if (key[k].sm1 == (8))
  2869  000A3A  5019               	movf	ikey_parsing@k,w,c
  2870  000A3C  0D10               	mullw	16
  2871  000A3E  50F3               	movf	prodl,w,c
  2872  000A40  0F66               	addlw	low (_key+6)
  2873  000A42  6ED9               	movwf	fsr2l,c
  2874  000A44  6ADA               	clrf	fsr2h,c
  2875  000A46  0E08               	movlw	8
  2876  000A48  18DE               	xorwf	postinc2,w,c
  2877  000A4A  A4D8               	btfss	status,2,c
  2878  000A4C  D027               	goto	l367
  2879                           
  2880                           ;ikb.c: 629: {;ikb.c: 630: if ( ++key[k].counter1 >= key[k].repp.after_start)
  2881  000A4E  5019               	movf	ikey_parsing@k,w,c
  2882  000A50  0D10               	mullw	16
  2883  000A52  50F3               	movf	prodl,w,c
  2884  000A54  0F6E               	addlw	low (_key+14)
  2885  000A56  6ED9               	movwf	fsr2l,c
  2886  000A58  6ADA               	clrf	fsr2h,c
  2887  000A5A  5019               	movf	ikey_parsing@k,w,c
  2888  000A5C  0D10               	mullw	16
  2889  000A5E  50F3               	movf	prodl,w,c
  2890  000A60  0F67               	addlw	low (_key+7)
  2891  000A62  6EE1               	movwf	fsr1l,c
  2892  000A64  6AE2               	clrf	fsr1h,c
  2893  000A66  2AE6               	incf	postinc1,f,c
  2894  000A68  0E00               	movlw	0
  2895  000A6A  22E5               	addwfc	postdec1,f,c
  2896  000A6C  50DE               	movf	postinc2,w,c
  2897  000A6E  5CE6               	subwf	postinc1,w,c
  2898  000A70  50DE               	movf	postinc2,w,c
  2899  000A72  58E6               	subwfb	postinc1,w,c
  2900  000A74  A0D8               	btfss	status,0,c
  2901  000A76  D012               	goto	l367
  2902                           
  2903                           ;ikb.c: 631: {;ikb.c: 632: key[k].counter1 = 0;
  2904  000A78  5019               	movf	ikey_parsing@k,w,c
  2905  000A7A  0D10               	mullw	16
  2906  000A7C  50F3               	movf	prodl,w,c
  2907  000A7E  0F67               	addlw	low (_key+7)
  2908  000A80  6ED9               	movwf	fsr2l,c
  2909  000A82  6ADA               	clrf	fsr2h,c
  2910  000A84  0E00               	movlw	0
  2911  000A86  6EDE               	movwf	postinc2,c
  2912  000A88  0E00               	movlw	0
  2913  000A8A  6EDD               	movwf	postdec2,c
  2914                           
  2915                           ;ikb.c: 633: key[k].sm1 = (7);
  2916  000A8C  5019               	movf	ikey_parsing@k,w,c
  2917  000A8E  0D10               	mullw	16
  2918  000A90  50F3               	movf	prodl,w,c
  2919  000A92  0F66               	addlw	low (_key+6)
  2920  000A94  6ED9               	movwf	fsr2l,c
  2921  000A96  6ADA               	clrf	fsr2h,c
  2922  000A98  0E07               	movlw	7
  2923  000A9A  6EDF               	movwf	indf2,c
  2924  000A9C                     l367:
  2925                           
  2926                           ;ikb.c: 634: };ikb.c: 635: };ikb.c: 637: if (key[k].sm1 == (5) )
  2927  000A9C  5019               	movf	ikey_parsing@k,w,c
  2928  000A9E  0D10               	mullw	16
  2929  000AA0  50F3               	movf	prodl,w,c
  2930  000AA2  0F66               	addlw	low (_key+6)
  2931  000AA4  6ED9               	movwf	fsr2l,c
  2932  000AA6  6ADA               	clrf	fsr2h,c
  2933  000AA8  0E05               	movlw	5
  2934  000AAA  18DE               	xorwf	postinc2,w,c
  2935  000AAC  A4D8               	btfss	status,2,c
  2936  000AAE  D018               	goto	l369
  2937                           
  2938                           ;ikb.c: 638: {;ikb.c: 639: if (key[k].bf.state == 0)
  2939  000AB0  5019               	movf	ikey_parsing@k,w,c
  2940  000AB2  0D10               	mullw	16
  2941  000AB4  50F3               	movf	prodl,w,c
  2942  000AB6  0F6A               	addlw	low (_key+10)
  2943  000AB8  6ED9               	movwf	fsr2l,c
  2944  000ABA  6ADA               	clrf	fsr2h,c
  2945  000ABC  0100               	movlb	0	; () banked
  2946  000ABE  B0DF               	btfsc	indf2,0,c
  2947  000AC0  D00F               	goto	l369
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;ikb.c: 640: {;ikb.c: 641: key[k].bf.ReadyToRead = 1;
  2951  000AC2  5019               	movf	ikey_parsing@k,w,c
  2952  000AC4  0D10               	mullw	16
  2953  000AC6  50F3               	movf	prodl,w,c
  2954  000AC8  0F6A               	addlw	low (_key+10)
  2955  000ACA  6ED9               	movwf	fsr2l,c
  2956  000ACC  6ADA               	clrf	fsr2h,c
  2957  000ACE  8CDF               	bsf	indf2,6,c
  2958                           
  2959                           ;ikb.c: 642: key[k].sm1 = (2);
  2960  000AD0  5019               	movf	ikey_parsing@k,w,c
  2961  000AD2  0D10               	mullw	16
  2962  000AD4  50F3               	movf	prodl,w,c
  2963  000AD6  0F66               	addlw	low (_key+6)
  2964  000AD8  6ED9               	movwf	fsr2l,c
  2965  000ADA  6ADA               	clrf	fsr2h,c
  2966  000ADC  0E02               	movlw	2
  2967  000ADE  6EDF               	movwf	indf2,c
  2968  000AE0                     l369:
  2969                           
  2970                           ;ikb.c: 643: };ikb.c: 644: };ikb.c: 646: if (key[k].sm1 == (3) )
  2971  000AE0  5019               	movf	ikey_parsing@k,w,c
  2972  000AE2  0D10               	mullw	16
  2973  000AE4  50F3               	movf	prodl,w,c
  2974  000AE6  0F66               	addlw	low (_key+6)
  2975  000AE8  6ED9               	movwf	fsr2l,c
  2976  000AEA  6ADA               	clrf	fsr2h,c
  2977  000AEC  0E03               	movlw	3
  2978  000AEE  18DE               	xorwf	postinc2,w,c
  2979  000AF0  A4D8               	btfss	status,2,c
  2980  000AF2  D09C               	goto	l371
  2981                           
  2982                           ;ikb.c: 647: {;ikb.c: 648: key[k].counter1++;
  2983  000AF4  5019               	movf	ikey_parsing@k,w,c
  2984  000AF6  0D10               	mullw	16
  2985  000AF8  50F3               	movf	prodl,w,c
  2986  000AFA  0F67               	addlw	low (_key+7)
  2987  000AFC  6ED9               	movwf	fsr2l,c
  2988  000AFE  6ADA               	clrf	fsr2h,c
  2989  000B00  2ADE               	incf	postinc2,f,c
  2990  000B02  0E00               	movlw	0
  2991  000B04  22DD               	addwfc	postdec2,f,c
  2992                           
  2993                           ;ikb.c: 650: if (key[k].bf.state == 0)
  2994  000B06  5019               	movf	ikey_parsing@k,w,c
  2995  000B08  0D10               	mullw	16
  2996  000B0A  50F3               	movf	prodl,w,c
  2997  000B0C  0F6A               	addlw	low (_key+10)
  2998  000B0E  6ED9               	movwf	fsr2l,c
  2999  000B10  6ADA               	clrf	fsr2h,c
  3000  000B12  0100               	movlb	0	; () banked
  3001  000B14  B0DF               	btfsc	indf2,0,c
  3002  000B16  D03D               	goto	l2663
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;ikb.c: 651: {;ikb.c: 652: if (key[k].counter1 <= (1000E-3/5E-3) )
  3006  000B18  0E00               	movlw	0
  3007  000B1A  6E0C               	movwf	___ftge@ff1,c
  3008  000B1C  0E48               	movlw	72
  3009  000B1E  6E0D               	movwf	___ftge@ff1+1,c
  3010  000B20  0E43               	movlw	67
  3011  000B22  6E0E               	movwf	___ftge@ff1+2,c
  3012  000B24  5019               	movf	ikey_parsing@k,w,c
  3013  000B26  0D10               	mullw	16
  3014  000B28  50F3               	movf	prodl,w,c
  3015  000B2A  0F67               	addlw	low (_key+7)
  3016  000B2C  6ED9               	movwf	fsr2l,c
  3017  000B2E  6ADA               	clrf	fsr2h,c
  3018  000B30  CFDE F009          	movff	postinc2,___lwtoft@c
  3019  000B34  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3020  000B38  EC17  F00F         	call	___lwtoft	;wreg free
  3021  000B3C  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3022  000B40  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3023  000B44  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3024  000B48  ECBF  F00C         	call	___ftge	;wreg free
  3025  000B4C  A0D8               	btfss	status,0,c
  3026  000B4E  D021               	goto	l2663
  3027                           
  3028                           ;ikb.c: 653: {;ikb.c: 654: key[k].counter1 = 0;
  3029  000B50  5019               	movf	ikey_parsing@k,w,c
  3030  000B52  0D10               	mullw	16
  3031  000B54  50F3               	movf	prodl,w,c
  3032  000B56  0F67               	addlw	low (_key+7)
  3033  000B58  6ED9               	movwf	fsr2l,c
  3034  000B5A  6ADA               	clrf	fsr2h,c
  3035  000B5C  0E00               	movlw	0
  3036  000B5E  6EDE               	movwf	postinc2,c
  3037  000B60  0E00               	movlw	0
  3038  000B62  6EDD               	movwf	postdec2,c
  3039                           
  3040                           ;ikb.c: 656: key[k].bf.ReadyToRead = 1;
  3041  000B64  5019               	movf	ikey_parsing@k,w,c
  3042  000B66  0D10               	mullw	16
  3043  000B68  50F3               	movf	prodl,w,c
  3044  000B6A  0F6A               	addlw	low (_key+10)
  3045  000B6C  6ED9               	movwf	fsr2l,c
  3046  000B6E  6ADA               	clrf	fsr2h,c
  3047  000B70  0100               	movlb	0	; () banked
  3048  000B72  8CDF               	bsf	indf2,6,c
  3049                           
  3050                           ;ikb.c: 657: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3051  000B74  5019               	movf	ikey_parsing@k,w,c
  3052  000B76  0D10               	mullw	16
  3053  000B78  50F3               	movf	prodl,w,c
  3054  000B7A  0F6A               	addlw	low (_key+10)
  3055  000B7C  6ED9               	movwf	fsr2l,c
  3056  000B7E  6ADA               	clrf	fsr2h,c
  3057  000B80  9EDF               	bcf	indf2,7,c
  3058                           
  3059                           ;ikb.c: 659: key[k].sm1 = (2);
  3060  000B82  5019               	movf	ikey_parsing@k,w,c
  3061  000B84  0D10               	mullw	16
  3062  000B86  50F3               	movf	prodl,w,c
  3063  000B88  0F66               	addlw	low (_key+6)
  3064  000B8A  6ED9               	movwf	fsr2l,c
  3065  000B8C  6ADA               	clrf	fsr2h,c
  3066  000B8E  0E02               	movlw	2
  3067  000B90  6EDF               	movwf	indf2,c
  3068  000B92                     l2663:
  3069                           
  3070                           ;ikb.c: 660: };ikb.c: 661: };ikb.c: 663: if (key[k].counter1 > (1000E-3/5E-3) )
  3071  000B92  0E00               	movlw	0
  3072  000B94  6E0C               	movwf	___ftge@ff1,c
  3073  000B96  0E48               	movlw	72
  3074  000B98  6E0D               	movwf	___ftge@ff1+1,c
  3075  000B9A  0E43               	movlw	67
  3076  000B9C  6E0E               	movwf	___ftge@ff1+2,c
  3077  000B9E  5019               	movf	ikey_parsing@k,w,c
  3078  000BA0  0D10               	mullw	16
  3079  000BA2  50F3               	movf	prodl,w,c
  3080  000BA4  0F67               	addlw	low (_key+7)
  3081  000BA6  6ED9               	movwf	fsr2l,c
  3082  000BA8  6ADA               	clrf	fsr2h,c
  3083  000BAA  CFDE F009          	movff	postinc2,___lwtoft@c
  3084  000BAE  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3085  000BB2  EC17  F00F         	call	___lwtoft	;wreg free
  3086  000BB6  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3087  000BBA  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3088  000BBE  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3089  000BC2  ECBF  F00C         	call	___ftge	;wreg free
  3090  000BC6  B0D8               	btfsc	status,0,c
  3091  000BC8  D031               	goto	l371
  3092                           
  3093                           ;ikb.c: 664: {;ikb.c: 665: key[k].counter1 = 0x0000;
  3094  000BCA  5019               	movf	ikey_parsing@k,w,c
  3095  000BCC  0D10               	mullw	16
  3096  000BCE  50F3               	movf	prodl,w,c
  3097  000BD0  0F67               	addlw	low (_key+7)
  3098  000BD2  6ED9               	movwf	fsr2l,c
  3099  000BD4  6ADA               	clrf	fsr2h,c
  3100  000BD6  0E00               	movlw	0
  3101  000BD8  6EDE               	movwf	postinc2,c
  3102  000BDA  0E00               	movlw	0
  3103  000BDC  6EDD               	movwf	postdec2,c
  3104                           
  3105                           ;ikb.c: 667: key[k].bf.ReadyToRead = 1;
  3106  000BDE  5019               	movf	ikey_parsing@k,w,c
  3107  000BE0  0D10               	mullw	16
  3108  000BE2  50F3               	movf	prodl,w,c
  3109  000BE4  0F6A               	addlw	low (_key+10)
  3110  000BE6  6ED9               	movwf	fsr2l,c
  3111  000BE8  6ADA               	clrf	fsr2h,c
  3112  000BEA  0100               	movlb	0	; () banked
  3113  000BEC  8CDF               	bsf	indf2,6,c
  3114                           
  3115                           ;ikb.c: 668: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3116  000BEE  5019               	movf	ikey_parsing@k,w,c
  3117  000BF0  0D10               	mullw	16
  3118  000BF2  50F3               	movf	prodl,w,c
  3119  000BF4  0F6A               	addlw	low (_key+10)
  3120  000BF6  6ED9               	movwf	fsr2l,c
  3121  000BF8  6ADA               	clrf	fsr2h,c
  3122  000BFA  8EDF               	bsf	indf2,7,c
  3123                           
  3124                           ;ikb.c: 670: if (!key[k].bf.Reptt)
  3125  000BFC  5019               	movf	ikey_parsing@k,w,c
  3126  000BFE  0D10               	mullw	16
  3127  000C00  50F3               	movf	prodl,w,c
  3128  000C02  0F6A               	addlw	low (_key+10)
  3129  000C04  6ED9               	movwf	fsr2l,c
  3130  000C06  6ADA               	clrf	fsr2h,c
  3131  000C08  BADF               	btfsc	indf2,5,c
  3132  000C0A  D008               	goto	l2669
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;ikb.c: 671: {;ikb.c: 672: key[k].sm1 = (1);
  3136  000C0C  5019               	movf	ikey_parsing@k,w,c
  3137  000C0E  0D10               	mullw	16
  3138  000C10  50F3               	movf	prodl,w,c
  3139  000C12  0F66               	addlw	low (_key+6)
  3140  000C14  6ED9               	movwf	fsr2l,c
  3141  000C16  6ADA               	clrf	fsr2h,c
  3142  000C18  0E01               	movlw	1
  3143  000C1A  D007               	goto	L3
  3144  000C1C                     l2669:
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;ikb.c: 674: else;ikb.c: 675: {;ikb.c: 676: key[k].sm1 = (8);
  3148  000C1C  5019               	movf	ikey_parsing@k,w,c
  3149  000C1E  0D10               	mullw	16
  3150  000C20  50F3               	movf	prodl,w,c
  3151  000C22  0F66               	addlw	low (_key+6)
  3152  000C24  6ED9               	movwf	fsr2l,c
  3153  000C26  6ADA               	clrf	fsr2h,c
  3154  000C28  0E08               	movlw	8
  3155  000C2A                     L3:
  3156  000C2A  6EDF               	movwf	indf2,c
  3157  000C2C                     l371:
  3158                           
  3159                           ;ikb.c: 677: };ikb.c: 678: };ikb.c: 679: };ikb.c: 684: if (key[k].sm1 == (4))
  3160  000C2C  5019               	movf	ikey_parsing@k,w,c
  3161  000C2E  0D10               	mullw	16
  3162  000C30  50F3               	movf	prodl,w,c
  3163  000C32  0F66               	addlw	low (_key+6)
  3164  000C34  6ED9               	movwf	fsr2l,c
  3165  000C36  6ADA               	clrf	fsr2h,c
  3166  000C38  0E04               	movlw	4
  3167  000C3A  18DE               	xorwf	postinc2,w,c
  3168  000C3C  A4D8               	btfss	status,2,c
  3169  000C3E  D08C               	goto	l377
  3170                           
  3171                           ;ikb.c: 685: {;ikb.c: 686: key[k].counter1++;
  3172  000C40  5019               	movf	ikey_parsing@k,w,c
  3173  000C42  0D10               	mullw	16
  3174  000C44  50F3               	movf	prodl,w,c
  3175  000C46  0F67               	addlw	low (_key+7)
  3176  000C48  6ED9               	movwf	fsr2l,c
  3177  000C4A  6ADA               	clrf	fsr2h,c
  3178  000C4C  2ADE               	incf	postinc2,f,c
  3179  000C4E  0E00               	movlw	0
  3180  000C50  22DD               	addwfc	postdec2,f,c
  3181                           
  3182                           ;ikb.c: 688: if (key[k].bf.state == 0)
  3183  000C52  5019               	movf	ikey_parsing@k,w,c
  3184  000C54  0D10               	mullw	16
  3185  000C56  50F3               	movf	prodl,w,c
  3186  000C58  0F6A               	addlw	low (_key+10)
  3187  000C5A  6ED9               	movwf	fsr2l,c
  3188  000C5C  6ADA               	clrf	fsr2h,c
  3189  000C5E  0100               	movlb	0	; () banked
  3190  000C60  B0DF               	btfsc	indf2,0,c
  3191  000C62  D03D               	goto	l2677
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;ikb.c: 689: {;ikb.c: 690: if (key[k].counter1 <= (1000E-3/5E-3))
  3195  000C64  0E00               	movlw	0
  3196  000C66  6E0C               	movwf	___ftge@ff1,c
  3197  000C68  0E48               	movlw	72
  3198  000C6A  6E0D               	movwf	___ftge@ff1+1,c
  3199  000C6C  0E43               	movlw	67
  3200  000C6E  6E0E               	movwf	___ftge@ff1+2,c
  3201  000C70  5019               	movf	ikey_parsing@k,w,c
  3202  000C72  0D10               	mullw	16
  3203  000C74  50F3               	movf	prodl,w,c
  3204  000C76  0F67               	addlw	low (_key+7)
  3205  000C78  6ED9               	movwf	fsr2l,c
  3206  000C7A  6ADA               	clrf	fsr2h,c
  3207  000C7C  CFDE F009          	movff	postinc2,___lwtoft@c
  3208  000C80  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3209  000C84  EC17  F00F         	call	___lwtoft	;wreg free
  3210  000C88  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3211  000C8C  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3212  000C90  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3213  000C94  ECBF  F00C         	call	___ftge	;wreg free
  3214  000C98  A0D8               	btfss	status,0,c
  3215  000C9A  D021               	goto	l2677
  3216                           
  3217                           ;ikb.c: 691: {;ikb.c: 692: key[k].counter1 = 0;
  3218  000C9C  5019               	movf	ikey_parsing@k,w,c
  3219  000C9E  0D10               	mullw	16
  3220  000CA0  50F3               	movf	prodl,w,c
  3221  000CA2  0F67               	addlw	low (_key+7)
  3222  000CA4  6ED9               	movwf	fsr2l,c
  3223  000CA6  6ADA               	clrf	fsr2h,c
  3224  000CA8  0E00               	movlw	0
  3225  000CAA  6EDE               	movwf	postinc2,c
  3226  000CAC  0E00               	movlw	0
  3227  000CAE  6EDD               	movwf	postdec2,c
  3228                           
  3229                           ;ikb.c: 694: key[k].bf.ReadyToRead = 1;
  3230  000CB0  5019               	movf	ikey_parsing@k,w,c
  3231  000CB2  0D10               	mullw	16
  3232  000CB4  50F3               	movf	prodl,w,c
  3233  000CB6  0F6A               	addlw	low (_key+10)
  3234  000CB8  6ED9               	movwf	fsr2l,c
  3235  000CBA  6ADA               	clrf	fsr2h,c
  3236  000CBC  0100               	movlb	0	; () banked
  3237  000CBE  8CDF               	bsf	indf2,6,c
  3238                           
  3239                           ;ikb.c: 695: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3240  000CC0  5019               	movf	ikey_parsing@k,w,c
  3241  000CC2  0D10               	mullw	16
  3242  000CC4  50F3               	movf	prodl,w,c
  3243  000CC6  0F6A               	addlw	low (_key+10)
  3244  000CC8  6ED9               	movwf	fsr2l,c
  3245  000CCA  6ADA               	clrf	fsr2h,c
  3246  000CCC  9EDF               	bcf	indf2,7,c
  3247                           
  3248                           ;ikb.c: 697: key[k].sm1 = (2);
  3249  000CCE  5019               	movf	ikey_parsing@k,w,c
  3250  000CD0  0D10               	mullw	16
  3251  000CD2  50F3               	movf	prodl,w,c
  3252  000CD4  0F66               	addlw	low (_key+6)
  3253  000CD6  6ED9               	movwf	fsr2l,c
  3254  000CD8  6ADA               	clrf	fsr2h,c
  3255  000CDA  0E02               	movlw	2
  3256  000CDC  6EDF               	movwf	indf2,c
  3257  000CDE                     l2677:
  3258                           
  3259                           ;ikb.c: 698: };ikb.c: 699: };ikb.c: 702: if (key[k].counter1 >= (3000E-3/5E-3))
  3260  000CDE  5019               	movf	ikey_parsing@k,w,c
  3261  000CE0  0D10               	mullw	16
  3262  000CE2  50F3               	movf	prodl,w,c
  3263  000CE4  0F67               	addlw	low (_key+7)
  3264  000CE6  6ED9               	movwf	fsr2l,c
  3265  000CE8  6ADA               	clrf	fsr2h,c
  3266  000CEA  CFDE F009          	movff	postinc2,___lwtoft@c
  3267  000CEE  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3268  000CF2  EC17  F00F         	call	___lwtoft	;wreg free
  3269  000CF6  C009  F00C         	movff	?___lwtoft,___ftge@ff1
  3270  000CFA  C00A  F00D         	movff	?___lwtoft+1,___ftge@ff1+1
  3271  000CFE  C00B  F00E         	movff	?___lwtoft+2,___ftge@ff1+2
  3272  000D02  0E00               	movlw	0
  3273  000D04  6E0F               	movwf	___ftge@ff2,c
  3274  000D06  0E16               	movlw	22
  3275  000D08  6E10               	movwf	___ftge@ff2+1,c
  3276  000D0A  0E44               	movlw	68
  3277  000D0C  6E11               	movwf	___ftge@ff2+2,c
  3278  000D0E  ECBF  F00C         	call	___ftge	;wreg free
  3279  000D12  A0D8               	btfss	status,0,c
  3280  000D14  D021               	goto	l377
  3281                           
  3282                           ;ikb.c: 703: {;ikb.c: 704: key[k].counter1 = 0x0000;
  3283  000D16  5019               	movf	ikey_parsing@k,w,c
  3284  000D18  0D10               	mullw	16
  3285  000D1A  50F3               	movf	prodl,w,c
  3286  000D1C  0F67               	addlw	low (_key+7)
  3287  000D1E  6ED9               	movwf	fsr2l,c
  3288  000D20  6ADA               	clrf	fsr2h,c
  3289  000D22  0E00               	movlw	0
  3290  000D24  6EDE               	movwf	postinc2,c
  3291  000D26  0E00               	movlw	0
  3292  000D28  6EDD               	movwf	postdec2,c
  3293                           
  3294                           ;ikb.c: 706: key[k].bf.ReadyToRead = 1;
  3295  000D2A  5019               	movf	ikey_parsing@k,w,c
  3296  000D2C  0D10               	mullw	16
  3297  000D2E  50F3               	movf	prodl,w,c
  3298  000D30  0F6A               	addlw	low (_key+10)
  3299  000D32  6ED9               	movwf	fsr2l,c
  3300  000D34  6ADA               	clrf	fsr2h,c
  3301  000D36  0100               	movlb	0	; () banked
  3302  000D38  8CDF               	bsf	indf2,6,c
  3303                           
  3304                           ;ikb.c: 707: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3305  000D3A  5019               	movf	ikey_parsing@k,w,c
  3306  000D3C  0D10               	mullw	16
  3307  000D3E  50F3               	movf	prodl,w,c
  3308  000D40  0F6A               	addlw	low (_key+10)
  3309  000D42  6ED9               	movwf	fsr2l,c
  3310  000D44  6ADA               	clrf	fsr2h,c
  3311  000D46  8EDF               	bsf	indf2,7,c
  3312                           
  3313                           ;ikb.c: 710: key[k].sm1 = (1);
  3314  000D48  5019               	movf	ikey_parsing@k,w,c
  3315  000D4A  0D10               	mullw	16
  3316  000D4C  50F3               	movf	prodl,w,c
  3317  000D4E  0F66               	addlw	low (_key+6)
  3318  000D50  6ED9               	movwf	fsr2l,c
  3319  000D52  6ADA               	clrf	fsr2h,c
  3320  000D54  0E01               	movlw	1
  3321  000D56  6EDF               	movwf	indf2,c
  3322  000D58                     l377:
  3323                           
  3324                           ;ikb.c: 711: };ikb.c: 712: };ikb.c: 715: if (key[k].sm1 == (1))
  3325  000D58  5019               	movf	ikey_parsing@k,w,c
  3326  000D5A  0D10               	mullw	16
  3327  000D5C  50F3               	movf	prodl,w,c
  3328  000D5E  0F66               	addlw	low (_key+6)
  3329  000D60  6ED9               	movwf	fsr2l,c
  3330  000D62  6ADA               	clrf	fsr2h,c
  3331  000D64  04DE               	decf	postinc2,w,c
  3332  000D66  A4D8               	btfss	status,2,c
  3333  000D68  D011               	goto	l381
  3334                           
  3335                           ;ikb.c: 716: {;ikb.c: 717: if (key[k].bf.state == 0)
  3336  000D6A  5019               	movf	ikey_parsing@k,w,c
  3337  000D6C  0D10               	mullw	16
  3338  000D6E  50F3               	movf	prodl,w,c
  3339  000D70  0F6A               	addlw	low (_key+10)
  3340  000D72  6ED9               	movwf	fsr2l,c
  3341  000D74  6ADA               	clrf	fsr2h,c
  3342  000D76  0100               	movlb	0	; () banked
  3343  000D78  B0DF               	btfsc	indf2,0,c
  3344  000D7A  D008               	goto	l381
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;ikb.c: 718: {;ikb.c: 719: key[k].sm1 = (2);
  3348  000D7C  5019               	movf	ikey_parsing@k,w,c
  3349  000D7E  0D10               	mullw	16
  3350  000D80  50F3               	movf	prodl,w,c
  3351  000D82  0F66               	addlw	low (_key+6)
  3352  000D84  6ED9               	movwf	fsr2l,c
  3353  000D86  6ADA               	clrf	fsr2h,c
  3354  000D88  0E02               	movlw	2
  3355  000D8A  6EDF               	movwf	indf2,c
  3356  000D8C                     l381:
  3357                           
  3358                           ;ikb.c: 720: };ikb.c: 721: };ikb.c: 723: if (key[k].sm1 == (2))
  3359  000D8C  5019               	movf	ikey_parsing@k,w,c
  3360  000D8E  0D10               	mullw	16
  3361  000D90  50F3               	movf	prodl,w,c
  3362  000D92  0F66               	addlw	low (_key+6)
  3363  000D94  6ED9               	movwf	fsr2l,c
  3364  000D96  6ADA               	clrf	fsr2h,c
  3365  000D98  0E02               	movlw	2
  3366  000D9A  18DE               	xorwf	postinc2,w,c
  3367  000D9C  A4D8               	btfss	status,2,c
  3368  000D9E  D011               	goto	l383
  3369                           
  3370                           ;ikb.c: 724: {;ikb.c: 725: if (key[k].bf.ReadyToRead == 0)
  3371  000DA0  5019               	movf	ikey_parsing@k,w,c
  3372  000DA2  0D10               	mullw	16
  3373  000DA4  50F3               	movf	prodl,w,c
  3374  000DA6  0F6A               	addlw	low (_key+10)
  3375  000DA8  6ED9               	movwf	fsr2l,c
  3376  000DAA  6ADA               	clrf	fsr2h,c
  3377  000DAC  0100               	movlb	0	; () banked
  3378  000DAE  BCDF               	btfsc	indf2,6,c
  3379  000DB0  D008               	goto	l383
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;ikb.c: 726: {;ikb.c: 727: key[k].sm1 = (9);
  3383  000DB2  5019               	movf	ikey_parsing@k,w,c
  3384  000DB4  0D10               	mullw	16
  3385  000DB6  50F3               	movf	prodl,w,c
  3386  000DB8  0F66               	addlw	low (_key+6)
  3387  000DBA  6ED9               	movwf	fsr2l,c
  3388  000DBC  6ADA               	clrf	fsr2h,c
  3389  000DBE  0E09               	movlw	9
  3390  000DC0  6EDF               	movwf	indf2,c
  3391  000DC2                     l383:
  3392                           
  3393                           ;ikb.c: 728: };ikb.c: 729: };ikb.c: 731: if (key[k].sm1 == (9))
  3394  000DC2  5019               	movf	ikey_parsing@k,w,c
  3395  000DC4  0D10               	mullw	16
  3396  000DC6  50F3               	movf	prodl,w,c
  3397  000DC8  0F66               	addlw	low (_key+6)
  3398  000DCA  6ED9               	movwf	fsr2l,c
  3399  000DCC  6ADA               	clrf	fsr2h,c
  3400  000DCE  0E09               	movlw	9
  3401  000DD0  18DE               	xorwf	postinc2,w,c
  3402  000DD2  A4D8               	btfss	status,2,c
  3403  000DD4  D02F               	goto	l2693
  3404                           
  3405                           ;ikb.c: 732: {;ikb.c: 733: if (key[k].num_group_x > 0)
  3406  000DD6  5019               	movf	ikey_parsing@k,w,c
  3407  000DD8  0D10               	mullw	16
  3408  000DDA  50F3               	movf	prodl,w,c
  3409  000DDC  0F69               	addlw	low (_key+9)
  3410  000DDE  6ED9               	movwf	fsr2l,c
  3411  000DE0  6ADA               	clrf	fsr2h,c
  3412  000DE2  50DF               	movf	indf2,w,c
  3413  000DE4  B4D8               	btfsc	status,2,c
  3414  000DE6  D016               	goto	l386
  3415                           
  3416                           ;ikb.c: 734: {;ikb.c: 735: group_x[key[k].num_group_x] = 0;
  3417  000DE8  5019               	movf	ikey_parsing@k,w,c
  3418  000DEA  0D10               	mullw	16
  3419  000DEC  50F3               	movf	prodl,w,c
  3420  000DEE  0F69               	addlw	low (_key+9)
  3421  000DF0  6ED9               	movwf	fsr2l,c
  3422  000DF2  6ADA               	clrf	fsr2h,c
  3423  000DF4  50DF               	movf	indf2,w,c
  3424  000DF6  6E15               	movwf	??_ikey_parsing& (0+255),c
  3425  000DF8  5015               	movf	??_ikey_parsing,w,c
  3426  000DFA  0F48               	addlw	low _group_x
  3427  000DFC  6ED9               	movwf	fsr2l,c
  3428  000DFE  6ADA               	clrf	fsr2h,c
  3429  000E00  0E00               	movlw	0
  3430  000E02  6EDF               	movwf	indf2,c
  3431                           
  3432                           ;ikb.c: 736: key[k].bf.OwnerOfGroup = 0;
  3433  000E04  5019               	movf	ikey_parsing@k,w,c
  3434  000E06  0D10               	mullw	16
  3435  000E08  50F3               	movf	prodl,w,c
  3436  000E0A  0F6B               	addlw	low (_key+11)
  3437  000E0C  6ED9               	movwf	fsr2l,c
  3438  000E0E  6ADA               	clrf	fsr2h,c
  3439  000E10  0100               	movlb	0	; () banked
  3440  000E12  90DF               	bcf	indf2,0,c
  3441  000E14                     l386:
  3442                           
  3443                           ;ikb.c: 737: };ikb.c: 739: key[k].sm1 = (0);
  3444  000E14  5019               	movf	ikey_parsing@k,w,c
  3445  000E16  0D10               	mullw	16
  3446  000E18  50F3               	movf	prodl,w,c
  3447  000E1A  0F66               	addlw	low (_key+6)
  3448  000E1C  6ED9               	movwf	fsr2l,c
  3449  000E1E  6ADA               	clrf	fsr2h,c
  3450  000E20  0E00               	movlw	0
  3451  000E22  6EDF               	movwf	indf2,c
  3452                           
  3453                           ;ikb.c: 742: key[k].bf.InProcessing = 0;
  3454  000E24  5019               	movf	ikey_parsing@k,w,c
  3455  000E26  0D10               	mullw	16
  3456  000E28  50F3               	movf	prodl,w,c
  3457  000E2A  0F6B               	addlw	low (_key+11)
  3458  000E2C  6ED9               	movwf	fsr2l,c
  3459  000E2E  6ADA               	clrf	fsr2h,c
  3460  000E30  0100               	movlb	0	; () banked
  3461  000E32  92DF               	bcf	indf2,1,c
  3462  000E34                     l2693:
  3463  000E34  2A19               	incf	ikey_parsing@k,f,c
  3464  000E36  0E04               	movlw	4
  3465  000E38  6419               	cpfsgt	ikey_parsing@k,c
  3466  000E3A  D4EB               	goto	l2607
  3467  000E3C  0012               	return	
  3468  000E3E                     __end_of_ikey_parsing:
  3469                           	opt callstack 0
  3470                           
  3471 ;; *************** function _ikey_is_accessible *****************
  3472 ;; Defined at:
  3473 ;;		line 510 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  k               1    wreg     unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  k               1    2[COMRAM] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      unsigned char 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0
  3488 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3489 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3490 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3491 ;;Total ram usage:        3 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    1
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_ikey_parsing
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text24
  3502  001B5E                     __ptext24:
  3503                           	opt callstack 0
  3504  001B5E                     _ikey_is_accessible:
  3505                           	opt callstack 27
  3506                           
  3507                           ;incstack = 0
  3508                           ;ikey_is_accessible@k stored from wreg
  3509  001B5E  6E03               	movwf	ikey_is_accessible@k,c
  3510                           
  3511                           ;ikb.c: 512: if (key[k].num_group_x != 0)
  3512  001B60  5003               	movf	ikey_is_accessible@k,w,c
  3513  001B62  0D10               	mullw	16
  3514  001B64  50F3               	movf	prodl,w,c
  3515  001B66  0F69               	addlw	low (_key+9)
  3516  001B68  6ED9               	movwf	fsr2l,c
  3517  001B6A  6ADA               	clrf	fsr2h,c
  3518  001B6C  50DF               	movf	indf2,w,c
  3519  001B6E  B4D8               	btfsc	status,2,c
  3520  001B70  D01A               	goto	l2367
  3521                           
  3522                           ;ikb.c: 513: {;ikb.c: 515: if (group_x[key[k].num_group_x] == 1)
  3523  001B72  5003               	movf	ikey_is_accessible@k,w,c
  3524  001B74  0D10               	mullw	16
  3525  001B76  50F3               	movf	prodl,w,c
  3526  001B78  0F69               	addlw	low (_key+9)
  3527  001B7A  6ED9               	movwf	fsr2l,c
  3528  001B7C  6ADA               	clrf	fsr2h,c
  3529  001B7E  50DF               	movf	indf2,w,c
  3530  001B80  6E01               	movwf	??_ikey_is_accessible& (0+255),c
  3531  001B82  5001               	movf	??_ikey_is_accessible,w,c
  3532  001B84  0F48               	addlw	low _group_x
  3533  001B86  6ED9               	movwf	fsr2l,c
  3534  001B88  6ADA               	clrf	fsr2h,c
  3535  001B8A  04DE               	decf	postinc2,w,c
  3536  001B8C  A4D8               	btfss	status,2,c
  3537  001B8E  D00B               	goto	l2367
  3538                           
  3539                           ;ikb.c: 516: {;ikb.c: 518: if ( !key[k].bf.OwnerOfGroup)
  3540  001B90  5003               	movf	ikey_is_accessible@k,w,c
  3541  001B92  0D10               	mullw	16
  3542  001B94  50F3               	movf	prodl,w,c
  3543  001B96  0F6B               	addlw	low (_key+11)
  3544  001B98  6ED9               	movwf	fsr2l,c
  3545  001B9A  6ADA               	clrf	fsr2h,c
  3546  001B9C  0100               	movlb	0	; () banked
  3547  001B9E  B0DF               	btfsc	indf2,0,c
  3548  001BA0  D002               	goto	l2367
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;ikb.c: 519: {;ikb.c: 520: return 0;
  3552  001BA2  0E00               	movlw	0
  3553  001BA4  0012               	return	
  3554  001BA6                     l2367:
  3555                           
  3556                           ;ikb.c: 521: };ikb.c: 522: };ikb.c: 523: };ikb.c: 524: return 1;
  3557  001BA6  0E01               	movlw	1
  3558  001BA8  0012               	return		;funcret
  3559  001BAA                     __end_of_ikey_is_accessible:
  3560                           	opt callstack 0
  3561                           
  3562 ;; *************** function ___lwtoft *****************
  3563 ;; Defined at:
  3564 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  c               2    8[COMRAM] unsigned int 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  3    8[COMRAM] float 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3578 ;;      Params:         3       0       0       0       0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3581 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3582 ;;Total ram usage:        3 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    2
  3585 ;; This function calls:
  3586 ;;		___ftpack
  3587 ;; This function is called by:
  3588 ;;		_ikey_parsing
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text25
  3593  001E2E                     __ptext25:
  3594                           	opt callstack 0
  3595  001E2E                     ___lwtoft:
  3596                           	opt callstack 26
  3597                           
  3598                           ;incstack = 0
  3599  001E2E  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  3600  001E32  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  3601  001E36  6A03               	clrf	___ftpack@arg+2,c
  3602  001E38  0E8E               	movlw	142
  3603  001E3A  6E04               	movwf	___ftpack@exp,c
  3604  001E3C  0E00               	movlw	0
  3605  001E3E  6E05               	movwf	___ftpack@sign,c
  3606  001E40  ECCE  F00B         	call	___ftpack	;wreg free
  3607  001E44  C001  F009         	movff	?___ftpack,?___lwtoft
  3608  001E48  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  3609  001E4C  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  3610  001E50  0012               	return		;funcret
  3611  001E52                     __end_of___lwtoft:
  3612                           	opt callstack 0
  3613                           
  3614 ;; *************** function _ikb_init *****************
  3615 ;; Defined at:
  3616 ;;		line 217 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  i               1    0[COMRAM] char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 3F/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3630 ;;      Params:         0       0       0       0       0       0       0       0       0
  3631 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3633 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3634 ;;Total ram usage:        1 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    1
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_main
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text26
  3645  0016E6                     __ptext26:
  3646                           	opt callstack 0
  3647  0016E6                     _ikb_init:
  3648                           	opt callstack 29
  3649                           
  3650                           ;incstack = 0
  3651                           ;ikb.c: 219: int8_t i;;ikb.c: 389: do{TRISC |= 1<<4;}while(0);
  3652  0016E6  8894               	bsf	3988,4,c	;volatile
  3653                           
  3654                           ;ikb.c: 390: do{TRISC |= 1<<5;}while(0);
  3655  0016E8  8A94               	bsf	3988,5,c	;volatile
  3656                           
  3657                           ;ikb.c: 391: do{TRISC |= 1<<6;}while(0);
  3658  0016EA  8C94               	bsf	3988,6,c	;volatile
  3659                           
  3660                           ;ikb.c: 392: do{TRISC |= 1<<7;}while(0);
  3661  0016EC  8E94               	bsf	3988,7,c	;volatile
  3662                           
  3663                           ;ikb.c: 393: do{TRISD |= 1<<4;}while(0);
  3664  0016EE  8895               	bsf	3989,4,c	;volatile
  3665                           
  3666                           ;ikb.c: 394: key[0].keyRead = keyRead_pin_key1;
  3667  0016F0  0E2E               	movlw	low _keyRead_pin_key1
  3668  0016F2  0100               	movlb	0	; () banked
  3669  0016F4  6F60               	movwf	_key& (0+255),b	;volatile
  3670  0016F6  0E1F               	movlw	high _keyRead_pin_key1
  3671  0016F8  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;ikb.c: 395: key[1].keyRead = keyRead_pin_key2;
  3675  0016FA  0E24               	movlw	low _keyRead_pin_key2
  3676  0016FC  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3677  0016FE  0E1F               	movlw	high _keyRead_pin_key2
  3678  001700  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;ikb.c: 396: key[2].keyRead = keyRead_pin_key3;
  3682  001702  0E1A               	movlw	low _keyRead_pin_key3
  3683  001704  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3684  001706  0E1F               	movlw	high _keyRead_pin_key3
  3685  001708  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;ikb.c: 397: key[3].keyRead = keyRead_pin_key4;
  3689  00170A  0E3E               	movlw	low _keyRead_pin_key4
  3690  00170C  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3691  00170E  0E1F               	movlw	high _keyRead_pin_key4
  3692  001710  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;ikb.c: 398: key[4].keyRead = keyRead_pin_key5;
  3696  001712  0E36               	movlw	low _keyRead_pin_key5
  3697  001714  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3698  001716  0E1F               	movlw	high _keyRead_pin_key5
  3699  001718  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;ikb.c: 401: for (i=0; i<5; i++)
  3703  00171A  0E00               	movlw	0
  3704  00171C  6E01               	movwf	ikb_init@i,c
  3705  00171E                     l2919:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;ikb.c: 402: {;ikb.c: 403: key[i].bf.OnKeyPressed = 1;
  3709  00171E  5001               	movf	ikb_init@i,w,c
  3710  001720  0D10               	mullw	16
  3711  001722  50F3               	movf	prodl,w,c
  3712  001724  0F6A               	addlw	low (_key+10)
  3713  001726  6ED9               	movwf	fsr2l,c
  3714  001728  6ADA               	clrf	fsr2h,c
  3715  00172A  82DF               	bsf	indf2,1,c
  3716                           
  3717                           ;ikb.c: 404: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3718  00172C  5001               	movf	ikb_init@i,w,c
  3719  00172E  0D10               	mullw	16
  3720  001730  50F3               	movf	prodl,w,c
  3721  001732  0F6A               	addlw	low (_key+10)
  3722  001734  6ED9               	movwf	fsr2l,c
  3723  001736  6ADA               	clrf	fsr2h,c
  3724  001738  94DF               	bcf	indf2,2,c
  3725                           
  3726                           ;ikb.c: 405: key[i].bf.AtTimeExpired = 0;
  3727  00173A  5001               	movf	ikb_init@i,w,c
  3728  00173C  0D10               	mullw	16
  3729  00173E  50F3               	movf	prodl,w,c
  3730  001740  0F6A               	addlw	low (_key+10)
  3731  001742  6ED9               	movwf	fsr2l,c
  3732  001744  6ADA               	clrf	fsr2h,c
  3733  001746  96DF               	bcf	indf2,3,c
  3734                           
  3735                           ;ikb.c: 406: key[i].bf.Reptt = 0;
  3736  001748  5001               	movf	ikb_init@i,w,c
  3737  00174A  0D10               	mullw	16
  3738  00174C  50F3               	movf	prodl,w,c
  3739  00174E  0F6A               	addlw	low (_key+10)
  3740  001750  6ED9               	movwf	fsr2l,c
  3741  001752  6ADA               	clrf	fsr2h,c
  3742  001754  9ADF               	bcf	indf2,5,c
  3743                           
  3744                           ;ikb.c: 407: key[i].num_group_x = 0;
  3745  001756  5001               	movf	ikb_init@i,w,c
  3746  001758  0D10               	mullw	16
  3747  00175A  50F3               	movf	prodl,w,c
  3748  00175C  0F69               	addlw	low (_key+9)
  3749  00175E  6ED9               	movwf	fsr2l,c
  3750  001760  6ADA               	clrf	fsr2h,c
  3751  001762  0E00               	movlw	0
  3752  001764  6EDF               	movwf	indf2,c
  3753                           
  3754                           ;ikb.c: 408: key[i].repp.to_start= (uint16_t)500.0/5;
  3755  001766  5001               	movf	ikb_init@i,w,c
  3756  001768  0D10               	mullw	16
  3757  00176A  50F3               	movf	prodl,w,c
  3758  00176C  0F6C               	addlw	low (_key+12)
  3759  00176E  6ED9               	movwf	fsr2l,c
  3760  001770  6ADA               	clrf	fsr2h,c
  3761  001772  0E64               	movlw	100
  3762  001774  6EDE               	movwf	postinc2,c
  3763  001776  0E00               	movlw	0
  3764  001778  6EDD               	movwf	postdec2,c
  3765                           
  3766                           ;ikb.c: 409: key[i].repp.after_start = (uint16_t)200.0/5;
  3767  00177A  5001               	movf	ikb_init@i,w,c
  3768  00177C  0D10               	mullw	16
  3769  00177E  50F3               	movf	prodl,w,c
  3770  001780  0F6E               	addlw	low (_key+14)
  3771  001782  6ED9               	movwf	fsr2l,c
  3772  001784  6ADA               	clrf	fsr2h,c
  3773  001786  0E28               	movlw	40
  3774  001788  6EDE               	movwf	postinc2,c
  3775  00178A  0E00               	movlw	0
  3776  00178C  6EDD               	movwf	postdec2,c
  3777                           
  3778                           ; BSR set to: 0
  3779  00178E  2A01               	incf	ikb_init@i,f,c
  3780                           
  3781                           ; BSR set to: 0
  3782  001790  5001               	movf	ikb_init@i,w,c
  3783  001792  0A80               	xorlw	128
  3784  001794  0F7B               	addlw	-133
  3785  001796  B0D8               	btfsc	status,0,c
  3786  001798  0012               	return	
  3787  00179A  D7C1               	goto	l2919
  3788  00179C                     __end_of_ikb_init:
  3789                           	opt callstack 0
  3790                           
  3791 ;; *************** function _ikb_flush *****************
  3792 ;; Defined at:
  3793 ;;		line 419 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 3F/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3807 ;;      Params:         0       0       0       0       0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    2
  3814 ;; This function calls:
  3815 ;;		_ikey_clear_all_flag
  3816 ;; This function is called by:
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text27
  3822  001F44                     __ptext27:
  3823                           	opt callstack 0
  3824  001F44                     _ikb_flush:
  3825                           	opt callstack 28
  3826                           
  3827                           ;ikb.c: 421: ikey_clear_all_flag();
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;incstack = 0
  3831  001F44  EC29  F00F         	call	_ikey_clear_all_flag	;wreg free
  3832                           
  3833                           ; BSR set to: 0
  3834  001F48  0012               	return		;funcret
  3835  001F4A                     __end_of_ikb_flush:
  3836                           	opt callstack 0
  3837                           
  3838 ;; *************** function _ikey_clear_all_flag *****************
  3839 ;; Defined at:
  3840 ;;		line 761 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  i               1    0[COMRAM] unsigned char 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 3F/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3854 ;;      Params:         0       0       0       0       0       0       0       0       0
  3855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3857 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3858 ;;Total ram usage:        1 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_ikb_flush
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text28
  3869  001E52                     __ptext28:
  3870                           	opt callstack 0
  3871  001E52                     _ikey_clear_all_flag:
  3872                           	opt callstack 28
  3873                           
  3874                           ;ikb.c: 763: uint8_t i;;ikb.c: 764: for (i=0; i<5; i++)
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;incstack = 0
  3878  001E52  0E00               	movlw	0
  3879  001E54  6E01               	movwf	ikey_clear_all_flag@i,c
  3880  001E56                     l2703:
  3881                           
  3882                           ;ikb.c: 765: {;ikb.c: 767: key[i].bf.ReadyToRead = 0;
  3883  001E56  5001               	movf	ikey_clear_all_flag@i,w,c
  3884  001E58  0D10               	mullw	16
  3885  001E5A  50F3               	movf	prodl,w,c
  3886  001E5C  0F6A               	addlw	low (_key+10)
  3887  001E5E  6ED9               	movwf	fsr2l,c
  3888  001E60  6ADA               	clrf	fsr2h,c
  3889  001E62  0100               	movlb	0	; () banked
  3890  001E64  9CDF               	bcf	indf2,6,c
  3891                           
  3892                           ; BSR set to: 0
  3893  001E66  2A01               	incf	ikey_clear_all_flag@i,f,c
  3894                           
  3895                           ; BSR set to: 0
  3896  001E68  0E04               	movlw	4
  3897  001E6A  6401               	cpfsgt	ikey_clear_all_flag@i,c
  3898  001E6C  D7F4               	goto	l2703
  3899  001E6E  0012               	return	
  3900  001E70                     __end_of_ikey_clear_all_flag:
  3901                           	opt callstack 0
  3902                           
  3903 ;; *************** function _display7s_job *****************
  3904 ;; Defined at:
  3905 ;;		line 179 in file "pulsonic.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3922 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3923 ;;Total ram usage:        0 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    3
  3926 ;; This function calls:
  3927 ;;		_multiplexedDisp_job
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text29
  3934  001E08                     __ptext29:
  3935                           	opt callstack 0
  3936  001E08                     _display7s_job:
  3937                           	opt callstack 27
  3938                           
  3939                           ;pulsonic.c: 181: static int8_t q;;pulsonic.c: 183: LATB = pulsonic.display7s[q];
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;incstack = 0
  3943  001E08  0E76               	movlw	low (_pulsonic+118)
  3944  001E0A  244F               	addwf	display7s_job@q,w,c
  3945  001E0C  6ED9               	movwf	fsr2l,c
  3946  001E0E  6ADA               	clrf	fsr2h,c
  3947  001E10  0E01               	movlw	high (_pulsonic+118)
  3948  001E12  22DA               	addwfc	fsr2h,f,c
  3949  001E14  50DF               	movf	indf2,w,c
  3950  001E16  6E8A               	movwf	3978,c	;volatile
  3951                           
  3952                           ;pulsonic.c: 184: multiplexedDisp_job(q);
  3953  001E18  504F               	movf	display7s_job@q,w,c
  3954  001E1A  EC25  F00C         	call	_multiplexedDisp_job
  3955                           
  3956                           ;pulsonic.c: 186: if (++q == (2 + 3))
  3957  001E1E  2A4F               	incf	display7s_job@q,f,c
  3958  001E20  0E05               	movlw	5
  3959  001E22  184F               	xorwf	display7s_job@q,w,c
  3960  001E24  A4D8               	btfss	status,2,c
  3961  001E26  0012               	return	
  3962                           
  3963                           ;pulsonic.c: 187: {q=0;}
  3964  001E28  0E00               	movlw	0
  3965  001E2A  6E4F               	movwf	display7s_job@q,c
  3966  001E2C  0012               	return		;funcret
  3967  001E2E                     __end_of_display7s_job:
  3968                           	opt callstack 0
  3969                           
  3970 ;; *************** function _multiplexedDisp_job *****************
  3971 ;; Defined at:
  3972 ;;		line 150 in file "pulsonic.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  q               1    wreg     char 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  q               1    6[COMRAM] char 
  3977 ;;  i               1    7[COMRAM] char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3987 ;;      Params:         0       0       0       0       0       0       0       0       0
  3988 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3989 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3990 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3991 ;;Total ram usage:        8 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    2
  3994 ;; This function calls:
  3995 ;;		_multiplexedDisp0_off
  3996 ;;		_multiplexedDisp0_on
  3997 ;;		_multiplexedDisp1_off
  3998 ;;		_multiplexedDisp1_on
  3999 ;;		_multiplexedDisp2_off
  4000 ;;		_multiplexedDisp2_on
  4001 ;;		_multiplexedDisp3_off
  4002 ;;		_multiplexedDisp3_on
  4003 ;;		_multiplexedDisp4_off
  4004 ;;		_multiplexedDisp4_on
  4005 ;; This function is called by:
  4006 ;;		_display7s_job
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text30
  4011  00184A                     __ptext30:
  4012                           	opt callstack 0
  4013  00184A                     _multiplexedDisp_job:
  4014                           	opt callstack 27
  4015                           
  4016                           ;incstack = 0
  4017                           ;multiplexedDisp_job@q stored from wreg
  4018  00184A  6E07               	movwf	multiplexedDisp_job@q,c
  4019                           
  4020                           ;pulsonic.c: 152: int8_t i;;pulsonic.c: 153: for (i=0; i< (2 + 3); i++)
  4021  00184C  0E00               	movlw	0
  4022  00184E  6E08               	movwf	multiplexedDisp_job@i,c
  4023  001850                     l2729:
  4024                           
  4025                           ;pulsonic.c: 154: {;pulsonic.c: 155: if ((0x01<<i) & (0x1<<q))
  4026  001850  C007  F001         	movff	multiplexedDisp_job@q,??_multiplexedDisp_job
  4027  001854  0E01               	movlw	1
  4028  001856  6E02               	movwf	(??_multiplexedDisp_job+1)& (0+255),c
  4029  001858  0E00               	movlw	0
  4030  00185A  6E03               	movwf	(??_multiplexedDisp_job+2)& (0+255),c
  4031  00185C  2A01               	incf	??_multiplexedDisp_job,f,c
  4032  00185E  D003               	goto	u2664
  4033  001860                     u2665:
  4034  001860  90D8               	bcf	status,0,c
  4035  001862  3602               	rlcf	??_multiplexedDisp_job+1,f,c
  4036  001864  3603               	rlcf	??_multiplexedDisp_job+2,f,c
  4037  001866                     u2664:
  4038  001866  2E01               	decfsz	??_multiplexedDisp_job,f,c
  4039  001868  D7FB               	goto	u2665
  4040  00186A  C008  F004         	movff	multiplexedDisp_job@i,??_multiplexedDisp_job+3
  4041  00186E  0E01               	movlw	1
  4042  001870  6E05               	movwf	(??_multiplexedDisp_job+4)& (0+255),c
  4043  001872  0E00               	movlw	0
  4044  001874  6E06               	movwf	(??_multiplexedDisp_job+5)& (0+255),c
  4045  001876  2A04               	incf	??_multiplexedDisp_job+3,f,c
  4046  001878  D003               	goto	u2674
  4047  00187A                     u2675:
  4048  00187A  90D8               	bcf	status,0,c
  4049  00187C  3605               	rlcf	??_multiplexedDisp_job+4,f,c
  4050  00187E  3606               	rlcf	??_multiplexedDisp_job+5,f,c
  4051  001880                     u2674:
  4052  001880  2E04               	decfsz	??_multiplexedDisp_job+3,f,c
  4053  001882  D7FB               	goto	u2675
  4054  001884  5002               	movf	??_multiplexedDisp_job+1,w,c
  4055  001886  1605               	andwf	??_multiplexedDisp_job+4,f,c
  4056  001888  5003               	movf	??_multiplexedDisp_job+2,w,c
  4057  00188A  1606               	andwf	??_multiplexedDisp_job+5,f,c
  4058  00188C  5005               	movf	??_multiplexedDisp_job+4,w,c
  4059  00188E  1006               	iorwf	??_multiplexedDisp_job+5,w,c
  4060  001890  B4D8               	btfsc	status,2,c
  4061  001892  D012               	goto	l2733
  4062                           
  4063                           ;pulsonic.c: 156: multiplexedDisp[i].Qonoff[1]();
  4064  001894  5008               	movf	multiplexedDisp_job@i,w,c
  4065  001896  0D04               	mullw	4
  4066  001898  50F3               	movf	prodl,w,c
  4067  00189A  0FB2               	addlw	low (_multiplexedDisp+2)
  4068  00189C  6ED9               	movwf	fsr2l,c
  4069  00189E  6ADA               	clrf	fsr2h,c
  4070  0018A0  D801               	call	u2698
  4071  0018A2  D01C               	goto	u2709
  4072  0018A4                     u2698:
  4073  0018A4  0005               	push	
  4074  0018A6  6EFA               	movwf	pclath,c
  4075  0018A8  50DE               	movf	postinc2,w,c
  4076  0018AA  6EFD               	movwf	tosl,c
  4077  0018AC  50DE               	movf	postinc2,w,c
  4078  0018AE  6EFE               	movwf	tosh,c
  4079  0018B0  50F8               	movf	tblptru,w,c
  4080  0018B2  6EFF               	movwf	tosu,c
  4081  0018B4  50FA               	movf	pclath,w,c
  4082  0018B6  0012               	return		;indir
  4083  0018B8                     l2733:
  4084                           
  4085                           ;pulsonic.c: 157: else;pulsonic.c: 158: multiplexedDisp[i].Qonoff[0]();
  4086  0018B8  5008               	movf	multiplexedDisp_job@i,w,c
  4087  0018BA  0D04               	mullw	4
  4088  0018BC  50F3               	movf	prodl,w,c
  4089  0018BE  0FB0               	addlw	low _multiplexedDisp
  4090  0018C0  6ED9               	movwf	fsr2l,c
  4091  0018C2  6ADA               	clrf	fsr2h,c
  4092  0018C4  D801               	call	u2708
  4093  0018C6  D00A               	goto	u2709
  4094  0018C8                     u2708:
  4095  0018C8  0005               	push	
  4096  0018CA  6EFA               	movwf	pclath,c
  4097  0018CC  50DE               	movf	postinc2,w,c
  4098  0018CE  6EFD               	movwf	tosl,c
  4099  0018D0  50DE               	movf	postinc2,w,c
  4100  0018D2  6EFE               	movwf	tosh,c
  4101  0018D4  50F8               	movf	tblptru,w,c
  4102  0018D6  6EFF               	movwf	tosu,c
  4103  0018D8  50FA               	movf	pclath,w,c
  4104  0018DA  0012               	return		;indir
  4105  0018DC                     u2709:
  4106  0018DC  2A08               	incf	multiplexedDisp_job@i,f,c
  4107  0018DE  5008               	movf	multiplexedDisp_job@i,w,c
  4108  0018E0  0A80               	xorlw	128
  4109  0018E2  0F7B               	addlw	-133
  4110  0018E4  B0D8               	btfsc	status,0,c
  4111  0018E6  0012               	return	
  4112  0018E8  D7B3               	goto	l2729
  4113  0018EA                     __end_of_multiplexedDisp_job:
  4114                           	opt callstack 0
  4115                           
  4116 ;; *************** function _display7s_init *****************
  4117 ;; Defined at:
  4118 ;;		line 166 in file "pulsonic.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4132 ;;      Params:         0       0       0       0       0       0       0       0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4135 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4136 ;;Total ram usage:        0 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    3
  4139 ;; This function calls:
  4140 ;;		_multiplexedDisp_init
  4141 ;; This function is called by:
  4142 ;;		_main
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text31
  4147  001B0E                     __ptext31:
  4148                           	opt callstack 0
  4149  001B0E                     _display7s_init:
  4150                           	opt callstack 27
  4151                           
  4152                           ;pulsonic.c: 168: pulsonic.display7s[MODE_DIG_1] = DISP7S_NUMS[2];
  4153                           
  4154                           ;incstack = 0
  4155  001B0E  0E03               	movlw	low (_DISP7S_NUMS+2)
  4156  001B10  6EF6               	movwf	tblptrl,c
  4157  001B12                     	if	1	;There is more than 1 active tblptr byte
  4158  001B12  0E08               	movlw	high __smallconst
  4159  001B14  6EF7               	movwf	tblptrh,c
  4160  001B16                     	endif
  4161  001B16                     	if	0	;tblptru may be non-zero
  4162  001B16                     	endif
  4163  001B16                     	if	0	;tblptru may be non-zero
  4164  001B16                     	endif
  4165  001B16  0008               	tblrd		*
  4166  001B18  CFF5 F177          	movff	tablat,_pulsonic+119
  4167                           
  4168                           ;pulsonic.c: 169: pulsonic.display7s[MODE_DIG_0] = DISP7S_NUMS[0];
  4169  001B1C  0E01               	movlw	low _DISP7S_NUMS
  4170  001B1E  6EF6               	movwf	tblptrl,c
  4171  001B20                     	if	1	;There is more than 1 active tblptr byte
  4172  001B20  0E08               	movlw	high _DISP7S_NUMS
  4173  001B22  6EF7               	movwf	tblptrh,c
  4174  001B24                     	endif
  4175  001B24                     	if	0	;There are less than 3 active tblptr bytes
  4176  001B24                     	endif
  4177  001B24  0008               	tblrd		*
  4178  001B26  CFF5 F176          	movff	tablat,_pulsonic+118
  4179                           
  4180                           ;pulsonic.c: 171: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[RAYA];
  4181  001B2A  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4182  001B2C  6EF6               	movwf	tblptrl,c
  4183  001B2E                     	if	1	;There is more than 1 active tblptr byte
  4184  001B2E  0E08               	movlw	high __smallconst
  4185  001B30  6EF7               	movwf	tblptrh,c
  4186  001B32                     	endif
  4187  001B32                     	if	0	;tblptru may be non-zero
  4188  001B32                     	endif
  4189  001B32                     	if	0	;tblptru may be non-zero
  4190  001B32                     	endif
  4191  001B32  0008               	tblrd		*
  4192  001B34  CFF5 F178          	movff	tablat,_pulsonic+120
  4193                           
  4194                           ;pulsonic.c: 172: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[RAYA];
  4195  001B38  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4196  001B3A  6EF6               	movwf	tblptrl,c
  4197  001B3C                     	if	1	;There is more than 1 active tblptr byte
  4198  001B3C  0E08               	movlw	high __smallconst
  4199  001B3E  6EF7               	movwf	tblptrh,c
  4200  001B40                     	endif
  4201  001B40                     	if	0	;tblptru may be non-zero
  4202  001B40                     	endif
  4203  001B40                     	if	0	;tblptru may be non-zero
  4204  001B40                     	endif
  4205  001B40  0008               	tblrd		*
  4206  001B42  CFF5 F177          	movff	tablat,_pulsonic+119
  4207                           
  4208                           ;pulsonic.c: 173: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[RAYA];
  4209  001B46  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4210  001B48  6EF6               	movwf	tblptrl,c
  4211  001B4A                     	if	1	;There is more than 1 active tblptr byte
  4212  001B4A  0E08               	movlw	high __smallconst
  4213  001B4C  6EF7               	movwf	tblptrh,c
  4214  001B4E                     	endif
  4215  001B4E                     	if	0	;tblptru may be non-zero
  4216  001B4E                     	endif
  4217  001B4E                     	if	0	;tblptru may be non-zero
  4218  001B4E                     	endif
  4219  001B4E  0008               	tblrd		*
  4220  001B50  CFF5 F176          	movff	tablat,_pulsonic+118
  4221                           
  4222                           ;pulsonic.c: 175: TRISB = 0x00;
  4223  001B54  0E00               	movlw	0
  4224  001B56  6E93               	movwf	3987,c	;volatile
  4225                           
  4226                           ;pulsonic.c: 176: multiplexedDisp_init();
  4227  001B58  EC3B  F00E         	call	_multiplexedDisp_init	;wreg free
  4228  001B5C  0012               	return		;funcret
  4229  001B5E                     __end_of_display7s_init:
  4230                           	opt callstack 0
  4231                           
  4232 ;; *************** function _multiplexedDisp_init *****************
  4233 ;; Defined at:
  4234 ;;		line 135 in file "pulsonic.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  i               1    0[COMRAM] char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0
  4249 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4251 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4252 ;;Total ram usage:        1 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    2
  4255 ;; This function calls:
  4256 ;;		_multiplexedDisp0_off
  4257 ;;		_multiplexedDisp0_on
  4258 ;;		_multiplexedDisp1_off
  4259 ;;		_multiplexedDisp1_on
  4260 ;;		_multiplexedDisp2_off
  4261 ;;		_multiplexedDisp2_on
  4262 ;;		_multiplexedDisp3_off
  4263 ;;		_multiplexedDisp3_on
  4264 ;;		_multiplexedDisp4_off
  4265 ;;		_multiplexedDisp4_on
  4266 ;; This function is called by:
  4267 ;;		_display7s_init
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text32
  4272  001C76                     __ptext32:
  4273                           	opt callstack 0
  4274  001C76                     _multiplexedDisp_init:
  4275                           	opt callstack 27
  4276                           
  4277                           ;pulsonic.c: 137: int8_t i;;pulsonic.c: 138: for (i=0; i< (2 + 3); i++)
  4278                           
  4279                           ;incstack = 0
  4280  001C76  0E00               	movlw	0
  4281  001C78  6E01               	movwf	multiplexedDisp_init@i,c
  4282  001C7A                     l2715:
  4283                           
  4284                           ;pulsonic.c: 139: {;pulsonic.c: 140: multiplexedDisp[i].Qonoff[0]();
  4285  001C7A  5001               	movf	multiplexedDisp_init@i,w,c
  4286  001C7C  0D04               	mullw	4
  4287  001C7E  50F3               	movf	prodl,w,c
  4288  001C80  0FB0               	addlw	low _multiplexedDisp
  4289  001C82  6ED9               	movwf	fsr2l,c
  4290  001C84  6ADA               	clrf	fsr2h,c
  4291  001C86  D801               	call	u2648
  4292  001C88  D00A               	goto	u2649
  4293  001C8A                     u2648:
  4294  001C8A  0005               	push	
  4295  001C8C  6EFA               	movwf	pclath,c
  4296  001C8E  50DE               	movf	postinc2,w,c
  4297  001C90  6EFD               	movwf	tosl,c
  4298  001C92  50DE               	movf	postinc2,w,c
  4299  001C94  6EFE               	movwf	tosh,c
  4300  001C96  50F8               	movf	tblptru,w,c
  4301  001C98  6EFF               	movwf	tosu,c
  4302  001C9A  50FA               	movf	pclath,w,c
  4303  001C9C  0012               	return		;indir
  4304  001C9E                     u2649:
  4305  001C9E  2A01               	incf	multiplexedDisp_init@i,f,c
  4306  001CA0  5001               	movf	multiplexedDisp_init@i,w,c
  4307  001CA2  0A80               	xorlw	128
  4308  001CA4  0F7B               	addlw	-133
  4309  001CA6  A0D8               	btfss	status,0,c
  4310  001CA8  D7E8               	goto	l2715
  4311  001CAA  9892               	bcf	3986,4,c	;volatile
  4312                           
  4313                           ;pulsonic.c: 144: do{TRISA &= ~(1<<3);}while(0);
  4314  001CAC  9692               	bcf	3986,3,c	;volatile
  4315                           
  4316                           ;pulsonic.c: 145: do{TRISA &= ~(1<<2);}while(0);
  4317  001CAE  9492               	bcf	3986,2,c	;volatile
  4318                           
  4319                           ;pulsonic.c: 146: do{TRISA &= ~(1<<1);}while(0);
  4320  001CB0  9292               	bcf	3986,1,c	;volatile
  4321                           
  4322                           ;pulsonic.c: 147: do{TRISA &= ~(1<<0);}while(0);
  4323  001CB2  9092               	bcf	3986,0,c	;volatile
  4324  001CB4  0012               	return		;funcret
  4325  001CB6                     __end_of_multiplexedDisp_init:
  4326                           	opt callstack 0
  4327                           
  4328 ;; *************** function _multiplexedDisp4_off *****************
  4329 ;; Defined at:
  4330 ;;		line 92 in file "pulsonic.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    1
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_multiplexedDisp_init
  4355 ;;		_multiplexedDisp_job
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text33
  4360  001F4A                     __ptext33:
  4361                           	opt callstack 0
  4362  001F4A                     _multiplexedDisp4_off:
  4363                           	opt callstack 27
  4364                           
  4365                           ;incstack = 0
  4366                           ;pulsonic.c: 94: do{LATA |= 1<<0;}while(0);
  4367  001F4A  8089               	bsf	3977,0,c	;volatile
  4368  001F4C  0012               	return		;funcret
  4369  001F4E                     __end_of_multiplexedDisp4_off:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _multiplexedDisp3_on *****************
  4373 ;; Defined at:
  4374 ;;		line 87 in file "pulsonic.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_multiplexedDisp_init
  4399 ;;		_multiplexedDisp_job
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text34
  4404  001F4E                     __ptext34:
  4405                           	opt callstack 0
  4406  001F4E                     _multiplexedDisp3_on:
  4407                           	opt callstack 27
  4408                           
  4409                           ;incstack = 0
  4410                           ;pulsonic.c: 89: do{LATA &= ~(1<<1);}while(0);
  4411  001F4E  9289               	bcf	3977,1,c	;volatile
  4412  001F50  0012               	return		;funcret
  4413  001F52                     __end_of_multiplexedDisp3_on:
  4414                           	opt callstack 0
  4415                           
  4416 ;; *************** function _multiplexedDisp3_off *****************
  4417 ;; Defined at:
  4418 ;;		line 83 in file "pulsonic.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;		None
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		status,2, status,0
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4432 ;;      Params:         0       0       0       0       0       0       0       0       0
  4433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4435 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4436 ;;Total ram usage:        0 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    1
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_multiplexedDisp_init
  4443 ;;		_multiplexedDisp_job
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text35
  4448  001F52                     __ptext35:
  4449                           	opt callstack 0
  4450  001F52                     _multiplexedDisp3_off:
  4451                           	opt callstack 27
  4452                           
  4453                           ;incstack = 0
  4454                           ;pulsonic.c: 85: do{LATA |= 1<<1;}while(0);
  4455  001F52  8289               	bsf	3977,1,c	;volatile
  4456  001F54  0012               	return		;funcret
  4457  001F56                     __end_of_multiplexedDisp3_off:
  4458                           	opt callstack 0
  4459                           
  4460 ;; *************** function _multiplexedDisp2_on *****************
  4461 ;; Defined at:
  4462 ;;		line 78 in file "pulsonic.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_multiplexedDisp_init
  4487 ;;		_multiplexedDisp_job
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text36
  4492  001F56                     __ptext36:
  4493                           	opt callstack 0
  4494  001F56                     _multiplexedDisp2_on:
  4495                           	opt callstack 27
  4496                           
  4497                           ;incstack = 0
  4498                           ;pulsonic.c: 80: do{LATA &= ~(1<<2);}while(0);
  4499  001F56  9489               	bcf	3977,2,c	;volatile
  4500  001F58  0012               	return		;funcret
  4501  001F5A                     __end_of_multiplexedDisp2_on:
  4502                           	opt callstack 0
  4503                           
  4504 ;; *************** function _multiplexedDisp2_off *****************
  4505 ;; Defined at:
  4506 ;;		line 74 in file "pulsonic.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    1
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_multiplexedDisp_init
  4531 ;;		_multiplexedDisp_job
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text37
  4536  001F5A                     __ptext37:
  4537                           	opt callstack 0
  4538  001F5A                     _multiplexedDisp2_off:
  4539                           	opt callstack 27
  4540                           
  4541                           ;incstack = 0
  4542                           ;pulsonic.c: 76: do{LATA |= 1<<2;}while(0);
  4543  001F5A  8489               	bsf	3977,2,c	;volatile
  4544  001F5C  0012               	return		;funcret
  4545  001F5E                     __end_of_multiplexedDisp2_off:
  4546                           	opt callstack 0
  4547                           
  4548 ;; *************** function _multiplexedDisp1_on *****************
  4549 ;; Defined at:
  4550 ;;		line 69 in file "pulsonic.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;		None
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;		None
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4564 ;;      Params:         0       0       0       0       0       0       0       0       0
  4565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4567 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4568 ;;Total ram usage:        0 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:    1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_multiplexedDisp_init
  4575 ;;		_multiplexedDisp_job
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text38
  4580  001F5E                     __ptext38:
  4581                           	opt callstack 0
  4582  001F5E                     _multiplexedDisp1_on:
  4583                           	opt callstack 27
  4584                           
  4585                           ;incstack = 0
  4586                           ;pulsonic.c: 71: do{LATA &= ~(1<<3);}while(0);
  4587  001F5E  9689               	bcf	3977,3,c	;volatile
  4588  001F60  0012               	return		;funcret
  4589  001F62                     __end_of_multiplexedDisp1_on:
  4590                           	opt callstack 0
  4591                           
  4592 ;; *************** function _multiplexedDisp1_off *****************
  4593 ;; Defined at:
  4594 ;;		line 65 in file "pulsonic.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		status,2, status,0
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4611 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    1
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_multiplexedDisp_init
  4619 ;;		_multiplexedDisp_job
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text39
  4624  001F62                     __ptext39:
  4625                           	opt callstack 0
  4626  001F62                     _multiplexedDisp1_off:
  4627                           	opt callstack 27
  4628                           
  4629                           ;incstack = 0
  4630                           ;pulsonic.c: 67: do{LATA |= 1<<3;}while(0);
  4631  001F62  8689               	bsf	3977,3,c	;volatile
  4632  001F64  0012               	return		;funcret
  4633  001F66                     __end_of_multiplexedDisp1_off:
  4634                           	opt callstack 0
  4635                           
  4636 ;; *************** function _multiplexedDisp0_on *****************
  4637 ;; Defined at:
  4638 ;;		line 60 in file "pulsonic.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4652 ;;      Params:         0       0       0       0       0       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4655 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4656 ;;Total ram usage:        0 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_multiplexedDisp_init
  4663 ;;		_multiplexedDisp_job
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text40
  4668  001F66                     __ptext40:
  4669                           	opt callstack 0
  4670  001F66                     _multiplexedDisp0_on:
  4671                           	opt callstack 27
  4672                           
  4673                           ;incstack = 0
  4674                           ;pulsonic.c: 62: do{LATA &= ~(1<<4);}while(0);
  4675  001F66  9889               	bcf	3977,4,c	;volatile
  4676  001F68  0012               	return		;funcret
  4677  001F6A                     __end_of_multiplexedDisp0_on:
  4678                           	opt callstack 0
  4679                           
  4680 ;; *************** function _multiplexedDisp0_off *****************
  4681 ;; Defined at:
  4682 ;;		line 56 in file "pulsonic.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		status,2, status,0
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4696 ;;      Params:         0       0       0       0       0       0       0       0       0
  4697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4700 ;;Total ram usage:        0 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    1
  4703 ;; This function calls:
  4704 ;;		Nothing
  4705 ;; This function is called by:
  4706 ;;		_multiplexedDisp_init
  4707 ;;		_multiplexedDisp_job
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text41
  4712  001F6A                     __ptext41:
  4713                           	opt callstack 0
  4714  001F6A                     _multiplexedDisp0_off:
  4715                           	opt callstack 27
  4716                           
  4717                           ;incstack = 0
  4718                           ;pulsonic.c: 58: do{LATA |= 1<<4;}while(0);
  4719  001F6A  8889               	bsf	3977,4,c	;volatile
  4720  001F6C  0012               	return		;funcret
  4721  001F6E                     __end_of_multiplexedDisp0_off:
  4722                           	opt callstack 0
  4723                           
  4724 ;; *************** function _multiplexedDisp4_on *****************
  4725 ;; Defined at:
  4726 ;;		line 96 in file "pulsonic.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		status,2, status,0
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_multiplexedDisp_init
  4751 ;;		_multiplexedDisp_job
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text42
  4756  001F6E                     __ptext42:
  4757                           	opt callstack 0
  4758  001F6E                     _multiplexedDisp4_on:
  4759                           	opt callstack 27
  4760                           
  4761                           ;incstack = 0
  4762                           ;pulsonic.c: 98: do{LATA &= ~(1<<0);}while(0);
  4763  001F6E  9089               	bcf	3977,0,c	;volatile
  4764  001F70  0012               	return		;funcret
  4765  001F72                     __end_of_multiplexedDisp4_on:
  4766                           	opt callstack 0
  4767                           
  4768 ;; *************** function _disp_show_quantity *****************
  4769 ;; Defined at:
  4770 ;;		line 193 in file "pulsonic.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  f               3   38[COMRAM] void 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  buff           10   42[COMRAM] unsigned char [10]
  4775 ;;  real            3   52[COMRAM] unsigned char [10]
  4776 ;;  I               2   58[COMRAM] int 
  4777 ;;  i               1   60[COMRAM] char 
  4778 ;;  last_pos        1   57[COMRAM] char 
  4779 ;;  q               1   56[COMRAM] char 
  4780 ;;  num             1   55[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 3F/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4790 ;;      Params:         3       0       0       0       0       0       0       0       0
  4791 ;;      Locals:        19       0       0       0       0       0       0       0       0
  4792 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4793 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4794 ;;Total ram usage:       23 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    4
  4797 ;; This function calls:
  4798 ;;		___awtoft
  4799 ;;		___ftge
  4800 ;;		___ftmul
  4801 ;;		___ftsub
  4802 ;;		___fttol
  4803 ;;		_itoa
  4804 ;; This function is called by:
  4805 ;;		_main
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text43
  4810  000E3E                     __ptext43:
  4811                           	opt callstack 0
  4812  000E3E                     _disp_show_quantity:
  4813                           	opt callstack 26
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;pulsonic.c: 195: int16_t I;;pulsonic.c: 196: double real;;pulsonic.c: 197: char buff[10
      +                          ];;pulsonic.c: 198: uint8_t num;;pulsonic.c: 199: int8_t i;;pulsonic.c: 200: int8_t last
      +                          _pos;;pulsonic.c: 201: int8_t q;;pulsonic.c: 202: xx=f*10;
  4817                           
  4818                           ;incstack = 0
  4819  000E3E  0E00               	movlw	0
  4820  000E40  6E0C               	movwf	___ftmul@f2,c
  4821  000E42  0E20               	movlw	32
  4822  000E44  6E0D               	movwf	___ftmul@f2+1,c
  4823  000E46  0E41               	movlw	65
  4824  000E48  6E0E               	movwf	___ftmul@f2+2,c
  4825  000E4A  C027  F009         	movff	disp_show_quantity@f,___ftmul@f1
  4826  000E4E  C028  F00A         	movff	disp_show_quantity@f+1,___ftmul@f1+1
  4827  000E52  C029  F00B         	movff	disp_show_quantity@f+2,___ftmul@f1+2
  4828  000E56  EC90  F00A         	call	___ftmul	;wreg free
  4829  000E5A  C009  F018         	movff	?___ftmul,___fttol@f1
  4830  000E5E  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  4831  000E62  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  4832  000E66  EC0A  F00B         	call	___fttol	;wreg free
  4833  000E6A  C018  F04D         	movff	?___fttol,_xx
  4834  000E6E  C019  F04E         	movff	?___fttol+1,_xx+1
  4835                           
  4836                           ;pulsonic.c: 203: if (f>= 1000.0f)
  4837  000E72  C027  F00C         	movff	disp_show_quantity@f,___ftge@ff1
  4838  000E76  C028  F00D         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4839  000E7A  C029  F00E         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4840  000E7E  0E00               	movlw	0
  4841  000E80  6E0F               	movwf	___ftge@ff2,c
  4842  000E82  0E7A               	movlw	122
  4843  000E84  6E10               	movwf	___ftge@ff2+1,c
  4844  000E86  0E44               	movlw	68
  4845  000E88  6E11               	movwf	___ftge@ff2+2,c
  4846  000E8A  ECBF  F00C         	call	___ftge	;wreg free
  4847  000E8E  A0D8               	btfss	status,0,c
  4848  000E90  D006               	goto	l2929
  4849                           
  4850                           ;pulsonic.c: 204: f=999.0f;
  4851  000E92  0EC0               	movlw	192
  4852  000E94  6E27               	movwf	disp_show_quantity@f,c
  4853  000E96  0E79               	movlw	121
  4854  000E98  6E28               	movwf	disp_show_quantity@f+1,c
  4855  000E9A  0E44               	movlw	68
  4856  000E9C  6E29               	movwf	disp_show_quantity@f+2,c
  4857  000E9E                     l2929:
  4858                           
  4859                           ;pulsonic.c: 206: I = (int16_t)f;
  4860  000E9E  C027  F018         	movff	disp_show_quantity@f,___fttol@f1
  4861  000EA2  C028  F019         	movff	disp_show_quantity@f+1,___fttol@f1+1
  4862  000EA6  C029  F01A         	movff	disp_show_quantity@f+2,___fttol@f1+2
  4863  000EAA  EC0A  F00B         	call	___fttol	;wreg free
  4864  000EAE  C018  F03B         	movff	?___fttol,disp_show_quantity@I
  4865  000EB2  C019  F03C         	movff	?___fttol+1,disp_show_quantity@I+1
  4866                           
  4867                           ;pulsonic.c: 207: real = f-I;
  4868  000EB6  C027  F015         	movff	disp_show_quantity@f,___ftsub@f1
  4869  000EBA  C028  F016         	movff	disp_show_quantity@f+1,___ftsub@f1+1
  4870  000EBE  C029  F017         	movff	disp_show_quantity@f+2,___ftsub@f1+2
  4871  000EC2  C03B  F009         	movff	disp_show_quantity@I,___awtoft@c
  4872  000EC6  C03C  F00A         	movff	disp_show_quantity@I+1,___awtoft@c+1
  4873  000ECA  EC7B  F00E         	call	___awtoft	;wreg free
  4874  000ECE  C009  F018         	movff	?___awtoft,___ftsub@f2
  4875  000ED2  C00A  F019         	movff	?___awtoft+1,___ftsub@f2+1
  4876  000ED6  C00B  F01A         	movff	?___awtoft+2,___ftsub@f2+2
  4877  000EDA  EC5B  F00E         	call	___ftsub	;wreg free
  4878  000EDE  C015  F035         	movff	?___ftsub,disp_show_quantity@real
  4879  000EE2  C016  F036         	movff	?___ftsub+1,disp_show_quantity@real+1
  4880  000EE6  C017  F037         	movff	?___ftsub+2,disp_show_quantity@real+2
  4881                           
  4882                           ;pulsonic.c: 209: itoa(buff, I, 10);
  4883  000EEA  0E2B               	movlw	low disp_show_quantity@buff
  4884  000EEC  6E10               	movwf	itoa@buf,c
  4885  000EEE  C03B  F011         	movff	disp_show_quantity@I,itoa@val
  4886  000EF2  C03C  F012         	movff	disp_show_quantity@I+1,itoa@val+1
  4887  000EF6  0E00               	movlw	0
  4888  000EF8  6E14               	movwf	itoa@base+1,c
  4889  000EFA  0E0A               	movlw	10
  4890  000EFC  6E13               	movwf	itoa@base,c
  4891  000EFE  EC97  F00E         	call	_itoa	;wreg free
  4892                           
  4893                           ;pulsonic.c: 211: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[OFF];
  4894  000F02  0E0B               	movlw	low _DISP7S_CHARS
  4895  000F04  6EF6               	movwf	tblptrl,c
  4896  000F06                     	if	1	;There is more than 1 active tblptr byte
  4897  000F06  0E08               	movlw	high _DISP7S_CHARS
  4898  000F08  6EF7               	movwf	tblptrh,c
  4899  000F0A                     	endif
  4900  000F0A                     	if	0	;There are less than 3 active tblptr bytes
  4901  000F0A                     	endif
  4902  000F0A  0008               	tblrd		*
  4903  000F0C  CFF5 F178          	movff	tablat,_pulsonic+120
  4904                           
  4905                           ;pulsonic.c: 212: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[OFF];
  4906  000F10  0E0B               	movlw	low _DISP7S_CHARS
  4907  000F12  6EF6               	movwf	tblptrl,c
  4908  000F14                     	if	1	;There is more than 1 active tblptr byte
  4909  000F14  0E08               	movlw	high _DISP7S_CHARS
  4910  000F16  6EF7               	movwf	tblptrh,c
  4911  000F18                     	endif
  4912  000F18                     	if	0	;There are less than 3 active tblptr bytes
  4913  000F18                     	endif
  4914  000F18  0008               	tblrd		*
  4915  000F1A  CFF5 F177          	movff	tablat,_pulsonic+119
  4916                           
  4917                           ;pulsonic.c: 213: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[OFF];
  4918  000F1E  0E0B               	movlw	low _DISP7S_CHARS
  4919  000F20  6EF6               	movwf	tblptrl,c
  4920  000F22                     	if	1	;There is more than 1 active tblptr byte
  4921  000F22  0E08               	movlw	high _DISP7S_CHARS
  4922  000F24  6EF7               	movwf	tblptrh,c
  4923  000F26                     	endif
  4924  000F26                     	if	0	;There are less than 3 active tblptr bytes
  4925  000F26                     	endif
  4926  000F26  0008               	tblrd		*
  4927  000F28  CFF5 F176          	movff	tablat,_pulsonic+118
  4928                           
  4929                           ;pulsonic.c: 215: if (real<0.01)
  4930  000F2C  C035  F00C         	movff	disp_show_quantity@real,___ftge@ff1
  4931  000F30  C036  F00D         	movff	disp_show_quantity@real+1,___ftge@ff1+1
  4932  000F34  C037  F00E         	movff	disp_show_quantity@real+2,___ftge@ff1+2
  4933  000F38  0ED7               	movlw	215
  4934  000F3A  6E0F               	movwf	___ftge@ff2,c
  4935  000F3C  0E23               	movlw	35
  4936  000F3E  6E10               	movwf	___ftge@ff2+1,c
  4937  000F40  0E3C               	movlw	60
  4938  000F42  6E11               	movwf	___ftge@ff2+2,c
  4939  000F44  ECBF  F00C         	call	___ftge	;wreg free
  4940  000F48  B0D8               	btfsc	status,0,c
  4941  000F4A  D036               	goto	l2969
  4942                           
  4943                           ;pulsonic.c: 216: {;pulsonic.c: 217: if (I>99)
  4944  000F4C  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  4945  000F4E  D008               	goto	l2947
  4946  000F50  503C               	movf	disp_show_quantity@I+1,w,c
  4947  000F52  E104               	bnz	u2950
  4948  000F54  0E64               	movlw	100
  4949  000F56  5C3B               	subwf	disp_show_quantity@I,w,c
  4950  000F58  A0D8               	btfss	status,0,c
  4951  000F5A  D002               	goto	l2947
  4952  000F5C                     u2950:
  4953                           
  4954                           ;pulsonic.c: 218: last_pos = 2;
  4955  000F5C  0E02               	movlw	2
  4956  000F5E  D00B               	goto	L4
  4957  000F60                     l2947:
  4958                           
  4959                           ;pulsonic.c: 219: else if (I>9)
  4960  000F60  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  4961  000F62  D008               	goto	l2951
  4962  000F64  503C               	movf	disp_show_quantity@I+1,w,c
  4963  000F66  E104               	bnz	u2960
  4964  000F68  0E0A               	movlw	10
  4965  000F6A  5C3B               	subwf	disp_show_quantity@I,w,c
  4966  000F6C  A0D8               	btfss	status,0,c
  4967  000F6E  D002               	goto	l2951
  4968  000F70                     u2960:
  4969                           
  4970                           ;pulsonic.c: 220: last_pos = 1;
  4971  000F70  0E01               	movlw	1
  4972  000F72  D001               	goto	L4
  4973  000F74                     l2951:
  4974                           
  4975                           ;pulsonic.c: 221: else;pulsonic.c: 222: last_pos = 0;
  4976  000F74  0E00               	movlw	0
  4977  000F76                     L4:
  4978  000F76  6E3A               	movwf	disp_show_quantity@last_pos,c
  4979                           
  4980                           ;pulsonic.c: 224: q = 0;
  4981  000F78  0E00               	movlw	0
  4982  000F7A  6E39               	movwf	disp_show_quantity@q,c
  4983                           
  4984                           ;pulsonic.c: 225: for (i=last_pos; i>=0; i--)
  4985  000F7C  C03A  F03D         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4986  000F80                     l2955:
  4987  000F80  BE3D               	btfsc	disp_show_quantity@i,7,c
  4988  000F82  0012               	return	
  4989                           
  4990                           ;pulsonic.c: 226: {;pulsonic.c: 227: num = buff[i] - 0x30;
  4991  000F84  503D               	movf	disp_show_quantity@i,w,c
  4992  000F86  0F2B               	addlw	low disp_show_quantity@buff
  4993  000F88  6ED9               	movwf	fsr2l,c
  4994  000F8A  6ADA               	clrf	fsr2h,c
  4995  000F8C  50DF               	movf	indf2,w,c
  4996  000F8E  0FD0               	addlw	208
  4997  000F90  6E38               	movwf	disp_show_quantity@num,c
  4998                           
  4999                           ;pulsonic.c: 228: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5000  000F92  5038               	movf	disp_show_quantity@num,w,c
  5001  000F94  0F01               	addlw	low _DISP7S_NUMS
  5002  000F96  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5003  000F98  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5004  000F9C                     	if	1	;There is more than 1 active tblptr byte
  5005  000F9C  0E08               	movlw	high __smallconst
  5006  000F9E  6EF7               	movwf	tblptrh,c
  5007  000FA0                     	endif
  5008  000FA0                     	if	0	;tblptru may be non-zero
  5009  000FA0                     	endif
  5010  000FA0                     	if	0	;tblptru may be non-zero
  5011  000FA0                     	endif
  5012  000FA0  0E76               	movlw	low (_pulsonic+118)
  5013  000FA2  2439               	addwf	disp_show_quantity@q,w,c
  5014  000FA4  6ED9               	movwf	fsr2l,c
  5015  000FA6  6ADA               	clrf	fsr2h,c
  5016  000FA8  0E01               	movlw	high (_pulsonic+118)
  5017  000FAA  22DA               	addwfc	fsr2h,f,c
  5018  000FAC  0008               	tblrd		*
  5019  000FAE  CFF5 FFDF          	movff	tablat,indf2
  5020  000FB2  2A39               	incf	disp_show_quantity@q,f,c
  5021  000FB4  063D               	decf	disp_show_quantity@i,f,c
  5022  000FB6  D7E4               	goto	l2955
  5023  000FB8                     l2969:
  5024                           
  5025                           ;pulsonic.c: 231: else;pulsonic.c: 232: {;pulsonic.c: 233: if (f<100.0)
  5026  000FB8  C027  F00C         	movff	disp_show_quantity@f,___ftge@ff1
  5027  000FBC  C028  F00D         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  5028  000FC0  C029  F00E         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  5029  000FC4  0E00               	movlw	0
  5030  000FC6  6E0F               	movwf	___ftge@ff2,c
  5031  000FC8  0EC8               	movlw	200
  5032  000FCA  6E10               	movwf	___ftge@ff2+1,c
  5033  000FCC  0E42               	movlw	66
  5034  000FCE  6E11               	movwf	___ftge@ff2+2,c
  5035  000FD0  ECBF  F00C         	call	___ftge	;wreg free
  5036  000FD4  B0D8               	btfsc	status,0,c
  5037  000FD6  D066               	goto	l3007
  5038                           
  5039                           ;pulsonic.c: 234: {;pulsonic.c: 236: I = f*10;
  5040  000FD8  0E00               	movlw	0
  5041  000FDA  6E0C               	movwf	___ftmul@f2,c
  5042  000FDC  0E20               	movlw	32
  5043  000FDE  6E0D               	movwf	___ftmul@f2+1,c
  5044  000FE0  0E41               	movlw	65
  5045  000FE2  6E0E               	movwf	___ftmul@f2+2,c
  5046  000FE4  C027  F009         	movff	disp_show_quantity@f,___ftmul@f1
  5047  000FE8  C028  F00A         	movff	disp_show_quantity@f+1,___ftmul@f1+1
  5048  000FEC  C029  F00B         	movff	disp_show_quantity@f+2,___ftmul@f1+2
  5049  000FF0  EC90  F00A         	call	___ftmul	;wreg free
  5050  000FF4  C009  F018         	movff	?___ftmul,___fttol@f1
  5051  000FF8  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  5052  000FFC  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  5053  001000  EC0A  F00B         	call	___fttol	;wreg free
  5054  001004  C018  F03B         	movff	?___fttol,disp_show_quantity@I
  5055  001008  C019  F03C         	movff	?___fttol+1,disp_show_quantity@I+1
  5056                           
  5057                           ;pulsonic.c: 237: itoa(buff, I, 10);
  5058  00100C  0E2B               	movlw	low disp_show_quantity@buff
  5059  00100E  6E10               	movwf	itoa@buf,c
  5060  001010  C03B  F011         	movff	disp_show_quantity@I,itoa@val
  5061  001014  C03C  F012         	movff	disp_show_quantity@I+1,itoa@val+1
  5062  001018  0E00               	movlw	0
  5063  00101A  6E14               	movwf	itoa@base+1,c
  5064  00101C  0E0A               	movlw	10
  5065  00101E  6E13               	movwf	itoa@base,c
  5066  001020  EC97  F00E         	call	_itoa	;wreg free
  5067                           
  5068                           ;pulsonic.c: 239: if (I>99)
  5069  001024  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  5070  001026  D008               	goto	l2979
  5071  001028  503C               	movf	disp_show_quantity@I+1,w,c
  5072  00102A  E104               	bnz	u2990
  5073  00102C  0E64               	movlw	100
  5074  00102E  5C3B               	subwf	disp_show_quantity@I,w,c
  5075  001030  A0D8               	btfss	status,0,c
  5076  001032  D002               	goto	l2979
  5077  001034                     u2990:
  5078                           
  5079                           ;pulsonic.c: 240: {last_pos = 2;}
  5080  001034  0E02               	movlw	2
  5081  001036  D012               	goto	L5
  5082  001038                     l2979:
  5083                           
  5084                           ;pulsonic.c: 241: else if (I>9)
  5085  001038  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  5086  00103A  D008               	goto	l2983
  5087  00103C  503C               	movf	disp_show_quantity@I+1,w,c
  5088  00103E  E104               	bnz	u3000
  5089  001040  0E0A               	movlw	10
  5090  001042  5C3B               	subwf	disp_show_quantity@I,w,c
  5091  001044  A0D8               	btfss	status,0,c
  5092  001046  D002               	goto	l2983
  5093  001048                     u3000:
  5094                           
  5095                           ;pulsonic.c: 242: {last_pos = 1;}
  5096  001048  0E01               	movlw	1
  5097  00104A  D008               	goto	L5
  5098  00104C                     l2983:
  5099                           
  5100                           ;pulsonic.c: 243: else;pulsonic.c: 244: {;pulsonic.c: 245: pulsonic.display7s[QUANT_DIG_
      +                          1] = DISP7S_NUMS[0];
  5101  00104C  0E01               	movlw	low _DISP7S_NUMS
  5102  00104E  6EF6               	movwf	tblptrl,c
  5103  001050                     	if	1	;There is more than 1 active tblptr byte
  5104  001050  0E08               	movlw	high _DISP7S_NUMS
  5105  001052  6EF7               	movwf	tblptrh,c
  5106  001054                     	endif
  5107  001054                     	if	0	;There are less than 3 active tblptr bytes
  5108  001054                     	endif
  5109  001054  0008               	tblrd		*
  5110  001056  CFF5 F177          	movff	tablat,_pulsonic+119
  5111                           
  5112                           ;pulsonic.c: 246: last_pos = 0;
  5113  00105A  0E00               	movlw	0
  5114  00105C                     L5:
  5115  00105C  6E3A               	movwf	disp_show_quantity@last_pos,c
  5116                           
  5117                           ;pulsonic.c: 247: };pulsonic.c: 249: q = 0;
  5118  00105E  0E00               	movlw	0
  5119  001060  6E39               	movwf	disp_show_quantity@q,c
  5120                           
  5121                           ;pulsonic.c: 250: for (i=last_pos; i>=0; i--)
  5122  001062  C03A  F03D         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  5123  001066                     l2991:
  5124  001066  BE3D               	btfsc	disp_show_quantity@i,7,c
  5125  001068  D01A               	goto	l3005
  5126                           
  5127                           ;pulsonic.c: 251: {;pulsonic.c: 252: num = buff[i] - 0x30;
  5128  00106A  503D               	movf	disp_show_quantity@i,w,c
  5129  00106C  0F2B               	addlw	low disp_show_quantity@buff
  5130  00106E  6ED9               	movwf	fsr2l,c
  5131  001070  6ADA               	clrf	fsr2h,c
  5132  001072  50DF               	movf	indf2,w,c
  5133  001074  0FD0               	addlw	208
  5134  001076  6E38               	movwf	disp_show_quantity@num,c
  5135                           
  5136                           ;pulsonic.c: 253: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5137  001078  5038               	movf	disp_show_quantity@num,w,c
  5138  00107A  0F01               	addlw	low _DISP7S_NUMS
  5139  00107C  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5140  00107E  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5141  001082                     	if	1	;There is more than 1 active tblptr byte
  5142  001082  0E08               	movlw	high __smallconst
  5143  001084  6EF7               	movwf	tblptrh,c
  5144  001086                     	endif
  5145  001086                     	if	0	;tblptru may be non-zero
  5146  001086                     	endif
  5147  001086                     	if	0	;tblptru may be non-zero
  5148  001086                     	endif
  5149  001086  0E76               	movlw	low (_pulsonic+118)
  5150  001088  2439               	addwf	disp_show_quantity@q,w,c
  5151  00108A  6ED9               	movwf	fsr2l,c
  5152  00108C  6ADA               	clrf	fsr2h,c
  5153  00108E  0E01               	movlw	high (_pulsonic+118)
  5154  001090  22DA               	addwfc	fsr2h,f,c
  5155  001092  0008               	tblrd		*
  5156  001094  CFF5 FFDF          	movff	tablat,indf2
  5157  001098  2A39               	incf	disp_show_quantity@q,f,c
  5158  00109A  063D               	decf	disp_show_quantity@i,f,c
  5159  00109C  D7E4               	goto	l2991
  5160  00109E                     l3005:
  5161                           
  5162                           ;pulsonic.c: 254: };pulsonic.c: 255: pulsonic.display7s[QUANT_DIG_1] |= 0x80;
  5163  00109E  0101               	movlb	1	; () banked
  5164  0010A0  8F77               	bsf	(_pulsonic+119)& (0+255),7,b
  5165                           
  5166                           ;pulsonic.c: 257: }
  5167  0010A2  0012               	return	
  5168  0010A4                     l3007:
  5169                           
  5170                           ;pulsonic.c: 258: else;pulsonic.c: 259: {;pulsonic.c: 260: q = 0;
  5171  0010A4  0E00               	movlw	0
  5172  0010A6  6E39               	movwf	disp_show_quantity@q,c
  5173                           
  5174                           ;pulsonic.c: 262: for (i=last_pos; i>=0; i--)
  5175  0010A8  0E02               	movlw	2
  5176  0010AA  6E3D               	movwf	disp_show_quantity@i,c
  5177  0010AC                     l3015:
  5178                           
  5179                           ;pulsonic.c: 263: {;pulsonic.c: 264: num = buff[i] - 0x30;
  5180  0010AC  503D               	movf	disp_show_quantity@i,w,c
  5181  0010AE  0F2B               	addlw	low disp_show_quantity@buff
  5182  0010B0  6ED9               	movwf	fsr2l,c
  5183  0010B2  6ADA               	clrf	fsr2h,c
  5184  0010B4  50DF               	movf	indf2,w,c
  5185  0010B6  0FD0               	addlw	208
  5186  0010B8  6E38               	movwf	disp_show_quantity@num,c
  5187                           
  5188                           ;pulsonic.c: 265: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5189  0010BA  5038               	movf	disp_show_quantity@num,w,c
  5190  0010BC  0F01               	addlw	low _DISP7S_NUMS
  5191  0010BE  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5192  0010C0  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5193  0010C4                     	if	1	;There is more than 1 active tblptr byte
  5194  0010C4  0E08               	movlw	high __smallconst
  5195  0010C6  6EF7               	movwf	tblptrh,c
  5196  0010C8                     	endif
  5197  0010C8                     	if	0	;tblptru may be non-zero
  5198  0010C8                     	endif
  5199  0010C8                     	if	0	;tblptru may be non-zero
  5200  0010C8                     	endif
  5201  0010C8  0E76               	movlw	low (_pulsonic+118)
  5202  0010CA  2439               	addwf	disp_show_quantity@q,w,c
  5203  0010CC  6ED9               	movwf	fsr2l,c
  5204  0010CE  6ADA               	clrf	fsr2h,c
  5205  0010D0  0E01               	movlw	high (_pulsonic+118)
  5206  0010D2  22DA               	addwfc	fsr2h,f,c
  5207  0010D4  0008               	tblrd		*
  5208  0010D6  CFF5 FFDF          	movff	tablat,indf2
  5209  0010DA  2A39               	incf	disp_show_quantity@q,f,c
  5210  0010DC  063D               	decf	disp_show_quantity@i,f,c
  5211  0010DE  BE3D               	btfsc	disp_show_quantity@i,7,c
  5212  0010E0  0012               	return	
  5213  0010E2  D7E4               	goto	l3015
  5214  0010E4                     __end_of_disp_show_quantity:
  5215                           	opt callstack 0
  5216                           
  5217 ;; *************** function _itoa *****************
  5218 ;; Defined at:
  5219 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  buf             1   15[COMRAM] PTR unsigned char 
  5222 ;;		 -> disp_show_quantity@buff(10), 
  5223 ;;  val             2   16[COMRAM] int 
  5224 ;;  base            2   18[COMRAM] int 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  cp              1    0        PTR unsigned char 
  5227 ;;		 -> disp_show_quantity@buff(10), 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      PTR unsigned char 
  5230 ;; Registers used:
  5231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5237 ;;      Params:         5       0       0       0       0       0       0       0       0
  5238 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5240 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5241 ;;Total ram usage:        6 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    3
  5244 ;; This function calls:
  5245 ;;		_utoa
  5246 ;; This function is called by:
  5247 ;;		_disp_show_quantity
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text44
  5252  001D2E                     __ptext44:
  5253                           	opt callstack 0
  5254  001D2E                     _itoa:
  5255                           	opt callstack 26
  5256                           
  5257                           ;incstack = 0
  5258  001D2E  AE12               	btfss	itoa@val+1,7,c
  5259  001D30  D00A               	goto	l2747
  5260  001D32  5010               	movf	itoa@buf,w,c
  5261  001D34  6ED9               	movwf	fsr2l,c
  5262  001D36  6ADA               	clrf	fsr2h,c
  5263  001D38  0E2D               	movlw	45
  5264  001D3A  6EDF               	movwf	indf2,c
  5265  001D3C  2A10               	incf	itoa@buf,f,c
  5266  001D3E  6C11               	negf	itoa@val,c
  5267  001D40  1E12               	comf	itoa@val+1,f,c
  5268  001D42  B0D8               	btfsc	status,0,c
  5269  001D44  2A12               	incf	itoa@val+1,f,c
  5270  001D46                     l2747:
  5271  001D46  C010  F008         	movff	itoa@buf,utoa@buf
  5272  001D4A  C011  F009         	movff	itoa@val,utoa@val
  5273  001D4E  C012  F00A         	movff	itoa@val+1,utoa@val+1
  5274  001D52  C013  F00B         	movff	itoa@base,utoa@base
  5275  001D56  C014  F00C         	movff	itoa@base+1,utoa@base+1
  5276  001D5A  EC75  F00C         	call	_utoa	;wreg free
  5277  001D5E  0012               	return		;funcret
  5278  001D60                     __end_of_itoa:
  5279                           	opt callstack 0
  5280                           
  5281 ;; *************** function _utoa *****************
  5282 ;; Defined at:
  5283 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  buf             1    7[COMRAM] PTR unsigned char 
  5286 ;;		 -> disp_show_quantity@buff(10), 
  5287 ;;  val             2    8[COMRAM] unsigned int 
  5288 ;;  base            2   10[COMRAM] int 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  v               2   12[COMRAM] unsigned int 
  5291 ;;  c               1   14[COMRAM] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      PTR unsigned char 
  5294 ;; Registers used:
  5295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5301 ;;      Params:         5       0       0       0       0       0       0       0       0
  5302 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5304 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5305 ;;Total ram usage:        8 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    2
  5308 ;; This function calls:
  5309 ;;		___lwdiv
  5310 ;;		___lwmod
  5311 ;; This function is called by:
  5312 ;;		_itoa
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text45
  5317  0018EA                     __ptext45:
  5318                           	opt callstack 0
  5319  0018EA                     _utoa:
  5320                           	opt callstack 26
  5321                           
  5322                           ;incstack = 0
  5323  0018EA  C009  F00D         	movff	utoa@val,utoa@v
  5324  0018EE  C00A  F00E         	movff	utoa@val+1,utoa@v+1
  5325  0018F2                     l2485:
  5326  0018F2  C00D  F001         	movff	utoa@v,___lwdiv@dividend
  5327  0018F6  C00E  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  5328  0018FA  C00B  F003         	movff	utoa@base,___lwdiv@divisor
  5329  0018FE  C00C  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  5330  001902  EC5E  F00D         	call	___lwdiv	;wreg free
  5331  001906  C001  F00D         	movff	?___lwdiv,utoa@v
  5332  00190A  C002  F00E         	movff	?___lwdiv+1,utoa@v+1
  5333  00190E  2A08               	incf	utoa@buf,f,c
  5334  001910  500D               	movf	utoa@v,w,c
  5335  001912  100E               	iorwf	utoa@v+1,w,c
  5336  001914  A4D8               	btfss	status,2,c
  5337  001916  D7ED               	goto	l2485
  5338  001918  5008               	movf	utoa@buf,w,c
  5339  00191A  6ED9               	movwf	fsr2l,c
  5340  00191C  6ADA               	clrf	fsr2h,c
  5341  00191E  0E00               	movlw	0
  5342  001920  6EDF               	movwf	indf2,c
  5343  001922  0608               	decf	utoa@buf,f,c
  5344  001924                     l2495:
  5345  001924  C009  F001         	movff	utoa@val,___lwmod@dividend
  5346  001928  C00A  F002         	movff	utoa@val+1,___lwmod@dividend+1
  5347  00192C  C00B  F003         	movff	utoa@base,___lwmod@divisor
  5348  001930  C00C  F004         	movff	utoa@base+1,___lwmod@divisor+1
  5349  001934  EC1A  F00E         	call	___lwmod	;wreg free
  5350  001938  5001               	movf	?___lwmod,w,c
  5351  00193A  6E0F               	movwf	utoa@c,c
  5352  00193C  C009  F001         	movff	utoa@val,___lwdiv@dividend
  5353  001940  C00A  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  5354  001944  C00B  F003         	movff	utoa@base,___lwdiv@divisor
  5355  001948  C00C  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  5356  00194C  EC5E  F00D         	call	___lwdiv	;wreg free
  5357  001950  C001  F009         	movff	?___lwdiv,utoa@val
  5358  001954  C002  F00A         	movff	?___lwdiv+1,utoa@val+1
  5359  001958  0E09               	movlw	9
  5360  00195A  640F               	cpfsgt	utoa@c,c
  5361  00195C  D002               	goto	l1209
  5362  00195E  0E07               	movlw	7
  5363  001960  260F               	addwf	utoa@c,f,c
  5364  001962                     l1209:
  5365  001962  0E30               	movlw	48
  5366  001964  260F               	addwf	utoa@c,f,c
  5367  001966  5008               	movf	utoa@buf,w,c
  5368  001968  6ED9               	movwf	fsr2l,c
  5369  00196A  6ADA               	clrf	fsr2h,c
  5370  00196C  C00F  FFDF         	movff	utoa@c,indf2
  5371  001970  0608               	decf	utoa@buf,f,c
  5372  001972  5009               	movf	utoa@val,w,c
  5373  001974  100A               	iorwf	utoa@val+1,w,c
  5374  001976  A4D8               	btfss	status,2,c
  5375  001978  D7D5               	goto	l2495
  5376                           
  5377                           ;	Return value of _utoa is never used
  5378  00197A  2A08               	incf	utoa@buf,f,c
  5379  00197C  0012               	return		;funcret
  5380  00197E                     __end_of_utoa:
  5381                           	opt callstack 0
  5382                           
  5383 ;; *************** function ___lwmod *****************
  5384 ;; Defined at:
  5385 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  dividend        2    0[COMRAM] unsigned int 
  5388 ;;  divisor         2    2[COMRAM] unsigned int 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  counter         1    4[COMRAM] unsigned char 
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  2    0[COMRAM] unsigned int 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5400 ;;      Params:         4       0       0       0       0       0       0       0       0
  5401 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5403 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5404 ;;Total ram usage:        5 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    1
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_utoa
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text46
  5415  001C34                     __ptext46:
  5416                           	opt callstack 0
  5417  001C34                     ___lwmod:
  5418                           	opt callstack 26
  5419                           
  5420                           ;incstack = 0
  5421  001C34  5003               	movf	___lwmod@divisor,w,c
  5422  001C36  1004               	iorwf	___lwmod@divisor+1,w,c
  5423  001C38  B4D8               	btfsc	status,2,c
  5424  001C3A  D018               	goto	l1027
  5425  001C3C  0E01               	movlw	1
  5426  001C3E  6E05               	movwf	___lwmod@counter,c
  5427  001C40  D004               	goto	l2315
  5428  001C42                     l2313:
  5429  001C42  90D8               	bcf	status,0,c
  5430  001C44  3603               	rlcf	___lwmod@divisor,f,c
  5431  001C46  3604               	rlcf	___lwmod@divisor+1,f,c
  5432  001C48  2A05               	incf	___lwmod@counter,f,c
  5433  001C4A                     l2315:
  5434  001C4A  AE04               	btfss	___lwmod@divisor+1,7,c
  5435  001C4C  D7FA               	goto	l2313
  5436  001C4E                     u1700:
  5437  001C4E  5003               	movf	___lwmod@divisor,w,c
  5438  001C50  5C01               	subwf	___lwmod@dividend,w,c
  5439  001C52  5004               	movf	___lwmod@divisor+1,w,c
  5440  001C54  5802               	subwfb	___lwmod@dividend+1,w,c
  5441  001C56  A0D8               	btfss	status,0,c
  5442  001C58  D004               	goto	l2321
  5443  001C5A  5003               	movf	___lwmod@divisor,w,c
  5444  001C5C  5E01               	subwf	___lwmod@dividend,f,c
  5445  001C5E  5004               	movf	___lwmod@divisor+1,w,c
  5446  001C60  5A02               	subwfb	___lwmod@dividend+1,f,c
  5447  001C62                     l2321:
  5448  001C62  90D8               	bcf	status,0,c
  5449  001C64  3204               	rrcf	___lwmod@divisor+1,f,c
  5450  001C66  3203               	rrcf	___lwmod@divisor,f,c
  5451  001C68  2E05               	decfsz	___lwmod@counter,f,c
  5452  001C6A  D7F1               	goto	u1700
  5453  001C6C                     l1027:
  5454  001C6C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5455  001C70  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5456  001C74  0012               	return		;funcret
  5457  001C76                     __end_of___lwmod:
  5458                           	opt callstack 0
  5459                           
  5460 ;; *************** function ___lwdiv *****************
  5461 ;; Defined at:
  5462 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  dividend        2    0[COMRAM] unsigned int 
  5465 ;;  divisor         2    2[COMRAM] unsigned int 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  quotient        2    4[COMRAM] unsigned int 
  5468 ;;  counter         1    6[COMRAM] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2    0[COMRAM] unsigned int 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5478 ;;      Params:         4       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5481 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:        7 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_utoa
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text47
  5493  001ABC                     __ptext47:
  5494                           	opt callstack 0
  5495  001ABC                     ___lwdiv:
  5496                           	opt callstack 26
  5497                           
  5498                           ;incstack = 0
  5499  001ABC  0E00               	movlw	0
  5500  001ABE  6E06               	movwf	___lwdiv@quotient+1,c
  5501  001AC0  0E00               	movlw	0
  5502  001AC2  6E05               	movwf	___lwdiv@quotient,c
  5503  001AC4  5003               	movf	___lwdiv@divisor,w,c
  5504  001AC6  1004               	iorwf	___lwdiv@divisor+1,w,c
  5505  001AC8  B4D8               	btfsc	status,2,c
  5506  001ACA  D01C               	goto	l1017
  5507  001ACC  0E01               	movlw	1
  5508  001ACE  6E07               	movwf	___lwdiv@counter,c
  5509  001AD0  D004               	goto	l2295
  5510  001AD2                     l2293:
  5511  001AD2  90D8               	bcf	status,0,c
  5512  001AD4  3603               	rlcf	___lwdiv@divisor,f,c
  5513  001AD6  3604               	rlcf	___lwdiv@divisor+1,f,c
  5514  001AD8  2A07               	incf	___lwdiv@counter,f,c
  5515  001ADA                     l2295:
  5516  001ADA  AE04               	btfss	___lwdiv@divisor+1,7,c
  5517  001ADC  D7FA               	goto	l2293
  5518  001ADE                     u1670:
  5519  001ADE  90D8               	bcf	status,0,c
  5520  001AE0  3605               	rlcf	___lwdiv@quotient,f,c
  5521  001AE2  3606               	rlcf	___lwdiv@quotient+1,f,c
  5522  001AE4  5003               	movf	___lwdiv@divisor,w,c
  5523  001AE6  5C01               	subwf	___lwdiv@dividend,w,c
  5524  001AE8  5004               	movf	___lwdiv@divisor+1,w,c
  5525  001AEA  5802               	subwfb	___lwdiv@dividend+1,w,c
  5526  001AEC  A0D8               	btfss	status,0,c
  5527  001AEE  D005               	goto	l2305
  5528  001AF0  5003               	movf	___lwdiv@divisor,w,c
  5529  001AF2  5E01               	subwf	___lwdiv@dividend,f,c
  5530  001AF4  5004               	movf	___lwdiv@divisor+1,w,c
  5531  001AF6  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5532  001AF8  8005               	bsf	___lwdiv@quotient,0,c
  5533  001AFA                     l2305:
  5534  001AFA  90D8               	bcf	status,0,c
  5535  001AFC  3204               	rrcf	___lwdiv@divisor+1,f,c
  5536  001AFE  3203               	rrcf	___lwdiv@divisor,f,c
  5537  001B00  2E07               	decfsz	___lwdiv@counter,f,c
  5538  001B02  D7ED               	goto	u1670
  5539  001B04                     l1017:
  5540  001B04  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5541  001B08  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5542  001B0C  0012               	return		;funcret
  5543  001B0E                     __end_of___lwdiv:
  5544                           	opt callstack 0
  5545                           
  5546 ;; *************** function ___fttol *****************
  5547 ;; Defined at:
  5548 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  f1              3   23[COMRAM] float 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  lval            4   33[COMRAM] unsigned long 
  5553 ;;  exp1            1   37[COMRAM] unsigned char 
  5554 ;;  sign1           1   32[COMRAM] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  4   23[COMRAM] long 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5564 ;;      Params:         4       0       0       0       0       0       0       0       0
  5565 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5566 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5567 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5568 ;;Total ram usage:       15 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    1
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_disp_show_quantity
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text48
  5579  001614                     __ptext48:
  5580                           	opt callstack 0
  5581  001614                     ___fttol:
  5582                           	opt callstack 28
  5583                           
  5584                           ;incstack = 0
  5585  001614  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  5586  001618  6A1D               	clrf	(??___fttol+1)& (0+255),c
  5587  00161A  6A1E               	clrf	(??___fttol+2)& (0+255),c
  5588  00161C  3419               	rlcf	___fttol@f1+1,w,c
  5589  00161E  361C               	rlcf	??___fttol& (0+255),f,c
  5590  001620  E301               	bnc	u2811
  5591  001622  801D               	bsf	(??___fttol+1)& (0+255),0,c
  5592  001624                     u2811:
  5593  001624  501C               	movf	??___fttol,w,c
  5594  001626  6E26               	movwf	___fttol@exp1,c
  5595  001628  5026               	movf	___fttol@exp1,w,c
  5596  00162A  A4D8               	btfss	status,2,c
  5597  00162C  D009               	goto	l2831
  5598  00162E                     u2820:
  5599  00162E  0E00               	movlw	0
  5600  001630  6E18               	movwf	?___fttol,c
  5601  001632  0E00               	movlw	0
  5602  001634  6E19               	movwf	?___fttol+1,c
  5603  001636  0E00               	movlw	0
  5604  001638  6E1A               	movwf	?___fttol+2,c
  5605  00163A  0E00               	movlw	0
  5606  00163C  6E1B               	movwf	?___fttol+3,c
  5607  00163E  0012               	return	
  5608  001640                     l2831:
  5609  001640  0E17               	movlw	23
  5610  001642  6E1C               	movwf	??___fttol& (0+255),c
  5611  001644  C018  F01D         	movff	___fttol@f1,??___fttol+1
  5612  001648  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  5613  00164C  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  5614  001650  281C               	incf	??___fttol,w,c
  5615  001652  6E20               	movwf	(??___fttol+4)& (0+255),c
  5616  001654  D004               	goto	u2830
  5617  001656                     u2835:
  5618  001656  90D8               	bcf	status,0,c
  5619  001658  321F               	rrcf	??___fttol+3,f,c
  5620  00165A  321E               	rrcf	??___fttol+2,f,c
  5621  00165C  321D               	rrcf	??___fttol+1,f,c
  5622  00165E                     u2830:
  5623  00165E  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  5624  001660  D7FA               	goto	u2835
  5625  001662  501D               	movf	??___fttol+1,w,c
  5626  001664  6E21               	movwf	___fttol@sign1,c
  5627  001666  8E19               	bsf	___fttol@f1+1,7,c
  5628  001668  0EFF               	movlw	255
  5629  00166A  1618               	andwf	___fttol@f1,f,c
  5630  00166C  0EFF               	movlw	255
  5631  00166E  1619               	andwf	___fttol@f1+1,f,c
  5632  001670  0E00               	movlw	0
  5633  001672  161A               	andwf	___fttol@f1+2,f,c
  5634  001674  5018               	movf	___fttol@f1,w,c
  5635  001676  6E22               	movwf	___fttol@lval,c
  5636  001678  5019               	movf	___fttol@f1+1,w,c
  5637  00167A  6E23               	movwf	___fttol@lval+1,c
  5638  00167C  501A               	movf	___fttol@f1+2,w,c
  5639  00167E  6E24               	movwf	___fttol@lval+2,c
  5640  001680  6A25               	clrf	___fttol@lval+3,c
  5641  001682  0E8E               	movlw	142
  5642  001684  5E26               	subwf	___fttol@exp1,f,c
  5643  001686  AE26               	btfss	___fttol@exp1,7,c
  5644  001688  D00D               	goto	l2853
  5645  00168A  5026               	movf	___fttol@exp1,w,c
  5646  00168C  0A80               	xorlw	128
  5647  00168E  0F8F               	addlw	143
  5648  001690  A0D8               	btfss	status,0,c
  5649  001692  D7CD               	goto	u2820
  5650  001694                     l2849:
  5651  001694  90D8               	bcf	status,0,c
  5652  001696  3225               	rrcf	___fttol@lval+3,f,c
  5653  001698  3224               	rrcf	___fttol@lval+2,f,c
  5654  00169A  3223               	rrcf	___fttol@lval+1,f,c
  5655  00169C  3222               	rrcf	___fttol@lval,f,c
  5656  00169E  3E26               	incfsz	___fttol@exp1,f,c
  5657  0016A0  D7F9               	goto	l2849
  5658  0016A2  D00D               	goto	u2870
  5659  0016A4                     l2853:
  5660  0016A4  0E17               	movlw	23
  5661  0016A6  6426               	cpfsgt	___fttol@exp1,c
  5662  0016A8  D007               	goto	l2861
  5663  0016AA  D7C1               	goto	u2820
  5664  0016AC                     l2859:
  5665  0016AC  90D8               	bcf	status,0,c
  5666  0016AE  3622               	rlcf	___fttol@lval,f,c
  5667  0016B0  3623               	rlcf	___fttol@lval+1,f,c
  5668  0016B2  3624               	rlcf	___fttol@lval+2,f,c
  5669  0016B4  3625               	rlcf	___fttol@lval+3,f,c
  5670  0016B6  0626               	decf	___fttol@exp1,f,c
  5671  0016B8                     l2861:
  5672  0016B8  5026               	movf	___fttol@exp1,w,c
  5673  0016BA  A4D8               	btfss	status,2,c
  5674  0016BC  D7F7               	goto	l2859
  5675  0016BE                     u2870:
  5676  0016BE  5021               	movf	___fttol@sign1,w,c
  5677  0016C0  B4D8               	btfsc	status,2,c
  5678  0016C2  D008               	goto	l2867
  5679  0016C4  1E25               	comf	___fttol@lval+3,f,c
  5680  0016C6  1E24               	comf	___fttol@lval+2,f,c
  5681  0016C8  1E23               	comf	___fttol@lval+1,f,c
  5682  0016CA  6C22               	negf	___fttol@lval,c
  5683  0016CC  0E00               	movlw	0
  5684  0016CE  2223               	addwfc	___fttol@lval+1,f,c
  5685  0016D0  2224               	addwfc	___fttol@lval+2,f,c
  5686  0016D2  2225               	addwfc	___fttol@lval+3,f,c
  5687  0016D4                     l2867:
  5688  0016D4  C022  F018         	movff	___fttol@lval,?___fttol
  5689  0016D8  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  5690  0016DC  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  5691  0016E0  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  5692  0016E4  0012               	return		;funcret
  5693  0016E6                     __end_of___fttol:
  5694                           	opt callstack 0
  5695                           
  5696 ;; *************** function ___ftsub *****************
  5697 ;; Defined at:
  5698 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  f1              3   20[COMRAM] float 
  5701 ;;  f2              3   23[COMRAM] float 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  3   20[COMRAM] float 
  5706 ;; Registers used:
  5707 ;;		wreg, status,2, status,0, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5713 ;;      Params:         6       0       0       0       0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5716 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5717 ;;Total ram usage:        6 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    3
  5720 ;; This function calls:
  5721 ;;		___ftadd
  5722 ;; This function is called by:
  5723 ;;		_disp_show_quantity
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text49
  5728  001CB6                     __ptext49:
  5729                           	opt callstack 0
  5730  001CB6                     ___ftsub:
  5731                           	opt callstack 26
  5732                           
  5733                           ;incstack = 0
  5734  001CB6  5018               	movf	___ftsub@f2,w,c
  5735  001CB8  1019               	iorwf	___ftsub@f2+1,w,c
  5736  001CBA  101A               	iorwf	___ftsub@f2+2,w,c
  5737  001CBC  B4D8               	btfsc	status,2,c
  5738  001CBE  D006               	goto	l2809
  5739  001CC0  0E00               	movlw	0
  5740  001CC2  1A18               	xorwf	___ftsub@f2,f,c
  5741  001CC4  0E00               	movlw	0
  5742  001CC6  1A19               	xorwf	___ftsub@f2+1,f,c
  5743  001CC8  0E80               	movlw	128
  5744  001CCA  1A1A               	xorwf	___ftsub@f2+2,f,c
  5745  001CCC                     l2809:
  5746  001CCC  C015  F009         	movff	___ftsub@f1,___ftadd@f1
  5747  001CD0  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
  5748  001CD4  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
  5749  001CD8  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
  5750  001CDC  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
  5751  001CE0  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
  5752  001CE4  EC72  F008         	call	___ftadd	;wreg free
  5753  001CE8  C009  F015         	movff	?___ftadd,?___ftsub
  5754  001CEC  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
  5755  001CF0  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
  5756  001CF4  0012               	return		;funcret
  5757  001CF6                     __end_of___ftsub:
  5758                           	opt callstack 0
  5759                           
  5760 ;; *************** function ___ftadd *****************
  5761 ;; Defined at:
  5762 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  f1              3    8[COMRAM] float 
  5765 ;;  f2              3   11[COMRAM] float 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  exp1            1   19[COMRAM] unsigned char 
  5768 ;;  exp2            1   18[COMRAM] unsigned char 
  5769 ;;  sign            1   17[COMRAM] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  3    8[COMRAM] float 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5779 ;;      Params:         6       0       0       0       0       0       0       0       0
  5780 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5781 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5782 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5783 ;;Total ram usage:       12 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    2
  5786 ;; This function calls:
  5787 ;;		___ftpack
  5788 ;; This function is called by:
  5789 ;;		___ftsub
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text50
  5794  0010E4                     __ptext50:
  5795                           	opt callstack 0
  5796  0010E4                     ___ftadd:
  5797                           	opt callstack 26
  5798                           
  5799                           ;incstack = 0
  5800  0010E4  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  5801  0010E8  6A10               	clrf	(??___ftadd+1)& (0+255),c
  5802  0010EA  6A11               	clrf	(??___ftadd+2)& (0+255),c
  5803  0010EC  340A               	rlcf	___ftadd@f1+1,w,c
  5804  0010EE  360F               	rlcf	??___ftadd& (0+255),f,c
  5805  0010F0  E301               	bnc	u1781
  5806  0010F2  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  5807  0010F4                     u1781:
  5808  0010F4  500F               	movf	??___ftadd,w,c
  5809  0010F6  6E14               	movwf	___ftadd@exp1,c
  5810  0010F8  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  5811  0010FC  6A10               	clrf	(??___ftadd+1)& (0+255),c
  5812  0010FE  6A11               	clrf	(??___ftadd+2)& (0+255),c
  5813  001100  340D               	rlcf	___ftadd@f2+1,w,c
  5814  001102  360F               	rlcf	??___ftadd& (0+255),f,c
  5815  001104  E301               	bnc	u1791
  5816  001106  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  5817  001108                     u1791:
  5818  001108  500F               	movf	??___ftadd,w,c
  5819  00110A  6E13               	movwf	___ftadd@exp2,c
  5820  00110C  5014               	movf	___ftadd@exp1,w,c
  5821  00110E  B4D8               	btfsc	status,2,c
  5822  001110  D00A               	goto	u1820
  5823  001112  5013               	movf	___ftadd@exp2,w,c
  5824  001114  5C14               	subwf	___ftadd@exp1,w,c
  5825  001116  B0D8               	btfsc	status,0,c
  5826  001118  D00D               	goto	l2399
  5827  00111A  5014               	movf	___ftadd@exp1,w,c
  5828  00111C  5C13               	subwf	___ftadd@exp2,w,c
  5829  00111E  6E0F               	movwf	??___ftadd& (0+255),c
  5830  001120  0E18               	movlw	24
  5831  001122  640F               	cpfsgt	??___ftadd,c
  5832  001124  D007               	goto	l2399
  5833  001126                     u1820:
  5834  001126  C00C  F009         	movff	___ftadd@f2,?___ftadd
  5835  00112A  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  5836  00112E  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  5837  001132  0012               	return	
  5838  001134                     l2399:
  5839  001134  5013               	movf	___ftadd@exp2,w,c
  5840  001136  B4D8               	btfsc	status,2,c
  5841  001138  D00A               	goto	u1850
  5842  00113A  5014               	movf	___ftadd@exp1,w,c
  5843  00113C  5C13               	subwf	___ftadd@exp2,w,c
  5844  00113E  B0D8               	btfsc	status,0,c
  5845  001140  D00D               	goto	l2405
  5846  001142  5013               	movf	___ftadd@exp2,w,c
  5847  001144  5C14               	subwf	___ftadd@exp1,w,c
  5848  001146  6E0F               	movwf	??___ftadd& (0+255),c
  5849  001148  0E18               	movlw	24
  5850  00114A  640F               	cpfsgt	??___ftadd,c
  5851  00114C  D007               	goto	l2405
  5852  00114E                     u1850:
  5853  00114E  C009  F009         	movff	___ftadd@f1,?___ftadd
  5854  001152  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  5855  001156  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  5856  00115A  0012               	return	
  5857  00115C                     l2405:
  5858  00115C  0E06               	movlw	6
  5859  00115E  6E12               	movwf	___ftadd@sign,c
  5860  001160  BE0B               	btfsc	___ftadd@f1+2,7,c
  5861  001162  8E12               	bsf	___ftadd@sign,7,c
  5862  001164  BE0E               	btfsc	___ftadd@f2+2,7,c
  5863  001166  8C12               	bsf	___ftadd@sign,6,c
  5864  001168  8E0A               	bsf	___ftadd@f1+1,7,c
  5865  00116A  0EFF               	movlw	255
  5866  00116C  1609               	andwf	___ftadd@f1,f,c
  5867  00116E  0EFF               	movlw	255
  5868  001170  160A               	andwf	___ftadd@f1+1,f,c
  5869  001172  0E00               	movlw	0
  5870  001174  160B               	andwf	___ftadd@f1+2,f,c
  5871  001176  8E0D               	bsf	___ftadd@f2+1,7,c
  5872  001178  0EFF               	movlw	255
  5873  00117A  160C               	andwf	___ftadd@f2,f,c
  5874  00117C  0EFF               	movlw	255
  5875  00117E  160D               	andwf	___ftadd@f2+1,f,c
  5876  001180  0E00               	movlw	0
  5877  001182  160E               	andwf	___ftadd@f2+2,f,c
  5878  001184  5013               	movf	___ftadd@exp2,w,c
  5879  001186  5C14               	subwf	___ftadd@exp1,w,c
  5880  001188  B0D8               	btfsc	status,0,c
  5881  00118A  D01B               	goto	l2431
  5882  00118C                     u1880:
  5883  00118C  90D8               	bcf	status,0,c
  5884  00118E  360C               	rlcf	___ftadd@f2,f,c
  5885  001190  360D               	rlcf	___ftadd@f2+1,f,c
  5886  001192  360E               	rlcf	___ftadd@f2+2,f,c
  5887  001194  0613               	decf	___ftadd@exp2,f,c
  5888  001196  5014               	movf	___ftadd@exp1,w,c
  5889  001198  1813               	xorwf	___ftadd@exp2,w,c
  5890  00119A  B4D8               	btfsc	status,2,c
  5891  00119C  D00D               	goto	l2429
  5892  00119E  0612               	decf	___ftadd@sign,f,c
  5893  0011A0  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5894  0011A4  0E07               	movlw	7
  5895  0011A6  160F               	andwf	??___ftadd,f,c
  5896  0011A8  B4D8               	btfsc	status,2,c
  5897  0011AA  D006               	goto	l2429
  5898  0011AC  D7EF               	goto	u1880
  5899  0011AE                     l2427:
  5900  0011AE  90D8               	bcf	status,0,c
  5901  0011B0  320B               	rrcf	___ftadd@f1+2,f,c
  5902  0011B2  320A               	rrcf	___ftadd@f1+1,f,c
  5903  0011B4  3209               	rrcf	___ftadd@f1,f,c
  5904  0011B6  2A14               	incf	___ftadd@exp1,f,c
  5905  0011B8                     l2429:
  5906  0011B8  5013               	movf	___ftadd@exp2,w,c
  5907  0011BA  1814               	xorwf	___ftadd@exp1,w,c
  5908  0011BC  B4D8               	btfsc	status,2,c
  5909  0011BE  D01F               	goto	u1950
  5910  0011C0  D7F6               	goto	l2427
  5911  0011C2                     l2431:
  5912  0011C2  5014               	movf	___ftadd@exp1,w,c
  5913  0011C4  5C13               	subwf	___ftadd@exp2,w,c
  5914  0011C6  B0D8               	btfsc	status,0,c
  5915  0011C8  D01A               	goto	u1950
  5916  0011CA                     u1920:
  5917  0011CA  90D8               	bcf	status,0,c
  5918  0011CC  3609               	rlcf	___ftadd@f1,f,c
  5919  0011CE  360A               	rlcf	___ftadd@f1+1,f,c
  5920  0011D0  360B               	rlcf	___ftadd@f1+2,f,c
  5921  0011D2  0614               	decf	___ftadd@exp1,f,c
  5922  0011D4  5014               	movf	___ftadd@exp1,w,c
  5923  0011D6  1813               	xorwf	___ftadd@exp2,w,c
  5924  0011D8  B4D8               	btfsc	status,2,c
  5925  0011DA  D00D               	goto	l2441
  5926  0011DC  0612               	decf	___ftadd@sign,f,c
  5927  0011DE  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5928  0011E2  0E07               	movlw	7
  5929  0011E4  160F               	andwf	??___ftadd,f,c
  5930  0011E6  B4D8               	btfsc	status,2,c
  5931  0011E8  D006               	goto	l2441
  5932  0011EA  D7EF               	goto	u1920
  5933  0011EC                     l2439:
  5934  0011EC  90D8               	bcf	status,0,c
  5935  0011EE  320E               	rrcf	___ftadd@f2+2,f,c
  5936  0011F0  320D               	rrcf	___ftadd@f2+1,f,c
  5937  0011F2  320C               	rrcf	___ftadd@f2,f,c
  5938  0011F4  2A13               	incf	___ftadd@exp2,f,c
  5939  0011F6                     l2441:
  5940  0011F6  5013               	movf	___ftadd@exp2,w,c
  5941  0011F8  1814               	xorwf	___ftadd@exp1,w,c
  5942  0011FA  A4D8               	btfss	status,2,c
  5943  0011FC  D7F7               	goto	l2439
  5944  0011FE                     u1950:
  5945  0011FE  AE12               	btfss	___ftadd@sign,7,c
  5946  001200  D00C               	goto	l868
  5947  001202  0EFF               	movlw	255
  5948  001204  1A09               	xorwf	___ftadd@f1,f,c
  5949  001206  0EFF               	movlw	255
  5950  001208  1A0A               	xorwf	___ftadd@f1+1,f,c
  5951  00120A  0EFF               	movlw	255
  5952  00120C  1A0B               	xorwf	___ftadd@f1+2,f,c
  5953  00120E  0E01               	movlw	1
  5954  001210  2609               	addwf	___ftadd@f1,f,c
  5955  001212  0E00               	movlw	0
  5956  001214  220A               	addwfc	___ftadd@f1+1,f,c
  5957  001216  0E00               	movlw	0
  5958  001218  220B               	addwfc	___ftadd@f1+2,f,c
  5959  00121A                     l868:
  5960  00121A  AC12               	btfss	___ftadd@sign,6,c
  5961  00121C  D00C               	goto	l2447
  5962  00121E  0EFF               	movlw	255
  5963  001220  1A0C               	xorwf	___ftadd@f2,f,c
  5964  001222  0EFF               	movlw	255
  5965  001224  1A0D               	xorwf	___ftadd@f2+1,f,c
  5966  001226  0EFF               	movlw	255
  5967  001228  1A0E               	xorwf	___ftadd@f2+2,f,c
  5968  00122A  0E01               	movlw	1
  5969  00122C  260C               	addwf	___ftadd@f2,f,c
  5970  00122E  0E00               	movlw	0
  5971  001230  220D               	addwfc	___ftadd@f2+1,f,c
  5972  001232  0E00               	movlw	0
  5973  001234  220E               	addwfc	___ftadd@f2+2,f,c
  5974  001236                     l2447:
  5975  001236  0E00               	movlw	0
  5976  001238  6E12               	movwf	___ftadd@sign,c
  5977  00123A  5009               	movf	___ftadd@f1,w,c
  5978  00123C  260C               	addwf	___ftadd@f2,f,c
  5979  00123E  500A               	movf	___ftadd@f1+1,w,c
  5980  001240  220D               	addwfc	___ftadd@f2+1,f,c
  5981  001242  500B               	movf	___ftadd@f1+2,w,c
  5982  001244  220E               	addwfc	___ftadd@f2+2,f,c
  5983  001246  AE0E               	btfss	___ftadd@f2+2,7,c
  5984  001248  D00E               	goto	l2457
  5985  00124A  0EFF               	movlw	255
  5986  00124C  1A0C               	xorwf	___ftadd@f2,f,c
  5987  00124E  0EFF               	movlw	255
  5988  001250  1A0D               	xorwf	___ftadd@f2+1,f,c
  5989  001252  0EFF               	movlw	255
  5990  001254  1A0E               	xorwf	___ftadd@f2+2,f,c
  5991  001256  0E01               	movlw	1
  5992  001258  260C               	addwf	___ftadd@f2,f,c
  5993  00125A  0E00               	movlw	0
  5994  00125C  220D               	addwfc	___ftadd@f2+1,f,c
  5995  00125E  0E00               	movlw	0
  5996  001260  220E               	addwfc	___ftadd@f2+2,f,c
  5997  001262  0E01               	movlw	1
  5998  001264  6E12               	movwf	___ftadd@sign,c
  5999  001266                     l2457:
  6000  001266  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  6001  00126A  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  6002  00126E  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  6003  001272  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  6004  001276  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  6005  00127A  ECCE  F00B         	call	___ftpack	;wreg free
  6006  00127E  C001  F009         	movff	?___ftpack,?___ftadd
  6007  001282  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  6008  001286  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  6009  00128A  0012               	return		;funcret
  6010  00128C                     __end_of___ftadd:
  6011                           	opt callstack 0
  6012                           
  6013 ;; *************** function ___ftmul *****************
  6014 ;; Defined at:
  6015 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  f1              3    8[COMRAM] float 
  6018 ;;  f2              3   11[COMRAM] float 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  6021 ;;  sign            1   22[COMRAM] unsigned char 
  6022 ;;  cntr            1   21[COMRAM] unsigned char 
  6023 ;;  exp             1   17[COMRAM] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  3    8[COMRAM] float 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6033 ;;      Params:         6       0       0       0       0       0       0       0       0
  6034 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6035 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6036 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6037 ;;Total ram usage:       15 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    2
  6040 ;; This function calls:
  6041 ;;		___ftpack
  6042 ;; This function is called by:
  6043 ;;		_disp_show_quantity
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text51
  6048  001520                     __ptext51:
  6049                           	opt callstack 0
  6050  001520                     ___ftmul:
  6051                           	opt callstack 27
  6052                           
  6053                           ;incstack = 0
  6054  001520  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  6055  001524  6A10               	clrf	(??___ftmul+1)& (0+255),c
  6056  001526  6A11               	clrf	(??___ftmul+2)& (0+255),c
  6057  001528  340A               	rlcf	___ftmul@f1+1,w,c
  6058  00152A  360F               	rlcf	??___ftmul& (0+255),f,c
  6059  00152C  E301               	bnc	u2731
  6060  00152E  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  6061  001530                     u2731:
  6062  001530  500F               	movf	??___ftmul,w,c
  6063  001532  6E12               	movwf	___ftmul@exp,c
  6064  001534  5012               	movf	___ftmul@exp,w,c
  6065  001536  A4D8               	btfss	status,2,c
  6066  001538  D007               	goto	l2763
  6067  00153A  0E00               	movlw	0
  6068  00153C  6E09               	movwf	?___ftmul,c
  6069  00153E  0E00               	movlw	0
  6070  001540  6E0A               	movwf	?___ftmul+1,c
  6071  001542  0E00               	movlw	0
  6072  001544  6E0B               	movwf	?___ftmul+2,c
  6073  001546  0012               	return	
  6074  001548                     l2763:
  6075  001548  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  6076  00154C  6A10               	clrf	(??___ftmul+1)& (0+255),c
  6077  00154E  6A11               	clrf	(??___ftmul+2)& (0+255),c
  6078  001550  340D               	rlcf	___ftmul@f2+1,w,c
  6079  001552  360F               	rlcf	??___ftmul& (0+255),f,c
  6080  001554  E301               	bnc	u2751
  6081  001556  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  6082  001558                     u2751:
  6083  001558  500F               	movf	??___ftmul,w,c
  6084  00155A  6E17               	movwf	___ftmul@sign,c
  6085  00155C  5017               	movf	___ftmul@sign,w,c
  6086  00155E  A4D8               	btfss	status,2,c
  6087  001560  D007               	goto	l2769
  6088  001562  0E00               	movlw	0
  6089  001564  6E09               	movwf	?___ftmul,c
  6090  001566  0E00               	movlw	0
  6091  001568  6E0A               	movwf	?___ftmul+1,c
  6092  00156A  0E00               	movlw	0
  6093  00156C  6E0B               	movwf	?___ftmul+2,c
  6094  00156E  0012               	return	
  6095  001570                     l2769:
  6096  001570  5017               	movf	___ftmul@sign,w,c
  6097  001572  0F7B               	addlw	123
  6098  001574  2612               	addwf	___ftmul@exp,f,c
  6099  001576  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  6100  00157A  500E               	movf	___ftmul@f2+2,w,c
  6101  00157C  1A17               	xorwf	___ftmul@sign,f,c
  6102  00157E  0E80               	movlw	128
  6103  001580  1617               	andwf	___ftmul@sign,f,c
  6104  001582  8E0A               	bsf	___ftmul@f1+1,7,c
  6105  001584  8E0D               	bsf	___ftmul@f2+1,7,c
  6106  001586  0EFF               	movlw	255
  6107  001588  160C               	andwf	___ftmul@f2,f,c
  6108  00158A  0EFF               	movlw	255
  6109  00158C  160D               	andwf	___ftmul@f2+1,f,c
  6110  00158E  0E00               	movlw	0
  6111  001590  160E               	andwf	___ftmul@f2+2,f,c
  6112  001592  0E00               	movlw	0
  6113  001594  6E13               	movwf	___ftmul@f3_as_product,c
  6114  001596  0E00               	movlw	0
  6115  001598  6E14               	movwf	___ftmul@f3_as_product+1,c
  6116  00159A  0E00               	movlw	0
  6117  00159C  6E15               	movwf	___ftmul@f3_as_product+2,c
  6118  00159E  0E07               	movlw	7
  6119  0015A0  6E16               	movwf	___ftmul@cntr,c
  6120  0015A2                     l2783:
  6121  0015A2  A009               	btfss	___ftmul@f1,0,c
  6122  0015A4  D006               	goto	l2787
  6123  0015A6  500C               	movf	___ftmul@f2,w,c
  6124  0015A8  2613               	addwf	___ftmul@f3_as_product,f,c
  6125  0015AA  500D               	movf	___ftmul@f2+1,w,c
  6126  0015AC  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  6127  0015AE  500E               	movf	___ftmul@f2+2,w,c
  6128  0015B0  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  6129  0015B2                     l2787:
  6130  0015B2  90D8               	bcf	status,0,c
  6131  0015B4  320B               	rrcf	___ftmul@f1+2,f,c
  6132  0015B6  320A               	rrcf	___ftmul@f1+1,f,c
  6133  0015B8  3209               	rrcf	___ftmul@f1,f,c
  6134  0015BA  90D8               	bcf	status,0,c
  6135  0015BC  360C               	rlcf	___ftmul@f2,f,c
  6136  0015BE  360D               	rlcf	___ftmul@f2+1,f,c
  6137  0015C0  360E               	rlcf	___ftmul@f2+2,f,c
  6138  0015C2  2E16               	decfsz	___ftmul@cntr,f,c
  6139  0015C4  D7EE               	goto	l2783
  6140  0015C6  0E09               	movlw	9
  6141  0015C8  6E16               	movwf	___ftmul@cntr,c
  6142  0015CA                     l2793:
  6143  0015CA  A009               	btfss	___ftmul@f1,0,c
  6144  0015CC  D006               	goto	l2797
  6145  0015CE  500C               	movf	___ftmul@f2,w,c
  6146  0015D0  2613               	addwf	___ftmul@f3_as_product,f,c
  6147  0015D2  500D               	movf	___ftmul@f2+1,w,c
  6148  0015D4  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  6149  0015D6  500E               	movf	___ftmul@f2+2,w,c
  6150  0015D8  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  6151  0015DA                     l2797:
  6152  0015DA  90D8               	bcf	status,0,c
  6153  0015DC  320B               	rrcf	___ftmul@f1+2,f,c
  6154  0015DE  320A               	rrcf	___ftmul@f1+1,f,c
  6155  0015E0  3209               	rrcf	___ftmul@f1,f,c
  6156  0015E2  90D8               	bcf	status,0,c
  6157  0015E4  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  6158  0015E6  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  6159  0015E8  3213               	rrcf	___ftmul@f3_as_product,f,c
  6160  0015EA  2E16               	decfsz	___ftmul@cntr,f,c
  6161  0015EC  D7EE               	goto	l2793
  6162  0015EE  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  6163  0015F2  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6164  0015F6  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6165  0015FA  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  6166  0015FE  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  6167  001602  ECCE  F00B         	call	___ftpack	;wreg free
  6168  001606  C001  F009         	movff	?___ftpack,?___ftmul
  6169  00160A  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  6170  00160E  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  6171  001612  0012               	return		;funcret
  6172  001614                     __end_of___ftmul:
  6173                           	opt callstack 0
  6174                           
  6175 ;; *************** function ___ftge *****************
  6176 ;; Defined at:
  6177 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  ff1             3   11[COMRAM] float 
  6180 ;;  ff2             3   14[COMRAM] float 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;		None               void
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6192 ;;      Params:         6       0       0       0       0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6194 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6195 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6196 ;;Total ram usage:        9 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    1
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_ikey_parsing
  6203 ;;		_disp_show_quantity
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text52
  6208  00197E                     __ptext52:
  6209                           	opt callstack 0
  6210  00197E                     ___ftge:
  6211                           	opt callstack 27
  6212                           
  6213                           ;incstack = 0
  6214  00197E  AE0E               	btfss	___ftge@ff1+2,7,c
  6215  001980  D00F               	goto	l2465
  6216  001982  0E00               	movlw	0
  6217  001984  6E12               	movwf	??___ftge& (0+255),c
  6218  001986  0E00               	movlw	0
  6219  001988  6E13               	movwf	(??___ftge+1)& (0+255),c
  6220  00198A  0E80               	movlw	128
  6221  00198C  6E14               	movwf	(??___ftge+2)& (0+255),c
  6222  00198E  500C               	movf	___ftge@ff1,w,c
  6223  001990  5C12               	subwf	??___ftge,w,c
  6224  001992  6E0C               	movwf	___ftge@ff1,c
  6225  001994  500D               	movf	___ftge@ff1+1,w,c
  6226  001996  5813               	subwfb	??___ftge+1,w,c
  6227  001998  6E0D               	movwf	___ftge@ff1+1,c
  6228  00199A  500E               	movf	___ftge@ff1+2,w,c
  6229  00199C  5814               	subwfb	??___ftge+2,w,c
  6230  00199E  6E0E               	movwf	___ftge@ff1+2,c
  6231  0019A0                     l2465:
  6232  0019A0  AE11               	btfss	___ftge@ff2+2,7,c
  6233  0019A2  D00F               	goto	l2469
  6234  0019A4  0E00               	movlw	0
  6235  0019A6  6E12               	movwf	??___ftge& (0+255),c
  6236  0019A8  0E00               	movlw	0
  6237  0019AA  6E13               	movwf	(??___ftge+1)& (0+255),c
  6238  0019AC  0E80               	movlw	128
  6239  0019AE  6E14               	movwf	(??___ftge+2)& (0+255),c
  6240  0019B0  500F               	movf	___ftge@ff2,w,c
  6241  0019B2  5C12               	subwf	??___ftge,w,c
  6242  0019B4  6E0F               	movwf	___ftge@ff2,c
  6243  0019B6  5010               	movf	___ftge@ff2+1,w,c
  6244  0019B8  5813               	subwfb	??___ftge+1,w,c
  6245  0019BA  6E10               	movwf	___ftge@ff2+1,c
  6246  0019BC  5011               	movf	___ftge@ff2+2,w,c
  6247  0019BE  5814               	subwfb	??___ftge+2,w,c
  6248  0019C0  6E11               	movwf	___ftge@ff2+2,c
  6249  0019C2                     l2469:
  6250  0019C2  0E00               	movlw	0
  6251  0019C4  1A0C               	xorwf	___ftge@ff1,f,c
  6252  0019C6  0E00               	movlw	0
  6253  0019C8  1A0D               	xorwf	___ftge@ff1+1,f,c
  6254  0019CA  0E80               	movlw	128
  6255  0019CC  1A0E               	xorwf	___ftge@ff1+2,f,c
  6256  0019CE  0E00               	movlw	0
  6257  0019D0  1A0F               	xorwf	___ftge@ff2,f,c
  6258  0019D2  0E00               	movlw	0
  6259  0019D4  1A10               	xorwf	___ftge@ff2+1,f,c
  6260  0019D6  0E80               	movlw	128
  6261  0019D8  1A11               	xorwf	___ftge@ff2+2,f,c
  6262  0019DA  500F               	movf	___ftge@ff2,w,c
  6263  0019DC  5C0C               	subwf	___ftge@ff1,w,c
  6264  0019DE  5010               	movf	___ftge@ff2+1,w,c
  6265  0019E0  580D               	subwfb	___ftge@ff1+1,w,c
  6266  0019E2  5011               	movf	___ftge@ff2+2,w,c
  6267  0019E4  580E               	subwfb	___ftge@ff1+2,w,c
  6268  0019E6  B0D8               	btfsc	status,0,c
  6269  0019E8  D002               	goto	l2475
  6270  0019EA  90D8               	bcf	status,0,c
  6271  0019EC  0012               	return	
  6272  0019EE                     l2475:
  6273  0019EE  80D8               	bsf	status,0,c
  6274  0019F0  0012               	return		;funcret
  6275  0019F2                     __end_of___ftge:
  6276                           	opt callstack 0
  6277                           
  6278 ;; *************** function ___awtoft *****************
  6279 ;; Defined at:
  6280 ;;		line 32 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awtoft.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  c               2    8[COMRAM] int 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  sign            1   11[COMRAM] unsigned char 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  3    8[COMRAM] float 
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0, cstack
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6294 ;;      Params:         3       0       0       0       0       0       0       0       0
  6295 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6297 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6298 ;;Total ram usage:        4 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    2
  6301 ;; This function calls:
  6302 ;;		___ftpack
  6303 ;; This function is called by:
  6304 ;;		_disp_show_quantity
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text53
  6309  001CF6                     __ptext53:
  6310                           	opt callstack 0
  6311  001CF6                     ___awtoft:
  6312                           	opt callstack 27
  6313                           
  6314                           ;incstack = 0
  6315  001CF6  0E00               	movlw	0
  6316  001CF8  6E0C               	movwf	___awtoft@sign,c
  6317  001CFA  AE0A               	btfss	___awtoft@c+1,7,c
  6318  001CFC  D006               	goto	l2821
  6319  001CFE  6C09               	negf	___awtoft@c,c
  6320  001D00  1E0A               	comf	___awtoft@c+1,f,c
  6321  001D02  B0D8               	btfsc	status,0,c
  6322  001D04  2A0A               	incf	___awtoft@c+1,f,c
  6323  001D06  0E01               	movlw	1
  6324  001D08  6E0C               	movwf	___awtoft@sign,c
  6325  001D0A                     l2821:
  6326  001D0A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  6327  001D0E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  6328  001D12  6A03               	clrf	___ftpack@arg+2,c
  6329  001D14  0E8E               	movlw	142
  6330  001D16  6E04               	movwf	___ftpack@exp,c
  6331  001D18  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  6332  001D1C  ECCE  F00B         	call	___ftpack	;wreg free
  6333  001D20  C001  F009         	movff	?___ftpack,?___awtoft
  6334  001D24  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  6335  001D28  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  6336  001D2C  0012               	return		;funcret
  6337  001D2E                     __end_of___awtoft:
  6338                           	opt callstack 0
  6339                           
  6340 ;; *************** function ___ftpack *****************
  6341 ;; Defined at:
  6342 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  arg             3    0[COMRAM] unsigned um
  6345 ;;  exp             1    3[COMRAM] unsigned char 
  6346 ;;  sign            1    4[COMRAM] unsigned char 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  3    0[COMRAM] float 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6358 ;;      Params:         5       0       0       0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6360 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6361 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        8 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    1
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		___awtoft
  6369 ;;		___ftadd
  6370 ;;		___ftmul
  6371 ;;		___lwtoft
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text54
  6376  00179C                     __ptext54:
  6377                           	opt callstack 0
  6378  00179C                     ___ftpack:
  6379                           	opt callstack 26
  6380                           
  6381                           ;incstack = 0
  6382  00179C  5004               	movf	___ftpack@exp,w,c
  6383  00179E  B4D8               	btfsc	status,2,c
  6384  0017A0  D005               	goto	u1590
  6385  0017A2  5001               	movf	___ftpack@arg,w,c
  6386  0017A4  1002               	iorwf	___ftpack@arg+1,w,c
  6387  0017A6  1003               	iorwf	___ftpack@arg+2,w,c
  6388  0017A8  A4D8               	btfss	status,2,c
  6389  0017AA  D00C               	goto	l2261
  6390  0017AC                     u1590:
  6391  0017AC  0E00               	movlw	0
  6392  0017AE  6E01               	movwf	?___ftpack,c
  6393  0017B0  0E00               	movlw	0
  6394  0017B2  6E02               	movwf	?___ftpack+1,c
  6395  0017B4  0E00               	movlw	0
  6396  0017B6  6E03               	movwf	?___ftpack+2,c
  6397  0017B8  0012               	return	
  6398  0017BA                     l2259:
  6399  0017BA  2A04               	incf	___ftpack@exp,f,c
  6400  0017BC  90D8               	bcf	status,0,c
  6401  0017BE  3203               	rrcf	___ftpack@arg+2,f,c
  6402  0017C0  3202               	rrcf	___ftpack@arg+1,f,c
  6403  0017C2  3201               	rrcf	___ftpack@arg,f,c
  6404  0017C4                     l2261:
  6405  0017C4  0E00               	movlw	0
  6406  0017C6  1401               	andwf	___ftpack@arg,w,c
  6407  0017C8  6E06               	movwf	??___ftpack& (0+255),c
  6408  0017CA  0E00               	movlw	0
  6409  0017CC  1402               	andwf	___ftpack@arg+1,w,c
  6410  0017CE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6411  0017D0  0EFE               	movlw	254
  6412  0017D2  1403               	andwf	___ftpack@arg+2,w,c
  6413  0017D4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6414  0017D6  5006               	movf	??___ftpack,w,c
  6415  0017D8  1007               	iorwf	??___ftpack+1,w,c
  6416  0017DA  1008               	iorwf	??___ftpack+2,w,c
  6417  0017DC  B4D8               	btfsc	status,2,c
  6418  0017DE  D00C               	goto	l2267
  6419  0017E0  D7EC               	goto	l2259
  6420  0017E2                     l2263:
  6421  0017E2  2A04               	incf	___ftpack@exp,f,c
  6422  0017E4  0E01               	movlw	1
  6423  0017E6  2601               	addwf	___ftpack@arg,f,c
  6424  0017E8  0E00               	movlw	0
  6425  0017EA  2202               	addwfc	___ftpack@arg+1,f,c
  6426  0017EC  0E00               	movlw	0
  6427  0017EE  2203               	addwfc	___ftpack@arg+2,f,c
  6428  0017F0  90D8               	bcf	status,0,c
  6429  0017F2  3203               	rrcf	___ftpack@arg+2,f,c
  6430  0017F4  3202               	rrcf	___ftpack@arg+1,f,c
  6431  0017F6  3201               	rrcf	___ftpack@arg,f,c
  6432  0017F8                     l2267:
  6433  0017F8  0E00               	movlw	0
  6434  0017FA  1401               	andwf	___ftpack@arg,w,c
  6435  0017FC  6E06               	movwf	??___ftpack& (0+255),c
  6436  0017FE  0E00               	movlw	0
  6437  001800  1402               	andwf	___ftpack@arg+1,w,c
  6438  001802  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6439  001804  0EFF               	movlw	255
  6440  001806  1403               	andwf	___ftpack@arg+2,w,c
  6441  001808  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6442  00180A  5006               	movf	??___ftpack,w,c
  6443  00180C  1007               	iorwf	??___ftpack+1,w,c
  6444  00180E  1008               	iorwf	??___ftpack+2,w,c
  6445  001810  B4D8               	btfsc	status,2,c
  6446  001812  D006               	goto	l2271
  6447  001814  D7E6               	goto	l2263
  6448  001816                     l2269:
  6449  001816  0604               	decf	___ftpack@exp,f,c
  6450  001818  90D8               	bcf	status,0,c
  6451  00181A  3601               	rlcf	___ftpack@arg,f,c
  6452  00181C  3602               	rlcf	___ftpack@arg+1,f,c
  6453  00181E  3603               	rlcf	___ftpack@arg+2,f,c
  6454  001820                     l2271:
  6455  001820  BE02               	btfsc	___ftpack@arg+1,7,c
  6456  001822  D003               	goto	u1630
  6457  001824  0E02               	movlw	2
  6458  001826  6004               	cpfslt	___ftpack@exp,c
  6459  001828  D7F6               	goto	l2269
  6460  00182A                     u1630:
  6461  00182A  A004               	btfss	___ftpack@exp,0,c
  6462  00182C  9E02               	bcf	___ftpack@arg+1,7,c
  6463  00182E  90D8               	bcf	status,0,c
  6464  001830  3204               	rrcf	___ftpack@exp,f,c
  6465  001832  5004               	movf	___ftpack@exp,w,c
  6466  001834  1203               	iorwf	___ftpack@arg+2,f,c
  6467  001836  5005               	movf	___ftpack@sign,w,c
  6468  001838  A4D8               	btfss	status,2,c
  6469  00183A  8E03               	bsf	___ftpack@arg+2,7,c
  6470  00183C  C001  F001         	movff	___ftpack@arg,?___ftpack
  6471  001840  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6472  001844  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6473  001848  0012               	return		;funcret
  6474  00184A                     __end_of___ftpack:
  6475                           	opt callstack 0
  6476                           
  6477 ;; *************** function _INTERRUPCION *****************
  6478 ;; Defined at:
  6479 ;;		line 447 in file "main.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1    wreg      void 
  6486 ;; Registers used:
  6487 ;;		wreg, status,2
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6496 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		Interrupt level 2
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	intcode
  6507  000008                     __pintcode:
  6508                           	opt callstack 0
  6509  000008                     _INTERRUPCION:
  6510                           	opt callstack 26
  6511                           
  6512                           ;incstack = 0
  6513  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6514  00000A  ED50  F00F         	call	int_func,f	;refresh shadow registers
  6515                           
  6516                           	psect	intcode_body
  6517  001EA0                     __pintcode_body:
  6518                           	opt callstack 26
  6519  001EA0                     int_func:
  6520                           	opt callstack 26
  6521  001EA0  0006               	pop		; remove dummy address from shadow register refresh
  6522                           
  6523                           ;main.c: 450: if (TMR0IF)
  6524  001EA2  A4F2               	btfss	4082,2,c	;volatile
  6525  001EA4  D005               	goto	i2l248
  6526                           
  6527                           ;main.c: 451: {;main.c: 452: isr_flag.f1ms = 1;
  6528  001EA6  8052               	bsf	_isr_flag,0,c	;volatile
  6529                           
  6530                           ;main.c: 454: TMR0IF = 0;
  6531  001EA8  94F2               	bcf	4082,2,c	;volatile
  6532                           
  6533                           ;main.c: 455: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ) >
      +                          > 8);
  6534  001EAA  68D7               	setf	4055,c	;volatile
  6535                           
  6536                           ;main.c: 456: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ));
  6537  001EAC  0ED1               	movlw	209
  6538  001EAE  6ED6               	movwf	4054,c	;volatile
  6539  001EB0                     i2l248:
  6540  001EB0  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6541  001EB2  0011               	retfie		f
  6542  001EB4                     __end_of_INTERRUPCION:
  6543                           	opt callstack 0
  6544                           
  6545                           	psect	rparam
  6546  0000                     
  6547                           	psect	temp
  6548  00005F                     btemp:
  6549                           	opt callstack 0
  6550  00005F                     	ds	1
  6551  0000                     int$flags	set	btemp
  6552  0000                     wtemp8	set	btemp+1
  6553  0000                     ttemp5	set	btemp+1
  6554  0000                     ttemp6	set	btemp+4
  6555  0000                     ttemp7	set	btemp+8
  6556                           tosu	equ	0xFFF
  6557                           tosh	equ	0xFFE
  6558                           tosl	equ	0xFFD
  6559                           stkptr	equ	0xFFC
  6560                           pclatu	equ	0xFFB
  6561                           pclath	equ	0xFFA
  6562                           pcl	equ	0xFF9
  6563                           tblptru	equ	0xFF8
  6564                           tblptrh	equ	0xFF7
  6565                           tblptrl	equ	0xFF6
  6566                           tablat	equ	0xFF5
  6567                           prodh	equ	0xFF4
  6568                           prodl	equ	0xFF3
  6569                           indf0	equ	0xFEF
  6570                           postinc0	equ	0xFEE
  6571                           postdec0	equ	0xFED
  6572                           preinc0	equ	0xFEC
  6573                           plusw0	equ	0xFEB
  6574                           fsr0h	equ	0xFEA
  6575                           fsr0l	equ	0xFE9
  6576                           wreg	equ	0xFE8
  6577                           indf1	equ	0xFE7
  6578                           postinc1	equ	0xFE6
  6579                           postdec1	equ	0xFE5
  6580                           preinc1	equ	0xFE4
  6581                           plusw1	equ	0xFE3
  6582                           fsr1h	equ	0xFE2
  6583                           fsr1l	equ	0xFE1
  6584                           bsr	equ	0xFE0
  6585                           indf2	equ	0xFDF
  6586                           postinc2	equ	0xFDE
  6587                           postdec2	equ	0xFDD
  6588                           preinc2	equ	0xFDC
  6589                           plusw2	equ	0xFDB
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        30
    BSS         222
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      94
    BANK0           160      0     100
    BANK1           256      0     123
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    S318_multiplexedDisp$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    multiplexedDisp.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    S205_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S205_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 


Critical Paths under _main in COMRAM

    _main->_disp_show_quantity
    _nozzle_moveto->_mpap_setupToTurn
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _ikb_flush->_ikey_clear_all_flag
    _display7s_job->_multiplexedDisp_job
    _display7s_init->_multiplexedDisp_init
    _disp_show_quantity->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___awtoft->___ftpack

Critical Paths under _INTERRUPCION in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24270
                                             61 COMRAM     2     2      0
                 _disp_show_quantity
                     _display7s_init
                      _display7s_job
                          _ikb_flush
                           _ikb_init
                            _ikb_job
              _ikb_key_is_ready2read
                           _mpap_job
                _mpap_setupToHomming
                          _mpap_stop
                      _nozzle_moveto
 ---------------------------------------------------------------------------------
 (1) _nozzle_moveto                                        1     1      0     979
                                             10 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     737
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _mpap_stop                                            0     0      0       0
                          __mpap_off
 ---------------------------------------------------------------------------------
 (2) __mpap_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mpap_setupToHomming                                  0     0      0     220
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToTurn                                     4     2      2     220
                                              6 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (2) _mpap_normal_mode                                     1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (2) _mpap_homming                                         2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (3) _mpap_do1step                                         1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (4) __mpap_step4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_key_is_ready2read                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    6790
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                              0 COMRAM     2     2      0
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
                   _keyRead_pin_key5 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key5                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    6327
                                             20 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3233
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_flush                                            0     0      0      68
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (2) _ikey_clear_all_flag                                  1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display7s_job                                        0     0      0     134
                _multiplexedDisp_job
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_job                                  8     8      0     134
                                              0 COMRAM     8     8      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (1) _display7s_init                                       0     0      0      68
               _multiplexedDisp_init
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_init                                 1     1      0      68
                                              0 COMRAM     1     1      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disp_show_quantity                                  23    20      3   15640
                                             38 COMRAM    23    20      3
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     1      5    1926
                                             15 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     3      5    1307
                                              7 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     543
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4433
                                             20 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4088
                                              8 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3602
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1200
                                             11 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3011
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPCION                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disp_show_quantity
     ___awtoft
       ___ftpack
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _display7s_init
     _multiplexedDisp_init
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _display7s_job
     _multiplexedDisp_job
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
       _keyRead_pin_key5 *
   _ikb_key_is_ready2read
   _mpap_job
     _mpap_homming
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
   _mpap_setupToHomming
     _mpap_setupToTurn
       ___wmul (ARG)
   _mpap_stop
     __mpap_off
   _nozzle_moveto
     ___wmul
     _mpap_setupToTurn
       ___wmul (ARG)

 _INTERRUPCION (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7B       7       48.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13D      20        0.0%
DATA                 0      0     13D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul  6 04:09:56 2019

                              _t 005D            ??_mpap_setupToHomming 000B  
                             _xx 004D              ___wmul@multiplicand 0003  
                    __CFG_BORV$3 000000                     ___ftadd@exp1 0014  
                   ___ftadd@exp2 0013                     ___ftadd@sign 0012  
                            l126 1D7E                              l128 1D82  
                            l154 1BEE                              l148 1AB8  
                            l361 0994                              l354 08F0  
                            l194 14A0                              l371 0C2C  
                            l363 09F6                              l348 093A  
                            l196 1506                              l381 0D8C  
                            l365 0A3A                              l383 0DC2  
                            l367 0A9C                              l377 0D58  
                            l369 0AE0                              l386 0E14  
                            l868 121A                              _GIE 007F97  
                 ?_display7s_job 0001                     __CFG_BOR$OFF 000000  
                            _key 0060                              tosl 000FFD  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             l1017 1B04  
                           l1027 1C6C                             l1209 1962  
                           l3005 109E                             l3101 14E6  
                           l3015 10AC                             l3007 10A4  
                           l2305 1AFA                             l2321 1C62  
                           l2313 1C42                             l3105 14F6  
                           l3113 1518                             l2315 1C4A  
                           l2261 17C4                             l2405 115C  
                           l2333 1C2A                             l2271 1820  
                           l2263 17E2                             l2431 11C2  
                           l2441 11F6                             l2267 17F8  
                           l2259 17BA                             l2427 11AE  
                           l2269 1816                             l2429 11B8  
                           l2293 1AD2                             l2621 0890  
                           l3093 14C6                             l2447 1236  
                           l2439 11EC                             l2295 1ADA  
                           l2703 1E56                             l2367 1BA6  
                           l2607 0812                             l3079 1498  
                           l2465 19A0                             l2457 1266  
                           l2625 08B0                             l2537 1A9A  
                           l3097 14D6                             l2475 19EE  
                           l2715 1C7A                             l2619 0880  
                           l2563 1290                             l2821 1D0A  
                           l2469 19C2                             l2485 18F2  
                           l2733 18B8                             l2629 08D0  
                           l2581 1360                             l2399 1134  
                           l2831 1640                             l2495 1924  
                           l2663 0B92                             l2809 1CCC  
                           l2729 1850                             l2569 12CE  
                           l2763 1548                             l2747 1D46  
                           l2587 13A0                             l2579 1340  
                           l2861 16B8                             l2853 16A4  
                           l2693 0E34                             l2677 0CDE  
                           l2669 0C1C                             l2783 15A2  
                           l2951 0F74                             l2919 171E  
                           l2599 1424                             l2793 15CA  
                           l2769 1570                             l2849 1694  
                           l2929 0E9E                             l2787 15B2  
                           l2867 16D4                             l2859 16AC  
                           l2955 0F80                             l2947 0F60  
                           l2797 15DA                             l2885 1DC8  
                           l2991 1066                             l2983 104C  
                           l2969 0FB8                             l2889 1DD6  
                           l2979 1038                             u3000 1048  
                           _LATA 000F89                             u3030 1E88  
                           _LATB 000F8A                             _LATC 000F8B  
                           u2208 1384                             _LATD 000F8C  
                           u2209 1398                             _LATE 000F8D  
                           u2138 12B2                             u2139 12C6  
                           u1700 1C4E                             u2180 1330  
                           u1630 182A                             u2248 13EA  
                           u2249 13FE                             u2178 1316  
                           u2179 132A                             u1820 1126  
                           u1590 17AC                             u1670 1ADE  
                           u1920 11CA                             u1728 1C04  
                           u1729 1C18                             u1850 114E  
                           u2731 1530                             u2811 1624  
                           u2820 162E                             u2708 18C8  
                           u1781 10F4                             u2709 18DC  
                           u1950 11FE                             u2830 165E  
                           u2751 1558                             u1791 1108  
                           u1880 118C                             u2648 1C8A  
                           u2664 1866                             u2649 1C9E  
                           u2665 1860                             u2674 1880  
                           u2835 1656                             u2675 187A  
                           u2870 16BE                             u2950 0F5C  
                           u2960 0F70                             u2698 18A4  
                           u2990 1034                             _UCFG 000F6F  
                           _UCON 000F6D                     __CFG_PWRT$ON 000000  
          _ikb_key_is_ready2read 1E70                  ?_display7s_init 0001  
    __size_of_disp_show_quantity 02A6                             _main 142C  
                   ___ftpack@arg 0001                             _itoa 1D2E  
                           _mpap 0040                     ___ftpack@exp 0004  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 005F  
                           _utoa 18EA                    _nozzle_moveto 1D90  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                    __CFG_IESO$OFF 000000  
            _multiplexedDisp0_on 1F66              _multiplexedDisp1_on 1F5E  
            _multiplexedDisp2_on 1F56              _multiplexedDisp3_on 1F4E  
            _multiplexedDisp4_on 1F6E                    __CFG_MCLRE$ON 000000  
                   ___ftmul@cntr 0016             __end_of_DISP7S_CHARS 080D  
                   ___param_bank 000000                     ___ftmul@sign 0017  
            _multiplexedDisp_job 184A                     ___fttol@exp1 0026  
                   ___fttol@lval 0022                    __CFG_PLLDIV$5 000000  
                          ?_main 0001                            ?_itoa 0010  
                __end_of___ftadd 128C                            _CMCON 000FB4  
                          ?_utoa 0008                  __end_of___ftmul 1614  
                          _T0CON 000FD5                  __end_of___ftsub 1CF6  
                __end_of___fttol 16E6                  __end_of___lwdiv 1B0E  
                __end_of___lwmod 1C76                            i2l248 1EB0  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _PORTC 000F82                            _PORTD 000F83  
                          _PORTE 000F84                    __CFG_USBDIV$2 000000  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96             ?_multiplexedDisp0_on 0001  
           ?_multiplexedDisp1_on 0001             ?_multiplexedDisp2_on 0001  
           ?_multiplexedDisp3_on 0001             ?_multiplexedDisp4_on 0001  
                 __CFG_FCMEN$OFF 000000                  __end_of_ikb_job 1F1A  
           ?_multiplexedDisp_job 0001                    ___awtoft@sign 000C  
                  ?_INTERRUPCION 0001                    ___ftpack@sign 0005  
                          main@c 003E                            pclath 000FFA  
                          tablat 000FF5                            ttemp5 0060  
                          ttemp6 0063                            ttemp7 0067  
                          utoa@c 000F                            utoa@v 000D  
                          status 000FD8                   ?_nozzle_moveto 0001  
                          wtemp8 0060      __size_of_ikey_is_accessible 004C  
           _multiplexedDisp0_off 1F6A             _multiplexedDisp1_off 1F62  
           _multiplexedDisp2_off 1F5A             _multiplexedDisp3_off 1F52  
           _multiplexedDisp4_off 1F4A                    ?_ikey_parsing 0001  
           __size_of__mpap_step1 000A             __size_of__mpap_step2 000A  
           __size_of__mpap_step3 000A             __size_of__mpap_step4 000A  
                __initialization 19F2                     __end_of_main 1520  
                   __end_of_itoa 1D60             _multiplexedDisp_init 1C76  
                   __end_of_utoa 197E                  ??_display7s_job 0009  
                         ??_main 003E                    ___fttol@sign1 0021  
                         ??_itoa 0015                           ??_utoa 000D  
                  mpap_do1step@i 0050                    __activetblptr 000002  
          ??_multiplexedDisp0_on 0001            ??_multiplexedDisp1_on 0001  
          ??_multiplexedDisp2_on 0001            ??_multiplexedDisp3_on 0001  
          ??_multiplexedDisp4_on 0001            ??_multiplexedDisp_job 0001  
                 ??_INTERRUPCION 0001                           _ADCON1 000FC1  
       __end_of_keyRead_pin_key1 1F36         __end_of_keyRead_pin_key2 1F2E  
       __end_of_keyRead_pin_key3 1F24         __end_of_keyRead_pin_key4 1F44  
       __end_of_keyRead_pin_key5 1F3E           ?_ikb_key_is_ready2read 0001  
               __end_of___awtoft 1D2E                 __end_of___ftpack 184A  
               __end_of___lwtoft 1E52                           _TMR0IE 007F95  
                         _TMR0IF 007F92            ?_multiplexedDisp0_off 0001  
          ?_multiplexedDisp1_off 0001            ?_multiplexedDisp2_off 0001  
          ?_multiplexedDisp3_off 0001            ?_multiplexedDisp4_off 0001  
                 ??_ikey_parsing 0015                   __CFG_VREGEN$ON 000000  
       __end_of_mpap_normal_mode 1BF2                 __end_of_ikb_init 179C  
          ?_multiplexedDisp_init 0001                           ___ftge 197E  
                         ___wmul 1DE2                        ??___ftadd 000F  
                      ??___ftmul 000F                        ??___ftsub 001B  
                      ??___fttol 001C                        ??___lwdiv 0005  
                      ??___lwmod 0005                           clear_0 1A38  
                         clear_1 1A44                           clear_2 1A50  
               __end_of_mpap_job 1DE2                        ??_ikb_job 001A  
          ___ftmul@f3_as_product 0013         __end_of_mpap_setupToTurn 1D90  
                   __pdataCOMRAM 0053                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8              ikey_is_accessible@k 0003  
                ??_nozzle_moveto 000B     __size_of_ikey_clear_all_flag 001E  
                     __accesstop 0060          __end_of__initialization 1A56  
                __CFG_PBADEN$OFF 000000                    ?_mpap_do1step 0001  
                     ___ftadd@f1 0009                       ___ftadd@f2 000C  
                     ___ftge@ff1 000C                       ___ftge@ff2 000F  
                  ___rparam_used 000001                       ___awtoft@c 0009  
                     ___ftmul@f1 0009                       ___ftmul@f2 000C  
                     ___ftsub@f1 0015                       ___ftsub@f2 0018  
                     ___fttol@f1 0018                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1E8C                    ?_mpap_homming 0001  
             __size_of__mpap_off 000A                       ___lwtoft@c 0009  
               ??_display7s_init 0002                     _DISP7S_CHARS 080B  
             __size_of_ikb_flush 0006                   mpap_do1step@KI 0001  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                 ??_mpap_do1step 0001           ??_multiplexedDisp0_off 0001  
         ??_multiplexedDisp1_off 0001           ??_multiplexedDisp2_off 0001  
         ??_multiplexedDisp3_off 0001           ??_multiplexedDisp4_off 0001  
             __size_of_ikey_scan 01A0                       __pnvCOMRAM 005D  
    __end_of_mpap_setupToHomming 1EC6           ??_multiplexedDisp_init 0001  
                 ??_mpap_homming 0002                          ?___ftge 000C  
           __end_of_INTERRUPCION 1EB4               __size_of_mpap_stop 000E  
                        ?___wmul 0001                        ?___awtoft 0009  
                      ?___ftpack 0001                        ?___lwtoft 0009  
           __end_of_ikey_parsing 0E3E       __end_of_disp_show_quantity 10E4  
                      ?_ikb_init 0001                __end_of__mpap_off 1EE8  
                 display7s_job@q 004F                        ?_mpap_job 0001  
                        __Hparam 0000                          __Lparam 0000  
              __end_of_ikb_flush 1F4A                  __size_of___ftge 0074  
                        ___ftadd 10E4                  __size_of___wmul 0026  
                        ___ftmul 1520                          ___ftsub 1CB6  
                        ___fttol 1614                          ___lwdiv 1ABC  
                        ___lwmod 1C34                     __psmallconst 0800  
                        __pcinit 19F2                       ??___awtoft 000C  
                     ??___ftpack 0006                          __ramtop 0800  
                        __ptext0 142C                          __ptext1 1D90  
                        __ptext2 1DE2                          __ptext3 1EC6  
                        __ptext4 1EDE                          __ptext5 1EB4  
                        __ptext6 1D60                          __ptext7 1DBA  
                        __ptext8 1BAA                          __ptext9 1A64  
              __end_of_ikey_scan 142C                          _ikb_job 1F10  
                     ??___lwtoft 000C                          _group_x 0048  
        ??_ikb_key_is_ready2read 0001       disp_show_quantity@last_pos 003A  
              __end_of_mpap_stop 1ED4          mpap_normal_mode@cod_ret 0002  
                     ??_ikb_init 0001                   __pintcode_body 1EA0  
           end_of_initialization 1A56       __end_of_ikey_is_accessible 1BAA  
              ?_keyRead_pin_key1 0001                ?_keyRead_pin_key2 0001  
              ?_keyRead_pin_key3 0001                ?_keyRead_pin_key4 0001  
              ?_keyRead_pin_key5 0001                    ??__mpap_step1 0001  
                  ??__mpap_step2 0001                    ??__mpap_step3 0001  
                  ??__mpap_step4 0001                          itoa@buf 0010  
                        itoa@val 0011                    __Lmediumconst 0000  
                        int_func 1EA0               ??_keyRead_pin_key1 0001  
             ??_keyRead_pin_key2 0001               ??_keyRead_pin_key3 0001  
             ??_keyRead_pin_key4 0001               ??_keyRead_pin_key5 0001  
                     ??_mpap_job 0004                ?_mpap_normal_mode 0001  
                        postdec1 000FE5                          postdec2 000FDD  
             ??_mpap_normal_mode 0002                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
         ikb_key_is_ready2read@k 0001                          utoa@buf 0008  
    __end_of_multiplexedDisp0_on 1F6A      __end_of_multiplexedDisp1_on 1F62  
    __end_of_multiplexedDisp2_on 1F5A      __end_of_multiplexedDisp3_on 1F52  
                        utoa@val 0009      __end_of_multiplexedDisp4_on 1F72  
            _ikey_clear_all_flag 1E52      __end_of_multiplexedDisp_job 18EA  
           __end_of_mpap_do1step 1C34            __end_of_display7s_job 1E2E  
           ikey_clear_all_flag@i 0001                ?_mpap_setupToTurn 0007  
             ??_mpap_setupToTurn 0009             __end_of_mpap_homming 1ABC  
            nozzle_moveto@nozzle 000B             ?_ikey_clear_all_flag 0001  
                     main@c_disp 003F            __size_of_INTERRUPCION 1EAC  
                    ___ftmul@exp 0012              __end_of__mpap_step1 1F06  
            __end_of__mpap_step2 1EFC              __end_of__mpap_step3 1EF2  
            __end_of__mpap_step4 1F10              __end_of_DISP7S_NUMS 080B  
                 __end_of___ftge 19F2  mpap_setupToTurn@numSteps_tomove 0007  
          __size_of_ikey_parsing 0630                   __end_of___wmul 1E08  
                  __pidataCOMRAM 1ED4              start_initialization 19F2  
                   _INTERRUPCION 0008            ??_ikey_clear_all_flag 0001  
                     ikey_scan@k 0002            __end_of_nozzle_moveto 1DBA  
                   _ikey_parsing 080E           disp_show_quantity@buff 002B  
                       ??___ftge 0012           disp_show_quantity@real 0035  
                       ??___wmul 0005                      __pdataBANK0 00B0  
              __size_of___awtoft 0038                __size_of___ftpack 00AE  
                    __pbssCOMRAM 0040                __size_of___lwtoft 0024  
                  ikey_parsing@k 0019                __size_of_ikb_init 00B6  
                    __mpap_step1 1EFC                      __mpap_step2 1EF2  
                    __mpap_step3 1EE8                      __mpap_step4 1F06  
                    _DISP7S_NUMS 0801    __size_of_multiplexedDisp0_off 0004  
  __size_of_multiplexedDisp1_off 0004    __size_of_multiplexedDisp2_off 0004  
  __size_of_multiplexedDisp3_off 0004    __size_of_multiplexedDisp4_off 0004  
                      __mpap_off 1EDE                 ___lwdiv@dividend 0001  
             _disp_show_quantity 0E3E                __size_of_mpap_job 0028  
                      __pintcode 0008    __size_of_multiplexedDisp_init 0040  
          __size_of_mpap_do1step 0042                         ?___ftadd 0009  
                       ?___ftmul 0009                         ?___ftsub 0015  
                       ?___fttol 0018                         ?___lwdiv 0001  
                       ?___lwmod 0001     __size_of_mpap_setupToHomming 0012  
            ?_disp_show_quantity 0027                        _ikb_flush 1F44  
                       ?_ikb_job 0001                      __smallconst 0800  
          __size_of_mpap_homming 0058                  _multiplexedDisp 00B0  
                      _main_flag 0051            multiplexedDisp_init@i 0001  
                      _ikey_scan 128C   __size_of_ikb_key_is_ready2read 001C  
               ___lwdiv@quotient 0005    __end_of_ikb_key_is_ready2read 1E8C  
           ??_disp_show_quantity 002A                        _mpap_step 0053  
                      _mpap_stop 1EC6                   ___wmul@product 0005  
                   _mpap_do1step 1BF2          __size_of_display7s_init 0050  
                     ?__mpap_off 0001               _ikey_is_accessible 1B5E  
                   _mpap_homming 1A64        __size_of_keyRead_pin_key1 0008  
      __size_of_keyRead_pin_key2 000A        __size_of_keyRead_pin_key3 000A  
      __size_of_keyRead_pin_key4 0006        __size_of_keyRead_pin_key5 0008  
                     ?_ikb_flush 0001                ___wmul@multiplier 0001  
            ?_ikey_is_accessible 0001                        ikb_init@i 0001  
      __size_of_mpap_normal_mode 0048                       ?_ikey_scan 0001  
                      copy_data0 1A06                        copy_data1 1A26  
            mpap_homming@cod_ret 0003                       ?_mpap_stop 0001  
           ??_ikey_is_accessible 0001        __size_of_mpap_setupToTurn 0030  
                       __Hrparam 0000                         __Lrparam 0000  
          disp_show_quantity@num 0038                 __size_of___ftadd 01A8  
               __size_of___ftmul 00F4                 __size_of___ftsub 0040  
               __size_of___fttol 00D2                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042                         ___awtoft 1CF6  
                       ___ftpack 179C                         ___lwtoft 1E2E  
               __size_of_ikb_job 000A     __size_of_multiplexedDisp0_on 0004  
   __size_of_multiplexedDisp1_on 0004     __size_of_multiplexedDisp2_on 0004  
   __size_of_multiplexedDisp3_on 0004     __size_of_multiplexedDisp4_on 0004  
                ___lwdiv@divisor 0003     __size_of_multiplexedDisp_job 00A0  
                ___lwdiv@counter 0007                         __ptext10 1BF2  
                       __ptext11 1EE8                         __ptext20 1F24  
                       __ptext12 1EF2                         __ptext21 1F2E  
                       __ptext13 1EFC                         __ptext30 184A  
                       __ptext22 1F36                         __ptext14 1F06  
                       __ptext31 1B0E                         __ptext23 080E  
                       __ptext15 1E70                         __ptext40 1F66  
                       __ptext32 1C76                         __ptext24 1B5E  
                       __ptext16 1F10                         __ptext41 1F6A  
                       __ptext33 1F4A                         __ptext25 1E2E  
                       __ptext17 128C                         __ptext50 10E4  
                       __ptext42 1F6E                         __ptext34 1F4E  
                       __ptext26 16E6                         __ptext18 1F3E  
                       __ptext51 1520                         __ptext43 0E3E  
                       __ptext35 1F52                         __ptext27 1F44  
                       __ptext19 1F1A                         __ptext52 197E  
                       __ptext44 1D2E                         __ptext36 1F56  
                       __ptext28 1E52                         __ptext53 1CF6  
                       __ptext45 18EA                         __ptext37 1F5A  
                       __ptext29 1E08                         __ptext54 179C  
                       __ptext46 1C34                         __ptext38 1F5E  
                       __ptext47 1ABC                         __ptext39 1F62  
                       __ptext48 1614                         __ptext49 1CB6  
                       _ikb_init 16E6             _mpap_setupToTurn$149 0009  
           multiplexedDisp_job@i 0008             multiplexedDisp_job@q 0007  
                  __size_of_main 00F4                    __size_of_itoa 0032  
                  __size_of_utoa 0094                         _isr_flag 0052  
                       _mpap_job 1DBA                         _mpap_off 005B  
                    ??__mpap_off 0001           __size_of_display7s_job 0026  
                       int$flags 005F                         _pulsonic 0100  
                    ??_ikb_flush 0002            __CFG_CPUDIV$OSC1_PLL2 000000  
    __end_of_ikey_clear_all_flag 1E70                      ??_ikey_scan 0001  
                       itoa@base 0013                         intlevel2 0000  
            _mpap_setupToHomming 1EB4                 ___lwmod@dividend 0001  
                    ??_mpap_stop 0001                     ?__mpap_step1 0001  
                   ?__mpap_step2 0001                     ?__mpap_step3 0001  
                   ?__mpap_step4 0001                   _display7s_init 1B0E  
               _keyRead_pin_key1 1F2E                 _keyRead_pin_key2 1F24  
               _keyRead_pin_key3 1F1A                 _keyRead_pin_key4 1F3E  
               _keyRead_pin_key5 1F36             ?_mpap_setupToHomming 0001  
            disp_show_quantity@I 003B              disp_show_quantity@f 0027  
            disp_show_quantity@i 003D              disp_show_quantity@q 0039  
                       utoa@base 000B     __end_of_multiplexedDisp0_off 1F6E  
   __end_of_multiplexedDisp1_off 1F66     __end_of_multiplexedDisp2_off 1F5E  
   __end_of_multiplexedDisp3_off 1F56     __end_of_multiplexedDisp4_off 1F4E  
         __size_of_nozzle_moveto 002A                  ___lwmod@divisor 0003  
               _mpap_normal_mode 1BAA                    _display7s_job 1E08  
                ___lwmod@counter 0005     __end_of_multiplexedDisp_init 1CB6  
             __CFG_FOSC$HSPLL_HS 000000           __end_of_display7s_init 1B5E  
               _mpap_setupToTurn 1D60  
