

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul  6 04:49:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,keep,inline
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,keep,inline
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,keep,inline
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,keep,inline
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,keep,inline
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,keep,inline
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,keep,inline
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,keep,inline
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,keep,inline
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,keep,inline
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,keep,inline
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,keep,inline
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,keep,inline
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,keep,inline
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           ; Version 2.05
    78                           ; Generated 20/12/2018 GMT
    79                           ; 
    80                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4550 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  001EC8                     __pidataCOMRAM:
   114                           	opt callstack 0
   115                           
   116                           ;initializer for _mpap_step
   117  001EC8  F0                 	db	low __mpap_step1
   118  001EC9  1E                 	db	high __mpap_step1
   119  001ECA  E6                 	db	low __mpap_step2
   120  001ECB  1E                 	db	high __mpap_step2
   121  001ECC  DC                 	db	low __mpap_step3
   122  001ECD  1E                 	db	high __mpap_step3
   123  001ECE  FA                 	db	low __mpap_step4
   124  001ECF  1E                 	db	high __mpap_step4
   125                           
   126                           ;initializer for _mpap_off
   127  001ED0  D2                 	db	low __mpap_off
   128  001ED1  1E                 	db	high __mpap_off
   129                           
   130                           	psect	idataBANK0
   131  001E80                     __pidataBANK0:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for _multiplexedDisp
   135  001E80  5E                 	db	low _multiplexedDisp0_off
   136  001E81  1F                 	db	high _multiplexedDisp0_off
   137  001E82  5A                 	db	low _multiplexedDisp0_on
   138  001E83  1F                 	db	high _multiplexedDisp0_on
   139  001E84  56                 	db	low _multiplexedDisp1_off
   140  001E85  1F                 	db	high _multiplexedDisp1_off
   141  001E86  52                 	db	low _multiplexedDisp1_on
   142  001E87  1F                 	db	high _multiplexedDisp1_on
   143  001E88  4E                 	db	low _multiplexedDisp2_off
   144  001E89  1F                 	db	high _multiplexedDisp2_off
   145  001E8A  4A                 	db	low _multiplexedDisp2_on
   146  001E8B  1F                 	db	high _multiplexedDisp2_on
   147  001E8C  46                 	db	low _multiplexedDisp3_off
   148  001E8D  1F                 	db	high _multiplexedDisp3_off
   149  001E8E  42                 	db	low _multiplexedDisp3_on
   150  001E8F  1F                 	db	high _multiplexedDisp3_on
   151  001E90  3E                 	db	low _multiplexedDisp4_off
   152  001E91  1F                 	db	high _multiplexedDisp4_off
   153  001E92  62                 	db	low _multiplexedDisp4_on
   154  001E93  1F                 	db	high _multiplexedDisp4_on
   155                           
   156                           	psect	smallconst
   157  000800                     __psmallconst:
   158                           	opt callstack 0
   159  000800  00                 	db	0
   160  000801                     _DISP7S_NUMS:
   161                           	opt callstack 0
   162  000801  3F                 	db	63
   163  000802  06                 	db	6
   164  000803  5B                 	db	91
   165  000804  4F                 	db	79
   166  000805  66                 	db	102
   167  000806  6D                 	db	109
   168  000807  7C                 	db	124
   169  000808  07                 	db	7
   170  000809  7F                 	db	127
   171  00080A  67                 	db	103
   172  00080B                     __end_of_DISP7S_NUMS:
   173                           	opt callstack 0
   174  00080B                     _DISP7S_CHARS:
   175                           	opt callstack 0
   176  00080B  00                 	db	0
   177  00080C  40                 	db	64
   178  00080D                     __end_of_DISP7S_CHARS:
   179                           	opt callstack 0
   180  00080D  00                 	db	0	; dummy byte at the end
   181  0000                     
   182                           	psect	nvCOMRAM
   183  00005B                     __pnvCOMRAM:
   184                           	opt callstack 0
   185  00005B                     _t:
   186                           	opt callstack 0
   187  00005B                     	ds	2
   188  0000                     _TRISB	set	3987
   189  0000                     _TRISA	set	3986
   190  0000                     _PORTD	set	3971
   191  0000                     _PORTC	set	3970
   192  0000                     _TRISC	set	3988
   193  0000                     _TRISD	set	3989
   194  0000                     _TRISE	set	3990
   195  0000                     _TMR0L	set	4054
   196  0000                     _TMR0H	set	4055
   197  0000                     _T0CON	set	4053
   198  0000                     _UCFG	set	3951
   199  0000                     _UCON	set	3949
   200  0000                     _CMCON	set	4020
   201  0000                     _ADCON1	set	4033
   202  0000                     _LATB	set	3978
   203  0000                     _LATE	set	3981
   204  0000                     _LATC	set	3979
   205  0000                     _LATA	set	3977
   206  0000                     _PORTE	set	3972
   207  0000                     _LATD	set	3980
   208  0000                     _TMR0IF	set	32658
   209  0000                     _GIE	set	32663
   210  0000                     _TMR0IE	set	32661
   211                           
   212                           ; #config settings
   213  0000                     
   214                           	psect	cinit
   215  0019E6                     __pcinit:
   216                           	opt callstack 0
   217  0019E6                     start_initialization:
   218                           	opt callstack 0
   219  0019E6                     __initialization:
   220                           	opt callstack 0
   221                           
   222                           ; Initialize objects allocated to BANK0 (20 bytes)
   223                           ; load TBLPTR registers with __pidataBANK0
   224  0019E6  0E80               	movlw	low __pidataBANK0
   225  0019E8  6EF6               	movwf	tblptrl,c
   226  0019EA  0E1E               	movlw	high __pidataBANK0
   227  0019EC  6EF7               	movwf	tblptrh,c
   228  0019EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   229  0019F0  6EF8               	movwf	tblptru,c
   230  0019F2  EE00  F0B0         	lfsr	0,__pdataBANK0
   231  0019F6  EE10 F014          	lfsr	1,20
   232  0019FA                     copy_data0:
   233  0019FA  0009               	tblrd		*+
   234  0019FC  CFF5 FFEE          	movff	tablat,postinc0
   235  001A00  50E5               	movf	postdec1,w,c
   236  001A02  50E1               	movf	fsr1l,w,c
   237  001A04  E1FA               	bnz	copy_data0
   238                           
   239                           ; Initialize objects allocated to COMRAM (10 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241  001A06  0EC8               	movlw	low __pidataCOMRAM
   242  001A08  6EF6               	movwf	tblptrl,c
   243  001A0A  0E1E               	movlw	high __pidataCOMRAM
   244  001A0C  6EF7               	movwf	tblptrh,c
   245  001A0E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246  001A10  6EF8               	movwf	tblptru,c
   247  001A12  EE00  F051         	lfsr	0,__pdataCOMRAM
   248  001A16  EE10 F00A          	lfsr	1,10
   249  001A1A                     copy_data1:
   250  001A1A  0009               	tblrd		*+
   251  001A1C  CFF5 FFEE          	movff	tablat,postinc0
   252  001A20  50E5               	movf	postdec1,w,c
   253  001A22  50E1               	movf	fsr1l,w,c
   254  001A24  E1FA               	bnz	copy_data1
   255                           
   256                           ; Clear objects allocated to BANK1 (123 bytes)
   257  001A26  EE01  F000         	lfsr	0,__pbssBANK1
   258  001A2A  0E7B               	movlw	123
   259  001A2C                     clear_0:
   260  001A2C  6AEE               	clrf	postinc0,c
   261  001A2E  06E8               	decf	wreg,f,c
   262  001A30  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to BANK0 (80 bytes)
   265  001A32  EE00  F060         	lfsr	0,__pbssBANK0
   266  001A36  0E50               	movlw	80
   267  001A38                     clear_1:
   268  001A38  6AEE               	clrf	postinc0,c
   269  001A3A  06E8               	decf	wreg,f,c
   270  001A3C  E1FD               	bnz	clear_1
   271                           
   272                           ; Clear objects allocated to COMRAM (17 bytes)
   273  001A3E  EE00  F040         	lfsr	0,__pbssCOMRAM
   274  001A42  0E11               	movlw	17
   275  001A44                     clear_2:
   276  001A44  6AEE               	clrf	postinc0,c
   277  001A46  06E8               	decf	wreg,f,c
   278  001A48  E1FD               	bnz	clear_2
   279  001A4A                     end_of_initialization:
   280                           	opt callstack 0
   281  001A4A                     __end_of__initialization:
   282                           	opt callstack 0
   283  001A4A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   284  001A4C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   285  001A4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   286  001A50  6EF8               	movwf	tblptru,c
   287  001A52  0100               	movlb	0
   288  001A54  EF10  F00A         	goto	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMRAM
   291  000040                     __pbssCOMRAM:
   292                           	opt callstack 0
   293  000040                     _mpap:
   294                           	opt callstack 0
   295  000040                     	ds	8
   296  000048                     _group_x:
   297                           	opt callstack 0
   298  000048                     	ds	5
   299  00004D                     display7s_job@q:
   300                           	opt callstack 0
   301  00004D                     	ds	1
   302  00004E                     mpap_do1step@i:
   303                           	opt callstack 0
   304  00004E                     	ds	1
   305  00004F                     _main_flag:
   306                           	opt callstack 0
   307  00004F                     	ds	1
   308  000050                     _isr_flag:
   309                           	opt callstack 0
   310  000050                     	ds	1
   311                           
   312                           	psect	dataCOMRAM
   313  000051                     __pdataCOMRAM:
   314                           	opt callstack 0
   315  000051                     _mpap_step:
   316                           	opt callstack 0
   317  000051                     	ds	8
   318  000059                     _mpap_off:
   319                           	opt callstack 0
   320  000059                     	ds	2
   321                           
   322                           	psect	bssBANK0
   323  000060                     __pbssBANK0:
   324                           	opt callstack 0
   325  000060                     _key:
   326                           	opt callstack 0
   327  000060                     	ds	80
   328                           
   329                           	psect	dataBANK0
   330  0000B0                     __pdataBANK0:
   331                           	opt callstack 0
   332  0000B0                     _multiplexedDisp:
   333                           	opt callstack 0
   334  0000B0                     	ds	20
   335                           
   336                           	psect	bssBANK1
   337  000100                     __pbssBANK1:
   338                           	opt callstack 0
   339  000100                     _pulsonic:
   340                           	opt callstack 0
   341  000100                     	ds	123
   342                           
   343                           	psect	cstackCOMRAM
   344  000001                     __pcstackCOMRAM:
   345                           	opt callstack 0
   346  000001                     ??_ikey_is_accessible:
   347  000001                     ??_multiplexedDisp_job:
   348  000001                     ?___wmul:
   349                           	opt callstack 0
   350  000001                     ?___lwdiv:
   351                           	opt callstack 0
   352  000001                     ?___lwmod:
   353                           	opt callstack 0
   354  000001                     ?___ftpack:
   355                           	opt callstack 0
   356  000001                     mpap_do1step@KI:
   357                           	opt callstack 0
   358  000001                     ikb_init@i:
   359                           	opt callstack 0
   360  000001                     ikb_key_is_ready2read@k:
   361                           	opt callstack 0
   362  000001                     ikey_clear_all_flag@i:
   363                           	opt callstack 0
   364  000001                     multiplexedDisp_init@i:
   365                           	opt callstack 0
   366  000001                     ___wmul@multiplier:
   367                           	opt callstack 0
   368  000001                     ___lwdiv@dividend:
   369                           	opt callstack 0
   370  000001                     ___lwmod@dividend:
   371                           	opt callstack 0
   372  000001                     ___ftpack@arg:
   373                           	opt callstack 0
   374                           
   375                           ; 3 bytes @ 0x0
   376  000001                     	ds	1
   377  000002                     ??_mpap_homming:
   378  000002                     mpap_normal_mode@cod_ret:
   379                           	opt callstack 0
   380  000002                     ikey_scan@k:
   381                           	opt callstack 0
   382                           
   383                           ; 1 bytes @ 0x1
   384  000002                     	ds	1
   385  000003                     mpap_homming@cod_ret:
   386                           	opt callstack 0
   387  000003                     ikey_is_accessible@k:
   388                           	opt callstack 0
   389  000003                     ___wmul@multiplicand:
   390                           	opt callstack 0
   391  000003                     ___lwdiv@divisor:
   392                           	opt callstack 0
   393  000003                     ___lwmod@divisor:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397  000003                     	ds	1
   398  000004                     ___ftpack@exp:
   399                           	opt callstack 0
   400                           
   401                           ; 1 bytes @ 0x3
   402  000004                     	ds	1
   403  000005                     ___ftpack@sign:
   404                           	opt callstack 0
   405  000005                     ___lwmod@counter:
   406                           	opt callstack 0
   407  000005                     ___wmul@product:
   408                           	opt callstack 0
   409  000005                     ___lwdiv@quotient:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x4
   413  000005                     	ds	1
   414  000006                     ??___ftpack:
   415                           
   416                           ; 1 bytes @ 0x5
   417  000006                     	ds	1
   418  000007                     multiplexedDisp_job@q:
   419                           	opt callstack 0
   420  000007                     ___lwdiv@counter:
   421                           	opt callstack 0
   422  000007                     mpap_setupToTurn@numSteps_tomove:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x6
   426  000007                     	ds	1
   427  000008                     multiplexedDisp_job@i:
   428                           	opt callstack 0
   429  000008                     utoa@buf:
   430                           	opt callstack 0
   431                           
   432                           ; 1 bytes @ 0x7
   433  000008                     	ds	1
   434  000009                     ?___ftadd:
   435                           	opt callstack 0
   436  000009                     ?___ftmul:
   437                           	opt callstack 0
   438  000009                     ?___awtoft:
   439                           	opt callstack 0
   440  000009                     ?___lwtoft:
   441                           	opt callstack 0
   442  000009                     _mpap_setupToTurn$149:
   443                           	opt callstack 0
   444  000009                     ___awtoft@c:
   445                           	opt callstack 0
   446  000009                     ___lwtoft@c:
   447                           	opt callstack 0
   448  000009                     utoa@val:
   449                           	opt callstack 0
   450  000009                     ___ftadd@f1:
   451                           	opt callstack 0
   452  000009                     ___ftmul@f1:
   453                           	opt callstack 0
   454                           
   455                           ; 3 bytes @ 0x8
   456  000009                     	ds	2
   457  00000B                     nozzle_moveto@nozzle:
   458                           	opt callstack 0
   459  00000B                     utoa@base:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0xA
   463  00000B                     	ds	1
   464  00000C                     ___awtoft@sign:
   465                           	opt callstack 0
   466  00000C                     ___ftadd@f2:
   467                           	opt callstack 0
   468  00000C                     ___ftge@ff1:
   469                           	opt callstack 0
   470  00000C                     ___ftmul@f2:
   471                           	opt callstack 0
   472                           
   473                           ; 3 bytes @ 0xB
   474  00000C                     	ds	1
   475  00000D                     utoa@v:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0xC
   479  00000D                     	ds	2
   480  00000F                     ??___ftadd:
   481  00000F                     ??___ftmul:
   482  00000F                     utoa@c:
   483                           	opt callstack 0
   484  00000F                     ___ftge@ff2:
   485                           	opt callstack 0
   486                           
   487                           ; 3 bytes @ 0xE
   488  00000F                     	ds	1
   489  000010                     itoa@buf:
   490                           	opt callstack 0
   491                           
   492                           ; 1 bytes @ 0xF
   493  000010                     	ds	1
   494  000011                     itoa@val:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0x10
   498  000011                     	ds	1
   499  000012                     ??___ftge:
   500  000012                     ___ftadd@sign:
   501                           	opt callstack 0
   502  000012                     ___ftmul@exp:
   503                           	opt callstack 0
   504                           
   505                           ; 1 bytes @ 0x11
   506  000012                     	ds	1
   507  000013                     ___ftadd@exp2:
   508                           	opt callstack 0
   509  000013                     itoa@base:
   510                           	opt callstack 0
   511  000013                     ___ftmul@f3_as_product:
   512                           	opt callstack 0
   513                           
   514                           ; 3 bytes @ 0x12
   515  000013                     	ds	1
   516  000014                     ___ftadd@exp1:
   517                           	opt callstack 0
   518                           
   519                           ; 1 bytes @ 0x13
   520  000014                     	ds	1
   521  000015                     ??_ikey_parsing:
   522  000015                     ?___ftsub:
   523                           	opt callstack 0
   524  000015                     ___ftsub@f1:
   525                           	opt callstack 0
   526                           
   527                           ; 3 bytes @ 0x14
   528  000015                     	ds	1
   529  000016                     ___ftmul@cntr:
   530                           	opt callstack 0
   531                           
   532                           ; 1 bytes @ 0x15
   533  000016                     	ds	1
   534  000017                     ___ftmul@sign:
   535                           	opt callstack 0
   536                           
   537                           ; 1 bytes @ 0x16
   538  000017                     	ds	1
   539  000018                     ?___fttol:
   540                           	opt callstack 0
   541  000018                     ___ftsub@f2:
   542                           	opt callstack 0
   543  000018                     ___fttol@f1:
   544                           	opt callstack 0
   545                           
   546                           ; 3 bytes @ 0x17
   547  000018                     	ds	1
   548  000019                     ikey_parsing@k:
   549                           	opt callstack 0
   550                           
   551                           ; 1 bytes @ 0x18
   552  000019                     	ds	1
   553  00001A                     
   554                           ; 1 bytes @ 0x19
   555  00001A                     	ds	1
   556  00001B                     
   557                           ; 1 bytes @ 0x1A
   558  00001B                     	ds	1
   559  00001C                     ??___fttol:
   560                           
   561                           ; 1 bytes @ 0x1B
   562  00001C                     	ds	5
   563  000021                     ___fttol@sign1:
   564                           	opt callstack 0
   565                           
   566                           ; 1 bytes @ 0x20
   567  000021                     	ds	1
   568  000022                     ___fttol@lval:
   569                           	opt callstack 0
   570                           
   571                           ; 4 bytes @ 0x21
   572  000022                     	ds	4
   573  000026                     ___fttol@exp1:
   574                           	opt callstack 0
   575                           
   576                           ; 1 bytes @ 0x25
   577  000026                     	ds	1
   578  000027                     disp_show_quantity@f:
   579                           	opt callstack 0
   580                           
   581                           ; 3 bytes @ 0x26
   582  000027                     	ds	3
   583  00002A                     ??_disp_show_quantity:
   584                           
   585                           ; 1 bytes @ 0x29
   586  00002A                     	ds	1
   587  00002B                     disp_show_quantity@buff:
   588                           	opt callstack 0
   589                           
   590                           ; 10 bytes @ 0x2A
   591  00002B                     	ds	10
   592  000035                     disp_show_quantity@real:
   593                           	opt callstack 0
   594                           
   595                           ; 3 bytes @ 0x34
   596  000035                     	ds	3
   597  000038                     disp_show_quantity@num:
   598                           	opt callstack 0
   599                           
   600                           ; 1 bytes @ 0x37
   601  000038                     	ds	1
   602  000039                     disp_show_quantity@q:
   603                           	opt callstack 0
   604                           
   605                           ; 1 bytes @ 0x38
   606  000039                     	ds	1
   607  00003A                     disp_show_quantity@last_pos:
   608                           	opt callstack 0
   609                           
   610                           ; 1 bytes @ 0x39
   611  00003A                     	ds	1
   612  00003B                     disp_show_quantity@I:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x3A
   616  00003B                     	ds	2
   617  00003D                     disp_show_quantity@i:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0x3C
   621  00003D                     	ds	1
   622  00003E                     main@c:
   623                           	opt callstack 0
   624                           
   625                           ; 1 bytes @ 0x3D
   626  00003E                     	ds	1
   627  00003F                     main@c_disp:
   628                           	opt callstack 0
   629                           
   630                           ; 1 bytes @ 0x3E
   631  00003F                     	ds	1
   632                           
   633 ;;
   634 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   635 ;;
   636 ;; *************** function _main *****************
   637 ;; Defined at:
   638 ;;		line 281 in file "main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  c_disp          1   62[COMRAM] char 
   643 ;;  c               1   61[COMRAM] char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 3F/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   653 ;;      Params:         0       0       0       0       0       0       0       0       0
   654 ;;      Locals:         2       0       0       0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0
   656 ;;      Totals:         2       0       0       0       0       0       0       0       0
   657 ;;Total ram usage:        2 bytes
   658 ;; Hardware stack levels required when called:    5
   659 ;; This function calls:
   660 ;;		_disp_show_quantity
   661 ;;		_display7s_init
   662 ;;		_display7s_job
   663 ;;		_ikb_flush
   664 ;;		_ikb_init
   665 ;;		_ikb_job
   666 ;;		_ikb_key_is_ready2read
   667 ;;		_mpap_job
   668 ;;		_mpap_setupToHomming
   669 ;;		_mpap_stop
   670 ;;		_nozzle_moveto
   671 ;; This function is called by:
   672 ;;		Startup code after reset
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text0
   677  001420                     __ptext0:
   678                           	opt callstack 0
   679  001420                     _main:
   680                           	opt callstack 26
   681                           
   682                           ;main.c: 283: LATA = 0x00;
   683                           
   684                           ;incstack = 0
   685  001420  0E00               	movlw	0
   686  001422  6E89               	movwf	3977,c	;volatile
   687                           
   688                           ;main.c: 284: LATC = 0x00;
   689  001424  0E00               	movlw	0
   690  001426  6E8B               	movwf	3979,c	;volatile
   691                           
   692                           ;main.c: 285: LATD = 0x00;
   693  001428  0E00               	movlw	0
   694  00142A  6E8C               	movwf	3980,c	;volatile
   695                           
   696                           ;main.c: 286: LATE = 0x00;
   697  00142C  0E00               	movlw	0
   698  00142E  6E8D               	movwf	3981,c	;volatile
   699                           
   700                           ;main.c: 287: LATB = 0x00;
   701  001430  0E00               	movlw	0
   702  001432  6E8A               	movwf	3978,c	;volatile
   703                           
   704                           ;main.c: 291: ADCON1 = 0x0F;
   705  001434  0E0F               	movlw	15
   706  001436  6EC1               	movwf	4033,c	;volatile
   707                           
   708                           ;main.c: 292: CMCON=0xCF;
   709  001438  0ECF               	movlw	207
   710  00143A  6EB4               	movwf	4020,c	;volatile
   711                           
   712                           ;main.c: 295: UCON = 0;
   713  00143C  0E00               	movlw	0
   714  00143E  6E6D               	movwf	3949,c	;volatile
   715                           
   716                           ;main.c: 296: UCFG = 1<<3;
   717  001440  0E08               	movlw	8
   718  001442  6E6F               	movwf	3951,c	;volatile
   719                           
   720                           ;main.c: 302: T0CON = 0B10000111;
   721  001444  0E87               	movlw	135
   722  001446  6ED5               	movwf	4053,c	;volatile
   723                           
   724                           ;main.c: 303: t=(uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) );
   725  001448  0EFF               	movlw	255
   726  00144A  6E5C               	movwf	_t+1,c
   727  00144C  0ED1               	movlw	209
   728  00144E  6E5B               	movwf	_t,c
   729                           
   730                           ;main.c: 304: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ) >
      +                          > 8);
   731  001450  68D7               	setf	4055,c	;volatile
   732                           
   733                           ;main.c: 305: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ));
   734  001452  0ED1               	movlw	209
   735  001454  6ED6               	movwf	4054,c	;volatile
   736                           
   737                           ;main.c: 306: TMR0IE = 1;
   738  001456  8AF2               	bsf	4082,5,c	;volatile
   739  001458  808D               	bsf	3981,0,c	;volatile
   740  00145A  9096               	bcf	3990,0,c	;volatile
   741  00145C  9095               	bcf	3989,0,c	;volatile
   742  00145E  9295               	bcf	3989,1,c	;volatile
   743  001460  9495               	bcf	3989,2,c	;volatile
   744  001462  9695               	bcf	3989,3,c	;volatile
   745  001464  928B               	bcf	3979,1,c	;volatile
   746  001466  9294               	bcf	3988,1,c	;volatile
   747  001468  8296               	bsf	3990,1,c	;volatile
   748                           
   749                           ;main.c: 322: display7s_init();
   750  00146A  EC81  F00D         	call	_display7s_init	;wreg free
   751                           
   752                           ;main.c: 323: ikb_init();
   753  00146E  EC6D  F00B         	call	_ikb_init	;wreg free
   754                           
   755                           ; BSR set to: 0
   756                           ;main.c: 325: disp_show_quantity(99.5);
   757  001472  0E00               	movlw	0
   758  001474  6E27               	movwf	disp_show_quantity@f,c
   759  001476  0EC7               	movlw	199
   760  001478  6E28               	movwf	disp_show_quantity@f+1,c
   761  00147A  0E42               	movlw	66
   762  00147C  6E29               	movwf	disp_show_quantity@f+2,c
   763  00147E  EC1F  F007         	call	_disp_show_quantity	;wreg free
   764                           
   765                           ;main.c: 327: GIE = 1;
   766  001482  8EF2               	bsf	4082,7,c	;volatile
   767                           
   768                           ;main.c: 328: int8_t c=0;
   769  001484  0E00               	movlw	0
   770  001486  6E3E               	movwf	main@c,c
   771                           
   772                           ;main.c: 329: int8_t c_disp=0;
   773  001488  0E00               	movlw	0
   774  00148A  6E3F               	movwf	main@c_disp,c
   775  00148C                     l3083:
   776                           
   777                           ;main.c: 331: {;main.c: 332: if (isr_flag.f1ms)
   778  00148C  A050               	btfss	_isr_flag,0,c	;volatile
   779  00148E  D002               	goto	l194
   780                           
   781                           ;main.c: 333: {;main.c: 334: isr_flag.f1ms = 0;
   782  001490  9050               	bcf	_isr_flag,0,c	;volatile
   783                           
   784                           ;main.c: 335: main_flag.f1ms = 1;
   785  001492  804F               	bsf	_main_flag,0,c	;volatile
   786  001494                     l194:
   787                           
   788                           ;main.c: 336: };main.c: 338: if (main_flag.f1ms)
   789  001494  A04F               	btfss	_main_flag,0,c	;volatile
   790  001496  D03A               	goto	l3117
   791                           
   792                           ;main.c: 339: {;main.c: 340: if (++c==20)
   793  001498  2A3E               	incf	main@c,f,c
   794  00149A  0E14               	movlw	20
   795  00149C  183E               	xorwf	main@c,w,c
   796  00149E  A4D8               	btfss	status,2,c
   797  0014A0  D02C               	goto	l196
   798                           
   799                           ;main.c: 341: {;main.c: 342: c = 0;
   800  0014A2  0E00               	movlw	0
   801  0014A4  6E3E               	movwf	main@c,c
   802                           
   803                           ;main.c: 344: ikb_job();
   804  0014A6  EC82  F00F         	call	_ikb_job	;wreg free
   805                           
   806                           ;main.c: 346: if (ikb_key_is_ready2read(0))
   807  0014AA  0E00               	movlw	0
   808  0014AC  EC32  F00F         	call	_ikb_key_is_ready2read
   809  0014B0  0900               	iorlw	0
   810  0014B2  B4D8               	btfsc	status,2,c
   811  0014B4  D002               	goto	l3097
   812                           
   813                           ; BSR set to: 0
   814  0014B6  0E01               	movlw	1
   815  0014B8  1A8A               	xorwf	3978,f,c	;volatile
   816  0014BA                     l3097:
   817                           
   818                           ; BSR set to: 0
   819                           ;main.c: 349: };main.c: 350: if (ikb_key_is_ready2read(1))
   820  0014BA  0E01               	movlw	1
   821  0014BC  EC32  F00F         	call	_ikb_key_is_ready2read
   822  0014C0  0900               	iorlw	0
   823  0014C2  B4D8               	btfsc	status,2,c
   824  0014C4  D002               	goto	l3101
   825                           
   826                           ; BSR set to: 0
   827  0014C6  0E02               	movlw	2
   828  0014C8  1A8A               	xorwf	3978,f,c	;volatile
   829  0014CA                     l3101:
   830                           
   831                           ; BSR set to: 0
   832                           ;main.c: 353: };main.c: 354: if (ikb_key_is_ready2read(2))
   833  0014CA  0E02               	movlw	2
   834  0014CC  EC32  F00F         	call	_ikb_key_is_ready2read
   835  0014D0  0900               	iorlw	0
   836  0014D2  B4D8               	btfsc	status,2,c
   837  0014D4  D002               	goto	l3105
   838                           
   839                           ; BSR set to: 0
   840  0014D6  0E04               	movlw	4
   841  0014D8  1A8A               	xorwf	3978,f,c	;volatile
   842  0014DA                     l3105:
   843                           
   844                           ; BSR set to: 0
   845                           ;main.c: 357: };main.c: 358: if (ikb_key_is_ready2read(3))
   846  0014DA  0E03               	movlw	3
   847  0014DC  EC32  F00F         	call	_ikb_key_is_ready2read
   848  0014E0  0900               	iorlw	0
   849  0014E2  B4D8               	btfsc	status,2,c
   850  0014E4  D002               	goto	l3109
   851                           
   852                           ; BSR set to: 0
   853  0014E6  0E08               	movlw	8
   854  0014E8  1A8A               	xorwf	3978,f,c	;volatile
   855  0014EA                     l3109:
   856                           
   857                           ; BSR set to: 0
   858                           ;main.c: 361: };main.c: 362: if (ikb_key_is_ready2read(4))
   859  0014EA  0E04               	movlw	4
   860  0014EC  EC32  F00F         	call	_ikb_key_is_ready2read
   861  0014F0  0900               	iorlw	0
   862  0014F2  B4D8               	btfsc	status,2,c
   863  0014F4  D002               	goto	l196
   864                           
   865                           ; BSR set to: 0
   866  0014F6  0E10               	movlw	16
   867  0014F8  1A8A               	xorwf	3978,f,c	;volatile
   868  0014FA                     l196:
   869                           
   870                           ;main.c: 365: };main.c: 366: };main.c: 368: if (++c_disp == 2)
   871  0014FA  2A3F               	incf	main@c_disp,f,c
   872  0014FC  0E02               	movlw	2
   873  0014FE  183F               	xorwf	main@c_disp,w,c
   874  001500  A4D8               	btfss	status,2,c
   875  001502  D004               	goto	l3117
   876                           
   877                           ;main.c: 369: {;main.c: 370: c_disp = 0;
   878  001504  0E00               	movlw	0
   879  001506  6E3F               	movwf	main@c_disp,c
   880                           
   881                           ;main.c: 371: display7s_job();
   882  001508  ECFE  F00E         	call	_display7s_job	;wreg free
   883  00150C                     l3117:
   884                           
   885                           ;main.c: 372: };main.c: 373: };main.c: 376: main_flag.f1ms = 0;
   886  00150C  904F               	bcf	_main_flag,0,c	;volatile
   887                           
   888                           ;main.c: 377: ikb_flush();
   889  00150E  EC9C  F00F         	call	_ikb_flush	;wreg free
   890  001512  D7BC               	goto	l3083
   891  001514                     __end_of_main:
   892                           	opt callstack 0
   893                           
   894 ;; *************** function _nozzle_moveto *****************
   895 ;; Defined at:
   896 ;;		line 180 in file "main.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  nozzle          1    wreg     char 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  nozzle          1   10[COMRAM] char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   910 ;;      Params:         0       0       0       0       0       0       0       0       0
   911 ;;      Locals:         1       0       0       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0
   913 ;;      Totals:         1       0       0       0       0       0       0       0       0
   914 ;;Total ram usage:        1 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    2
   917 ;; This function calls:
   918 ;;		___wmul
   919 ;;		_mpap_setupToTurn
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text1
   926  001D84                     __ptext1:
   927                           	opt callstack 0
   928  001D84                     _nozzle_moveto:
   929                           	opt callstack 28
   930                           
   931                           ; BSR set to: 0
   932                           ;incstack = 0
   933                           ;nozzle_moveto@nozzle stored from wreg
   934  001D84  6E0B               	movwf	nozzle_moveto@nozzle,c
   935                           
   936                           ;main.c: 183: mpap_setupToTurn( (nozzle*200) - mpap.numSteps_current);
   937  001D86  500B               	movf	nozzle_moveto@nozzle,w,c
   938  001D88  6E01               	movwf	___wmul@multiplier,c
   939  001D8A  6A02               	clrf	___wmul@multiplier+1,c
   940  001D8C  BE01               	btfsc	___wmul@multiplier,7,c
   941  001D8E  0602               	decf	___wmul@multiplier+1,f,c
   942  001D90  0E00               	movlw	0
   943  001D92  6E04               	movwf	___wmul@multiplicand+1,c
   944  001D94  0EC8               	movlw	200
   945  001D96  6E03               	movwf	___wmul@multiplicand,c
   946  001D98  ECEB  F00E         	call	___wmul	;wreg free
   947  001D9C  5040               	movf	_mpap,w,c	;volatile
   948  001D9E  5C01               	subwf	?___wmul,w,c
   949  001DA0  6E07               	movwf	mpap_setupToTurn@numSteps_tomove,c
   950  001DA2  5041               	movf	_mpap+1,w,c	;volatile
   951  001DA4  5802               	subwfb	?___wmul+1,w,c
   952  001DA6  6E08               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
   953  001DA8  ECAA  F00E         	call	_mpap_setupToTurn	;wreg free
   954  001DAC  0012               	return		;funcret
   955  001DAE                     __end_of_nozzle_moveto:
   956                           	opt callstack 0
   957                           
   958 ;; *************** function ___wmul *****************
   959 ;; Defined at:
   960 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  multiplier      2    0[COMRAM] unsigned int 
   963 ;;  multiplicand    2    2[COMRAM] unsigned int 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  product         2    4[COMRAM] unsigned int 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  2    0[COMRAM] unsigned int 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, prodl, prodh
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         4       0       0       0       0       0       0       0       0
   976 ;;      Locals:         2       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         6       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        6 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_nozzle_moveto
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text2
   990  001DD6                     __ptext2:
   991                           	opt callstack 0
   992  001DD6                     ___wmul:
   993                           	opt callstack 28
   994                           
   995                           ;incstack = 0
   996  001DD6  5001               	movf	___wmul@multiplier,w,c
   997  001DD8  0203               	mulwf	___wmul@multiplicand,c
   998  001DDA  CFF3 F005          	movff	prodl,___wmul@product
   999  001DDE  CFF4 F006          	movff	prodh,___wmul@product+1
  1000  001DE2  5001               	movf	___wmul@multiplier,w,c
  1001  001DE4  0204               	mulwf	___wmul@multiplicand+1,c
  1002  001DE6  50F3               	movf	prodl,w,c
  1003  001DE8  2606               	addwf	___wmul@product+1,f,c
  1004  001DEA  5002               	movf	___wmul@multiplier+1,w,c
  1005  001DEC  0203               	mulwf	___wmul@multiplicand,c
  1006  001DEE  50F3               	movf	prodl,w,c
  1007  001DF0  2606               	addwf	___wmul@product+1,f,c
  1008  001DF2  C005  F001         	movff	___wmul@product,?___wmul
  1009  001DF6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1010  001DFA  0012               	return		;funcret
  1011  001DFC                     __end_of___wmul:
  1012                           	opt callstack 0
  1013                           
  1014 ;; *************** function _mpap_stop *****************
  1015 ;; Defined at:
  1016 ;;		line 192 in file "main.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1030 ;;      Params:         0       0       0       0       0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    2
  1037 ;; This function calls:
  1038 ;;		__mpap_off
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text3
  1045  001EBA                     __ptext3:
  1046                           	opt callstack 0
  1047  001EBA                     _mpap_stop:
  1048                           	opt callstack 28
  1049                           
  1050                           ;main.c: 194: mpap.numSteps_tomove = 0x00;
  1051                           
  1052                           ;incstack = 0
  1053  001EBA  0E00               	movlw	0
  1054  001EBC  6E45               	movwf	_mpap+5,c	;volatile
  1055  001EBE  0E00               	movlw	0
  1056  001EC0  6E44               	movwf	_mpap+4,c	;volatile
  1057                           
  1058                           ;main.c: 195: mpap_off();
  1059  001EC2  EC69  F00F         	call	__mpap_off	;wreg free
  1060  001EC6  0012               	return		;funcret
  1061  001EC8                     __end_of_mpap_stop:
  1062                           	opt callstack 0
  1063                           
  1064 ;; *************** function __mpap_off *****************
  1065 ;; Defined at:
  1066 ;;		line 123 in file "main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1083 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1084 ;;Total ram usage:        0 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_mpap_stop
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text4
  1095  001ED2                     __ptext4:
  1096                           	opt callstack 0
  1097  001ED2                     __mpap_off:
  1098                           	opt callstack 28
  1099                           
  1100                           ;incstack = 0
  1101                           ;main.c: 125: do{LATD &= ~(1<<0);}while(0);
  1102  001ED2  908C               	bcf	3980,0,c	;volatile
  1103                           
  1104                           ;main.c: 126: do{LATD &= ~(1<<1);}while(0);
  1105  001ED4  928C               	bcf	3980,1,c	;volatile
  1106                           
  1107                           ;main.c: 127: do{LATD &= ~(1<<2);}while(0);
  1108  001ED6  948C               	bcf	3980,2,c	;volatile
  1109                           
  1110                           ;main.c: 128: do{LATD &= ~(1<<3);}while(0);
  1111  001ED8  968C               	bcf	3980,3,c	;volatile
  1112  001EDA  0012               	return		;funcret
  1113  001EDC                     __end_of__mpap_off:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _mpap_setupToHomming *****************
  1117 ;; Defined at:
  1118 ;;		line 173 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1135 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    2
  1139 ;; This function calls:
  1140 ;;		_mpap_setupToTurn
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text5
  1147  001EA8                     __ptext5:
  1148                           	opt callstack 0
  1149  001EA8                     _mpap_setupToHomming:
  1150                           	opt callstack 28
  1151                           
  1152                           ;main.c: 175: mpap_setupToTurn( -1 *( (18*200) +20));
  1153                           
  1154                           ;incstack = 0
  1155  001EA8  0EF1               	movlw	241
  1156  001EAA  6E08               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1157  001EAC  0EDC               	movlw	220
  1158  001EAE  6E07               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1159  001EB0  ECAA  F00E         	call	_mpap_setupToTurn	;wreg free
  1160                           
  1161                           ;main.c: 178: mpap.mode = HOMMING_MODE;
  1162  001EB4  0E02               	movlw	2
  1163  001EB6  6E47               	movwf	_mpap+7,c	;volatile
  1164  001EB8  0012               	return		;funcret
  1165  001EBA                     __end_of_mpap_setupToHomming:
  1166                           	opt callstack 0
  1167                           
  1168 ;; *************** function _mpap_setupToTurn *****************
  1169 ;; Defined at:
  1170 ;;		line 161 in file "main.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  numSteps_tom    2    6[COMRAM] int 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         2       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1187 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:        4 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_mpap_setupToHomming
  1195 ;;		_nozzle_moveto
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text6
  1200  001D54                     __ptext6:
  1201                           	opt callstack 0
  1202  001D54                     _mpap_setupToTurn:
  1203                           	opt callstack 28
  1204                           
  1205                           ;main.c: 164: if (numSteps_tomove !=0)
  1206                           
  1207                           ;incstack = 0
  1208  001D54  5007               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  1209  001D56  1008               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  1210  001D58  B4D8               	btfsc	status,2,c
  1211  001D5A  0012               	return	
  1212                           
  1213                           ;main.c: 165: {;main.c: 166: mpap.numSteps_tomove = numSteps_tomove;
  1214  001D5C  C007  F044         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  1215  001D60  C008  F045         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  1216                           
  1217                           ;main.c: 167: mpap.KI = (mpap.numSteps_tomove<0)? -1: 1;
  1218  001D64  BE45               	btfsc	_mpap+5,7,c	;volatile
  1219  001D66  D005               	goto	l126
  1220  001D68  0E00               	movlw	0
  1221  001D6A  6E0A               	movwf	_mpap_setupToTurn$149+1,c
  1222  001D6C  0E01               	movlw	1
  1223  001D6E  6E09               	movwf	_mpap_setupToTurn$149,c
  1224  001D70  D002               	goto	l128
  1225  001D72                     l126:
  1226  001D72  6809               	setf	_mpap_setupToTurn$149,c
  1227  001D74  680A               	setf	_mpap_setupToTurn$149+1,c
  1228  001D76                     l128:
  1229  001D76  C009  F046         	movff	_mpap_setupToTurn$149,_mpap+6	;volatile
  1230                           
  1231                           ;main.c: 169: mpap.counter_steps = 0;
  1232  001D7A  0E00               	movlw	0
  1233  001D7C  6E43               	movwf	_mpap+3,c	;volatile
  1234  001D7E  0E00               	movlw	0
  1235  001D80  6E42               	movwf	_mpap+2,c	;volatile
  1236  001D82  0012               	return		;funcret
  1237  001D84                     __end_of_mpap_setupToTurn:
  1238                           	opt callstack 0
  1239                           
  1240 ;; *************** function _mpap_job *****************
  1241 ;; Defined at:
  1242 ;;		line 263 in file "main.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  cod_ret         1    0        char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      char 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0
  1257 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1259 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1260 ;;Total ram usage:        1 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    4
  1263 ;; This function calls:
  1264 ;;		_mpap_homming
  1265 ;;		_mpap_normal_mode
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text7
  1272  001DAE                     __ptext7:
  1273                           	opt callstack 0
  1274  001DAE                     _mpap_job:
  1275                           	opt callstack 26
  1276                           
  1277                           ;main.c: 265: int8_t cod_ret;;main.c: 267: if (mpap.mode == HOMMING_MODE)
  1278                           
  1279                           ;incstack = 0
  1280  001DAE  0E02               	movlw	2
  1281  001DB0  1847               	xorwf	_mpap+7,w,c	;volatile
  1282  001DB2  A4D8               	btfss	status,2,c
  1283  001DB4  D003               	goto	l2887
  1284  001DB6  EC2C  F00D         	call	_mpap_homming	;wreg free
  1285  001DBA  0012               	return	
  1286  001DBC                     l2887:
  1287                           
  1288                           ;main.c: 269: else if (mpap.mode == NORMAL_MODE)
  1289  001DBC  0E03               	movlw	3
  1290  001DBE  1847               	xorwf	_mpap+7,w,c	;volatile
  1291  001DC0  A4D8               	btfss	status,2,c
  1292  001DC2  D003               	goto	l2891
  1293  001DC4  ECCF  F00D         	call	_mpap_normal_mode	;wreg free
  1294  001DC8  0012               	return	
  1295  001DCA                     l2891:
  1296                           
  1297                           ;main.c: 272: else if (mpap.mode == STALL_MODE)
  1298  001DCA  0447               	decf	_mpap+7,w,c	;volatile
  1299  001DCC  A4D8               	btfss	status,2,c
  1300  001DCE  0012               	return	
  1301                           
  1302                           ;main.c: 273: mpap.mode = IDLE_MODE;
  1303  001DD0  0E00               	movlw	0
  1304  001DD2  6E47               	movwf	_mpap+7,c	;volatile
  1305  001DD4  0012               	return	
  1306  001DD6                     __end_of_mpap_job:
  1307                           	opt callstack 0
  1308                           
  1309 ;; *************** function _mpap_normal_mode *****************
  1310 ;; Defined at:
  1311 ;;		line 243 in file "main.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  cod_ret         1    1[COMRAM] char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      char 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0
  1326 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1328 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1329 ;;Total ram usage:        1 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    3
  1332 ;; This function calls:
  1333 ;;		_mpap_do1step
  1334 ;; This function is called by:
  1335 ;;		_mpap_job
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text8
  1340  001B9E                     __ptext8:
  1341                           	opt callstack 0
  1342  001B9E                     _mpap_normal_mode:
  1343                           	opt callstack 26
  1344                           
  1345                           ;main.c: 245: int8_t cod_ret = 0;
  1346                           
  1347                           ;incstack = 0
  1348  001B9E  0E00               	movlw	0
  1349  001BA0  6E02               	movwf	mpap_normal_mode@cod_ret,c
  1350                           
  1351                           ;main.c: 246: if (mpap.numSteps_tomove!=0)
  1352  001BA2  5044               	movf	_mpap+4,w,c	;volatile
  1353  001BA4  1045               	iorwf	_mpap+5,w,c	;volatile
  1354  001BA6  B4D8               	btfsc	status,2,c
  1355  001BA8  D01C               	goto	l154
  1356                           
  1357                           ;main.c: 247: {;main.c: 248: mpap_do1step(mpap.KI);
  1358  001BAA  5046               	movf	_mpap+6,w,c	;volatile
  1359  001BAC  ECF3  F00D         	call	_mpap_do1step
  1360                           
  1361                           ;main.c: 250: mpap.counter_steps+= mpap.KI;
  1362  001BB0  5046               	movf	_mpap+6,w,c	;volatile
  1363  001BB2  2642               	addwf	_mpap+2,f,c	;volatile
  1364  001BB4  0E00               	movlw	0
  1365  001BB6  BE46               	btfsc	_mpap+6,7,c	;volatile
  1366  001BB8  0EFF               	movlw	255
  1367  001BBA  2243               	addwfc	_mpap+3,f,c	;volatile
  1368                           
  1369                           ;main.c: 252: mpap.numSteps_current+= mpap.KI;
  1370  001BBC  5046               	movf	_mpap+6,w,c	;volatile
  1371  001BBE  2640               	addwf	_mpap,f,c	;volatile
  1372  001BC0  0E00               	movlw	0
  1373  001BC2  BE46               	btfsc	_mpap+6,7,c	;volatile
  1374  001BC4  0EFF               	movlw	255
  1375  001BC6  2241               	addwfc	_mpap+1,f,c	;volatile
  1376                           
  1377                           ;main.c: 254: if ( mpap.counter_steps == mpap.numSteps_tomove)
  1378  001BC8  5044               	movf	_mpap+4,w,c	;volatile
  1379  001BCA  1842               	xorwf	_mpap+2,w,c	;volatile
  1380  001BCC  E10A               	bnz	l154
  1381  001BCE  5045               	movf	_mpap+5,w,c	;volatile
  1382  001BD0  1843               	xorwf	_mpap+3,w,c	;volatile
  1383  001BD2  A4D8               	btfss	status,2,c
  1384  001BD4  D006               	goto	l154
  1385                           
  1386                           ;main.c: 255: {;main.c: 256: mpap.numSteps_tomove = 0;
  1387  001BD6  0E00               	movlw	0
  1388  001BD8  6E45               	movwf	_mpap+5,c	;volatile
  1389  001BDA  0E00               	movlw	0
  1390  001BDC  6E44               	movwf	_mpap+4,c	;volatile
  1391                           
  1392                           ;main.c: 257: cod_ret = 1;
  1393  001BDE  0E01               	movlw	1
  1394  001BE0  6E02               	movwf	mpap_normal_mode@cod_ret,c
  1395  001BE2                     l154:
  1396                           
  1397                           ;main.c: 258: };main.c: 259: };main.c: 260: return cod_ret;
  1398  001BE2  5002               	movf	mpap_normal_mode@cod_ret,w,c
  1399  001BE4  0012               	return		;funcret
  1400  001BE6                     __end_of_mpap_normal_mode:
  1401                           	opt callstack 0
  1402                           
  1403 ;; *************** function _mpap_homming *****************
  1404 ;; Defined at:
  1405 ;;		line 220 in file "main.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  cod_ret         1    2[COMRAM] char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      char 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0
  1420 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1421 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1422 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1423 ;;Total ram usage:        2 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    3
  1426 ;; This function calls:
  1427 ;;		_mpap_do1step
  1428 ;; This function is called by:
  1429 ;;		_mpap_job
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text9
  1434  001A58                     __ptext9:
  1435                           	opt callstack 0
  1436  001A58                     _mpap_homming:
  1437                           	opt callstack 26
  1438                           
  1439                           ;main.c: 222: int8_t cod_ret = 0;
  1440                           
  1441                           ;incstack = 0
  1442  001A58  0E00               	movlw	0
  1443  001A5A  6E03               	movwf	mpap_homming@cod_ret,c
  1444                           
  1445                           ;main.c: 223: if (mpap.numSteps_tomove!=0)
  1446  001A5C  5044               	movf	_mpap+4,w,c	;volatile
  1447  001A5E  1045               	iorwf	_mpap+5,w,c	;volatile
  1448  001A60  B4D8               	btfsc	status,2,c
  1449  001A62  D024               	goto	l148
  1450                           
  1451                           ;main.c: 224: {;main.c: 225: mpap_do1step(mpap.KI);
  1452  001A64  5046               	movf	_mpap+6,w,c	;volatile
  1453  001A66  ECF3  F00D         	call	_mpap_do1step
  1454                           
  1455                           ;main.c: 227: mpap.counter_steps+= mpap.KI;
  1456  001A6A  5046               	movf	_mpap+6,w,c	;volatile
  1457  001A6C  2642               	addwf	_mpap+2,f,c	;volatile
  1458  001A6E  0E00               	movlw	0
  1459  001A70  BE46               	btfsc	_mpap+6,7,c	;volatile
  1460  001A72  0EFF               	movlw	255
  1461  001A74  2243               	addwfc	_mpap+3,f,c	;volatile
  1462                           
  1463                           ;main.c: 229: if (((PORTE & (1<<1))>>1) == 0)
  1464  001A76  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  1465  001A7A  90D8               	bcf	status,0,c
  1466  001A7C  3202               	rrcf	??_mpap_homming,f,c
  1467  001A7E  B002               	btfsc	??_mpap_homming,0,c
  1468  001A80  D006               	goto	l2539
  1469                           
  1470                           ;main.c: 230: {;main.c: 231: mpap.numSteps_tomove = 0x0000;
  1471  001A82  0E00               	movlw	0
  1472  001A84  6E45               	movwf	_mpap+5,c	;volatile
  1473  001A86  0E00               	movlw	0
  1474  001A88  6E44               	movwf	_mpap+4,c	;volatile
  1475                           
  1476                           ;main.c: 232: cod_ret = 1;
  1477  001A8A  0E01               	movlw	1
  1478  001A8C  6E03               	movwf	mpap_homming@cod_ret,c
  1479  001A8E                     l2539:
  1480                           
  1481                           ;main.c: 233: };main.c: 234: if ( mpap.counter_steps == mpap.numSteps_tomove)
  1482  001A8E  5044               	movf	_mpap+4,w,c	;volatile
  1483  001A90  1842               	xorwf	_mpap+2,w,c	;volatile
  1484  001A92  E10C               	bnz	l148
  1485  001A94  5045               	movf	_mpap+5,w,c	;volatile
  1486  001A96  1843               	xorwf	_mpap+3,w,c	;volatile
  1487  001A98  A4D8               	btfss	status,2,c
  1488  001A9A  D008               	goto	l148
  1489                           
  1490                           ;main.c: 235: {;main.c: 236: mpap.numSteps_tomove = 0x0000;
  1491  001A9C  0E00               	movlw	0
  1492  001A9E  6E45               	movwf	_mpap+5,c	;volatile
  1493  001AA0  0E00               	movlw	0
  1494  001AA2  6E44               	movwf	_mpap+4,c	;volatile
  1495                           
  1496                           ;main.c: 237: cod_ret = 1;
  1497  001AA4  0E01               	movlw	1
  1498  001AA6  6E03               	movwf	mpap_homming@cod_ret,c
  1499                           
  1500                           ;main.c: 238: pulsonic.errors.flag.mpap_home_sensor = 1;
  1501  001AA8  0101               	movlb	1	; () banked
  1502  001AAA  8175               	bsf	(_pulsonic+117)& (0+255),0,b
  1503  001AAC                     l148:
  1504                           
  1505                           ;main.c: 239: };main.c: 240: };main.c: 241: return cod_ret;
  1506  001AAC  5003               	movf	mpap_homming@cod_ret,w,c
  1507  001AAE  0012               	return		;funcret
  1508  001AB0                     __end_of_mpap_homming:
  1509                           	opt callstack 0
  1510                           
  1511 ;; *************** function _mpap_do1step *****************
  1512 ;; Defined at:
  1513 ;;		line 200 in file "main.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  KI              1    wreg     char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  KI              1    0[COMRAM] char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0
  1528 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1530 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1531 ;;Total ram usage:        1 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    2
  1534 ;; This function calls:
  1535 ;;		__mpap_step1
  1536 ;;		__mpap_step2
  1537 ;;		__mpap_step3
  1538 ;;		__mpap_step4
  1539 ;; This function is called by:
  1540 ;;		_mpap_homming
  1541 ;;		_mpap_normal_mode
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text10
  1546  001BE6                     __ptext10:
  1547                           	opt callstack 0
  1548  001BE6                     _mpap_do1step:
  1549                           	opt callstack 26
  1550                           
  1551                           ;incstack = 0
  1552                           ;mpap_do1step@KI stored from wreg
  1553  001BE6  6E01               	movwf	mpap_do1step@KI,c
  1554                           
  1555                           ;main.c: 202: static int8_t i;;main.c: 203: mpap_step[i]();
  1556  001BE8  504E               	movf	mpap_do1step@i,w,c
  1557  001BEA  0D02               	mullw	2
  1558  001BEC  50F3               	movf	prodl,w,c
  1559  001BEE  0F51               	addlw	low _mpap_step
  1560  001BF0  6ED9               	movwf	fsr2l,c
  1561  001BF2  6ADA               	clrf	fsr2h,c
  1562  001BF4  D801               	call	u1748
  1563  001BF6  D00A               	goto	u1749
  1564  001BF8                     u1748:
  1565  001BF8  0005               	push	
  1566  001BFA  6EFA               	movwf	pclath,c
  1567  001BFC  50DE               	movf	postinc2,w,c
  1568  001BFE  6EFD               	movwf	tosl,c
  1569  001C00  50DE               	movf	postinc2,w,c
  1570  001C02  6EFE               	movwf	tosh,c
  1571  001C04  50F8               	movf	tblptru,w,c
  1572  001C06  6EFF               	movwf	tosu,c
  1573  001C08  50FA               	movf	pclath,w,c
  1574  001C0A  0012               	return		;indir
  1575  001C0C                     u1749:
  1576                           
  1577                           ;main.c: 204: i+=KI;
  1578  001C0C  5001               	movf	mpap_do1step@KI,w,c
  1579  001C0E  264E               	addwf	mpap_do1step@i,f,c
  1580                           
  1581                           ;main.c: 205: if (i>3){i=0;}
  1582  001C10  504E               	movf	mpap_do1step@i,w,c
  1583  001C12  0A80               	xorlw	128
  1584  001C14  0F7C               	addlw	-132
  1585  001C16  A0D8               	btfss	status,0,c
  1586  001C18  D002               	goto	l2335
  1587  001C1A  0E00               	movlw	0
  1588  001C1C  6E4E               	movwf	mpap_do1step@i,c
  1589  001C1E                     l2335:
  1590                           
  1591                           ;main.c: 206: if (i<0){i=3;}
  1592  001C1E  AE4E               	btfss	mpap_do1step@i,7,c
  1593  001C20  0012               	return	
  1594  001C22  0E03               	movlw	3
  1595  001C24  6E4E               	movwf	mpap_do1step@i,c
  1596  001C26  0012               	return		;funcret
  1597  001C28                     __end_of_mpap_do1step:
  1598                           	opt callstack 0
  1599                           
  1600 ;; *************** function __mpap_step3 *****************
  1601 ;; Defined at:
  1602 ;;		line 99 in file "main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		status,2, status,0
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_mpap_do1step
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text11
  1631  001EDC                     __ptext11:
  1632                           	opt callstack 0
  1633  001EDC                     __mpap_step3:
  1634                           	opt callstack 26
  1635                           
  1636                           ;incstack = 0
  1637                           ;main.c: 101: do{LATD &= ~(1<<0);}while(0);
  1638  001EDC  908C               	bcf	3980,0,c	;volatile
  1639                           
  1640                           ;main.c: 102: do{LATD |= 1<<1;}while(0);
  1641  001EDE  828C               	bsf	3980,1,c	;volatile
  1642                           
  1643                           ;main.c: 103: do{LATD &= ~(1<<2);}while(0);
  1644  001EE0  948C               	bcf	3980,2,c	;volatile
  1645                           
  1646                           ;main.c: 104: do{LATD &= ~(1<<3);}while(0);
  1647  001EE2  968C               	bcf	3980,3,c	;volatile
  1648  001EE4  0012               	return		;funcret
  1649  001EE6                     __end_of__mpap_step3:
  1650                           	opt callstack 0
  1651                           
  1652 ;; *************** function __mpap_step2 *****************
  1653 ;; Defined at:
  1654 ;;		line 92 in file "main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_mpap_do1step
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text12
  1683  001EE6                     __ptext12:
  1684                           	opt callstack 0
  1685  001EE6                     __mpap_step2:
  1686                           	opt callstack 26
  1687                           
  1688                           ;incstack = 0
  1689                           ;main.c: 94: do{LATD &= ~(1<<0);}while(0);
  1690  001EE6  908C               	bcf	3980,0,c	;volatile
  1691                           
  1692                           ;main.c: 95: do{LATD &= ~(1<<1);}while(0);
  1693  001EE8  928C               	bcf	3980,1,c	;volatile
  1694                           
  1695                           ;main.c: 96: do{LATD |= 1<<2;}while(0);
  1696  001EEA  848C               	bsf	3980,2,c	;volatile
  1697                           
  1698                           ;main.c: 97: do{LATD &= ~(1<<3);}while(0);
  1699  001EEC  968C               	bcf	3980,3,c	;volatile
  1700  001EEE  0012               	return		;funcret
  1701  001EF0                     __end_of__mpap_step2:
  1702                           	opt callstack 0
  1703                           
  1704 ;; *************** function __mpap_step1 *****************
  1705 ;; Defined at:
  1706 ;;		line 85 in file "main.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1720 ;;      Params:         0       0       0       0       0       0       0       0       0
  1721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1723 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1724 ;;Total ram usage:        0 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    1
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_mpap_do1step
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text13
  1735  001EF0                     __ptext13:
  1736                           	opt callstack 0
  1737  001EF0                     __mpap_step1:
  1738                           	opt callstack 26
  1739                           
  1740                           ;incstack = 0
  1741                           ;main.c: 87: do{LATD &= ~(1<<0);}while(0);
  1742  001EF0  908C               	bcf	3980,0,c	;volatile
  1743                           
  1744                           ;main.c: 88: do{LATD &= ~(1<<1);}while(0);
  1745  001EF2  928C               	bcf	3980,1,c	;volatile
  1746                           
  1747                           ;main.c: 89: do{LATD &= ~(1<<2);}while(0);
  1748  001EF4  948C               	bcf	3980,2,c	;volatile
  1749                           
  1750                           ;main.c: 90: do{LATD |= 1<<3;}while(0);
  1751  001EF6  868C               	bsf	3980,3,c	;volatile
  1752  001EF8  0012               	return		;funcret
  1753  001EFA                     __end_of__mpap_step1:
  1754                           	opt callstack 0
  1755                           
  1756 ;; *************** function __mpap_step4 *****************
  1757 ;; Defined at:
  1758 ;;		line 106 in file "main.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1772 ;;      Params:         0       0       0       0       0       0       0       0       0
  1773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1775 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1776 ;;Total ram usage:        0 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    1
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_mpap_do1step
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text14
  1787  001EFA                     __ptext14:
  1788                           	opt callstack 0
  1789  001EFA                     __mpap_step4:
  1790                           	opt callstack 26
  1791                           
  1792                           ;incstack = 0
  1793                           ;main.c: 108: do{LATD |= 1<<0;}while(0);
  1794  001EFA  808C               	bsf	3980,0,c	;volatile
  1795                           
  1796                           ;main.c: 109: do{LATD &= ~(1<<1);}while(0);
  1797  001EFC  928C               	bcf	3980,1,c	;volatile
  1798                           
  1799                           ;main.c: 110: do{LATD &= ~(1<<2);}while(0);
  1800  001EFE  948C               	bcf	3980,2,c	;volatile
  1801                           
  1802                           ;main.c: 111: do{LATD &= ~(1<<3);}while(0);
  1803  001F00  968C               	bcf	3980,3,c	;volatile
  1804  001F02  0012               	return		;funcret
  1805  001F04                     __end_of__mpap_step4:
  1806                           	opt callstack 0
  1807                           
  1808 ;; *************** function _ikb_key_is_ready2read *****************
  1809 ;; Defined at:
  1810 ;;		line 427 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  k               1    wreg     unsigned char 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  k               1    0[COMRAM] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      unsigned char 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 3F/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0
  1825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1828 ;;Total ram usage:        1 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text15
  1839  001E64                     __ptext15:
  1840                           	opt callstack 0
  1841  001E64                     _ikb_key_is_ready2read:
  1842                           	opt callstack 29
  1843                           
  1844                           ;incstack = 0
  1845                           ;ikb_key_is_ready2read@k stored from wreg
  1846  001E64  6E01               	movwf	ikb_key_is_ready2read@k,c
  1847                           
  1848                           ;ikb.c: 429: return key[k].bf.ReadyToRead;
  1849  001E66  5001               	movf	ikb_key_is_ready2read@k,w,c
  1850  001E68  0D10               	mullw	16
  1851  001E6A  50F3               	movf	prodl,w,c
  1852  001E6C  0F6A               	addlw	low (_key+10)
  1853  001E6E  6ED9               	movwf	fsr2l,c
  1854  001E70  6ADA               	clrf	fsr2h,c
  1855  001E72  0100               	movlb	0	; () banked
  1856  001E74  ACDF               	btfss	indf2,6,c
  1857  001E76  D002               	goto	u3070
  1858  001E78  0E01               	movlw	1
  1859  001E7A  0012               	return	
  1860  001E7C                     u3070:
  1861  001E7C  0E00               	movlw	0
  1862                           
  1863                           ; BSR set to: 0
  1864  001E7E  0012               	return		;funcret
  1865  001E80                     __end_of_ikb_key_is_ready2read:
  1866                           	opt callstack 0
  1867                           
  1868 ;; *************** function _ikb_job *****************
  1869 ;; Defined at:
  1870 ;;		line 414 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    4
  1891 ;; This function calls:
  1892 ;;		_ikey_parsing
  1893 ;;		_ikey_scan
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text16
  1900  001F04                     __ptext16:
  1901                           	opt callstack 0
  1902  001F04                     _ikb_job:
  1903                           	opt callstack 26
  1904                           
  1905                           ;ikb.c: 416: ikey_scan();
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;incstack = 0
  1909  001F04  EC40  F009         	call	_ikey_scan	;wreg free
  1910                           
  1911                           ;ikb.c: 417: ikey_parsing();
  1912  001F08  EC07  F004         	call	_ikey_parsing	;wreg free
  1913  001F0C  0012               	return		;funcret
  1914  001F0E                     __end_of_ikb_job:
  1915                           	opt callstack 0
  1916                           
  1917 ;; *************** function _ikey_scan *****************
  1918 ;; Defined at:
  1919 ;;		line 449 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  k               1    1[COMRAM] char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0
  1934 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1935 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1937 ;;Total ram usage:        2 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    2
  1940 ;; This function calls:
  1941 ;;		_keyRead_pin_key1
  1942 ;;		_keyRead_pin_key2
  1943 ;;		_keyRead_pin_key3
  1944 ;;		_keyRead_pin_key4
  1945 ;;		_keyRead_pin_key5
  1946 ;; This function is called by:
  1947 ;;		_ikb_job
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text17
  1952  001280                     __ptext17:
  1953                           	opt callstack 0
  1954  001280                     _ikey_scan:
  1955                           	opt callstack 27
  1956                           
  1957                           ;ikb.c: 451: int8_t k = 5-1;
  1958                           
  1959                           ;incstack = 0
  1960  001280  0E04               	movlw	4
  1961  001282  6E02               	movwf	ikey_scan@k,c
  1962  001284                     l2565:
  1963                           
  1964                           ;ikb.c: 453: {;ikb.c: 454: if (key[k].sm0 == 0)
  1965  001284  5002               	movf	ikey_scan@k,w,c
  1966  001286  0D10               	mullw	16
  1967  001288  50F3               	movf	prodl,w,c
  1968  00128A  0F64               	addlw	low (_key+4)
  1969  00128C  6ED9               	movwf	fsr2l,c
  1970  00128E  6ADA               	clrf	fsr2h,c
  1971  001290  50DF               	movf	indf2,w,c
  1972  001292  A4D8               	btfss	status,2,c
  1973  001294  D016               	goto	l2571
  1974                           
  1975                           ;ikb.c: 455: {;ikb.c: 456: if (key[k].keyRead() == 0)
  1976  001296  5002               	movf	ikey_scan@k,w,c
  1977  001298  0D10               	mullw	16
  1978  00129A  50F3               	movf	prodl,w,c
  1979  00129C  0F60               	addlw	low _key
  1980  00129E  6ED9               	movwf	fsr2l,c
  1981  0012A0  6ADA               	clrf	fsr2h,c
  1982  0012A2  D801               	call	u2158
  1983  0012A4  D00A               	goto	u2159
  1984  0012A6                     u2158:
  1985  0012A6  0005               	push	
  1986  0012A8  6EFA               	movwf	pclath,c
  1987  0012AA  50DE               	movf	postinc2,w,c
  1988  0012AC  6EFD               	movwf	tosl,c
  1989  0012AE  50DE               	movf	postinc2,w,c
  1990  0012B0  6EFE               	movwf	tosh,c
  1991  0012B2  50F8               	movf	tblptru,w,c
  1992  0012B4  6EFF               	movwf	tosu,c
  1993  0012B6  50FA               	movf	pclath,w,c
  1994  0012B8  0012               	return		;indir
  1995  0012BA                     u2159:
  1996  0012BA  0900               	iorlw	0
  1997  0012BC  A4D8               	btfss	status,2,c
  1998  0012BE  D0AC               	goto	l2601
  1999  0012C0  D041               	goto	L1
  2000  0012C2                     l2571:
  2001                           
  2002                           ;ikb.c: 461: else if (key[k].sm0 == 1)
  2003  0012C2  5002               	movf	ikey_scan@k,w,c
  2004  0012C4  0D10               	mullw	16
  2005  0012C6  50F3               	movf	prodl,w,c
  2006  0012C8  0F64               	addlw	low (_key+4)
  2007  0012CA  6ED9               	movwf	fsr2l,c
  2008  0012CC  6ADA               	clrf	fsr2h,c
  2009  0012CE  04DE               	decf	postinc2,w,c
  2010  0012D0  A4D8               	btfss	status,2,c
  2011  0012D2  D040               	goto	l2583
  2012                           
  2013                           ;ikb.c: 462: {;ikb.c: 463: if (++key[k].counter0 == 4)
  2014  0012D4  5002               	movf	ikey_scan@k,w,c
  2015  0012D6  0D10               	mullw	16
  2016  0012D8  50F3               	movf	prodl,w,c
  2017  0012DA  0F65               	addlw	low (_key+5)
  2018  0012DC  6ED9               	movwf	fsr2l,c
  2019  0012DE  6ADA               	clrf	fsr2h,c
  2020  0012E0  2ADF               	incf	indf2,f,c
  2021  0012E2  0E04               	movlw	4
  2022  0012E4  18DE               	xorwf	postinc2,w,c
  2023  0012E6  A4D8               	btfss	status,2,c
  2024  0012E8  D097               	goto	l2601
  2025                           
  2026                           ;ikb.c: 464: {;ikb.c: 465: key[k].counter0 = 0x00;
  2027  0012EA  5002               	movf	ikey_scan@k,w,c
  2028  0012EC  0D10               	mullw	16
  2029  0012EE  50F3               	movf	prodl,w,c
  2030  0012F0  0F65               	addlw	low (_key+5)
  2031  0012F2  6ED9               	movwf	fsr2l,c
  2032  0012F4  6ADA               	clrf	fsr2h,c
  2033  0012F6  0E00               	movlw	0
  2034  0012F8  6EDF               	movwf	indf2,c
  2035                           
  2036                           ;ikb.c: 467: if (key[k].keyRead() != 0)
  2037  0012FA  5002               	movf	ikey_scan@k,w,c
  2038  0012FC  0D10               	mullw	16
  2039  0012FE  50F3               	movf	prodl,w,c
  2040  001300  0F60               	addlw	low _key
  2041  001302  6ED9               	movwf	fsr2l,c
  2042  001304  6ADA               	clrf	fsr2h,c
  2043  001306  D801               	call	u2198
  2044  001308  D00A               	goto	u2199
  2045  00130A                     u2198:
  2046  00130A  0005               	push	
  2047  00130C  6EFA               	movwf	pclath,c
  2048  00130E  50DE               	movf	postinc2,w,c
  2049  001310  6EFD               	movwf	tosl,c
  2050  001312  50DE               	movf	postinc2,w,c
  2051  001314  6EFE               	movwf	tosh,c
  2052  001316  50F8               	movf	tblptru,w,c
  2053  001318  6EFF               	movwf	tosu,c
  2054  00131A  50FA               	movf	pclath,w,c
  2055  00131C  0012               	return		;indir
  2056  00131E                     u2199:
  2057  00131E  0900               	iorlw	0
  2058  001320  B4D8               	btfsc	status,2,c
  2059  001322  D008               	goto	l2581
  2060  001324                     u2200:
  2061                           
  2062                           ;ikb.c: 468: {;ikb.c: 469: key[k].sm0--;
  2063  001324  5002               	movf	ikey_scan@k,w,c
  2064  001326  0D10               	mullw	16
  2065  001328  50F3               	movf	prodl,w,c
  2066  00132A  0F64               	addlw	low (_key+4)
  2067  00132C  6ED9               	movwf	fsr2l,c
  2068  00132E  6ADA               	clrf	fsr2h,c
  2069  001330  06DF               	decf	indf2,f,c
  2070                           
  2071                           ;ikb.c: 470: }
  2072  001332  D072               	goto	l2601
  2073  001334                     l2581:
  2074                           
  2075                           ;ikb.c: 471: else;ikb.c: 472: {;ikb.c: 473: key[k].bf.state = 1;
  2076  001334  5002               	movf	ikey_scan@k,w,c
  2077  001336  0D10               	mullw	16
  2078  001338  50F3               	movf	prodl,w,c
  2079  00133A  0F6A               	addlw	low (_key+10)
  2080  00133C  6ED9               	movwf	fsr2l,c
  2081  00133E  6ADA               	clrf	fsr2h,c
  2082  001340  0100               	movlb	0	; () banked
  2083  001342  80DF               	bsf	indf2,0,c
  2084  001344                     L1:
  2085                           
  2086                           ;ikb.c: 474: key[k].sm0++;
  2087  001344  5002               	movf	ikey_scan@k,w,c
  2088  001346  0D10               	mullw	16
  2089  001348  50F3               	movf	prodl,w,c
  2090  00134A  0F64               	addlw	low (_key+4)
  2091  00134C  6ED9               	movwf	fsr2l,c
  2092  00134E  6ADA               	clrf	fsr2h,c
  2093  001350  2ADF               	incf	indf2,f,c
  2094  001352  D062               	goto	l2601
  2095  001354                     l2583:
  2096                           
  2097                           ;ikb.c: 478: else if (key[k].sm0 == 2)
  2098  001354  5002               	movf	ikey_scan@k,w,c
  2099  001356  0D10               	mullw	16
  2100  001358  50F3               	movf	prodl,w,c
  2101  00135A  0F64               	addlw	low (_key+4)
  2102  00135C  6ED9               	movwf	fsr2l,c
  2103  00135E  6ADA               	clrf	fsr2h,c
  2104  001360  0E02               	movlw	2
  2105  001362  18DE               	xorwf	postinc2,w,c
  2106  001364  A4D8               	btfss	status,2,c
  2107  001366  D016               	goto	l2589
  2108                           
  2109                           ;ikb.c: 479: {;ikb.c: 480: if (key[k].keyRead() == 1)
  2110  001368  5002               	movf	ikey_scan@k,w,c
  2111  00136A  0D10               	mullw	16
  2112  00136C  50F3               	movf	prodl,w,c
  2113  00136E  0F60               	addlw	low _key
  2114  001370  6ED9               	movwf	fsr2l,c
  2115  001372  6ADA               	clrf	fsr2h,c
  2116  001374  D801               	call	u2228
  2117  001376  D00A               	goto	u2229
  2118  001378                     u2228:
  2119  001378  0005               	push	
  2120  00137A  6EFA               	movwf	pclath,c
  2121  00137C  50DE               	movf	postinc2,w,c
  2122  00137E  6EFD               	movwf	tosl,c
  2123  001380  50DE               	movf	postinc2,w,c
  2124  001382  6EFE               	movwf	tosh,c
  2125  001384  50F8               	movf	tblptru,w,c
  2126  001386  6EFF               	movwf	tosu,c
  2127  001388  50FA               	movf	pclath,w,c
  2128  00138A  0012               	return		;indir
  2129  00138C                     u2229:
  2130  00138C  06E8               	decf	wreg,f,c
  2131  00138E  B4D8               	btfsc	status,2,c
  2132  001390  D7D9               	goto	L1
  2133  001392  D042               	goto	l2601
  2134  001394                     l2589:
  2135                           
  2136                           ;ikb.c: 483: else if (key[k].sm0 == 3)
  2137  001394  5002               	movf	ikey_scan@k,w,c
  2138  001396  0D10               	mullw	16
  2139  001398  50F3               	movf	prodl,w,c
  2140  00139A  0F64               	addlw	low (_key+4)
  2141  00139C  6ED9               	movwf	fsr2l,c
  2142  00139E  6ADA               	clrf	fsr2h,c
  2143  0013A0  0E03               	movlw	3
  2144  0013A2  18DE               	xorwf	postinc2,w,c
  2145  0013A4  A4D8               	btfss	status,2,c
  2146  0013A6  D038               	goto	l2601
  2147                           
  2148                           ;ikb.c: 484: {;ikb.c: 485: if (++key[k].counter0 == 4)
  2149  0013A8  5002               	movf	ikey_scan@k,w,c
  2150  0013AA  0D10               	mullw	16
  2151  0013AC  50F3               	movf	prodl,w,c
  2152  0013AE  0F65               	addlw	low (_key+5)
  2153  0013B0  6ED9               	movwf	fsr2l,c
  2154  0013B2  6ADA               	clrf	fsr2h,c
  2155  0013B4  2ADF               	incf	indf2,f,c
  2156  0013B6  0E04               	movlw	4
  2157  0013B8  18DE               	xorwf	postinc2,w,c
  2158  0013BA  A4D8               	btfss	status,2,c
  2159  0013BC  D02D               	goto	l2601
  2160                           
  2161                           ;ikb.c: 486: {;ikb.c: 487: key[k].counter0 = 0x00;
  2162  0013BE  5002               	movf	ikey_scan@k,w,c
  2163  0013C0  0D10               	mullw	16
  2164  0013C2  50F3               	movf	prodl,w,c
  2165  0013C4  0F65               	addlw	low (_key+5)
  2166  0013C6  6ED9               	movwf	fsr2l,c
  2167  0013C8  6ADA               	clrf	fsr2h,c
  2168  0013CA  0E00               	movlw	0
  2169  0013CC  6EDF               	movwf	indf2,c
  2170                           
  2171                           ;ikb.c: 489: if (key[k].keyRead() != 1)
  2172  0013CE  5002               	movf	ikey_scan@k,w,c
  2173  0013D0  0D10               	mullw	16
  2174  0013D2  50F3               	movf	prodl,w,c
  2175  0013D4  0F60               	addlw	low _key
  2176  0013D6  6ED9               	movwf	fsr2l,c
  2177  0013D8  6ADA               	clrf	fsr2h,c
  2178  0013DA  D801               	call	u2268
  2179  0013DC  D00A               	goto	u2269
  2180  0013DE                     u2268:
  2181  0013DE  0005               	push	
  2182  0013E0  6EFA               	movwf	pclath,c
  2183  0013E2  50DE               	movf	postinc2,w,c
  2184  0013E4  6EFD               	movwf	tosl,c
  2185  0013E6  50DE               	movf	postinc2,w,c
  2186  0013E8  6EFE               	movwf	tosh,c
  2187  0013EA  50F8               	movf	tblptru,w,c
  2188  0013EC  6EFF               	movwf	tosu,c
  2189  0013EE  50FA               	movf	pclath,w,c
  2190  0013F0  0012               	return		;indir
  2191  0013F2                     u2269:
  2192  0013F2  06E8               	decf	wreg,f,c
  2193  0013F4  A4D8               	btfss	status,2,c
  2194  0013F6  D796               	goto	u2200
  2195                           
  2196                           ;ikb.c: 493: else;ikb.c: 494: {;ikb.c: 495: key[k].bf.state = 0;
  2197  0013F8  5002               	movf	ikey_scan@k,w,c
  2198  0013FA  0D10               	mullw	16
  2199  0013FC  50F3               	movf	prodl,w,c
  2200  0013FE  0F6A               	addlw	low (_key+10)
  2201  001400  6ED9               	movwf	fsr2l,c
  2202  001402  6ADA               	clrf	fsr2h,c
  2203  001404  0100               	movlb	0	; () banked
  2204  001406  90DF               	bcf	indf2,0,c
  2205                           
  2206                           ;ikb.c: 496: key[k].sm0 = 0x00;
  2207  001408  5002               	movf	ikey_scan@k,w,c
  2208  00140A  0D10               	mullw	16
  2209  00140C  50F3               	movf	prodl,w,c
  2210  00140E  0F64               	addlw	low (_key+4)
  2211  001410  6ED9               	movwf	fsr2l,c
  2212  001412  6ADA               	clrf	fsr2h,c
  2213  001414  0E00               	movlw	0
  2214  001416  6EDF               	movwf	indf2,c
  2215  001418                     l2601:
  2216                           
  2217                           ;ikb.c: 497: };ikb.c: 498: };ikb.c: 499: };ikb.c: 500: }while (--k >= 0);
  2218  001418  0602               	decf	ikey_scan@k,f,c
  2219  00141A  BE02               	btfsc	ikey_scan@k,7,c
  2220  00141C  0012               	return	
  2221  00141E  D732               	goto	l2565
  2222  001420                     __end_of_ikey_scan:
  2223                           	opt callstack 0
  2224                           
  2225 ;; *************** function _keyRead_pin_key4 *****************
  2226 ;; Defined at:
  2227 ;;		line 206 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      unsigned char 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2241 ;;      Params:         0       0       0       0       0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2245 ;;Total ram usage:        0 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_ikb_init
  2252 ;;		_ikey_scan
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text18
  2257  001F32                     __ptext18:
  2258                           	opt callstack 0
  2259  001F32                     _keyRead_pin_key4:
  2260                           	opt callstack 27
  2261                           
  2262                           ;ikb.c: 208: return ((PORTC & (1<<7))>>7);
  2263                           
  2264                           ;incstack = 0
  2265  001F32  4482               	rlncf	3970,w,c	;volatile
  2266  001F34  0B01               	andlw	1
  2267  001F36  0012               	return		;funcret
  2268  001F38                     __end_of_keyRead_pin_key4:
  2269                           	opt callstack 0
  2270                           
  2271 ;; *************** function _keyRead_pin_key3 *****************
  2272 ;; Defined at:
  2273 ;;		line 202 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      unsigned char 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2287 ;;      Params:         0       0       0       0       0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2290 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2291 ;;Total ram usage:        0 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_ikb_init
  2298 ;;		_ikey_scan
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text19
  2303  001F0E                     __ptext19:
  2304                           	opt callstack 0
  2305  001F0E                     _keyRead_pin_key3:
  2306                           	opt callstack 27
  2307                           
  2308                           ;ikb.c: 204: return ((PORTC & (1<<6))>>6);
  2309                           
  2310                           ;incstack = 0
  2311  001F0E  4482               	rlncf	3970,w,c	;volatile
  2312  001F10  46E8               	rlncf	wreg,f,c
  2313  001F12  0B03               	andlw	3
  2314  001F14  0B01               	andlw	1
  2315  001F16  0012               	return		;funcret
  2316  001F18                     __end_of_keyRead_pin_key3:
  2317                           	opt callstack 0
  2318                           
  2319 ;; *************** function _keyRead_pin_key2 *****************
  2320 ;; Defined at:
  2321 ;;		line 198 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      unsigned char 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_ikb_init
  2346 ;;		_ikey_scan
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text20
  2351  001F18                     __ptext20:
  2352                           	opt callstack 0
  2353  001F18                     _keyRead_pin_key2:
  2354                           	opt callstack 27
  2355                           
  2356                           ;ikb.c: 200: return ((PORTC & (1<<5))>>5);
  2357                           
  2358                           ;incstack = 0
  2359  001F18  3882               	swapf	3970,w,c	;volatile
  2360  001F1A  42E8               	rrncf	wreg,f,c
  2361  001F1C  0B07               	andlw	7
  2362  001F1E  0B01               	andlw	1
  2363  001F20  0012               	return		;funcret
  2364  001F22                     __end_of_keyRead_pin_key2:
  2365                           	opt callstack 0
  2366                           
  2367 ;; *************** function _keyRead_pin_key1 *****************
  2368 ;; Defined at:
  2369 ;;		line 194 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      unsigned char 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2383 ;;      Params:         0       0       0       0       0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2386 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2387 ;;Total ram usage:        0 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    1
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_ikb_init
  2394 ;;		_ikey_scan
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text21
  2399  001F22                     __ptext21:
  2400                           	opt callstack 0
  2401  001F22                     _keyRead_pin_key1:
  2402                           	opt callstack 27
  2403                           
  2404                           ;ikb.c: 196: return ((PORTC & (1<<4))>>4);
  2405                           
  2406                           ;incstack = 0
  2407  001F22  3882               	swapf	3970,w,c	;volatile
  2408  001F24  0B0F               	andlw	15
  2409  001F26  0B01               	andlw	1
  2410  001F28  0012               	return		;funcret
  2411  001F2A                     __end_of_keyRead_pin_key1:
  2412                           	opt callstack 0
  2413                           
  2414 ;; *************** function _keyRead_pin_key5 *****************
  2415 ;; Defined at:
  2416 ;;		line 210 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      unsigned char 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2430 ;;      Params:         0       0       0       0       0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2433 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    1
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_ikb_init
  2441 ;;		_ikey_scan
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text22
  2446  001F2A                     __ptext22:
  2447                           	opt callstack 0
  2448  001F2A                     _keyRead_pin_key5:
  2449                           	opt callstack 27
  2450                           
  2451                           ;ikb.c: 212: return ((PORTD & (1<<4))>>4);
  2452                           
  2453                           ;incstack = 0
  2454  001F2A  3883               	swapf	3971,w,c	;volatile
  2455  001F2C  0B0F               	andlw	15
  2456  001F2E  0B01               	andlw	1
  2457  001F30  0012               	return		;funcret
  2458  001F32                     __end_of_keyRead_pin_key5:
  2459                           	opt callstack 0
  2460                           
  2461 ;; *************** function _ikey_parsing *****************
  2462 ;; Defined at:
  2463 ;;		line 545 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  k               1   24[COMRAM] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0
  2478 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2479 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2480 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2481 ;;Total ram usage:        5 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    3
  2484 ;; This function calls:
  2485 ;;		___ftge
  2486 ;;		___lwtoft
  2487 ;;		_ikey_is_accessible
  2488 ;; This function is called by:
  2489 ;;		_ikb_job
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text23
  2494  00080E                     __ptext23:
  2495                           	opt callstack 0
  2496  00080E                     _ikey_parsing:
  2497                           	opt callstack 26
  2498                           
  2499                           ;ikb.c: 547: uint8_t k;;ikb.c: 549: for (k=0; k < 5; k++)
  2500                           
  2501                           ;incstack = 0
  2502  00080E  0E00               	movlw	0
  2503  000810  6E19               	movwf	ikey_parsing@k,c
  2504  000812                     l2609:
  2505                           
  2506                           ;ikb.c: 550: {;ikb.c: 551: if ( key[k].sm1 == (0) )
  2507  000812  5019               	movf	ikey_parsing@k,w,c
  2508  000814  0D10               	mullw	16
  2509  000816  50F3               	movf	prodl,w,c
  2510  000818  0F66               	addlw	low (_key+6)
  2511  00081A  6ED9               	movwf	fsr2l,c
  2512  00081C  6ADA               	clrf	fsr2h,c
  2513  00081E  50DF               	movf	indf2,w,c
  2514  000820  A4D8               	btfss	status,2,c
  2515  000822  D08B               	goto	l348
  2516                           
  2517                           ;ikb.c: 552: {;ikb.c: 553: if ( ikey_is_accessible(k) )
  2518  000824  5019               	movf	ikey_parsing@k,w,c
  2519  000826  ECA9  F00D         	call	_ikey_is_accessible
  2520  00082A  0900               	iorlw	0
  2521  00082C  B4D8               	btfsc	status,2,c
  2522  00082E  D085               	goto	l348
  2523                           
  2524                           ;ikb.c: 554: {;ikb.c: 555: if (key[k].bf.state == 1)
  2525  000830  5019               	movf	ikey_parsing@k,w,c
  2526  000832  0D10               	mullw	16
  2527  000834  50F3               	movf	prodl,w,c
  2528  000836  0F6A               	addlw	low (_key+10)
  2529  000838  6ED9               	movwf	fsr2l,c
  2530  00083A  6ADA               	clrf	fsr2h,c
  2531  00083C  0100               	movlb	0	; () banked
  2532  00083E  A0DF               	btfss	indf2,0,c
  2533  000840  D07C               	goto	l348
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;ikb.c: 556: {;ikb.c: 558: if (key[k].bf.OnKeyPressed)
  2537  000842  5019               	movf	ikey_parsing@k,w,c
  2538  000844  0D10               	mullw	16
  2539  000846  50F3               	movf	prodl,w,c
  2540  000848  0F6A               	addlw	low (_key+10)
  2541  00084A  6ED9               	movwf	fsr2l,c
  2542  00084C  6ADA               	clrf	fsr2h,c
  2543  00084E  A2DF               	btfss	indf2,1,c
  2544  000850  D01F               	goto	l2623
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;ikb.c: 559: {;ikb.c: 560: key[k].bf.ReadyToRead = 1;
  2548  000852  5019               	movf	ikey_parsing@k,w,c
  2549  000854  0D10               	mullw	16
  2550  000856  50F3               	movf	prodl,w,c
  2551  000858  0F6A               	addlw	low (_key+10)
  2552  00085A  6ED9               	movwf	fsr2l,c
  2553  00085C  6ADA               	clrf	fsr2h,c
  2554  00085E  8CDF               	bsf	indf2,6,c
  2555                           
  2556                           ;ikb.c: 562: if (key[k].bf.Reptt)
  2557  000860  5019               	movf	ikey_parsing@k,w,c
  2558  000862  0D10               	mullw	16
  2559  000864  50F3               	movf	prodl,w,c
  2560  000866  0F6A               	addlw	low (_key+10)
  2561  000868  6ED9               	movwf	fsr2l,c
  2562  00086A  6ADA               	clrf	fsr2h,c
  2563  00086C  AADF               	btfss	indf2,5,c
  2564  00086E  D008               	goto	l2621
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;ikb.c: 563: {;ikb.c: 564: key[k].sm1 = (6);
  2568  000870  5019               	movf	ikey_parsing@k,w,c
  2569  000872  0D10               	mullw	16
  2570  000874  50F3               	movf	prodl,w,c
  2571  000876  0F66               	addlw	low (_key+6)
  2572  000878  6ED9               	movwf	fsr2l,c
  2573  00087A  6ADA               	clrf	fsr2h,c
  2574  00087C  0E06               	movlw	6
  2575  00087E  D037               	goto	L2
  2576  000880                     l2621:
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;ikb.c: 566: else;ikb.c: 567: {;ikb.c: 568: key[k].sm1 = (1);
  2580  000880  5019               	movf	ikey_parsing@k,w,c
  2581  000882  0D10               	mullw	16
  2582  000884  50F3               	movf	prodl,w,c
  2583  000886  0F66               	addlw	low (_key+6)
  2584  000888  6ED9               	movwf	fsr2l,c
  2585  00088A  6ADA               	clrf	fsr2h,c
  2586  00088C  0E01               	movlw	1
  2587  00088E  D02F               	goto	L2
  2588  000890                     l2623:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;ikb.c: 571: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2592  000890  5019               	movf	ikey_parsing@k,w,c
  2593  000892  0D10               	mullw	16
  2594  000894  50F3               	movf	prodl,w,c
  2595  000896  0F6A               	addlw	low (_key+10)
  2596  000898  6ED9               	movwf	fsr2l,c
  2597  00089A  6ADA               	clrf	fsr2h,c
  2598  00089C  A4DF               	btfss	indf2,2,c
  2599  00089E  D008               	goto	l2627
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;ikb.c: 572: {;ikb.c: 573: key[k].sm1 = (5);
  2603  0008A0  5019               	movf	ikey_parsing@k,w,c
  2604  0008A2  0D10               	mullw	16
  2605  0008A4  50F3               	movf	prodl,w,c
  2606  0008A6  0F66               	addlw	low (_key+6)
  2607  0008A8  6ED9               	movwf	fsr2l,c
  2608  0008AA  6ADA               	clrf	fsr2h,c
  2609  0008AC  0E05               	movlw	5
  2610  0008AE  D01F               	goto	L2
  2611  0008B0                     l2627:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;ikb.c: 576: else if (key[k].bf.AtTimeExpired)
  2615  0008B0  5019               	movf	ikey_parsing@k,w,c
  2616  0008B2  0D10               	mullw	16
  2617  0008B4  50F3               	movf	prodl,w,c
  2618  0008B6  0F6A               	addlw	low (_key+10)
  2619  0008B8  6ED9               	movwf	fsr2l,c
  2620  0008BA  6ADA               	clrf	fsr2h,c
  2621  0008BC  A6DF               	btfss	indf2,3,c
  2622  0008BE  D008               	goto	l2631
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;ikb.c: 577: {;ikb.c: 578: key[k].sm1 = (3);
  2626  0008C0  5019               	movf	ikey_parsing@k,w,c
  2627  0008C2  0D10               	mullw	16
  2628  0008C4  50F3               	movf	prodl,w,c
  2629  0008C6  0F66               	addlw	low (_key+6)
  2630  0008C8  6ED9               	movwf	fsr2l,c
  2631  0008CA  6ADA               	clrf	fsr2h,c
  2632  0008CC  0E03               	movlw	3
  2633  0008CE  D00F               	goto	L2
  2634  0008D0                     l2631:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;ikb.c: 580: else if (key[k].bf.AtTimeExpired2)
  2638  0008D0  5019               	movf	ikey_parsing@k,w,c
  2639  0008D2  0D10               	mullw	16
  2640  0008D4  50F3               	movf	prodl,w,c
  2641  0008D6  0F6A               	addlw	low (_key+10)
  2642  0008D8  6ED9               	movwf	fsr2l,c
  2643  0008DA  6ADA               	clrf	fsr2h,c
  2644  0008DC  A8DF               	btfss	indf2,4,c
  2645  0008DE  D008               	goto	l354
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;ikb.c: 581: {;ikb.c: 582: key[k].sm1 = (4);
  2649  0008E0  5019               	movf	ikey_parsing@k,w,c
  2650  0008E2  0D10               	mullw	16
  2651  0008E4  50F3               	movf	prodl,w,c
  2652  0008E6  0F66               	addlw	low (_key+6)
  2653  0008E8  6ED9               	movwf	fsr2l,c
  2654  0008EA  6ADA               	clrf	fsr2h,c
  2655  0008EC  0E04               	movlw	4
  2656  0008EE                     L2:
  2657  0008EE  6EDF               	movwf	indf2,c
  2658  0008F0                     l354:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;ikb.c: 583: };ikb.c: 586: key[k].bf.InProcessing = 1;
  2662  0008F0  5019               	movf	ikey_parsing@k,w,c
  2663  0008F2  0D10               	mullw	16
  2664  0008F4  50F3               	movf	prodl,w,c
  2665  0008F6  0F6B               	addlw	low (_key+11)
  2666  0008F8  6ED9               	movwf	fsr2l,c
  2667  0008FA  6ADA               	clrf	fsr2h,c
  2668  0008FC  82DF               	bsf	indf2,1,c
  2669                           
  2670                           ;ikb.c: 591: if (key[k].num_group_x != 0)
  2671  0008FE  5019               	movf	ikey_parsing@k,w,c
  2672  000900  0D10               	mullw	16
  2673  000902  50F3               	movf	prodl,w,c
  2674  000904  0F69               	addlw	low (_key+9)
  2675  000906  6ED9               	movwf	fsr2l,c
  2676  000908  6ADA               	clrf	fsr2h,c
  2677  00090A  50DF               	movf	indf2,w,c
  2678  00090C  B4D8               	btfsc	status,2,c
  2679  00090E  D015               	goto	l348
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;ikb.c: 592: {;ikb.c: 593: group_x[ key[k].num_group_x ] = 1;
  2683  000910  5019               	movf	ikey_parsing@k,w,c
  2684  000912  0D10               	mullw	16
  2685  000914  50F3               	movf	prodl,w,c
  2686  000916  0F69               	addlw	low (_key+9)
  2687  000918  6ED9               	movwf	fsr2l,c
  2688  00091A  6ADA               	clrf	fsr2h,c
  2689  00091C  50DF               	movf	indf2,w,c
  2690  00091E  6E15               	movwf	??_ikey_parsing& (0+255),c
  2691  000920  5015               	movf	??_ikey_parsing,w,c
  2692  000922  0F48               	addlw	low _group_x
  2693  000924  6ED9               	movwf	fsr2l,c
  2694  000926  6ADA               	clrf	fsr2h,c
  2695  000928  0E01               	movlw	1
  2696  00092A  6EDF               	movwf	indf2,c
  2697                           
  2698                           ;ikb.c: 594: key[k].bf.OwnerOfGroup = 1;
  2699  00092C  5019               	movf	ikey_parsing@k,w,c
  2700  00092E  0D10               	mullw	16
  2701  000930  50F3               	movf	prodl,w,c
  2702  000932  0F6B               	addlw	low (_key+11)
  2703  000934  6ED9               	movwf	fsr2l,c
  2704  000936  6ADA               	clrf	fsr2h,c
  2705  000938  80DF               	bsf	indf2,0,c
  2706  00093A                     l348:
  2707                           
  2708                           ;ikb.c: 595: };ikb.c: 597: };ikb.c: 598: };ikb.c: 599: };ikb.c: 603: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2709  00093A  5019               	movf	ikey_parsing@k,w,c
  2710  00093C  0D10               	mullw	16
  2711  00093E  50F3               	movf	prodl,w,c
  2712  000940  0F66               	addlw	low (_key+6)
  2713  000942  6ED9               	movwf	fsr2l,c
  2714  000944  6ADA               	clrf	fsr2h,c
  2715  000946  0E05               	movlw	5
  2716  000948  64DF               	cpfsgt	indf2,c
  2717  00094A  D024               	goto	l361
  2718  00094C  5019               	movf	ikey_parsing@k,w,c
  2719  00094E  0D10               	mullw	16
  2720  000950  50F3               	movf	prodl,w,c
  2721  000952  0F66               	addlw	low (_key+6)
  2722  000954  6ED9               	movwf	fsr2l,c
  2723  000956  6ADA               	clrf	fsr2h,c
  2724  000958  0E09               	movlw	9
  2725  00095A  60DF               	cpfslt	indf2,c
  2726  00095C  D01B               	goto	l361
  2727                           
  2728                           ;ikb.c: 604: {;ikb.c: 605: if (key[k].bf.state == 0)
  2729  00095E  5019               	movf	ikey_parsing@k,w,c
  2730  000960  0D10               	mullw	16
  2731  000962  50F3               	movf	prodl,w,c
  2732  000964  0F6A               	addlw	low (_key+10)
  2733  000966  6ED9               	movwf	fsr2l,c
  2734  000968  6ADA               	clrf	fsr2h,c
  2735  00096A  0100               	movlb	0	; () banked
  2736  00096C  B0DF               	btfsc	indf2,0,c
  2737  00096E  D012               	goto	l361
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;ikb.c: 606: {;ikb.c: 607: key[k].counter1 = 0;
  2741  000970  5019               	movf	ikey_parsing@k,w,c
  2742  000972  0D10               	mullw	16
  2743  000974  50F3               	movf	prodl,w,c
  2744  000976  0F67               	addlw	low (_key+7)
  2745  000978  6ED9               	movwf	fsr2l,c
  2746  00097A  6ADA               	clrf	fsr2h,c
  2747  00097C  0E00               	movlw	0
  2748  00097E  6EDE               	movwf	postinc2,c
  2749  000980  0E00               	movlw	0
  2750  000982  6EDD               	movwf	postdec2,c
  2751                           
  2752                           ;ikb.c: 608: key[k].sm1 = (2);
  2753  000984  5019               	movf	ikey_parsing@k,w,c
  2754  000986  0D10               	mullw	16
  2755  000988  50F3               	movf	prodl,w,c
  2756  00098A  0F66               	addlw	low (_key+6)
  2757  00098C  6ED9               	movwf	fsr2l,c
  2758  00098E  6ADA               	clrf	fsr2h,c
  2759  000990  0E02               	movlw	2
  2760  000992  6EDF               	movwf	indf2,c
  2761  000994                     l361:
  2762                           
  2763                           ;ikb.c: 609: };ikb.c: 610: };ikb.c: 612: if (key[k].sm1 == (6) )
  2764  000994  5019               	movf	ikey_parsing@k,w,c
  2765  000996  0D10               	mullw	16
  2766  000998  50F3               	movf	prodl,w,c
  2767  00099A  0F66               	addlw	low (_key+6)
  2768  00099C  6ED9               	movwf	fsr2l,c
  2769  00099E  6ADA               	clrf	fsr2h,c
  2770  0009A0  0E06               	movlw	6
  2771  0009A2  18DE               	xorwf	postinc2,w,c
  2772  0009A4  A4D8               	btfss	status,2,c
  2773  0009A6  D027               	goto	l363
  2774                           
  2775                           ;ikb.c: 613: {;ikb.c: 614: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2776  0009A8  5019               	movf	ikey_parsing@k,w,c
  2777  0009AA  0D10               	mullw	16
  2778  0009AC  50F3               	movf	prodl,w,c
  2779  0009AE  0F6C               	addlw	low (_key+12)
  2780  0009B0  6ED9               	movwf	fsr2l,c
  2781  0009B2  6ADA               	clrf	fsr2h,c
  2782  0009B4  5019               	movf	ikey_parsing@k,w,c
  2783  0009B6  0D10               	mullw	16
  2784  0009B8  50F3               	movf	prodl,w,c
  2785  0009BA  0F67               	addlw	low (_key+7)
  2786  0009BC  6EE1               	movwf	fsr1l,c
  2787  0009BE  6AE2               	clrf	fsr1h,c
  2788  0009C0  2AE6               	incf	postinc1,f,c
  2789  0009C2  0E00               	movlw	0
  2790  0009C4  22E5               	addwfc	postdec1,f,c
  2791  0009C6  50DE               	movf	postinc2,w,c
  2792  0009C8  5CE6               	subwf	postinc1,w,c
  2793  0009CA  50DE               	movf	postinc2,w,c
  2794  0009CC  58E6               	subwfb	postinc1,w,c
  2795  0009CE  A0D8               	btfss	status,0,c
  2796  0009D0  D012               	goto	l363
  2797                           
  2798                           ;ikb.c: 615: {;ikb.c: 616: key[k].counter1 =0;
  2799  0009D2  5019               	movf	ikey_parsing@k,w,c
  2800  0009D4  0D10               	mullw	16
  2801  0009D6  50F3               	movf	prodl,w,c
  2802  0009D8  0F67               	addlw	low (_key+7)
  2803  0009DA  6ED9               	movwf	fsr2l,c
  2804  0009DC  6ADA               	clrf	fsr2h,c
  2805  0009DE  0E00               	movlw	0
  2806  0009E0  6EDE               	movwf	postinc2,c
  2807  0009E2  0E00               	movlw	0
  2808  0009E4  6EDD               	movwf	postdec2,c
  2809                           
  2810                           ;ikb.c: 617: key[k].sm1 = (7);
  2811  0009E6  5019               	movf	ikey_parsing@k,w,c
  2812  0009E8  0D10               	mullw	16
  2813  0009EA  50F3               	movf	prodl,w,c
  2814  0009EC  0F66               	addlw	low (_key+6)
  2815  0009EE  6ED9               	movwf	fsr2l,c
  2816  0009F0  6ADA               	clrf	fsr2h,c
  2817  0009F2  0E07               	movlw	7
  2818  0009F4  6EDF               	movwf	indf2,c
  2819  0009F6                     l363:
  2820                           
  2821                           ;ikb.c: 618: };ikb.c: 619: };ikb.c: 620: if (key[k].sm1 == (7))
  2822  0009F6  5019               	movf	ikey_parsing@k,w,c
  2823  0009F8  0D10               	mullw	16
  2824  0009FA  50F3               	movf	prodl,w,c
  2825  0009FC  0F66               	addlw	low (_key+6)
  2826  0009FE  6ED9               	movwf	fsr2l,c
  2827  000A00  6ADA               	clrf	fsr2h,c
  2828  000A02  0E07               	movlw	7
  2829  000A04  18DE               	xorwf	postinc2,w,c
  2830  000A06  A4D8               	btfss	status,2,c
  2831  000A08  D018               	goto	l365
  2832                           
  2833                           ;ikb.c: 621: {;ikb.c: 622: if (key[k].bf.ReadyToRead == 0)
  2834  000A0A  5019               	movf	ikey_parsing@k,w,c
  2835  000A0C  0D10               	mullw	16
  2836  000A0E  50F3               	movf	prodl,w,c
  2837  000A10  0F6A               	addlw	low (_key+10)
  2838  000A12  6ED9               	movwf	fsr2l,c
  2839  000A14  6ADA               	clrf	fsr2h,c
  2840  000A16  0100               	movlb	0	; () banked
  2841  000A18  BCDF               	btfsc	indf2,6,c
  2842  000A1A  D00F               	goto	l365
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;ikb.c: 623: {;ikb.c: 624: key[k].bf.ReadyToRead = 1;
  2846  000A1C  5019               	movf	ikey_parsing@k,w,c
  2847  000A1E  0D10               	mullw	16
  2848  000A20  50F3               	movf	prodl,w,c
  2849  000A22  0F6A               	addlw	low (_key+10)
  2850  000A24  6ED9               	movwf	fsr2l,c
  2851  000A26  6ADA               	clrf	fsr2h,c
  2852  000A28  8CDF               	bsf	indf2,6,c
  2853                           
  2854                           ;ikb.c: 625: key[k].sm1 = (8);
  2855  000A2A  5019               	movf	ikey_parsing@k,w,c
  2856  000A2C  0D10               	mullw	16
  2857  000A2E  50F3               	movf	prodl,w,c
  2858  000A30  0F66               	addlw	low (_key+6)
  2859  000A32  6ED9               	movwf	fsr2l,c
  2860  000A34  6ADA               	clrf	fsr2h,c
  2861  000A36  0E08               	movlw	8
  2862  000A38  6EDF               	movwf	indf2,c
  2863  000A3A                     l365:
  2864                           
  2865                           ;ikb.c: 626: };ikb.c: 627: };ikb.c: 628: if (key[k].sm1 == (8))
  2866  000A3A  5019               	movf	ikey_parsing@k,w,c
  2867  000A3C  0D10               	mullw	16
  2868  000A3E  50F3               	movf	prodl,w,c
  2869  000A40  0F66               	addlw	low (_key+6)
  2870  000A42  6ED9               	movwf	fsr2l,c
  2871  000A44  6ADA               	clrf	fsr2h,c
  2872  000A46  0E08               	movlw	8
  2873  000A48  18DE               	xorwf	postinc2,w,c
  2874  000A4A  A4D8               	btfss	status,2,c
  2875  000A4C  D027               	goto	l367
  2876                           
  2877                           ;ikb.c: 629: {;ikb.c: 630: if ( ++key[k].counter1 >= key[k].repp.after_start)
  2878  000A4E  5019               	movf	ikey_parsing@k,w,c
  2879  000A50  0D10               	mullw	16
  2880  000A52  50F3               	movf	prodl,w,c
  2881  000A54  0F6E               	addlw	low (_key+14)
  2882  000A56  6ED9               	movwf	fsr2l,c
  2883  000A58  6ADA               	clrf	fsr2h,c
  2884  000A5A  5019               	movf	ikey_parsing@k,w,c
  2885  000A5C  0D10               	mullw	16
  2886  000A5E  50F3               	movf	prodl,w,c
  2887  000A60  0F67               	addlw	low (_key+7)
  2888  000A62  6EE1               	movwf	fsr1l,c
  2889  000A64  6AE2               	clrf	fsr1h,c
  2890  000A66  2AE6               	incf	postinc1,f,c
  2891  000A68  0E00               	movlw	0
  2892  000A6A  22E5               	addwfc	postdec1,f,c
  2893  000A6C  50DE               	movf	postinc2,w,c
  2894  000A6E  5CE6               	subwf	postinc1,w,c
  2895  000A70  50DE               	movf	postinc2,w,c
  2896  000A72  58E6               	subwfb	postinc1,w,c
  2897  000A74  A0D8               	btfss	status,0,c
  2898  000A76  D012               	goto	l367
  2899                           
  2900                           ;ikb.c: 631: {;ikb.c: 632: key[k].counter1 = 0;
  2901  000A78  5019               	movf	ikey_parsing@k,w,c
  2902  000A7A  0D10               	mullw	16
  2903  000A7C  50F3               	movf	prodl,w,c
  2904  000A7E  0F67               	addlw	low (_key+7)
  2905  000A80  6ED9               	movwf	fsr2l,c
  2906  000A82  6ADA               	clrf	fsr2h,c
  2907  000A84  0E00               	movlw	0
  2908  000A86  6EDE               	movwf	postinc2,c
  2909  000A88  0E00               	movlw	0
  2910  000A8A  6EDD               	movwf	postdec2,c
  2911                           
  2912                           ;ikb.c: 633: key[k].sm1 = (7);
  2913  000A8C  5019               	movf	ikey_parsing@k,w,c
  2914  000A8E  0D10               	mullw	16
  2915  000A90  50F3               	movf	prodl,w,c
  2916  000A92  0F66               	addlw	low (_key+6)
  2917  000A94  6ED9               	movwf	fsr2l,c
  2918  000A96  6ADA               	clrf	fsr2h,c
  2919  000A98  0E07               	movlw	7
  2920  000A9A  6EDF               	movwf	indf2,c
  2921  000A9C                     l367:
  2922                           
  2923                           ;ikb.c: 634: };ikb.c: 635: };ikb.c: 637: if (key[k].sm1 == (5) )
  2924  000A9C  5019               	movf	ikey_parsing@k,w,c
  2925  000A9E  0D10               	mullw	16
  2926  000AA0  50F3               	movf	prodl,w,c
  2927  000AA2  0F66               	addlw	low (_key+6)
  2928  000AA4  6ED9               	movwf	fsr2l,c
  2929  000AA6  6ADA               	clrf	fsr2h,c
  2930  000AA8  0E05               	movlw	5
  2931  000AAA  18DE               	xorwf	postinc2,w,c
  2932  000AAC  A4D8               	btfss	status,2,c
  2933  000AAE  D018               	goto	l369
  2934                           
  2935                           ;ikb.c: 638: {;ikb.c: 639: if (key[k].bf.state == 0)
  2936  000AB0  5019               	movf	ikey_parsing@k,w,c
  2937  000AB2  0D10               	mullw	16
  2938  000AB4  50F3               	movf	prodl,w,c
  2939  000AB6  0F6A               	addlw	low (_key+10)
  2940  000AB8  6ED9               	movwf	fsr2l,c
  2941  000ABA  6ADA               	clrf	fsr2h,c
  2942  000ABC  0100               	movlb	0	; () banked
  2943  000ABE  B0DF               	btfsc	indf2,0,c
  2944  000AC0  D00F               	goto	l369
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;ikb.c: 640: {;ikb.c: 641: key[k].bf.ReadyToRead = 1;
  2948  000AC2  5019               	movf	ikey_parsing@k,w,c
  2949  000AC4  0D10               	mullw	16
  2950  000AC6  50F3               	movf	prodl,w,c
  2951  000AC8  0F6A               	addlw	low (_key+10)
  2952  000ACA  6ED9               	movwf	fsr2l,c
  2953  000ACC  6ADA               	clrf	fsr2h,c
  2954  000ACE  8CDF               	bsf	indf2,6,c
  2955                           
  2956                           ;ikb.c: 642: key[k].sm1 = (2);
  2957  000AD0  5019               	movf	ikey_parsing@k,w,c
  2958  000AD2  0D10               	mullw	16
  2959  000AD4  50F3               	movf	prodl,w,c
  2960  000AD6  0F66               	addlw	low (_key+6)
  2961  000AD8  6ED9               	movwf	fsr2l,c
  2962  000ADA  6ADA               	clrf	fsr2h,c
  2963  000ADC  0E02               	movlw	2
  2964  000ADE  6EDF               	movwf	indf2,c
  2965  000AE0                     l369:
  2966                           
  2967                           ;ikb.c: 643: };ikb.c: 644: };ikb.c: 646: if (key[k].sm1 == (3) )
  2968  000AE0  5019               	movf	ikey_parsing@k,w,c
  2969  000AE2  0D10               	mullw	16
  2970  000AE4  50F3               	movf	prodl,w,c
  2971  000AE6  0F66               	addlw	low (_key+6)
  2972  000AE8  6ED9               	movwf	fsr2l,c
  2973  000AEA  6ADA               	clrf	fsr2h,c
  2974  000AEC  0E03               	movlw	3
  2975  000AEE  18DE               	xorwf	postinc2,w,c
  2976  000AF0  A4D8               	btfss	status,2,c
  2977  000AF2  D09C               	goto	l371
  2978                           
  2979                           ;ikb.c: 647: {;ikb.c: 648: key[k].counter1++;
  2980  000AF4  5019               	movf	ikey_parsing@k,w,c
  2981  000AF6  0D10               	mullw	16
  2982  000AF8  50F3               	movf	prodl,w,c
  2983  000AFA  0F67               	addlw	low (_key+7)
  2984  000AFC  6ED9               	movwf	fsr2l,c
  2985  000AFE  6ADA               	clrf	fsr2h,c
  2986  000B00  2ADE               	incf	postinc2,f,c
  2987  000B02  0E00               	movlw	0
  2988  000B04  22DD               	addwfc	postdec2,f,c
  2989                           
  2990                           ;ikb.c: 650: if (key[k].bf.state == 0)
  2991  000B06  5019               	movf	ikey_parsing@k,w,c
  2992  000B08  0D10               	mullw	16
  2993  000B0A  50F3               	movf	prodl,w,c
  2994  000B0C  0F6A               	addlw	low (_key+10)
  2995  000B0E  6ED9               	movwf	fsr2l,c
  2996  000B10  6ADA               	clrf	fsr2h,c
  2997  000B12  0100               	movlb	0	; () banked
  2998  000B14  B0DF               	btfsc	indf2,0,c
  2999  000B16  D03D               	goto	l2665
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;ikb.c: 651: {;ikb.c: 652: if (key[k].counter1 <= (1000E-3/5E-3) )
  3003  000B18  0E00               	movlw	0
  3004  000B1A  6E0C               	movwf	___ftge@ff1,c
  3005  000B1C  0E48               	movlw	72
  3006  000B1E  6E0D               	movwf	___ftge@ff1+1,c
  3007  000B20  0E43               	movlw	67
  3008  000B22  6E0E               	movwf	___ftge@ff1+2,c
  3009  000B24  5019               	movf	ikey_parsing@k,w,c
  3010  000B26  0D10               	mullw	16
  3011  000B28  50F3               	movf	prodl,w,c
  3012  000B2A  0F67               	addlw	low (_key+7)
  3013  000B2C  6ED9               	movwf	fsr2l,c
  3014  000B2E  6ADA               	clrf	fsr2h,c
  3015  000B30  CFDE F009          	movff	postinc2,___lwtoft@c
  3016  000B34  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3017  000B38  EC11  F00F         	call	___lwtoft	;wreg free
  3018  000B3C  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3019  000B40  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3020  000B44  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3021  000B48  ECB9  F00C         	call	___ftge	;wreg free
  3022  000B4C  A0D8               	btfss	status,0,c
  3023  000B4E  D021               	goto	l2665
  3024                           
  3025                           ;ikb.c: 653: {;ikb.c: 654: key[k].counter1 = 0;
  3026  000B50  5019               	movf	ikey_parsing@k,w,c
  3027  000B52  0D10               	mullw	16
  3028  000B54  50F3               	movf	prodl,w,c
  3029  000B56  0F67               	addlw	low (_key+7)
  3030  000B58  6ED9               	movwf	fsr2l,c
  3031  000B5A  6ADA               	clrf	fsr2h,c
  3032  000B5C  0E00               	movlw	0
  3033  000B5E  6EDE               	movwf	postinc2,c
  3034  000B60  0E00               	movlw	0
  3035  000B62  6EDD               	movwf	postdec2,c
  3036                           
  3037                           ;ikb.c: 656: key[k].bf.ReadyToRead = 1;
  3038  000B64  5019               	movf	ikey_parsing@k,w,c
  3039  000B66  0D10               	mullw	16
  3040  000B68  50F3               	movf	prodl,w,c
  3041  000B6A  0F6A               	addlw	low (_key+10)
  3042  000B6C  6ED9               	movwf	fsr2l,c
  3043  000B6E  6ADA               	clrf	fsr2h,c
  3044  000B70  0100               	movlb	0	; () banked
  3045  000B72  8CDF               	bsf	indf2,6,c
  3046                           
  3047                           ;ikb.c: 657: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3048  000B74  5019               	movf	ikey_parsing@k,w,c
  3049  000B76  0D10               	mullw	16
  3050  000B78  50F3               	movf	prodl,w,c
  3051  000B7A  0F6A               	addlw	low (_key+10)
  3052  000B7C  6ED9               	movwf	fsr2l,c
  3053  000B7E  6ADA               	clrf	fsr2h,c
  3054  000B80  9EDF               	bcf	indf2,7,c
  3055                           
  3056                           ;ikb.c: 659: key[k].sm1 = (2);
  3057  000B82  5019               	movf	ikey_parsing@k,w,c
  3058  000B84  0D10               	mullw	16
  3059  000B86  50F3               	movf	prodl,w,c
  3060  000B88  0F66               	addlw	low (_key+6)
  3061  000B8A  6ED9               	movwf	fsr2l,c
  3062  000B8C  6ADA               	clrf	fsr2h,c
  3063  000B8E  0E02               	movlw	2
  3064  000B90  6EDF               	movwf	indf2,c
  3065  000B92                     l2665:
  3066                           
  3067                           ;ikb.c: 660: };ikb.c: 661: };ikb.c: 663: if (key[k].counter1 > (1000E-3/5E-3) )
  3068  000B92  0E00               	movlw	0
  3069  000B94  6E0C               	movwf	___ftge@ff1,c
  3070  000B96  0E48               	movlw	72
  3071  000B98  6E0D               	movwf	___ftge@ff1+1,c
  3072  000B9A  0E43               	movlw	67
  3073  000B9C  6E0E               	movwf	___ftge@ff1+2,c
  3074  000B9E  5019               	movf	ikey_parsing@k,w,c
  3075  000BA0  0D10               	mullw	16
  3076  000BA2  50F3               	movf	prodl,w,c
  3077  000BA4  0F67               	addlw	low (_key+7)
  3078  000BA6  6ED9               	movwf	fsr2l,c
  3079  000BA8  6ADA               	clrf	fsr2h,c
  3080  000BAA  CFDE F009          	movff	postinc2,___lwtoft@c
  3081  000BAE  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3082  000BB2  EC11  F00F         	call	___lwtoft	;wreg free
  3083  000BB6  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3084  000BBA  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3085  000BBE  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3086  000BC2  ECB9  F00C         	call	___ftge	;wreg free
  3087  000BC6  B0D8               	btfsc	status,0,c
  3088  000BC8  D031               	goto	l371
  3089                           
  3090                           ;ikb.c: 664: {;ikb.c: 665: key[k].counter1 = 0x0000;
  3091  000BCA  5019               	movf	ikey_parsing@k,w,c
  3092  000BCC  0D10               	mullw	16
  3093  000BCE  50F3               	movf	prodl,w,c
  3094  000BD0  0F67               	addlw	low (_key+7)
  3095  000BD2  6ED9               	movwf	fsr2l,c
  3096  000BD4  6ADA               	clrf	fsr2h,c
  3097  000BD6  0E00               	movlw	0
  3098  000BD8  6EDE               	movwf	postinc2,c
  3099  000BDA  0E00               	movlw	0
  3100  000BDC  6EDD               	movwf	postdec2,c
  3101                           
  3102                           ;ikb.c: 667: key[k].bf.ReadyToRead = 1;
  3103  000BDE  5019               	movf	ikey_parsing@k,w,c
  3104  000BE0  0D10               	mullw	16
  3105  000BE2  50F3               	movf	prodl,w,c
  3106  000BE4  0F6A               	addlw	low (_key+10)
  3107  000BE6  6ED9               	movwf	fsr2l,c
  3108  000BE8  6ADA               	clrf	fsr2h,c
  3109  000BEA  0100               	movlb	0	; () banked
  3110  000BEC  8CDF               	bsf	indf2,6,c
  3111                           
  3112                           ;ikb.c: 668: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3113  000BEE  5019               	movf	ikey_parsing@k,w,c
  3114  000BF0  0D10               	mullw	16
  3115  000BF2  50F3               	movf	prodl,w,c
  3116  000BF4  0F6A               	addlw	low (_key+10)
  3117  000BF6  6ED9               	movwf	fsr2l,c
  3118  000BF8  6ADA               	clrf	fsr2h,c
  3119  000BFA  8EDF               	bsf	indf2,7,c
  3120                           
  3121                           ;ikb.c: 670: if (!key[k].bf.Reptt)
  3122  000BFC  5019               	movf	ikey_parsing@k,w,c
  3123  000BFE  0D10               	mullw	16
  3124  000C00  50F3               	movf	prodl,w,c
  3125  000C02  0F6A               	addlw	low (_key+10)
  3126  000C04  6ED9               	movwf	fsr2l,c
  3127  000C06  6ADA               	clrf	fsr2h,c
  3128  000C08  BADF               	btfsc	indf2,5,c
  3129  000C0A  D008               	goto	l2671
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;ikb.c: 671: {;ikb.c: 672: key[k].sm1 = (1);
  3133  000C0C  5019               	movf	ikey_parsing@k,w,c
  3134  000C0E  0D10               	mullw	16
  3135  000C10  50F3               	movf	prodl,w,c
  3136  000C12  0F66               	addlw	low (_key+6)
  3137  000C14  6ED9               	movwf	fsr2l,c
  3138  000C16  6ADA               	clrf	fsr2h,c
  3139  000C18  0E01               	movlw	1
  3140  000C1A  D007               	goto	L3
  3141  000C1C                     l2671:
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;ikb.c: 674: else;ikb.c: 675: {;ikb.c: 676: key[k].sm1 = (8);
  3145  000C1C  5019               	movf	ikey_parsing@k,w,c
  3146  000C1E  0D10               	mullw	16
  3147  000C20  50F3               	movf	prodl,w,c
  3148  000C22  0F66               	addlw	low (_key+6)
  3149  000C24  6ED9               	movwf	fsr2l,c
  3150  000C26  6ADA               	clrf	fsr2h,c
  3151  000C28  0E08               	movlw	8
  3152  000C2A                     L3:
  3153  000C2A  6EDF               	movwf	indf2,c
  3154  000C2C                     l371:
  3155                           
  3156                           ;ikb.c: 677: };ikb.c: 678: };ikb.c: 679: };ikb.c: 684: if (key[k].sm1 == (4))
  3157  000C2C  5019               	movf	ikey_parsing@k,w,c
  3158  000C2E  0D10               	mullw	16
  3159  000C30  50F3               	movf	prodl,w,c
  3160  000C32  0F66               	addlw	low (_key+6)
  3161  000C34  6ED9               	movwf	fsr2l,c
  3162  000C36  6ADA               	clrf	fsr2h,c
  3163  000C38  0E04               	movlw	4
  3164  000C3A  18DE               	xorwf	postinc2,w,c
  3165  000C3C  A4D8               	btfss	status,2,c
  3166  000C3E  D08C               	goto	l377
  3167                           
  3168                           ;ikb.c: 685: {;ikb.c: 686: key[k].counter1++;
  3169  000C40  5019               	movf	ikey_parsing@k,w,c
  3170  000C42  0D10               	mullw	16
  3171  000C44  50F3               	movf	prodl,w,c
  3172  000C46  0F67               	addlw	low (_key+7)
  3173  000C48  6ED9               	movwf	fsr2l,c
  3174  000C4A  6ADA               	clrf	fsr2h,c
  3175  000C4C  2ADE               	incf	postinc2,f,c
  3176  000C4E  0E00               	movlw	0
  3177  000C50  22DD               	addwfc	postdec2,f,c
  3178                           
  3179                           ;ikb.c: 688: if (key[k].bf.state == 0)
  3180  000C52  5019               	movf	ikey_parsing@k,w,c
  3181  000C54  0D10               	mullw	16
  3182  000C56  50F3               	movf	prodl,w,c
  3183  000C58  0F6A               	addlw	low (_key+10)
  3184  000C5A  6ED9               	movwf	fsr2l,c
  3185  000C5C  6ADA               	clrf	fsr2h,c
  3186  000C5E  0100               	movlb	0	; () banked
  3187  000C60  B0DF               	btfsc	indf2,0,c
  3188  000C62  D03D               	goto	l2679
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;ikb.c: 689: {;ikb.c: 690: if (key[k].counter1 <= (1000E-3/5E-3))
  3192  000C64  0E00               	movlw	0
  3193  000C66  6E0C               	movwf	___ftge@ff1,c
  3194  000C68  0E48               	movlw	72
  3195  000C6A  6E0D               	movwf	___ftge@ff1+1,c
  3196  000C6C  0E43               	movlw	67
  3197  000C6E  6E0E               	movwf	___ftge@ff1+2,c
  3198  000C70  5019               	movf	ikey_parsing@k,w,c
  3199  000C72  0D10               	mullw	16
  3200  000C74  50F3               	movf	prodl,w,c
  3201  000C76  0F67               	addlw	low (_key+7)
  3202  000C78  6ED9               	movwf	fsr2l,c
  3203  000C7A  6ADA               	clrf	fsr2h,c
  3204  000C7C  CFDE F009          	movff	postinc2,___lwtoft@c
  3205  000C80  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3206  000C84  EC11  F00F         	call	___lwtoft	;wreg free
  3207  000C88  C009  F00F         	movff	?___lwtoft,___ftge@ff2
  3208  000C8C  C00A  F010         	movff	?___lwtoft+1,___ftge@ff2+1
  3209  000C90  C00B  F011         	movff	?___lwtoft+2,___ftge@ff2+2
  3210  000C94  ECB9  F00C         	call	___ftge	;wreg free
  3211  000C98  A0D8               	btfss	status,0,c
  3212  000C9A  D021               	goto	l2679
  3213                           
  3214                           ;ikb.c: 691: {;ikb.c: 692: key[k].counter1 = 0;
  3215  000C9C  5019               	movf	ikey_parsing@k,w,c
  3216  000C9E  0D10               	mullw	16
  3217  000CA0  50F3               	movf	prodl,w,c
  3218  000CA2  0F67               	addlw	low (_key+7)
  3219  000CA4  6ED9               	movwf	fsr2l,c
  3220  000CA6  6ADA               	clrf	fsr2h,c
  3221  000CA8  0E00               	movlw	0
  3222  000CAA  6EDE               	movwf	postinc2,c
  3223  000CAC  0E00               	movlw	0
  3224  000CAE  6EDD               	movwf	postdec2,c
  3225                           
  3226                           ;ikb.c: 694: key[k].bf.ReadyToRead = 1;
  3227  000CB0  5019               	movf	ikey_parsing@k,w,c
  3228  000CB2  0D10               	mullw	16
  3229  000CB4  50F3               	movf	prodl,w,c
  3230  000CB6  0F6A               	addlw	low (_key+10)
  3231  000CB8  6ED9               	movwf	fsr2l,c
  3232  000CBA  6ADA               	clrf	fsr2h,c
  3233  000CBC  0100               	movlb	0	; () banked
  3234  000CBE  8CDF               	bsf	indf2,6,c
  3235                           
  3236                           ;ikb.c: 695: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3237  000CC0  5019               	movf	ikey_parsing@k,w,c
  3238  000CC2  0D10               	mullw	16
  3239  000CC4  50F3               	movf	prodl,w,c
  3240  000CC6  0F6A               	addlw	low (_key+10)
  3241  000CC8  6ED9               	movwf	fsr2l,c
  3242  000CCA  6ADA               	clrf	fsr2h,c
  3243  000CCC  9EDF               	bcf	indf2,7,c
  3244                           
  3245                           ;ikb.c: 697: key[k].sm1 = (2);
  3246  000CCE  5019               	movf	ikey_parsing@k,w,c
  3247  000CD0  0D10               	mullw	16
  3248  000CD2  50F3               	movf	prodl,w,c
  3249  000CD4  0F66               	addlw	low (_key+6)
  3250  000CD6  6ED9               	movwf	fsr2l,c
  3251  000CD8  6ADA               	clrf	fsr2h,c
  3252  000CDA  0E02               	movlw	2
  3253  000CDC  6EDF               	movwf	indf2,c
  3254  000CDE                     l2679:
  3255                           
  3256                           ;ikb.c: 698: };ikb.c: 699: };ikb.c: 702: if (key[k].counter1 >= (3000E-3/5E-3))
  3257  000CDE  5019               	movf	ikey_parsing@k,w,c
  3258  000CE0  0D10               	mullw	16
  3259  000CE2  50F3               	movf	prodl,w,c
  3260  000CE4  0F67               	addlw	low (_key+7)
  3261  000CE6  6ED9               	movwf	fsr2l,c
  3262  000CE8  6ADA               	clrf	fsr2h,c
  3263  000CEA  CFDE F009          	movff	postinc2,___lwtoft@c
  3264  000CEE  CFDD F00A          	movff	postdec2,___lwtoft@c+1
  3265  000CF2  EC11  F00F         	call	___lwtoft	;wreg free
  3266  000CF6  C009  F00C         	movff	?___lwtoft,___ftge@ff1
  3267  000CFA  C00A  F00D         	movff	?___lwtoft+1,___ftge@ff1+1
  3268  000CFE  C00B  F00E         	movff	?___lwtoft+2,___ftge@ff1+2
  3269  000D02  0E00               	movlw	0
  3270  000D04  6E0F               	movwf	___ftge@ff2,c
  3271  000D06  0E16               	movlw	22
  3272  000D08  6E10               	movwf	___ftge@ff2+1,c
  3273  000D0A  0E44               	movlw	68
  3274  000D0C  6E11               	movwf	___ftge@ff2+2,c
  3275  000D0E  ECB9  F00C         	call	___ftge	;wreg free
  3276  000D12  A0D8               	btfss	status,0,c
  3277  000D14  D021               	goto	l377
  3278                           
  3279                           ;ikb.c: 703: {;ikb.c: 704: key[k].counter1 = 0x0000;
  3280  000D16  5019               	movf	ikey_parsing@k,w,c
  3281  000D18  0D10               	mullw	16
  3282  000D1A  50F3               	movf	prodl,w,c
  3283  000D1C  0F67               	addlw	low (_key+7)
  3284  000D1E  6ED9               	movwf	fsr2l,c
  3285  000D20  6ADA               	clrf	fsr2h,c
  3286  000D22  0E00               	movlw	0
  3287  000D24  6EDE               	movwf	postinc2,c
  3288  000D26  0E00               	movlw	0
  3289  000D28  6EDD               	movwf	postdec2,c
  3290                           
  3291                           ;ikb.c: 706: key[k].bf.ReadyToRead = 1;
  3292  000D2A  5019               	movf	ikey_parsing@k,w,c
  3293  000D2C  0D10               	mullw	16
  3294  000D2E  50F3               	movf	prodl,w,c
  3295  000D30  0F6A               	addlw	low (_key+10)
  3296  000D32  6ED9               	movwf	fsr2l,c
  3297  000D34  6ADA               	clrf	fsr2h,c
  3298  000D36  0100               	movlb	0	; () banked
  3299  000D38  8CDF               	bsf	indf2,6,c
  3300                           
  3301                           ;ikb.c: 707: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3302  000D3A  5019               	movf	ikey_parsing@k,w,c
  3303  000D3C  0D10               	mullw	16
  3304  000D3E  50F3               	movf	prodl,w,c
  3305  000D40  0F6A               	addlw	low (_key+10)
  3306  000D42  6ED9               	movwf	fsr2l,c
  3307  000D44  6ADA               	clrf	fsr2h,c
  3308  000D46  8EDF               	bsf	indf2,7,c
  3309                           
  3310                           ;ikb.c: 710: key[k].sm1 = (1);
  3311  000D48  5019               	movf	ikey_parsing@k,w,c
  3312  000D4A  0D10               	mullw	16
  3313  000D4C  50F3               	movf	prodl,w,c
  3314  000D4E  0F66               	addlw	low (_key+6)
  3315  000D50  6ED9               	movwf	fsr2l,c
  3316  000D52  6ADA               	clrf	fsr2h,c
  3317  000D54  0E01               	movlw	1
  3318  000D56  6EDF               	movwf	indf2,c
  3319  000D58                     l377:
  3320                           
  3321                           ;ikb.c: 711: };ikb.c: 712: };ikb.c: 715: if (key[k].sm1 == (1))
  3322  000D58  5019               	movf	ikey_parsing@k,w,c
  3323  000D5A  0D10               	mullw	16
  3324  000D5C  50F3               	movf	prodl,w,c
  3325  000D5E  0F66               	addlw	low (_key+6)
  3326  000D60  6ED9               	movwf	fsr2l,c
  3327  000D62  6ADA               	clrf	fsr2h,c
  3328  000D64  04DE               	decf	postinc2,w,c
  3329  000D66  A4D8               	btfss	status,2,c
  3330  000D68  D011               	goto	l381
  3331                           
  3332                           ;ikb.c: 716: {;ikb.c: 717: if (key[k].bf.state == 0)
  3333  000D6A  5019               	movf	ikey_parsing@k,w,c
  3334  000D6C  0D10               	mullw	16
  3335  000D6E  50F3               	movf	prodl,w,c
  3336  000D70  0F6A               	addlw	low (_key+10)
  3337  000D72  6ED9               	movwf	fsr2l,c
  3338  000D74  6ADA               	clrf	fsr2h,c
  3339  000D76  0100               	movlb	0	; () banked
  3340  000D78  B0DF               	btfsc	indf2,0,c
  3341  000D7A  D008               	goto	l381
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;ikb.c: 718: {;ikb.c: 719: key[k].sm1 = (2);
  3345  000D7C  5019               	movf	ikey_parsing@k,w,c
  3346  000D7E  0D10               	mullw	16
  3347  000D80  50F3               	movf	prodl,w,c
  3348  000D82  0F66               	addlw	low (_key+6)
  3349  000D84  6ED9               	movwf	fsr2l,c
  3350  000D86  6ADA               	clrf	fsr2h,c
  3351  000D88  0E02               	movlw	2
  3352  000D8A  6EDF               	movwf	indf2,c
  3353  000D8C                     l381:
  3354                           
  3355                           ;ikb.c: 720: };ikb.c: 721: };ikb.c: 723: if (key[k].sm1 == (2))
  3356  000D8C  5019               	movf	ikey_parsing@k,w,c
  3357  000D8E  0D10               	mullw	16
  3358  000D90  50F3               	movf	prodl,w,c
  3359  000D92  0F66               	addlw	low (_key+6)
  3360  000D94  6ED9               	movwf	fsr2l,c
  3361  000D96  6ADA               	clrf	fsr2h,c
  3362  000D98  0E02               	movlw	2
  3363  000D9A  18DE               	xorwf	postinc2,w,c
  3364  000D9C  A4D8               	btfss	status,2,c
  3365  000D9E  D011               	goto	l383
  3366                           
  3367                           ;ikb.c: 724: {;ikb.c: 725: if (key[k].bf.ReadyToRead == 0)
  3368  000DA0  5019               	movf	ikey_parsing@k,w,c
  3369  000DA2  0D10               	mullw	16
  3370  000DA4  50F3               	movf	prodl,w,c
  3371  000DA6  0F6A               	addlw	low (_key+10)
  3372  000DA8  6ED9               	movwf	fsr2l,c
  3373  000DAA  6ADA               	clrf	fsr2h,c
  3374  000DAC  0100               	movlb	0	; () banked
  3375  000DAE  BCDF               	btfsc	indf2,6,c
  3376  000DB0  D008               	goto	l383
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;ikb.c: 726: {;ikb.c: 727: key[k].sm1 = (9);
  3380  000DB2  5019               	movf	ikey_parsing@k,w,c
  3381  000DB4  0D10               	mullw	16
  3382  000DB6  50F3               	movf	prodl,w,c
  3383  000DB8  0F66               	addlw	low (_key+6)
  3384  000DBA  6ED9               	movwf	fsr2l,c
  3385  000DBC  6ADA               	clrf	fsr2h,c
  3386  000DBE  0E09               	movlw	9
  3387  000DC0  6EDF               	movwf	indf2,c
  3388  000DC2                     l383:
  3389                           
  3390                           ;ikb.c: 728: };ikb.c: 729: };ikb.c: 731: if (key[k].sm1 == (9))
  3391  000DC2  5019               	movf	ikey_parsing@k,w,c
  3392  000DC4  0D10               	mullw	16
  3393  000DC6  50F3               	movf	prodl,w,c
  3394  000DC8  0F66               	addlw	low (_key+6)
  3395  000DCA  6ED9               	movwf	fsr2l,c
  3396  000DCC  6ADA               	clrf	fsr2h,c
  3397  000DCE  0E09               	movlw	9
  3398  000DD0  18DE               	xorwf	postinc2,w,c
  3399  000DD2  A4D8               	btfss	status,2,c
  3400  000DD4  D02F               	goto	l2695
  3401                           
  3402                           ;ikb.c: 732: {;ikb.c: 733: if (key[k].num_group_x > 0)
  3403  000DD6  5019               	movf	ikey_parsing@k,w,c
  3404  000DD8  0D10               	mullw	16
  3405  000DDA  50F3               	movf	prodl,w,c
  3406  000DDC  0F69               	addlw	low (_key+9)
  3407  000DDE  6ED9               	movwf	fsr2l,c
  3408  000DE0  6ADA               	clrf	fsr2h,c
  3409  000DE2  50DF               	movf	indf2,w,c
  3410  000DE4  B4D8               	btfsc	status,2,c
  3411  000DE6  D016               	goto	l386
  3412                           
  3413                           ;ikb.c: 734: {;ikb.c: 735: group_x[key[k].num_group_x] = 0;
  3414  000DE8  5019               	movf	ikey_parsing@k,w,c
  3415  000DEA  0D10               	mullw	16
  3416  000DEC  50F3               	movf	prodl,w,c
  3417  000DEE  0F69               	addlw	low (_key+9)
  3418  000DF0  6ED9               	movwf	fsr2l,c
  3419  000DF2  6ADA               	clrf	fsr2h,c
  3420  000DF4  50DF               	movf	indf2,w,c
  3421  000DF6  6E15               	movwf	??_ikey_parsing& (0+255),c
  3422  000DF8  5015               	movf	??_ikey_parsing,w,c
  3423  000DFA  0F48               	addlw	low _group_x
  3424  000DFC  6ED9               	movwf	fsr2l,c
  3425  000DFE  6ADA               	clrf	fsr2h,c
  3426  000E00  0E00               	movlw	0
  3427  000E02  6EDF               	movwf	indf2,c
  3428                           
  3429                           ;ikb.c: 736: key[k].bf.OwnerOfGroup = 0;
  3430  000E04  5019               	movf	ikey_parsing@k,w,c
  3431  000E06  0D10               	mullw	16
  3432  000E08  50F3               	movf	prodl,w,c
  3433  000E0A  0F6B               	addlw	low (_key+11)
  3434  000E0C  6ED9               	movwf	fsr2l,c
  3435  000E0E  6ADA               	clrf	fsr2h,c
  3436  000E10  0100               	movlb	0	; () banked
  3437  000E12  90DF               	bcf	indf2,0,c
  3438  000E14                     l386:
  3439                           
  3440                           ;ikb.c: 737: };ikb.c: 739: key[k].sm1 = (0);
  3441  000E14  5019               	movf	ikey_parsing@k,w,c
  3442  000E16  0D10               	mullw	16
  3443  000E18  50F3               	movf	prodl,w,c
  3444  000E1A  0F66               	addlw	low (_key+6)
  3445  000E1C  6ED9               	movwf	fsr2l,c
  3446  000E1E  6ADA               	clrf	fsr2h,c
  3447  000E20  0E00               	movlw	0
  3448  000E22  6EDF               	movwf	indf2,c
  3449                           
  3450                           ;ikb.c: 742: key[k].bf.InProcessing = 0;
  3451  000E24  5019               	movf	ikey_parsing@k,w,c
  3452  000E26  0D10               	mullw	16
  3453  000E28  50F3               	movf	prodl,w,c
  3454  000E2A  0F6B               	addlw	low (_key+11)
  3455  000E2C  6ED9               	movwf	fsr2l,c
  3456  000E2E  6ADA               	clrf	fsr2h,c
  3457  000E30  0100               	movlb	0	; () banked
  3458  000E32  92DF               	bcf	indf2,1,c
  3459  000E34                     l2695:
  3460  000E34  2A19               	incf	ikey_parsing@k,f,c
  3461  000E36  0E04               	movlw	4
  3462  000E38  6419               	cpfsgt	ikey_parsing@k,c
  3463  000E3A  D4EB               	goto	l2609
  3464  000E3C  0012               	return	
  3465  000E3E                     __end_of_ikey_parsing:
  3466                           	opt callstack 0
  3467                           
  3468 ;; *************** function _ikey_is_accessible *****************
  3469 ;; Defined at:
  3470 ;;		line 510 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  k               1    wreg     unsigned char 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  k               1    2[COMRAM] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      unsigned char 
  3477 ;; Registers used:
  3478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3484 ;;      Params:         0       0       0       0       0       0       0       0       0
  3485 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3486 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3487 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3488 ;;Total ram usage:        3 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    1
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_ikey_parsing
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text24
  3499  001B52                     __ptext24:
  3500                           	opt callstack 0
  3501  001B52                     _ikey_is_accessible:
  3502                           	opt callstack 27
  3503                           
  3504                           ;incstack = 0
  3505                           ;ikey_is_accessible@k stored from wreg
  3506  001B52  6E03               	movwf	ikey_is_accessible@k,c
  3507                           
  3508                           ;ikb.c: 512: if (key[k].num_group_x != 0)
  3509  001B54  5003               	movf	ikey_is_accessible@k,w,c
  3510  001B56  0D10               	mullw	16
  3511  001B58  50F3               	movf	prodl,w,c
  3512  001B5A  0F69               	addlw	low (_key+9)
  3513  001B5C  6ED9               	movwf	fsr2l,c
  3514  001B5E  6ADA               	clrf	fsr2h,c
  3515  001B60  50DF               	movf	indf2,w,c
  3516  001B62  B4D8               	btfsc	status,2,c
  3517  001B64  D01A               	goto	l2369
  3518                           
  3519                           ;ikb.c: 513: {;ikb.c: 515: if (group_x[key[k].num_group_x] == 1)
  3520  001B66  5003               	movf	ikey_is_accessible@k,w,c
  3521  001B68  0D10               	mullw	16
  3522  001B6A  50F3               	movf	prodl,w,c
  3523  001B6C  0F69               	addlw	low (_key+9)
  3524  001B6E  6ED9               	movwf	fsr2l,c
  3525  001B70  6ADA               	clrf	fsr2h,c
  3526  001B72  50DF               	movf	indf2,w,c
  3527  001B74  6E01               	movwf	??_ikey_is_accessible& (0+255),c
  3528  001B76  5001               	movf	??_ikey_is_accessible,w,c
  3529  001B78  0F48               	addlw	low _group_x
  3530  001B7A  6ED9               	movwf	fsr2l,c
  3531  001B7C  6ADA               	clrf	fsr2h,c
  3532  001B7E  04DE               	decf	postinc2,w,c
  3533  001B80  A4D8               	btfss	status,2,c
  3534  001B82  D00B               	goto	l2369
  3535                           
  3536                           ;ikb.c: 516: {;ikb.c: 518: if ( !key[k].bf.OwnerOfGroup)
  3537  001B84  5003               	movf	ikey_is_accessible@k,w,c
  3538  001B86  0D10               	mullw	16
  3539  001B88  50F3               	movf	prodl,w,c
  3540  001B8A  0F6B               	addlw	low (_key+11)
  3541  001B8C  6ED9               	movwf	fsr2l,c
  3542  001B8E  6ADA               	clrf	fsr2h,c
  3543  001B90  0100               	movlb	0	; () banked
  3544  001B92  B0DF               	btfsc	indf2,0,c
  3545  001B94  D002               	goto	l2369
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;ikb.c: 519: {;ikb.c: 520: return 0;
  3549  001B96  0E00               	movlw	0
  3550  001B98  0012               	return	
  3551  001B9A                     l2369:
  3552                           
  3553                           ;ikb.c: 521: };ikb.c: 522: };ikb.c: 523: };ikb.c: 524: return 1;
  3554  001B9A  0E01               	movlw	1
  3555  001B9C  0012               	return		;funcret
  3556  001B9E                     __end_of_ikey_is_accessible:
  3557                           	opt callstack 0
  3558                           
  3559 ;; *************** function ___lwtoft *****************
  3560 ;; Defined at:
  3561 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  c               2    8[COMRAM] unsigned int 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  3    8[COMRAM] float 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3575 ;;      Params:         3       0       0       0       0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3578 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3579 ;;Total ram usage:        3 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    2
  3582 ;; This function calls:
  3583 ;;		___ftpack
  3584 ;; This function is called by:
  3585 ;;		_ikey_parsing
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text25
  3590  001E22                     __ptext25:
  3591                           	opt callstack 0
  3592  001E22                     ___lwtoft:
  3593                           	opt callstack 26
  3594                           
  3595                           ;incstack = 0
  3596  001E22  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  3597  001E26  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  3598  001E2A  6A03               	clrf	___ftpack@arg+2,c
  3599  001E2C  0E8E               	movlw	142
  3600  001E2E  6E04               	movwf	___ftpack@exp,c
  3601  001E30  0E00               	movlw	0
  3602  001E32  6E05               	movwf	___ftpack@sign,c
  3603  001E34  ECC8  F00B         	call	___ftpack	;wreg free
  3604  001E38  C001  F009         	movff	?___ftpack,?___lwtoft
  3605  001E3C  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  3606  001E40  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  3607  001E44  0012               	return		;funcret
  3608  001E46                     __end_of___lwtoft:
  3609                           	opt callstack 0
  3610                           
  3611 ;; *************** function _ikb_init *****************
  3612 ;; Defined at:
  3613 ;;		line 217 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  i               1    0[COMRAM] char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 3F/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0
  3628 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3630 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3631 ;;Total ram usage:        1 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text26
  3642  0016DA                     __ptext26:
  3643                           	opt callstack 0
  3644  0016DA                     _ikb_init:
  3645                           	opt callstack 29
  3646                           
  3647                           ;incstack = 0
  3648                           ;ikb.c: 219: int8_t i;;ikb.c: 389: do{TRISC |= 1<<4;}while(0);
  3649  0016DA  8894               	bsf	3988,4,c	;volatile
  3650                           
  3651                           ;ikb.c: 390: do{TRISC |= 1<<5;}while(0);
  3652  0016DC  8A94               	bsf	3988,5,c	;volatile
  3653                           
  3654                           ;ikb.c: 391: do{TRISC |= 1<<6;}while(0);
  3655  0016DE  8C94               	bsf	3988,6,c	;volatile
  3656                           
  3657                           ;ikb.c: 392: do{TRISC |= 1<<7;}while(0);
  3658  0016E0  8E94               	bsf	3988,7,c	;volatile
  3659                           
  3660                           ;ikb.c: 393: do{TRISD |= 1<<4;}while(0);
  3661  0016E2  8895               	bsf	3989,4,c	;volatile
  3662                           
  3663                           ;ikb.c: 394: key[0].keyRead = keyRead_pin_key1;
  3664  0016E4  0E22               	movlw	low _keyRead_pin_key1
  3665  0016E6  0100               	movlb	0	; () banked
  3666  0016E8  6F60               	movwf	_key& (0+255),b	;volatile
  3667  0016EA  0E1F               	movlw	high _keyRead_pin_key1
  3668  0016EC  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;ikb.c: 395: key[1].keyRead = keyRead_pin_key2;
  3672  0016EE  0E18               	movlw	low _keyRead_pin_key2
  3673  0016F0  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3674  0016F2  0E1F               	movlw	high _keyRead_pin_key2
  3675  0016F4  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;ikb.c: 396: key[2].keyRead = keyRead_pin_key3;
  3679  0016F6  0E0E               	movlw	low _keyRead_pin_key3
  3680  0016F8  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3681  0016FA  0E1F               	movlw	high _keyRead_pin_key3
  3682  0016FC  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;ikb.c: 397: key[3].keyRead = keyRead_pin_key4;
  3686  0016FE  0E32               	movlw	low _keyRead_pin_key4
  3687  001700  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3688  001702  0E1F               	movlw	high _keyRead_pin_key4
  3689  001704  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;ikb.c: 398: key[4].keyRead = keyRead_pin_key5;
  3693  001706  0E2A               	movlw	low _keyRead_pin_key5
  3694  001708  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3695  00170A  0E1F               	movlw	high _keyRead_pin_key5
  3696  00170C  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;ikb.c: 401: for (i=0; i<5; i++)
  3700  00170E  0E00               	movlw	0
  3701  001710  6E01               	movwf	ikb_init@i,c
  3702  001712                     l2921:
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;ikb.c: 402: {;ikb.c: 403: key[i].bf.OnKeyPressed = 1;
  3706  001712  5001               	movf	ikb_init@i,w,c
  3707  001714  0D10               	mullw	16
  3708  001716  50F3               	movf	prodl,w,c
  3709  001718  0F6A               	addlw	low (_key+10)
  3710  00171A  6ED9               	movwf	fsr2l,c
  3711  00171C  6ADA               	clrf	fsr2h,c
  3712  00171E  82DF               	bsf	indf2,1,c
  3713                           
  3714                           ;ikb.c: 404: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3715  001720  5001               	movf	ikb_init@i,w,c
  3716  001722  0D10               	mullw	16
  3717  001724  50F3               	movf	prodl,w,c
  3718  001726  0F6A               	addlw	low (_key+10)
  3719  001728  6ED9               	movwf	fsr2l,c
  3720  00172A  6ADA               	clrf	fsr2h,c
  3721  00172C  94DF               	bcf	indf2,2,c
  3722                           
  3723                           ;ikb.c: 405: key[i].bf.AtTimeExpired = 0;
  3724  00172E  5001               	movf	ikb_init@i,w,c
  3725  001730  0D10               	mullw	16
  3726  001732  50F3               	movf	prodl,w,c
  3727  001734  0F6A               	addlw	low (_key+10)
  3728  001736  6ED9               	movwf	fsr2l,c
  3729  001738  6ADA               	clrf	fsr2h,c
  3730  00173A  96DF               	bcf	indf2,3,c
  3731                           
  3732                           ;ikb.c: 406: key[i].bf.Reptt = 0;
  3733  00173C  5001               	movf	ikb_init@i,w,c
  3734  00173E  0D10               	mullw	16
  3735  001740  50F3               	movf	prodl,w,c
  3736  001742  0F6A               	addlw	low (_key+10)
  3737  001744  6ED9               	movwf	fsr2l,c
  3738  001746  6ADA               	clrf	fsr2h,c
  3739  001748  9ADF               	bcf	indf2,5,c
  3740                           
  3741                           ;ikb.c: 407: key[i].num_group_x = 0;
  3742  00174A  5001               	movf	ikb_init@i,w,c
  3743  00174C  0D10               	mullw	16
  3744  00174E  50F3               	movf	prodl,w,c
  3745  001750  0F69               	addlw	low (_key+9)
  3746  001752  6ED9               	movwf	fsr2l,c
  3747  001754  6ADA               	clrf	fsr2h,c
  3748  001756  0E00               	movlw	0
  3749  001758  6EDF               	movwf	indf2,c
  3750                           
  3751                           ;ikb.c: 408: key[i].repp.to_start= (uint16_t)500.0/5;
  3752  00175A  5001               	movf	ikb_init@i,w,c
  3753  00175C  0D10               	mullw	16
  3754  00175E  50F3               	movf	prodl,w,c
  3755  001760  0F6C               	addlw	low (_key+12)
  3756  001762  6ED9               	movwf	fsr2l,c
  3757  001764  6ADA               	clrf	fsr2h,c
  3758  001766  0E64               	movlw	100
  3759  001768  6EDE               	movwf	postinc2,c
  3760  00176A  0E00               	movlw	0
  3761  00176C  6EDD               	movwf	postdec2,c
  3762                           
  3763                           ;ikb.c: 409: key[i].repp.after_start = (uint16_t)200.0/5;
  3764  00176E  5001               	movf	ikb_init@i,w,c
  3765  001770  0D10               	mullw	16
  3766  001772  50F3               	movf	prodl,w,c
  3767  001774  0F6E               	addlw	low (_key+14)
  3768  001776  6ED9               	movwf	fsr2l,c
  3769  001778  6ADA               	clrf	fsr2h,c
  3770  00177A  0E28               	movlw	40
  3771  00177C  6EDE               	movwf	postinc2,c
  3772  00177E  0E00               	movlw	0
  3773  001780  6EDD               	movwf	postdec2,c
  3774                           
  3775                           ; BSR set to: 0
  3776  001782  2A01               	incf	ikb_init@i,f,c
  3777                           
  3778                           ; BSR set to: 0
  3779  001784  5001               	movf	ikb_init@i,w,c
  3780  001786  0A80               	xorlw	128
  3781  001788  0F7B               	addlw	-133
  3782  00178A  B0D8               	btfsc	status,0,c
  3783  00178C  0012               	return	
  3784  00178E  D7C1               	goto	l2921
  3785  001790                     __end_of_ikb_init:
  3786                           	opt callstack 0
  3787                           
  3788 ;; *************** function _ikb_flush *****************
  3789 ;; Defined at:
  3790 ;;		line 419 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 3F/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    2
  3811 ;; This function calls:
  3812 ;;		_ikey_clear_all_flag
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text27
  3819  001F38                     __ptext27:
  3820                           	opt callstack 0
  3821  001F38                     _ikb_flush:
  3822                           	opt callstack 28
  3823                           
  3824                           ;ikb.c: 421: ikey_clear_all_flag();
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;incstack = 0
  3828  001F38  EC23  F00F         	call	_ikey_clear_all_flag	;wreg free
  3829                           
  3830                           ; BSR set to: 0
  3831  001F3C  0012               	return		;funcret
  3832  001F3E                     __end_of_ikb_flush:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _ikey_clear_all_flag *****************
  3836 ;; Defined at:
  3837 ;;		line 761 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  i               1    0[COMRAM] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 3F/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        1 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    1
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_ikb_flush
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text28
  3866  001E46                     __ptext28:
  3867                           	opt callstack 0
  3868  001E46                     _ikey_clear_all_flag:
  3869                           	opt callstack 28
  3870                           
  3871                           ;ikb.c: 763: uint8_t i;;ikb.c: 764: for (i=0; i<5; i++)
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;incstack = 0
  3875  001E46  0E00               	movlw	0
  3876  001E48  6E01               	movwf	ikey_clear_all_flag@i,c
  3877  001E4A                     l2705:
  3878                           
  3879                           ;ikb.c: 765: {;ikb.c: 767: key[i].bf.ReadyToRead = 0;
  3880  001E4A  5001               	movf	ikey_clear_all_flag@i,w,c
  3881  001E4C  0D10               	mullw	16
  3882  001E4E  50F3               	movf	prodl,w,c
  3883  001E50  0F6A               	addlw	low (_key+10)
  3884  001E52  6ED9               	movwf	fsr2l,c
  3885  001E54  6ADA               	clrf	fsr2h,c
  3886  001E56  0100               	movlb	0	; () banked
  3887  001E58  9CDF               	bcf	indf2,6,c
  3888                           
  3889                           ; BSR set to: 0
  3890  001E5A  2A01               	incf	ikey_clear_all_flag@i,f,c
  3891                           
  3892                           ; BSR set to: 0
  3893  001E5C  0E04               	movlw	4
  3894  001E5E  6401               	cpfsgt	ikey_clear_all_flag@i,c
  3895  001E60  D7F4               	goto	l2705
  3896  001E62  0012               	return	
  3897  001E64                     __end_of_ikey_clear_all_flag:
  3898                           	opt callstack 0
  3899                           
  3900 ;; *************** function _display7s_job *****************
  3901 ;; Defined at:
  3902 ;;		line 179 in file "pulsonic.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    3
  3923 ;; This function calls:
  3924 ;;		_multiplexedDisp_job
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text29
  3931  001DFC                     __ptext29:
  3932                           	opt callstack 0
  3933  001DFC                     _display7s_job:
  3934                           	opt callstack 27
  3935                           
  3936                           ;pulsonic.c: 181: static int8_t q;;pulsonic.c: 183: LATB = pulsonic.display7s[q];
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;incstack = 0
  3940  001DFC  0E76               	movlw	low (_pulsonic+118)
  3941  001DFE  244D               	addwf	display7s_job@q,w,c
  3942  001E00  6ED9               	movwf	fsr2l,c
  3943  001E02  6ADA               	clrf	fsr2h,c
  3944  001E04  0E01               	movlw	high (_pulsonic+118)
  3945  001E06  22DA               	addwfc	fsr2h,f,c
  3946  001E08  50DF               	movf	indf2,w,c
  3947  001E0A  6E8A               	movwf	3978,c	;volatile
  3948                           
  3949                           ;pulsonic.c: 184: multiplexedDisp_job(q);
  3950  001E0C  504D               	movf	display7s_job@q,w,c
  3951  001E0E  EC1F  F00C         	call	_multiplexedDisp_job
  3952                           
  3953                           ;pulsonic.c: 186: if (++q == (2 + 3))
  3954  001E12  2A4D               	incf	display7s_job@q,f,c
  3955  001E14  0E05               	movlw	5
  3956  001E16  184D               	xorwf	display7s_job@q,w,c
  3957  001E18  A4D8               	btfss	status,2,c
  3958  001E1A  0012               	return	
  3959                           
  3960                           ;pulsonic.c: 187: {q=0;}
  3961  001E1C  0E00               	movlw	0
  3962  001E1E  6E4D               	movwf	display7s_job@q,c
  3963  001E20  0012               	return		;funcret
  3964  001E22                     __end_of_display7s_job:
  3965                           	opt callstack 0
  3966                           
  3967 ;; *************** function _multiplexedDisp_job *****************
  3968 ;; Defined at:
  3969 ;;		line 150 in file "pulsonic.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  q               1    wreg     char 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  q               1    6[COMRAM] char 
  3974 ;;  i               1    7[COMRAM] char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3984 ;;      Params:         0       0       0       0       0       0       0       0       0
  3985 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3986 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3987 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3988 ;;Total ram usage:        8 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    2
  3991 ;; This function calls:
  3992 ;;		_multiplexedDisp0_off
  3993 ;;		_multiplexedDisp0_on
  3994 ;;		_multiplexedDisp1_off
  3995 ;;		_multiplexedDisp1_on
  3996 ;;		_multiplexedDisp2_off
  3997 ;;		_multiplexedDisp2_on
  3998 ;;		_multiplexedDisp3_off
  3999 ;;		_multiplexedDisp3_on
  4000 ;;		_multiplexedDisp4_off
  4001 ;;		_multiplexedDisp4_on
  4002 ;; This function is called by:
  4003 ;;		_display7s_job
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text30
  4008  00183E                     __ptext30:
  4009                           	opt callstack 0
  4010  00183E                     _multiplexedDisp_job:
  4011                           	opt callstack 27
  4012                           
  4013                           ;incstack = 0
  4014                           ;multiplexedDisp_job@q stored from wreg
  4015  00183E  6E07               	movwf	multiplexedDisp_job@q,c
  4016                           
  4017                           ;pulsonic.c: 152: int8_t i;;pulsonic.c: 153: for (i=0; i< (2 + 3); i++)
  4018  001840  0E00               	movlw	0
  4019  001842  6E08               	movwf	multiplexedDisp_job@i,c
  4020  001844                     l2731:
  4021                           
  4022                           ;pulsonic.c: 154: {;pulsonic.c: 155: if ((0x01<<i) & (0x1<<q))
  4023  001844  C007  F001         	movff	multiplexedDisp_job@q,??_multiplexedDisp_job
  4024  001848  0E01               	movlw	1
  4025  00184A  6E02               	movwf	(??_multiplexedDisp_job+1)& (0+255),c
  4026  00184C  0E00               	movlw	0
  4027  00184E  6E03               	movwf	(??_multiplexedDisp_job+2)& (0+255),c
  4028  001850  2A01               	incf	??_multiplexedDisp_job,f,c
  4029  001852  D003               	goto	u2684
  4030  001854                     u2685:
  4031  001854  90D8               	bcf	status,0,c
  4032  001856  3602               	rlcf	??_multiplexedDisp_job+1,f,c
  4033  001858  3603               	rlcf	??_multiplexedDisp_job+2,f,c
  4034  00185A                     u2684:
  4035  00185A  2E01               	decfsz	??_multiplexedDisp_job,f,c
  4036  00185C  D7FB               	goto	u2685
  4037  00185E  C008  F004         	movff	multiplexedDisp_job@i,??_multiplexedDisp_job+3
  4038  001862  0E01               	movlw	1
  4039  001864  6E05               	movwf	(??_multiplexedDisp_job+4)& (0+255),c
  4040  001866  0E00               	movlw	0
  4041  001868  6E06               	movwf	(??_multiplexedDisp_job+5)& (0+255),c
  4042  00186A  2A04               	incf	??_multiplexedDisp_job+3,f,c
  4043  00186C  D003               	goto	u2694
  4044  00186E                     u2695:
  4045  00186E  90D8               	bcf	status,0,c
  4046  001870  3605               	rlcf	??_multiplexedDisp_job+4,f,c
  4047  001872  3606               	rlcf	??_multiplexedDisp_job+5,f,c
  4048  001874                     u2694:
  4049  001874  2E04               	decfsz	??_multiplexedDisp_job+3,f,c
  4050  001876  D7FB               	goto	u2695
  4051  001878  5002               	movf	??_multiplexedDisp_job+1,w,c
  4052  00187A  1605               	andwf	??_multiplexedDisp_job+4,f,c
  4053  00187C  5003               	movf	??_multiplexedDisp_job+2,w,c
  4054  00187E  1606               	andwf	??_multiplexedDisp_job+5,f,c
  4055  001880  5005               	movf	??_multiplexedDisp_job+4,w,c
  4056  001882  1006               	iorwf	??_multiplexedDisp_job+5,w,c
  4057  001884  B4D8               	btfsc	status,2,c
  4058  001886  D012               	goto	l2735
  4059                           
  4060                           ;pulsonic.c: 156: multiplexedDisp[i].Qonoff[1]();
  4061  001888  5008               	movf	multiplexedDisp_job@i,w,c
  4062  00188A  0D04               	mullw	4
  4063  00188C  50F3               	movf	prodl,w,c
  4064  00188E  0FB2               	addlw	low (_multiplexedDisp+2)
  4065  001890  6ED9               	movwf	fsr2l,c
  4066  001892  6ADA               	clrf	fsr2h,c
  4067  001894  D801               	call	u2718
  4068  001896  D01C               	goto	u2729
  4069  001898                     u2718:
  4070  001898  0005               	push	
  4071  00189A  6EFA               	movwf	pclath,c
  4072  00189C  50DE               	movf	postinc2,w,c
  4073  00189E  6EFD               	movwf	tosl,c
  4074  0018A0  50DE               	movf	postinc2,w,c
  4075  0018A2  6EFE               	movwf	tosh,c
  4076  0018A4  50F8               	movf	tblptru,w,c
  4077  0018A6  6EFF               	movwf	tosu,c
  4078  0018A8  50FA               	movf	pclath,w,c
  4079  0018AA  0012               	return		;indir
  4080  0018AC                     l2735:
  4081                           
  4082                           ;pulsonic.c: 157: else;pulsonic.c: 158: multiplexedDisp[i].Qonoff[0]();
  4083  0018AC  5008               	movf	multiplexedDisp_job@i,w,c
  4084  0018AE  0D04               	mullw	4
  4085  0018B0  50F3               	movf	prodl,w,c
  4086  0018B2  0FB0               	addlw	low _multiplexedDisp
  4087  0018B4  6ED9               	movwf	fsr2l,c
  4088  0018B6  6ADA               	clrf	fsr2h,c
  4089  0018B8  D801               	call	u2728
  4090  0018BA  D00A               	goto	u2729
  4091  0018BC                     u2728:
  4092  0018BC  0005               	push	
  4093  0018BE  6EFA               	movwf	pclath,c
  4094  0018C0  50DE               	movf	postinc2,w,c
  4095  0018C2  6EFD               	movwf	tosl,c
  4096  0018C4  50DE               	movf	postinc2,w,c
  4097  0018C6  6EFE               	movwf	tosh,c
  4098  0018C8  50F8               	movf	tblptru,w,c
  4099  0018CA  6EFF               	movwf	tosu,c
  4100  0018CC  50FA               	movf	pclath,w,c
  4101  0018CE  0012               	return		;indir
  4102  0018D0                     u2729:
  4103  0018D0  2A08               	incf	multiplexedDisp_job@i,f,c
  4104  0018D2  5008               	movf	multiplexedDisp_job@i,w,c
  4105  0018D4  0A80               	xorlw	128
  4106  0018D6  0F7B               	addlw	-133
  4107  0018D8  B0D8               	btfsc	status,0,c
  4108  0018DA  0012               	return	
  4109  0018DC  D7B3               	goto	l2731
  4110  0018DE                     __end_of_multiplexedDisp_job:
  4111                           	opt callstack 0
  4112                           
  4113 ;; *************** function _display7s_init *****************
  4114 ;; Defined at:
  4115 ;;		line 166 in file "pulsonic.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    3
  4136 ;; This function calls:
  4137 ;;		_multiplexedDisp_init
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text31
  4144  001B02                     __ptext31:
  4145                           	opt callstack 0
  4146  001B02                     _display7s_init:
  4147                           	opt callstack 27
  4148                           
  4149                           ;pulsonic.c: 168: pulsonic.display7s[MODE_DIG_1] = DISP7S_NUMS[2];
  4150                           
  4151                           ;incstack = 0
  4152  001B02  0E03               	movlw	low (_DISP7S_NUMS+2)
  4153  001B04  6EF6               	movwf	tblptrl,c
  4154  001B06                     	if	1	;There is more than 1 active tblptr byte
  4155  001B06  0E08               	movlw	high __smallconst
  4156  001B08  6EF7               	movwf	tblptrh,c
  4157  001B0A                     	endif
  4158  001B0A                     	if	0	;tblptru may be non-zero
  4159  001B0A                     	endif
  4160  001B0A                     	if	0	;tblptru may be non-zero
  4161  001B0A                     	endif
  4162  001B0A  0008               	tblrd		*
  4163  001B0C  CFF5 F177          	movff	tablat,_pulsonic+119
  4164                           
  4165                           ;pulsonic.c: 169: pulsonic.display7s[MODE_DIG_0] = DISP7S_NUMS[0];
  4166  001B10  0E01               	movlw	low _DISP7S_NUMS
  4167  001B12  6EF6               	movwf	tblptrl,c
  4168  001B14                     	if	1	;There is more than 1 active tblptr byte
  4169  001B14  0E08               	movlw	high _DISP7S_NUMS
  4170  001B16  6EF7               	movwf	tblptrh,c
  4171  001B18                     	endif
  4172  001B18                     	if	0	;There are less than 3 active tblptr bytes
  4173  001B18                     	endif
  4174  001B18  0008               	tblrd		*
  4175  001B1A  CFF5 F176          	movff	tablat,_pulsonic+118
  4176                           
  4177                           ;pulsonic.c: 171: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[RAYA];
  4178  001B1E  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4179  001B20  6EF6               	movwf	tblptrl,c
  4180  001B22                     	if	1	;There is more than 1 active tblptr byte
  4181  001B22  0E08               	movlw	high __smallconst
  4182  001B24  6EF7               	movwf	tblptrh,c
  4183  001B26                     	endif
  4184  001B26                     	if	0	;tblptru may be non-zero
  4185  001B26                     	endif
  4186  001B26                     	if	0	;tblptru may be non-zero
  4187  001B26                     	endif
  4188  001B26  0008               	tblrd		*
  4189  001B28  CFF5 F178          	movff	tablat,_pulsonic+120
  4190                           
  4191                           ;pulsonic.c: 172: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[RAYA];
  4192  001B2C  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4193  001B2E  6EF6               	movwf	tblptrl,c
  4194  001B30                     	if	1	;There is more than 1 active tblptr byte
  4195  001B30  0E08               	movlw	high __smallconst
  4196  001B32  6EF7               	movwf	tblptrh,c
  4197  001B34                     	endif
  4198  001B34                     	if	0	;tblptru may be non-zero
  4199  001B34                     	endif
  4200  001B34                     	if	0	;tblptru may be non-zero
  4201  001B34                     	endif
  4202  001B34  0008               	tblrd		*
  4203  001B36  CFF5 F177          	movff	tablat,_pulsonic+119
  4204                           
  4205                           ;pulsonic.c: 173: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[RAYA];
  4206  001B3A  0E0C               	movlw	low (_DISP7S_CHARS+1)
  4207  001B3C  6EF6               	movwf	tblptrl,c
  4208  001B3E                     	if	1	;There is more than 1 active tblptr byte
  4209  001B3E  0E08               	movlw	high __smallconst
  4210  001B40  6EF7               	movwf	tblptrh,c
  4211  001B42                     	endif
  4212  001B42                     	if	0	;tblptru may be non-zero
  4213  001B42                     	endif
  4214  001B42                     	if	0	;tblptru may be non-zero
  4215  001B42                     	endif
  4216  001B42  0008               	tblrd		*
  4217  001B44  CFF5 F176          	movff	tablat,_pulsonic+118
  4218                           
  4219                           ;pulsonic.c: 175: TRISB = 0x00;
  4220  001B48  0E00               	movlw	0
  4221  001B4A  6E93               	movwf	3987,c	;volatile
  4222                           
  4223                           ;pulsonic.c: 176: multiplexedDisp_init();
  4224  001B4C  EC35  F00E         	call	_multiplexedDisp_init	;wreg free
  4225  001B50  0012               	return		;funcret
  4226  001B52                     __end_of_display7s_init:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _multiplexedDisp_init *****************
  4230 ;; Defined at:
  4231 ;;		line 135 in file "pulsonic.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  i               1    0[COMRAM] char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0
  4246 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4248 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4249 ;;Total ram usage:        1 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    2
  4252 ;; This function calls:
  4253 ;;		_multiplexedDisp0_off
  4254 ;;		_multiplexedDisp0_on
  4255 ;;		_multiplexedDisp1_off
  4256 ;;		_multiplexedDisp1_on
  4257 ;;		_multiplexedDisp2_off
  4258 ;;		_multiplexedDisp2_on
  4259 ;;		_multiplexedDisp3_off
  4260 ;;		_multiplexedDisp3_on
  4261 ;;		_multiplexedDisp4_off
  4262 ;;		_multiplexedDisp4_on
  4263 ;; This function is called by:
  4264 ;;		_display7s_init
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text32
  4269  001C6A                     __ptext32:
  4270                           	opt callstack 0
  4271  001C6A                     _multiplexedDisp_init:
  4272                           	opt callstack 27
  4273                           
  4274                           ;pulsonic.c: 137: int8_t i;;pulsonic.c: 138: for (i=0; i< (2 + 3); i++)
  4275                           
  4276                           ;incstack = 0
  4277  001C6A  0E00               	movlw	0
  4278  001C6C  6E01               	movwf	multiplexedDisp_init@i,c
  4279  001C6E                     l2717:
  4280                           
  4281                           ;pulsonic.c: 139: {;pulsonic.c: 140: multiplexedDisp[i].Qonoff[0]();
  4282  001C6E  5001               	movf	multiplexedDisp_init@i,w,c
  4283  001C70  0D04               	mullw	4
  4284  001C72  50F3               	movf	prodl,w,c
  4285  001C74  0FB0               	addlw	low _multiplexedDisp
  4286  001C76  6ED9               	movwf	fsr2l,c
  4287  001C78  6ADA               	clrf	fsr2h,c
  4288  001C7A  D801               	call	u2668
  4289  001C7C  D00A               	goto	u2669
  4290  001C7E                     u2668:
  4291  001C7E  0005               	push	
  4292  001C80  6EFA               	movwf	pclath,c
  4293  001C82  50DE               	movf	postinc2,w,c
  4294  001C84  6EFD               	movwf	tosl,c
  4295  001C86  50DE               	movf	postinc2,w,c
  4296  001C88  6EFE               	movwf	tosh,c
  4297  001C8A  50F8               	movf	tblptru,w,c
  4298  001C8C  6EFF               	movwf	tosu,c
  4299  001C8E  50FA               	movf	pclath,w,c
  4300  001C90  0012               	return		;indir
  4301  001C92                     u2669:
  4302  001C92  2A01               	incf	multiplexedDisp_init@i,f,c
  4303  001C94  5001               	movf	multiplexedDisp_init@i,w,c
  4304  001C96  0A80               	xorlw	128
  4305  001C98  0F7B               	addlw	-133
  4306  001C9A  A0D8               	btfss	status,0,c
  4307  001C9C  D7E8               	goto	l2717
  4308  001C9E  9892               	bcf	3986,4,c	;volatile
  4309                           
  4310                           ;pulsonic.c: 144: do{TRISA &= ~(1<<3);}while(0);
  4311  001CA0  9692               	bcf	3986,3,c	;volatile
  4312                           
  4313                           ;pulsonic.c: 145: do{TRISA &= ~(1<<2);}while(0);
  4314  001CA2  9492               	bcf	3986,2,c	;volatile
  4315                           
  4316                           ;pulsonic.c: 146: do{TRISA &= ~(1<<1);}while(0);
  4317  001CA4  9292               	bcf	3986,1,c	;volatile
  4318                           
  4319                           ;pulsonic.c: 147: do{TRISA &= ~(1<<0);}while(0);
  4320  001CA6  9092               	bcf	3986,0,c	;volatile
  4321  001CA8  0012               	return		;funcret
  4322  001CAA                     __end_of_multiplexedDisp_init:
  4323                           	opt callstack 0
  4324                           
  4325 ;; *************** function _multiplexedDisp4_off *****************
  4326 ;; Defined at:
  4327 ;;		line 92 in file "pulsonic.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4344 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4345 ;;Total ram usage:        0 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_multiplexedDisp_init
  4352 ;;		_multiplexedDisp_job
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text33
  4357  001F3E                     __ptext33:
  4358                           	opt callstack 0
  4359  001F3E                     _multiplexedDisp4_off:
  4360                           	opt callstack 27
  4361                           
  4362                           ;incstack = 0
  4363                           ;pulsonic.c: 94: do{LATA |= 1<<0;}while(0);
  4364  001F3E  8089               	bsf	3977,0,c	;volatile
  4365  001F40  0012               	return		;funcret
  4366  001F42                     __end_of_multiplexedDisp4_off:
  4367                           	opt callstack 0
  4368                           
  4369 ;; *************** function _multiplexedDisp3_on *****************
  4370 ;; Defined at:
  4371 ;;		line 87 in file "pulsonic.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4388 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4389 ;;Total ram usage:        0 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_multiplexedDisp_init
  4396 ;;		_multiplexedDisp_job
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text34
  4401  001F42                     __ptext34:
  4402                           	opt callstack 0
  4403  001F42                     _multiplexedDisp3_on:
  4404                           	opt callstack 27
  4405                           
  4406                           ;incstack = 0
  4407                           ;pulsonic.c: 89: do{LATA &= ~(1<<1);}while(0);
  4408  001F42  9289               	bcf	3977,1,c	;volatile
  4409  001F44  0012               	return		;funcret
  4410  001F46                     __end_of_multiplexedDisp3_on:
  4411                           	opt callstack 0
  4412                           
  4413 ;; *************** function _multiplexedDisp3_off *****************
  4414 ;; Defined at:
  4415 ;;		line 83 in file "pulsonic.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4432 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    1
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_multiplexedDisp_init
  4440 ;;		_multiplexedDisp_job
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text35
  4445  001F46                     __ptext35:
  4446                           	opt callstack 0
  4447  001F46                     _multiplexedDisp3_off:
  4448                           	opt callstack 27
  4449                           
  4450                           ;incstack = 0
  4451                           ;pulsonic.c: 85: do{LATA |= 1<<1;}while(0);
  4452  001F46  8289               	bsf	3977,1,c	;volatile
  4453  001F48  0012               	return		;funcret
  4454  001F4A                     __end_of_multiplexedDisp3_off:
  4455                           	opt callstack 0
  4456                           
  4457 ;; *************** function _multiplexedDisp2_on *****************
  4458 ;; Defined at:
  4459 ;;		line 78 in file "pulsonic.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4473 ;;      Params:         0       0       0       0       0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_multiplexedDisp_init
  4484 ;;		_multiplexedDisp_job
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text36
  4489  001F4A                     __ptext36:
  4490                           	opt callstack 0
  4491  001F4A                     _multiplexedDisp2_on:
  4492                           	opt callstack 27
  4493                           
  4494                           ;incstack = 0
  4495                           ;pulsonic.c: 80: do{LATA &= ~(1<<2);}while(0);
  4496  001F4A  9489               	bcf	3977,2,c	;volatile
  4497  001F4C  0012               	return		;funcret
  4498  001F4E                     __end_of_multiplexedDisp2_on:
  4499                           	opt callstack 0
  4500                           
  4501 ;; *************** function _multiplexedDisp2_off *****************
  4502 ;; Defined at:
  4503 ;;		line 74 in file "pulsonic.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4517 ;;      Params:         0       0       0       0       0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4521 ;;Total ram usage:        0 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    1
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_multiplexedDisp_init
  4528 ;;		_multiplexedDisp_job
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text37
  4533  001F4E                     __ptext37:
  4534                           	opt callstack 0
  4535  001F4E                     _multiplexedDisp2_off:
  4536                           	opt callstack 27
  4537                           
  4538                           ;incstack = 0
  4539                           ;pulsonic.c: 76: do{LATA |= 1<<2;}while(0);
  4540  001F4E  8489               	bsf	3977,2,c	;volatile
  4541  001F50  0012               	return		;funcret
  4542  001F52                     __end_of_multiplexedDisp2_off:
  4543                           	opt callstack 0
  4544                           
  4545 ;; *************** function _multiplexedDisp1_on *****************
  4546 ;; Defined at:
  4547 ;;		line 69 in file "pulsonic.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4564 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    1
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_multiplexedDisp_init
  4572 ;;		_multiplexedDisp_job
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text38
  4577  001F52                     __ptext38:
  4578                           	opt callstack 0
  4579  001F52                     _multiplexedDisp1_on:
  4580                           	opt callstack 27
  4581                           
  4582                           ;incstack = 0
  4583                           ;pulsonic.c: 71: do{LATA &= ~(1<<3);}while(0);
  4584  001F52  9689               	bcf	3977,3,c	;volatile
  4585  001F54  0012               	return		;funcret
  4586  001F56                     __end_of_multiplexedDisp1_on:
  4587                           	opt callstack 0
  4588                           
  4589 ;; *************** function _multiplexedDisp1_off *****************
  4590 ;; Defined at:
  4591 ;;		line 65 in file "pulsonic.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4608 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    1
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_multiplexedDisp_init
  4616 ;;		_multiplexedDisp_job
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text39
  4621  001F56                     __ptext39:
  4622                           	opt callstack 0
  4623  001F56                     _multiplexedDisp1_off:
  4624                           	opt callstack 27
  4625                           
  4626                           ;incstack = 0
  4627                           ;pulsonic.c: 67: do{LATA |= 1<<3;}while(0);
  4628  001F56  8689               	bsf	3977,3,c	;volatile
  4629  001F58  0012               	return		;funcret
  4630  001F5A                     __end_of_multiplexedDisp1_off:
  4631                           	opt callstack 0
  4632                           
  4633 ;; *************** function _multiplexedDisp0_on *****************
  4634 ;; Defined at:
  4635 ;;		line 60 in file "pulsonic.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		status,2, status,0
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4649 ;;      Params:         0       0       0       0       0       0       0       0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4652 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4653 ;;Total ram usage:        0 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    1
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_multiplexedDisp_init
  4660 ;;		_multiplexedDisp_job
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text40
  4665  001F5A                     __ptext40:
  4666                           	opt callstack 0
  4667  001F5A                     _multiplexedDisp0_on:
  4668                           	opt callstack 27
  4669                           
  4670                           ;incstack = 0
  4671                           ;pulsonic.c: 62: do{LATA &= ~(1<<4);}while(0);
  4672  001F5A  9889               	bcf	3977,4,c	;volatile
  4673  001F5C  0012               	return		;funcret
  4674  001F5E                     __end_of_multiplexedDisp0_on:
  4675                           	opt callstack 0
  4676                           
  4677 ;; *************** function _multiplexedDisp0_off *****************
  4678 ;; Defined at:
  4679 ;;		line 56 in file "pulsonic.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;		None
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;		None
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		status,2, status,0
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4693 ;;      Params:         0       0       0       0       0       0       0       0       0
  4694 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4696 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4697 ;;Total ram usage:        0 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    1
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_multiplexedDisp_init
  4704 ;;		_multiplexedDisp_job
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text41
  4709  001F5E                     __ptext41:
  4710                           	opt callstack 0
  4711  001F5E                     _multiplexedDisp0_off:
  4712                           	opt callstack 27
  4713                           
  4714                           ;incstack = 0
  4715                           ;pulsonic.c: 58: do{LATA |= 1<<4;}while(0);
  4716  001F5E  8889               	bsf	3977,4,c	;volatile
  4717  001F60  0012               	return		;funcret
  4718  001F62                     __end_of_multiplexedDisp0_off:
  4719                           	opt callstack 0
  4720                           
  4721 ;; *************** function _multiplexedDisp4_on *****************
  4722 ;; Defined at:
  4723 ;;		line 96 in file "pulsonic.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		status,2, status,0
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    1
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_multiplexedDisp_init
  4748 ;;		_multiplexedDisp_job
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text42
  4753  001F62                     __ptext42:
  4754                           	opt callstack 0
  4755  001F62                     _multiplexedDisp4_on:
  4756                           	opt callstack 27
  4757                           
  4758                           ;incstack = 0
  4759                           ;pulsonic.c: 98: do{LATA &= ~(1<<0);}while(0);
  4760  001F62  9089               	bcf	3977,0,c	;volatile
  4761  001F64  0012               	return		;funcret
  4762  001F66                     __end_of_multiplexedDisp4_on:
  4763                           	opt callstack 0
  4764                           
  4765 ;; *************** function _disp_show_quantity *****************
  4766 ;; Defined at:
  4767 ;;		line 191 in file "pulsonic.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  f               3   38[COMRAM] void 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  buff           10   42[COMRAM] unsigned char [10]
  4772 ;;  real            3   52[COMRAM] unsigned char [10]
  4773 ;;  I               2   58[COMRAM] int 
  4774 ;;  i               1   60[COMRAM] char 
  4775 ;;  last_pos        1   57[COMRAM] char 
  4776 ;;  q               1   56[COMRAM] char 
  4777 ;;  num             1   55[COMRAM] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 3F/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4787 ;;      Params:         3       0       0       0       0       0       0       0       0
  4788 ;;      Locals:        19       0       0       0       0       0       0       0       0
  4789 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4790 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4791 ;;Total ram usage:       23 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    4
  4794 ;; This function calls:
  4795 ;;		___awtoft
  4796 ;;		___ftge
  4797 ;;		___ftmul
  4798 ;;		___ftsub
  4799 ;;		___fttol
  4800 ;;		_itoa
  4801 ;; This function is called by:
  4802 ;;		_main
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text43
  4807  000E3E                     __ptext43:
  4808                           	opt callstack 0
  4809  000E3E                     _disp_show_quantity:
  4810                           	opt callstack 26
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;pulsonic.c: 193: int16_t I;;pulsonic.c: 194: char buff[10];;pulsonic.c: 195: uint8_t nu
      +                          m;;pulsonic.c: 196: int8_t i;;pulsonic.c: 197: int8_t last_pos;;pulsonic.c: 198: int8_t 
      +                          q;;pulsonic.c: 199: double real;;pulsonic.c: 201: if (f>= 1000.0f)
  4814                           
  4815                           ;incstack = 0
  4816  000E3E  C027  F00C         	movff	disp_show_quantity@f,___ftge@ff1
  4817  000E42  C028  F00D         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4818  000E46  C029  F00E         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4819  000E4A  0E00               	movlw	0
  4820  000E4C  6E0F               	movwf	___ftge@ff2,c
  4821  000E4E  0E7A               	movlw	122
  4822  000E50  6E10               	movwf	___ftge@ff2+1,c
  4823  000E52  0E44               	movlw	68
  4824  000E54  6E11               	movwf	___ftge@ff2+2,c
  4825  000E56  ECB9  F00C         	call	___ftge	;wreg free
  4826  000E5A  A0D8               	btfss	status,0,c
  4827  000E5C  D006               	goto	l2931
  4828                           
  4829                           ;pulsonic.c: 202: f=999.0f;
  4830  000E5E  0EC0               	movlw	192
  4831  000E60  6E27               	movwf	disp_show_quantity@f,c
  4832  000E62  0E79               	movlw	121
  4833  000E64  6E28               	movwf	disp_show_quantity@f+1,c
  4834  000E66  0E44               	movlw	68
  4835  000E68  6E29               	movwf	disp_show_quantity@f+2,c
  4836  000E6A                     l2931:
  4837                           
  4838                           ;pulsonic.c: 204: I = (int16_t)f;
  4839  000E6A  C027  F018         	movff	disp_show_quantity@f,___fttol@f1
  4840  000E6E  C028  F019         	movff	disp_show_quantity@f+1,___fttol@f1+1
  4841  000E72  C029  F01A         	movff	disp_show_quantity@f+2,___fttol@f1+2
  4842  000E76  EC04  F00B         	call	___fttol	;wreg free
  4843  000E7A  C018  F03B         	movff	?___fttol,disp_show_quantity@I
  4844  000E7E  C019  F03C         	movff	?___fttol+1,disp_show_quantity@I+1
  4845                           
  4846                           ;pulsonic.c: 205: real = f-I;
  4847  000E82  C027  F015         	movff	disp_show_quantity@f,___ftsub@f1
  4848  000E86  C028  F016         	movff	disp_show_quantity@f+1,___ftsub@f1+1
  4849  000E8A  C029  F017         	movff	disp_show_quantity@f+2,___ftsub@f1+2
  4850  000E8E  C03B  F009         	movff	disp_show_quantity@I,___awtoft@c
  4851  000E92  C03C  F00A         	movff	disp_show_quantity@I+1,___awtoft@c+1
  4852  000E96  EC75  F00E         	call	___awtoft	;wreg free
  4853  000E9A  C009  F018         	movff	?___awtoft,___ftsub@f2
  4854  000E9E  C00A  F019         	movff	?___awtoft+1,___ftsub@f2+1
  4855  000EA2  C00B  F01A         	movff	?___awtoft+2,___ftsub@f2+2
  4856  000EA6  EC55  F00E         	call	___ftsub	;wreg free
  4857  000EAA  C015  F035         	movff	?___ftsub,disp_show_quantity@real
  4858  000EAE  C016  F036         	movff	?___ftsub+1,disp_show_quantity@real+1
  4859  000EB2  C017  F037         	movff	?___ftsub+2,disp_show_quantity@real+2
  4860                           
  4861                           ;pulsonic.c: 206: if (real > 0.0f)
  4862  000EB6  0E00               	movlw	0
  4863  000EB8  6E0C               	movwf	___ftge@ff1,c
  4864  000EBA  0E00               	movlw	0
  4865  000EBC  6E0D               	movwf	___ftge@ff1+1,c
  4866  000EBE  0E00               	movlw	0
  4867  000EC0  6E0E               	movwf	___ftge@ff1+2,c
  4868  000EC2  C035  F00F         	movff	disp_show_quantity@real,___ftge@ff2
  4869  000EC6  C036  F010         	movff	disp_show_quantity@real+1,___ftge@ff2+1
  4870  000ECA  C037  F011         	movff	disp_show_quantity@real+2,___ftge@ff2+2
  4871  000ECE  ECB9  F00C         	call	___ftge	;wreg free
  4872  000ED2  B0D8               	btfsc	status,0,c
  4873  000ED4  D02A               	goto	l2941
  4874                           
  4875                           ;pulsonic.c: 207: {;pulsonic.c: 208: if (f<100.0f)
  4876  000ED6  C027  F00C         	movff	disp_show_quantity@f,___ftge@ff1
  4877  000EDA  C028  F00D         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4878  000EDE  C029  F00E         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4879  000EE2  0E00               	movlw	0
  4880  000EE4  6E0F               	movwf	___ftge@ff2,c
  4881  000EE6  0EC8               	movlw	200
  4882  000EE8  6E10               	movwf	___ftge@ff2+1,c
  4883  000EEA  0E42               	movlw	66
  4884  000EEC  6E11               	movwf	___ftge@ff2+2,c
  4885  000EEE  ECB9  F00C         	call	___ftge	;wreg free
  4886  000EF2  B0D8               	btfsc	status,0,c
  4887  000EF4  D01A               	goto	l2941
  4888                           
  4889                           ;pulsonic.c: 209: {;pulsonic.c: 210: I = (int)(f*10);
  4890  000EF6  0E00               	movlw	0
  4891  000EF8  6E0C               	movwf	___ftmul@f2,c
  4892  000EFA  0E20               	movlw	32
  4893  000EFC  6E0D               	movwf	___ftmul@f2+1,c
  4894  000EFE  0E41               	movlw	65
  4895  000F00  6E0E               	movwf	___ftmul@f2+2,c
  4896  000F02  C027  F009         	movff	disp_show_quantity@f,___ftmul@f1
  4897  000F06  C028  F00A         	movff	disp_show_quantity@f+1,___ftmul@f1+1
  4898  000F0A  C029  F00B         	movff	disp_show_quantity@f+2,___ftmul@f1+2
  4899  000F0E  EC8A  F00A         	call	___ftmul	;wreg free
  4900  000F12  C009  F018         	movff	?___ftmul,___fttol@f1
  4901  000F16  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  4902  000F1A  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  4903  000F1E  EC04  F00B         	call	___fttol	;wreg free
  4904  000F22  C018  F03B         	movff	?___fttol,disp_show_quantity@I
  4905  000F26  C019  F03C         	movff	?___fttol+1,disp_show_quantity@I+1
  4906  000F2A                     l2941:
  4907                           
  4908                           ;pulsonic.c: 211: };pulsonic.c: 213: };pulsonic.c: 214: itoa(buff, I, 10);
  4909  000F2A  0E2B               	movlw	low disp_show_quantity@buff
  4910  000F2C  6E10               	movwf	itoa@buf,c
  4911  000F2E  C03B  F011         	movff	disp_show_quantity@I,itoa@val
  4912  000F32  C03C  F012         	movff	disp_show_quantity@I+1,itoa@val+1
  4913  000F36  0E00               	movlw	0
  4914  000F38  6E14               	movwf	itoa@base+1,c
  4915  000F3A  0E0A               	movlw	10
  4916  000F3C  6E13               	movwf	itoa@base,c
  4917  000F3E  EC91  F00E         	call	_itoa	;wreg free
  4918                           
  4919                           ;pulsonic.c: 216: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[OFF];
  4920  000F42  0E0B               	movlw	low _DISP7S_CHARS
  4921  000F44  6EF6               	movwf	tblptrl,c
  4922  000F46                     	if	1	;There is more than 1 active tblptr byte
  4923  000F46  0E08               	movlw	high _DISP7S_CHARS
  4924  000F48  6EF7               	movwf	tblptrh,c
  4925  000F4A                     	endif
  4926  000F4A                     	if	0	;There are less than 3 active tblptr bytes
  4927  000F4A                     	endif
  4928  000F4A  0008               	tblrd		*
  4929  000F4C  CFF5 F178          	movff	tablat,_pulsonic+120
  4930                           
  4931                           ;pulsonic.c: 217: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[OFF];
  4932  000F50  0E0B               	movlw	low _DISP7S_CHARS
  4933  000F52  6EF6               	movwf	tblptrl,c
  4934  000F54                     	if	1	;There is more than 1 active tblptr byte
  4935  000F54  0E08               	movlw	high _DISP7S_CHARS
  4936  000F56  6EF7               	movwf	tblptrh,c
  4937  000F58                     	endif
  4938  000F58                     	if	0	;There are less than 3 active tblptr bytes
  4939  000F58                     	endif
  4940  000F58  0008               	tblrd		*
  4941  000F5A  CFF5 F177          	movff	tablat,_pulsonic+119
  4942                           
  4943                           ;pulsonic.c: 218: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[OFF];
  4944  000F5E  0E0B               	movlw	low _DISP7S_CHARS
  4945  000F60  6EF6               	movwf	tblptrl,c
  4946  000F62                     	if	1	;There is more than 1 active tblptr byte
  4947  000F62  0E08               	movlw	high _DISP7S_CHARS
  4948  000F64  6EF7               	movwf	tblptrh,c
  4949  000F66                     	endif
  4950  000F66                     	if	0	;There are less than 3 active tblptr bytes
  4951  000F66                     	endif
  4952  000F66  0008               	tblrd		*
  4953  000F68  CFF5 F176          	movff	tablat,_pulsonic+118
  4954                           
  4955                           ;pulsonic.c: 220: if (real<0.01)
  4956  000F6C  C035  F00C         	movff	disp_show_quantity@real,___ftge@ff1
  4957  000F70  C036  F00D         	movff	disp_show_quantity@real+1,___ftge@ff1+1
  4958  000F74  C037  F00E         	movff	disp_show_quantity@real+2,___ftge@ff1+2
  4959  000F78  0ED7               	movlw	215
  4960  000F7A  6E0F               	movwf	___ftge@ff2,c
  4961  000F7C  0E23               	movlw	35
  4962  000F7E  6E10               	movwf	___ftge@ff2+1,c
  4963  000F80  0E3C               	movlw	60
  4964  000F82  6E11               	movwf	___ftge@ff2+2,c
  4965  000F84  ECB9  F00C         	call	___ftge	;wreg free
  4966  000F88  B0D8               	btfsc	status,0,c
  4967  000F8A  D036               	goto	l2977
  4968                           
  4969                           ;pulsonic.c: 221: {;pulsonic.c: 222: if (I>99)
  4970  000F8C  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  4971  000F8E  D008               	goto	l2955
  4972  000F90  503C               	movf	disp_show_quantity@I+1,w,c
  4973  000F92  E104               	bnz	u2990
  4974  000F94  0E64               	movlw	100
  4975  000F96  5C3B               	subwf	disp_show_quantity@I,w,c
  4976  000F98  A0D8               	btfss	status,0,c
  4977  000F9A  D002               	goto	l2955
  4978  000F9C                     u2990:
  4979                           
  4980                           ;pulsonic.c: 223: last_pos = 2;
  4981  000F9C  0E02               	movlw	2
  4982  000F9E  D00B               	goto	L4
  4983  000FA0                     l2955:
  4984                           
  4985                           ;pulsonic.c: 224: else if (I>9)
  4986  000FA0  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  4987  000FA2  D008               	goto	l2959
  4988  000FA4  503C               	movf	disp_show_quantity@I+1,w,c
  4989  000FA6  E104               	bnz	u3000
  4990  000FA8  0E0A               	movlw	10
  4991  000FAA  5C3B               	subwf	disp_show_quantity@I,w,c
  4992  000FAC  A0D8               	btfss	status,0,c
  4993  000FAE  D002               	goto	l2959
  4994  000FB0                     u3000:
  4995                           
  4996                           ;pulsonic.c: 225: last_pos = 1;
  4997  000FB0  0E01               	movlw	1
  4998  000FB2  D001               	goto	L4
  4999  000FB4                     l2959:
  5000                           
  5001                           ;pulsonic.c: 226: else;pulsonic.c: 227: last_pos = 0;
  5002  000FB4  0E00               	movlw	0
  5003  000FB6                     L4:
  5004  000FB6  6E3A               	movwf	disp_show_quantity@last_pos,c
  5005                           
  5006                           ;pulsonic.c: 229: q = 0;
  5007  000FB8  0E00               	movlw	0
  5008  000FBA  6E39               	movwf	disp_show_quantity@q,c
  5009                           
  5010                           ;pulsonic.c: 230: for (i=last_pos; i>=0; i--)
  5011  000FBC  C03A  F03D         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  5012  000FC0                     l2963:
  5013  000FC0  BE3D               	btfsc	disp_show_quantity@i,7,c
  5014  000FC2  0012               	return	
  5015                           
  5016                           ;pulsonic.c: 231: {;pulsonic.c: 232: num = buff[i] - 0x30;
  5017  000FC4  503D               	movf	disp_show_quantity@i,w,c
  5018  000FC6  0F2B               	addlw	low disp_show_quantity@buff
  5019  000FC8  6ED9               	movwf	fsr2l,c
  5020  000FCA  6ADA               	clrf	fsr2h,c
  5021  000FCC  50DF               	movf	indf2,w,c
  5022  000FCE  0FD0               	addlw	208
  5023  000FD0  6E38               	movwf	disp_show_quantity@num,c
  5024                           
  5025                           ;pulsonic.c: 233: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5026  000FD2  5038               	movf	disp_show_quantity@num,w,c
  5027  000FD4  0F01               	addlw	low _DISP7S_NUMS
  5028  000FD6  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5029  000FD8  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5030  000FDC                     	if	1	;There is more than 1 active tblptr byte
  5031  000FDC  0E08               	movlw	high __smallconst
  5032  000FDE  6EF7               	movwf	tblptrh,c
  5033  000FE0                     	endif
  5034  000FE0                     	if	0	;tblptru may be non-zero
  5035  000FE0                     	endif
  5036  000FE0                     	if	0	;tblptru may be non-zero
  5037  000FE0                     	endif
  5038  000FE0  0E76               	movlw	low (_pulsonic+118)
  5039  000FE2  2439               	addwf	disp_show_quantity@q,w,c
  5040  000FE4  6ED9               	movwf	fsr2l,c
  5041  000FE6  6ADA               	clrf	fsr2h,c
  5042  000FE8  0E01               	movlw	high (_pulsonic+118)
  5043  000FEA  22DA               	addwfc	fsr2h,f,c
  5044  000FEC  0008               	tblrd		*
  5045  000FEE  CFF5 FFDF          	movff	tablat,indf2
  5046  000FF2  2A39               	incf	disp_show_quantity@q,f,c
  5047  000FF4  063D               	decf	disp_show_quantity@i,f,c
  5048  000FF6  D7E4               	goto	l2963
  5049  000FF8                     l2977:
  5050                           
  5051                           ;pulsonic.c: 236: else;pulsonic.c: 237: {;pulsonic.c: 238: if (f<100.0)
  5052  000FF8  C027  F00C         	movff	disp_show_quantity@f,___ftge@ff1
  5053  000FFC  C028  F00D         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  5054  001000  C029  F00E         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  5055  001004  0E00               	movlw	0
  5056  001006  6E0F               	movwf	___ftge@ff2,c
  5057  001008  0EC8               	movlw	200
  5058  00100A  6E10               	movwf	___ftge@ff2+1,c
  5059  00100C  0E42               	movlw	66
  5060  00100E  6E11               	movwf	___ftge@ff2+2,c
  5061  001010  ECB9  F00C         	call	___ftge	;wreg free
  5062  001014  B0D8               	btfsc	status,0,c
  5063  001016  D040               	goto	l3011
  5064                           
  5065                           ;pulsonic.c: 239: {;pulsonic.c: 243: if (I>99)
  5066  001018  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  5067  00101A  D008               	goto	l2983
  5068  00101C  503C               	movf	disp_show_quantity@I+1,w,c
  5069  00101E  E104               	bnz	u3030
  5070  001020  0E64               	movlw	100
  5071  001022  5C3B               	subwf	disp_show_quantity@I,w,c
  5072  001024  A0D8               	btfss	status,0,c
  5073  001026  D002               	goto	l2983
  5074  001028                     u3030:
  5075                           
  5076                           ;pulsonic.c: 244: {last_pos = 2;}
  5077  001028  0E02               	movlw	2
  5078  00102A  D012               	goto	L5
  5079  00102C                     l2983:
  5080                           
  5081                           ;pulsonic.c: 245: else if (I>9)
  5082  00102C  BE3C               	btfsc	disp_show_quantity@I+1,7,c
  5083  00102E  D008               	goto	l2987
  5084  001030  503C               	movf	disp_show_quantity@I+1,w,c
  5085  001032  E104               	bnz	u3040
  5086  001034  0E0A               	movlw	10
  5087  001036  5C3B               	subwf	disp_show_quantity@I,w,c
  5088  001038  A0D8               	btfss	status,0,c
  5089  00103A  D002               	goto	l2987
  5090  00103C                     u3040:
  5091                           
  5092                           ;pulsonic.c: 246: {last_pos = 1;}
  5093  00103C  0E01               	movlw	1
  5094  00103E  D008               	goto	L5
  5095  001040                     l2987:
  5096                           
  5097                           ;pulsonic.c: 247: else;pulsonic.c: 248: {;pulsonic.c: 249: pulsonic.display7s[QUANT_DIG_
      +                          1] = DISP7S_NUMS[0];
  5098  001040  0E01               	movlw	low _DISP7S_NUMS
  5099  001042  6EF6               	movwf	tblptrl,c
  5100  001044                     	if	1	;There is more than 1 active tblptr byte
  5101  001044  0E08               	movlw	high _DISP7S_NUMS
  5102  001046  6EF7               	movwf	tblptrh,c
  5103  001048                     	endif
  5104  001048                     	if	0	;There are less than 3 active tblptr bytes
  5105  001048                     	endif
  5106  001048  0008               	tblrd		*
  5107  00104A  CFF5 F177          	movff	tablat,_pulsonic+119
  5108                           
  5109                           ;pulsonic.c: 250: last_pos = 0;
  5110  00104E  0E00               	movlw	0
  5111  001050                     L5:
  5112  001050  6E3A               	movwf	disp_show_quantity@last_pos,c
  5113                           
  5114                           ;pulsonic.c: 251: };pulsonic.c: 253: q = 0;
  5115  001052  0E00               	movlw	0
  5116  001054  6E39               	movwf	disp_show_quantity@q,c
  5117                           
  5118                           ;pulsonic.c: 254: for (i=last_pos; i>=0; i--)
  5119  001056  C03A  F03D         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  5120  00105A                     l2995:
  5121  00105A  BE3D               	btfsc	disp_show_quantity@i,7,c
  5122  00105C  D01A               	goto	l3009
  5123                           
  5124                           ;pulsonic.c: 255: {;pulsonic.c: 256: num = buff[i] - 0x30;
  5125  00105E  503D               	movf	disp_show_quantity@i,w,c
  5126  001060  0F2B               	addlw	low disp_show_quantity@buff
  5127  001062  6ED9               	movwf	fsr2l,c
  5128  001064  6ADA               	clrf	fsr2h,c
  5129  001066  50DF               	movf	indf2,w,c
  5130  001068  0FD0               	addlw	208
  5131  00106A  6E38               	movwf	disp_show_quantity@num,c
  5132                           
  5133                           ;pulsonic.c: 257: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5134  00106C  5038               	movf	disp_show_quantity@num,w,c
  5135  00106E  0F01               	addlw	low _DISP7S_NUMS
  5136  001070  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5137  001072  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5138  001076                     	if	1	;There is more than 1 active tblptr byte
  5139  001076  0E08               	movlw	high __smallconst
  5140  001078  6EF7               	movwf	tblptrh,c
  5141  00107A                     	endif
  5142  00107A                     	if	0	;tblptru may be non-zero
  5143  00107A                     	endif
  5144  00107A                     	if	0	;tblptru may be non-zero
  5145  00107A                     	endif
  5146  00107A  0E76               	movlw	low (_pulsonic+118)
  5147  00107C  2439               	addwf	disp_show_quantity@q,w,c
  5148  00107E  6ED9               	movwf	fsr2l,c
  5149  001080  6ADA               	clrf	fsr2h,c
  5150  001082  0E01               	movlw	high (_pulsonic+118)
  5151  001084  22DA               	addwfc	fsr2h,f,c
  5152  001086  0008               	tblrd		*
  5153  001088  CFF5 FFDF          	movff	tablat,indf2
  5154  00108C  2A39               	incf	disp_show_quantity@q,f,c
  5155  00108E  063D               	decf	disp_show_quantity@i,f,c
  5156  001090  D7E4               	goto	l2995
  5157  001092                     l3009:
  5158                           
  5159                           ;pulsonic.c: 258: };pulsonic.c: 259: pulsonic.display7s[QUANT_DIG_1] |= 0x80;
  5160  001092  0101               	movlb	1	; () banked
  5161  001094  8F77               	bsf	(_pulsonic+119)& (0+255),7,b
  5162                           
  5163                           ;pulsonic.c: 261: }
  5164  001096  0012               	return	
  5165  001098                     l3011:
  5166                           
  5167                           ;pulsonic.c: 262: else;pulsonic.c: 263: {;pulsonic.c: 264: q = 0;
  5168  001098  0E00               	movlw	0
  5169  00109A  6E39               	movwf	disp_show_quantity@q,c
  5170                           
  5171                           ;pulsonic.c: 266: for (i=last_pos; i>=0; i--)
  5172  00109C  0E02               	movlw	2
  5173  00109E  6E3D               	movwf	disp_show_quantity@i,c
  5174  0010A0                     l3019:
  5175                           
  5176                           ;pulsonic.c: 267: {;pulsonic.c: 268: num = buff[i] - 0x30;
  5177  0010A0  503D               	movf	disp_show_quantity@i,w,c
  5178  0010A2  0F2B               	addlw	low disp_show_quantity@buff
  5179  0010A4  6ED9               	movwf	fsr2l,c
  5180  0010A6  6ADA               	clrf	fsr2h,c
  5181  0010A8  50DF               	movf	indf2,w,c
  5182  0010AA  0FD0               	addlw	208
  5183  0010AC  6E38               	movwf	disp_show_quantity@num,c
  5184                           
  5185                           ;pulsonic.c: 269: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  5186  0010AE  5038               	movf	disp_show_quantity@num,w,c
  5187  0010B0  0F01               	addlw	low _DISP7S_NUMS
  5188  0010B2  6E2A               	movwf	??_disp_show_quantity& (0+255),c
  5189  0010B4  C02A  FFF6         	movff	??_disp_show_quantity,tblptrl
  5190  0010B8                     	if	1	;There is more than 1 active tblptr byte
  5191  0010B8  0E08               	movlw	high __smallconst
  5192  0010BA  6EF7               	movwf	tblptrh,c
  5193  0010BC                     	endif
  5194  0010BC                     	if	0	;tblptru may be non-zero
  5195  0010BC                     	endif
  5196  0010BC                     	if	0	;tblptru may be non-zero
  5197  0010BC                     	endif
  5198  0010BC  0E76               	movlw	low (_pulsonic+118)
  5199  0010BE  2439               	addwf	disp_show_quantity@q,w,c
  5200  0010C0  6ED9               	movwf	fsr2l,c
  5201  0010C2  6ADA               	clrf	fsr2h,c
  5202  0010C4  0E01               	movlw	high (_pulsonic+118)
  5203  0010C6  22DA               	addwfc	fsr2h,f,c
  5204  0010C8  0008               	tblrd		*
  5205  0010CA  CFF5 FFDF          	movff	tablat,indf2
  5206  0010CE  2A39               	incf	disp_show_quantity@q,f,c
  5207  0010D0  063D               	decf	disp_show_quantity@i,f,c
  5208  0010D2  BE3D               	btfsc	disp_show_quantity@i,7,c
  5209  0010D4  0012               	return	
  5210  0010D6  D7E4               	goto	l3019
  5211  0010D8                     __end_of_disp_show_quantity:
  5212                           	opt callstack 0
  5213                           
  5214 ;; *************** function _itoa *****************
  5215 ;; Defined at:
  5216 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  buf             1   15[COMRAM] PTR unsigned char 
  5219 ;;		 -> disp_show_quantity@buff(10), 
  5220 ;;  val             2   16[COMRAM] int 
  5221 ;;  base            2   18[COMRAM] int 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  cp              1    0        PTR unsigned char 
  5224 ;;		 -> disp_show_quantity@buff(10), 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      PTR unsigned char 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5234 ;;      Params:         5       0       0       0       0       0       0       0       0
  5235 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5237 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5238 ;;Total ram usage:        6 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    3
  5241 ;; This function calls:
  5242 ;;		_utoa
  5243 ;; This function is called by:
  5244 ;;		_disp_show_quantity
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text44
  5249  001D22                     __ptext44:
  5250                           	opt callstack 0
  5251  001D22                     _itoa:
  5252                           	opt callstack 26
  5253                           
  5254                           ;incstack = 0
  5255  001D22  AE12               	btfss	itoa@val+1,7,c
  5256  001D24  D00A               	goto	l2749
  5257  001D26  5010               	movf	itoa@buf,w,c
  5258  001D28  6ED9               	movwf	fsr2l,c
  5259  001D2A  6ADA               	clrf	fsr2h,c
  5260  001D2C  0E2D               	movlw	45
  5261  001D2E  6EDF               	movwf	indf2,c
  5262  001D30  2A10               	incf	itoa@buf,f,c
  5263  001D32  6C11               	negf	itoa@val,c
  5264  001D34  1E12               	comf	itoa@val+1,f,c
  5265  001D36  B0D8               	btfsc	status,0,c
  5266  001D38  2A12               	incf	itoa@val+1,f,c
  5267  001D3A                     l2749:
  5268  001D3A  C010  F008         	movff	itoa@buf,utoa@buf
  5269  001D3E  C011  F009         	movff	itoa@val,utoa@val
  5270  001D42  C012  F00A         	movff	itoa@val+1,utoa@val+1
  5271  001D46  C013  F00B         	movff	itoa@base,utoa@base
  5272  001D4A  C014  F00C         	movff	itoa@base+1,utoa@base+1
  5273  001D4E  EC6F  F00C         	call	_utoa	;wreg free
  5274  001D52  0012               	return		;funcret
  5275  001D54                     __end_of_itoa:
  5276                           	opt callstack 0
  5277                           
  5278 ;; *************** function _utoa *****************
  5279 ;; Defined at:
  5280 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  buf             1    7[COMRAM] PTR unsigned char 
  5283 ;;		 -> disp_show_quantity@buff(10), 
  5284 ;;  val             2    8[COMRAM] unsigned int 
  5285 ;;  base            2   10[COMRAM] int 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  v               2   12[COMRAM] unsigned int 
  5288 ;;  c               1   14[COMRAM] unsigned char 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      PTR unsigned char 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5298 ;;      Params:         5       0       0       0       0       0       0       0       0
  5299 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5301 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5302 ;;Total ram usage:        8 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    2
  5305 ;; This function calls:
  5306 ;;		___lwdiv
  5307 ;;		___lwmod
  5308 ;; This function is called by:
  5309 ;;		_itoa
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text45
  5314  0018DE                     __ptext45:
  5315                           	opt callstack 0
  5316  0018DE                     _utoa:
  5317                           	opt callstack 26
  5318                           
  5319                           ;incstack = 0
  5320  0018DE  C009  F00D         	movff	utoa@val,utoa@v
  5321  0018E2  C00A  F00E         	movff	utoa@val+1,utoa@v+1
  5322  0018E6                     l2487:
  5323  0018E6  C00D  F001         	movff	utoa@v,___lwdiv@dividend
  5324  0018EA  C00E  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  5325  0018EE  C00B  F003         	movff	utoa@base,___lwdiv@divisor
  5326  0018F2  C00C  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  5327  0018F6  EC58  F00D         	call	___lwdiv	;wreg free
  5328  0018FA  C001  F00D         	movff	?___lwdiv,utoa@v
  5329  0018FE  C002  F00E         	movff	?___lwdiv+1,utoa@v+1
  5330  001902  2A08               	incf	utoa@buf,f,c
  5331  001904  500D               	movf	utoa@v,w,c
  5332  001906  100E               	iorwf	utoa@v+1,w,c
  5333  001908  A4D8               	btfss	status,2,c
  5334  00190A  D7ED               	goto	l2487
  5335  00190C  5008               	movf	utoa@buf,w,c
  5336  00190E  6ED9               	movwf	fsr2l,c
  5337  001910  6ADA               	clrf	fsr2h,c
  5338  001912  0E00               	movlw	0
  5339  001914  6EDF               	movwf	indf2,c
  5340  001916  0608               	decf	utoa@buf,f,c
  5341  001918                     l2497:
  5342  001918  C009  F001         	movff	utoa@val,___lwmod@dividend
  5343  00191C  C00A  F002         	movff	utoa@val+1,___lwmod@dividend+1
  5344  001920  C00B  F003         	movff	utoa@base,___lwmod@divisor
  5345  001924  C00C  F004         	movff	utoa@base+1,___lwmod@divisor+1
  5346  001928  EC14  F00E         	call	___lwmod	;wreg free
  5347  00192C  5001               	movf	?___lwmod,w,c
  5348  00192E  6E0F               	movwf	utoa@c,c
  5349  001930  C009  F001         	movff	utoa@val,___lwdiv@dividend
  5350  001934  C00A  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  5351  001938  C00B  F003         	movff	utoa@base,___lwdiv@divisor
  5352  00193C  C00C  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  5353  001940  EC58  F00D         	call	___lwdiv	;wreg free
  5354  001944  C001  F009         	movff	?___lwdiv,utoa@val
  5355  001948  C002  F00A         	movff	?___lwdiv+1,utoa@val+1
  5356  00194C  0E09               	movlw	9
  5357  00194E  640F               	cpfsgt	utoa@c,c
  5358  001950  D002               	goto	l1209
  5359  001952  0E07               	movlw	7
  5360  001954  260F               	addwf	utoa@c,f,c
  5361  001956                     l1209:
  5362  001956  0E30               	movlw	48
  5363  001958  260F               	addwf	utoa@c,f,c
  5364  00195A  5008               	movf	utoa@buf,w,c
  5365  00195C  6ED9               	movwf	fsr2l,c
  5366  00195E  6ADA               	clrf	fsr2h,c
  5367  001960  C00F  FFDF         	movff	utoa@c,indf2
  5368  001964  0608               	decf	utoa@buf,f,c
  5369  001966  5009               	movf	utoa@val,w,c
  5370  001968  100A               	iorwf	utoa@val+1,w,c
  5371  00196A  A4D8               	btfss	status,2,c
  5372  00196C  D7D5               	goto	l2497
  5373                           
  5374                           ;	Return value of _utoa is never used
  5375  00196E  2A08               	incf	utoa@buf,f,c
  5376  001970  0012               	return		;funcret
  5377  001972                     __end_of_utoa:
  5378                           	opt callstack 0
  5379                           
  5380 ;; *************** function ___lwmod *****************
  5381 ;; Defined at:
  5382 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  dividend        2    0[COMRAM] unsigned int 
  5385 ;;  divisor         2    2[COMRAM] unsigned int 
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;  counter         1    4[COMRAM] unsigned char 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2    0[COMRAM] unsigned int 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2, status,0
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5397 ;;      Params:         4       0       0       0       0       0       0       0       0
  5398 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5400 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5401 ;;Total ram usage:        5 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    1
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_utoa
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text46
  5412  001C28                     __ptext46:
  5413                           	opt callstack 0
  5414  001C28                     ___lwmod:
  5415                           	opt callstack 26
  5416                           
  5417                           ;incstack = 0
  5418  001C28  5003               	movf	___lwmod@divisor,w,c
  5419  001C2A  1004               	iorwf	___lwmod@divisor+1,w,c
  5420  001C2C  B4D8               	btfsc	status,2,c
  5421  001C2E  D018               	goto	l1027
  5422  001C30  0E01               	movlw	1
  5423  001C32  6E05               	movwf	___lwmod@counter,c
  5424  001C34  D004               	goto	l2317
  5425  001C36                     l2315:
  5426  001C36  90D8               	bcf	status,0,c
  5427  001C38  3603               	rlcf	___lwmod@divisor,f,c
  5428  001C3A  3604               	rlcf	___lwmod@divisor+1,f,c
  5429  001C3C  2A05               	incf	___lwmod@counter,f,c
  5430  001C3E                     l2317:
  5431  001C3E  AE04               	btfss	___lwmod@divisor+1,7,c
  5432  001C40  D7FA               	goto	l2315
  5433  001C42                     u1720:
  5434  001C42  5003               	movf	___lwmod@divisor,w,c
  5435  001C44  5C01               	subwf	___lwmod@dividend,w,c
  5436  001C46  5004               	movf	___lwmod@divisor+1,w,c
  5437  001C48  5802               	subwfb	___lwmod@dividend+1,w,c
  5438  001C4A  A0D8               	btfss	status,0,c
  5439  001C4C  D004               	goto	l2323
  5440  001C4E  5003               	movf	___lwmod@divisor,w,c
  5441  001C50  5E01               	subwf	___lwmod@dividend,f,c
  5442  001C52  5004               	movf	___lwmod@divisor+1,w,c
  5443  001C54  5A02               	subwfb	___lwmod@dividend+1,f,c
  5444  001C56                     l2323:
  5445  001C56  90D8               	bcf	status,0,c
  5446  001C58  3204               	rrcf	___lwmod@divisor+1,f,c
  5447  001C5A  3203               	rrcf	___lwmod@divisor,f,c
  5448  001C5C  2E05               	decfsz	___lwmod@counter,f,c
  5449  001C5E  D7F1               	goto	u1720
  5450  001C60                     l1027:
  5451  001C60  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5452  001C64  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5453  001C68  0012               	return		;funcret
  5454  001C6A                     __end_of___lwmod:
  5455                           	opt callstack 0
  5456                           
  5457 ;; *************** function ___lwdiv *****************
  5458 ;; Defined at:
  5459 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  dividend        2    0[COMRAM] unsigned int 
  5462 ;;  divisor         2    2[COMRAM] unsigned int 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  quotient        2    4[COMRAM] unsigned int 
  5465 ;;  counter         1    6[COMRAM] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  2    0[COMRAM] unsigned int 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5475 ;;      Params:         4       0       0       0       0       0       0       0       0
  5476 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5478 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5479 ;;Total ram usage:        7 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; Hardware stack levels required when called:    1
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_utoa
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text47
  5490  001AB0                     __ptext47:
  5491                           	opt callstack 0
  5492  001AB0                     ___lwdiv:
  5493                           	opt callstack 26
  5494                           
  5495                           ;incstack = 0
  5496  001AB0  0E00               	movlw	0
  5497  001AB2  6E06               	movwf	___lwdiv@quotient+1,c
  5498  001AB4  0E00               	movlw	0
  5499  001AB6  6E05               	movwf	___lwdiv@quotient,c
  5500  001AB8  5003               	movf	___lwdiv@divisor,w,c
  5501  001ABA  1004               	iorwf	___lwdiv@divisor+1,w,c
  5502  001ABC  B4D8               	btfsc	status,2,c
  5503  001ABE  D01C               	goto	l1017
  5504  001AC0  0E01               	movlw	1
  5505  001AC2  6E07               	movwf	___lwdiv@counter,c
  5506  001AC4  D004               	goto	l2297
  5507  001AC6                     l2295:
  5508  001AC6  90D8               	bcf	status,0,c
  5509  001AC8  3603               	rlcf	___lwdiv@divisor,f,c
  5510  001ACA  3604               	rlcf	___lwdiv@divisor+1,f,c
  5511  001ACC  2A07               	incf	___lwdiv@counter,f,c
  5512  001ACE                     l2297:
  5513  001ACE  AE04               	btfss	___lwdiv@divisor+1,7,c
  5514  001AD0  D7FA               	goto	l2295
  5515  001AD2                     u1690:
  5516  001AD2  90D8               	bcf	status,0,c
  5517  001AD4  3605               	rlcf	___lwdiv@quotient,f,c
  5518  001AD6  3606               	rlcf	___lwdiv@quotient+1,f,c
  5519  001AD8  5003               	movf	___lwdiv@divisor,w,c
  5520  001ADA  5C01               	subwf	___lwdiv@dividend,w,c
  5521  001ADC  5004               	movf	___lwdiv@divisor+1,w,c
  5522  001ADE  5802               	subwfb	___lwdiv@dividend+1,w,c
  5523  001AE0  A0D8               	btfss	status,0,c
  5524  001AE2  D005               	goto	l2307
  5525  001AE4  5003               	movf	___lwdiv@divisor,w,c
  5526  001AE6  5E01               	subwf	___lwdiv@dividend,f,c
  5527  001AE8  5004               	movf	___lwdiv@divisor+1,w,c
  5528  001AEA  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5529  001AEC  8005               	bsf	___lwdiv@quotient,0,c
  5530  001AEE                     l2307:
  5531  001AEE  90D8               	bcf	status,0,c
  5532  001AF0  3204               	rrcf	___lwdiv@divisor+1,f,c
  5533  001AF2  3203               	rrcf	___lwdiv@divisor,f,c
  5534  001AF4  2E07               	decfsz	___lwdiv@counter,f,c
  5535  001AF6  D7ED               	goto	u1690
  5536  001AF8                     l1017:
  5537  001AF8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5538  001AFC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5539  001B00  0012               	return		;funcret
  5540  001B02                     __end_of___lwdiv:
  5541                           	opt callstack 0
  5542                           
  5543 ;; *************** function ___fttol *****************
  5544 ;; Defined at:
  5545 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  f1              3   23[COMRAM] float 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  lval            4   33[COMRAM] unsigned long 
  5550 ;;  exp1            1   37[COMRAM] unsigned char 
  5551 ;;  sign1           1   32[COMRAM] unsigned char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  4   23[COMRAM] long 
  5554 ;; Registers used:
  5555 ;;		wreg, status,2, status,0
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5561 ;;      Params:         4       0       0       0       0       0       0       0       0
  5562 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5563 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5564 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5565 ;;Total ram usage:       15 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    1
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_disp_show_quantity
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text48
  5576  001608                     __ptext48:
  5577                           	opt callstack 0
  5578  001608                     ___fttol:
  5579                           	opt callstack 28
  5580                           
  5581                           ;incstack = 0
  5582  001608  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  5583  00160C  6A1D               	clrf	(??___fttol+1)& (0+255),c
  5584  00160E  6A1E               	clrf	(??___fttol+2)& (0+255),c
  5585  001610  3419               	rlcf	___fttol@f1+1,w,c
  5586  001612  361C               	rlcf	??___fttol& (0+255),f,c
  5587  001614  E301               	bnc	u2831
  5588  001616  801D               	bsf	(??___fttol+1)& (0+255),0,c
  5589  001618                     u2831:
  5590  001618  501C               	movf	??___fttol,w,c
  5591  00161A  6E26               	movwf	___fttol@exp1,c
  5592  00161C  5026               	movf	___fttol@exp1,w,c
  5593  00161E  A4D8               	btfss	status,2,c
  5594  001620  D009               	goto	l2833
  5595  001622                     u2840:
  5596  001622  0E00               	movlw	0
  5597  001624  6E18               	movwf	?___fttol,c
  5598  001626  0E00               	movlw	0
  5599  001628  6E19               	movwf	?___fttol+1,c
  5600  00162A  0E00               	movlw	0
  5601  00162C  6E1A               	movwf	?___fttol+2,c
  5602  00162E  0E00               	movlw	0
  5603  001630  6E1B               	movwf	?___fttol+3,c
  5604  001632  0012               	return	
  5605  001634                     l2833:
  5606  001634  0E17               	movlw	23
  5607  001636  6E1C               	movwf	??___fttol& (0+255),c
  5608  001638  C018  F01D         	movff	___fttol@f1,??___fttol+1
  5609  00163C  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  5610  001640  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  5611  001644  281C               	incf	??___fttol,w,c
  5612  001646  6E20               	movwf	(??___fttol+4)& (0+255),c
  5613  001648  D004               	goto	u2850
  5614  00164A                     u2855:
  5615  00164A  90D8               	bcf	status,0,c
  5616  00164C  321F               	rrcf	??___fttol+3,f,c
  5617  00164E  321E               	rrcf	??___fttol+2,f,c
  5618  001650  321D               	rrcf	??___fttol+1,f,c
  5619  001652                     u2850:
  5620  001652  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  5621  001654  D7FA               	goto	u2855
  5622  001656  501D               	movf	??___fttol+1,w,c
  5623  001658  6E21               	movwf	___fttol@sign1,c
  5624  00165A  8E19               	bsf	___fttol@f1+1,7,c
  5625  00165C  0EFF               	movlw	255
  5626  00165E  1618               	andwf	___fttol@f1,f,c
  5627  001660  0EFF               	movlw	255
  5628  001662  1619               	andwf	___fttol@f1+1,f,c
  5629  001664  0E00               	movlw	0
  5630  001666  161A               	andwf	___fttol@f1+2,f,c
  5631  001668  5018               	movf	___fttol@f1,w,c
  5632  00166A  6E22               	movwf	___fttol@lval,c
  5633  00166C  5019               	movf	___fttol@f1+1,w,c
  5634  00166E  6E23               	movwf	___fttol@lval+1,c
  5635  001670  501A               	movf	___fttol@f1+2,w,c
  5636  001672  6E24               	movwf	___fttol@lval+2,c
  5637  001674  6A25               	clrf	___fttol@lval+3,c
  5638  001676  0E8E               	movlw	142
  5639  001678  5E26               	subwf	___fttol@exp1,f,c
  5640  00167A  AE26               	btfss	___fttol@exp1,7,c
  5641  00167C  D00D               	goto	l2855
  5642  00167E  5026               	movf	___fttol@exp1,w,c
  5643  001680  0A80               	xorlw	128
  5644  001682  0F8F               	addlw	143
  5645  001684  A0D8               	btfss	status,0,c
  5646  001686  D7CD               	goto	u2840
  5647  001688                     l2851:
  5648  001688  90D8               	bcf	status,0,c
  5649  00168A  3225               	rrcf	___fttol@lval+3,f,c
  5650  00168C  3224               	rrcf	___fttol@lval+2,f,c
  5651  00168E  3223               	rrcf	___fttol@lval+1,f,c
  5652  001690  3222               	rrcf	___fttol@lval,f,c
  5653  001692  3E26               	incfsz	___fttol@exp1,f,c
  5654  001694  D7F9               	goto	l2851
  5655  001696  D00D               	goto	u2890
  5656  001698                     l2855:
  5657  001698  0E17               	movlw	23
  5658  00169A  6426               	cpfsgt	___fttol@exp1,c
  5659  00169C  D007               	goto	l2863
  5660  00169E  D7C1               	goto	u2840
  5661  0016A0                     l2861:
  5662  0016A0  90D8               	bcf	status,0,c
  5663  0016A2  3622               	rlcf	___fttol@lval,f,c
  5664  0016A4  3623               	rlcf	___fttol@lval+1,f,c
  5665  0016A6  3624               	rlcf	___fttol@lval+2,f,c
  5666  0016A8  3625               	rlcf	___fttol@lval+3,f,c
  5667  0016AA  0626               	decf	___fttol@exp1,f,c
  5668  0016AC                     l2863:
  5669  0016AC  5026               	movf	___fttol@exp1,w,c
  5670  0016AE  A4D8               	btfss	status,2,c
  5671  0016B0  D7F7               	goto	l2861
  5672  0016B2                     u2890:
  5673  0016B2  5021               	movf	___fttol@sign1,w,c
  5674  0016B4  B4D8               	btfsc	status,2,c
  5675  0016B6  D008               	goto	l2869
  5676  0016B8  1E25               	comf	___fttol@lval+3,f,c
  5677  0016BA  1E24               	comf	___fttol@lval+2,f,c
  5678  0016BC  1E23               	comf	___fttol@lval+1,f,c
  5679  0016BE  6C22               	negf	___fttol@lval,c
  5680  0016C0  0E00               	movlw	0
  5681  0016C2  2223               	addwfc	___fttol@lval+1,f,c
  5682  0016C4  2224               	addwfc	___fttol@lval+2,f,c
  5683  0016C6  2225               	addwfc	___fttol@lval+3,f,c
  5684  0016C8                     l2869:
  5685  0016C8  C022  F018         	movff	___fttol@lval,?___fttol
  5686  0016CC  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  5687  0016D0  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  5688  0016D4  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  5689  0016D8  0012               	return		;funcret
  5690  0016DA                     __end_of___fttol:
  5691                           	opt callstack 0
  5692                           
  5693 ;; *************** function ___ftsub *****************
  5694 ;; Defined at:
  5695 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  f1              3   20[COMRAM] float 
  5698 ;;  f2              3   23[COMRAM] float 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  3   20[COMRAM] float 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5710 ;;      Params:         6       0       0       0       0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5713 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5714 ;;Total ram usage:        6 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    3
  5717 ;; This function calls:
  5718 ;;		___ftadd
  5719 ;; This function is called by:
  5720 ;;		_disp_show_quantity
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text49
  5725  001CAA                     __ptext49:
  5726                           	opt callstack 0
  5727  001CAA                     ___ftsub:
  5728                           	opt callstack 26
  5729                           
  5730                           ;incstack = 0
  5731  001CAA  5018               	movf	___ftsub@f2,w,c
  5732  001CAC  1019               	iorwf	___ftsub@f2+1,w,c
  5733  001CAE  101A               	iorwf	___ftsub@f2+2,w,c
  5734  001CB0  B4D8               	btfsc	status,2,c
  5735  001CB2  D006               	goto	l2811
  5736  001CB4  0E00               	movlw	0
  5737  001CB6  1A18               	xorwf	___ftsub@f2,f,c
  5738  001CB8  0E00               	movlw	0
  5739  001CBA  1A19               	xorwf	___ftsub@f2+1,f,c
  5740  001CBC  0E80               	movlw	128
  5741  001CBE  1A1A               	xorwf	___ftsub@f2+2,f,c
  5742  001CC0                     l2811:
  5743  001CC0  C015  F009         	movff	___ftsub@f1,___ftadd@f1
  5744  001CC4  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
  5745  001CC8  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
  5746  001CCC  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
  5747  001CD0  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
  5748  001CD4  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
  5749  001CD8  EC6C  F008         	call	___ftadd	;wreg free
  5750  001CDC  C009  F015         	movff	?___ftadd,?___ftsub
  5751  001CE0  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
  5752  001CE4  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
  5753  001CE8  0012               	return		;funcret
  5754  001CEA                     __end_of___ftsub:
  5755                           	opt callstack 0
  5756                           
  5757 ;; *************** function ___ftadd *****************
  5758 ;; Defined at:
  5759 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  f1              3    8[COMRAM] float 
  5762 ;;  f2              3   11[COMRAM] float 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;  exp1            1   19[COMRAM] unsigned char 
  5765 ;;  exp2            1   18[COMRAM] unsigned char 
  5766 ;;  sign            1   17[COMRAM] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  3    8[COMRAM] float 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5776 ;;      Params:         6       0       0       0       0       0       0       0       0
  5777 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5778 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5779 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5780 ;;Total ram usage:       12 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    2
  5783 ;; This function calls:
  5784 ;;		___ftpack
  5785 ;; This function is called by:
  5786 ;;		___ftsub
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text50
  5791  0010D8                     __ptext50:
  5792                           	opt callstack 0
  5793  0010D8                     ___ftadd:
  5794                           	opt callstack 26
  5795                           
  5796                           ;incstack = 0
  5797  0010D8  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  5798  0010DC  6A10               	clrf	(??___ftadd+1)& (0+255),c
  5799  0010DE  6A11               	clrf	(??___ftadd+2)& (0+255),c
  5800  0010E0  340A               	rlcf	___ftadd@f1+1,w,c
  5801  0010E2  360F               	rlcf	??___ftadd& (0+255),f,c
  5802  0010E4  E301               	bnc	u1801
  5803  0010E6  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  5804  0010E8                     u1801:
  5805  0010E8  500F               	movf	??___ftadd,w,c
  5806  0010EA  6E14               	movwf	___ftadd@exp1,c
  5807  0010EC  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  5808  0010F0  6A10               	clrf	(??___ftadd+1)& (0+255),c
  5809  0010F2  6A11               	clrf	(??___ftadd+2)& (0+255),c
  5810  0010F4  340D               	rlcf	___ftadd@f2+1,w,c
  5811  0010F6  360F               	rlcf	??___ftadd& (0+255),f,c
  5812  0010F8  E301               	bnc	u1811
  5813  0010FA  8010               	bsf	(??___ftadd+1)& (0+255),0,c
  5814  0010FC                     u1811:
  5815  0010FC  500F               	movf	??___ftadd,w,c
  5816  0010FE  6E13               	movwf	___ftadd@exp2,c
  5817  001100  5014               	movf	___ftadd@exp1,w,c
  5818  001102  B4D8               	btfsc	status,2,c
  5819  001104  D00A               	goto	u1840
  5820  001106  5013               	movf	___ftadd@exp2,w,c
  5821  001108  5C14               	subwf	___ftadd@exp1,w,c
  5822  00110A  B0D8               	btfsc	status,0,c
  5823  00110C  D00D               	goto	l2401
  5824  00110E  5014               	movf	___ftadd@exp1,w,c
  5825  001110  5C13               	subwf	___ftadd@exp2,w,c
  5826  001112  6E0F               	movwf	??___ftadd& (0+255),c
  5827  001114  0E18               	movlw	24
  5828  001116  640F               	cpfsgt	??___ftadd,c
  5829  001118  D007               	goto	l2401
  5830  00111A                     u1840:
  5831  00111A  C00C  F009         	movff	___ftadd@f2,?___ftadd
  5832  00111E  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  5833  001122  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  5834  001126  0012               	return	
  5835  001128                     l2401:
  5836  001128  5013               	movf	___ftadd@exp2,w,c
  5837  00112A  B4D8               	btfsc	status,2,c
  5838  00112C  D00A               	goto	u1870
  5839  00112E  5014               	movf	___ftadd@exp1,w,c
  5840  001130  5C13               	subwf	___ftadd@exp2,w,c
  5841  001132  B0D8               	btfsc	status,0,c
  5842  001134  D00D               	goto	l2407
  5843  001136  5013               	movf	___ftadd@exp2,w,c
  5844  001138  5C14               	subwf	___ftadd@exp1,w,c
  5845  00113A  6E0F               	movwf	??___ftadd& (0+255),c
  5846  00113C  0E18               	movlw	24
  5847  00113E  640F               	cpfsgt	??___ftadd,c
  5848  001140  D007               	goto	l2407
  5849  001142                     u1870:
  5850  001142  C009  F009         	movff	___ftadd@f1,?___ftadd
  5851  001146  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  5852  00114A  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  5853  00114E  0012               	return	
  5854  001150                     l2407:
  5855  001150  0E06               	movlw	6
  5856  001152  6E12               	movwf	___ftadd@sign,c
  5857  001154  BE0B               	btfsc	___ftadd@f1+2,7,c
  5858  001156  8E12               	bsf	___ftadd@sign,7,c
  5859  001158  BE0E               	btfsc	___ftadd@f2+2,7,c
  5860  00115A  8C12               	bsf	___ftadd@sign,6,c
  5861  00115C  8E0A               	bsf	___ftadd@f1+1,7,c
  5862  00115E  0EFF               	movlw	255
  5863  001160  1609               	andwf	___ftadd@f1,f,c
  5864  001162  0EFF               	movlw	255
  5865  001164  160A               	andwf	___ftadd@f1+1,f,c
  5866  001166  0E00               	movlw	0
  5867  001168  160B               	andwf	___ftadd@f1+2,f,c
  5868  00116A  8E0D               	bsf	___ftadd@f2+1,7,c
  5869  00116C  0EFF               	movlw	255
  5870  00116E  160C               	andwf	___ftadd@f2,f,c
  5871  001170  0EFF               	movlw	255
  5872  001172  160D               	andwf	___ftadd@f2+1,f,c
  5873  001174  0E00               	movlw	0
  5874  001176  160E               	andwf	___ftadd@f2+2,f,c
  5875  001178  5013               	movf	___ftadd@exp2,w,c
  5876  00117A  5C14               	subwf	___ftadd@exp1,w,c
  5877  00117C  B0D8               	btfsc	status,0,c
  5878  00117E  D01B               	goto	l2433
  5879  001180                     u1900:
  5880  001180  90D8               	bcf	status,0,c
  5881  001182  360C               	rlcf	___ftadd@f2,f,c
  5882  001184  360D               	rlcf	___ftadd@f2+1,f,c
  5883  001186  360E               	rlcf	___ftadd@f2+2,f,c
  5884  001188  0613               	decf	___ftadd@exp2,f,c
  5885  00118A  5014               	movf	___ftadd@exp1,w,c
  5886  00118C  1813               	xorwf	___ftadd@exp2,w,c
  5887  00118E  B4D8               	btfsc	status,2,c
  5888  001190  D00D               	goto	l2431
  5889  001192  0612               	decf	___ftadd@sign,f,c
  5890  001194  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5891  001198  0E07               	movlw	7
  5892  00119A  160F               	andwf	??___ftadd,f,c
  5893  00119C  B4D8               	btfsc	status,2,c
  5894  00119E  D006               	goto	l2431
  5895  0011A0  D7EF               	goto	u1900
  5896  0011A2                     l2429:
  5897  0011A2  90D8               	bcf	status,0,c
  5898  0011A4  320B               	rrcf	___ftadd@f1+2,f,c
  5899  0011A6  320A               	rrcf	___ftadd@f1+1,f,c
  5900  0011A8  3209               	rrcf	___ftadd@f1,f,c
  5901  0011AA  2A14               	incf	___ftadd@exp1,f,c
  5902  0011AC                     l2431:
  5903  0011AC  5013               	movf	___ftadd@exp2,w,c
  5904  0011AE  1814               	xorwf	___ftadd@exp1,w,c
  5905  0011B0  B4D8               	btfsc	status,2,c
  5906  0011B2  D01F               	goto	u1970
  5907  0011B4  D7F6               	goto	l2429
  5908  0011B6                     l2433:
  5909  0011B6  5014               	movf	___ftadd@exp1,w,c
  5910  0011B8  5C13               	subwf	___ftadd@exp2,w,c
  5911  0011BA  B0D8               	btfsc	status,0,c
  5912  0011BC  D01A               	goto	u1970
  5913  0011BE                     u1940:
  5914  0011BE  90D8               	bcf	status,0,c
  5915  0011C0  3609               	rlcf	___ftadd@f1,f,c
  5916  0011C2  360A               	rlcf	___ftadd@f1+1,f,c
  5917  0011C4  360B               	rlcf	___ftadd@f1+2,f,c
  5918  0011C6  0614               	decf	___ftadd@exp1,f,c
  5919  0011C8  5014               	movf	___ftadd@exp1,w,c
  5920  0011CA  1813               	xorwf	___ftadd@exp2,w,c
  5921  0011CC  B4D8               	btfsc	status,2,c
  5922  0011CE  D00D               	goto	l2443
  5923  0011D0  0612               	decf	___ftadd@sign,f,c
  5924  0011D2  C012  F00F         	movff	___ftadd@sign,??___ftadd
  5925  0011D6  0E07               	movlw	7
  5926  0011D8  160F               	andwf	??___ftadd,f,c
  5927  0011DA  B4D8               	btfsc	status,2,c
  5928  0011DC  D006               	goto	l2443
  5929  0011DE  D7EF               	goto	u1940
  5930  0011E0                     l2441:
  5931  0011E0  90D8               	bcf	status,0,c
  5932  0011E2  320E               	rrcf	___ftadd@f2+2,f,c
  5933  0011E4  320D               	rrcf	___ftadd@f2+1,f,c
  5934  0011E6  320C               	rrcf	___ftadd@f2,f,c
  5935  0011E8  2A13               	incf	___ftadd@exp2,f,c
  5936  0011EA                     l2443:
  5937  0011EA  5013               	movf	___ftadd@exp2,w,c
  5938  0011EC  1814               	xorwf	___ftadd@exp1,w,c
  5939  0011EE  A4D8               	btfss	status,2,c
  5940  0011F0  D7F7               	goto	l2441
  5941  0011F2                     u1970:
  5942  0011F2  AE12               	btfss	___ftadd@sign,7,c
  5943  0011F4  D00C               	goto	l868
  5944  0011F6  0EFF               	movlw	255
  5945  0011F8  1A09               	xorwf	___ftadd@f1,f,c
  5946  0011FA  0EFF               	movlw	255
  5947  0011FC  1A0A               	xorwf	___ftadd@f1+1,f,c
  5948  0011FE  0EFF               	movlw	255
  5949  001200  1A0B               	xorwf	___ftadd@f1+2,f,c
  5950  001202  0E01               	movlw	1
  5951  001204  2609               	addwf	___ftadd@f1,f,c
  5952  001206  0E00               	movlw	0
  5953  001208  220A               	addwfc	___ftadd@f1+1,f,c
  5954  00120A  0E00               	movlw	0
  5955  00120C  220B               	addwfc	___ftadd@f1+2,f,c
  5956  00120E                     l868:
  5957  00120E  AC12               	btfss	___ftadd@sign,6,c
  5958  001210  D00C               	goto	l2449
  5959  001212  0EFF               	movlw	255
  5960  001214  1A0C               	xorwf	___ftadd@f2,f,c
  5961  001216  0EFF               	movlw	255
  5962  001218  1A0D               	xorwf	___ftadd@f2+1,f,c
  5963  00121A  0EFF               	movlw	255
  5964  00121C  1A0E               	xorwf	___ftadd@f2+2,f,c
  5965  00121E  0E01               	movlw	1
  5966  001220  260C               	addwf	___ftadd@f2,f,c
  5967  001222  0E00               	movlw	0
  5968  001224  220D               	addwfc	___ftadd@f2+1,f,c
  5969  001226  0E00               	movlw	0
  5970  001228  220E               	addwfc	___ftadd@f2+2,f,c
  5971  00122A                     l2449:
  5972  00122A  0E00               	movlw	0
  5973  00122C  6E12               	movwf	___ftadd@sign,c
  5974  00122E  5009               	movf	___ftadd@f1,w,c
  5975  001230  260C               	addwf	___ftadd@f2,f,c
  5976  001232  500A               	movf	___ftadd@f1+1,w,c
  5977  001234  220D               	addwfc	___ftadd@f2+1,f,c
  5978  001236  500B               	movf	___ftadd@f1+2,w,c
  5979  001238  220E               	addwfc	___ftadd@f2+2,f,c
  5980  00123A  AE0E               	btfss	___ftadd@f2+2,7,c
  5981  00123C  D00E               	goto	l2459
  5982  00123E  0EFF               	movlw	255
  5983  001240  1A0C               	xorwf	___ftadd@f2,f,c
  5984  001242  0EFF               	movlw	255
  5985  001244  1A0D               	xorwf	___ftadd@f2+1,f,c
  5986  001246  0EFF               	movlw	255
  5987  001248  1A0E               	xorwf	___ftadd@f2+2,f,c
  5988  00124A  0E01               	movlw	1
  5989  00124C  260C               	addwf	___ftadd@f2,f,c
  5990  00124E  0E00               	movlw	0
  5991  001250  220D               	addwfc	___ftadd@f2+1,f,c
  5992  001252  0E00               	movlw	0
  5993  001254  220E               	addwfc	___ftadd@f2+2,f,c
  5994  001256  0E01               	movlw	1
  5995  001258  6E12               	movwf	___ftadd@sign,c
  5996  00125A                     l2459:
  5997  00125A  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  5998  00125E  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5999  001262  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  6000  001266  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  6001  00126A  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  6002  00126E  ECC8  F00B         	call	___ftpack	;wreg free
  6003  001272  C001  F009         	movff	?___ftpack,?___ftadd
  6004  001276  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  6005  00127A  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  6006  00127E  0012               	return		;funcret
  6007  001280                     __end_of___ftadd:
  6008                           	opt callstack 0
  6009                           
  6010 ;; *************** function ___ftmul *****************
  6011 ;; Defined at:
  6012 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  f1              3    8[COMRAM] float 
  6015 ;;  f2              3   11[COMRAM] float 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  6018 ;;  sign            1   22[COMRAM] unsigned char 
  6019 ;;  cntr            1   21[COMRAM] unsigned char 
  6020 ;;  exp             1   17[COMRAM] unsigned char 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  3    8[COMRAM] float 
  6023 ;; Registers used:
  6024 ;;		wreg, status,2, status,0, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6030 ;;      Params:         6       0       0       0       0       0       0       0       0
  6031 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6032 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6033 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6034 ;;Total ram usage:       15 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    2
  6037 ;; This function calls:
  6038 ;;		___ftpack
  6039 ;; This function is called by:
  6040 ;;		_disp_show_quantity
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text51
  6045  001514                     __ptext51:
  6046                           	opt callstack 0
  6047  001514                     ___ftmul:
  6048                           	opt callstack 27
  6049                           
  6050                           ;incstack = 0
  6051  001514  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  6052  001518  6A10               	clrf	(??___ftmul+1)& (0+255),c
  6053  00151A  6A11               	clrf	(??___ftmul+2)& (0+255),c
  6054  00151C  340A               	rlcf	___ftmul@f1+1,w,c
  6055  00151E  360F               	rlcf	??___ftmul& (0+255),f,c
  6056  001520  E301               	bnc	u2751
  6057  001522  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  6058  001524                     u2751:
  6059  001524  500F               	movf	??___ftmul,w,c
  6060  001526  6E12               	movwf	___ftmul@exp,c
  6061  001528  5012               	movf	___ftmul@exp,w,c
  6062  00152A  A4D8               	btfss	status,2,c
  6063  00152C  D007               	goto	l2765
  6064  00152E  0E00               	movlw	0
  6065  001530  6E09               	movwf	?___ftmul,c
  6066  001532  0E00               	movlw	0
  6067  001534  6E0A               	movwf	?___ftmul+1,c
  6068  001536  0E00               	movlw	0
  6069  001538  6E0B               	movwf	?___ftmul+2,c
  6070  00153A  0012               	return	
  6071  00153C                     l2765:
  6072  00153C  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  6073  001540  6A10               	clrf	(??___ftmul+1)& (0+255),c
  6074  001542  6A11               	clrf	(??___ftmul+2)& (0+255),c
  6075  001544  340D               	rlcf	___ftmul@f2+1,w,c
  6076  001546  360F               	rlcf	??___ftmul& (0+255),f,c
  6077  001548  E301               	bnc	u2771
  6078  00154A  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  6079  00154C                     u2771:
  6080  00154C  500F               	movf	??___ftmul,w,c
  6081  00154E  6E17               	movwf	___ftmul@sign,c
  6082  001550  5017               	movf	___ftmul@sign,w,c
  6083  001552  A4D8               	btfss	status,2,c
  6084  001554  D007               	goto	l2771
  6085  001556  0E00               	movlw	0
  6086  001558  6E09               	movwf	?___ftmul,c
  6087  00155A  0E00               	movlw	0
  6088  00155C  6E0A               	movwf	?___ftmul+1,c
  6089  00155E  0E00               	movlw	0
  6090  001560  6E0B               	movwf	?___ftmul+2,c
  6091  001562  0012               	return	
  6092  001564                     l2771:
  6093  001564  5017               	movf	___ftmul@sign,w,c
  6094  001566  0F7B               	addlw	123
  6095  001568  2612               	addwf	___ftmul@exp,f,c
  6096  00156A  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  6097  00156E  500E               	movf	___ftmul@f2+2,w,c
  6098  001570  1A17               	xorwf	___ftmul@sign,f,c
  6099  001572  0E80               	movlw	128
  6100  001574  1617               	andwf	___ftmul@sign,f,c
  6101  001576  8E0A               	bsf	___ftmul@f1+1,7,c
  6102  001578  8E0D               	bsf	___ftmul@f2+1,7,c
  6103  00157A  0EFF               	movlw	255
  6104  00157C  160C               	andwf	___ftmul@f2,f,c
  6105  00157E  0EFF               	movlw	255
  6106  001580  160D               	andwf	___ftmul@f2+1,f,c
  6107  001582  0E00               	movlw	0
  6108  001584  160E               	andwf	___ftmul@f2+2,f,c
  6109  001586  0E00               	movlw	0
  6110  001588  6E13               	movwf	___ftmul@f3_as_product,c
  6111  00158A  0E00               	movlw	0
  6112  00158C  6E14               	movwf	___ftmul@f3_as_product+1,c
  6113  00158E  0E00               	movlw	0
  6114  001590  6E15               	movwf	___ftmul@f3_as_product+2,c
  6115  001592  0E07               	movlw	7
  6116  001594  6E16               	movwf	___ftmul@cntr,c
  6117  001596                     l2785:
  6118  001596  A009               	btfss	___ftmul@f1,0,c
  6119  001598  D006               	goto	l2789
  6120  00159A  500C               	movf	___ftmul@f2,w,c
  6121  00159C  2613               	addwf	___ftmul@f3_as_product,f,c
  6122  00159E  500D               	movf	___ftmul@f2+1,w,c
  6123  0015A0  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  6124  0015A2  500E               	movf	___ftmul@f2+2,w,c
  6125  0015A4  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  6126  0015A6                     l2789:
  6127  0015A6  90D8               	bcf	status,0,c
  6128  0015A8  320B               	rrcf	___ftmul@f1+2,f,c
  6129  0015AA  320A               	rrcf	___ftmul@f1+1,f,c
  6130  0015AC  3209               	rrcf	___ftmul@f1,f,c
  6131  0015AE  90D8               	bcf	status,0,c
  6132  0015B0  360C               	rlcf	___ftmul@f2,f,c
  6133  0015B2  360D               	rlcf	___ftmul@f2+1,f,c
  6134  0015B4  360E               	rlcf	___ftmul@f2+2,f,c
  6135  0015B6  2E16               	decfsz	___ftmul@cntr,f,c
  6136  0015B8  D7EE               	goto	l2785
  6137  0015BA  0E09               	movlw	9
  6138  0015BC  6E16               	movwf	___ftmul@cntr,c
  6139  0015BE                     l2795:
  6140  0015BE  A009               	btfss	___ftmul@f1,0,c
  6141  0015C0  D006               	goto	l2799
  6142  0015C2  500C               	movf	___ftmul@f2,w,c
  6143  0015C4  2613               	addwf	___ftmul@f3_as_product,f,c
  6144  0015C6  500D               	movf	___ftmul@f2+1,w,c
  6145  0015C8  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  6146  0015CA  500E               	movf	___ftmul@f2+2,w,c
  6147  0015CC  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  6148  0015CE                     l2799:
  6149  0015CE  90D8               	bcf	status,0,c
  6150  0015D0  320B               	rrcf	___ftmul@f1+2,f,c
  6151  0015D2  320A               	rrcf	___ftmul@f1+1,f,c
  6152  0015D4  3209               	rrcf	___ftmul@f1,f,c
  6153  0015D6  90D8               	bcf	status,0,c
  6154  0015D8  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  6155  0015DA  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  6156  0015DC  3213               	rrcf	___ftmul@f3_as_product,f,c
  6157  0015DE  2E16               	decfsz	___ftmul@cntr,f,c
  6158  0015E0  D7EE               	goto	l2795
  6159  0015E2  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  6160  0015E6  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6161  0015EA  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6162  0015EE  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  6163  0015F2  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  6164  0015F6  ECC8  F00B         	call	___ftpack	;wreg free
  6165  0015FA  C001  F009         	movff	?___ftpack,?___ftmul
  6166  0015FE  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  6167  001602  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  6168  001606  0012               	return		;funcret
  6169  001608                     __end_of___ftmul:
  6170                           	opt callstack 0
  6171                           
  6172 ;; *************** function ___ftge *****************
  6173 ;; Defined at:
  6174 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  ff1             3   11[COMRAM] float 
  6177 ;;  ff2             3   14[COMRAM] float 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;		None               void
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6189 ;;      Params:         6       0       0       0       0       0       0       0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6191 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6192 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6193 ;;Total ram usage:        9 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    1
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_ikey_parsing
  6200 ;;		_disp_show_quantity
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text52
  6205  001972                     __ptext52:
  6206                           	opt callstack 0
  6207  001972                     ___ftge:
  6208                           	opt callstack 27
  6209                           
  6210                           ;incstack = 0
  6211  001972  AE0E               	btfss	___ftge@ff1+2,7,c
  6212  001974  D00F               	goto	l2467
  6213  001976  0E00               	movlw	0
  6214  001978  6E12               	movwf	??___ftge& (0+255),c
  6215  00197A  0E00               	movlw	0
  6216  00197C  6E13               	movwf	(??___ftge+1)& (0+255),c
  6217  00197E  0E80               	movlw	128
  6218  001980  6E14               	movwf	(??___ftge+2)& (0+255),c
  6219  001982  500C               	movf	___ftge@ff1,w,c
  6220  001984  5C12               	subwf	??___ftge,w,c
  6221  001986  6E0C               	movwf	___ftge@ff1,c
  6222  001988  500D               	movf	___ftge@ff1+1,w,c
  6223  00198A  5813               	subwfb	??___ftge+1,w,c
  6224  00198C  6E0D               	movwf	___ftge@ff1+1,c
  6225  00198E  500E               	movf	___ftge@ff1+2,w,c
  6226  001990  5814               	subwfb	??___ftge+2,w,c
  6227  001992  6E0E               	movwf	___ftge@ff1+2,c
  6228  001994                     l2467:
  6229  001994  AE11               	btfss	___ftge@ff2+2,7,c
  6230  001996  D00F               	goto	l2471
  6231  001998  0E00               	movlw	0
  6232  00199A  6E12               	movwf	??___ftge& (0+255),c
  6233  00199C  0E00               	movlw	0
  6234  00199E  6E13               	movwf	(??___ftge+1)& (0+255),c
  6235  0019A0  0E80               	movlw	128
  6236  0019A2  6E14               	movwf	(??___ftge+2)& (0+255),c
  6237  0019A4  500F               	movf	___ftge@ff2,w,c
  6238  0019A6  5C12               	subwf	??___ftge,w,c
  6239  0019A8  6E0F               	movwf	___ftge@ff2,c
  6240  0019AA  5010               	movf	___ftge@ff2+1,w,c
  6241  0019AC  5813               	subwfb	??___ftge+1,w,c
  6242  0019AE  6E10               	movwf	___ftge@ff2+1,c
  6243  0019B0  5011               	movf	___ftge@ff2+2,w,c
  6244  0019B2  5814               	subwfb	??___ftge+2,w,c
  6245  0019B4  6E11               	movwf	___ftge@ff2+2,c
  6246  0019B6                     l2471:
  6247  0019B6  0E00               	movlw	0
  6248  0019B8  1A0C               	xorwf	___ftge@ff1,f,c
  6249  0019BA  0E00               	movlw	0
  6250  0019BC  1A0D               	xorwf	___ftge@ff1+1,f,c
  6251  0019BE  0E80               	movlw	128
  6252  0019C0  1A0E               	xorwf	___ftge@ff1+2,f,c
  6253  0019C2  0E00               	movlw	0
  6254  0019C4  1A0F               	xorwf	___ftge@ff2,f,c
  6255  0019C6  0E00               	movlw	0
  6256  0019C8  1A10               	xorwf	___ftge@ff2+1,f,c
  6257  0019CA  0E80               	movlw	128
  6258  0019CC  1A11               	xorwf	___ftge@ff2+2,f,c
  6259  0019CE  500F               	movf	___ftge@ff2,w,c
  6260  0019D0  5C0C               	subwf	___ftge@ff1,w,c
  6261  0019D2  5010               	movf	___ftge@ff2+1,w,c
  6262  0019D4  580D               	subwfb	___ftge@ff1+1,w,c
  6263  0019D6  5011               	movf	___ftge@ff2+2,w,c
  6264  0019D8  580E               	subwfb	___ftge@ff1+2,w,c
  6265  0019DA  B0D8               	btfsc	status,0,c
  6266  0019DC  D002               	goto	l2477
  6267  0019DE  90D8               	bcf	status,0,c
  6268  0019E0  0012               	return	
  6269  0019E2                     l2477:
  6270  0019E2  80D8               	bsf	status,0,c
  6271  0019E4  0012               	return		;funcret
  6272  0019E6                     __end_of___ftge:
  6273                           	opt callstack 0
  6274                           
  6275 ;; *************** function ___awtoft *****************
  6276 ;; Defined at:
  6277 ;;		line 32 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awtoft.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  c               2    8[COMRAM] int 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  sign            1   11[COMRAM] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  3    8[COMRAM] float 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6291 ;;      Params:         3       0       0       0       0       0       0       0       0
  6292 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6294 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6295 ;;Total ram usage:        4 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    2
  6298 ;; This function calls:
  6299 ;;		___ftpack
  6300 ;; This function is called by:
  6301 ;;		_disp_show_quantity
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text53
  6306  001CEA                     __ptext53:
  6307                           	opt callstack 0
  6308  001CEA                     ___awtoft:
  6309                           	opt callstack 27
  6310                           
  6311                           ;incstack = 0
  6312  001CEA  0E00               	movlw	0
  6313  001CEC  6E0C               	movwf	___awtoft@sign,c
  6314  001CEE  AE0A               	btfss	___awtoft@c+1,7,c
  6315  001CF0  D006               	goto	l2823
  6316  001CF2  6C09               	negf	___awtoft@c,c
  6317  001CF4  1E0A               	comf	___awtoft@c+1,f,c
  6318  001CF6  B0D8               	btfsc	status,0,c
  6319  001CF8  2A0A               	incf	___awtoft@c+1,f,c
  6320  001CFA  0E01               	movlw	1
  6321  001CFC  6E0C               	movwf	___awtoft@sign,c
  6322  001CFE                     l2823:
  6323  001CFE  C009  F001         	movff	___awtoft@c,___ftpack@arg
  6324  001D02  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  6325  001D06  6A03               	clrf	___ftpack@arg+2,c
  6326  001D08  0E8E               	movlw	142
  6327  001D0A  6E04               	movwf	___ftpack@exp,c
  6328  001D0C  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  6329  001D10  ECC8  F00B         	call	___ftpack	;wreg free
  6330  001D14  C001  F009         	movff	?___ftpack,?___awtoft
  6331  001D18  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  6332  001D1C  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  6333  001D20  0012               	return		;funcret
  6334  001D22                     __end_of___awtoft:
  6335                           	opt callstack 0
  6336                           
  6337 ;; *************** function ___ftpack *****************
  6338 ;; Defined at:
  6339 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  arg             3    0[COMRAM] unsigned um
  6342 ;;  exp             1    3[COMRAM] unsigned char 
  6343 ;;  sign            1    4[COMRAM] unsigned char 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  3    0[COMRAM] float 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6355 ;;      Params:         5       0       0       0       0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6357 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6358 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6359 ;;Total ram usage:        8 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    1
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		___awtoft
  6366 ;;		___ftadd
  6367 ;;		___ftmul
  6368 ;;		___lwtoft
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text54
  6373  001790                     __ptext54:
  6374                           	opt callstack 0
  6375  001790                     ___ftpack:
  6376                           	opt callstack 26
  6377                           
  6378                           ;incstack = 0
  6379  001790  5004               	movf	___ftpack@exp,w,c
  6380  001792  B4D8               	btfsc	status,2,c
  6381  001794  D005               	goto	u1610
  6382  001796  5001               	movf	___ftpack@arg,w,c
  6383  001798  1002               	iorwf	___ftpack@arg+1,w,c
  6384  00179A  1003               	iorwf	___ftpack@arg+2,w,c
  6385  00179C  A4D8               	btfss	status,2,c
  6386  00179E  D00C               	goto	l2263
  6387  0017A0                     u1610:
  6388  0017A0  0E00               	movlw	0
  6389  0017A2  6E01               	movwf	?___ftpack,c
  6390  0017A4  0E00               	movlw	0
  6391  0017A6  6E02               	movwf	?___ftpack+1,c
  6392  0017A8  0E00               	movlw	0
  6393  0017AA  6E03               	movwf	?___ftpack+2,c
  6394  0017AC  0012               	return	
  6395  0017AE                     l2261:
  6396  0017AE  2A04               	incf	___ftpack@exp,f,c
  6397  0017B0  90D8               	bcf	status,0,c
  6398  0017B2  3203               	rrcf	___ftpack@arg+2,f,c
  6399  0017B4  3202               	rrcf	___ftpack@arg+1,f,c
  6400  0017B6  3201               	rrcf	___ftpack@arg,f,c
  6401  0017B8                     l2263:
  6402  0017B8  0E00               	movlw	0
  6403  0017BA  1401               	andwf	___ftpack@arg,w,c
  6404  0017BC  6E06               	movwf	??___ftpack& (0+255),c
  6405  0017BE  0E00               	movlw	0
  6406  0017C0  1402               	andwf	___ftpack@arg+1,w,c
  6407  0017C2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6408  0017C4  0EFE               	movlw	254
  6409  0017C6  1403               	andwf	___ftpack@arg+2,w,c
  6410  0017C8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6411  0017CA  5006               	movf	??___ftpack,w,c
  6412  0017CC  1007               	iorwf	??___ftpack+1,w,c
  6413  0017CE  1008               	iorwf	??___ftpack+2,w,c
  6414  0017D0  B4D8               	btfsc	status,2,c
  6415  0017D2  D00C               	goto	l2269
  6416  0017D4  D7EC               	goto	l2261
  6417  0017D6                     l2265:
  6418  0017D6  2A04               	incf	___ftpack@exp,f,c
  6419  0017D8  0E01               	movlw	1
  6420  0017DA  2601               	addwf	___ftpack@arg,f,c
  6421  0017DC  0E00               	movlw	0
  6422  0017DE  2202               	addwfc	___ftpack@arg+1,f,c
  6423  0017E0  0E00               	movlw	0
  6424  0017E2  2203               	addwfc	___ftpack@arg+2,f,c
  6425  0017E4  90D8               	bcf	status,0,c
  6426  0017E6  3203               	rrcf	___ftpack@arg+2,f,c
  6427  0017E8  3202               	rrcf	___ftpack@arg+1,f,c
  6428  0017EA  3201               	rrcf	___ftpack@arg,f,c
  6429  0017EC                     l2269:
  6430  0017EC  0E00               	movlw	0
  6431  0017EE  1401               	andwf	___ftpack@arg,w,c
  6432  0017F0  6E06               	movwf	??___ftpack& (0+255),c
  6433  0017F2  0E00               	movlw	0
  6434  0017F4  1402               	andwf	___ftpack@arg+1,w,c
  6435  0017F6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6436  0017F8  0EFF               	movlw	255
  6437  0017FA  1403               	andwf	___ftpack@arg+2,w,c
  6438  0017FC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6439  0017FE  5006               	movf	??___ftpack,w,c
  6440  001800  1007               	iorwf	??___ftpack+1,w,c
  6441  001802  1008               	iorwf	??___ftpack+2,w,c
  6442  001804  B4D8               	btfsc	status,2,c
  6443  001806  D006               	goto	l2273
  6444  001808  D7E6               	goto	l2265
  6445  00180A                     l2271:
  6446  00180A  0604               	decf	___ftpack@exp,f,c
  6447  00180C  90D8               	bcf	status,0,c
  6448  00180E  3601               	rlcf	___ftpack@arg,f,c
  6449  001810  3602               	rlcf	___ftpack@arg+1,f,c
  6450  001812  3603               	rlcf	___ftpack@arg+2,f,c
  6451  001814                     l2273:
  6452  001814  BE02               	btfsc	___ftpack@arg+1,7,c
  6453  001816  D003               	goto	u1650
  6454  001818  0E02               	movlw	2
  6455  00181A  6004               	cpfslt	___ftpack@exp,c
  6456  00181C  D7F6               	goto	l2271
  6457  00181E                     u1650:
  6458  00181E  A004               	btfss	___ftpack@exp,0,c
  6459  001820  9E02               	bcf	___ftpack@arg+1,7,c
  6460  001822  90D8               	bcf	status,0,c
  6461  001824  3204               	rrcf	___ftpack@exp,f,c
  6462  001826  5004               	movf	___ftpack@exp,w,c
  6463  001828  1203               	iorwf	___ftpack@arg+2,f,c
  6464  00182A  5005               	movf	___ftpack@sign,w,c
  6465  00182C  A4D8               	btfss	status,2,c
  6466  00182E  8E03               	bsf	___ftpack@arg+2,7,c
  6467  001830  C001  F001         	movff	___ftpack@arg,?___ftpack
  6468  001834  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6469  001838  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6470  00183C  0012               	return		;funcret
  6471  00183E                     __end_of___ftpack:
  6472                           	opt callstack 0
  6473                           
  6474 ;; *************** function _INTERRUPCION *****************
  6475 ;; Defined at:
  6476 ;;		line 453 in file "main.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6490 ;;      Params:         0       0       0       0       0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		Interrupt level 2
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	intcode
  6504  000008                     __pintcode:
  6505                           	opt callstack 0
  6506  000008                     _INTERRUPCION:
  6507                           	opt callstack 26
  6508                           
  6509                           ;incstack = 0
  6510  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6511  00000A  ED4A  F00F         	call	int_func,f	;refresh shadow registers
  6512                           
  6513                           	psect	intcode_body
  6514  001E94                     __pintcode_body:
  6515                           	opt callstack 26
  6516  001E94                     int_func:
  6517                           	opt callstack 26
  6518  001E94  0006               	pop		; remove dummy address from shadow register refresh
  6519                           
  6520                           ;main.c: 456: if (TMR0IF)
  6521  001E96  A4F2               	btfss	4082,2,c	;volatile
  6522  001E98  D005               	goto	i2l248
  6523                           
  6524                           ;main.c: 457: {;main.c: 458: isr_flag.f1ms = 1;
  6525  001E9A  8050               	bsf	_isr_flag,0,c	;volatile
  6526                           
  6527                           ;main.c: 460: TMR0IF = 0;
  6528  001E9C  94F2               	bcf	4082,2,c	;volatile
  6529                           
  6530                           ;main.c: 461: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ) >
      +                          > 8);
  6531  001E9E  68D7               	setf	4055,c	;volatile
  6532                           
  6533                           ;main.c: 462: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1e-3 *48000000UL / (256*4)) ));
  6534  001EA0  0ED1               	movlw	209
  6535  001EA2  6ED6               	movwf	4054,c	;volatile
  6536  001EA4                     i2l248:
  6537  001EA4  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6538  001EA6  0011               	retfie		f
  6539  001EA8                     __end_of_INTERRUPCION:
  6540                           	opt callstack 0
  6541                           
  6542                           	psect	rparam
  6543  0000                     
  6544                           	psect	temp
  6545  00005D                     btemp:
  6546                           	opt callstack 0
  6547  00005D                     	ds	1
  6548  0000                     int$flags	set	btemp
  6549  0000                     wtemp8	set	btemp+1
  6550  0000                     ttemp5	set	btemp+1
  6551  0000                     ttemp6	set	btemp+4
  6552  0000                     ttemp7	set	btemp+8
  6553                           tosu	equ	0xFFF
  6554                           tosh	equ	0xFFE
  6555                           tosl	equ	0xFFD
  6556                           stkptr	equ	0xFFC
  6557                           pclatu	equ	0xFFB
  6558                           pclath	equ	0xFFA
  6559                           pcl	equ	0xFF9
  6560                           tblptru	equ	0xFF8
  6561                           tblptrh	equ	0xFF7
  6562                           tblptrl	equ	0xFF6
  6563                           tablat	equ	0xFF5
  6564                           prodh	equ	0xFF4
  6565                           prodl	equ	0xFF3
  6566                           indf0	equ	0xFEF
  6567                           postinc0	equ	0xFEE
  6568                           postdec0	equ	0xFED
  6569                           preinc0	equ	0xFEC
  6570                           plusw0	equ	0xFEB
  6571                           fsr0h	equ	0xFEA
  6572                           fsr0l	equ	0xFE9
  6573                           wreg	equ	0xFE8
  6574                           indf1	equ	0xFE7
  6575                           postinc1	equ	0xFE6
  6576                           postdec1	equ	0xFE5
  6577                           preinc1	equ	0xFE4
  6578                           plusw1	equ	0xFE3
  6579                           fsr1h	equ	0xFE2
  6580                           fsr1l	equ	0xFE1
  6581                           bsr	equ	0xFE0
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           preinc2	equ	0xFDC
  6586                           plusw2	equ	0xFDB
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        30
    BSS         220
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      92
    BANK0           160      0     100
    BANK1           256      0     123
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(COMRAM[10]), 

    S318_multiplexedDisp$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    multiplexedDisp.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    S205_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S205_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 


Critical Paths under _main in COMRAM

    _main->_disp_show_quantity
    _nozzle_moveto->_mpap_setupToTurn
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _ikb_flush->_ikey_clear_all_flag
    _display7s_job->_multiplexedDisp_job
    _display7s_init->_multiplexedDisp_init
    _disp_show_quantity->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___awtoft->___ftpack

Critical Paths under _INTERRUPCION in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24400
                                             61 COMRAM     2     2      0
                 _disp_show_quantity
                     _display7s_init
                      _display7s_job
                          _ikb_flush
                           _ikb_init
                            _ikb_job
              _ikb_key_is_ready2read
                           _mpap_job
                _mpap_setupToHomming
                          _mpap_stop
                      _nozzle_moveto
 ---------------------------------------------------------------------------------
 (1) _nozzle_moveto                                        1     1      0     979
                                             10 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     737
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _mpap_stop                                            0     0      0       0
                          __mpap_off
 ---------------------------------------------------------------------------------
 (2) __mpap_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mpap_setupToHomming                                  0     0      0     220
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToTurn                                     4     2      2     220
                                              6 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (2) _mpap_normal_mode                                     1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (2) _mpap_homming                                         2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (3) _mpap_do1step                                         1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (4) __mpap_step4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __mpap_step1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_key_is_ready2read                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    7094
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                              0 COMRAM     2     2      0
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
                   _keyRead_pin_key5 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key5                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    6631
                                             20 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3233
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_flush                                            0     0      0      68
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (2) _ikey_clear_all_flag                                  1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display7s_job                                        0     0      0     134
                _multiplexedDisp_job
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_job                                  8     8      0     134
                                              0 COMRAM     8     8      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (1) _display7s_init                                       0     0      0      68
               _multiplexedDisp_init
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_init                                 1     1      0      68
                                              0 COMRAM     1     1      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disp_show_quantity                                  23    20      3   15466
                                             38 COMRAM    23    20      3
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     1      5    1698
                                             15 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     3      5    1307
                                              7 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     467
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4433
                                             20 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4088
                                              8 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3450
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1504
                                             11 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3011
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPCION                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disp_show_quantity
     ___awtoft
       ___ftpack
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _display7s_init
     _multiplexedDisp_init
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _display7s_job
     _multiplexedDisp_job
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
       _keyRead_pin_key5 *
   _ikb_key_is_ready2read
   _mpap_job
     _mpap_homming
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
   _mpap_setupToHomming
     _mpap_setupToTurn
       ___wmul (ARG)
   _mpap_stop
     __mpap_off
   _nozzle_moveto
     ___wmul
     _mpap_setupToTurn
       ___wmul (ARG)

 _INTERRUPCION (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7B       7       48.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13B      20        0.0%
DATA                 0      0     13B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul  6 04:49:57 2019

                              _t 005B            ??_mpap_setupToHomming 000B  
            ___wmul@multiplicand 0003                      __CFG_BORV$3 000000  
                   ___ftadd@exp1 0014                     ___ftadd@exp2 0013  
                   ___ftadd@sign 0012                              l126 1D72  
                            l128 1D76                              l154 1BE2  
                            l148 1AAC                              l361 0994  
                            l354 08F0                              l194 1494  
                            l371 0C2C                              l363 09F6  
                            l348 093A                              l196 14FA  
                            l381 0D8C                              l365 0A3A  
                            l383 0DC2                              l367 0A9C  
                            l377 0D58                              l369 0AE0  
                            l386 0E14                              l868 120E  
                            _GIE 007F97                   ?_display7s_job 0001  
                   __CFG_BOR$OFF 000000                              _key 0060  
                            tosl 000FFD                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                     __CFG_WDT$OFF 000000  
                           l1017 1AF8                             l1027 1C60  
                           l1209 1956                             l3011 1098  
                           l3101 14CA                             l2401 1128  
                           l3009 1092                             l3105 14DA  
                           l2307 1AEE                             l2323 1C56  
                           l2315 1C36                             l3019 10A0  
                           l2261 17AE                             l2317 1C3E  
                           l3109 14EA                             l3117 150C  
                           l2271 180A                             l2263 17B8  
                           l2431 11AC                             l2407 1150  
                           l2335 1C1E                             l2273 1814  
                           l2265 17D6                             l2441 11E0  
                           l2433 11B6                             l2601 1418  
                           l2443 11EA                             l3083 148C  
                           l2269 17EC                             l2429 11A2  
                           l2621 0880                             l2471 19B6  
                           l2295 1AC6                             l2631 08D0  
                           l2623 0890                             l2449 122A  
                           l2297 1ACE                             l2705 1E4A  
                           l2369 1B9A                             l2609 0812  
                           l3097 14BA                             l2467 1994  
                           l2459 125A                             l2811 1CC0  
                           l2731 1844                             l2627 08B0  
                           l2571 12C2                             l2539 1A8E  
                           l2477 19E2                             l2717 1C6E  
                           l2581 1334                             l2565 1284  
                           l2823 1CFE                             l2487 18E6  
                           l2735 18AC                             l2671 0C1C  
                           l2583 1354                             l2833 1634  
                           l2497 1918                             l2921 1712  
                           l2665 0B92                             l2771 1564  
                           l2851 1688                             l2931 0E6A  
                           l2765 153C                             l2861 16A0  
                           l2749 1D3A                             l2941 0F2A  
                           l2589 1394                             l2863 16AC  
                           l2855 1698                             l2695 0E34  
                           l2679 0CDE                             l2785 1596  
                           l2795 15BE                             l2963 0FC0  
                           l2955 0FA0                             l2891 1DCA  
                           l2789 15A6                             l2869 16C8  
                           l2799 15CE                             l2983 102C  
                           l2959 0FB4                             l2887 1DBC  
                           l2977 0FF8                             l2995 105A  
                           l2987 1040                             u3000 0FB0  
                           u2200 1324                             _LATA 000F89  
                           u3030 1028                             _LATB 000F8A  
                           _LATC 000F8B                             u3040 103C  
                           _LATD 000F8C                             _LATE 000F8D  
                           u1610 17A0                             u2228 1378  
                           u2229 138C                             u2158 12A6  
                           u3070 1E7C                             u2159 12BA  
                           u1720 1C42                             u1801 10E8  
                           u1650 181E                             u1811 10FC  
                           u1900 1180                             u2268 13DE  
                           u2269 13F2                             u2198 130A  
                           u2199 131E                             u1840 111A  
                           u1690 1AD2                             u1940 11BE  
                           u1748 1BF8                             u1749 1C0C  
                           u1870 1142                             u2718 1898  
                           u2751 1524                             u2831 1618  
                           u2840 1622                             u2728 18BC  
                           u2729 18D0                             u1970 11F2  
                           u2850 1652                             u2771 154C  
                           u2668 1C7E                             u2684 185A  
                           u2669 1C92                             u2685 1854  
                           u2694 1874                             u2855 164A  
                           u2695 186E                             u2890 16B2  
                           u2990 0F9C                             _UCFG 000F6F  
                           _UCON 000F6D                     __CFG_PWRT$ON 000000  
          _ikb_key_is_ready2read 1E64                  ?_display7s_init 0001  
    __size_of_disp_show_quantity 029A                             _main 1420  
                   ___ftpack@arg 0001                             _itoa 1D22  
                           _mpap 0040                     ___ftpack@exp 0004  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 005D  
                           _utoa 18DE                    _nozzle_moveto 1D84  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                    __CFG_IESO$OFF 000000  
            _multiplexedDisp0_on 1F5A              _multiplexedDisp1_on 1F52  
            _multiplexedDisp2_on 1F4A              _multiplexedDisp3_on 1F42  
            _multiplexedDisp4_on 1F62                    __CFG_MCLRE$ON 000000  
                   ___ftmul@cntr 0016             __end_of_DISP7S_CHARS 080D  
                   ___param_bank 000000                     ___ftmul@sign 0017  
            _multiplexedDisp_job 183E                     ___fttol@exp1 0026  
                   ___fttol@lval 0022                    __CFG_PLLDIV$5 000000  
                          ?_main 0001                            ?_itoa 0010  
                __end_of___ftadd 1280                            _CMCON 000FB4  
                          ?_utoa 0008                  __end_of___ftmul 1608  
                          _T0CON 000FD5                  __end_of___ftsub 1CEA  
                __end_of___fttol 16DA                  __end_of___lwdiv 1B02  
                __end_of___lwmod 1C6A                            i2l248 1EA4  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _PORTC 000F82                            _PORTD 000F83  
                          _PORTE 000F84                    __CFG_USBDIV$2 000000  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96             ?_multiplexedDisp0_on 0001  
           ?_multiplexedDisp1_on 0001             ?_multiplexedDisp2_on 0001  
           ?_multiplexedDisp3_on 0001             ?_multiplexedDisp4_on 0001  
                 __CFG_FCMEN$OFF 000000                  __end_of_ikb_job 1F0E  
           ?_multiplexedDisp_job 0001                    ___awtoft@sign 000C  
                  ?_INTERRUPCION 0001                    ___ftpack@sign 0005  
                          main@c 003E                            pclath 000FFA  
                          tablat 000FF5                            ttemp5 005E  
                          ttemp6 0061                            ttemp7 0065  
                          utoa@c 000F                            utoa@v 000D  
                          status 000FD8                   ?_nozzle_moveto 0001  
                          wtemp8 005E      __size_of_ikey_is_accessible 004C  
           _multiplexedDisp0_off 1F5E             _multiplexedDisp1_off 1F56  
           _multiplexedDisp2_off 1F4E             _multiplexedDisp3_off 1F46  
           _multiplexedDisp4_off 1F3E                    ?_ikey_parsing 0001  
           __size_of__mpap_step1 000A             __size_of__mpap_step2 000A  
           __size_of__mpap_step3 000A             __size_of__mpap_step4 000A  
                __initialization 19E6                     __end_of_main 1514  
                   __end_of_itoa 1D54             _multiplexedDisp_init 1C6A  
                   __end_of_utoa 1972                  ??_display7s_job 0009  
                         ??_main 003E                    ___fttol@sign1 0021  
                         ??_itoa 0015                           ??_utoa 000D  
                  mpap_do1step@i 004E                    __activetblptr 000002  
          ??_multiplexedDisp0_on 0001            ??_multiplexedDisp1_on 0001  
          ??_multiplexedDisp2_on 0001            ??_multiplexedDisp3_on 0001  
          ??_multiplexedDisp4_on 0001            ??_multiplexedDisp_job 0001  
                 ??_INTERRUPCION 0001                           _ADCON1 000FC1  
       __end_of_keyRead_pin_key1 1F2A         __end_of_keyRead_pin_key2 1F22  
       __end_of_keyRead_pin_key3 1F18         __end_of_keyRead_pin_key4 1F38  
       __end_of_keyRead_pin_key5 1F32           ?_ikb_key_is_ready2read 0001  
               __end_of___awtoft 1D22                 __end_of___ftpack 183E  
               __end_of___lwtoft 1E46                           _TMR0IE 007F95  
                         _TMR0IF 007F92            ?_multiplexedDisp0_off 0001  
          ?_multiplexedDisp1_off 0001            ?_multiplexedDisp2_off 0001  
          ?_multiplexedDisp3_off 0001            ?_multiplexedDisp4_off 0001  
                 ??_ikey_parsing 0015                   __CFG_VREGEN$ON 000000  
       __end_of_mpap_normal_mode 1BE6                 __end_of_ikb_init 1790  
          ?_multiplexedDisp_init 0001                           ___ftge 1972  
                         ___wmul 1DD6                        ??___ftadd 000F  
                      ??___ftmul 000F                        ??___ftsub 001B  
                      ??___fttol 001C                        ??___lwdiv 0005  
                      ??___lwmod 0005                           clear_0 1A2C  
                         clear_1 1A38                           clear_2 1A44  
               __end_of_mpap_job 1DD6                        ??_ikb_job 001A  
          ___ftmul@f3_as_product 0013         __end_of_mpap_setupToTurn 1D84  
                   __pdataCOMRAM 0051                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8              ikey_is_accessible@k 0003  
                ??_nozzle_moveto 000B     __size_of_ikey_clear_all_flag 001E  
                     __accesstop 0060          __end_of__initialization 1A4A  
                __CFG_PBADEN$OFF 000000                    ?_mpap_do1step 0001  
                     ___ftadd@f1 0009                       ___ftadd@f2 000C  
                     ___ftge@ff1 000C                       ___ftge@ff2 000F  
                  ___rparam_used 000001                       ___awtoft@c 0009  
                     ___ftmul@f1 0009                       ___ftmul@f2 000C  
                     ___ftsub@f1 0015                       ___ftsub@f2 0018  
                     ___fttol@f1 0018                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1E80                    ?_mpap_homming 0001  
             __size_of__mpap_off 000A                       ___lwtoft@c 0009  
               ??_display7s_init 0002                     _DISP7S_CHARS 080B  
             __size_of_ikb_flush 0006                   mpap_do1step@KI 0001  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                 ??_mpap_do1step 0001           ??_multiplexedDisp0_off 0001  
         ??_multiplexedDisp1_off 0001           ??_multiplexedDisp2_off 0001  
         ??_multiplexedDisp3_off 0001           ??_multiplexedDisp4_off 0001  
             __size_of_ikey_scan 01A0                       __pnvCOMRAM 005B  
    __end_of_mpap_setupToHomming 1EBA           ??_multiplexedDisp_init 0001  
                 ??_mpap_homming 0002                          ?___ftge 000C  
           __end_of_INTERRUPCION 1EA8               __size_of_mpap_stop 000E  
                        ?___wmul 0001                        ?___awtoft 0009  
                      ?___ftpack 0001                        ?___lwtoft 0009  
           __end_of_ikey_parsing 0E3E       __end_of_disp_show_quantity 10D8  
                      ?_ikb_init 0001                __end_of__mpap_off 1EDC  
                 display7s_job@q 004D                        ?_mpap_job 0001  
                        __Hparam 0000                          __Lparam 0000  
              __end_of_ikb_flush 1F3E                  __size_of___ftge 0074  
                        ___ftadd 10D8                  __size_of___wmul 0026  
                        ___ftmul 1514                          ___ftsub 1CAA  
                        ___fttol 1608                          ___lwdiv 1AB0  
                        ___lwmod 1C28                     __psmallconst 0800  
                        __pcinit 19E6                       ??___awtoft 000C  
                     ??___ftpack 0006                          __ramtop 0800  
                        __ptext0 1420                          __ptext1 1D84  
                        __ptext2 1DD6                          __ptext3 1EBA  
                        __ptext4 1ED2                          __ptext5 1EA8  
                        __ptext6 1D54                          __ptext7 1DAE  
                        __ptext8 1B9E                          __ptext9 1A58  
              __end_of_ikey_scan 1420                          _ikb_job 1F04  
                     ??___lwtoft 000C                          _group_x 0048  
        ??_ikb_key_is_ready2read 0001       disp_show_quantity@last_pos 003A  
              __end_of_mpap_stop 1EC8          mpap_normal_mode@cod_ret 0002  
                     ??_ikb_init 0001                   __pintcode_body 1E94  
           end_of_initialization 1A4A       __end_of_ikey_is_accessible 1B9E  
              ?_keyRead_pin_key1 0001                ?_keyRead_pin_key2 0001  
              ?_keyRead_pin_key3 0001                ?_keyRead_pin_key4 0001  
              ?_keyRead_pin_key5 0001                    ??__mpap_step1 0001  
                  ??__mpap_step2 0001                    ??__mpap_step3 0001  
                  ??__mpap_step4 0001                          itoa@buf 0010  
                        itoa@val 0011                    __Lmediumconst 0000  
                        int_func 1E94               ??_keyRead_pin_key1 0001  
             ??_keyRead_pin_key2 0001               ??_keyRead_pin_key3 0001  
             ??_keyRead_pin_key4 0001               ??_keyRead_pin_key5 0001  
                     ??_mpap_job 0004                ?_mpap_normal_mode 0001  
                        postdec1 000FE5                          postdec2 000FDD  
             ??_mpap_normal_mode 0002                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
         ikb_key_is_ready2read@k 0001                          utoa@buf 0008  
    __end_of_multiplexedDisp0_on 1F5E      __end_of_multiplexedDisp1_on 1F56  
    __end_of_multiplexedDisp2_on 1F4E      __end_of_multiplexedDisp3_on 1F46  
                        utoa@val 0009      __end_of_multiplexedDisp4_on 1F66  
            _ikey_clear_all_flag 1E46      __end_of_multiplexedDisp_job 18DE  
           __end_of_mpap_do1step 1C28            __end_of_display7s_job 1E22  
           ikey_clear_all_flag@i 0001                ?_mpap_setupToTurn 0007  
             ??_mpap_setupToTurn 0009             __end_of_mpap_homming 1AB0  
            nozzle_moveto@nozzle 000B             ?_ikey_clear_all_flag 0001  
                     main@c_disp 003F            __size_of_INTERRUPCION 1EA0  
                    ___ftmul@exp 0012              __end_of__mpap_step1 1EFA  
            __end_of__mpap_step2 1EF0              __end_of__mpap_step3 1EE6  
            __end_of__mpap_step4 1F04              __end_of_DISP7S_NUMS 080B  
                 __end_of___ftge 19E6  mpap_setupToTurn@numSteps_tomove 0007  
          __size_of_ikey_parsing 0630                   __end_of___wmul 1DFC  
                  __pidataCOMRAM 1EC8              start_initialization 19E6  
                   _INTERRUPCION 0008            ??_ikey_clear_all_flag 0001  
                     ikey_scan@k 0002            __end_of_nozzle_moveto 1DAE  
                   _ikey_parsing 080E           disp_show_quantity@buff 002B  
                       ??___ftge 0012           disp_show_quantity@real 0035  
                       ??___wmul 0005                      __pdataBANK0 00B0  
              __size_of___awtoft 0038                __size_of___ftpack 00AE  
                    __pbssCOMRAM 0040                __size_of___lwtoft 0024  
                  ikey_parsing@k 0019                __size_of_ikb_init 00B6  
                    __mpap_step1 1EF0                      __mpap_step2 1EE6  
                    __mpap_step3 1EDC                      __mpap_step4 1EFA  
                    _DISP7S_NUMS 0801    __size_of_multiplexedDisp0_off 0004  
  __size_of_multiplexedDisp1_off 0004    __size_of_multiplexedDisp2_off 0004  
  __size_of_multiplexedDisp3_off 0004    __size_of_multiplexedDisp4_off 0004  
                      __mpap_off 1ED2                 ___lwdiv@dividend 0001  
             _disp_show_quantity 0E3E                __size_of_mpap_job 0028  
                      __pintcode 0008    __size_of_multiplexedDisp_init 0040  
          __size_of_mpap_do1step 0042                         ?___ftadd 0009  
                       ?___ftmul 0009                         ?___ftsub 0015  
                       ?___fttol 0018                         ?___lwdiv 0001  
                       ?___lwmod 0001     __size_of_mpap_setupToHomming 0012  
            ?_disp_show_quantity 0027                        _ikb_flush 1F38  
                       ?_ikb_job 0001                      __smallconst 0800  
          __size_of_mpap_homming 0058                  _multiplexedDisp 00B0  
                      _main_flag 004F            multiplexedDisp_init@i 0001  
                      _ikey_scan 1280   __size_of_ikb_key_is_ready2read 001C  
               ___lwdiv@quotient 0005    __end_of_ikb_key_is_ready2read 1E80  
           ??_disp_show_quantity 002A                        _mpap_step 0051  
                      _mpap_stop 1EBA                   ___wmul@product 0005  
                   _mpap_do1step 1BE6          __size_of_display7s_init 0050  
                     ?__mpap_off 0001               _ikey_is_accessible 1B52  
                   _mpap_homming 1A58        __size_of_keyRead_pin_key1 0008  
      __size_of_keyRead_pin_key2 000A        __size_of_keyRead_pin_key3 000A  
      __size_of_keyRead_pin_key4 0006        __size_of_keyRead_pin_key5 0008  
                     ?_ikb_flush 0001                ___wmul@multiplier 0001  
            ?_ikey_is_accessible 0001                        ikb_init@i 0001  
      __size_of_mpap_normal_mode 0048                       ?_ikey_scan 0001  
                      copy_data0 19FA                        copy_data1 1A1A  
            mpap_homming@cod_ret 0003                       ?_mpap_stop 0001  
           ??_ikey_is_accessible 0001        __size_of_mpap_setupToTurn 0030  
                       __Hrparam 0000                         __Lrparam 0000  
          disp_show_quantity@num 0038                 __size_of___ftadd 01A8  
               __size_of___ftmul 00F4                 __size_of___ftsub 0040  
               __size_of___fttol 00D2                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042                         ___awtoft 1CEA  
                       ___ftpack 1790                         ___lwtoft 1E22  
               __size_of_ikb_job 000A     __size_of_multiplexedDisp0_on 0004  
   __size_of_multiplexedDisp1_on 0004     __size_of_multiplexedDisp2_on 0004  
   __size_of_multiplexedDisp3_on 0004     __size_of_multiplexedDisp4_on 0004  
                ___lwdiv@divisor 0003     __size_of_multiplexedDisp_job 00A0  
                ___lwdiv@counter 0007                         __ptext10 1BE6  
                       __ptext11 1EDC                         __ptext20 1F18  
                       __ptext12 1EE6                         __ptext21 1F22  
                       __ptext13 1EF0                         __ptext30 183E  
                       __ptext22 1F2A                         __ptext14 1EFA  
                       __ptext31 1B02                         __ptext23 080E  
                       __ptext15 1E64                         __ptext40 1F5A  
                       __ptext32 1C6A                         __ptext24 1B52  
                       __ptext16 1F04                         __ptext41 1F5E  
                       __ptext33 1F3E                         __ptext25 1E22  
                       __ptext17 1280                         __ptext50 10D8  
                       __ptext42 1F62                         __ptext34 1F42  
                       __ptext26 16DA                         __ptext18 1F32  
                       __ptext51 1514                         __ptext43 0E3E  
                       __ptext35 1F46                         __ptext27 1F38  
                       __ptext19 1F0E                         __ptext52 1972  
                       __ptext44 1D22                         __ptext36 1F4A  
                       __ptext28 1E46                         __ptext53 1CEA  
                       __ptext45 18DE                         __ptext37 1F4E  
                       __ptext29 1DFC                         __ptext54 1790  
                       __ptext46 1C28                         __ptext38 1F52  
                       __ptext47 1AB0                         __ptext39 1F56  
                       __ptext48 1608                         __ptext49 1CAA  
                       _ikb_init 16DA             _mpap_setupToTurn$149 0009  
           multiplexedDisp_job@i 0008             multiplexedDisp_job@q 0007  
                  __size_of_main 00F4                    __size_of_itoa 0032  
                  __size_of_utoa 0094                         _isr_flag 0050  
                       _mpap_job 1DAE                         _mpap_off 0059  
                    ??__mpap_off 0001           __size_of_display7s_job 0026  
                       int$flags 005D                         _pulsonic 0100  
                    ??_ikb_flush 0002            __CFG_CPUDIV$OSC1_PLL2 000000  
    __end_of_ikey_clear_all_flag 1E64                      ??_ikey_scan 0001  
                       itoa@base 0013                         intlevel2 0000  
            _mpap_setupToHomming 1EA8                 ___lwmod@dividend 0001  
                    ??_mpap_stop 0001                     ?__mpap_step1 0001  
                   ?__mpap_step2 0001                     ?__mpap_step3 0001  
                   ?__mpap_step4 0001                   _display7s_init 1B02  
               _keyRead_pin_key1 1F22                 _keyRead_pin_key2 1F18  
               _keyRead_pin_key3 1F0E                 _keyRead_pin_key4 1F32  
               _keyRead_pin_key5 1F2A             ?_mpap_setupToHomming 0001  
            disp_show_quantity@I 003B              disp_show_quantity@f 0027  
            disp_show_quantity@i 003D              disp_show_quantity@q 0039  
                       utoa@base 000B     __end_of_multiplexedDisp0_off 1F62  
   __end_of_multiplexedDisp1_off 1F5A     __end_of_multiplexedDisp2_off 1F52  
   __end_of_multiplexedDisp3_off 1F4A     __end_of_multiplexedDisp4_off 1F42  
         __size_of_nozzle_moveto 002A                  ___lwmod@divisor 0003  
               _mpap_normal_mode 1B9E                    _display7s_job 1DFC  
                ___lwmod@counter 0005     __end_of_multiplexedDisp_init 1CAA  
             __CFG_FOSC$HSPLL_HS 000000           __end_of_display7s_init 1B52  
               _mpap_setupToTurn 1D54  
