

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul  9 17:31:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,keep,inline
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,keep,inline
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,keep,inline
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,keep,inline
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,keep,inline
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,keep,inline
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,keep,inline
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,keep,inline
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,keep,inline
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,keep,inline
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 2.05
    79                           ; Generated 20/12/2018 GMT
    80                           ; 
    81                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F4550 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataCOMRAM
   114  00202C                     __pidataCOMRAM:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _mpap_off
   118  00202C  C6                 	db	low __mpap_off
   119  00202D  1F                 	db	high __mpap_off
   120                           
   121                           ;initializer for mpap_do1step@i
   122  00202E  FF                 	db	255
   123                           
   124                           	psect	idataBANK0
   125  001F5E                     __pidataBANK0:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _multiplexedDisp
   129  001F5E  24                 	db	low _multiplexedDisp0_off
   130  001F5F  20                 	db	high _multiplexedDisp0_off
   131  001F60  20                 	db	low _multiplexedDisp0_on
   132  001F61  20                 	db	high _multiplexedDisp0_on
   133  001F62  1C                 	db	low _multiplexedDisp1_off
   134  001F63  20                 	db	high _multiplexedDisp1_off
   135  001F64  18                 	db	low _multiplexedDisp1_on
   136  001F65  20                 	db	high _multiplexedDisp1_on
   137  001F66  14                 	db	low _multiplexedDisp2_off
   138  001F67  20                 	db	high _multiplexedDisp2_off
   139  001F68  10                 	db	low _multiplexedDisp2_on
   140  001F69  20                 	db	high _multiplexedDisp2_on
   141  001F6A  0C                 	db	low _multiplexedDisp3_off
   142  001F6B  20                 	db	high _multiplexedDisp3_off
   143  001F6C  08                 	db	low _multiplexedDisp3_on
   144  001F6D  20                 	db	high _multiplexedDisp3_on
   145  001F6E  04                 	db	low _multiplexedDisp4_off
   146  001F6F  20                 	db	high _multiplexedDisp4_off
   147  001F70  28                 	db	low _multiplexedDisp4_on
   148  001F71  20                 	db	high _multiplexedDisp4_on
   149                           
   150                           ;initializer for _mpap_step
   151  001F72  F8                 	db	low __mpap_step1
   152  001F73  1F                 	db	high __mpap_step1
   153  001F74  F2                 	db	low __mpap_step2
   154  001F75  1F                 	db	high __mpap_step2
   155  001F76  EC                 	db	low __mpap_step3
   156  001F77  1F                 	db	high __mpap_step3
   157  001F78  FE                 	db	low __mpap_step4
   158  001F79  1F                 	db	high __mpap_step4
   159                           
   160                           	psect	smallconst
   161  000800                     __psmallconst:
   162                           	opt callstack 0
   163  000800  00                 	db	0
   164  000801                     _DISP7S_NUMS:
   165                           	opt callstack 0
   166  000801  3F                 	db	63
   167  000802  06                 	db	6
   168  000803  5B                 	db	91
   169  000804  4F                 	db	79
   170  000805  66                 	db	102
   171  000806  6D                 	db	109
   172  000807  7C                 	db	124
   173  000808  07                 	db	7
   174  000809  7F                 	db	127
   175  00080A  67                 	db	103
   176  00080B                     __end_of_DISP7S_NUMS:
   177                           	opt callstack 0
   178  00080B                     _DISP7S_CHARS:
   179                           	opt callstack 0
   180  00080B  00                 	db	0
   181  00080C  40                 	db	64
   182  00080D                     __end_of_DISP7S_CHARS:
   183                           	opt callstack 0
   184  0000                     _PORTE	set	3972
   185  0000                     _TRISB	set	3987
   186  0000                     _TRISA	set	3986
   187  0000                     _PORTD	set	3971
   188  0000                     _PORTC	set	3970
   189  0000                     _TRISC	set	3988
   190  0000                     _TRISD	set	3989
   191  0000                     _TRISE	set	3990
   192  0000                     _TMR0L	set	4054
   193  0000                     _TMR0H	set	4055
   194  0000                     _T0CON	set	4053
   195  0000                     _UCFG	set	3951
   196  0000                     _UCON	set	3949
   197  0000                     _CMCON	set	4020
   198  0000                     _ADCON1	set	4033
   199  0000                     _LATB	set	3978
   200  0000                     _LATE	set	3981
   201  0000                     _LATD	set	3980
   202  0000                     _LATC	set	3979
   203  0000                     _LATA	set	3977
   204  0000                     _TMR0IF	set	32658
   205  0000                     _GIE	set	32663
   206  0000                     _TMR0IE	set	32661
   207                           
   208                           ; #config settings
   209  00080D  00                 	db	0	; dummy byte at the end
   210  0000                     
   211                           	psect	cinit
   212  001A76                     __pcinit:
   213                           	opt callstack 0
   214  001A76                     start_initialization:
   215                           	opt callstack 0
   216  001A76                     __initialization:
   217                           	opt callstack 0
   218                           
   219                           ; Initialize objects allocated to BANK0 (28 bytes)
   220                           ; load TBLPTR registers with __pidataBANK0
   221  001A76  0E5E               	movlw	low __pidataBANK0
   222  001A78  6EF6               	movwf	tblptrl,c
   223  001A7A  0E1F               	movlw	high __pidataBANK0
   224  001A7C  6EF7               	movwf	tblptrh,c
   225  001A7E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   226  001A80  6EF8               	movwf	tblptru,c
   227  001A82  EE00  F0B5         	lfsr	0,__pdataBANK0
   228  001A86  EE10 F01C          	lfsr	1,28
   229  001A8A                     copy_data0:
   230  001A8A  0009               	tblrd		*+
   231  001A8C  CFF5 FFEE          	movff	tablat,postinc0
   232  001A90  50E5               	movf	postdec1,w,c
   233  001A92  50E1               	movf	fsr1l,w,c
   234  001A94  E1FA               	bnz	copy_data0
   235                           
   236                           ; Initialize objects allocated to COMRAM (3 bytes)
   237                           ; load TBLPTR registers with __pidataCOMRAM
   238  001A96  0E2C               	movlw	low __pidataCOMRAM
   239  001A98  6EF6               	movwf	tblptrl,c
   240  001A9A  0E20               	movlw	high __pidataCOMRAM
   241  001A9C  6EF7               	movwf	tblptrh,c
   242  001A9E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   243  001AA0  6EF8               	movwf	tblptru,c
   244  001AA2  0009               	tblrd		*+	;fetch initializer
   245  001AA4  CFF5 F044          	movff	tablat,__pdataCOMRAM
   246  001AA8  0009               	tblrd		*+	;fetch initializer
   247  001AAA  CFF5 F045          	movff	tablat,__pdataCOMRAM+1
   248  001AAE  0009               	tblrd		*+	;fetch initializer
   249  001AB0  CFF5 F046          	movff	tablat,__pdataCOMRAM+2
   250                           
   251                           ; Clear objects allocated to BANK1 (123 bytes)
   252  001AB4  EE01  F000         	lfsr	0,__pbssBANK1
   253  001AB8  0E7B               	movlw	123
   254  001ABA                     clear_0:
   255  001ABA  6AEE               	clrf	postinc0,c
   256  001ABC  06E8               	decf	wreg,f,c
   257  001ABE  E1FD               	bnz	clear_0
   258                           
   259                           ; Clear objects allocated to BANK0 (85 bytes)
   260  001AC0  EE00  F060         	lfsr	0,__pbssBANK0
   261  001AC4  0E55               	movlw	85
   262  001AC6                     clear_1:
   263  001AC6  6AEE               	clrf	postinc0,c
   264  001AC8  06E8               	decf	wreg,f,c
   265  001ACA  E1FD               	bnz	clear_1
   266                           
   267                           ; Clear objects allocated to COMRAM (13 bytes)
   268  001ACC  EE00  F037         	lfsr	0,__pbssCOMRAM
   269  001AD0  0E0D               	movlw	13
   270  001AD2                     clear_2:
   271  001AD2  6AEE               	clrf	postinc0,c
   272  001AD4  06E8               	decf	wreg,f,c
   273  001AD6  E1FD               	bnz	clear_2
   274  001AD8                     end_of_initialization:
   275                           	opt callstack 0
   276  001AD8                     __end_of__initialization:
   277                           	opt callstack 0
   278  001AD8  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   279  001ADA  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   280  001ADC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   281  001ADE  6EF8               	movwf	tblptru,c
   282  001AE0  0100               	movlb	0
   283  001AE2  EF13  F00A         	goto	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMRAM
   286  000037                     __pbssCOMRAM:
   287                           	opt callstack 0
   288  000037                     _mpap:
   289                           	opt callstack 0
   290  000037                     	ds	8
   291  00003F                     display7s_job@q:
   292                           	opt callstack 0
   293  00003F                     	ds	1
   294  000040                     mpap_sych@c:
   295                           	opt callstack 0
   296  000040                     	ds	1
   297  000041                     mpap_sych@sm0:
   298                           	opt callstack 0
   299  000041                     	ds	1
   300  000042                     _main_flag:
   301                           	opt callstack 0
   302  000042                     	ds	1
   303  000043                     _isr_flag:
   304                           	opt callstack 0
   305  000043                     	ds	1
   306                           
   307                           	psect	dataCOMRAM
   308  000044                     __pdataCOMRAM:
   309                           	opt callstack 0
   310  000044                     _mpap_off:
   311                           	opt callstack 0
   312  000044                     	ds	2
   313  000046                     mpap_do1step@i:
   314                           	opt callstack 0
   315  000046                     	ds	1
   316                           
   317                           	psect	bssBANK0
   318  000060                     __pbssBANK0:
   319                           	opt callstack 0
   320  000060                     _key:
   321                           	opt callstack 0
   322  000060                     	ds	80
   323  0000B0                     _group_x:
   324                           	opt callstack 0
   325  0000B0                     	ds	5
   326                           
   327                           	psect	dataBANK0
   328  0000B5                     __pdataBANK0:
   329                           	opt callstack 0
   330  0000B5                     _multiplexedDisp:
   331                           	opt callstack 0
   332  0000B5                     	ds	20
   333  0000C9                     _mpap_step:
   334                           	opt callstack 0
   335  0000C9                     	ds	8
   336                           
   337                           	psect	bssBANK1
   338  000100                     __pbssBANK1:
   339                           	opt callstack 0
   340  000100                     _pulsonic:
   341                           	opt callstack 0
   342  000100                     	ds	123
   343                           
   344                           	psect	cstackBANK0
   345  0000D1                     __pcstackBANK0:
   346                           	opt callstack 0
   347  0000D1                     disp_show_quantity@buff:
   348                           	opt callstack 0
   349                           
   350                           ; 10 bytes @ 0x0
   351  0000D1                     	ds	10
   352  0000DB                     disp_show_quantity@real:
   353                           	opt callstack 0
   354                           
   355                           ; 3 bytes @ 0xA
   356  0000DB                     	ds	3
   357  0000DE                     disp_show_quantity@num:
   358                           	opt callstack 0
   359                           
   360                           ; 1 bytes @ 0xD
   361  0000DE                     	ds	1
   362  0000DF                     disp_show_quantity@q:
   363                           	opt callstack 0
   364                           
   365                           ; 1 bytes @ 0xE
   366  0000DF                     	ds	1
   367  0000E0                     disp_show_quantity@last_pos:
   368                           	opt callstack 0
   369                           
   370                           ; 1 bytes @ 0xF
   371  0000E0                     	ds	1
   372  0000E1                     disp_show_quantity@I:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x10
   376  0000E1                     	ds	2
   377  0000E3                     disp_show_quantity@i:
   378                           	opt callstack 0
   379                           
   380                           ; 1 bytes @ 0x12
   381  0000E3                     	ds	1
   382                           
   383                           	psect	cstackCOMRAM
   384  000001                     __pcstackCOMRAM:
   385                           	opt callstack 0
   386  000001                     mpap_do1step@KI:
   387                           	opt callstack 0
   388                           
   389                           ; 1 bytes @ 0x0
   390  000001                     	ds	1
   391  000002                     ??_mpap_homming:
   392  000002                     mpap_normal_mode@cod_ret:
   393                           	opt callstack 0
   394                           
   395                           ; 1 bytes @ 0x1
   396  000002                     	ds	1
   397  000003                     mpap_homming@cod_ret:
   398                           	opt callstack 0
   399                           
   400                           ; 1 bytes @ 0x2
   401  000003                     	ds	1
   402  000004                     
   403                           ; 1 bytes @ 0x3
   404  000004                     	ds	1
   405  000005                     ??_INTERRUPCION:
   406                           
   407                           ; 1 bytes @ 0x4
   408  000005                     	ds	6
   409  00000B                     ??_ikey_is_accessible:
   410  00000B                     ??_multiplexedDisp_job:
   411  00000B                     ?___wmul:
   412                           	opt callstack 0
   413  00000B                     ?___lwdiv:
   414                           	opt callstack 0
   415  00000B                     ?___lwmod:
   416                           	opt callstack 0
   417  00000B                     ?___ftpack:
   418                           	opt callstack 0
   419  00000B                     ikb_init@i:
   420                           	opt callstack 0
   421  00000B                     ikb_key_is_ready2read@k:
   422                           	opt callstack 0
   423  00000B                     ikey_clear_all_flag@i:
   424                           	opt callstack 0
   425  00000B                     multiplexedDisp_init@i:
   426                           	opt callstack 0
   427  00000B                     ___wmul@multiplier:
   428                           	opt callstack 0
   429  00000B                     ___lwdiv@dividend:
   430                           	opt callstack 0
   431  00000B                     ___lwmod@dividend:
   432                           	opt callstack 0
   433  00000B                     ___ftpack@arg:
   434                           	opt callstack 0
   435                           
   436                           ; 3 bytes @ 0xA
   437  00000B                     	ds	1
   438  00000C                     ikey_scan@k:
   439                           	opt callstack 0
   440                           
   441                           ; 1 bytes @ 0xB
   442  00000C                     	ds	1
   443  00000D                     ikey_is_accessible@k:
   444                           	opt callstack 0
   445  00000D                     ___wmul@multiplicand:
   446                           	opt callstack 0
   447  00000D                     ___lwdiv@divisor:
   448                           	opt callstack 0
   449  00000D                     ___lwmod@divisor:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0xC
   453  00000D                     	ds	1
   454  00000E                     ___ftpack@exp:
   455                           	opt callstack 0
   456                           
   457                           ; 1 bytes @ 0xD
   458  00000E                     	ds	1
   459  00000F                     ___ftpack@sign:
   460                           	opt callstack 0
   461  00000F                     ___lwdiv@counter:
   462                           	opt callstack 0
   463  00000F                     ___lwmod@counter:
   464                           	opt callstack 0
   465  00000F                     ___wmul@product:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0xE
   469  00000F                     	ds	1
   470  000010                     ??___ftpack:
   471  000010                     ___lwdiv@quotient:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0xF
   475  000010                     	ds	1
   476  000011                     multiplexedDisp_job@q:
   477                           	opt callstack 0
   478  000011                     mpap_setupToTurn@numSteps_tomove:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482  000011                     	ds	1
   483  000012                     multiplexedDisp_job@i:
   484                           	opt callstack 0
   485  000012                     utoa@buf:
   486                           	opt callstack 0
   487                           
   488                           ; 1 bytes @ 0x11
   489  000012                     	ds	1
   490  000013                     ?___ftadd:
   491                           	opt callstack 0
   492  000013                     ?___ftmul:
   493                           	opt callstack 0
   494  000013                     ?___awtoft:
   495                           	opt callstack 0
   496  000013                     ?___lwtoft:
   497                           	opt callstack 0
   498  000013                     _mpap_setupToTurn$413:
   499                           	opt callstack 0
   500  000013                     ___awtoft@c:
   501                           	opt callstack 0
   502  000013                     ___lwtoft@c:
   503                           	opt callstack 0
   504  000013                     utoa@val:
   505                           	opt callstack 0
   506  000013                     ___ftadd@f1:
   507                           	opt callstack 0
   508  000013                     ___ftmul@f1:
   509                           	opt callstack 0
   510                           
   511                           ; 3 bytes @ 0x12
   512  000013                     	ds	2
   513  000015                     nozzle_moveto@nozzle:
   514                           	opt callstack 0
   515  000015                     utoa@base:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0x14
   519  000015                     	ds	1
   520  000016                     ___awtoft@sign:
   521                           	opt callstack 0
   522  000016                     ___ftadd@f2:
   523                           	opt callstack 0
   524  000016                     ___ftge@ff1:
   525                           	opt callstack 0
   526  000016                     ___ftmul@f2:
   527                           	opt callstack 0
   528                           
   529                           ; 3 bytes @ 0x15
   530  000016                     	ds	1
   531  000017                     utoa@v:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x16
   535  000017                     	ds	2
   536  000019                     ??___ftadd:
   537  000019                     ??___ftmul:
   538  000019                     utoa@c:
   539                           	opt callstack 0
   540  000019                     ___ftge@ff2:
   541                           	opt callstack 0
   542                           
   543                           ; 3 bytes @ 0x18
   544  000019                     	ds	1
   545  00001A                     itoa@buf:
   546                           	opt callstack 0
   547                           
   548                           ; 1 bytes @ 0x19
   549  00001A                     	ds	1
   550  00001B                     itoa@val:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x1A
   554  00001B                     	ds	1
   555  00001C                     ??___ftge:
   556  00001C                     ___ftadd@sign:
   557                           	opt callstack 0
   558  00001C                     ___ftmul@exp:
   559                           	opt callstack 0
   560                           
   561                           ; 1 bytes @ 0x1B
   562  00001C                     	ds	1
   563  00001D                     ___ftadd@exp2:
   564                           	opt callstack 0
   565  00001D                     itoa@base:
   566                           	opt callstack 0
   567  00001D                     ___ftmul@f3_as_product:
   568                           	opt callstack 0
   569                           
   570                           ; 3 bytes @ 0x1C
   571  00001D                     	ds	1
   572  00001E                     ___ftadd@exp1:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x1D
   576  00001E                     	ds	1
   577  00001F                     ??_ikey_parsing:
   578  00001F                     ?___ftsub:
   579                           	opt callstack 0
   580  00001F                     ___ftsub@f1:
   581                           	opt callstack 0
   582                           
   583                           ; 3 bytes @ 0x1E
   584  00001F                     	ds	1
   585  000020                     ___ftmul@cntr:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x1F
   589  000020                     	ds	1
   590  000021                     ___ftmul@sign:
   591                           	opt callstack 0
   592                           
   593                           ; 1 bytes @ 0x20
   594  000021                     	ds	1
   595  000022                     ?___fttol:
   596                           	opt callstack 0
   597  000022                     ___ftsub@f2:
   598                           	opt callstack 0
   599  000022                     ___fttol@f1:
   600                           	opt callstack 0
   601                           
   602                           ; 3 bytes @ 0x21
   603  000022                     	ds	1
   604  000023                     ikey_parsing@k:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0x22
   608  000023                     	ds	1
   609  000024                     
   610                           ; 1 bytes @ 0x23
   611  000024                     	ds	1
   612  000025                     
   613                           ; 1 bytes @ 0x24
   614  000025                     	ds	1
   615  000026                     ??___fttol:
   616                           
   617                           ; 1 bytes @ 0x25
   618  000026                     	ds	5
   619  00002B                     ___fttol@sign1:
   620                           	opt callstack 0
   621                           
   622                           ; 1 bytes @ 0x2A
   623  00002B                     	ds	1
   624  00002C                     ___fttol@lval:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x2B
   628  00002C                     	ds	4
   629  000030                     ___fttol@exp1:
   630                           	opt callstack 0
   631                           
   632                           ; 1 bytes @ 0x2F
   633  000030                     	ds	1
   634  000031                     disp_show_quantity@f:
   635                           	opt callstack 0
   636                           
   637                           ; 3 bytes @ 0x30
   638  000031                     	ds	3
   639  000034                     ??_disp_show_quantity:
   640                           
   641                           ; 1 bytes @ 0x33
   642  000034                     	ds	1
   643  000035                     main@c_access_kb:
   644                           	opt callstack 0
   645                           
   646                           ; 1 bytes @ 0x34
   647  000035                     	ds	1
   648  000036                     main@c_access_disp:
   649                           	opt callstack 0
   650                           
   651                           ; 1 bytes @ 0x35
   652  000036                     	ds	1
   653                           
   654 ;;
   655 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   656 ;;
   657 ;; *************** function _main *****************
   658 ;; Defined at:
   659 ;;		line 49 in file "main.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  c_access_dis    1   53[COMRAM] char 
   664 ;;  c_access_kb     1   52[COMRAM] char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 3F/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         2       0       0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0
   677 ;;      Totals:         2       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        2 bytes
   679 ;; Hardware stack levels required when called:    9
   680 ;; This function calls:
   681 ;;		_disp_show_quantity
   682 ;;		_display7s_init
   683 ;;		_display7s_job
   684 ;;		_ikb_flush
   685 ;;		_ikb_init
   686 ;;		_ikb_job
   687 ;;		_ikb_key_is_ready2read
   688 ;;		_mpap_setupToHomming
   689 ;;		_mpap_sych
   690 ;;		_nozzle_moveto
   691 ;; This function is called by:
   692 ;;		Startup code after reset
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text0
   697  001426                     __ptext0:
   698                           	opt callstack 0
   699  001426                     _main:
   700                           	opt callstack 22
   701                           
   702                           ;main.c: 51: int8_t c_access_kb=0;
   703                           
   704                           ;incstack = 0
   705  001426  0E00               	movlw	0
   706  001428  6E35               	movwf	main@c_access_kb,c
   707                           
   708                           ;main.c: 52: int8_t c_access_disp=0;
   709  00142A  0E00               	movlw	0
   710  00142C  6E36               	movwf	main@c_access_disp,c
   711                           
   712                           ;main.c: 54: LATA = 0x00;
   713  00142E  0E00               	movlw	0
   714  001430  6E89               	movwf	3977,c	;volatile
   715                           
   716                           ;main.c: 55: LATC = 0x00;
   717  001432  0E00               	movlw	0
   718  001434  6E8B               	movwf	3979,c	;volatile
   719                           
   720                           ;main.c: 56: LATD = 0x00;
   721  001436  0E00               	movlw	0
   722  001438  6E8C               	movwf	3980,c	;volatile
   723                           
   724                           ;main.c: 57: LATE = 0x00;
   725  00143A  0E00               	movlw	0
   726  00143C  6E8D               	movwf	3981,c	;volatile
   727                           
   728                           ;main.c: 58: LATB = 0x00;
   729  00143E  0E00               	movlw	0
   730  001440  6E8A               	movwf	3978,c	;volatile
   731                           
   732                           ;main.c: 62: ADCON1 = 0x0F;
   733  001442  0E0F               	movlw	15
   734  001444  6EC1               	movwf	4033,c	;volatile
   735                           
   736                           ;main.c: 63: CMCON=0xCF;
   737  001446  0ECF               	movlw	207
   738  001448  6EB4               	movwf	4020,c	;volatile
   739                           
   740                           ;main.c: 66: UCON = 0;
   741  00144A  0E00               	movlw	0
   742  00144C  6E6D               	movwf	3949,c	;volatile
   743                           
   744                           ;main.c: 67: UCFG = 1<<3;
   745  00144E  0E08               	movlw	8
   746  001450  6E6F               	movwf	3951,c	;volatile
   747                           
   748                           ;main.c: 68: T0CON = 0B10000111;
   749  001452  0E87               	movlw	135
   750  001454  6ED5               	movwf	4053,c	;volatile
   751                           
   752                           ;main.c: 71: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) ) 
      +                          >> 8);
   753  001456  68D7               	setf	4055,c	;volatile
   754                           
   755                           ;main.c: 72: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) ))
      +                          ;
   756  001458  0ED1               	movlw	209
   757  00145A  6ED6               	movwf	4054,c	;volatile
   758                           
   759                           ;main.c: 73: TMR0IE = 1;
   760  00145C  8AF2               	bsf	4082,5,c	;volatile
   761  00145E  808D               	bsf	3981,0,c	;volatile
   762  001460  9096               	bcf	3990,0,c	;volatile
   763  001462  9095               	bcf	3989,0,c	;volatile
   764  001464  9295               	bcf	3989,1,c	;volatile
   765  001466  9495               	bcf	3989,2,c	;volatile
   766  001468  9695               	bcf	3989,3,c	;volatile
   767  00146A  928B               	bcf	3979,1,c	;volatile
   768  00146C  9294               	bcf	3988,1,c	;volatile
   769  00146E  8296               	bsf	3990,1,c	;volatile
   770                           
   771                           ;main.c: 88: display7s_init();
   772  001470  ECC8  F00D         	call	_display7s_init	;wreg free
   773                           
   774                           ;main.c: 89: ikb_init();
   775  001474  EC75  F00B         	call	_ikb_init	;wreg free
   776                           
   777                           ; BSR set to: 0
   778                           ;main.c: 91: disp_show_quantity(77.7);
   779  001478  0E66               	movlw	102
   780  00147A  6E31               	movwf	disp_show_quantity@f,c
   781  00147C  0E9B               	movlw	155
   782  00147E  6E32               	movwf	disp_show_quantity@f+1,c
   783  001480  0E42               	movlw	66
   784  001482  6E33               	movwf	disp_show_quantity@f+2,c
   785  001484  EC1F  F007         	call	_disp_show_quantity	;wreg free
   786                           
   787                           ;main.c: 96: GIE = 1;
   788  001488  8EF2               	bsf	4082,7,c	;volatile
   789                           
   790                           ;main.c: 106: mpap_setupToHomming();
   791  00148A  ECCB  F00F         	call	_mpap_setupToHomming	;wreg free
   792  00148E                     l3710:
   793                           
   794                           ;main.c: 109: {;main.c: 110: if (isr_flag.f1ms)
   795  00148E  A043               	btfss	_isr_flag,0,c	;volatile
   796  001490  D002               	goto	l94
   797                           
   798                           ;main.c: 111: {;main.c: 112: isr_flag.f1ms = 0;
   799  001492  9043               	bcf	_isr_flag,0,c	;volatile
   800                           
   801                           ;main.c: 113: main_flag.f1ms = 1;
   802  001494  8042               	bsf	_main_flag,0,c	;volatile
   803  001496                     l94:
   804                           
   805                           ;main.c: 114: };main.c: 117: if (main_flag.f1ms)
   806  001496  A042               	btfss	_main_flag,0,c	;volatile
   807  001498  D03F               	goto	l3746
   808                           
   809                           ;main.c: 118: {;main.c: 119: if (++c_access_kb == 20)
   810  00149A  2A35               	incf	main@c_access_kb,f,c
   811  00149C  0E14               	movlw	20
   812  00149E  1835               	xorwf	main@c_access_kb,w,c
   813  0014A0  A4D8               	btfss	status,2,c
   814  0014A2  D031               	goto	l3740
   815                           
   816                           ;main.c: 120: {;main.c: 121: c_access_kb = 0;
   817  0014A4  0E00               	movlw	0
   818  0014A6  6E35               	movwf	main@c_access_kb,c
   819                           
   820                           ;main.c: 123: ikb_job();
   821  0014A8  ECD4  F00F         	call	_ikb_job	;wreg free
   822                           
   823                           ;main.c: 125: if (ikb_key_is_ready2read(0))
   824  0014AC  0E00               	movlw	0
   825  0014AE  ECBD  F00F         	call	_ikb_key_is_ready2read
   826  0014B2  0900               	iorlw	0
   827  0014B4  B4D8               	btfsc	status,2,c
   828  0014B6  D003               	goto	l3724
   829                           
   830                           ; BSR set to: 0
   831                           ;main.c: 126: {;main.c: 127: nozzle_moveto(0);
   832  0014B8  0E00               	movlw	0
   833  0014BA  EC51  F00F         	call	_nozzle_moveto
   834  0014BE                     l3724:
   835                           
   836                           ;main.c: 128: };main.c: 129: if (ikb_key_is_ready2read(1))
   837  0014BE  0E01               	movlw	1
   838  0014C0  ECBD  F00F         	call	_ikb_key_is_ready2read
   839  0014C4  0900               	iorlw	0
   840  0014C6  B4D8               	btfsc	status,2,c
   841  0014C8  D003               	goto	l3728
   842                           
   843                           ; BSR set to: 0
   844                           ;main.c: 130: {;main.c: 131: nozzle_moveto(1);
   845  0014CA  0E01               	movlw	1
   846  0014CC  EC51  F00F         	call	_nozzle_moveto
   847  0014D0                     l3728:
   848                           
   849                           ;main.c: 132: };main.c: 133: if (ikb_key_is_ready2read(2))
   850  0014D0  0E02               	movlw	2
   851  0014D2  ECBD  F00F         	call	_ikb_key_is_ready2read
   852  0014D6  0900               	iorlw	0
   853  0014D8  B4D8               	btfsc	status,2,c
   854  0014DA  D003               	goto	l3732
   855                           
   856                           ; BSR set to: 0
   857                           ;main.c: 134: {;main.c: 135: nozzle_moveto(2);
   858  0014DC  0E02               	movlw	2
   859  0014DE  EC51  F00F         	call	_nozzle_moveto
   860  0014E2                     l3732:
   861                           
   862                           ;main.c: 136: };main.c: 137: if (ikb_key_is_ready2read(3))
   863  0014E2  0E03               	movlw	3
   864  0014E4  ECBD  F00F         	call	_ikb_key_is_ready2read
   865  0014E8  0900               	iorlw	0
   866  0014EA  B4D8               	btfsc	status,2,c
   867  0014EC  D003               	goto	l3736
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 138: {;main.c: 139: nozzle_moveto(3);
   871  0014EE  0E03               	movlw	3
   872  0014F0  EC51  F00F         	call	_nozzle_moveto
   873  0014F4                     l3736:
   874                           
   875                           ;main.c: 140: };main.c: 141: if (ikb_key_is_ready2read(4))
   876  0014F4  0E04               	movlw	4
   877  0014F6  ECBD  F00F         	call	_ikb_key_is_ready2read
   878  0014FA  0900               	iorlw	0
   879  0014FC  B4D8               	btfsc	status,2,c
   880  0014FE  D003               	goto	l3740
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 142: {;main.c: 143: nozzle_moveto(4);
   884  001500  0E04               	movlw	4
   885  001502  EC51  F00F         	call	_nozzle_moveto
   886  001506                     l3740:
   887                           
   888                           ;main.c: 144: };main.c: 145: };main.c: 147: if (++c_access_disp == 2)
   889  001506  2A36               	incf	main@c_access_disp,f,c
   890  001508  0E02               	movlw	2
   891  00150A  1836               	xorwf	main@c_access_disp,w,c
   892  00150C  A4D8               	btfss	status,2,c
   893  00150E  D004               	goto	l3746
   894                           
   895                           ;main.c: 148: {;main.c: 149: c_access_disp = 0;
   896  001510  0E00               	movlw	0
   897  001512  6E36               	movwf	main@c_access_disp,c
   898                           
   899                           ;main.c: 150: display7s_job();
   900  001514  EC7B  F00F         	call	_display7s_job	;wreg free
   901  001518                     l3746:
   902                           
   903                           ;main.c: 151: };main.c: 152: };main.c: 153: mpap_sych();
   904  001518  ECC1  F00C         	call	_mpap_sych	;wreg free
   905                           
   906                           ;main.c: 155: main_flag.f1ms = 0;
   907  00151C  9042               	bcf	_main_flag,0,c	;volatile
   908                           
   909                           ;main.c: 156: ikb_flush();
   910  00151E  ECF3  F00F         	call	_ikb_flush	;wreg free
   911  001522  D7B5               	goto	l3710
   912  001524                     __end_of_main:
   913                           	opt callstack 0
   914                           
   915 ;; *************** function _nozzle_moveto *****************
   916 ;; Defined at:
   917 ;;		line 111 in file "mpap.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  nozzle          1    wreg     char 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  nozzle          1   20[COMRAM] char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 3F/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   931 ;;      Params:         0       0       0       0       0       0       0       0       0
   932 ;;      Locals:         1       0       0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0
   934 ;;      Totals:         1       0       0       0       0       0       0       0       0
   935 ;;Total ram usage:        1 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    6
   938 ;; This function calls:
   939 ;;		___wmul
   940 ;;		_mpap_setupToTurn
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text1
   947  001EA2                     __ptext1:
   948                           	opt callstack 0
   949  001EA2                     _nozzle_moveto:
   950                           	opt callstack 24
   951                           
   952                           ; BSR set to: 0
   953                           ;incstack = 0
   954                           ;nozzle_moveto@nozzle stored from wreg
   955  001EA2  6E15               	movwf	nozzle_moveto@nozzle,c
   956                           
   957                           ;mpap.c: 114: mpap.mode = NORMAL_MODE;
   958  001EA4  0E03               	movlw	3
   959  001EA6  6E3E               	movwf	_mpap+7,c	;volatile
   960                           
   961                           ;mpap.c: 115: mpap_setupToTurn( (nozzle*200) - mpap.numSteps_current);
   962  001EA8  5015               	movf	nozzle_moveto@nozzle,w,c
   963  001EAA  6E0B               	movwf	___wmul@multiplier,c
   964  001EAC  6A0C               	clrf	___wmul@multiplier+1,c
   965  001EAE  BE0B               	btfsc	___wmul@multiplier,7,c
   966  001EB0  060C               	decf	___wmul@multiplier+1,f,c
   967  001EB2  0E00               	movlw	0
   968  001EB4  6E0E               	movwf	___wmul@multiplicand+1,c
   969  001EB6  0EC8               	movlw	200
   970  001EB8  6E0D               	movwf	___wmul@multiplicand,c
   971  001EBA  EC68  F00F         	call	___wmul	;wreg free
   972  001EBE  5037               	movf	_mpap,w,c	;volatile
   973  001EC0  5C0B               	subwf	?___wmul,w,c
   974  001EC2  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
   975  001EC4  5038               	movf	_mpap+1,w,c	;volatile
   976  001EC6  580C               	subwfb	?___wmul+1,w,c
   977  001EC8  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
   978  001ECA  EC39  F00F         	call	_mpap_setupToTurn	;wreg free
   979  001ECE  0012               	return		;funcret
   980  001ED0                     __end_of_nozzle_moveto:
   981                           	opt callstack 0
   982                           
   983 ;; *************** function ___wmul *****************
   984 ;; Defined at:
   985 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  multiplier      2   10[COMRAM] unsigned int 
   988 ;;  multiplicand    2   12[COMRAM] unsigned int 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  product         2   14[COMRAM] unsigned int 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  2   10[COMRAM] unsigned int 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, prodl, prodh
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1000 ;;      Params:         4       0       0       0       0       0       0       0       0
  1001 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1003 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1004 ;;Total ram usage:        6 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    5
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_nozzle_moveto
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text2
  1015  001ED0                     __ptext2:
  1016                           	opt callstack 0
  1017  001ED0                     ___wmul:
  1018                           	opt callstack 24
  1019                           
  1020                           ;incstack = 0
  1021  001ED0  500B               	movf	___wmul@multiplier,w,c
  1022  001ED2  020D               	mulwf	___wmul@multiplicand,c
  1023  001ED4  CFF3 F00F          	movff	prodl,___wmul@product
  1024  001ED8  CFF4 F010          	movff	prodh,___wmul@product+1
  1025  001EDC  500B               	movf	___wmul@multiplier,w,c
  1026  001EDE  020E               	mulwf	___wmul@multiplicand+1,c
  1027  001EE0  50F3               	movf	prodl,w,c
  1028  001EE2  2610               	addwf	___wmul@product+1,f,c
  1029  001EE4  500C               	movf	___wmul@multiplier+1,w,c
  1030  001EE6  020D               	mulwf	___wmul@multiplicand,c
  1031  001EE8  50F3               	movf	prodl,w,c
  1032  001EEA  2610               	addwf	___wmul@product+1,f,c
  1033  001EEC  C00F  F00B         	movff	___wmul@product,?___wmul
  1034  001EF0  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  1035  001EF4  0012               	return		;funcret
  1036  001EF6                     __end_of___wmul:
  1037                           	opt callstack 0
  1038                           
  1039 ;; *************** function _mpap_sych *****************
  1040 ;; Defined at:
  1041 ;;		line 160 in file "main.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    5
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text3
  1070  001982                     __ptext3:
  1071                           	opt callstack 0
  1072  001982                     _mpap_sych:
  1073                           	opt callstack 25
  1074                           
  1075                           ;main.c: 162: static int8_t sm0;;main.c: 163: static int8_t c;;main.c: 164: if (sm0 == 0
      +                          )
  1076                           
  1077                           ;incstack = 0
  1078  001982  5041               	movf	mpap_sych@sm0,w,c
  1079  001984  A4D8               	btfss	status,2,c
  1080  001986  D010               	goto	l3008
  1081                           
  1082                           ;main.c: 165: {;main.c: 166: if ((mpap.mode == NORMAL_MODE) || (mpap.mode == HOMMING_MOD
      +                          E))
  1083  001988  0E03               	movlw	3
  1084  00198A  183E               	xorwf	_mpap+7,w,c	;volatile
  1085  00198C  B4D8               	btfsc	status,2,c
  1086  00198E  D004               	goto	u3220
  1087  001990  0E02               	movlw	2
  1088  001992  183E               	xorwf	_mpap+7,w,c	;volatile
  1089  001994  A4D8               	btfss	status,2,c
  1090  001996  D002               	goto	l3004
  1091  001998                     u3220:
  1092                           
  1093                           ;main.c: 167: {;main.c: 168: sm0++;
  1094  001998  2A41               	incf	mpap_sych@sm0,f,c
  1095                           
  1096                           ;main.c: 169: }
  1097  00199A  0012               	return	
  1098  00199C                     l3004:
  1099                           
  1100                           ;main.c: 170: else if (mpap.mode == STALL_MODE)
  1101  00199C  043E               	decf	_mpap+7,w,c	;volatile
  1102  00199E  A4D8               	btfss	status,2,c
  1103  0019A0  0012               	return	
  1104                           
  1105                           ;main.c: 171: {;main.c: 172: sm0 = 2;
  1106  0019A2  0E02               	movlw	2
  1107  0019A4  6E41               	movwf	mpap_sych@sm0,c
  1108  0019A6  0012               	return	
  1109  0019A8                     l3008:
  1110                           
  1111                           ;main.c: 175: else if (sm0 == 1)
  1112  0019A8  0441               	decf	mpap_sych@sm0,w,c
  1113  0019AA  A4D8               	btfss	status,2,c
  1114  0019AC  D012               	goto	l3024
  1115                           
  1116                           ;main.c: 176: {;main.c: 177: if (mpap.numSteps_tomove == 0)
  1117  0019AE  503B               	movf	_mpap+4,w,c	;volatile
  1118  0019B0  103C               	iorwf	_mpap+5,w,c	;volatile
  1119  0019B2  A4D8               	btfss	status,2,c
  1120  0019B4  0012               	return	
  1121                           
  1122                           ;main.c: 178: {;main.c: 179: if (mpap.mode == HOMMING_MODE)
  1123  0019B6  0E02               	movlw	2
  1124  0019B8  183E               	xorwf	_mpap+7,w,c	;volatile
  1125  0019BA  A4D8               	btfss	status,2,c
  1126  0019BC  D005               	goto	l3018
  1127                           
  1128                           ;main.c: 180: {;main.c: 181: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  1129  0019BE  0101               	movlb	1	; () banked
  1130  0019C0  A175               	btfss	(_pulsonic+117)& (0+255),0,b
  1131  0019C2  D003               	goto	l3020
  1132                           
  1133                           ; BSR set to: 1
  1134                           ;main.c: 182: {;main.c: 183: pulsonic.errors.flag.mpap_home_sensor = 0;
  1135  0019C4  9175               	bcf	(_pulsonic+117)& (0+255),0,b
  1136  0019C6  D001               	goto	l3020
  1137  0019C8                     l3018:
  1138                           
  1139                           ;main.c: 187: else if (mpap.mode == NORMAL_MODE)
  1140  0019C8  503E               	movf	_mpap+7,w,c	;volatile
  1141  0019CA                     l3020:
  1142                           
  1143                           ;main.c: 189: };main.c: 190: sm0++;
  1144  0019CA  2A41               	incf	mpap_sych@sm0,f,c
  1145                           
  1146                           ;main.c: 191: c = 0;
  1147  0019CC  0E00               	movlw	0
  1148  0019CE  6E40               	movwf	mpap_sych@c,c
  1149  0019D0  0012               	return	
  1150  0019D2                     l3024:
  1151                           
  1152                           ;main.c: 194: else if (sm0 == 2)
  1153  0019D2  0E02               	movlw	2
  1154  0019D4  1841               	xorwf	mpap_sych@sm0,w,c
  1155  0019D6  A4D8               	btfss	status,2,c
  1156  0019D8  D00A               	goto	l3034
  1157                           
  1158                           ;main.c: 195: {;main.c: 196: if (main_flag.f1ms)
  1159  0019DA  A042               	btfss	_main_flag,0,c	;volatile
  1160  0019DC  0012               	return	
  1161                           
  1162                           ;main.c: 197: {;main.c: 198: if (++c == 10)
  1163  0019DE  2A40               	incf	mpap_sych@c,f,c
  1164  0019E0  0E0A               	movlw	10
  1165  0019E2  1840               	xorwf	mpap_sych@c,w,c
  1166  0019E4  A4D8               	btfss	status,2,c
  1167  0019E6  0012               	return	
  1168                           
  1169                           ;main.c: 199: {;main.c: 201: mpap.mode = STALL_MODE;
  1170  0019E8  0E01               	movlw	1
  1171  0019EA  6E3E               	movwf	_mpap+7,c	;volatile
  1172  0019EC  D7D5               	goto	u3220
  1173  0019EE                     l3034:
  1174                           
  1175                           ;main.c: 206: else if (sm0 == 3)
  1176  0019EE  0E03               	movlw	3
  1177  0019F0  1841               	xorwf	mpap_sych@sm0,w,c
  1178  0019F2  A4D8               	btfss	status,2,c
  1179  0019F4  0012               	return	
  1180                           
  1181                           ;main.c: 207: {;main.c: 208: if (mpap.mode == IDLE_MODE)
  1182  0019F6  503E               	movf	_mpap+7,w,c	;volatile
  1183  0019F8  A4D8               	btfss	status,2,c
  1184  0019FA  0012               	return	
  1185                           
  1186                           ;main.c: 209: {;main.c: 211: sm0 = 0;
  1187  0019FC  0E00               	movlw	0
  1188  0019FE  6E41               	movwf	mpap_sych@sm0,c
  1189  001A00  0012               	return		;funcret
  1190  001A02                     __end_of_mpap_sych:
  1191                           	opt callstack 0
  1192                           
  1193 ;; *************** function _mpap_setupToHomming *****************
  1194 ;; Defined at:
  1195 ;;		line 101 in file "mpap.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 3E/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    6
  1216 ;; This function calls:
  1217 ;;		_mpap_setupToTurn
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text4
  1224  001F96                     __ptext4:
  1225                           	opt callstack 0
  1226  001F96                     _mpap_setupToHomming:
  1227                           	opt callstack 24
  1228                           
  1229                           ;mpap.c: 105: mpap_setupToTurn( -1 *( (18*200) +20));
  1230                           
  1231                           ;incstack = 0
  1232  001F96  0EF1               	movlw	241
  1233  001F98  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1234  001F9A  0EDC               	movlw	220
  1235  001F9C  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1236  001F9E  EC39  F00F         	call	_mpap_setupToTurn	;wreg free
  1237                           
  1238                           ;mpap.c: 109: mpap.mode = HOMMING_MODE;
  1239  001FA2  0E02               	movlw	2
  1240  001FA4  6E3E               	movwf	_mpap+7,c	;volatile
  1241  001FA6  0012               	return		;funcret
  1242  001FA8                     __end_of_mpap_setupToHomming:
  1243                           	opt callstack 0
  1244                           
  1245 ;; *************** function _mpap_setupToTurn *****************
  1246 ;; Defined at:
  1247 ;;		line 89 in file "mpap.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  numSteps_tom    2   16[COMRAM] int 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         2       0       0       0       0       0       0       0       0
  1262 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1264 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1265 ;;Total ram usage:        4 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    5
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_mpap_setupToHomming
  1272 ;;		_nozzle_moveto
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text5
  1277  001E72                     __ptext5:
  1278                           	opt callstack 0
  1279  001E72                     _mpap_setupToTurn:
  1280                           	opt callstack 24
  1281                           
  1282                           ;mpap.c: 92: if (numSteps_tomove !=0)
  1283                           
  1284                           ;incstack = 0
  1285  001E72  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  1286  001E74  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  1287  001E76  B4D8               	btfsc	status,2,c
  1288  001E78  0012               	return	
  1289                           
  1290                           ;mpap.c: 93: {;mpap.c: 94: mpap.KI = (numSteps_tomove<0)? -1: 1;
  1291  001E7A  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  1292  001E7C  D005               	goto	l465
  1293  001E7E  0E00               	movlw	0
  1294  001E80  6E14               	movwf	_mpap_setupToTurn$413+1,c
  1295  001E82  0E01               	movlw	1
  1296  001E84  6E13               	movwf	_mpap_setupToTurn$413,c
  1297  001E86  D002               	goto	l467
  1298  001E88                     l465:
  1299  001E88  6813               	setf	_mpap_setupToTurn$413,c
  1300  001E8A  6814               	setf	_mpap_setupToTurn$413+1,c
  1301  001E8C                     l467:
  1302  001E8C  C013  F03D         	movff	_mpap_setupToTurn$413,_mpap+6	;volatile
  1303                           
  1304                           ;mpap.c: 96: mpap.counter_steps = 0;
  1305  001E90  0E00               	movlw	0
  1306  001E92  6E3A               	movwf	_mpap+3,c	;volatile
  1307  001E94  0E00               	movlw	0
  1308  001E96  6E39               	movwf	_mpap+2,c	;volatile
  1309                           
  1310                           ;mpap.c: 98: mpap.numSteps_tomove = numSteps_tomove;
  1311  001E98  C011  F03B         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  1312  001E9C  C012  F03C         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  1313  001EA0  0012               	return		;funcret
  1314  001EA2                     __end_of_mpap_setupToTurn:
  1315                           	opt callstack 0
  1316                           
  1317 ;; *************** function _ikb_key_is_ready2read *****************
  1318 ;; Defined at:
  1319 ;;		line 427 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  k               1    wreg     unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  k               1   10[COMRAM] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      unsigned char 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 3F/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1333 ;;      Params:         0       0       0       0       0       0       0       0       0
  1334 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1336 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1337 ;;Total ram usage:        1 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    5
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text6
  1348  001F7A                     __ptext6:
  1349                           	opt callstack 0
  1350  001F7A                     _ikb_key_is_ready2read:
  1351                           	opt callstack 25
  1352                           
  1353                           ;incstack = 0
  1354                           ;ikb_key_is_ready2read@k stored from wreg
  1355  001F7A  6E0B               	movwf	ikb_key_is_ready2read@k,c
  1356                           
  1357                           ;ikb.c: 429: return key[k].bf.ReadyToRead;
  1358  001F7C  500B               	movf	ikb_key_is_ready2read@k,w,c
  1359  001F7E  0D10               	mullw	16
  1360  001F80  50F3               	movf	prodl,w,c
  1361  001F82  0F6A               	addlw	low (_key+10)
  1362  001F84  6ED9               	movwf	fsr2l,c
  1363  001F86  6ADA               	clrf	fsr2h,c
  1364  001F88  0100               	movlb	0	; () banked
  1365  001F8A  ACDF               	btfss	indf2,6,c
  1366  001F8C  D002               	goto	u3180
  1367  001F8E  0E01               	movlw	1
  1368  001F90  0012               	return	
  1369  001F92                     u3180:
  1370  001F92  0E00               	movlw	0
  1371                           
  1372                           ; BSR set to: 0
  1373  001F94  0012               	return		;funcret
  1374  001F96                     __end_of_ikb_key_is_ready2read:
  1375                           	opt callstack 0
  1376                           
  1377 ;; *************** function _ikb_job *****************
  1378 ;; Defined at:
  1379 ;;		line 414 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    8
  1400 ;; This function calls:
  1401 ;;		_ikey_parsing
  1402 ;;		_ikey_scan
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text7
  1409  001FA8                     __ptext7:
  1410                           	opt callstack 0
  1411  001FA8                     _ikb_job:
  1412                           	opt callstack 22
  1413                           
  1414                           ;ikb.c: 416: ikey_scan();
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;incstack = 0
  1418  001FA8  EC43  F009         	call	_ikey_scan	;wreg free
  1419                           
  1420                           ;ikb.c: 417: ikey_parsing();
  1421  001FAC  EC07  F004         	call	_ikey_parsing	;wreg free
  1422  001FB0  0012               	return		;funcret
  1423  001FB2                     __end_of_ikb_job:
  1424                           	opt callstack 0
  1425                           
  1426 ;; *************** function _ikey_scan *****************
  1427 ;; Defined at:
  1428 ;;		line 449 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  k               1   11[COMRAM] char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        2 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    6
  1449 ;; This function calls:
  1450 ;;		_keyRead_pin_key1
  1451 ;;		_keyRead_pin_key2
  1452 ;;		_keyRead_pin_key3
  1453 ;;		_keyRead_pin_key4
  1454 ;;		_keyRead_pin_key5
  1455 ;; This function is called by:
  1456 ;;		_ikb_job
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text8
  1461  001286                     __ptext8:
  1462                           	opt callstack 0
  1463  001286                     _ikey_scan:
  1464                           	opt callstack 23
  1465                           
  1466                           ;ikb.c: 451: int8_t k = 5-1;
  1467                           
  1468                           ;incstack = 0
  1469  001286  0E04               	movlw	4
  1470  001288  6E0C               	movwf	ikey_scan@k,c
  1471  00128A                     l2484:
  1472                           
  1473                           ;ikb.c: 453: {;ikb.c: 454: if (key[k].sm0 == 0)
  1474  00128A  500C               	movf	ikey_scan@k,w,c
  1475  00128C  0D10               	mullw	16
  1476  00128E  50F3               	movf	prodl,w,c
  1477  001290  0F64               	addlw	low (_key+4)
  1478  001292  6ED9               	movwf	fsr2l,c
  1479  001294  6ADA               	clrf	fsr2h,c
  1480  001296  50DF               	movf	indf2,w,c
  1481  001298  A4D8               	btfss	status,2,c
  1482  00129A  D016               	goto	l2490
  1483                           
  1484                           ;ikb.c: 455: {;ikb.c: 456: if (key[k].keyRead() == 0)
  1485  00129C  500C               	movf	ikey_scan@k,w,c
  1486  00129E  0D10               	mullw	16
  1487  0012A0  50F3               	movf	prodl,w,c
  1488  0012A2  0F60               	addlw	low _key
  1489  0012A4  6ED9               	movwf	fsr2l,c
  1490  0012A6  6ADA               	clrf	fsr2h,c
  1491  0012A8  D801               	call	u2228
  1492  0012AA  D00A               	goto	u2229
  1493  0012AC                     u2228:
  1494  0012AC  0005               	push	
  1495  0012AE  6EFA               	movwf	pclath,c
  1496  0012B0  50DE               	movf	postinc2,w,c
  1497  0012B2  6EFD               	movwf	tosl,c
  1498  0012B4  50DE               	movf	postinc2,w,c
  1499  0012B6  6EFE               	movwf	tosh,c
  1500  0012B8  50F8               	movf	tblptru,w,c
  1501  0012BA  6EFF               	movwf	tosu,c
  1502  0012BC  50FA               	movf	pclath,w,c
  1503  0012BE  0012               	return		;indir
  1504  0012C0                     u2229:
  1505  0012C0  0900               	iorlw	0
  1506  0012C2  A4D8               	btfss	status,2,c
  1507  0012C4  D0AC               	goto	l2520
  1508  0012C6  D041               	goto	L1
  1509  0012C8                     l2490:
  1510                           
  1511                           ;ikb.c: 461: else if (key[k].sm0 == 1)
  1512  0012C8  500C               	movf	ikey_scan@k,w,c
  1513  0012CA  0D10               	mullw	16
  1514  0012CC  50F3               	movf	prodl,w,c
  1515  0012CE  0F64               	addlw	low (_key+4)
  1516  0012D0  6ED9               	movwf	fsr2l,c
  1517  0012D2  6ADA               	clrf	fsr2h,c
  1518  0012D4  04DE               	decf	postinc2,w,c
  1519  0012D6  A4D8               	btfss	status,2,c
  1520  0012D8  D040               	goto	l2502
  1521                           
  1522                           ;ikb.c: 462: {;ikb.c: 463: if (++key[k].counter0 == 4)
  1523  0012DA  500C               	movf	ikey_scan@k,w,c
  1524  0012DC  0D10               	mullw	16
  1525  0012DE  50F3               	movf	prodl,w,c
  1526  0012E0  0F65               	addlw	low (_key+5)
  1527  0012E2  6ED9               	movwf	fsr2l,c
  1528  0012E4  6ADA               	clrf	fsr2h,c
  1529  0012E6  2ADF               	incf	indf2,f,c
  1530  0012E8  0E04               	movlw	4
  1531  0012EA  18DE               	xorwf	postinc2,w,c
  1532  0012EC  A4D8               	btfss	status,2,c
  1533  0012EE  D097               	goto	l2520
  1534                           
  1535                           ;ikb.c: 464: {;ikb.c: 465: key[k].counter0 = 0x00;
  1536  0012F0  500C               	movf	ikey_scan@k,w,c
  1537  0012F2  0D10               	mullw	16
  1538  0012F4  50F3               	movf	prodl,w,c
  1539  0012F6  0F65               	addlw	low (_key+5)
  1540  0012F8  6ED9               	movwf	fsr2l,c
  1541  0012FA  6ADA               	clrf	fsr2h,c
  1542  0012FC  0E00               	movlw	0
  1543  0012FE  6EDF               	movwf	indf2,c
  1544                           
  1545                           ;ikb.c: 467: if (key[k].keyRead() != 0)
  1546  001300  500C               	movf	ikey_scan@k,w,c
  1547  001302  0D10               	mullw	16
  1548  001304  50F3               	movf	prodl,w,c
  1549  001306  0F60               	addlw	low _key
  1550  001308  6ED9               	movwf	fsr2l,c
  1551  00130A  6ADA               	clrf	fsr2h,c
  1552  00130C  D801               	call	u2268
  1553  00130E  D00A               	goto	u2269
  1554  001310                     u2268:
  1555  001310  0005               	push	
  1556  001312  6EFA               	movwf	pclath,c
  1557  001314  50DE               	movf	postinc2,w,c
  1558  001316  6EFD               	movwf	tosl,c
  1559  001318  50DE               	movf	postinc2,w,c
  1560  00131A  6EFE               	movwf	tosh,c
  1561  00131C  50F8               	movf	tblptru,w,c
  1562  00131E  6EFF               	movwf	tosu,c
  1563  001320  50FA               	movf	pclath,w,c
  1564  001322  0012               	return		;indir
  1565  001324                     u2269:
  1566  001324  0900               	iorlw	0
  1567  001326  B4D8               	btfsc	status,2,c
  1568  001328  D008               	goto	l2500
  1569  00132A                     u2270:
  1570                           
  1571                           ;ikb.c: 468: {;ikb.c: 469: key[k].sm0--;
  1572  00132A  500C               	movf	ikey_scan@k,w,c
  1573  00132C  0D10               	mullw	16
  1574  00132E  50F3               	movf	prodl,w,c
  1575  001330  0F64               	addlw	low (_key+4)
  1576  001332  6ED9               	movwf	fsr2l,c
  1577  001334  6ADA               	clrf	fsr2h,c
  1578  001336  06DF               	decf	indf2,f,c
  1579                           
  1580                           ;ikb.c: 470: }
  1581  001338  D072               	goto	l2520
  1582  00133A                     l2500:
  1583                           
  1584                           ;ikb.c: 471: else;ikb.c: 472: {;ikb.c: 473: key[k].bf.state = 1;
  1585  00133A  500C               	movf	ikey_scan@k,w,c
  1586  00133C  0D10               	mullw	16
  1587  00133E  50F3               	movf	prodl,w,c
  1588  001340  0F6A               	addlw	low (_key+10)
  1589  001342  6ED9               	movwf	fsr2l,c
  1590  001344  6ADA               	clrf	fsr2h,c
  1591  001346  0100               	movlb	0	; () banked
  1592  001348  80DF               	bsf	indf2,0,c
  1593  00134A                     L1:
  1594                           
  1595                           ;ikb.c: 474: key[k].sm0++;
  1596  00134A  500C               	movf	ikey_scan@k,w,c
  1597  00134C  0D10               	mullw	16
  1598  00134E  50F3               	movf	prodl,w,c
  1599  001350  0F64               	addlw	low (_key+4)
  1600  001352  6ED9               	movwf	fsr2l,c
  1601  001354  6ADA               	clrf	fsr2h,c
  1602  001356  2ADF               	incf	indf2,f,c
  1603  001358  D062               	goto	l2520
  1604  00135A                     l2502:
  1605                           
  1606                           ;ikb.c: 478: else if (key[k].sm0 == 2)
  1607  00135A  500C               	movf	ikey_scan@k,w,c
  1608  00135C  0D10               	mullw	16
  1609  00135E  50F3               	movf	prodl,w,c
  1610  001360  0F64               	addlw	low (_key+4)
  1611  001362  6ED9               	movwf	fsr2l,c
  1612  001364  6ADA               	clrf	fsr2h,c
  1613  001366  0E02               	movlw	2
  1614  001368  18DE               	xorwf	postinc2,w,c
  1615  00136A  A4D8               	btfss	status,2,c
  1616  00136C  D016               	goto	l2508
  1617                           
  1618                           ;ikb.c: 479: {;ikb.c: 480: if (key[k].keyRead() == 1)
  1619  00136E  500C               	movf	ikey_scan@k,w,c
  1620  001370  0D10               	mullw	16
  1621  001372  50F3               	movf	prodl,w,c
  1622  001374  0F60               	addlw	low _key
  1623  001376  6ED9               	movwf	fsr2l,c
  1624  001378  6ADA               	clrf	fsr2h,c
  1625  00137A  D801               	call	u2298
  1626  00137C  D00A               	goto	u2299
  1627  00137E                     u2298:
  1628  00137E  0005               	push	
  1629  001380  6EFA               	movwf	pclath,c
  1630  001382  50DE               	movf	postinc2,w,c
  1631  001384  6EFD               	movwf	tosl,c
  1632  001386  50DE               	movf	postinc2,w,c
  1633  001388  6EFE               	movwf	tosh,c
  1634  00138A  50F8               	movf	tblptru,w,c
  1635  00138C  6EFF               	movwf	tosu,c
  1636  00138E  50FA               	movf	pclath,w,c
  1637  001390  0012               	return		;indir
  1638  001392                     u2299:
  1639  001392  06E8               	decf	wreg,f,c
  1640  001394  B4D8               	btfsc	status,2,c
  1641  001396  D7D9               	goto	L1
  1642  001398  D042               	goto	l2520
  1643  00139A                     l2508:
  1644                           
  1645                           ;ikb.c: 483: else if (key[k].sm0 == 3)
  1646  00139A  500C               	movf	ikey_scan@k,w,c
  1647  00139C  0D10               	mullw	16
  1648  00139E  50F3               	movf	prodl,w,c
  1649  0013A0  0F64               	addlw	low (_key+4)
  1650  0013A2  6ED9               	movwf	fsr2l,c
  1651  0013A4  6ADA               	clrf	fsr2h,c
  1652  0013A6  0E03               	movlw	3
  1653  0013A8  18DE               	xorwf	postinc2,w,c
  1654  0013AA  A4D8               	btfss	status,2,c
  1655  0013AC  D038               	goto	l2520
  1656                           
  1657                           ;ikb.c: 484: {;ikb.c: 485: if (++key[k].counter0 == 4)
  1658  0013AE  500C               	movf	ikey_scan@k,w,c
  1659  0013B0  0D10               	mullw	16
  1660  0013B2  50F3               	movf	prodl,w,c
  1661  0013B4  0F65               	addlw	low (_key+5)
  1662  0013B6  6ED9               	movwf	fsr2l,c
  1663  0013B8  6ADA               	clrf	fsr2h,c
  1664  0013BA  2ADF               	incf	indf2,f,c
  1665  0013BC  0E04               	movlw	4
  1666  0013BE  18DE               	xorwf	postinc2,w,c
  1667  0013C0  A4D8               	btfss	status,2,c
  1668  0013C2  D02D               	goto	l2520
  1669                           
  1670                           ;ikb.c: 486: {;ikb.c: 487: key[k].counter0 = 0x00;
  1671  0013C4  500C               	movf	ikey_scan@k,w,c
  1672  0013C6  0D10               	mullw	16
  1673  0013C8  50F3               	movf	prodl,w,c
  1674  0013CA  0F65               	addlw	low (_key+5)
  1675  0013CC  6ED9               	movwf	fsr2l,c
  1676  0013CE  6ADA               	clrf	fsr2h,c
  1677  0013D0  0E00               	movlw	0
  1678  0013D2  6EDF               	movwf	indf2,c
  1679                           
  1680                           ;ikb.c: 489: if (key[k].keyRead() != 1)
  1681  0013D4  500C               	movf	ikey_scan@k,w,c
  1682  0013D6  0D10               	mullw	16
  1683  0013D8  50F3               	movf	prodl,w,c
  1684  0013DA  0F60               	addlw	low _key
  1685  0013DC  6ED9               	movwf	fsr2l,c
  1686  0013DE  6ADA               	clrf	fsr2h,c
  1687  0013E0  D801               	call	u2338
  1688  0013E2  D00A               	goto	u2339
  1689  0013E4                     u2338:
  1690  0013E4  0005               	push	
  1691  0013E6  6EFA               	movwf	pclath,c
  1692  0013E8  50DE               	movf	postinc2,w,c
  1693  0013EA  6EFD               	movwf	tosl,c
  1694  0013EC  50DE               	movf	postinc2,w,c
  1695  0013EE  6EFE               	movwf	tosh,c
  1696  0013F0  50F8               	movf	tblptru,w,c
  1697  0013F2  6EFF               	movwf	tosu,c
  1698  0013F4  50FA               	movf	pclath,w,c
  1699  0013F6  0012               	return		;indir
  1700  0013F8                     u2339:
  1701  0013F8  06E8               	decf	wreg,f,c
  1702  0013FA  A4D8               	btfss	status,2,c
  1703  0013FC  D796               	goto	u2270
  1704                           
  1705                           ;ikb.c: 493: else;ikb.c: 494: {;ikb.c: 495: key[k].bf.state = 0;
  1706  0013FE  500C               	movf	ikey_scan@k,w,c
  1707  001400  0D10               	mullw	16
  1708  001402  50F3               	movf	prodl,w,c
  1709  001404  0F6A               	addlw	low (_key+10)
  1710  001406  6ED9               	movwf	fsr2l,c
  1711  001408  6ADA               	clrf	fsr2h,c
  1712  00140A  0100               	movlb	0	; () banked
  1713  00140C  90DF               	bcf	indf2,0,c
  1714                           
  1715                           ;ikb.c: 496: key[k].sm0 = 0x00;
  1716  00140E  500C               	movf	ikey_scan@k,w,c
  1717  001410  0D10               	mullw	16
  1718  001412  50F3               	movf	prodl,w,c
  1719  001414  0F64               	addlw	low (_key+4)
  1720  001416  6ED9               	movwf	fsr2l,c
  1721  001418  6ADA               	clrf	fsr2h,c
  1722  00141A  0E00               	movlw	0
  1723  00141C  6EDF               	movwf	indf2,c
  1724  00141E                     l2520:
  1725                           
  1726                           ;ikb.c: 497: };ikb.c: 498: };ikb.c: 499: };ikb.c: 500: }while (--k >= 0);
  1727  00141E  060C               	decf	ikey_scan@k,f,c
  1728  001420  BE0C               	btfsc	ikey_scan@k,7,c
  1729  001422  0012               	return	
  1730  001424  D732               	goto	l2484
  1731  001426                     __end_of_ikey_scan:
  1732                           	opt callstack 0
  1733                           
  1734 ;; *************** function _keyRead_pin_key4 *****************
  1735 ;; Defined at:
  1736 ;;		line 206 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      unsigned char 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1753 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1754 ;;Total ram usage:        0 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    5
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_ikb_init
  1761 ;;		_ikey_scan
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text9
  1766  001FE0                     __ptext9:
  1767                           	opt callstack 0
  1768  001FE0                     _keyRead_pin_key4:
  1769                           	opt callstack 23
  1770                           
  1771                           ;ikb.c: 208: return ((PORTC & (1<<7))>>7);
  1772                           
  1773                           ;incstack = 0
  1774  001FE0  4482               	rlncf	3970,w,c	;volatile
  1775  001FE2  0B01               	andlw	1
  1776  001FE4  0012               	return		;funcret
  1777  001FE6                     __end_of_keyRead_pin_key4:
  1778                           	opt callstack 0
  1779                           
  1780 ;; *************** function _keyRead_pin_key3 *****************
  1781 ;; Defined at:
  1782 ;;		line 202 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      unsigned char 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         0       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    5
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_ikb_init
  1807 ;;		_ikey_scan
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text10
  1812  001FB2                     __ptext10:
  1813                           	opt callstack 0
  1814  001FB2                     _keyRead_pin_key3:
  1815                           	opt callstack 23
  1816                           
  1817                           ;ikb.c: 204: return ((PORTC & (1<<6))>>6);
  1818                           
  1819                           ;incstack = 0
  1820  001FB2  4482               	rlncf	3970,w,c	;volatile
  1821  001FB4  46E8               	rlncf	wreg,f,c
  1822  001FB6  0B03               	andlw	3
  1823  001FB8  0B01               	andlw	1
  1824  001FBA  0012               	return		;funcret
  1825  001FBC                     __end_of_keyRead_pin_key3:
  1826                           	opt callstack 0
  1827                           
  1828 ;; *************** function _keyRead_pin_key2 *****************
  1829 ;; Defined at:
  1830 ;;		line 198 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      unsigned char 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    5
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_ikb_init
  1855 ;;		_ikey_scan
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text11
  1860  001FBC                     __ptext11:
  1861                           	opt callstack 0
  1862  001FBC                     _keyRead_pin_key2:
  1863                           	opt callstack 23
  1864                           
  1865                           ;ikb.c: 200: return ((PORTC & (1<<5))>>5);
  1866                           
  1867                           ;incstack = 0
  1868  001FBC  3882               	swapf	3970,w,c	;volatile
  1869  001FBE  42E8               	rrncf	wreg,f,c
  1870  001FC0  0B07               	andlw	7
  1871  001FC2  0B01               	andlw	1
  1872  001FC4  0012               	return		;funcret
  1873  001FC6                     __end_of_keyRead_pin_key2:
  1874                           	opt callstack 0
  1875                           
  1876 ;; *************** function _keyRead_pin_key1 *****************
  1877 ;; Defined at:
  1878 ;;		line 194 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      unsigned char 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1892 ;;      Params:         0       0       0       0       0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    5
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_ikb_init
  1903 ;;		_ikey_scan
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text12
  1908  001FD0                     __ptext12:
  1909                           	opt callstack 0
  1910  001FD0                     _keyRead_pin_key1:
  1911                           	opt callstack 23
  1912                           
  1913                           ;ikb.c: 196: return ((PORTC & (1<<4))>>4);
  1914                           
  1915                           ;incstack = 0
  1916  001FD0  3882               	swapf	3970,w,c	;volatile
  1917  001FD2  0B0F               	andlw	15
  1918  001FD4  0B01               	andlw	1
  1919  001FD6  0012               	return		;funcret
  1920  001FD8                     __end_of_keyRead_pin_key1:
  1921                           	opt callstack 0
  1922                           
  1923 ;; *************** function _keyRead_pin_key5 *****************
  1924 ;; Defined at:
  1925 ;;		line 210 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      unsigned char 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1939 ;;      Params:         0       0       0       0       0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    5
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_ikb_init
  1950 ;;		_ikey_scan
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text13
  1955  001FD8                     __ptext13:
  1956                           	opt callstack 0
  1957  001FD8                     _keyRead_pin_key5:
  1958                           	opt callstack 23
  1959                           
  1960                           ;ikb.c: 212: return ((PORTD & (1<<4))>>4);
  1961                           
  1962                           ;incstack = 0
  1963  001FD8  3883               	swapf	3971,w,c	;volatile
  1964  001FDA  0B0F               	andlw	15
  1965  001FDC  0B01               	andlw	1
  1966  001FDE  0012               	return		;funcret
  1967  001FE0                     __end_of_keyRead_pin_key5:
  1968                           	opt callstack 0
  1969                           
  1970 ;; *************** function _ikey_parsing *****************
  1971 ;; Defined at:
  1972 ;;		line 545 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  k               1   34[COMRAM] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0
  1987 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1988 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1989 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1990 ;;Total ram usage:        5 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    7
  1993 ;; This function calls:
  1994 ;;		___ftge
  1995 ;;		___lwtoft
  1996 ;;		_ikey_is_accessible
  1997 ;; This function is called by:
  1998 ;;		_ikb_job
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text14
  2003  00080E                     __ptext14:
  2004                           	opt callstack 0
  2005  00080E                     _ikey_parsing:
  2006                           	opt callstack 22
  2007                           
  2008                           ;ikb.c: 547: uint8_t k;;ikb.c: 549: for (k=0; k < 5; k++)
  2009                           
  2010                           ;incstack = 0
  2011  00080E  0E00               	movlw	0
  2012  000810  6E23               	movwf	ikey_parsing@k,c
  2013  000812                     l3354:
  2014                           
  2015                           ;ikb.c: 550: {;ikb.c: 551: if ( key[k].sm1 == (0) )
  2016  000812  5023               	movf	ikey_parsing@k,w,c
  2017  000814  0D10               	mullw	16
  2018  000816  50F3               	movf	prodl,w,c
  2019  000818  0F66               	addlw	low (_key+6)
  2020  00081A  6ED9               	movwf	fsr2l,c
  2021  00081C  6ADA               	clrf	fsr2h,c
  2022  00081E  50DF               	movf	indf2,w,c
  2023  000820  A4D8               	btfss	status,2,c
  2024  000822  D08B               	goto	l238
  2025                           
  2026                           ;ikb.c: 552: {;ikb.c: 553: if ( ikey_is_accessible(k) )
  2027  000824  5023               	movf	ikey_parsing@k,w,c
  2028  000826  ECF0  F00D         	call	_ikey_is_accessible
  2029  00082A  0900               	iorlw	0
  2030  00082C  B4D8               	btfsc	status,2,c
  2031  00082E  D085               	goto	l238
  2032                           
  2033                           ;ikb.c: 554: {;ikb.c: 555: if (key[k].bf.state == 1)
  2034  000830  5023               	movf	ikey_parsing@k,w,c
  2035  000832  0D10               	mullw	16
  2036  000834  50F3               	movf	prodl,w,c
  2037  000836  0F6A               	addlw	low (_key+10)
  2038  000838  6ED9               	movwf	fsr2l,c
  2039  00083A  6ADA               	clrf	fsr2h,c
  2040  00083C  0100               	movlb	0	; () banked
  2041  00083E  A0DF               	btfss	indf2,0,c
  2042  000840  D07C               	goto	l238
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;ikb.c: 556: {;ikb.c: 558: if (key[k].bf.OnKeyPressed)
  2046  000842  5023               	movf	ikey_parsing@k,w,c
  2047  000844  0D10               	mullw	16
  2048  000846  50F3               	movf	prodl,w,c
  2049  000848  0F6A               	addlw	low (_key+10)
  2050  00084A  6ED9               	movwf	fsr2l,c
  2051  00084C  6ADA               	clrf	fsr2h,c
  2052  00084E  A2DF               	btfss	indf2,1,c
  2053  000850  D01F               	goto	l3368
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;ikb.c: 559: {;ikb.c: 560: key[k].bf.ReadyToRead = 1;
  2057  000852  5023               	movf	ikey_parsing@k,w,c
  2058  000854  0D10               	mullw	16
  2059  000856  50F3               	movf	prodl,w,c
  2060  000858  0F6A               	addlw	low (_key+10)
  2061  00085A  6ED9               	movwf	fsr2l,c
  2062  00085C  6ADA               	clrf	fsr2h,c
  2063  00085E  8CDF               	bsf	indf2,6,c
  2064                           
  2065                           ;ikb.c: 562: if (key[k].bf.Reptt)
  2066  000860  5023               	movf	ikey_parsing@k,w,c
  2067  000862  0D10               	mullw	16
  2068  000864  50F3               	movf	prodl,w,c
  2069  000866  0F6A               	addlw	low (_key+10)
  2070  000868  6ED9               	movwf	fsr2l,c
  2071  00086A  6ADA               	clrf	fsr2h,c
  2072  00086C  AADF               	btfss	indf2,5,c
  2073  00086E  D008               	goto	l3366
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;ikb.c: 563: {;ikb.c: 564: key[k].sm1 = (6);
  2077  000870  5023               	movf	ikey_parsing@k,w,c
  2078  000872  0D10               	mullw	16
  2079  000874  50F3               	movf	prodl,w,c
  2080  000876  0F66               	addlw	low (_key+6)
  2081  000878  6ED9               	movwf	fsr2l,c
  2082  00087A  6ADA               	clrf	fsr2h,c
  2083  00087C  0E06               	movlw	6
  2084  00087E  D037               	goto	L2
  2085  000880                     l3366:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;ikb.c: 566: else;ikb.c: 567: {;ikb.c: 568: key[k].sm1 = (1);
  2089  000880  5023               	movf	ikey_parsing@k,w,c
  2090  000882  0D10               	mullw	16
  2091  000884  50F3               	movf	prodl,w,c
  2092  000886  0F66               	addlw	low (_key+6)
  2093  000888  6ED9               	movwf	fsr2l,c
  2094  00088A  6ADA               	clrf	fsr2h,c
  2095  00088C  0E01               	movlw	1
  2096  00088E  D02F               	goto	L2
  2097  000890                     l3368:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;ikb.c: 571: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2101  000890  5023               	movf	ikey_parsing@k,w,c
  2102  000892  0D10               	mullw	16
  2103  000894  50F3               	movf	prodl,w,c
  2104  000896  0F6A               	addlw	low (_key+10)
  2105  000898  6ED9               	movwf	fsr2l,c
  2106  00089A  6ADA               	clrf	fsr2h,c
  2107  00089C  A4DF               	btfss	indf2,2,c
  2108  00089E  D008               	goto	l3372
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;ikb.c: 572: {;ikb.c: 573: key[k].sm1 = (5);
  2112  0008A0  5023               	movf	ikey_parsing@k,w,c
  2113  0008A2  0D10               	mullw	16
  2114  0008A4  50F3               	movf	prodl,w,c
  2115  0008A6  0F66               	addlw	low (_key+6)
  2116  0008A8  6ED9               	movwf	fsr2l,c
  2117  0008AA  6ADA               	clrf	fsr2h,c
  2118  0008AC  0E05               	movlw	5
  2119  0008AE  D01F               	goto	L2
  2120  0008B0                     l3372:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;ikb.c: 576: else if (key[k].bf.AtTimeExpired)
  2124  0008B0  5023               	movf	ikey_parsing@k,w,c
  2125  0008B2  0D10               	mullw	16
  2126  0008B4  50F3               	movf	prodl,w,c
  2127  0008B6  0F6A               	addlw	low (_key+10)
  2128  0008B8  6ED9               	movwf	fsr2l,c
  2129  0008BA  6ADA               	clrf	fsr2h,c
  2130  0008BC  A6DF               	btfss	indf2,3,c
  2131  0008BE  D008               	goto	l3376
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;ikb.c: 577: {;ikb.c: 578: key[k].sm1 = (3);
  2135  0008C0  5023               	movf	ikey_parsing@k,w,c
  2136  0008C2  0D10               	mullw	16
  2137  0008C4  50F3               	movf	prodl,w,c
  2138  0008C6  0F66               	addlw	low (_key+6)
  2139  0008C8  6ED9               	movwf	fsr2l,c
  2140  0008CA  6ADA               	clrf	fsr2h,c
  2141  0008CC  0E03               	movlw	3
  2142  0008CE  D00F               	goto	L2
  2143  0008D0                     l3376:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;ikb.c: 580: else if (key[k].bf.AtTimeExpired2)
  2147  0008D0  5023               	movf	ikey_parsing@k,w,c
  2148  0008D2  0D10               	mullw	16
  2149  0008D4  50F3               	movf	prodl,w,c
  2150  0008D6  0F6A               	addlw	low (_key+10)
  2151  0008D8  6ED9               	movwf	fsr2l,c
  2152  0008DA  6ADA               	clrf	fsr2h,c
  2153  0008DC  A8DF               	btfss	indf2,4,c
  2154  0008DE  D008               	goto	l244
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;ikb.c: 581: {;ikb.c: 582: key[k].sm1 = (4);
  2158  0008E0  5023               	movf	ikey_parsing@k,w,c
  2159  0008E2  0D10               	mullw	16
  2160  0008E4  50F3               	movf	prodl,w,c
  2161  0008E6  0F66               	addlw	low (_key+6)
  2162  0008E8  6ED9               	movwf	fsr2l,c
  2163  0008EA  6ADA               	clrf	fsr2h,c
  2164  0008EC  0E04               	movlw	4
  2165  0008EE                     L2:
  2166  0008EE  6EDF               	movwf	indf2,c
  2167  0008F0                     l244:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;ikb.c: 583: };ikb.c: 586: key[k].bf.InProcessing = 1;
  2171  0008F0  5023               	movf	ikey_parsing@k,w,c
  2172  0008F2  0D10               	mullw	16
  2173  0008F4  50F3               	movf	prodl,w,c
  2174  0008F6  0F6B               	addlw	low (_key+11)
  2175  0008F8  6ED9               	movwf	fsr2l,c
  2176  0008FA  6ADA               	clrf	fsr2h,c
  2177  0008FC  82DF               	bsf	indf2,1,c
  2178                           
  2179                           ;ikb.c: 591: if (key[k].num_group_x != 0)
  2180  0008FE  5023               	movf	ikey_parsing@k,w,c
  2181  000900  0D10               	mullw	16
  2182  000902  50F3               	movf	prodl,w,c
  2183  000904  0F69               	addlw	low (_key+9)
  2184  000906  6ED9               	movwf	fsr2l,c
  2185  000908  6ADA               	clrf	fsr2h,c
  2186  00090A  50DF               	movf	indf2,w,c
  2187  00090C  B4D8               	btfsc	status,2,c
  2188  00090E  D015               	goto	l238
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;ikb.c: 592: {;ikb.c: 593: group_x[ key[k].num_group_x ] = 1;
  2192  000910  5023               	movf	ikey_parsing@k,w,c
  2193  000912  0D10               	mullw	16
  2194  000914  50F3               	movf	prodl,w,c
  2195  000916  0F69               	addlw	low (_key+9)
  2196  000918  6ED9               	movwf	fsr2l,c
  2197  00091A  6ADA               	clrf	fsr2h,c
  2198  00091C  50DF               	movf	indf2,w,c
  2199  00091E  6E1F               	movwf	??_ikey_parsing& (0+255),c
  2200  000920  501F               	movf	??_ikey_parsing,w,c
  2201  000922  0FB0               	addlw	low _group_x
  2202  000924  6ED9               	movwf	fsr2l,c
  2203  000926  6ADA               	clrf	fsr2h,c
  2204  000928  0E01               	movlw	1
  2205  00092A  6EDF               	movwf	indf2,c
  2206                           
  2207                           ;ikb.c: 594: key[k].bf.OwnerOfGroup = 1;
  2208  00092C  5023               	movf	ikey_parsing@k,w,c
  2209  00092E  0D10               	mullw	16
  2210  000930  50F3               	movf	prodl,w,c
  2211  000932  0F6B               	addlw	low (_key+11)
  2212  000934  6ED9               	movwf	fsr2l,c
  2213  000936  6ADA               	clrf	fsr2h,c
  2214  000938  80DF               	bsf	indf2,0,c
  2215  00093A                     l238:
  2216                           
  2217                           ;ikb.c: 595: };ikb.c: 597: };ikb.c: 598: };ikb.c: 599: };ikb.c: 603: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2218  00093A  5023               	movf	ikey_parsing@k,w,c
  2219  00093C  0D10               	mullw	16
  2220  00093E  50F3               	movf	prodl,w,c
  2221  000940  0F66               	addlw	low (_key+6)
  2222  000942  6ED9               	movwf	fsr2l,c
  2223  000944  6ADA               	clrf	fsr2h,c
  2224  000946  0E05               	movlw	5
  2225  000948  64DF               	cpfsgt	indf2,c
  2226  00094A  D024               	goto	l251
  2227  00094C  5023               	movf	ikey_parsing@k,w,c
  2228  00094E  0D10               	mullw	16
  2229  000950  50F3               	movf	prodl,w,c
  2230  000952  0F66               	addlw	low (_key+6)
  2231  000954  6ED9               	movwf	fsr2l,c
  2232  000956  6ADA               	clrf	fsr2h,c
  2233  000958  0E09               	movlw	9
  2234  00095A  60DF               	cpfslt	indf2,c
  2235  00095C  D01B               	goto	l251
  2236                           
  2237                           ;ikb.c: 604: {;ikb.c: 605: if (key[k].bf.state == 0)
  2238  00095E  5023               	movf	ikey_parsing@k,w,c
  2239  000960  0D10               	mullw	16
  2240  000962  50F3               	movf	prodl,w,c
  2241  000964  0F6A               	addlw	low (_key+10)
  2242  000966  6ED9               	movwf	fsr2l,c
  2243  000968  6ADA               	clrf	fsr2h,c
  2244  00096A  0100               	movlb	0	; () banked
  2245  00096C  B0DF               	btfsc	indf2,0,c
  2246  00096E  D012               	goto	l251
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;ikb.c: 606: {;ikb.c: 607: key[k].counter1 = 0;
  2250  000970  5023               	movf	ikey_parsing@k,w,c
  2251  000972  0D10               	mullw	16
  2252  000974  50F3               	movf	prodl,w,c
  2253  000976  0F67               	addlw	low (_key+7)
  2254  000978  6ED9               	movwf	fsr2l,c
  2255  00097A  6ADA               	clrf	fsr2h,c
  2256  00097C  0E00               	movlw	0
  2257  00097E  6EDE               	movwf	postinc2,c
  2258  000980  0E00               	movlw	0
  2259  000982  6EDD               	movwf	postdec2,c
  2260                           
  2261                           ;ikb.c: 608: key[k].sm1 = (2);
  2262  000984  5023               	movf	ikey_parsing@k,w,c
  2263  000986  0D10               	mullw	16
  2264  000988  50F3               	movf	prodl,w,c
  2265  00098A  0F66               	addlw	low (_key+6)
  2266  00098C  6ED9               	movwf	fsr2l,c
  2267  00098E  6ADA               	clrf	fsr2h,c
  2268  000990  0E02               	movlw	2
  2269  000992  6EDF               	movwf	indf2,c
  2270  000994                     l251:
  2271                           
  2272                           ;ikb.c: 609: };ikb.c: 610: };ikb.c: 612: if (key[k].sm1 == (6) )
  2273  000994  5023               	movf	ikey_parsing@k,w,c
  2274  000996  0D10               	mullw	16
  2275  000998  50F3               	movf	prodl,w,c
  2276  00099A  0F66               	addlw	low (_key+6)
  2277  00099C  6ED9               	movwf	fsr2l,c
  2278  00099E  6ADA               	clrf	fsr2h,c
  2279  0009A0  0E06               	movlw	6
  2280  0009A2  18DE               	xorwf	postinc2,w,c
  2281  0009A4  A4D8               	btfss	status,2,c
  2282  0009A6  D027               	goto	l253
  2283                           
  2284                           ;ikb.c: 613: {;ikb.c: 614: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2285  0009A8  5023               	movf	ikey_parsing@k,w,c
  2286  0009AA  0D10               	mullw	16
  2287  0009AC  50F3               	movf	prodl,w,c
  2288  0009AE  0F6C               	addlw	low (_key+12)
  2289  0009B0  6ED9               	movwf	fsr2l,c
  2290  0009B2  6ADA               	clrf	fsr2h,c
  2291  0009B4  5023               	movf	ikey_parsing@k,w,c
  2292  0009B6  0D10               	mullw	16
  2293  0009B8  50F3               	movf	prodl,w,c
  2294  0009BA  0F67               	addlw	low (_key+7)
  2295  0009BC  6EE1               	movwf	fsr1l,c
  2296  0009BE  6AE2               	clrf	fsr1h,c
  2297  0009C0  2AE6               	incf	postinc1,f,c
  2298  0009C2  0E00               	movlw	0
  2299  0009C4  22E5               	addwfc	postdec1,f,c
  2300  0009C6  50DE               	movf	postinc2,w,c
  2301  0009C8  5CE6               	subwf	postinc1,w,c
  2302  0009CA  50DE               	movf	postinc2,w,c
  2303  0009CC  58E6               	subwfb	postinc1,w,c
  2304  0009CE  A0D8               	btfss	status,0,c
  2305  0009D0  D012               	goto	l253
  2306                           
  2307                           ;ikb.c: 615: {;ikb.c: 616: key[k].counter1 =0;
  2308  0009D2  5023               	movf	ikey_parsing@k,w,c
  2309  0009D4  0D10               	mullw	16
  2310  0009D6  50F3               	movf	prodl,w,c
  2311  0009D8  0F67               	addlw	low (_key+7)
  2312  0009DA  6ED9               	movwf	fsr2l,c
  2313  0009DC  6ADA               	clrf	fsr2h,c
  2314  0009DE  0E00               	movlw	0
  2315  0009E0  6EDE               	movwf	postinc2,c
  2316  0009E2  0E00               	movlw	0
  2317  0009E4  6EDD               	movwf	postdec2,c
  2318                           
  2319                           ;ikb.c: 617: key[k].sm1 = (7);
  2320  0009E6  5023               	movf	ikey_parsing@k,w,c
  2321  0009E8  0D10               	mullw	16
  2322  0009EA  50F3               	movf	prodl,w,c
  2323  0009EC  0F66               	addlw	low (_key+6)
  2324  0009EE  6ED9               	movwf	fsr2l,c
  2325  0009F0  6ADA               	clrf	fsr2h,c
  2326  0009F2  0E07               	movlw	7
  2327  0009F4  6EDF               	movwf	indf2,c
  2328  0009F6                     l253:
  2329                           
  2330                           ;ikb.c: 618: };ikb.c: 619: };ikb.c: 620: if (key[k].sm1 == (7))
  2331  0009F6  5023               	movf	ikey_parsing@k,w,c
  2332  0009F8  0D10               	mullw	16
  2333  0009FA  50F3               	movf	prodl,w,c
  2334  0009FC  0F66               	addlw	low (_key+6)
  2335  0009FE  6ED9               	movwf	fsr2l,c
  2336  000A00  6ADA               	clrf	fsr2h,c
  2337  000A02  0E07               	movlw	7
  2338  000A04  18DE               	xorwf	postinc2,w,c
  2339  000A06  A4D8               	btfss	status,2,c
  2340  000A08  D018               	goto	l255
  2341                           
  2342                           ;ikb.c: 621: {;ikb.c: 622: if (key[k].bf.ReadyToRead == 0)
  2343  000A0A  5023               	movf	ikey_parsing@k,w,c
  2344  000A0C  0D10               	mullw	16
  2345  000A0E  50F3               	movf	prodl,w,c
  2346  000A10  0F6A               	addlw	low (_key+10)
  2347  000A12  6ED9               	movwf	fsr2l,c
  2348  000A14  6ADA               	clrf	fsr2h,c
  2349  000A16  0100               	movlb	0	; () banked
  2350  000A18  BCDF               	btfsc	indf2,6,c
  2351  000A1A  D00F               	goto	l255
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;ikb.c: 623: {;ikb.c: 624: key[k].bf.ReadyToRead = 1;
  2355  000A1C  5023               	movf	ikey_parsing@k,w,c
  2356  000A1E  0D10               	mullw	16
  2357  000A20  50F3               	movf	prodl,w,c
  2358  000A22  0F6A               	addlw	low (_key+10)
  2359  000A24  6ED9               	movwf	fsr2l,c
  2360  000A26  6ADA               	clrf	fsr2h,c
  2361  000A28  8CDF               	bsf	indf2,6,c
  2362                           
  2363                           ;ikb.c: 625: key[k].sm1 = (8);
  2364  000A2A  5023               	movf	ikey_parsing@k,w,c
  2365  000A2C  0D10               	mullw	16
  2366  000A2E  50F3               	movf	prodl,w,c
  2367  000A30  0F66               	addlw	low (_key+6)
  2368  000A32  6ED9               	movwf	fsr2l,c
  2369  000A34  6ADA               	clrf	fsr2h,c
  2370  000A36  0E08               	movlw	8
  2371  000A38  6EDF               	movwf	indf2,c
  2372  000A3A                     l255:
  2373                           
  2374                           ;ikb.c: 626: };ikb.c: 627: };ikb.c: 628: if (key[k].sm1 == (8))
  2375  000A3A  5023               	movf	ikey_parsing@k,w,c
  2376  000A3C  0D10               	mullw	16
  2377  000A3E  50F3               	movf	prodl,w,c
  2378  000A40  0F66               	addlw	low (_key+6)
  2379  000A42  6ED9               	movwf	fsr2l,c
  2380  000A44  6ADA               	clrf	fsr2h,c
  2381  000A46  0E08               	movlw	8
  2382  000A48  18DE               	xorwf	postinc2,w,c
  2383  000A4A  A4D8               	btfss	status,2,c
  2384  000A4C  D027               	goto	l257
  2385                           
  2386                           ;ikb.c: 629: {;ikb.c: 630: if ( ++key[k].counter1 >= key[k].repp.after_start)
  2387  000A4E  5023               	movf	ikey_parsing@k,w,c
  2388  000A50  0D10               	mullw	16
  2389  000A52  50F3               	movf	prodl,w,c
  2390  000A54  0F6E               	addlw	low (_key+14)
  2391  000A56  6ED9               	movwf	fsr2l,c
  2392  000A58  6ADA               	clrf	fsr2h,c
  2393  000A5A  5023               	movf	ikey_parsing@k,w,c
  2394  000A5C  0D10               	mullw	16
  2395  000A5E  50F3               	movf	prodl,w,c
  2396  000A60  0F67               	addlw	low (_key+7)
  2397  000A62  6EE1               	movwf	fsr1l,c
  2398  000A64  6AE2               	clrf	fsr1h,c
  2399  000A66  2AE6               	incf	postinc1,f,c
  2400  000A68  0E00               	movlw	0
  2401  000A6A  22E5               	addwfc	postdec1,f,c
  2402  000A6C  50DE               	movf	postinc2,w,c
  2403  000A6E  5CE6               	subwf	postinc1,w,c
  2404  000A70  50DE               	movf	postinc2,w,c
  2405  000A72  58E6               	subwfb	postinc1,w,c
  2406  000A74  A0D8               	btfss	status,0,c
  2407  000A76  D012               	goto	l257
  2408                           
  2409                           ;ikb.c: 631: {;ikb.c: 632: key[k].counter1 = 0;
  2410  000A78  5023               	movf	ikey_parsing@k,w,c
  2411  000A7A  0D10               	mullw	16
  2412  000A7C  50F3               	movf	prodl,w,c
  2413  000A7E  0F67               	addlw	low (_key+7)
  2414  000A80  6ED9               	movwf	fsr2l,c
  2415  000A82  6ADA               	clrf	fsr2h,c
  2416  000A84  0E00               	movlw	0
  2417  000A86  6EDE               	movwf	postinc2,c
  2418  000A88  0E00               	movlw	0
  2419  000A8A  6EDD               	movwf	postdec2,c
  2420                           
  2421                           ;ikb.c: 633: key[k].sm1 = (7);
  2422  000A8C  5023               	movf	ikey_parsing@k,w,c
  2423  000A8E  0D10               	mullw	16
  2424  000A90  50F3               	movf	prodl,w,c
  2425  000A92  0F66               	addlw	low (_key+6)
  2426  000A94  6ED9               	movwf	fsr2l,c
  2427  000A96  6ADA               	clrf	fsr2h,c
  2428  000A98  0E07               	movlw	7
  2429  000A9A  6EDF               	movwf	indf2,c
  2430  000A9C                     l257:
  2431                           
  2432                           ;ikb.c: 634: };ikb.c: 635: };ikb.c: 637: if (key[k].sm1 == (5) )
  2433  000A9C  5023               	movf	ikey_parsing@k,w,c
  2434  000A9E  0D10               	mullw	16
  2435  000AA0  50F3               	movf	prodl,w,c
  2436  000AA2  0F66               	addlw	low (_key+6)
  2437  000AA4  6ED9               	movwf	fsr2l,c
  2438  000AA6  6ADA               	clrf	fsr2h,c
  2439  000AA8  0E05               	movlw	5
  2440  000AAA  18DE               	xorwf	postinc2,w,c
  2441  000AAC  A4D8               	btfss	status,2,c
  2442  000AAE  D018               	goto	l259
  2443                           
  2444                           ;ikb.c: 638: {;ikb.c: 639: if (key[k].bf.state == 0)
  2445  000AB0  5023               	movf	ikey_parsing@k,w,c
  2446  000AB2  0D10               	mullw	16
  2447  000AB4  50F3               	movf	prodl,w,c
  2448  000AB6  0F6A               	addlw	low (_key+10)
  2449  000AB8  6ED9               	movwf	fsr2l,c
  2450  000ABA  6ADA               	clrf	fsr2h,c
  2451  000ABC  0100               	movlb	0	; () banked
  2452  000ABE  B0DF               	btfsc	indf2,0,c
  2453  000AC0  D00F               	goto	l259
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;ikb.c: 640: {;ikb.c: 641: key[k].bf.ReadyToRead = 1;
  2457  000AC2  5023               	movf	ikey_parsing@k,w,c
  2458  000AC4  0D10               	mullw	16
  2459  000AC6  50F3               	movf	prodl,w,c
  2460  000AC8  0F6A               	addlw	low (_key+10)
  2461  000ACA  6ED9               	movwf	fsr2l,c
  2462  000ACC  6ADA               	clrf	fsr2h,c
  2463  000ACE  8CDF               	bsf	indf2,6,c
  2464                           
  2465                           ;ikb.c: 642: key[k].sm1 = (2);
  2466  000AD0  5023               	movf	ikey_parsing@k,w,c
  2467  000AD2  0D10               	mullw	16
  2468  000AD4  50F3               	movf	prodl,w,c
  2469  000AD6  0F66               	addlw	low (_key+6)
  2470  000AD8  6ED9               	movwf	fsr2l,c
  2471  000ADA  6ADA               	clrf	fsr2h,c
  2472  000ADC  0E02               	movlw	2
  2473  000ADE  6EDF               	movwf	indf2,c
  2474  000AE0                     l259:
  2475                           
  2476                           ;ikb.c: 643: };ikb.c: 644: };ikb.c: 646: if (key[k].sm1 == (3) )
  2477  000AE0  5023               	movf	ikey_parsing@k,w,c
  2478  000AE2  0D10               	mullw	16
  2479  000AE4  50F3               	movf	prodl,w,c
  2480  000AE6  0F66               	addlw	low (_key+6)
  2481  000AE8  6ED9               	movwf	fsr2l,c
  2482  000AEA  6ADA               	clrf	fsr2h,c
  2483  000AEC  0E03               	movlw	3
  2484  000AEE  18DE               	xorwf	postinc2,w,c
  2485  000AF0  A4D8               	btfss	status,2,c
  2486  000AF2  D09C               	goto	l261
  2487                           
  2488                           ;ikb.c: 647: {;ikb.c: 648: key[k].counter1++;
  2489  000AF4  5023               	movf	ikey_parsing@k,w,c
  2490  000AF6  0D10               	mullw	16
  2491  000AF8  50F3               	movf	prodl,w,c
  2492  000AFA  0F67               	addlw	low (_key+7)
  2493  000AFC  6ED9               	movwf	fsr2l,c
  2494  000AFE  6ADA               	clrf	fsr2h,c
  2495  000B00  2ADE               	incf	postinc2,f,c
  2496  000B02  0E00               	movlw	0
  2497  000B04  22DD               	addwfc	postdec2,f,c
  2498                           
  2499                           ;ikb.c: 650: if (key[k].bf.state == 0)
  2500  000B06  5023               	movf	ikey_parsing@k,w,c
  2501  000B08  0D10               	mullw	16
  2502  000B0A  50F3               	movf	prodl,w,c
  2503  000B0C  0F6A               	addlw	low (_key+10)
  2504  000B0E  6ED9               	movwf	fsr2l,c
  2505  000B10  6ADA               	clrf	fsr2h,c
  2506  000B12  0100               	movlb	0	; () banked
  2507  000B14  B0DF               	btfsc	indf2,0,c
  2508  000B16  D03D               	goto	l3410
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;ikb.c: 651: {;ikb.c: 652: if (key[k].counter1 <= (1000E-3/5E-3) )
  2512  000B18  0E00               	movlw	0
  2513  000B1A  6E16               	movwf	___ftge@ff1,c
  2514  000B1C  0E48               	movlw	72
  2515  000B1E  6E17               	movwf	___ftge@ff1+1,c
  2516  000B20  0E43               	movlw	67
  2517  000B22  6E18               	movwf	___ftge@ff1+2,c
  2518  000B24  5023               	movf	ikey_parsing@k,w,c
  2519  000B26  0D10               	mullw	16
  2520  000B28  50F3               	movf	prodl,w,c
  2521  000B2A  0F67               	addlw	low (_key+7)
  2522  000B2C  6ED9               	movwf	fsr2l,c
  2523  000B2E  6ADA               	clrf	fsr2h,c
  2524  000B30  CFDE F013          	movff	postinc2,___lwtoft@c
  2525  000B34  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2526  000B38  EC8E  F00F         	call	___lwtoft	;wreg free
  2527  000B3C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2528  000B40  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2529  000B44  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2530  000B48  EC01  F00D         	call	___ftge	;wreg free
  2531  000B4C  A0D8               	btfss	status,0,c
  2532  000B4E  D021               	goto	l3410
  2533                           
  2534                           ;ikb.c: 653: {;ikb.c: 654: key[k].counter1 = 0;
  2535  000B50  5023               	movf	ikey_parsing@k,w,c
  2536  000B52  0D10               	mullw	16
  2537  000B54  50F3               	movf	prodl,w,c
  2538  000B56  0F67               	addlw	low (_key+7)
  2539  000B58  6ED9               	movwf	fsr2l,c
  2540  000B5A  6ADA               	clrf	fsr2h,c
  2541  000B5C  0E00               	movlw	0
  2542  000B5E  6EDE               	movwf	postinc2,c
  2543  000B60  0E00               	movlw	0
  2544  000B62  6EDD               	movwf	postdec2,c
  2545                           
  2546                           ;ikb.c: 656: key[k].bf.ReadyToRead = 1;
  2547  000B64  5023               	movf	ikey_parsing@k,w,c
  2548  000B66  0D10               	mullw	16
  2549  000B68  50F3               	movf	prodl,w,c
  2550  000B6A  0F6A               	addlw	low (_key+10)
  2551  000B6C  6ED9               	movwf	fsr2l,c
  2552  000B6E  6ADA               	clrf	fsr2h,c
  2553  000B70  0100               	movlb	0	; () banked
  2554  000B72  8CDF               	bsf	indf2,6,c
  2555                           
  2556                           ;ikb.c: 657: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  2557  000B74  5023               	movf	ikey_parsing@k,w,c
  2558  000B76  0D10               	mullw	16
  2559  000B78  50F3               	movf	prodl,w,c
  2560  000B7A  0F6A               	addlw	low (_key+10)
  2561  000B7C  6ED9               	movwf	fsr2l,c
  2562  000B7E  6ADA               	clrf	fsr2h,c
  2563  000B80  9EDF               	bcf	indf2,7,c
  2564                           
  2565                           ;ikb.c: 659: key[k].sm1 = (2);
  2566  000B82  5023               	movf	ikey_parsing@k,w,c
  2567  000B84  0D10               	mullw	16
  2568  000B86  50F3               	movf	prodl,w,c
  2569  000B88  0F66               	addlw	low (_key+6)
  2570  000B8A  6ED9               	movwf	fsr2l,c
  2571  000B8C  6ADA               	clrf	fsr2h,c
  2572  000B8E  0E02               	movlw	2
  2573  000B90  6EDF               	movwf	indf2,c
  2574  000B92                     l3410:
  2575                           
  2576                           ;ikb.c: 660: };ikb.c: 661: };ikb.c: 663: if (key[k].counter1 > (1000E-3/5E-3) )
  2577  000B92  0E00               	movlw	0
  2578  000B94  6E16               	movwf	___ftge@ff1,c
  2579  000B96  0E48               	movlw	72
  2580  000B98  6E17               	movwf	___ftge@ff1+1,c
  2581  000B9A  0E43               	movlw	67
  2582  000B9C  6E18               	movwf	___ftge@ff1+2,c
  2583  000B9E  5023               	movf	ikey_parsing@k,w,c
  2584  000BA0  0D10               	mullw	16
  2585  000BA2  50F3               	movf	prodl,w,c
  2586  000BA4  0F67               	addlw	low (_key+7)
  2587  000BA6  6ED9               	movwf	fsr2l,c
  2588  000BA8  6ADA               	clrf	fsr2h,c
  2589  000BAA  CFDE F013          	movff	postinc2,___lwtoft@c
  2590  000BAE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2591  000BB2  EC8E  F00F         	call	___lwtoft	;wreg free
  2592  000BB6  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2593  000BBA  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2594  000BBE  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2595  000BC2  EC01  F00D         	call	___ftge	;wreg free
  2596  000BC6  B0D8               	btfsc	status,0,c
  2597  000BC8  D031               	goto	l261
  2598                           
  2599                           ;ikb.c: 664: {;ikb.c: 665: key[k].counter1 = 0x0000;
  2600  000BCA  5023               	movf	ikey_parsing@k,w,c
  2601  000BCC  0D10               	mullw	16
  2602  000BCE  50F3               	movf	prodl,w,c
  2603  000BD0  0F67               	addlw	low (_key+7)
  2604  000BD2  6ED9               	movwf	fsr2l,c
  2605  000BD4  6ADA               	clrf	fsr2h,c
  2606  000BD6  0E00               	movlw	0
  2607  000BD8  6EDE               	movwf	postinc2,c
  2608  000BDA  0E00               	movlw	0
  2609  000BDC  6EDD               	movwf	postdec2,c
  2610                           
  2611                           ;ikb.c: 667: key[k].bf.ReadyToRead = 1;
  2612  000BDE  5023               	movf	ikey_parsing@k,w,c
  2613  000BE0  0D10               	mullw	16
  2614  000BE2  50F3               	movf	prodl,w,c
  2615  000BE4  0F6A               	addlw	low (_key+10)
  2616  000BE6  6ED9               	movwf	fsr2l,c
  2617  000BE8  6ADA               	clrf	fsr2h,c
  2618  000BEA  0100               	movlb	0	; () banked
  2619  000BEC  8CDF               	bsf	indf2,6,c
  2620                           
  2621                           ;ikb.c: 668: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  2622  000BEE  5023               	movf	ikey_parsing@k,w,c
  2623  000BF0  0D10               	mullw	16
  2624  000BF2  50F3               	movf	prodl,w,c
  2625  000BF4  0F6A               	addlw	low (_key+10)
  2626  000BF6  6ED9               	movwf	fsr2l,c
  2627  000BF8  6ADA               	clrf	fsr2h,c
  2628  000BFA  8EDF               	bsf	indf2,7,c
  2629                           
  2630                           ;ikb.c: 670: if (!key[k].bf.Reptt)
  2631  000BFC  5023               	movf	ikey_parsing@k,w,c
  2632  000BFE  0D10               	mullw	16
  2633  000C00  50F3               	movf	prodl,w,c
  2634  000C02  0F6A               	addlw	low (_key+10)
  2635  000C04  6ED9               	movwf	fsr2l,c
  2636  000C06  6ADA               	clrf	fsr2h,c
  2637  000C08  BADF               	btfsc	indf2,5,c
  2638  000C0A  D008               	goto	l3416
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;ikb.c: 671: {;ikb.c: 672: key[k].sm1 = (1);
  2642  000C0C  5023               	movf	ikey_parsing@k,w,c
  2643  000C0E  0D10               	mullw	16
  2644  000C10  50F3               	movf	prodl,w,c
  2645  000C12  0F66               	addlw	low (_key+6)
  2646  000C14  6ED9               	movwf	fsr2l,c
  2647  000C16  6ADA               	clrf	fsr2h,c
  2648  000C18  0E01               	movlw	1
  2649  000C1A  D007               	goto	L3
  2650  000C1C                     l3416:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;ikb.c: 674: else;ikb.c: 675: {;ikb.c: 676: key[k].sm1 = (8);
  2654  000C1C  5023               	movf	ikey_parsing@k,w,c
  2655  000C1E  0D10               	mullw	16
  2656  000C20  50F3               	movf	prodl,w,c
  2657  000C22  0F66               	addlw	low (_key+6)
  2658  000C24  6ED9               	movwf	fsr2l,c
  2659  000C26  6ADA               	clrf	fsr2h,c
  2660  000C28  0E08               	movlw	8
  2661  000C2A                     L3:
  2662  000C2A  6EDF               	movwf	indf2,c
  2663  000C2C                     l261:
  2664                           
  2665                           ;ikb.c: 677: };ikb.c: 678: };ikb.c: 679: };ikb.c: 684: if (key[k].sm1 == (4))
  2666  000C2C  5023               	movf	ikey_parsing@k,w,c
  2667  000C2E  0D10               	mullw	16
  2668  000C30  50F3               	movf	prodl,w,c
  2669  000C32  0F66               	addlw	low (_key+6)
  2670  000C34  6ED9               	movwf	fsr2l,c
  2671  000C36  6ADA               	clrf	fsr2h,c
  2672  000C38  0E04               	movlw	4
  2673  000C3A  18DE               	xorwf	postinc2,w,c
  2674  000C3C  A4D8               	btfss	status,2,c
  2675  000C3E  D08C               	goto	l267
  2676                           
  2677                           ;ikb.c: 685: {;ikb.c: 686: key[k].counter1++;
  2678  000C40  5023               	movf	ikey_parsing@k,w,c
  2679  000C42  0D10               	mullw	16
  2680  000C44  50F3               	movf	prodl,w,c
  2681  000C46  0F67               	addlw	low (_key+7)
  2682  000C48  6ED9               	movwf	fsr2l,c
  2683  000C4A  6ADA               	clrf	fsr2h,c
  2684  000C4C  2ADE               	incf	postinc2,f,c
  2685  000C4E  0E00               	movlw	0
  2686  000C50  22DD               	addwfc	postdec2,f,c
  2687                           
  2688                           ;ikb.c: 688: if (key[k].bf.state == 0)
  2689  000C52  5023               	movf	ikey_parsing@k,w,c
  2690  000C54  0D10               	mullw	16
  2691  000C56  50F3               	movf	prodl,w,c
  2692  000C58  0F6A               	addlw	low (_key+10)
  2693  000C5A  6ED9               	movwf	fsr2l,c
  2694  000C5C  6ADA               	clrf	fsr2h,c
  2695  000C5E  0100               	movlb	0	; () banked
  2696  000C60  B0DF               	btfsc	indf2,0,c
  2697  000C62  D03D               	goto	l3424
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;ikb.c: 689: {;ikb.c: 690: if (key[k].counter1 <= (1000E-3/5E-3))
  2701  000C64  0E00               	movlw	0
  2702  000C66  6E16               	movwf	___ftge@ff1,c
  2703  000C68  0E48               	movlw	72
  2704  000C6A  6E17               	movwf	___ftge@ff1+1,c
  2705  000C6C  0E43               	movlw	67
  2706  000C6E  6E18               	movwf	___ftge@ff1+2,c
  2707  000C70  5023               	movf	ikey_parsing@k,w,c
  2708  000C72  0D10               	mullw	16
  2709  000C74  50F3               	movf	prodl,w,c
  2710  000C76  0F67               	addlw	low (_key+7)
  2711  000C78  6ED9               	movwf	fsr2l,c
  2712  000C7A  6ADA               	clrf	fsr2h,c
  2713  000C7C  CFDE F013          	movff	postinc2,___lwtoft@c
  2714  000C80  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2715  000C84  EC8E  F00F         	call	___lwtoft	;wreg free
  2716  000C88  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2717  000C8C  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2718  000C90  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2719  000C94  EC01  F00D         	call	___ftge	;wreg free
  2720  000C98  A0D8               	btfss	status,0,c
  2721  000C9A  D021               	goto	l3424
  2722                           
  2723                           ;ikb.c: 691: {;ikb.c: 692: key[k].counter1 = 0;
  2724  000C9C  5023               	movf	ikey_parsing@k,w,c
  2725  000C9E  0D10               	mullw	16
  2726  000CA0  50F3               	movf	prodl,w,c
  2727  000CA2  0F67               	addlw	low (_key+7)
  2728  000CA4  6ED9               	movwf	fsr2l,c
  2729  000CA6  6ADA               	clrf	fsr2h,c
  2730  000CA8  0E00               	movlw	0
  2731  000CAA  6EDE               	movwf	postinc2,c
  2732  000CAC  0E00               	movlw	0
  2733  000CAE  6EDD               	movwf	postdec2,c
  2734                           
  2735                           ;ikb.c: 694: key[k].bf.ReadyToRead = 1;
  2736  000CB0  5023               	movf	ikey_parsing@k,w,c
  2737  000CB2  0D10               	mullw	16
  2738  000CB4  50F3               	movf	prodl,w,c
  2739  000CB6  0F6A               	addlw	low (_key+10)
  2740  000CB8  6ED9               	movwf	fsr2l,c
  2741  000CBA  6ADA               	clrf	fsr2h,c
  2742  000CBC  0100               	movlb	0	; () banked
  2743  000CBE  8CDF               	bsf	indf2,6,c
  2744                           
  2745                           ;ikb.c: 695: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  2746  000CC0  5023               	movf	ikey_parsing@k,w,c
  2747  000CC2  0D10               	mullw	16
  2748  000CC4  50F3               	movf	prodl,w,c
  2749  000CC6  0F6A               	addlw	low (_key+10)
  2750  000CC8  6ED9               	movwf	fsr2l,c
  2751  000CCA  6ADA               	clrf	fsr2h,c
  2752  000CCC  9EDF               	bcf	indf2,7,c
  2753                           
  2754                           ;ikb.c: 697: key[k].sm1 = (2);
  2755  000CCE  5023               	movf	ikey_parsing@k,w,c
  2756  000CD0  0D10               	mullw	16
  2757  000CD2  50F3               	movf	prodl,w,c
  2758  000CD4  0F66               	addlw	low (_key+6)
  2759  000CD6  6ED9               	movwf	fsr2l,c
  2760  000CD8  6ADA               	clrf	fsr2h,c
  2761  000CDA  0E02               	movlw	2
  2762  000CDC  6EDF               	movwf	indf2,c
  2763  000CDE                     l3424:
  2764                           
  2765                           ;ikb.c: 698: };ikb.c: 699: };ikb.c: 702: if (key[k].counter1 >= (3000E-3/5E-3))
  2766  000CDE  5023               	movf	ikey_parsing@k,w,c
  2767  000CE0  0D10               	mullw	16
  2768  000CE2  50F3               	movf	prodl,w,c
  2769  000CE4  0F67               	addlw	low (_key+7)
  2770  000CE6  6ED9               	movwf	fsr2l,c
  2771  000CE8  6ADA               	clrf	fsr2h,c
  2772  000CEA  CFDE F013          	movff	postinc2,___lwtoft@c
  2773  000CEE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2774  000CF2  EC8E  F00F         	call	___lwtoft	;wreg free
  2775  000CF6  C013  F016         	movff	?___lwtoft,___ftge@ff1
  2776  000CFA  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  2777  000CFE  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  2778  000D02  0E00               	movlw	0
  2779  000D04  6E19               	movwf	___ftge@ff2,c
  2780  000D06  0E16               	movlw	22
  2781  000D08  6E1A               	movwf	___ftge@ff2+1,c
  2782  000D0A  0E44               	movlw	68
  2783  000D0C  6E1B               	movwf	___ftge@ff2+2,c
  2784  000D0E  EC01  F00D         	call	___ftge	;wreg free
  2785  000D12  A0D8               	btfss	status,0,c
  2786  000D14  D021               	goto	l267
  2787                           
  2788                           ;ikb.c: 703: {;ikb.c: 704: key[k].counter1 = 0x0000;
  2789  000D16  5023               	movf	ikey_parsing@k,w,c
  2790  000D18  0D10               	mullw	16
  2791  000D1A  50F3               	movf	prodl,w,c
  2792  000D1C  0F67               	addlw	low (_key+7)
  2793  000D1E  6ED9               	movwf	fsr2l,c
  2794  000D20  6ADA               	clrf	fsr2h,c
  2795  000D22  0E00               	movlw	0
  2796  000D24  6EDE               	movwf	postinc2,c
  2797  000D26  0E00               	movlw	0
  2798  000D28  6EDD               	movwf	postdec2,c
  2799                           
  2800                           ;ikb.c: 706: key[k].bf.ReadyToRead = 1;
  2801  000D2A  5023               	movf	ikey_parsing@k,w,c
  2802  000D2C  0D10               	mullw	16
  2803  000D2E  50F3               	movf	prodl,w,c
  2804  000D30  0F6A               	addlw	low (_key+10)
  2805  000D32  6ED9               	movwf	fsr2l,c
  2806  000D34  6ADA               	clrf	fsr2h,c
  2807  000D36  0100               	movlb	0	; () banked
  2808  000D38  8CDF               	bsf	indf2,6,c
  2809                           
  2810                           ;ikb.c: 707: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  2811  000D3A  5023               	movf	ikey_parsing@k,w,c
  2812  000D3C  0D10               	mullw	16
  2813  000D3E  50F3               	movf	prodl,w,c
  2814  000D40  0F6A               	addlw	low (_key+10)
  2815  000D42  6ED9               	movwf	fsr2l,c
  2816  000D44  6ADA               	clrf	fsr2h,c
  2817  000D46  8EDF               	bsf	indf2,7,c
  2818                           
  2819                           ;ikb.c: 710: key[k].sm1 = (1);
  2820  000D48  5023               	movf	ikey_parsing@k,w,c
  2821  000D4A  0D10               	mullw	16
  2822  000D4C  50F3               	movf	prodl,w,c
  2823  000D4E  0F66               	addlw	low (_key+6)
  2824  000D50  6ED9               	movwf	fsr2l,c
  2825  000D52  6ADA               	clrf	fsr2h,c
  2826  000D54  0E01               	movlw	1
  2827  000D56  6EDF               	movwf	indf2,c
  2828  000D58                     l267:
  2829                           
  2830                           ;ikb.c: 711: };ikb.c: 712: };ikb.c: 715: if (key[k].sm1 == (1))
  2831  000D58  5023               	movf	ikey_parsing@k,w,c
  2832  000D5A  0D10               	mullw	16
  2833  000D5C  50F3               	movf	prodl,w,c
  2834  000D5E  0F66               	addlw	low (_key+6)
  2835  000D60  6ED9               	movwf	fsr2l,c
  2836  000D62  6ADA               	clrf	fsr2h,c
  2837  000D64  04DE               	decf	postinc2,w,c
  2838  000D66  A4D8               	btfss	status,2,c
  2839  000D68  D011               	goto	l271
  2840                           
  2841                           ;ikb.c: 716: {;ikb.c: 717: if (key[k].bf.state == 0)
  2842  000D6A  5023               	movf	ikey_parsing@k,w,c
  2843  000D6C  0D10               	mullw	16
  2844  000D6E  50F3               	movf	prodl,w,c
  2845  000D70  0F6A               	addlw	low (_key+10)
  2846  000D72  6ED9               	movwf	fsr2l,c
  2847  000D74  6ADA               	clrf	fsr2h,c
  2848  000D76  0100               	movlb	0	; () banked
  2849  000D78  B0DF               	btfsc	indf2,0,c
  2850  000D7A  D008               	goto	l271
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;ikb.c: 718: {;ikb.c: 719: key[k].sm1 = (2);
  2854  000D7C  5023               	movf	ikey_parsing@k,w,c
  2855  000D7E  0D10               	mullw	16
  2856  000D80  50F3               	movf	prodl,w,c
  2857  000D82  0F66               	addlw	low (_key+6)
  2858  000D84  6ED9               	movwf	fsr2l,c
  2859  000D86  6ADA               	clrf	fsr2h,c
  2860  000D88  0E02               	movlw	2
  2861  000D8A  6EDF               	movwf	indf2,c
  2862  000D8C                     l271:
  2863                           
  2864                           ;ikb.c: 720: };ikb.c: 721: };ikb.c: 723: if (key[k].sm1 == (2))
  2865  000D8C  5023               	movf	ikey_parsing@k,w,c
  2866  000D8E  0D10               	mullw	16
  2867  000D90  50F3               	movf	prodl,w,c
  2868  000D92  0F66               	addlw	low (_key+6)
  2869  000D94  6ED9               	movwf	fsr2l,c
  2870  000D96  6ADA               	clrf	fsr2h,c
  2871  000D98  0E02               	movlw	2
  2872  000D9A  18DE               	xorwf	postinc2,w,c
  2873  000D9C  A4D8               	btfss	status,2,c
  2874  000D9E  D011               	goto	l273
  2875                           
  2876                           ;ikb.c: 724: {;ikb.c: 725: if (key[k].bf.ReadyToRead == 0)
  2877  000DA0  5023               	movf	ikey_parsing@k,w,c
  2878  000DA2  0D10               	mullw	16
  2879  000DA4  50F3               	movf	prodl,w,c
  2880  000DA6  0F6A               	addlw	low (_key+10)
  2881  000DA8  6ED9               	movwf	fsr2l,c
  2882  000DAA  6ADA               	clrf	fsr2h,c
  2883  000DAC  0100               	movlb	0	; () banked
  2884  000DAE  BCDF               	btfsc	indf2,6,c
  2885  000DB0  D008               	goto	l273
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;ikb.c: 726: {;ikb.c: 727: key[k].sm1 = (9);
  2889  000DB2  5023               	movf	ikey_parsing@k,w,c
  2890  000DB4  0D10               	mullw	16
  2891  000DB6  50F3               	movf	prodl,w,c
  2892  000DB8  0F66               	addlw	low (_key+6)
  2893  000DBA  6ED9               	movwf	fsr2l,c
  2894  000DBC  6ADA               	clrf	fsr2h,c
  2895  000DBE  0E09               	movlw	9
  2896  000DC0  6EDF               	movwf	indf2,c
  2897  000DC2                     l273:
  2898                           
  2899                           ;ikb.c: 728: };ikb.c: 729: };ikb.c: 731: if (key[k].sm1 == (9))
  2900  000DC2  5023               	movf	ikey_parsing@k,w,c
  2901  000DC4  0D10               	mullw	16
  2902  000DC6  50F3               	movf	prodl,w,c
  2903  000DC8  0F66               	addlw	low (_key+6)
  2904  000DCA  6ED9               	movwf	fsr2l,c
  2905  000DCC  6ADA               	clrf	fsr2h,c
  2906  000DCE  0E09               	movlw	9
  2907  000DD0  18DE               	xorwf	postinc2,w,c
  2908  000DD2  A4D8               	btfss	status,2,c
  2909  000DD4  D02F               	goto	l3440
  2910                           
  2911                           ;ikb.c: 732: {;ikb.c: 733: if (key[k].num_group_x > 0)
  2912  000DD6  5023               	movf	ikey_parsing@k,w,c
  2913  000DD8  0D10               	mullw	16
  2914  000DDA  50F3               	movf	prodl,w,c
  2915  000DDC  0F69               	addlw	low (_key+9)
  2916  000DDE  6ED9               	movwf	fsr2l,c
  2917  000DE0  6ADA               	clrf	fsr2h,c
  2918  000DE2  50DF               	movf	indf2,w,c
  2919  000DE4  B4D8               	btfsc	status,2,c
  2920  000DE6  D016               	goto	l276
  2921                           
  2922                           ;ikb.c: 734: {;ikb.c: 735: group_x[key[k].num_group_x] = 0;
  2923  000DE8  5023               	movf	ikey_parsing@k,w,c
  2924  000DEA  0D10               	mullw	16
  2925  000DEC  50F3               	movf	prodl,w,c
  2926  000DEE  0F69               	addlw	low (_key+9)
  2927  000DF0  6ED9               	movwf	fsr2l,c
  2928  000DF2  6ADA               	clrf	fsr2h,c
  2929  000DF4  50DF               	movf	indf2,w,c
  2930  000DF6  6E1F               	movwf	??_ikey_parsing& (0+255),c
  2931  000DF8  501F               	movf	??_ikey_parsing,w,c
  2932  000DFA  0FB0               	addlw	low _group_x
  2933  000DFC  6ED9               	movwf	fsr2l,c
  2934  000DFE  6ADA               	clrf	fsr2h,c
  2935  000E00  0E00               	movlw	0
  2936  000E02  6EDF               	movwf	indf2,c
  2937                           
  2938                           ;ikb.c: 736: key[k].bf.OwnerOfGroup = 0;
  2939  000E04  5023               	movf	ikey_parsing@k,w,c
  2940  000E06  0D10               	mullw	16
  2941  000E08  50F3               	movf	prodl,w,c
  2942  000E0A  0F6B               	addlw	low (_key+11)
  2943  000E0C  6ED9               	movwf	fsr2l,c
  2944  000E0E  6ADA               	clrf	fsr2h,c
  2945  000E10  0100               	movlb	0	; () banked
  2946  000E12  90DF               	bcf	indf2,0,c
  2947  000E14                     l276:
  2948                           
  2949                           ;ikb.c: 737: };ikb.c: 739: key[k].sm1 = (0);
  2950  000E14  5023               	movf	ikey_parsing@k,w,c
  2951  000E16  0D10               	mullw	16
  2952  000E18  50F3               	movf	prodl,w,c
  2953  000E1A  0F66               	addlw	low (_key+6)
  2954  000E1C  6ED9               	movwf	fsr2l,c
  2955  000E1E  6ADA               	clrf	fsr2h,c
  2956  000E20  0E00               	movlw	0
  2957  000E22  6EDF               	movwf	indf2,c
  2958                           
  2959                           ;ikb.c: 742: key[k].bf.InProcessing = 0;
  2960  000E24  5023               	movf	ikey_parsing@k,w,c
  2961  000E26  0D10               	mullw	16
  2962  000E28  50F3               	movf	prodl,w,c
  2963  000E2A  0F6B               	addlw	low (_key+11)
  2964  000E2C  6ED9               	movwf	fsr2l,c
  2965  000E2E  6ADA               	clrf	fsr2h,c
  2966  000E30  0100               	movlb	0	; () banked
  2967  000E32  92DF               	bcf	indf2,1,c
  2968  000E34                     l3440:
  2969  000E34  2A23               	incf	ikey_parsing@k,f,c
  2970  000E36  0E04               	movlw	4
  2971  000E38  6423               	cpfsgt	ikey_parsing@k,c
  2972  000E3A  D4EB               	goto	l3354
  2973  000E3C  0012               	return	
  2974  000E3E                     __end_of_ikey_parsing:
  2975                           	opt callstack 0
  2976                           
  2977 ;; *************** function _ikey_is_accessible *****************
  2978 ;; Defined at:
  2979 ;;		line 510 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  k               1    wreg     unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  k               1   12[COMRAM] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      unsigned char 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0
  2994 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2995 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2996 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2997 ;;Total ram usage:        3 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    5
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_ikey_parsing
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text15
  3008  001BE0                     __ptext15:
  3009                           	opt callstack 0
  3010  001BE0                     _ikey_is_accessible:
  3011                           	opt callstack 23
  3012                           
  3013                           ;incstack = 0
  3014                           ;ikey_is_accessible@k stored from wreg
  3015  001BE0  6E0D               	movwf	ikey_is_accessible@k,c
  3016                           
  3017                           ;ikb.c: 512: if (key[k].num_group_x != 0)
  3018  001BE2  500D               	movf	ikey_is_accessible@k,w,c
  3019  001BE4  0D10               	mullw	16
  3020  001BE6  50F3               	movf	prodl,w,c
  3021  001BE8  0F69               	addlw	low (_key+9)
  3022  001BEA  6ED9               	movwf	fsr2l,c
  3023  001BEC  6ADA               	clrf	fsr2h,c
  3024  001BEE  50DF               	movf	indf2,w,c
  3025  001BF0  B4D8               	btfsc	status,2,c
  3026  001BF2  D01A               	goto	l2326
  3027                           
  3028                           ;ikb.c: 513: {;ikb.c: 515: if (group_x[key[k].num_group_x] == 1)
  3029  001BF4  500D               	movf	ikey_is_accessible@k,w,c
  3030  001BF6  0D10               	mullw	16
  3031  001BF8  50F3               	movf	prodl,w,c
  3032  001BFA  0F69               	addlw	low (_key+9)
  3033  001BFC  6ED9               	movwf	fsr2l,c
  3034  001BFE  6ADA               	clrf	fsr2h,c
  3035  001C00  50DF               	movf	indf2,w,c
  3036  001C02  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  3037  001C04  500B               	movf	??_ikey_is_accessible,w,c
  3038  001C06  0FB0               	addlw	low _group_x
  3039  001C08  6ED9               	movwf	fsr2l,c
  3040  001C0A  6ADA               	clrf	fsr2h,c
  3041  001C0C  04DE               	decf	postinc2,w,c
  3042  001C0E  A4D8               	btfss	status,2,c
  3043  001C10  D00B               	goto	l2326
  3044                           
  3045                           ;ikb.c: 516: {;ikb.c: 518: if ( !key[k].bf.OwnerOfGroup)
  3046  001C12  500D               	movf	ikey_is_accessible@k,w,c
  3047  001C14  0D10               	mullw	16
  3048  001C16  50F3               	movf	prodl,w,c
  3049  001C18  0F6B               	addlw	low (_key+11)
  3050  001C1A  6ED9               	movwf	fsr2l,c
  3051  001C1C  6ADA               	clrf	fsr2h,c
  3052  001C1E  0100               	movlb	0	; () banked
  3053  001C20  B0DF               	btfsc	indf2,0,c
  3054  001C22  D002               	goto	l2326
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;ikb.c: 519: {;ikb.c: 520: return 0;
  3058  001C24  0E00               	movlw	0
  3059  001C26  0012               	return	
  3060  001C28                     l2326:
  3061                           
  3062                           ;ikb.c: 521: };ikb.c: 522: };ikb.c: 523: };ikb.c: 524: return 1;
  3063  001C28  0E01               	movlw	1
  3064  001C2A  0012               	return		;funcret
  3065  001C2C                     __end_of_ikey_is_accessible:
  3066                           	opt callstack 0
  3067                           
  3068 ;; *************** function ___lwtoft *****************
  3069 ;; Defined at:
  3070 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  c               2   18[COMRAM] unsigned int 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  3   18[COMRAM] float 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3084 ;;      Params:         3       0       0       0       0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3087 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3088 ;;Total ram usage:        3 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    6
  3091 ;; This function calls:
  3092 ;;		___ftpack
  3093 ;; This function is called by:
  3094 ;;		_ikey_parsing
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text16
  3099  001F1C                     __ptext16:
  3100                           	opt callstack 0
  3101  001F1C                     ___lwtoft:
  3102                           	opt callstack 22
  3103                           
  3104                           ;incstack = 0
  3105  001F1C  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  3106  001F20  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  3107  001F24  6A0D               	clrf	___ftpack@arg+2,c
  3108  001F26  0E8E               	movlw	142
  3109  001F28  6E0E               	movwf	___ftpack@exp,c
  3110  001F2A  0E00               	movlw	0
  3111  001F2C  6E0F               	movwf	___ftpack@sign,c
  3112  001F2E  ECD0  F00B         	call	___ftpack	;wreg free
  3113  001F32  C00B  F013         	movff	?___ftpack,?___lwtoft
  3114  001F36  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  3115  001F3A  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  3116  001F3E  0012               	return		;funcret
  3117  001F40                     __end_of___lwtoft:
  3118                           	opt callstack 0
  3119                           
  3120 ;; *************** function _ikb_init *****************
  3121 ;; Defined at:
  3122 ;;		line 217 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  i               1   10[COMRAM] char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 3F/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0
  3137 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3139 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3140 ;;Total ram usage:        1 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    5
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text17
  3151  0016EA                     __ptext17:
  3152                           	opt callstack 0
  3153  0016EA                     _ikb_init:
  3154                           	opt callstack 25
  3155                           
  3156                           ;incstack = 0
  3157                           ;ikb.c: 219: int8_t i;;ikb.c: 389: do{TRISC |= 1<<4;}while(0);
  3158  0016EA  8894               	bsf	3988,4,c	;volatile
  3159                           
  3160                           ;ikb.c: 390: do{TRISC |= 1<<5;}while(0);
  3161  0016EC  8A94               	bsf	3988,5,c	;volatile
  3162                           
  3163                           ;ikb.c: 391: do{TRISC |= 1<<6;}while(0);
  3164  0016EE  8C94               	bsf	3988,6,c	;volatile
  3165                           
  3166                           ;ikb.c: 392: do{TRISC |= 1<<7;}while(0);
  3167  0016F0  8E94               	bsf	3988,7,c	;volatile
  3168                           
  3169                           ;ikb.c: 393: do{TRISD |= 1<<4;}while(0);
  3170  0016F2  8895               	bsf	3989,4,c	;volatile
  3171                           
  3172                           ;ikb.c: 394: key[0].keyRead = keyRead_pin_key1;
  3173  0016F4  0ED0               	movlw	low _keyRead_pin_key1
  3174  0016F6  0100               	movlb	0	; () banked
  3175  0016F8  6F60               	movwf	_key& (0+255),b	;volatile
  3176  0016FA  0E1F               	movlw	high _keyRead_pin_key1
  3177  0016FC  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;ikb.c: 395: key[1].keyRead = keyRead_pin_key2;
  3181  0016FE  0EBC               	movlw	low _keyRead_pin_key2
  3182  001700  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3183  001702  0E1F               	movlw	high _keyRead_pin_key2
  3184  001704  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;ikb.c: 396: key[2].keyRead = keyRead_pin_key3;
  3188  001706  0EB2               	movlw	low _keyRead_pin_key3
  3189  001708  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3190  00170A  0E1F               	movlw	high _keyRead_pin_key3
  3191  00170C  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;ikb.c: 397: key[3].keyRead = keyRead_pin_key4;
  3195  00170E  0EE0               	movlw	low _keyRead_pin_key4
  3196  001710  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3197  001712  0E1F               	movlw	high _keyRead_pin_key4
  3198  001714  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;ikb.c: 398: key[4].keyRead = keyRead_pin_key5;
  3202  001716  0ED8               	movlw	low _keyRead_pin_key5
  3203  001718  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3204  00171A  0E1F               	movlw	high _keyRead_pin_key5
  3205  00171C  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;ikb.c: 401: for (i=0; i<5; i++)
  3209  00171E  0E00               	movlw	0
  3210  001720  6E0B               	movwf	ikb_init@i,c
  3211  001722                     l2864:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;ikb.c: 402: {;ikb.c: 403: key[i].bf.OnKeyPressed = 1;
  3215  001722  500B               	movf	ikb_init@i,w,c
  3216  001724  0D10               	mullw	16
  3217  001726  50F3               	movf	prodl,w,c
  3218  001728  0F6A               	addlw	low (_key+10)
  3219  00172A  6ED9               	movwf	fsr2l,c
  3220  00172C  6ADA               	clrf	fsr2h,c
  3221  00172E  82DF               	bsf	indf2,1,c
  3222                           
  3223                           ;ikb.c: 404: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3224  001730  500B               	movf	ikb_init@i,w,c
  3225  001732  0D10               	mullw	16
  3226  001734  50F3               	movf	prodl,w,c
  3227  001736  0F6A               	addlw	low (_key+10)
  3228  001738  6ED9               	movwf	fsr2l,c
  3229  00173A  6ADA               	clrf	fsr2h,c
  3230  00173C  94DF               	bcf	indf2,2,c
  3231                           
  3232                           ;ikb.c: 405: key[i].bf.AtTimeExpired = 0;
  3233  00173E  500B               	movf	ikb_init@i,w,c
  3234  001740  0D10               	mullw	16
  3235  001742  50F3               	movf	prodl,w,c
  3236  001744  0F6A               	addlw	low (_key+10)
  3237  001746  6ED9               	movwf	fsr2l,c
  3238  001748  6ADA               	clrf	fsr2h,c
  3239  00174A  96DF               	bcf	indf2,3,c
  3240                           
  3241                           ;ikb.c: 406: key[i].bf.Reptt = 0;
  3242  00174C  500B               	movf	ikb_init@i,w,c
  3243  00174E  0D10               	mullw	16
  3244  001750  50F3               	movf	prodl,w,c
  3245  001752  0F6A               	addlw	low (_key+10)
  3246  001754  6ED9               	movwf	fsr2l,c
  3247  001756  6ADA               	clrf	fsr2h,c
  3248  001758  9ADF               	bcf	indf2,5,c
  3249                           
  3250                           ;ikb.c: 407: key[i].num_group_x = 0;
  3251  00175A  500B               	movf	ikb_init@i,w,c
  3252  00175C  0D10               	mullw	16
  3253  00175E  50F3               	movf	prodl,w,c
  3254  001760  0F69               	addlw	low (_key+9)
  3255  001762  6ED9               	movwf	fsr2l,c
  3256  001764  6ADA               	clrf	fsr2h,c
  3257  001766  0E00               	movlw	0
  3258  001768  6EDF               	movwf	indf2,c
  3259                           
  3260                           ;ikb.c: 408: key[i].repp.to_start= (uint16_t)500.0/5;
  3261  00176A  500B               	movf	ikb_init@i,w,c
  3262  00176C  0D10               	mullw	16
  3263  00176E  50F3               	movf	prodl,w,c
  3264  001770  0F6C               	addlw	low (_key+12)
  3265  001772  6ED9               	movwf	fsr2l,c
  3266  001774  6ADA               	clrf	fsr2h,c
  3267  001776  0E64               	movlw	100
  3268  001778  6EDE               	movwf	postinc2,c
  3269  00177A  0E00               	movlw	0
  3270  00177C  6EDD               	movwf	postdec2,c
  3271                           
  3272                           ;ikb.c: 409: key[i].repp.after_start = (uint16_t)200.0/5;
  3273  00177E  500B               	movf	ikb_init@i,w,c
  3274  001780  0D10               	mullw	16
  3275  001782  50F3               	movf	prodl,w,c
  3276  001784  0F6E               	addlw	low (_key+14)
  3277  001786  6ED9               	movwf	fsr2l,c
  3278  001788  6ADA               	clrf	fsr2h,c
  3279  00178A  0E28               	movlw	40
  3280  00178C  6EDE               	movwf	postinc2,c
  3281  00178E  0E00               	movlw	0
  3282  001790  6EDD               	movwf	postdec2,c
  3283                           
  3284                           ; BSR set to: 0
  3285  001792  2A0B               	incf	ikb_init@i,f,c
  3286                           
  3287                           ; BSR set to: 0
  3288  001794  500B               	movf	ikb_init@i,w,c
  3289  001796  0A80               	xorlw	128
  3290  001798  0F7B               	addlw	-133
  3291  00179A  B0D8               	btfsc	status,0,c
  3292  00179C  0012               	return	
  3293  00179E  D7C1               	goto	l2864
  3294  0017A0                     __end_of_ikb_init:
  3295                           	opt callstack 0
  3296                           
  3297 ;; *************** function _ikb_flush *****************
  3298 ;; Defined at:
  3299 ;;		line 419 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 3F/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3313 ;;      Params:         0       0       0       0       0       0       0       0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3316 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3317 ;;Total ram usage:        0 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    6
  3320 ;; This function calls:
  3321 ;;		_ikey_clear_all_flag
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text18
  3328  001FE6                     __ptext18:
  3329                           	opt callstack 0
  3330  001FE6                     _ikb_flush:
  3331                           	opt callstack 24
  3332                           
  3333                           ;ikb.c: 421: ikey_clear_all_flag();
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;incstack = 0
  3337  001FE6  ECA0  F00F         	call	_ikey_clear_all_flag	;wreg free
  3338                           
  3339                           ; BSR set to: 0
  3340  001FEA  0012               	return		;funcret
  3341  001FEC                     __end_of_ikb_flush:
  3342                           	opt callstack 0
  3343                           
  3344 ;; *************** function _ikey_clear_all_flag *****************
  3345 ;; Defined at:
  3346 ;;		line 761 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  i               1   10[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 3F/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3363 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3364 ;;Total ram usage:        1 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    5
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_ikb_flush
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text19
  3375  001F40                     __ptext19:
  3376                           	opt callstack 0
  3377  001F40                     _ikey_clear_all_flag:
  3378                           	opt callstack 24
  3379                           
  3380                           ;ikb.c: 763: uint8_t i;;ikb.c: 764: for (i=0; i<5; i++)
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;incstack = 0
  3384  001F40  0E00               	movlw	0
  3385  001F42  6E0B               	movwf	ikey_clear_all_flag@i,c
  3386  001F44                     l2624:
  3387                           
  3388                           ;ikb.c: 765: {;ikb.c: 767: key[i].bf.ReadyToRead = 0;
  3389  001F44  500B               	movf	ikey_clear_all_flag@i,w,c
  3390  001F46  0D10               	mullw	16
  3391  001F48  50F3               	movf	prodl,w,c
  3392  001F4A  0F6A               	addlw	low (_key+10)
  3393  001F4C  6ED9               	movwf	fsr2l,c
  3394  001F4E  6ADA               	clrf	fsr2h,c
  3395  001F50  0100               	movlb	0	; () banked
  3396  001F52  9CDF               	bcf	indf2,6,c
  3397                           
  3398                           ; BSR set to: 0
  3399  001F54  2A0B               	incf	ikey_clear_all_flag@i,f,c
  3400                           
  3401                           ; BSR set to: 0
  3402  001F56  0E04               	movlw	4
  3403  001F58  640B               	cpfsgt	ikey_clear_all_flag@i,c
  3404  001F5A  D7F4               	goto	l2624
  3405  001F5C  0012               	return	
  3406  001F5E                     __end_of_ikey_clear_all_flag:
  3407                           	opt callstack 0
  3408                           
  3409 ;; *************** function _display7s_job *****************
  3410 ;; Defined at:
  3411 ;;		line 178 in file "pulsonic.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0
  3426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3428 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3429 ;;Total ram usage:        0 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    7
  3432 ;; This function calls:
  3433 ;;		_multiplexedDisp_job
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text20
  3440  001EF6                     __ptext20:
  3441                           	opt callstack 0
  3442  001EF6                     _display7s_job:
  3443                           	opt callstack 23
  3444                           
  3445                           ;pulsonic.c: 180: static int8_t q;;pulsonic.c: 182: LATB = pulsonic.display7s[q];
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;incstack = 0
  3449  001EF6  0E76               	movlw	low (_pulsonic+118)
  3450  001EF8  243F               	addwf	display7s_job@q,w,c
  3451  001EFA  6ED9               	movwf	fsr2l,c
  3452  001EFC  6ADA               	clrf	fsr2h,c
  3453  001EFE  0E01               	movlw	high (_pulsonic+118)
  3454  001F00  22DA               	addwfc	fsr2h,f,c
  3455  001F02  50DF               	movf	indf2,w,c
  3456  001F04  6E8A               	movwf	3978,c	;volatile
  3457                           
  3458                           ;pulsonic.c: 183: multiplexedDisp_job(q);
  3459  001F06  503F               	movf	display7s_job@q,w,c
  3460  001F08  EC27  F00C         	call	_multiplexedDisp_job
  3461                           
  3462                           ;pulsonic.c: 185: if (++q == (2 + 3))
  3463  001F0C  2A3F               	incf	display7s_job@q,f,c
  3464  001F0E  0E05               	movlw	5
  3465  001F10  183F               	xorwf	display7s_job@q,w,c
  3466  001F12  A4D8               	btfss	status,2,c
  3467  001F14  0012               	return	
  3468                           
  3469                           ;pulsonic.c: 186: {q=0;}
  3470  001F16  0E00               	movlw	0
  3471  001F18  6E3F               	movwf	display7s_job@q,c
  3472  001F1A  0012               	return		;funcret
  3473  001F1C                     __end_of_display7s_job:
  3474                           	opt callstack 0
  3475                           
  3476 ;; *************** function _multiplexedDisp_job *****************
  3477 ;; Defined at:
  3478 ;;		line 149 in file "pulsonic.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  q               1    wreg     char 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  q               1   16[COMRAM] char 
  3483 ;;  i               1   17[COMRAM] char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0
  3494 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3495 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3496 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3497 ;;Total ram usage:        8 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    6
  3500 ;; This function calls:
  3501 ;;		_multiplexedDisp0_off
  3502 ;;		_multiplexedDisp0_on
  3503 ;;		_multiplexedDisp1_off
  3504 ;;		_multiplexedDisp1_on
  3505 ;;		_multiplexedDisp2_off
  3506 ;;		_multiplexedDisp2_on
  3507 ;;		_multiplexedDisp3_off
  3508 ;;		_multiplexedDisp3_on
  3509 ;;		_multiplexedDisp4_off
  3510 ;;		_multiplexedDisp4_on
  3511 ;; This function is called by:
  3512 ;;		_display7s_job
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text21
  3517  00184E                     __ptext21:
  3518                           	opt callstack 0
  3519  00184E                     _multiplexedDisp_job:
  3520                           	opt callstack 23
  3521                           
  3522                           ;incstack = 0
  3523                           ;multiplexedDisp_job@q stored from wreg
  3524  00184E  6E11               	movwf	multiplexedDisp_job@q,c
  3525                           
  3526                           ;pulsonic.c: 151: int8_t i;;pulsonic.c: 152: for (i=0; i< (2 + 3); i++)
  3527  001850  0E00               	movlw	0
  3528  001852  6E12               	movwf	multiplexedDisp_job@i,c
  3529  001854                     l2650:
  3530                           
  3531                           ;pulsonic.c: 153: {;pulsonic.c: 154: if ((0x01<<i) & (0x1<<q))
  3532  001854  C011  F00B         	movff	multiplexedDisp_job@q,??_multiplexedDisp_job
  3533  001858  0E01               	movlw	1
  3534  00185A  6E0C               	movwf	(??_multiplexedDisp_job+1)& (0+255),c
  3535  00185C  0E00               	movlw	0
  3536  00185E  6E0D               	movwf	(??_multiplexedDisp_job+2)& (0+255),c
  3537  001860  2A0B               	incf	??_multiplexedDisp_job,f,c
  3538  001862  D003               	goto	u2754
  3539  001864                     u2755:
  3540  001864  90D8               	bcf	status,0,c
  3541  001866  360C               	rlcf	??_multiplexedDisp_job+1,f,c
  3542  001868  360D               	rlcf	??_multiplexedDisp_job+2,f,c
  3543  00186A                     u2754:
  3544  00186A  2E0B               	decfsz	??_multiplexedDisp_job,f,c
  3545  00186C  D7FB               	goto	u2755
  3546  00186E  C012  F00E         	movff	multiplexedDisp_job@i,??_multiplexedDisp_job+3
  3547  001872  0E01               	movlw	1
  3548  001874  6E0F               	movwf	(??_multiplexedDisp_job+4)& (0+255),c
  3549  001876  0E00               	movlw	0
  3550  001878  6E10               	movwf	(??_multiplexedDisp_job+5)& (0+255),c
  3551  00187A  2A0E               	incf	??_multiplexedDisp_job+3,f,c
  3552  00187C  D003               	goto	u2764
  3553  00187E                     u2765:
  3554  00187E  90D8               	bcf	status,0,c
  3555  001880  360F               	rlcf	??_multiplexedDisp_job+4,f,c
  3556  001882  3610               	rlcf	??_multiplexedDisp_job+5,f,c
  3557  001884                     u2764:
  3558  001884  2E0E               	decfsz	??_multiplexedDisp_job+3,f,c
  3559  001886  D7FB               	goto	u2765
  3560  001888  500C               	movf	??_multiplexedDisp_job+1,w,c
  3561  00188A  160F               	andwf	??_multiplexedDisp_job+4,f,c
  3562  00188C  500D               	movf	??_multiplexedDisp_job+2,w,c
  3563  00188E  1610               	andwf	??_multiplexedDisp_job+5,f,c
  3564  001890  500F               	movf	??_multiplexedDisp_job+4,w,c
  3565  001892  1010               	iorwf	??_multiplexedDisp_job+5,w,c
  3566  001894  B4D8               	btfsc	status,2,c
  3567  001896  D012               	goto	l2654
  3568                           
  3569                           ;pulsonic.c: 155: multiplexedDisp[i].Qonoff[1]();
  3570  001898  5012               	movf	multiplexedDisp_job@i,w,c
  3571  00189A  0D04               	mullw	4
  3572  00189C  50F3               	movf	prodl,w,c
  3573  00189E  0FB7               	addlw	low (_multiplexedDisp+2)
  3574  0018A0  6ED9               	movwf	fsr2l,c
  3575  0018A2  6ADA               	clrf	fsr2h,c
  3576  0018A4  D801               	call	u2788
  3577  0018A6  D01C               	goto	u2799
  3578  0018A8                     u2788:
  3579  0018A8  0005               	push	
  3580  0018AA  6EFA               	movwf	pclath,c
  3581  0018AC  50DE               	movf	postinc2,w,c
  3582  0018AE  6EFD               	movwf	tosl,c
  3583  0018B0  50DE               	movf	postinc2,w,c
  3584  0018B2  6EFE               	movwf	tosh,c
  3585  0018B4  50F8               	movf	tblptru,w,c
  3586  0018B6  6EFF               	movwf	tosu,c
  3587  0018B8  50FA               	movf	pclath,w,c
  3588  0018BA  0012               	return		;indir
  3589  0018BC                     l2654:
  3590                           
  3591                           ;pulsonic.c: 156: else;pulsonic.c: 157: multiplexedDisp[i].Qonoff[0]();
  3592  0018BC  5012               	movf	multiplexedDisp_job@i,w,c
  3593  0018BE  0D04               	mullw	4
  3594  0018C0  50F3               	movf	prodl,w,c
  3595  0018C2  0FB5               	addlw	low _multiplexedDisp
  3596  0018C4  6ED9               	movwf	fsr2l,c
  3597  0018C6  6ADA               	clrf	fsr2h,c
  3598  0018C8  D801               	call	u2798
  3599  0018CA  D00A               	goto	u2799
  3600  0018CC                     u2798:
  3601  0018CC  0005               	push	
  3602  0018CE  6EFA               	movwf	pclath,c
  3603  0018D0  50DE               	movf	postinc2,w,c
  3604  0018D2  6EFD               	movwf	tosl,c
  3605  0018D4  50DE               	movf	postinc2,w,c
  3606  0018D6  6EFE               	movwf	tosh,c
  3607  0018D8  50F8               	movf	tblptru,w,c
  3608  0018DA  6EFF               	movwf	tosu,c
  3609  0018DC  50FA               	movf	pclath,w,c
  3610  0018DE  0012               	return		;indir
  3611  0018E0                     u2799:
  3612  0018E0  2A12               	incf	multiplexedDisp_job@i,f,c
  3613  0018E2  5012               	movf	multiplexedDisp_job@i,w,c
  3614  0018E4  0A80               	xorlw	128
  3615  0018E6  0F7B               	addlw	-133
  3616  0018E8  B0D8               	btfsc	status,0,c
  3617  0018EA  0012               	return	
  3618  0018EC  D7B3               	goto	l2650
  3619  0018EE                     __end_of_multiplexedDisp_job:
  3620                           	opt callstack 0
  3621                           
  3622 ;; *************** function _display7s_init *****************
  3623 ;; Defined at:
  3624 ;;		line 165 in file "pulsonic.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3638 ;;      Params:         0       0       0       0       0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3641 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    7
  3645 ;; This function calls:
  3646 ;;		_multiplexedDisp_init
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text22
  3653  001B90                     __ptext22:
  3654                           	opt callstack 0
  3655  001B90                     _display7s_init:
  3656                           	opt callstack 23
  3657                           
  3658                           ;pulsonic.c: 167: pulsonic.display7s[MODE_DIG_1] = DISP7S_NUMS[2];
  3659                           
  3660                           ;incstack = 0
  3661  001B90  0E03               	movlw	low (_DISP7S_NUMS+2)
  3662  001B92  6EF6               	movwf	tblptrl,c
  3663  001B94                     	if	1	;There is more than 1 active tblptr byte
  3664  001B94  0E08               	movlw	high __smallconst
  3665  001B96  6EF7               	movwf	tblptrh,c
  3666  001B98                     	endif
  3667  001B98                     	if	0	;tblptru may be non-zero
  3668  001B98                     	endif
  3669  001B98                     	if	0	;tblptru may be non-zero
  3670  001B98                     	endif
  3671  001B98  0008               	tblrd		*
  3672  001B9A  CFF5 F177          	movff	tablat,_pulsonic+119
  3673                           
  3674                           ;pulsonic.c: 168: pulsonic.display7s[MODE_DIG_0] = DISP7S_NUMS[0];
  3675  001B9E  0E01               	movlw	low _DISP7S_NUMS
  3676  001BA0  6EF6               	movwf	tblptrl,c
  3677  001BA2                     	if	1	;There is more than 1 active tblptr byte
  3678  001BA2  0E08               	movlw	high _DISP7S_NUMS
  3679  001BA4  6EF7               	movwf	tblptrh,c
  3680  001BA6                     	endif
  3681  001BA6                     	if	0	;There are less than 3 active tblptr bytes
  3682  001BA6                     	endif
  3683  001BA6  0008               	tblrd		*
  3684  001BA8  CFF5 F176          	movff	tablat,_pulsonic+118
  3685                           
  3686                           ;pulsonic.c: 170: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[RAYA];
  3687  001BAC  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3688  001BAE  6EF6               	movwf	tblptrl,c
  3689  001BB0                     	if	1	;There is more than 1 active tblptr byte
  3690  001BB0  0E08               	movlw	high __smallconst
  3691  001BB2  6EF7               	movwf	tblptrh,c
  3692  001BB4                     	endif
  3693  001BB4                     	if	0	;tblptru may be non-zero
  3694  001BB4                     	endif
  3695  001BB4                     	if	0	;tblptru may be non-zero
  3696  001BB4                     	endif
  3697  001BB4  0008               	tblrd		*
  3698  001BB6  CFF5 F178          	movff	tablat,_pulsonic+120
  3699                           
  3700                           ;pulsonic.c: 171: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[RAYA];
  3701  001BBA  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3702  001BBC  6EF6               	movwf	tblptrl,c
  3703  001BBE                     	if	1	;There is more than 1 active tblptr byte
  3704  001BBE  0E08               	movlw	high __smallconst
  3705  001BC0  6EF7               	movwf	tblptrh,c
  3706  001BC2                     	endif
  3707  001BC2                     	if	0	;tblptru may be non-zero
  3708  001BC2                     	endif
  3709  001BC2                     	if	0	;tblptru may be non-zero
  3710  001BC2                     	endif
  3711  001BC2  0008               	tblrd		*
  3712  001BC4  CFF5 F177          	movff	tablat,_pulsonic+119
  3713                           
  3714                           ;pulsonic.c: 172: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[RAYA];
  3715  001BC8  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3716  001BCA  6EF6               	movwf	tblptrl,c
  3717  001BCC                     	if	1	;There is more than 1 active tblptr byte
  3718  001BCC  0E08               	movlw	high __smallconst
  3719  001BCE  6EF7               	movwf	tblptrh,c
  3720  001BD0                     	endif
  3721  001BD0                     	if	0	;tblptru may be non-zero
  3722  001BD0                     	endif
  3723  001BD0                     	if	0	;tblptru may be non-zero
  3724  001BD0                     	endif
  3725  001BD0  0008               	tblrd		*
  3726  001BD2  CFF5 F176          	movff	tablat,_pulsonic+118
  3727                           
  3728                           ;pulsonic.c: 174: TRISB = 0x00;
  3729  001BD6  0E00               	movlw	0
  3730  001BD8  6E93               	movwf	3987,c	;volatile
  3731                           
  3732                           ;pulsonic.c: 175: multiplexedDisp_init();
  3733  001BDA  ECC4  F00E         	call	_multiplexedDisp_init	;wreg free
  3734  001BDE  0012               	return		;funcret
  3735  001BE0                     __end_of_display7s_init:
  3736                           	opt callstack 0
  3737                           
  3738 ;; *************** function _multiplexedDisp_init *****************
  3739 ;; Defined at:
  3740 ;;		line 134 in file "pulsonic.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  i               1   10[COMRAM] char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3754 ;;      Params:         0       0       0       0       0       0       0       0       0
  3755 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3757 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3758 ;;Total ram usage:        1 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    6
  3761 ;; This function calls:
  3762 ;;		_multiplexedDisp0_off
  3763 ;;		_multiplexedDisp0_on
  3764 ;;		_multiplexedDisp1_off
  3765 ;;		_multiplexedDisp1_on
  3766 ;;		_multiplexedDisp2_off
  3767 ;;		_multiplexedDisp2_on
  3768 ;;		_multiplexedDisp3_off
  3769 ;;		_multiplexedDisp3_on
  3770 ;;		_multiplexedDisp4_off
  3771 ;;		_multiplexedDisp4_on
  3772 ;; This function is called by:
  3773 ;;		_display7s_init
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text23
  3778  001D88                     __ptext23:
  3779                           	opt callstack 0
  3780  001D88                     _multiplexedDisp_init:
  3781                           	opt callstack 23
  3782                           
  3783                           ;pulsonic.c: 136: int8_t i;;pulsonic.c: 137: for (i=0; i< (2 + 3); i++)
  3784                           
  3785                           ;incstack = 0
  3786  001D88  0E00               	movlw	0
  3787  001D8A  6E0B               	movwf	multiplexedDisp_init@i,c
  3788  001D8C                     l2636:
  3789                           
  3790                           ;pulsonic.c: 138: {;pulsonic.c: 139: multiplexedDisp[i].Qonoff[0]();
  3791  001D8C  500B               	movf	multiplexedDisp_init@i,w,c
  3792  001D8E  0D04               	mullw	4
  3793  001D90  50F3               	movf	prodl,w,c
  3794  001D92  0FB5               	addlw	low _multiplexedDisp
  3795  001D94  6ED9               	movwf	fsr2l,c
  3796  001D96  6ADA               	clrf	fsr2h,c
  3797  001D98  D801               	call	u2738
  3798  001D9A  D00A               	goto	u2739
  3799  001D9C                     u2738:
  3800  001D9C  0005               	push	
  3801  001D9E  6EFA               	movwf	pclath,c
  3802  001DA0  50DE               	movf	postinc2,w,c
  3803  001DA2  6EFD               	movwf	tosl,c
  3804  001DA4  50DE               	movf	postinc2,w,c
  3805  001DA6  6EFE               	movwf	tosh,c
  3806  001DA8  50F8               	movf	tblptru,w,c
  3807  001DAA  6EFF               	movwf	tosu,c
  3808  001DAC  50FA               	movf	pclath,w,c
  3809  001DAE  0012               	return		;indir
  3810  001DB0                     u2739:
  3811  001DB0  2A0B               	incf	multiplexedDisp_init@i,f,c
  3812  001DB2  500B               	movf	multiplexedDisp_init@i,w,c
  3813  001DB4  0A80               	xorlw	128
  3814  001DB6  0F7B               	addlw	-133
  3815  001DB8  A0D8               	btfss	status,0,c
  3816  001DBA  D7E8               	goto	l2636
  3817  001DBC  9892               	bcf	3986,4,c	;volatile
  3818                           
  3819                           ;pulsonic.c: 143: do{TRISA &= ~(1<<3);}while(0);
  3820  001DBE  9692               	bcf	3986,3,c	;volatile
  3821                           
  3822                           ;pulsonic.c: 144: do{TRISA &= ~(1<<2);}while(0);
  3823  001DC0  9492               	bcf	3986,2,c	;volatile
  3824                           
  3825                           ;pulsonic.c: 145: do{TRISA &= ~(1<<1);}while(0);
  3826  001DC2  9292               	bcf	3986,1,c	;volatile
  3827                           
  3828                           ;pulsonic.c: 146: do{TRISA &= ~(1<<0);}while(0);
  3829  001DC4  9092               	bcf	3986,0,c	;volatile
  3830  001DC6  0012               	return		;funcret
  3831  001DC8                     __end_of_multiplexedDisp_init:
  3832                           	opt callstack 0
  3833                           
  3834 ;; *************** function _multiplexedDisp4_off *****************
  3835 ;; Defined at:
  3836 ;;		line 91 in file "pulsonic.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    5
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_multiplexedDisp_init
  3861 ;;		_multiplexedDisp_job
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text24
  3866  002004                     __ptext24:
  3867                           	opt callstack 0
  3868  002004                     _multiplexedDisp4_off:
  3869                           	opt callstack 23
  3870                           
  3871                           ;incstack = 0
  3872                           ;pulsonic.c: 93: do{LATA |= 1<<0;}while(0);
  3873  002004  8089               	bsf	3977,0,c	;volatile
  3874  002006  0012               	return		;funcret
  3875  002008                     __end_of_multiplexedDisp4_off:
  3876                           	opt callstack 0
  3877                           
  3878 ;; *************** function _multiplexedDisp3_on *****************
  3879 ;; Defined at:
  3880 ;;		line 86 in file "pulsonic.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    5
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_multiplexedDisp_init
  3905 ;;		_multiplexedDisp_job
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text25
  3910  002008                     __ptext25:
  3911                           	opt callstack 0
  3912  002008                     _multiplexedDisp3_on:
  3913                           	opt callstack 23
  3914                           
  3915                           ;incstack = 0
  3916                           ;pulsonic.c: 88: do{LATA &= ~(1<<1);}while(0);
  3917  002008  9289               	bcf	3977,1,c	;volatile
  3918  00200A  0012               	return		;funcret
  3919  00200C                     __end_of_multiplexedDisp3_on:
  3920                           	opt callstack 0
  3921                           
  3922 ;; *************** function _multiplexedDisp3_off *****************
  3923 ;; Defined at:
  3924 ;;		line 82 in file "pulsonic.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3938 ;;      Params:         0       0       0       0       0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3941 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3942 ;;Total ram usage:        0 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    5
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_multiplexedDisp_init
  3949 ;;		_multiplexedDisp_job
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text26
  3954  00200C                     __ptext26:
  3955                           	opt callstack 0
  3956  00200C                     _multiplexedDisp3_off:
  3957                           	opt callstack 23
  3958                           
  3959                           ;incstack = 0
  3960                           ;pulsonic.c: 84: do{LATA |= 1<<1;}while(0);
  3961  00200C  8289               	bsf	3977,1,c	;volatile
  3962  00200E  0012               	return		;funcret
  3963  002010                     __end_of_multiplexedDisp3_off:
  3964                           	opt callstack 0
  3965                           
  3966 ;; *************** function _multiplexedDisp2_on *****************
  3967 ;; Defined at:
  3968 ;;		line 77 in file "pulsonic.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		status,2, status,0
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    5
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_multiplexedDisp_init
  3993 ;;		_multiplexedDisp_job
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text27
  3998  002010                     __ptext27:
  3999                           	opt callstack 0
  4000  002010                     _multiplexedDisp2_on:
  4001                           	opt callstack 23
  4002                           
  4003                           ;incstack = 0
  4004                           ;pulsonic.c: 79: do{LATA &= ~(1<<2);}while(0);
  4005  002010  9489               	bcf	3977,2,c	;volatile
  4006  002012  0012               	return		;funcret
  4007  002014                     __end_of_multiplexedDisp2_on:
  4008                           	opt callstack 0
  4009                           
  4010 ;; *************** function _multiplexedDisp2_off *****************
  4011 ;; Defined at:
  4012 ;;		line 73 in file "pulsonic.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4029 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4030 ;;Total ram usage:        0 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    5
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_multiplexedDisp_init
  4037 ;;		_multiplexedDisp_job
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text28
  4042  002014                     __ptext28:
  4043                           	opt callstack 0
  4044  002014                     _multiplexedDisp2_off:
  4045                           	opt callstack 23
  4046                           
  4047                           ;incstack = 0
  4048                           ;pulsonic.c: 75: do{LATA |= 1<<2;}while(0);
  4049  002014  8489               	bsf	3977,2,c	;volatile
  4050  002016  0012               	return		;funcret
  4051  002018                     __end_of_multiplexedDisp2_off:
  4052                           	opt callstack 0
  4053                           
  4054 ;; *************** function _multiplexedDisp1_on *****************
  4055 ;; Defined at:
  4056 ;;		line 68 in file "pulsonic.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4073 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4074 ;;Total ram usage:        0 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    5
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_multiplexedDisp_init
  4081 ;;		_multiplexedDisp_job
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text29
  4086  002018                     __ptext29:
  4087                           	opt callstack 0
  4088  002018                     _multiplexedDisp1_on:
  4089                           	opt callstack 23
  4090                           
  4091                           ;incstack = 0
  4092                           ;pulsonic.c: 70: do{LATA &= ~(1<<3);}while(0);
  4093  002018  9689               	bcf	3977,3,c	;volatile
  4094  00201A  0012               	return		;funcret
  4095  00201C                     __end_of_multiplexedDisp1_on:
  4096                           	opt callstack 0
  4097                           
  4098 ;; *************** function _multiplexedDisp1_off *****************
  4099 ;; Defined at:
  4100 ;;		line 64 in file "pulsonic.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4117 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    5
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_multiplexedDisp_init
  4125 ;;		_multiplexedDisp_job
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text30
  4130  00201C                     __ptext30:
  4131                           	opt callstack 0
  4132  00201C                     _multiplexedDisp1_off:
  4133                           	opt callstack 23
  4134                           
  4135                           ;incstack = 0
  4136                           ;pulsonic.c: 66: do{LATA |= 1<<3;}while(0);
  4137  00201C  8689               	bsf	3977,3,c	;volatile
  4138  00201E  0012               	return		;funcret
  4139  002020                     __end_of_multiplexedDisp1_off:
  4140                           	opt callstack 0
  4141                           
  4142 ;; *************** function _multiplexedDisp0_on *****************
  4143 ;; Defined at:
  4144 ;;		line 59 in file "pulsonic.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		status,2, status,0
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    5
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_multiplexedDisp_init
  4169 ;;		_multiplexedDisp_job
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text31
  4174  002020                     __ptext31:
  4175                           	opt callstack 0
  4176  002020                     _multiplexedDisp0_on:
  4177                           	opt callstack 23
  4178                           
  4179                           ;incstack = 0
  4180                           ;pulsonic.c: 61: do{LATA &= ~(1<<4);}while(0);
  4181  002020  9889               	bcf	3977,4,c	;volatile
  4182  002022  0012               	return		;funcret
  4183  002024                     __end_of_multiplexedDisp0_on:
  4184                           	opt callstack 0
  4185                           
  4186 ;; *************** function _multiplexedDisp0_off *****************
  4187 ;; Defined at:
  4188 ;;		line 55 in file "pulsonic.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		status,2, status,0
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4205 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4206 ;;Total ram usage:        0 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    5
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_multiplexedDisp_init
  4213 ;;		_multiplexedDisp_job
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text32
  4218  002024                     __ptext32:
  4219                           	opt callstack 0
  4220  002024                     _multiplexedDisp0_off:
  4221                           	opt callstack 23
  4222                           
  4223                           ;incstack = 0
  4224                           ;pulsonic.c: 57: do{LATA |= 1<<4;}while(0);
  4225  002024  8889               	bsf	3977,4,c	;volatile
  4226  002026  0012               	return		;funcret
  4227  002028                     __end_of_multiplexedDisp0_off:
  4228                           	opt callstack 0
  4229                           
  4230 ;; *************** function _multiplexedDisp4_on *****************
  4231 ;; Defined at:
  4232 ;;		line 95 in file "pulsonic.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    5
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_multiplexedDisp_init
  4257 ;;		_multiplexedDisp_job
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text33
  4262  002028                     __ptext33:
  4263                           	opt callstack 0
  4264  002028                     _multiplexedDisp4_on:
  4265                           	opt callstack 23
  4266                           
  4267                           ;incstack = 0
  4268                           ;pulsonic.c: 97: do{LATA &= ~(1<<0);}while(0);
  4269  002028  9089               	bcf	3977,0,c	;volatile
  4270  00202A  0012               	return		;funcret
  4271  00202C                     __end_of_multiplexedDisp4_on:
  4272                           	opt callstack 0
  4273                           
  4274 ;; *************** function _disp_show_quantity *****************
  4275 ;; Defined at:
  4276 ;;		line 190 in file "pulsonic.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  f               3   48[COMRAM] void 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  buff           10    0[BANK0 ] unsigned char [10]
  4281 ;;  real            3   10[BANK0 ] unsigned char [10]
  4282 ;;  I               2   16[BANK0 ] int 
  4283 ;;  i               1   18[BANK0 ] char 
  4284 ;;  last_pos        1   15[BANK0 ] char 
  4285 ;;  q               1   14[BANK0 ] char 
  4286 ;;  num             1   13[BANK0 ] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 3F/0
  4293 ;;		On exit  : 3E/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4296 ;;      Params:         3       0       0       0       0       0       0       0       0
  4297 ;;      Locals:         0      19       0       0       0       0       0       0       0
  4298 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4299 ;;      Totals:         4      19       0       0       0       0       0       0       0
  4300 ;;Total ram usage:       23 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    8
  4303 ;; This function calls:
  4304 ;;		___awtoft
  4305 ;;		___ftge
  4306 ;;		___ftmul
  4307 ;;		___ftsub
  4308 ;;		___fttol
  4309 ;;		_itoa
  4310 ;; This function is called by:
  4311 ;;		_main
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text34
  4316  000E3E                     __ptext34:
  4317                           	opt callstack 0
  4318  000E3E                     _disp_show_quantity:
  4319                           	opt callstack 22
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;pulsonic.c: 192: int16_t I;;pulsonic.c: 193: char buff[10];;pulsonic.c: 194: uint8_t nu
      +                          m;;pulsonic.c: 195: int8_t i;;pulsonic.c: 196: int8_t last_pos;;pulsonic.c: 197: int8_t 
      +                          q;;pulsonic.c: 198: double real;;pulsonic.c: 200: if (f>= 1000.0f)
  4323                           
  4324                           ;incstack = 0
  4325  000E3E  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4326  000E42  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4327  000E46  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4328  000E4A  0E00               	movlw	0
  4329  000E4C  6E19               	movwf	___ftge@ff2,c
  4330  000E4E  0E7A               	movlw	122
  4331  000E50  6E1A               	movwf	___ftge@ff2+1,c
  4332  000E52  0E44               	movlw	68
  4333  000E54  6E1B               	movwf	___ftge@ff2+2,c
  4334  000E56  EC01  F00D         	call	___ftge	;wreg free
  4335  000E5A  A0D8               	btfss	status,0,c
  4336  000E5C  D006               	goto	l3574
  4337                           
  4338                           ;pulsonic.c: 201: f=999.0f;
  4339  000E5E  0EC0               	movlw	192
  4340  000E60  6E31               	movwf	disp_show_quantity@f,c
  4341  000E62  0E79               	movlw	121
  4342  000E64  6E32               	movwf	disp_show_quantity@f+1,c
  4343  000E66  0E44               	movlw	68
  4344  000E68  6E33               	movwf	disp_show_quantity@f+2,c
  4345  000E6A                     l3574:
  4346                           
  4347                           ;pulsonic.c: 203: I = (int16_t)f;
  4348  000E6A  C031  F022         	movff	disp_show_quantity@f,___fttol@f1
  4349  000E6E  C032  F023         	movff	disp_show_quantity@f+1,___fttol@f1+1
  4350  000E72  C033  F024         	movff	disp_show_quantity@f+2,___fttol@f1+2
  4351  000E76  EC0C  F00B         	call	___fttol	;wreg free
  4352  000E7A  C022  F0E1         	movff	?___fttol,disp_show_quantity@I
  4353  000E7E  C023  F0E2         	movff	?___fttol+1,disp_show_quantity@I+1
  4354                           
  4355                           ;pulsonic.c: 204: real = f-I;
  4356  000E82  C031  F01F         	movff	disp_show_quantity@f,___ftsub@f1
  4357  000E86  C032  F020         	movff	disp_show_quantity@f+1,___ftsub@f1+1
  4358  000E8A  C033  F021         	movff	disp_show_quantity@f+2,___ftsub@f1+2
  4359  000E8E  C0E1  F013         	movff	disp_show_quantity@I,___awtoft@c
  4360  000E92  C0E2  F014         	movff	disp_show_quantity@I+1,___awtoft@c+1
  4361  000E96  EC04  F00F         	call	___awtoft	;wreg free
  4362  000E9A  C013  F022         	movff	?___awtoft,___ftsub@f2
  4363  000E9E  C014  F023         	movff	?___awtoft+1,___ftsub@f2+1
  4364  000EA2  C015  F024         	movff	?___awtoft+2,___ftsub@f2+2
  4365  000EA6  ECE4  F00E         	call	___ftsub	;wreg free
  4366  000EAA  C01F  F0DB         	movff	?___ftsub,disp_show_quantity@real
  4367  000EAE  C020  F0DC         	movff	?___ftsub+1,disp_show_quantity@real+1
  4368  000EB2  C021  F0DD         	movff	?___ftsub+2,disp_show_quantity@real+2
  4369                           
  4370                           ;pulsonic.c: 205: if (real > 0.0f)
  4371  000EB6  0E00               	movlw	0
  4372  000EB8  6E16               	movwf	___ftge@ff1,c
  4373  000EBA  0E00               	movlw	0
  4374  000EBC  6E17               	movwf	___ftge@ff1+1,c
  4375  000EBE  0E00               	movlw	0
  4376  000EC0  6E18               	movwf	___ftge@ff1+2,c
  4377  000EC2  C0DB  F019         	movff	disp_show_quantity@real,___ftge@ff2
  4378  000EC6  C0DC  F01A         	movff	disp_show_quantity@real+1,___ftge@ff2+1
  4379  000ECA  C0DD  F01B         	movff	disp_show_quantity@real+2,___ftge@ff2+2
  4380  000ECE  EC01  F00D         	call	___ftge	;wreg free
  4381  000ED2  B0D8               	btfsc	status,0,c
  4382  000ED4  D02A               	goto	l3584
  4383                           
  4384                           ;pulsonic.c: 206: {;pulsonic.c: 207: if (f<100.0f)
  4385  000ED6  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4386  000EDA  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4387  000EDE  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4388  000EE2  0E00               	movlw	0
  4389  000EE4  6E19               	movwf	___ftge@ff2,c
  4390  000EE6  0EC8               	movlw	200
  4391  000EE8  6E1A               	movwf	___ftge@ff2+1,c
  4392  000EEA  0E42               	movlw	66
  4393  000EEC  6E1B               	movwf	___ftge@ff2+2,c
  4394  000EEE  EC01  F00D         	call	___ftge	;wreg free
  4395  000EF2  B0D8               	btfsc	status,0,c
  4396  000EF4  D01A               	goto	l3584
  4397                           
  4398                           ;pulsonic.c: 208: {;pulsonic.c: 209: I = (int)(f*10);
  4399  000EF6  0E00               	movlw	0
  4400  000EF8  6E16               	movwf	___ftmul@f2,c
  4401  000EFA  0E20               	movlw	32
  4402  000EFC  6E17               	movwf	___ftmul@f2+1,c
  4403  000EFE  0E41               	movlw	65
  4404  000F00  6E18               	movwf	___ftmul@f2+2,c
  4405  000F02  C031  F013         	movff	disp_show_quantity@f,___ftmul@f1
  4406  000F06  C032  F014         	movff	disp_show_quantity@f+1,___ftmul@f1+1
  4407  000F0A  C033  F015         	movff	disp_show_quantity@f+2,___ftmul@f1+2
  4408  000F0E  EC92  F00A         	call	___ftmul	;wreg free
  4409  000F12  C013  F022         	movff	?___ftmul,___fttol@f1
  4410  000F16  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  4411  000F1A  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  4412  000F1E  EC0C  F00B         	call	___fttol	;wreg free
  4413  000F22  C022  F0E1         	movff	?___fttol,disp_show_quantity@I
  4414  000F26  C023  F0E2         	movff	?___fttol+1,disp_show_quantity@I+1
  4415  000F2A                     l3584:
  4416                           
  4417                           ;pulsonic.c: 210: };pulsonic.c: 212: };pulsonic.c: 213: itoa(buff, I, 10);
  4418  000F2A  0ED1               	movlw	low disp_show_quantity@buff
  4419  000F2C  6E1A               	movwf	itoa@buf,c
  4420  000F2E  C0E1  F01B         	movff	disp_show_quantity@I,itoa@val
  4421  000F32  C0E2  F01C         	movff	disp_show_quantity@I+1,itoa@val+1
  4422  000F36  0E00               	movlw	0
  4423  000F38  6E1E               	movwf	itoa@base+1,c
  4424  000F3A  0E0A               	movlw	10
  4425  000F3C  6E1D               	movwf	itoa@base,c
  4426  000F3E  EC20  F00F         	call	_itoa	;wreg free
  4427                           
  4428                           ;pulsonic.c: 215: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[OFF];
  4429  000F42  0E0B               	movlw	low _DISP7S_CHARS
  4430  000F44  6EF6               	movwf	tblptrl,c
  4431  000F46                     	if	1	;There is more than 1 active tblptr byte
  4432  000F46  0E08               	movlw	high _DISP7S_CHARS
  4433  000F48  6EF7               	movwf	tblptrh,c
  4434  000F4A                     	endif
  4435  000F4A                     	if	0	;There are less than 3 active tblptr bytes
  4436  000F4A                     	endif
  4437  000F4A  0008               	tblrd		*
  4438  000F4C  CFF5 F178          	movff	tablat,_pulsonic+120
  4439                           
  4440                           ;pulsonic.c: 216: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[OFF];
  4441  000F50  0E0B               	movlw	low _DISP7S_CHARS
  4442  000F52  6EF6               	movwf	tblptrl,c
  4443  000F54                     	if	1	;There is more than 1 active tblptr byte
  4444  000F54  0E08               	movlw	high _DISP7S_CHARS
  4445  000F56  6EF7               	movwf	tblptrh,c
  4446  000F58                     	endif
  4447  000F58                     	if	0	;There are less than 3 active tblptr bytes
  4448  000F58                     	endif
  4449  000F58  0008               	tblrd		*
  4450  000F5A  CFF5 F177          	movff	tablat,_pulsonic+119
  4451                           
  4452                           ;pulsonic.c: 217: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[OFF];
  4453  000F5E  0E0B               	movlw	low _DISP7S_CHARS
  4454  000F60  6EF6               	movwf	tblptrl,c
  4455  000F62                     	if	1	;There is more than 1 active tblptr byte
  4456  000F62  0E08               	movlw	high _DISP7S_CHARS
  4457  000F64  6EF7               	movwf	tblptrh,c
  4458  000F66                     	endif
  4459  000F66                     	if	0	;There are less than 3 active tblptr bytes
  4460  000F66                     	endif
  4461  000F66  0008               	tblrd		*
  4462  000F68  CFF5 F176          	movff	tablat,_pulsonic+118
  4463                           
  4464                           ;pulsonic.c: 219: if (real<0.01)
  4465  000F6C  C0DB  F016         	movff	disp_show_quantity@real,___ftge@ff1
  4466  000F70  C0DC  F017         	movff	disp_show_quantity@real+1,___ftge@ff1+1
  4467  000F74  C0DD  F018         	movff	disp_show_quantity@real+2,___ftge@ff1+2
  4468  000F78  0ED7               	movlw	215
  4469  000F7A  6E19               	movwf	___ftge@ff2,c
  4470  000F7C  0E23               	movlw	35
  4471  000F7E  6E1A               	movwf	___ftge@ff2+1,c
  4472  000F80  0E3C               	movlw	60
  4473  000F82  6E1B               	movwf	___ftge@ff2+2,c
  4474  000F84  EC01  F00D         	call	___ftge	;wreg free
  4475  000F88  B0D8               	btfsc	status,0,c
  4476  000F8A  D037               	goto	l3620
  4477                           
  4478                           ;pulsonic.c: 220: {;pulsonic.c: 221: if (I>99)
  4479  000F8C  0100               	movlb	0	; () banked
  4480  000F8E  BFE2               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4481  000F90  D008               	goto	l3598
  4482  000F92  51E2               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4483  000F94  E104               	bnz	u4450
  4484  000F96  0E64               	movlw	100
  4485  000F98  5DE1               	subwf	disp_show_quantity@I& (0+255),w,b
  4486  000F9A  A0D8               	btfss	status,0,c
  4487  000F9C  D002               	goto	l3598
  4488  000F9E                     u4450:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;pulsonic.c: 222: last_pos = 2;
  4492  000F9E  0E02               	movlw	2
  4493  000FA0  D00B               	goto	L4
  4494  000FA2                     l3598:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;pulsonic.c: 223: else if (I>9)
  4498  000FA2  BFE2               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4499  000FA4  D008               	goto	l3602
  4500  000FA6  51E2               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4501  000FA8  E104               	bnz	u4460
  4502  000FAA  0E0A               	movlw	10
  4503  000FAC  5DE1               	subwf	disp_show_quantity@I& (0+255),w,b
  4504  000FAE  A0D8               	btfss	status,0,c
  4505  000FB0  D002               	goto	l3602
  4506  000FB2                     u4460:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;pulsonic.c: 224: last_pos = 1;
  4510  000FB2  0E01               	movlw	1
  4511  000FB4  D001               	goto	L4
  4512  000FB6                     l3602:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;pulsonic.c: 225: else;pulsonic.c: 226: last_pos = 0;
  4516  000FB6  0E00               	movlw	0
  4517  000FB8                     L4:
  4518  000FB8  6FE0               	movwf	disp_show_quantity@last_pos& (0+255),b
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;pulsonic.c: 228: q = 0;
  4522  000FBA  0E00               	movlw	0
  4523  000FBC  6FDF               	movwf	disp_show_quantity@q& (0+255),b
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;pulsonic.c: 229: for (i=last_pos; i>=0; i--)
  4527  000FBE  C0E0  F0E3         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4528  000FC2                     l3606:
  4529                           
  4530                           ; BSR set to: 0
  4531  000FC2  BFE3               	btfsc	disp_show_quantity@i& (0+255),7,b
  4532  000FC4  0012               	return	
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;pulsonic.c: 230: {;pulsonic.c: 231: num = buff[i] - 0x30;
  4536  000FC6  51E3               	movf	disp_show_quantity@i& (0+255),w,b
  4537  000FC8  0FD1               	addlw	low disp_show_quantity@buff
  4538  000FCA  6ED9               	movwf	fsr2l,c
  4539  000FCC  6ADA               	clrf	fsr2h,c
  4540  000FCE  50DF               	movf	indf2,w,c
  4541  000FD0  0FD0               	addlw	208
  4542  000FD2  6FDE               	movwf	disp_show_quantity@num& (0+255),b
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;pulsonic.c: 232: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4546  000FD4  51DE               	movf	disp_show_quantity@num& (0+255),w,b
  4547  000FD6  0F01               	addlw	low _DISP7S_NUMS
  4548  000FD8  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4549  000FDA  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4550  000FDE                     	if	1	;There is more than 1 active tblptr byte
  4551  000FDE  0E08               	movlw	high __smallconst
  4552  000FE0  6EF7               	movwf	tblptrh,c
  4553  000FE2                     	endif
  4554  000FE2                     	if	0	;tblptru may be non-zero
  4555  000FE2                     	endif
  4556  000FE2                     	if	0	;tblptru may be non-zero
  4557  000FE2                     	endif
  4558  000FE2  0E76               	movlw	low (_pulsonic+118)
  4559  000FE4  25DF               	addwf	disp_show_quantity@q& (0+255),w,b
  4560  000FE6  6ED9               	movwf	fsr2l,c
  4561  000FE8  6ADA               	clrf	fsr2h,c
  4562  000FEA  0E01               	movlw	high (_pulsonic+118)
  4563  000FEC  22DA               	addwfc	fsr2h,f,c
  4564  000FEE  0008               	tblrd		*
  4565  000FF0  CFF5 FFDF          	movff	tablat,indf2
  4566                           
  4567                           ; BSR set to: 0
  4568  000FF4  2BDF               	incf	disp_show_quantity@q& (0+255),f,b
  4569                           
  4570                           ; BSR set to: 0
  4571  000FF6  07E3               	decf	disp_show_quantity@i& (0+255),f,b
  4572  000FF8  D7E4               	goto	l3606
  4573  000FFA                     l3620:
  4574                           
  4575                           ;pulsonic.c: 235: else;pulsonic.c: 236: {;pulsonic.c: 237: if (f<100.0)
  4576  000FFA  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4577  000FFE  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4578  001002  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4579  001006  0E00               	movlw	0
  4580  001008  6E19               	movwf	___ftge@ff2,c
  4581  00100A  0EC8               	movlw	200
  4582  00100C  6E1A               	movwf	___ftge@ff2+1,c
  4583  00100E  0E42               	movlw	66
  4584  001010  6E1B               	movwf	___ftge@ff2+2,c
  4585  001012  EC01  F00D         	call	___ftge	;wreg free
  4586  001016  B0D8               	btfsc	status,0,c
  4587  001018  D041               	goto	l3654
  4588                           
  4589                           ;pulsonic.c: 238: {;pulsonic.c: 242: if (I>99)
  4590  00101A  0100               	movlb	0	; () banked
  4591  00101C  BFE2               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4592  00101E  D008               	goto	l3626
  4593  001020  51E2               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4594  001022  E104               	bnz	u4490
  4595  001024  0E64               	movlw	100
  4596  001026  5DE1               	subwf	disp_show_quantity@I& (0+255),w,b
  4597  001028  A0D8               	btfss	status,0,c
  4598  00102A  D002               	goto	l3626
  4599  00102C                     u4490:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;pulsonic.c: 243: {last_pos = 2;}
  4603  00102C  0E02               	movlw	2
  4604  00102E  D012               	goto	L5
  4605  001030                     l3626:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;pulsonic.c: 244: else if (I>9)
  4609  001030  BFE2               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4610  001032  D008               	goto	l3630
  4611  001034  51E2               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4612  001036  E104               	bnz	u4500
  4613  001038  0E0A               	movlw	10
  4614  00103A  5DE1               	subwf	disp_show_quantity@I& (0+255),w,b
  4615  00103C  A0D8               	btfss	status,0,c
  4616  00103E  D002               	goto	l3630
  4617  001040                     u4500:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;pulsonic.c: 245: {last_pos = 1;}
  4621  001040  0E01               	movlw	1
  4622  001042  D008               	goto	L5
  4623  001044                     l3630:
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;pulsonic.c: 246: else;pulsonic.c: 247: {;pulsonic.c: 248: pulsonic.display7s[QUANT_DIG_
      +                          1] = DISP7S_NUMS[0];
  4627  001044  0E01               	movlw	low _DISP7S_NUMS
  4628  001046  6EF6               	movwf	tblptrl,c
  4629  001048                     	if	1	;There is more than 1 active tblptr byte
  4630  001048  0E08               	movlw	high _DISP7S_NUMS
  4631  00104A  6EF7               	movwf	tblptrh,c
  4632  00104C                     	endif
  4633  00104C                     	if	0	;There are less than 3 active tblptr bytes
  4634  00104C                     	endif
  4635  00104C  0008               	tblrd		*
  4636  00104E  CFF5 F177          	movff	tablat,_pulsonic+119
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;pulsonic.c: 249: last_pos = 0;
  4640  001052  0E00               	movlw	0
  4641  001054                     L5:
  4642  001054  6FE0               	movwf	disp_show_quantity@last_pos& (0+255),b
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;pulsonic.c: 250: };pulsonic.c: 252: q = 0;
  4646  001056  0E00               	movlw	0
  4647  001058  6FDF               	movwf	disp_show_quantity@q& (0+255),b
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;pulsonic.c: 253: for (i=last_pos; i>=0; i--)
  4651  00105A  C0E0  F0E3         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4652  00105E                     l3638:
  4653                           
  4654                           ; BSR set to: 0
  4655  00105E  BFE3               	btfsc	disp_show_quantity@i& (0+255),7,b
  4656  001060  D01A               	goto	l3652
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;pulsonic.c: 254: {;pulsonic.c: 255: num = buff[i] - 0x30;
  4660  001062  51E3               	movf	disp_show_quantity@i& (0+255),w,b
  4661  001064  0FD1               	addlw	low disp_show_quantity@buff
  4662  001066  6ED9               	movwf	fsr2l,c
  4663  001068  6ADA               	clrf	fsr2h,c
  4664  00106A  50DF               	movf	indf2,w,c
  4665  00106C  0FD0               	addlw	208
  4666  00106E  6FDE               	movwf	disp_show_quantity@num& (0+255),b
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;pulsonic.c: 256: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4670  001070  51DE               	movf	disp_show_quantity@num& (0+255),w,b
  4671  001072  0F01               	addlw	low _DISP7S_NUMS
  4672  001074  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4673  001076  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4674  00107A                     	if	1	;There is more than 1 active tblptr byte
  4675  00107A  0E08               	movlw	high __smallconst
  4676  00107C  6EF7               	movwf	tblptrh,c
  4677  00107E                     	endif
  4678  00107E                     	if	0	;tblptru may be non-zero
  4679  00107E                     	endif
  4680  00107E                     	if	0	;tblptru may be non-zero
  4681  00107E                     	endif
  4682  00107E  0E76               	movlw	low (_pulsonic+118)
  4683  001080  25DF               	addwf	disp_show_quantity@q& (0+255),w,b
  4684  001082  6ED9               	movwf	fsr2l,c
  4685  001084  6ADA               	clrf	fsr2h,c
  4686  001086  0E01               	movlw	high (_pulsonic+118)
  4687  001088  22DA               	addwfc	fsr2h,f,c
  4688  00108A  0008               	tblrd		*
  4689  00108C  CFF5 FFDF          	movff	tablat,indf2
  4690                           
  4691                           ; BSR set to: 0
  4692  001090  2BDF               	incf	disp_show_quantity@q& (0+255),f,b
  4693                           
  4694                           ; BSR set to: 0
  4695  001092  07E3               	decf	disp_show_quantity@i& (0+255),f,b
  4696  001094  D7E4               	goto	l3638
  4697  001096                     l3652:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;pulsonic.c: 257: };pulsonic.c: 258: pulsonic.display7s[QUANT_DIG_1] |= 0x80;
  4701  001096  0101               	movlb	1	; () banked
  4702  001098  8F77               	bsf	(_pulsonic+119)& (0+255),7,b
  4703                           
  4704                           ;pulsonic.c: 259: }
  4705  00109A  0012               	return	
  4706  00109C                     l3654:
  4707                           
  4708                           ;pulsonic.c: 260: else;pulsonic.c: 261: {;pulsonic.c: 262: q = 0;
  4709  00109C  0E00               	movlw	0
  4710  00109E  0100               	movlb	0	; () banked
  4711  0010A0  6FDF               	movwf	disp_show_quantity@q& (0+255),b
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;pulsonic.c: 264: for (i=last_pos; i>=0; i--)
  4715  0010A2  0E02               	movlw	2
  4716  0010A4  6FE3               	movwf	disp_show_quantity@i& (0+255),b
  4717  0010A6                     l3662:
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;pulsonic.c: 265: {;pulsonic.c: 266: num = buff[i] - 0x30;
  4721  0010A6  51E3               	movf	disp_show_quantity@i& (0+255),w,b
  4722  0010A8  0FD1               	addlw	low disp_show_quantity@buff
  4723  0010AA  6ED9               	movwf	fsr2l,c
  4724  0010AC  6ADA               	clrf	fsr2h,c
  4725  0010AE  50DF               	movf	indf2,w,c
  4726  0010B0  0FD0               	addlw	208
  4727  0010B2  6FDE               	movwf	disp_show_quantity@num& (0+255),b
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;pulsonic.c: 267: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4731  0010B4  51DE               	movf	disp_show_quantity@num& (0+255),w,b
  4732  0010B6  0F01               	addlw	low _DISP7S_NUMS
  4733  0010B8  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4734  0010BA  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4735  0010BE                     	if	1	;There is more than 1 active tblptr byte
  4736  0010BE  0E08               	movlw	high __smallconst
  4737  0010C0  6EF7               	movwf	tblptrh,c
  4738  0010C2                     	endif
  4739  0010C2                     	if	0	;tblptru may be non-zero
  4740  0010C2                     	endif
  4741  0010C2                     	if	0	;tblptru may be non-zero
  4742  0010C2                     	endif
  4743  0010C2  0E76               	movlw	low (_pulsonic+118)
  4744  0010C4  25DF               	addwf	disp_show_quantity@q& (0+255),w,b
  4745  0010C6  6ED9               	movwf	fsr2l,c
  4746  0010C8  6ADA               	clrf	fsr2h,c
  4747  0010CA  0E01               	movlw	high (_pulsonic+118)
  4748  0010CC  22DA               	addwfc	fsr2h,f,c
  4749  0010CE  0008               	tblrd		*
  4750  0010D0  CFF5 FFDF          	movff	tablat,indf2
  4751                           
  4752                           ; BSR set to: 0
  4753  0010D4  2BDF               	incf	disp_show_quantity@q& (0+255),f,b
  4754                           
  4755                           ; BSR set to: 0
  4756  0010D6  07E3               	decf	disp_show_quantity@i& (0+255),f,b
  4757                           
  4758                           ; BSR set to: 0
  4759  0010D8  BFE3               	btfsc	disp_show_quantity@i& (0+255),7,b
  4760  0010DA  0012               	return	
  4761  0010DC  D7E4               	goto	l3662
  4762  0010DE                     __end_of_disp_show_quantity:
  4763                           	opt callstack 0
  4764                           
  4765 ;; *************** function _itoa *****************
  4766 ;; Defined at:
  4767 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  buf             1   25[COMRAM] PTR unsigned char 
  4770 ;;		 -> disp_show_quantity@buff(10), 
  4771 ;;  val             2   26[COMRAM] int 
  4772 ;;  base            2   28[COMRAM] int 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  cp              1    0        PTR unsigned char 
  4775 ;;		 -> disp_show_quantity@buff(10), 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      PTR unsigned char 
  4778 ;; Registers used:
  4779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4785 ;;      Params:         5       0       0       0       0       0       0       0       0
  4786 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4788 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4789 ;;Total ram usage:        6 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:    7
  4792 ;; This function calls:
  4793 ;;		_utoa
  4794 ;; This function is called by:
  4795 ;;		_disp_show_quantity
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text35
  4800  001E40                     __ptext35:
  4801                           	opt callstack 0
  4802  001E40                     _itoa:
  4803                           	opt callstack 22
  4804                           
  4805                           ;incstack = 0
  4806  001E40  AE1C               	btfss	itoa@val+1,7,c
  4807  001E42  D00A               	goto	l3452
  4808  001E44  501A               	movf	itoa@buf,w,c
  4809  001E46  6ED9               	movwf	fsr2l,c
  4810  001E48  6ADA               	clrf	fsr2h,c
  4811  001E4A  0E2D               	movlw	45
  4812  001E4C  6EDF               	movwf	indf2,c
  4813  001E4E  2A1A               	incf	itoa@buf,f,c
  4814  001E50  6C1B               	negf	itoa@val,c
  4815  001E52  1E1C               	comf	itoa@val+1,f,c
  4816  001E54  B0D8               	btfsc	status,0,c
  4817  001E56  2A1C               	incf	itoa@val+1,f,c
  4818  001E58                     l3452:
  4819  001E58  C01A  F012         	movff	itoa@buf,utoa@buf
  4820  001E5C  C01B  F013         	movff	itoa@val,utoa@val
  4821  001E60  C01C  F014         	movff	itoa@val+1,utoa@val+1
  4822  001E64  C01D  F015         	movff	itoa@base,utoa@base
  4823  001E68  C01E  F016         	movff	itoa@base+1,utoa@base+1
  4824  001E6C  EC77  F00C         	call	_utoa	;wreg free
  4825  001E70  0012               	return		;funcret
  4826  001E72                     __end_of_itoa:
  4827                           	opt callstack 0
  4828                           
  4829 ;; *************** function _utoa *****************
  4830 ;; Defined at:
  4831 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  buf             1   17[COMRAM] PTR unsigned char 
  4834 ;;		 -> disp_show_quantity@buff(10), 
  4835 ;;  val             2   18[COMRAM] unsigned int 
  4836 ;;  base            2   20[COMRAM] int 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;  v               2   22[COMRAM] unsigned int 
  4839 ;;  c               1   24[COMRAM] unsigned char 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      PTR unsigned char 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4849 ;;      Params:         5       0       0       0       0       0       0       0       0
  4850 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4852 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4853 ;;Total ram usage:        8 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    6
  4856 ;; This function calls:
  4857 ;;		___lwdiv
  4858 ;;		___lwmod
  4859 ;; This function is called by:
  4860 ;;		_itoa
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text36
  4865  0018EE                     __ptext36:
  4866                           	opt callstack 0
  4867  0018EE                     _utoa:
  4868                           	opt callstack 22
  4869                           
  4870                           ;incstack = 0
  4871  0018EE  C013  F017         	movff	utoa@val,utoa@v
  4872  0018F2  C014  F018         	movff	utoa@val+1,utoa@v+1
  4873  0018F6                     l3320:
  4874  0018F6  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  4875  0018FA  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  4876  0018FE  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  4877  001902  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  4878  001906  EC9F  F00D         	call	___lwdiv	;wreg free
  4879  00190A  C00B  F017         	movff	?___lwdiv,utoa@v
  4880  00190E  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  4881  001912  2A12               	incf	utoa@buf,f,c
  4882  001914  5017               	movf	utoa@v,w,c
  4883  001916  1018               	iorwf	utoa@v+1,w,c
  4884  001918  A4D8               	btfss	status,2,c
  4885  00191A  D7ED               	goto	l3320
  4886  00191C  5012               	movf	utoa@buf,w,c
  4887  00191E  6ED9               	movwf	fsr2l,c
  4888  001920  6ADA               	clrf	fsr2h,c
  4889  001922  0E00               	movlw	0
  4890  001924  6EDF               	movwf	indf2,c
  4891  001926  0612               	decf	utoa@buf,f,c
  4892  001928                     l3330:
  4893  001928  C013  F00B         	movff	utoa@val,___lwmod@dividend
  4894  00192C  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  4895  001930  C015  F00D         	movff	utoa@base,___lwmod@divisor
  4896  001934  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  4897  001938  EC82  F00E         	call	___lwmod	;wreg free
  4898  00193C  500B               	movf	?___lwmod,w,c
  4899  00193E  6E19               	movwf	utoa@c,c
  4900  001940  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  4901  001944  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  4902  001948  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  4903  00194C  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  4904  001950  EC9F  F00D         	call	___lwdiv	;wreg free
  4905  001954  C00B  F013         	movff	?___lwdiv,utoa@val
  4906  001958  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  4907  00195C  0E09               	movlw	9
  4908  00195E  6419               	cpfsgt	utoa@c,c
  4909  001960  D002               	goto	l1174
  4910  001962  0E07               	movlw	7
  4911  001964  2619               	addwf	utoa@c,f,c
  4912  001966                     l1174:
  4913  001966  0E30               	movlw	48
  4914  001968  2619               	addwf	utoa@c,f,c
  4915  00196A  5012               	movf	utoa@buf,w,c
  4916  00196C  6ED9               	movwf	fsr2l,c
  4917  00196E  6ADA               	clrf	fsr2h,c
  4918  001970  C019  FFDF         	movff	utoa@c,indf2
  4919  001974  0612               	decf	utoa@buf,f,c
  4920  001976  5013               	movf	utoa@val,w,c
  4921  001978  1014               	iorwf	utoa@val+1,w,c
  4922  00197A  A4D8               	btfss	status,2,c
  4923  00197C  D7D5               	goto	l3330
  4924                           
  4925                           ;	Return value of _utoa is never used
  4926  00197E  2A12               	incf	utoa@buf,f,c
  4927  001980  0012               	return		;funcret
  4928  001982                     __end_of_utoa:
  4929                           	opt callstack 0
  4930                           
  4931 ;; *************** function ___lwmod *****************
  4932 ;; Defined at:
  4933 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  dividend        2   10[COMRAM] unsigned int 
  4936 ;;  divisor         2   12[COMRAM] unsigned int 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  counter         1   14[COMRAM] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  2   10[COMRAM] unsigned int 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4948 ;;      Params:         4       0       0       0       0       0       0       0       0
  4949 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4951 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4952 ;;Total ram usage:        5 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    5
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_utoa
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text37
  4963  001D04                     __ptext37:
  4964                           	opt callstack 0
  4965  001D04                     ___lwmod:
  4966                           	opt callstack 22
  4967                           
  4968                           ;incstack = 0
  4969  001D04  500D               	movf	___lwmod@divisor,w,c
  4970  001D06  100E               	iorwf	___lwmod@divisor+1,w,c
  4971  001D08  B4D8               	btfsc	status,2,c
  4972  001D0A  D018               	goto	l992
  4973  001D0C  0E01               	movlw	1
  4974  001D0E  6E0F               	movwf	___lwmod@counter,c
  4975  001D10  D004               	goto	l3216
  4976  001D12                     l3214:
  4977  001D12  90D8               	bcf	status,0,c
  4978  001D14  360D               	rlcf	___lwmod@divisor,f,c
  4979  001D16  360E               	rlcf	___lwmod@divisor+1,f,c
  4980  001D18  2A0F               	incf	___lwmod@counter,f,c
  4981  001D1A                     l3216:
  4982  001D1A  AE0E               	btfss	___lwmod@divisor+1,7,c
  4983  001D1C  D7FA               	goto	l3214
  4984  001D1E                     u3590:
  4985  001D1E  500D               	movf	___lwmod@divisor,w,c
  4986  001D20  5C0B               	subwf	___lwmod@dividend,w,c
  4987  001D22  500E               	movf	___lwmod@divisor+1,w,c
  4988  001D24  580C               	subwfb	___lwmod@dividend+1,w,c
  4989  001D26  A0D8               	btfss	status,0,c
  4990  001D28  D004               	goto	l3222
  4991  001D2A  500D               	movf	___lwmod@divisor,w,c
  4992  001D2C  5E0B               	subwf	___lwmod@dividend,f,c
  4993  001D2E  500E               	movf	___lwmod@divisor+1,w,c
  4994  001D30  5A0C               	subwfb	___lwmod@dividend+1,f,c
  4995  001D32                     l3222:
  4996  001D32  90D8               	bcf	status,0,c
  4997  001D34  320E               	rrcf	___lwmod@divisor+1,f,c
  4998  001D36  320D               	rrcf	___lwmod@divisor,f,c
  4999  001D38  2E0F               	decfsz	___lwmod@counter,f,c
  5000  001D3A  D7F1               	goto	u3590
  5001  001D3C                     l992:
  5002  001D3C  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  5003  001D40  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  5004  001D44  0012               	return		;funcret
  5005  001D46                     __end_of___lwmod:
  5006                           	opt callstack 0
  5007                           
  5008 ;; *************** function ___lwdiv *****************
  5009 ;; Defined at:
  5010 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  dividend        2   10[COMRAM] unsigned int 
  5013 ;;  divisor         2   12[COMRAM] unsigned int 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  quotient        2   15[COMRAM] unsigned int 
  5016 ;;  counter         1   14[COMRAM] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  2   10[COMRAM] unsigned int 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5026 ;;      Params:         4       0       0       0       0       0       0       0       0
  5027 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5029 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5030 ;;Total ram usage:        7 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    5
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_utoa
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text38
  5041  001B3E                     __ptext38:
  5042                           	opt callstack 0
  5043  001B3E                     ___lwdiv:
  5044                           	opt callstack 22
  5045                           
  5046                           ;incstack = 0
  5047  001B3E  0E00               	movlw	0
  5048  001B40  6E11               	movwf	___lwdiv@quotient+1,c
  5049  001B42  0E00               	movlw	0
  5050  001B44  6E10               	movwf	___lwdiv@quotient,c
  5051  001B46  500D               	movf	___lwdiv@divisor,w,c
  5052  001B48  100E               	iorwf	___lwdiv@divisor+1,w,c
  5053  001B4A  B4D8               	btfsc	status,2,c
  5054  001B4C  D01C               	goto	l982
  5055  001B4E  0E01               	movlw	1
  5056  001B50  6E0F               	movwf	___lwdiv@counter,c
  5057  001B52  D004               	goto	l3196
  5058  001B54                     l3194:
  5059  001B54  90D8               	bcf	status,0,c
  5060  001B56  360D               	rlcf	___lwdiv@divisor,f,c
  5061  001B58  360E               	rlcf	___lwdiv@divisor+1,f,c
  5062  001B5A  2A0F               	incf	___lwdiv@counter,f,c
  5063  001B5C                     l3196:
  5064  001B5C  AE0E               	btfss	___lwdiv@divisor+1,7,c
  5065  001B5E  D7FA               	goto	l3194
  5066  001B60                     u3560:
  5067  001B60  90D8               	bcf	status,0,c
  5068  001B62  3610               	rlcf	___lwdiv@quotient,f,c
  5069  001B64  3611               	rlcf	___lwdiv@quotient+1,f,c
  5070  001B66  500D               	movf	___lwdiv@divisor,w,c
  5071  001B68  5C0B               	subwf	___lwdiv@dividend,w,c
  5072  001B6A  500E               	movf	___lwdiv@divisor+1,w,c
  5073  001B6C  580C               	subwfb	___lwdiv@dividend+1,w,c
  5074  001B6E  A0D8               	btfss	status,0,c
  5075  001B70  D005               	goto	l3206
  5076  001B72  500D               	movf	___lwdiv@divisor,w,c
  5077  001B74  5E0B               	subwf	___lwdiv@dividend,f,c
  5078  001B76  500E               	movf	___lwdiv@divisor+1,w,c
  5079  001B78  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  5080  001B7A  8010               	bsf	___lwdiv@quotient,0,c
  5081  001B7C                     l3206:
  5082  001B7C  90D8               	bcf	status,0,c
  5083  001B7E  320E               	rrcf	___lwdiv@divisor+1,f,c
  5084  001B80  320D               	rrcf	___lwdiv@divisor,f,c
  5085  001B82  2E0F               	decfsz	___lwdiv@counter,f,c
  5086  001B84  D7ED               	goto	u3560
  5087  001B86                     l982:
  5088  001B86  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  5089  001B8A  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5090  001B8E  0012               	return		;funcret
  5091  001B90                     __end_of___lwdiv:
  5092                           	opt callstack 0
  5093                           
  5094 ;; *************** function ___fttol *****************
  5095 ;; Defined at:
  5096 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  f1              3   33[COMRAM] float 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  lval            4   43[COMRAM] unsigned long 
  5101 ;;  exp1            1   47[COMRAM] unsigned char 
  5102 ;;  sign1           1   42[COMRAM] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  4   33[COMRAM] long 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5112 ;;      Params:         4       0       0       0       0       0       0       0       0
  5113 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5114 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5115 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5116 ;;Total ram usage:       15 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    5
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_disp_show_quantity
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text39
  5127  001618                     __ptext39:
  5128                           	opt callstack 0
  5129  001618                     ___fttol:
  5130                           	opt callstack 24
  5131                           
  5132                           ;incstack = 0
  5133  001618  C024  F026         	movff	___fttol@f1+2,??___fttol
  5134  00161C  6A27               	clrf	(??___fttol+1)& (0+255),c
  5135  00161E  6A28               	clrf	(??___fttol+2)& (0+255),c
  5136  001620  3423               	rlcf	___fttol@f1+1,w,c
  5137  001622  3626               	rlcf	??___fttol& (0+255),f,c
  5138  001624  E301               	bnc	u4331
  5139  001626  8027               	bsf	(??___fttol+1)& (0+255),0,c
  5140  001628                     u4331:
  5141  001628  5026               	movf	??___fttol,w,c
  5142  00162A  6E30               	movwf	___fttol@exp1,c
  5143  00162C  5030               	movf	___fttol@exp1,w,c
  5144  00162E  A4D8               	btfss	status,2,c
  5145  001630  D009               	goto	l3530
  5146  001632                     u4340:
  5147  001632  0E00               	movlw	0
  5148  001634  6E22               	movwf	?___fttol,c
  5149  001636  0E00               	movlw	0
  5150  001638  6E23               	movwf	?___fttol+1,c
  5151  00163A  0E00               	movlw	0
  5152  00163C  6E24               	movwf	?___fttol+2,c
  5153  00163E  0E00               	movlw	0
  5154  001640  6E25               	movwf	?___fttol+3,c
  5155  001642  0012               	return	
  5156  001644                     l3530:
  5157  001644  0E17               	movlw	23
  5158  001646  6E26               	movwf	??___fttol& (0+255),c
  5159  001648  C022  F027         	movff	___fttol@f1,??___fttol+1
  5160  00164C  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  5161  001650  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  5162  001654  2826               	incf	??___fttol,w,c
  5163  001656  6E2A               	movwf	(??___fttol+4)& (0+255),c
  5164  001658  D004               	goto	u4350
  5165  00165A                     u4355:
  5166  00165A  90D8               	bcf	status,0,c
  5167  00165C  3229               	rrcf	??___fttol+3,f,c
  5168  00165E  3228               	rrcf	??___fttol+2,f,c
  5169  001660  3227               	rrcf	??___fttol+1,f,c
  5170  001662                     u4350:
  5171  001662  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  5172  001664  D7FA               	goto	u4355
  5173  001666  5027               	movf	??___fttol+1,w,c
  5174  001668  6E2B               	movwf	___fttol@sign1,c
  5175  00166A  8E23               	bsf	___fttol@f1+1,7,c
  5176  00166C  0EFF               	movlw	255
  5177  00166E  1622               	andwf	___fttol@f1,f,c
  5178  001670  0EFF               	movlw	255
  5179  001672  1623               	andwf	___fttol@f1+1,f,c
  5180  001674  0E00               	movlw	0
  5181  001676  1624               	andwf	___fttol@f1+2,f,c
  5182  001678  5022               	movf	___fttol@f1,w,c
  5183  00167A  6E2C               	movwf	___fttol@lval,c
  5184  00167C  5023               	movf	___fttol@f1+1,w,c
  5185  00167E  6E2D               	movwf	___fttol@lval+1,c
  5186  001680  5024               	movf	___fttol@f1+2,w,c
  5187  001682  6E2E               	movwf	___fttol@lval+2,c
  5188  001684  6A2F               	clrf	___fttol@lval+3,c
  5189  001686  0E8E               	movlw	142
  5190  001688  5E30               	subwf	___fttol@exp1,f,c
  5191  00168A  AE30               	btfss	___fttol@exp1,7,c
  5192  00168C  D00D               	goto	l3552
  5193  00168E  5030               	movf	___fttol@exp1,w,c
  5194  001690  0A80               	xorlw	128
  5195  001692  0F8F               	addlw	143
  5196  001694  A0D8               	btfss	status,0,c
  5197  001696  D7CD               	goto	u4340
  5198  001698                     l3548:
  5199  001698  90D8               	bcf	status,0,c
  5200  00169A  322F               	rrcf	___fttol@lval+3,f,c
  5201  00169C  322E               	rrcf	___fttol@lval+2,f,c
  5202  00169E  322D               	rrcf	___fttol@lval+1,f,c
  5203  0016A0  322C               	rrcf	___fttol@lval,f,c
  5204  0016A2  3E30               	incfsz	___fttol@exp1,f,c
  5205  0016A4  D7F9               	goto	l3548
  5206  0016A6  D00D               	goto	u4390
  5207  0016A8                     l3552:
  5208  0016A8  0E17               	movlw	23
  5209  0016AA  6430               	cpfsgt	___fttol@exp1,c
  5210  0016AC  D007               	goto	l3560
  5211  0016AE  D7C1               	goto	u4340
  5212  0016B0                     l3558:
  5213  0016B0  90D8               	bcf	status,0,c
  5214  0016B2  362C               	rlcf	___fttol@lval,f,c
  5215  0016B4  362D               	rlcf	___fttol@lval+1,f,c
  5216  0016B6  362E               	rlcf	___fttol@lval+2,f,c
  5217  0016B8  362F               	rlcf	___fttol@lval+3,f,c
  5218  0016BA  0630               	decf	___fttol@exp1,f,c
  5219  0016BC                     l3560:
  5220  0016BC  5030               	movf	___fttol@exp1,w,c
  5221  0016BE  A4D8               	btfss	status,2,c
  5222  0016C0  D7F7               	goto	l3558
  5223  0016C2                     u4390:
  5224  0016C2  502B               	movf	___fttol@sign1,w,c
  5225  0016C4  B4D8               	btfsc	status,2,c
  5226  0016C6  D008               	goto	l3566
  5227  0016C8  1E2F               	comf	___fttol@lval+3,f,c
  5228  0016CA  1E2E               	comf	___fttol@lval+2,f,c
  5229  0016CC  1E2D               	comf	___fttol@lval+1,f,c
  5230  0016CE  6C2C               	negf	___fttol@lval,c
  5231  0016D0  0E00               	movlw	0
  5232  0016D2  222D               	addwfc	___fttol@lval+1,f,c
  5233  0016D4  222E               	addwfc	___fttol@lval+2,f,c
  5234  0016D6  222F               	addwfc	___fttol@lval+3,f,c
  5235  0016D8                     l3566:
  5236  0016D8  C02C  F022         	movff	___fttol@lval,?___fttol
  5237  0016DC  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  5238  0016E0  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  5239  0016E4  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  5240  0016E8  0012               	return		;funcret
  5241  0016EA                     __end_of___fttol:
  5242                           	opt callstack 0
  5243                           
  5244 ;; *************** function ___ftsub *****************
  5245 ;; Defined at:
  5246 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  f1              3   30[COMRAM] float 
  5249 ;;  f2              3   33[COMRAM] float 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  3   30[COMRAM] float 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5261 ;;      Params:         6       0       0       0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5264 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5265 ;;Total ram usage:        6 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    7
  5268 ;; This function calls:
  5269 ;;		___ftadd
  5270 ;; This function is called by:
  5271 ;;		_disp_show_quantity
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text40
  5276  001DC8                     __ptext40:
  5277                           	opt callstack 0
  5278  001DC8                     ___ftsub:
  5279                           	opt callstack 22
  5280                           
  5281                           ;incstack = 0
  5282  001DC8  5022               	movf	___ftsub@f2,w,c
  5283  001DCA  1023               	iorwf	___ftsub@f2+1,w,c
  5284  001DCC  1024               	iorwf	___ftsub@f2+2,w,c
  5285  001DCE  B4D8               	btfsc	status,2,c
  5286  001DD0  D006               	goto	l3508
  5287  001DD2  0E00               	movlw	0
  5288  001DD4  1A22               	xorwf	___ftsub@f2,f,c
  5289  001DD6  0E00               	movlw	0
  5290  001DD8  1A23               	xorwf	___ftsub@f2+1,f,c
  5291  001DDA  0E80               	movlw	128
  5292  001DDC  1A24               	xorwf	___ftsub@f2+2,f,c
  5293  001DDE                     l3508:
  5294  001DDE  C01F  F013         	movff	___ftsub@f1,___ftadd@f1
  5295  001DE2  C020  F014         	movff	___ftsub@f1+1,___ftadd@f1+1
  5296  001DE6  C021  F015         	movff	___ftsub@f1+2,___ftadd@f1+2
  5297  001DEA  C022  F016         	movff	___ftsub@f2,___ftadd@f2
  5298  001DEE  C023  F017         	movff	___ftsub@f2+1,___ftadd@f2+1
  5299  001DF2  C024  F018         	movff	___ftsub@f2+2,___ftadd@f2+2
  5300  001DF6  EC6F  F008         	call	___ftadd	;wreg free
  5301  001DFA  C013  F01F         	movff	?___ftadd,?___ftsub
  5302  001DFE  C014  F020         	movff	?___ftadd+1,?___ftsub+1
  5303  001E02  C015  F021         	movff	?___ftadd+2,?___ftsub+2
  5304  001E06  0012               	return		;funcret
  5305  001E08                     __end_of___ftsub:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function ___ftadd *****************
  5309 ;; Defined at:
  5310 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  f1              3   18[COMRAM] float 
  5313 ;;  f2              3   21[COMRAM] float 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  exp1            1   29[COMRAM] unsigned char 
  5316 ;;  exp2            1   28[COMRAM] unsigned char 
  5317 ;;  sign            1   27[COMRAM] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  3   18[COMRAM] float 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5327 ;;      Params:         6       0       0       0       0       0       0       0       0
  5328 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5329 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5330 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5331 ;;Total ram usage:       12 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    6
  5334 ;; This function calls:
  5335 ;;		___ftpack
  5336 ;; This function is called by:
  5337 ;;		___ftsub
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text41
  5342  0010DE                     __ptext41:
  5343                           	opt callstack 0
  5344  0010DE                     ___ftadd:
  5345                           	opt callstack 22
  5346                           
  5347                           ;incstack = 0
  5348  0010DE  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  5349  0010E2  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  5350  0010E4  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  5351  0010E6  3414               	rlcf	___ftadd@f1+1,w,c
  5352  0010E8  3619               	rlcf	??___ftadd& (0+255),f,c
  5353  0010EA  E301               	bnc	u3611
  5354  0010EC  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  5355  0010EE                     u3611:
  5356  0010EE  5019               	movf	??___ftadd,w,c
  5357  0010F0  6E1E               	movwf	___ftadd@exp1,c
  5358  0010F2  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  5359  0010F6  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  5360  0010F8  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  5361  0010FA  3417               	rlcf	___ftadd@f2+1,w,c
  5362  0010FC  3619               	rlcf	??___ftadd& (0+255),f,c
  5363  0010FE  E301               	bnc	u3621
  5364  001100  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  5365  001102                     u3621:
  5366  001102  5019               	movf	??___ftadd,w,c
  5367  001104  6E1D               	movwf	___ftadd@exp2,c
  5368  001106  501E               	movf	___ftadd@exp1,w,c
  5369  001108  B4D8               	btfsc	status,2,c
  5370  00110A  D00A               	goto	u3650
  5371  00110C  501D               	movf	___ftadd@exp2,w,c
  5372  00110E  5C1E               	subwf	___ftadd@exp1,w,c
  5373  001110  B0D8               	btfsc	status,0,c
  5374  001112  D00D               	goto	l3234
  5375  001114  501E               	movf	___ftadd@exp1,w,c
  5376  001116  5C1D               	subwf	___ftadd@exp2,w,c
  5377  001118  6E19               	movwf	??___ftadd& (0+255),c
  5378  00111A  0E18               	movlw	24
  5379  00111C  6419               	cpfsgt	??___ftadd,c
  5380  00111E  D007               	goto	l3234
  5381  001120                     u3650:
  5382  001120  C016  F013         	movff	___ftadd@f2,?___ftadd
  5383  001124  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  5384  001128  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  5385  00112C  0012               	return	
  5386  00112E                     l3234:
  5387  00112E  501D               	movf	___ftadd@exp2,w,c
  5388  001130  B4D8               	btfsc	status,2,c
  5389  001132  D00A               	goto	u3680
  5390  001134  501E               	movf	___ftadd@exp1,w,c
  5391  001136  5C1D               	subwf	___ftadd@exp2,w,c
  5392  001138  B0D8               	btfsc	status,0,c
  5393  00113A  D00D               	goto	l3240
  5394  00113C  501D               	movf	___ftadd@exp2,w,c
  5395  00113E  5C1E               	subwf	___ftadd@exp1,w,c
  5396  001140  6E19               	movwf	??___ftadd& (0+255),c
  5397  001142  0E18               	movlw	24
  5398  001144  6419               	cpfsgt	??___ftadd,c
  5399  001146  D007               	goto	l3240
  5400  001148                     u3680:
  5401  001148  C013  F013         	movff	___ftadd@f1,?___ftadd
  5402  00114C  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  5403  001150  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  5404  001154  0012               	return	
  5405  001156                     l3240:
  5406  001156  0E06               	movlw	6
  5407  001158  6E1C               	movwf	___ftadd@sign,c
  5408  00115A  BE15               	btfsc	___ftadd@f1+2,7,c
  5409  00115C  8E1C               	bsf	___ftadd@sign,7,c
  5410  00115E  BE18               	btfsc	___ftadd@f2+2,7,c
  5411  001160  8C1C               	bsf	___ftadd@sign,6,c
  5412  001162  8E14               	bsf	___ftadd@f1+1,7,c
  5413  001164  0EFF               	movlw	255
  5414  001166  1613               	andwf	___ftadd@f1,f,c
  5415  001168  0EFF               	movlw	255
  5416  00116A  1614               	andwf	___ftadd@f1+1,f,c
  5417  00116C  0E00               	movlw	0
  5418  00116E  1615               	andwf	___ftadd@f1+2,f,c
  5419  001170  8E17               	bsf	___ftadd@f2+1,7,c
  5420  001172  0EFF               	movlw	255
  5421  001174  1616               	andwf	___ftadd@f2,f,c
  5422  001176  0EFF               	movlw	255
  5423  001178  1617               	andwf	___ftadd@f2+1,f,c
  5424  00117A  0E00               	movlw	0
  5425  00117C  1618               	andwf	___ftadd@f2+2,f,c
  5426  00117E  501D               	movf	___ftadd@exp2,w,c
  5427  001180  5C1E               	subwf	___ftadd@exp1,w,c
  5428  001182  B0D8               	btfsc	status,0,c
  5429  001184  D01B               	goto	l3266
  5430  001186                     u3710:
  5431  001186  90D8               	bcf	status,0,c
  5432  001188  3616               	rlcf	___ftadd@f2,f,c
  5433  00118A  3617               	rlcf	___ftadd@f2+1,f,c
  5434  00118C  3618               	rlcf	___ftadd@f2+2,f,c
  5435  00118E  061D               	decf	___ftadd@exp2,f,c
  5436  001190  501E               	movf	___ftadd@exp1,w,c
  5437  001192  181D               	xorwf	___ftadd@exp2,w,c
  5438  001194  B4D8               	btfsc	status,2,c
  5439  001196  D00D               	goto	l3264
  5440  001198  061C               	decf	___ftadd@sign,f,c
  5441  00119A  C01C  F019         	movff	___ftadd@sign,??___ftadd
  5442  00119E  0E07               	movlw	7
  5443  0011A0  1619               	andwf	??___ftadd,f,c
  5444  0011A2  B4D8               	btfsc	status,2,c
  5445  0011A4  D006               	goto	l3264
  5446  0011A6  D7EF               	goto	u3710
  5447  0011A8                     l3262:
  5448  0011A8  90D8               	bcf	status,0,c
  5449  0011AA  3215               	rrcf	___ftadd@f1+2,f,c
  5450  0011AC  3214               	rrcf	___ftadd@f1+1,f,c
  5451  0011AE  3213               	rrcf	___ftadd@f1,f,c
  5452  0011B0  2A1E               	incf	___ftadd@exp1,f,c
  5453  0011B2                     l3264:
  5454  0011B2  501D               	movf	___ftadd@exp2,w,c
  5455  0011B4  181E               	xorwf	___ftadd@exp1,w,c
  5456  0011B6  B4D8               	btfsc	status,2,c
  5457  0011B8  D01F               	goto	u3780
  5458  0011BA  D7F6               	goto	l3262
  5459  0011BC                     l3266:
  5460  0011BC  501E               	movf	___ftadd@exp1,w,c
  5461  0011BE  5C1D               	subwf	___ftadd@exp2,w,c
  5462  0011C0  B0D8               	btfsc	status,0,c
  5463  0011C2  D01A               	goto	u3780
  5464  0011C4                     u3750:
  5465  0011C4  90D8               	bcf	status,0,c
  5466  0011C6  3613               	rlcf	___ftadd@f1,f,c
  5467  0011C8  3614               	rlcf	___ftadd@f1+1,f,c
  5468  0011CA  3615               	rlcf	___ftadd@f1+2,f,c
  5469  0011CC  061E               	decf	___ftadd@exp1,f,c
  5470  0011CE  501E               	movf	___ftadd@exp1,w,c
  5471  0011D0  181D               	xorwf	___ftadd@exp2,w,c
  5472  0011D2  B4D8               	btfsc	status,2,c
  5473  0011D4  D00D               	goto	l3276
  5474  0011D6  061C               	decf	___ftadd@sign,f,c
  5475  0011D8  C01C  F019         	movff	___ftadd@sign,??___ftadd
  5476  0011DC  0E07               	movlw	7
  5477  0011DE  1619               	andwf	??___ftadd,f,c
  5478  0011E0  B4D8               	btfsc	status,2,c
  5479  0011E2  D006               	goto	l3276
  5480  0011E4  D7EF               	goto	u3750
  5481  0011E6                     l3274:
  5482  0011E6  90D8               	bcf	status,0,c
  5483  0011E8  3218               	rrcf	___ftadd@f2+2,f,c
  5484  0011EA  3217               	rrcf	___ftadd@f2+1,f,c
  5485  0011EC  3216               	rrcf	___ftadd@f2,f,c
  5486  0011EE  2A1D               	incf	___ftadd@exp2,f,c
  5487  0011F0                     l3276:
  5488  0011F0  501D               	movf	___ftadd@exp2,w,c
  5489  0011F2  181E               	xorwf	___ftadd@exp1,w,c
  5490  0011F4  A4D8               	btfss	status,2,c
  5491  0011F6  D7F7               	goto	l3274
  5492  0011F8                     u3780:
  5493  0011F8  AE1C               	btfss	___ftadd@sign,7,c
  5494  0011FA  D00C               	goto	l833
  5495  0011FC  0EFF               	movlw	255
  5496  0011FE  1A13               	xorwf	___ftadd@f1,f,c
  5497  001200  0EFF               	movlw	255
  5498  001202  1A14               	xorwf	___ftadd@f1+1,f,c
  5499  001204  0EFF               	movlw	255
  5500  001206  1A15               	xorwf	___ftadd@f1+2,f,c
  5501  001208  0E01               	movlw	1
  5502  00120A  2613               	addwf	___ftadd@f1,f,c
  5503  00120C  0E00               	movlw	0
  5504  00120E  2214               	addwfc	___ftadd@f1+1,f,c
  5505  001210  0E00               	movlw	0
  5506  001212  2215               	addwfc	___ftadd@f1+2,f,c
  5507  001214                     l833:
  5508  001214  AC1C               	btfss	___ftadd@sign,6,c
  5509  001216  D00C               	goto	l3282
  5510  001218  0EFF               	movlw	255
  5511  00121A  1A16               	xorwf	___ftadd@f2,f,c
  5512  00121C  0EFF               	movlw	255
  5513  00121E  1A17               	xorwf	___ftadd@f2+1,f,c
  5514  001220  0EFF               	movlw	255
  5515  001222  1A18               	xorwf	___ftadd@f2+2,f,c
  5516  001224  0E01               	movlw	1
  5517  001226  2616               	addwf	___ftadd@f2,f,c
  5518  001228  0E00               	movlw	0
  5519  00122A  2217               	addwfc	___ftadd@f2+1,f,c
  5520  00122C  0E00               	movlw	0
  5521  00122E  2218               	addwfc	___ftadd@f2+2,f,c
  5522  001230                     l3282:
  5523  001230  0E00               	movlw	0
  5524  001232  6E1C               	movwf	___ftadd@sign,c
  5525  001234  5013               	movf	___ftadd@f1,w,c
  5526  001236  2616               	addwf	___ftadd@f2,f,c
  5527  001238  5014               	movf	___ftadd@f1+1,w,c
  5528  00123A  2217               	addwfc	___ftadd@f2+1,f,c
  5529  00123C  5015               	movf	___ftadd@f1+2,w,c
  5530  00123E  2218               	addwfc	___ftadd@f2+2,f,c
  5531  001240  AE18               	btfss	___ftadd@f2+2,7,c
  5532  001242  D00E               	goto	l3292
  5533  001244  0EFF               	movlw	255
  5534  001246  1A16               	xorwf	___ftadd@f2,f,c
  5535  001248  0EFF               	movlw	255
  5536  00124A  1A17               	xorwf	___ftadd@f2+1,f,c
  5537  00124C  0EFF               	movlw	255
  5538  00124E  1A18               	xorwf	___ftadd@f2+2,f,c
  5539  001250  0E01               	movlw	1
  5540  001252  2616               	addwf	___ftadd@f2,f,c
  5541  001254  0E00               	movlw	0
  5542  001256  2217               	addwfc	___ftadd@f2+1,f,c
  5543  001258  0E00               	movlw	0
  5544  00125A  2218               	addwfc	___ftadd@f2+2,f,c
  5545  00125C  0E01               	movlw	1
  5546  00125E  6E1C               	movwf	___ftadd@sign,c
  5547  001260                     l3292:
  5548  001260  C016  F00B         	movff	___ftadd@f2,___ftpack@arg
  5549  001264  C017  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  5550  001268  C018  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  5551  00126C  C01E  F00E         	movff	___ftadd@exp1,___ftpack@exp
  5552  001270  C01C  F00F         	movff	___ftadd@sign,___ftpack@sign
  5553  001274  ECD0  F00B         	call	___ftpack	;wreg free
  5554  001278  C00B  F013         	movff	?___ftpack,?___ftadd
  5555  00127C  C00C  F014         	movff	?___ftpack+1,?___ftadd+1
  5556  001280  C00D  F015         	movff	?___ftpack+2,?___ftadd+2
  5557  001284  0012               	return		;funcret
  5558  001286                     __end_of___ftadd:
  5559                           	opt callstack 0
  5560                           
  5561 ;; *************** function ___ftmul *****************
  5562 ;; Defined at:
  5563 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  f1              3   18[COMRAM] float 
  5566 ;;  f2              3   21[COMRAM] float 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  5569 ;;  sign            1   32[COMRAM] unsigned char 
  5570 ;;  cntr            1   31[COMRAM] unsigned char 
  5571 ;;  exp             1   27[COMRAM] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  3   18[COMRAM] float 
  5574 ;; Registers used:
  5575 ;;		wreg, status,2, status,0, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5581 ;;      Params:         6       0       0       0       0       0       0       0       0
  5582 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5583 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5584 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5585 ;;Total ram usage:       15 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    6
  5588 ;; This function calls:
  5589 ;;		___ftpack
  5590 ;; This function is called by:
  5591 ;;		_disp_show_quantity
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text42
  5596  001524                     __ptext42:
  5597                           	opt callstack 0
  5598  001524                     ___ftmul:
  5599                           	opt callstack 23
  5600                           
  5601                           ;incstack = 0
  5602  001524  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  5603  001528  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  5604  00152A  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  5605  00152C  3414               	rlcf	___ftmul@f1+1,w,c
  5606  00152E  3619               	rlcf	??___ftmul& (0+255),f,c
  5607  001530  E301               	bnc	u4251
  5608  001532  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  5609  001534                     u4251:
  5610  001534  5019               	movf	??___ftmul,w,c
  5611  001536  6E1C               	movwf	___ftmul@exp,c
  5612  001538  501C               	movf	___ftmul@exp,w,c
  5613  00153A  A4D8               	btfss	status,2,c
  5614  00153C  D007               	goto	l3462
  5615  00153E  0E00               	movlw	0
  5616  001540  6E13               	movwf	?___ftmul,c
  5617  001542  0E00               	movlw	0
  5618  001544  6E14               	movwf	?___ftmul+1,c
  5619  001546  0E00               	movlw	0
  5620  001548  6E15               	movwf	?___ftmul+2,c
  5621  00154A  0012               	return	
  5622  00154C                     l3462:
  5623  00154C  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  5624  001550  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  5625  001552  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  5626  001554  3417               	rlcf	___ftmul@f2+1,w,c
  5627  001556  3619               	rlcf	??___ftmul& (0+255),f,c
  5628  001558  E301               	bnc	u4271
  5629  00155A  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  5630  00155C                     u4271:
  5631  00155C  5019               	movf	??___ftmul,w,c
  5632  00155E  6E21               	movwf	___ftmul@sign,c
  5633  001560  5021               	movf	___ftmul@sign,w,c
  5634  001562  A4D8               	btfss	status,2,c
  5635  001564  D007               	goto	l3468
  5636  001566  0E00               	movlw	0
  5637  001568  6E13               	movwf	?___ftmul,c
  5638  00156A  0E00               	movlw	0
  5639  00156C  6E14               	movwf	?___ftmul+1,c
  5640  00156E  0E00               	movlw	0
  5641  001570  6E15               	movwf	?___ftmul+2,c
  5642  001572  0012               	return	
  5643  001574                     l3468:
  5644  001574  5021               	movf	___ftmul@sign,w,c
  5645  001576  0F7B               	addlw	123
  5646  001578  261C               	addwf	___ftmul@exp,f,c
  5647  00157A  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  5648  00157E  5018               	movf	___ftmul@f2+2,w,c
  5649  001580  1A21               	xorwf	___ftmul@sign,f,c
  5650  001582  0E80               	movlw	128
  5651  001584  1621               	andwf	___ftmul@sign,f,c
  5652  001586  8E14               	bsf	___ftmul@f1+1,7,c
  5653  001588  8E17               	bsf	___ftmul@f2+1,7,c
  5654  00158A  0EFF               	movlw	255
  5655  00158C  1616               	andwf	___ftmul@f2,f,c
  5656  00158E  0EFF               	movlw	255
  5657  001590  1617               	andwf	___ftmul@f2+1,f,c
  5658  001592  0E00               	movlw	0
  5659  001594  1618               	andwf	___ftmul@f2+2,f,c
  5660  001596  0E00               	movlw	0
  5661  001598  6E1D               	movwf	___ftmul@f3_as_product,c
  5662  00159A  0E00               	movlw	0
  5663  00159C  6E1E               	movwf	___ftmul@f3_as_product+1,c
  5664  00159E  0E00               	movlw	0
  5665  0015A0  6E1F               	movwf	___ftmul@f3_as_product+2,c
  5666  0015A2  0E07               	movlw	7
  5667  0015A4  6E20               	movwf	___ftmul@cntr,c
  5668  0015A6                     l3482:
  5669  0015A6  A013               	btfss	___ftmul@f1,0,c
  5670  0015A8  D006               	goto	l3486
  5671  0015AA  5016               	movf	___ftmul@f2,w,c
  5672  0015AC  261D               	addwf	___ftmul@f3_as_product,f,c
  5673  0015AE  5017               	movf	___ftmul@f2+1,w,c
  5674  0015B0  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  5675  0015B2  5018               	movf	___ftmul@f2+2,w,c
  5676  0015B4  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  5677  0015B6                     l3486:
  5678  0015B6  90D8               	bcf	status,0,c
  5679  0015B8  3215               	rrcf	___ftmul@f1+2,f,c
  5680  0015BA  3214               	rrcf	___ftmul@f1+1,f,c
  5681  0015BC  3213               	rrcf	___ftmul@f1,f,c
  5682  0015BE  90D8               	bcf	status,0,c
  5683  0015C0  3616               	rlcf	___ftmul@f2,f,c
  5684  0015C2  3617               	rlcf	___ftmul@f2+1,f,c
  5685  0015C4  3618               	rlcf	___ftmul@f2+2,f,c
  5686  0015C6  2E20               	decfsz	___ftmul@cntr,f,c
  5687  0015C8  D7EE               	goto	l3482
  5688  0015CA  0E09               	movlw	9
  5689  0015CC  6E20               	movwf	___ftmul@cntr,c
  5690  0015CE                     l3492:
  5691  0015CE  A013               	btfss	___ftmul@f1,0,c
  5692  0015D0  D006               	goto	l3496
  5693  0015D2  5016               	movf	___ftmul@f2,w,c
  5694  0015D4  261D               	addwf	___ftmul@f3_as_product,f,c
  5695  0015D6  5017               	movf	___ftmul@f2+1,w,c
  5696  0015D8  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  5697  0015DA  5018               	movf	___ftmul@f2+2,w,c
  5698  0015DC  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  5699  0015DE                     l3496:
  5700  0015DE  90D8               	bcf	status,0,c
  5701  0015E0  3215               	rrcf	___ftmul@f1+2,f,c
  5702  0015E2  3214               	rrcf	___ftmul@f1+1,f,c
  5703  0015E4  3213               	rrcf	___ftmul@f1,f,c
  5704  0015E6  90D8               	bcf	status,0,c
  5705  0015E8  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  5706  0015EA  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  5707  0015EC  321D               	rrcf	___ftmul@f3_as_product,f,c
  5708  0015EE  2E20               	decfsz	___ftmul@cntr,f,c
  5709  0015F0  D7EE               	goto	l3492
  5710  0015F2  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  5711  0015F6  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5712  0015FA  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5713  0015FE  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  5714  001602  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  5715  001606  ECD0  F00B         	call	___ftpack	;wreg free
  5716  00160A  C00B  F013         	movff	?___ftpack,?___ftmul
  5717  00160E  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  5718  001612  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  5719  001616  0012               	return		;funcret
  5720  001618                     __end_of___ftmul:
  5721                           	opt callstack 0
  5722                           
  5723 ;; *************** function ___ftge *****************
  5724 ;; Defined at:
  5725 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  ff1             3   21[COMRAM] float 
  5728 ;;  ff2             3   24[COMRAM] float 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;		None               void
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5740 ;;      Params:         6       0       0       0       0       0       0       0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5742 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5743 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5744 ;;Total ram usage:        9 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    5
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_ikey_parsing
  5751 ;;		_disp_show_quantity
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text43
  5756  001A02                     __ptext43:
  5757                           	opt callstack 0
  5758  001A02                     ___ftge:
  5759                           	opt callstack 23
  5760                           
  5761                           ;incstack = 0
  5762  001A02  AE18               	btfss	___ftge@ff1+2,7,c
  5763  001A04  D00F               	goto	l3300
  5764  001A06  0E00               	movlw	0
  5765  001A08  6E1C               	movwf	??___ftge& (0+255),c
  5766  001A0A  0E00               	movlw	0
  5767  001A0C  6E1D               	movwf	(??___ftge+1)& (0+255),c
  5768  001A0E  0E80               	movlw	128
  5769  001A10  6E1E               	movwf	(??___ftge+2)& (0+255),c
  5770  001A12  5016               	movf	___ftge@ff1,w,c
  5771  001A14  5C1C               	subwf	??___ftge,w,c
  5772  001A16  6E16               	movwf	___ftge@ff1,c
  5773  001A18  5017               	movf	___ftge@ff1+1,w,c
  5774  001A1A  581D               	subwfb	??___ftge+1,w,c
  5775  001A1C  6E17               	movwf	___ftge@ff1+1,c
  5776  001A1E  5018               	movf	___ftge@ff1+2,w,c
  5777  001A20  581E               	subwfb	??___ftge+2,w,c
  5778  001A22  6E18               	movwf	___ftge@ff1+2,c
  5779  001A24                     l3300:
  5780  001A24  AE1B               	btfss	___ftge@ff2+2,7,c
  5781  001A26  D00F               	goto	l3304
  5782  001A28  0E00               	movlw	0
  5783  001A2A  6E1C               	movwf	??___ftge& (0+255),c
  5784  001A2C  0E00               	movlw	0
  5785  001A2E  6E1D               	movwf	(??___ftge+1)& (0+255),c
  5786  001A30  0E80               	movlw	128
  5787  001A32  6E1E               	movwf	(??___ftge+2)& (0+255),c
  5788  001A34  5019               	movf	___ftge@ff2,w,c
  5789  001A36  5C1C               	subwf	??___ftge,w,c
  5790  001A38  6E19               	movwf	___ftge@ff2,c
  5791  001A3A  501A               	movf	___ftge@ff2+1,w,c
  5792  001A3C  581D               	subwfb	??___ftge+1,w,c
  5793  001A3E  6E1A               	movwf	___ftge@ff2+1,c
  5794  001A40  501B               	movf	___ftge@ff2+2,w,c
  5795  001A42  581E               	subwfb	??___ftge+2,w,c
  5796  001A44  6E1B               	movwf	___ftge@ff2+2,c
  5797  001A46                     l3304:
  5798  001A46  0E00               	movlw	0
  5799  001A48  1A16               	xorwf	___ftge@ff1,f,c
  5800  001A4A  0E00               	movlw	0
  5801  001A4C  1A17               	xorwf	___ftge@ff1+1,f,c
  5802  001A4E  0E80               	movlw	128
  5803  001A50  1A18               	xorwf	___ftge@ff1+2,f,c
  5804  001A52  0E00               	movlw	0
  5805  001A54  1A19               	xorwf	___ftge@ff2,f,c
  5806  001A56  0E00               	movlw	0
  5807  001A58  1A1A               	xorwf	___ftge@ff2+1,f,c
  5808  001A5A  0E80               	movlw	128
  5809  001A5C  1A1B               	xorwf	___ftge@ff2+2,f,c
  5810  001A5E  5019               	movf	___ftge@ff2,w,c
  5811  001A60  5C16               	subwf	___ftge@ff1,w,c
  5812  001A62  501A               	movf	___ftge@ff2+1,w,c
  5813  001A64  5817               	subwfb	___ftge@ff1+1,w,c
  5814  001A66  501B               	movf	___ftge@ff2+2,w,c
  5815  001A68  5818               	subwfb	___ftge@ff1+2,w,c
  5816  001A6A  B0D8               	btfsc	status,0,c
  5817  001A6C  D002               	goto	l3310
  5818  001A6E  90D8               	bcf	status,0,c
  5819  001A70  0012               	return	
  5820  001A72                     l3310:
  5821  001A72  80D8               	bsf	status,0,c
  5822  001A74  0012               	return		;funcret
  5823  001A76                     __end_of___ftge:
  5824                           	opt callstack 0
  5825                           
  5826 ;; *************** function ___awtoft *****************
  5827 ;; Defined at:
  5828 ;;		line 32 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awtoft.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  c               2   18[COMRAM] int 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  sign            1   21[COMRAM] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  3   18[COMRAM] float 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5842 ;;      Params:         3       0       0       0       0       0       0       0       0
  5843 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5845 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5846 ;;Total ram usage:        4 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    6
  5849 ;; This function calls:
  5850 ;;		___ftpack
  5851 ;; This function is called by:
  5852 ;;		_disp_show_quantity
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text44
  5857  001E08                     __ptext44:
  5858                           	opt callstack 0
  5859  001E08                     ___awtoft:
  5860                           	opt callstack 23
  5861                           
  5862                           ;incstack = 0
  5863  001E08  0E00               	movlw	0
  5864  001E0A  6E16               	movwf	___awtoft@sign,c
  5865  001E0C  AE14               	btfss	___awtoft@c+1,7,c
  5866  001E0E  D006               	goto	l3520
  5867  001E10  6C13               	negf	___awtoft@c,c
  5868  001E12  1E14               	comf	___awtoft@c+1,f,c
  5869  001E14  B0D8               	btfsc	status,0,c
  5870  001E16  2A14               	incf	___awtoft@c+1,f,c
  5871  001E18  0E01               	movlw	1
  5872  001E1A  6E16               	movwf	___awtoft@sign,c
  5873  001E1C                     l3520:
  5874  001E1C  C013  F00B         	movff	___awtoft@c,___ftpack@arg
  5875  001E20  C014  F00C         	movff	___awtoft@c+1,___ftpack@arg+1
  5876  001E24  6A0D               	clrf	___ftpack@arg+2,c
  5877  001E26  0E8E               	movlw	142
  5878  001E28  6E0E               	movwf	___ftpack@exp,c
  5879  001E2A  C016  F00F         	movff	___awtoft@sign,___ftpack@sign
  5880  001E2E  ECD0  F00B         	call	___ftpack	;wreg free
  5881  001E32  C00B  F013         	movff	?___ftpack,?___awtoft
  5882  001E36  C00C  F014         	movff	?___ftpack+1,?___awtoft+1
  5883  001E3A  C00D  F015         	movff	?___ftpack+2,?___awtoft+2
  5884  001E3E  0012               	return		;funcret
  5885  001E40                     __end_of___awtoft:
  5886                           	opt callstack 0
  5887                           
  5888 ;; *************** function ___ftpack *****************
  5889 ;; Defined at:
  5890 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  arg             3   10[COMRAM] unsigned um
  5893 ;;  exp             1   13[COMRAM] unsigned char 
  5894 ;;  sign            1   14[COMRAM] unsigned char 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  3   10[COMRAM] float 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5906 ;;      Params:         5       0       0       0       0       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5908 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5909 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5910 ;;Total ram usage:        8 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    5
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		___awtoft
  5917 ;;		___ftadd
  5918 ;;		___ftmul
  5919 ;;		___lwtoft
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text45
  5924  0017A0                     __ptext45:
  5925                           	opt callstack 0
  5926  0017A0                     ___ftpack:
  5927                           	opt callstack 22
  5928                           
  5929                           ;incstack = 0
  5930  0017A0  500E               	movf	___ftpack@exp,w,c
  5931  0017A2  B4D8               	btfsc	status,2,c
  5932  0017A4  D005               	goto	u3480
  5933  0017A6  500B               	movf	___ftpack@arg,w,c
  5934  0017A8  100C               	iorwf	___ftpack@arg+1,w,c
  5935  0017AA  100D               	iorwf	___ftpack@arg+2,w,c
  5936  0017AC  A4D8               	btfss	status,2,c
  5937  0017AE  D00C               	goto	l3162
  5938  0017B0                     u3480:
  5939  0017B0  0E00               	movlw	0
  5940  0017B2  6E0B               	movwf	?___ftpack,c
  5941  0017B4  0E00               	movlw	0
  5942  0017B6  6E0C               	movwf	?___ftpack+1,c
  5943  0017B8  0E00               	movlw	0
  5944  0017BA  6E0D               	movwf	?___ftpack+2,c
  5945  0017BC  0012               	return	
  5946  0017BE                     l3160:
  5947  0017BE  2A0E               	incf	___ftpack@exp,f,c
  5948  0017C0  90D8               	bcf	status,0,c
  5949  0017C2  320D               	rrcf	___ftpack@arg+2,f,c
  5950  0017C4  320C               	rrcf	___ftpack@arg+1,f,c
  5951  0017C6  320B               	rrcf	___ftpack@arg,f,c
  5952  0017C8                     l3162:
  5953  0017C8  0E00               	movlw	0
  5954  0017CA  140B               	andwf	___ftpack@arg,w,c
  5955  0017CC  6E10               	movwf	??___ftpack& (0+255),c
  5956  0017CE  0E00               	movlw	0
  5957  0017D0  140C               	andwf	___ftpack@arg+1,w,c
  5958  0017D2  6E11               	movwf	(??___ftpack+1)& (0+255),c
  5959  0017D4  0EFE               	movlw	254
  5960  0017D6  140D               	andwf	___ftpack@arg+2,w,c
  5961  0017D8  6E12               	movwf	(??___ftpack+2)& (0+255),c
  5962  0017DA  5010               	movf	??___ftpack,w,c
  5963  0017DC  1011               	iorwf	??___ftpack+1,w,c
  5964  0017DE  1012               	iorwf	??___ftpack+2,w,c
  5965  0017E0  B4D8               	btfsc	status,2,c
  5966  0017E2  D00C               	goto	l3168
  5967  0017E4  D7EC               	goto	l3160
  5968  0017E6                     l3164:
  5969  0017E6  2A0E               	incf	___ftpack@exp,f,c
  5970  0017E8  0E01               	movlw	1
  5971  0017EA  260B               	addwf	___ftpack@arg,f,c
  5972  0017EC  0E00               	movlw	0
  5973  0017EE  220C               	addwfc	___ftpack@arg+1,f,c
  5974  0017F0  0E00               	movlw	0
  5975  0017F2  220D               	addwfc	___ftpack@arg+2,f,c
  5976  0017F4  90D8               	bcf	status,0,c
  5977  0017F6  320D               	rrcf	___ftpack@arg+2,f,c
  5978  0017F8  320C               	rrcf	___ftpack@arg+1,f,c
  5979  0017FA  320B               	rrcf	___ftpack@arg,f,c
  5980  0017FC                     l3168:
  5981  0017FC  0E00               	movlw	0
  5982  0017FE  140B               	andwf	___ftpack@arg,w,c
  5983  001800  6E10               	movwf	??___ftpack& (0+255),c
  5984  001802  0E00               	movlw	0
  5985  001804  140C               	andwf	___ftpack@arg+1,w,c
  5986  001806  6E11               	movwf	(??___ftpack+1)& (0+255),c
  5987  001808  0EFF               	movlw	255
  5988  00180A  140D               	andwf	___ftpack@arg+2,w,c
  5989  00180C  6E12               	movwf	(??___ftpack+2)& (0+255),c
  5990  00180E  5010               	movf	??___ftpack,w,c
  5991  001810  1011               	iorwf	??___ftpack+1,w,c
  5992  001812  1012               	iorwf	??___ftpack+2,w,c
  5993  001814  B4D8               	btfsc	status,2,c
  5994  001816  D006               	goto	l3172
  5995  001818  D7E6               	goto	l3164
  5996  00181A                     l3170:
  5997  00181A  060E               	decf	___ftpack@exp,f,c
  5998  00181C  90D8               	bcf	status,0,c
  5999  00181E  360B               	rlcf	___ftpack@arg,f,c
  6000  001820  360C               	rlcf	___ftpack@arg+1,f,c
  6001  001822  360D               	rlcf	___ftpack@arg+2,f,c
  6002  001824                     l3172:
  6003  001824  BE0C               	btfsc	___ftpack@arg+1,7,c
  6004  001826  D003               	goto	u3520
  6005  001828  0E02               	movlw	2
  6006  00182A  600E               	cpfslt	___ftpack@exp,c
  6007  00182C  D7F6               	goto	l3170
  6008  00182E                     u3520:
  6009  00182E  A00E               	btfss	___ftpack@exp,0,c
  6010  001830  9E0C               	bcf	___ftpack@arg+1,7,c
  6011  001832  90D8               	bcf	status,0,c
  6012  001834  320E               	rrcf	___ftpack@exp,f,c
  6013  001836  500E               	movf	___ftpack@exp,w,c
  6014  001838  120D               	iorwf	___ftpack@arg+2,f,c
  6015  00183A  500F               	movf	___ftpack@sign,w,c
  6016  00183C  A4D8               	btfss	status,2,c
  6017  00183E  8E0D               	bsf	___ftpack@arg+2,7,c
  6018  001840  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  6019  001844  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  6020  001848  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  6021  00184C  0012               	return		;funcret
  6022  00184E                     __end_of___ftpack:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function _INTERRUPCION *****************
  6026 ;; Defined at:
  6027 ;;		line 216 in file "main.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6043 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6044 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6045 ;;Total ram usage:        6 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    4
  6048 ;; This function calls:
  6049 ;;		_mpap_job
  6050 ;; This function is called by:
  6051 ;;		Interrupt level 2
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	intcode
  6056  000008                     __pintcode:
  6057                           	opt callstack 0
  6058  000008                     _INTERRUPCION:
  6059                           	opt callstack 22
  6060                           
  6061                           ;incstack = 0
  6062  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6063  00000A  ED16  F00E         	call	int_func,f	;refresh shadow registers
  6064                           
  6065                           	psect	intcode_body
  6066  001C2C                     __pintcode_body:
  6067                           	opt callstack 22
  6068  001C2C                     int_func:
  6069                           	opt callstack 22
  6070  001C2C  0006               	pop		; remove dummy address from shadow register refresh
  6071  001C2E  CFFA F005          	movff	pclath,??_INTERRUPCION
  6072  001C32  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  6073  001C36  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  6074  001C3A  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  6075  001C3E  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  6076  001C42  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  6077                           
  6078                           ;main.c: 219: if (TMR0IF)
  6079  001C46  A4F2               	btfss	4082,2,c	;volatile
  6080  001C48  D007               	goto	i2l138
  6081                           
  6082                           ;main.c: 220: {;main.c: 221: isr_flag.f1ms = 1;
  6083  001C4A  8043               	bsf	_isr_flag,0,c	;volatile
  6084                           
  6085                           ;main.c: 226: mpap_job();
  6086  001C4C  EC3A  F00E         	call	_mpap_job	;wreg free
  6087                           
  6088                           ;main.c: 228: TMR0IF = 0;
  6089  001C50  94F2               	bcf	4082,2,c	;volatile
  6090                           
  6091                           ;main.c: 229: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  6092  001C52  68D7               	setf	4055,c	;volatile
  6093                           
  6094                           ;main.c: 230: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  6095  001C54  0ED1               	movlw	209
  6096  001C56  6ED6               	movwf	4054,c	;volatile
  6097  001C58                     i2l138:
  6098  001C58  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  6099  001C5C  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  6100  001C60  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  6101  001C64  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  6102  001C68  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  6103  001C6C  C005  FFFA         	movff	??_INTERRUPCION,pclath
  6104  001C70  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6105  001C72  0011               	retfie		f
  6106  001C74                     __end_of_INTERRUPCION:
  6107                           	opt callstack 0
  6108                           
  6109 ;; *************** function _mpap_job *****************
  6110 ;; Defined at:
  6111 ;;		line 193 in file "mpap.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  cod_ret         1    0        char 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      char 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0
  6126 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6128 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6129 ;;Total ram usage:        1 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    3
  6132 ;; This function calls:
  6133 ;;		__mpap_off
  6134 ;;		_mpap_homming
  6135 ;;		_mpap_normal_mode
  6136 ;; This function is called by:
  6137 ;;		_INTERRUPCION
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text47
  6142  001C74                     __ptext47:
  6143                           	opt callstack 0
  6144  001C74                     _mpap_job:
  6145                           	opt callstack 22
  6146                           
  6147                           ;mpap.c: 195: int8_t cod_ret;;mpap.c: 197: if (mpap.mode == HOMMING_MODE)
  6148                           
  6149                           ;incstack = 0
  6150  001C74  0E02               	movlw	2
  6151  001C76  183E               	xorwf	_mpap+7,w,c	;volatile
  6152  001C78  A4D8               	btfss	status,2,c
  6153  001C7A  D003               	goto	i2l3046
  6154  001C7C  EC73  F00D         	call	_mpap_homming	;wreg free
  6155  001C80  0012               	return	
  6156  001C82                     i2l3046:
  6157                           
  6158                           ;mpap.c: 200: else if (mpap.mode == NORMAL_MODE)
  6159  001C82  0E03               	movlw	3
  6160  001C84  183E               	xorwf	_mpap+7,w,c	;volatile
  6161  001C86  A4D8               	btfss	status,2,c
  6162  001C88  D003               	goto	i2l3050
  6163  001C8A  EC5E  F00E         	call	_mpap_normal_mode	;wreg free
  6164  001C8E  0012               	return	
  6165  001C90                     i2l3050:
  6166                           
  6167                           ;mpap.c: 203: else if (mpap.mode == STALL_MODE)
  6168  001C90  043E               	decf	_mpap+7,w,c	;volatile
  6169  001C92  A4D8               	btfss	status,2,c
  6170  001C94  0012               	return	
  6171                           
  6172                           ;mpap.c: 204: {;mpap.c: 205: mpap.numSteps_tomove = 0x00;
  6173  001C96  0E00               	movlw	0
  6174  001C98  6E3C               	movwf	_mpap+5,c	;volatile
  6175  001C9A  0E00               	movlw	0
  6176  001C9C  6E3B               	movwf	_mpap+4,c	;volatile
  6177                           
  6178                           ;mpap.c: 206: mpap_off();
  6179  001C9E  D801               	call	i2u336_48
  6180  001CA0  D00A               	goto	i2u336_49
  6181  001CA2                     i2u336_48:
  6182  001CA2  0005               	push	
  6183  001CA4  6EFA               	movwf	pclath,c
  6184  001CA6  5044               	movf	_mpap_off,w,c
  6185  001CA8  6EFD               	movwf	tosl,c
  6186  001CAA  5045               	movf	_mpap_off+1,w,c
  6187  001CAC  6EFE               	movwf	tosh,c
  6188  001CAE  50F8               	movf	tblptru,w,c
  6189  001CB0  6EFF               	movwf	tosu,c
  6190  001CB2  50FA               	movf	pclath,w,c
  6191  001CB4  0012               	return		;indir
  6192  001CB6                     i2u336_49:
  6193                           
  6194                           ;mpap.c: 208: mpap.mode = IDLE_MODE;
  6195  001CB6  0E00               	movlw	0
  6196  001CB8  6E3E               	movwf	_mpap+7,c	;volatile
  6197  001CBA  0012               	return	
  6198  001CBC                     __end_of_mpap_job:
  6199                           	opt callstack 0
  6200                           
  6201 ;; *************** function _mpap_normal_mode *****************
  6202 ;; Defined at:
  6203 ;;		line 173 in file "mpap.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;		None
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;  cod_ret         1    1[COMRAM] char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  1    wreg      char 
  6210 ;; Registers used:
  6211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6217 ;;      Params:         0       0       0       0       0       0       0       0       0
  6218 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6220 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6221 ;;Total ram usage:        1 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    2
  6224 ;; This function calls:
  6225 ;;		_mpap_do1step
  6226 ;; This function is called by:
  6227 ;;		_mpap_job
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text48
  6232  001CBC                     __ptext48:
  6233                           	opt callstack 0
  6234  001CBC                     _mpap_normal_mode:
  6235                           	opt callstack 22
  6236                           
  6237                           ;mpap.c: 175: int8_t cod_ret = 0;
  6238                           
  6239                           ;incstack = 0
  6240  001CBC  0E00               	movlw	0
  6241  001CBE  6E02               	movwf	mpap_normal_mode@cod_ret,c
  6242                           
  6243                           ;mpap.c: 176: if (mpap.numSteps_tomove!=0)
  6244  001CC0  503B               	movf	_mpap+4,w,c	;volatile
  6245  001CC2  103C               	iorwf	_mpap+5,w,c	;volatile
  6246  001CC4  B4D8               	btfsc	status,2,c
  6247  001CC6  D01C               	goto	i2l490
  6248                           
  6249                           ;mpap.c: 177: {;mpap.c: 178: mpap_do1step(mpap.KI);
  6250  001CC8  503D               	movf	_mpap+6,w,c	;volatile
  6251  001CCA  ECA3  F00E         	call	_mpap_do1step
  6252                           
  6253                           ;mpap.c: 180: mpap.counter_steps+= mpap.KI;
  6254  001CCE  503D               	movf	_mpap+6,w,c	;volatile
  6255  001CD0  2639               	addwf	_mpap+2,f,c	;volatile
  6256  001CD2  0E00               	movlw	0
  6257  001CD4  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6258  001CD6  0EFF               	movlw	255
  6259  001CD8  223A               	addwfc	_mpap+3,f,c	;volatile
  6260                           
  6261                           ;mpap.c: 182: mpap.numSteps_current+= mpap.KI;
  6262  001CDA  503D               	movf	_mpap+6,w,c	;volatile
  6263  001CDC  2637               	addwf	_mpap,f,c	;volatile
  6264  001CDE  0E00               	movlw	0
  6265  001CE0  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6266  001CE2  0EFF               	movlw	255
  6267  001CE4  2238               	addwfc	_mpap+1,f,c	;volatile
  6268                           
  6269                           ;mpap.c: 184: if ( mpap.counter_steps== mpap.numSteps_tomove)
  6270  001CE6  503B               	movf	_mpap+4,w,c	;volatile
  6271  001CE8  1839               	xorwf	_mpap+2,w,c	;volatile
  6272  001CEA  E10A               	bnz	i2l490
  6273  001CEC  503C               	movf	_mpap+5,w,c	;volatile
  6274  001CEE  183A               	xorwf	_mpap+3,w,c	;volatile
  6275  001CF0  A4D8               	btfss	status,2,c
  6276  001CF2  D006               	goto	i2l490
  6277                           
  6278                           ;mpap.c: 185: {;mpap.c: 186: mpap.numSteps_tomove = 0;
  6279  001CF4  0E00               	movlw	0
  6280  001CF6  6E3C               	movwf	_mpap+5,c	;volatile
  6281  001CF8  0E00               	movlw	0
  6282  001CFA  6E3B               	movwf	_mpap+4,c	;volatile
  6283                           
  6284                           ;mpap.c: 187: cod_ret = 1;
  6285  001CFC  0E01               	movlw	1
  6286  001CFE  6E02               	movwf	mpap_normal_mode@cod_ret,c
  6287  001D00                     i2l490:
  6288                           
  6289                           ;mpap.c: 188: };mpap.c: 189: };mpap.c: 190: return cod_ret;
  6290  001D00  5002               	movf	mpap_normal_mode@cod_ret,w,c
  6291  001D02  0012               	return		;funcret
  6292  001D04                     __end_of_mpap_normal_mode:
  6293                           	opt callstack 0
  6294                           
  6295 ;; *************** function _mpap_homming *****************
  6296 ;; Defined at:
  6297 ;;		line 150 in file "mpap.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  cod_ret         1    2[COMRAM] char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      char 
  6304 ;; Registers used:
  6305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6311 ;;      Params:         0       0       0       0       0       0       0       0       0
  6312 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6313 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6314 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6315 ;;Total ram usage:        2 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    2
  6318 ;; This function calls:
  6319 ;;		_mpap_do1step
  6320 ;; This function is called by:
  6321 ;;		_mpap_job
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text49
  6326  001AE6                     __ptext49:
  6327                           	opt callstack 0
  6328  001AE6                     _mpap_homming:
  6329                           	opt callstack 22
  6330                           
  6331                           ;mpap.c: 152: int8_t cod_ret = 0;
  6332                           
  6333                           ;incstack = 0
  6334  001AE6  0E00               	movlw	0
  6335  001AE8  6E03               	movwf	mpap_homming@cod_ret,c
  6336                           
  6337                           ;mpap.c: 153: if (mpap.numSteps_tomove!=0)
  6338  001AEA  503B               	movf	_mpap+4,w,c	;volatile
  6339  001AEC  103C               	iorwf	_mpap+5,w,c	;volatile
  6340  001AEE  B4D8               	btfsc	status,2,c
  6341  001AF0  D024               	goto	i2l484
  6342                           
  6343                           ;mpap.c: 154: {;mpap.c: 155: mpap_do1step(mpap.KI);
  6344  001AF2  503D               	movf	_mpap+6,w,c	;volatile
  6345  001AF4  ECA3  F00E         	call	_mpap_do1step
  6346                           
  6347                           ;mpap.c: 157: mpap.counter_steps+= mpap.KI;
  6348  001AF8  503D               	movf	_mpap+6,w,c	;volatile
  6349  001AFA  2639               	addwf	_mpap+2,f,c	;volatile
  6350  001AFC  0E00               	movlw	0
  6351  001AFE  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6352  001B00  0EFF               	movlw	255
  6353  001B02  223A               	addwfc	_mpap+3,f,c	;volatile
  6354                           
  6355                           ;mpap.c: 159: if (((PORTE & (1<<1))>>1) == 0)
  6356  001B04  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  6357  001B08  90D8               	bcf	status,0,c
  6358  001B0A  3202               	rrcf	??_mpap_homming,f,c
  6359  001B0C  B002               	btfsc	??_mpap_homming,0,c
  6360  001B0E  D006               	goto	i2l2696
  6361                           
  6362                           ;mpap.c: 160: {;mpap.c: 161: mpap.numSteps_tomove = 0x0000;
  6363  001B10  0E00               	movlw	0
  6364  001B12  6E3C               	movwf	_mpap+5,c	;volatile
  6365  001B14  0E00               	movlw	0
  6366  001B16  6E3B               	movwf	_mpap+4,c	;volatile
  6367                           
  6368                           ;mpap.c: 162: cod_ret = 1;
  6369  001B18  0E01               	movlw	1
  6370  001B1A  6E03               	movwf	mpap_homming@cod_ret,c
  6371  001B1C                     i2l2696:
  6372                           
  6373                           ;mpap.c: 163: };mpap.c: 164: if ( mpap.counter_steps == mpap.numSteps_tomove)
  6374  001B1C  503B               	movf	_mpap+4,w,c	;volatile
  6375  001B1E  1839               	xorwf	_mpap+2,w,c	;volatile
  6376  001B20  E10C               	bnz	i2l484
  6377  001B22  503C               	movf	_mpap+5,w,c	;volatile
  6378  001B24  183A               	xorwf	_mpap+3,w,c	;volatile
  6379  001B26  A4D8               	btfss	status,2,c
  6380  001B28  D008               	goto	i2l484
  6381                           
  6382                           ;mpap.c: 165: {;mpap.c: 166: mpap.numSteps_tomove = 0x0000;
  6383  001B2A  0E00               	movlw	0
  6384  001B2C  6E3C               	movwf	_mpap+5,c	;volatile
  6385  001B2E  0E00               	movlw	0
  6386  001B30  6E3B               	movwf	_mpap+4,c	;volatile
  6387                           
  6388                           ;mpap.c: 167: cod_ret = 1;
  6389  001B32  0E01               	movlw	1
  6390  001B34  6E03               	movwf	mpap_homming@cod_ret,c
  6391                           
  6392                           ;mpap.c: 168: pulsonic.errors.flag.mpap_home_sensor = 1;
  6393  001B36  0101               	movlb	1	; () banked
  6394  001B38  8175               	bsf	(_pulsonic+117)& (0+255),0,b
  6395  001B3A                     i2l484:
  6396                           
  6397                           ;mpap.c: 169: };mpap.c: 170: };mpap.c: 171: return cod_ret;
  6398  001B3A  5003               	movf	mpap_homming@cod_ret,w,c
  6399  001B3C  0012               	return		;funcret
  6400  001B3E                     __end_of_mpap_homming:
  6401                           	opt callstack 0
  6402                           
  6403 ;; *************** function _mpap_do1step *****************
  6404 ;; Defined at:
  6405 ;;		line 130 in file "mpap.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  KI              1    wreg     char 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  KI              1    0[COMRAM] char 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0
  6420 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6422 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6423 ;;Total ram usage:        1 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    1
  6426 ;; This function calls:
  6427 ;;		__mpap_step1
  6428 ;;		__mpap_step2
  6429 ;;		__mpap_step3
  6430 ;;		__mpap_step4
  6431 ;; This function is called by:
  6432 ;;		_mpap_homming
  6433 ;;		_mpap_normal_mode
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text50
  6438  001D46                     __ptext50:
  6439                           	opt callstack 0
  6440  001D46                     _mpap_do1step:
  6441                           	opt callstack 22
  6442                           
  6443                           ;incstack = 0
  6444                           ;mpap_do1step@KI stored from wreg
  6445  001D46  6E01               	movwf	mpap_do1step@KI,c
  6446                           
  6447                           ;mpap.c: 132: static int8_t i = -1;;mpap.c: 134: i= i + KI;
  6448  001D48  5046               	movf	mpap_do1step@i,w,c
  6449  001D4A  2401               	addwf	mpap_do1step@KI,w,c
  6450  001D4C  6E46               	movwf	mpap_do1step@i,c
  6451                           
  6452                           ;mpap.c: 136: if (i>3){i=0;}
  6453  001D4E  5046               	movf	mpap_do1step@i,w,c
  6454  001D50  0A80               	xorlw	128
  6455  001D52  0F7C               	addlw	-132
  6456  001D54  A0D8               	btfss	status,0,c
  6457  001D56  D002               	goto	i2l2354
  6458  001D58  0E00               	movlw	0
  6459  001D5A  6E46               	movwf	mpap_do1step@i,c
  6460  001D5C                     i2l2354:
  6461                           
  6462                           ;mpap.c: 137: if (i<0){i=3;}
  6463  001D5C  AE46               	btfss	mpap_do1step@i,7,c
  6464  001D5E  D002               	goto	i2l2358
  6465  001D60  0E03               	movlw	3
  6466  001D62  6E46               	movwf	mpap_do1step@i,c
  6467  001D64                     i2l2358:
  6468                           
  6469                           ;mpap.c: 139: mpap_step[i]();
  6470  001D64  5046               	movf	mpap_do1step@i,w,c
  6471  001D66  0D02               	mullw	2
  6472  001D68  50F3               	movf	prodl,w,c
  6473  001D6A  0FC9               	addlw	low _mpap_step
  6474  001D6C  6ED9               	movwf	fsr2l,c
  6475  001D6E  6ADA               	clrf	fsr2h,c
  6476  001D70  D801               	call	i2u193_48
  6477  001D72  0012               	return	
  6478  001D74                     i2u193_48:
  6479  001D74  0005               	push	
  6480  001D76  6EFA               	movwf	pclath,c
  6481  001D78  50DE               	movf	postinc2,w,c
  6482  001D7A  6EFD               	movwf	tosl,c
  6483  001D7C  50DE               	movf	postinc2,w,c
  6484  001D7E  6EFE               	movwf	tosh,c
  6485  001D80  50F8               	movf	tblptru,w,c
  6486  001D82  6EFF               	movwf	tosu,c
  6487  001D84  50FA               	movf	pclath,w,c
  6488  001D86  0012               	return		;indir
  6489  001D88                     __end_of_mpap_do1step:
  6490                           	opt callstack 0
  6491                           
  6492 ;; *************** function __mpap_step3 *****************
  6493 ;; Defined at:
  6494 ;;		line 51 in file "mpap.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;		None
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      void 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6508 ;;      Params:         0       0       0       0       0       0       0       0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6511 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6512 ;;Total ram usage:        0 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_mpap_do1step
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text51
  6522  001FEC                     __ptext51:
  6523                           	opt callstack 0
  6524  001FEC                     __mpap_step3:
  6525                           	opt callstack 22
  6526                           
  6527                           ;mpap.c: 58: LATD = 0x02;
  6528                           
  6529                           ;incstack = 0
  6530  001FEC  0E02               	movlw	2
  6531  001FEE  6E8C               	movwf	3980,c	;volatile
  6532  001FF0  0012               	return		;funcret
  6533  001FF2                     __end_of__mpap_step3:
  6534                           	opt callstack 0
  6535                           
  6536 ;; *************** function __mpap_step2 *****************
  6537 ;; Defined at:
  6538 ;;		line 42 in file "mpap.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6555 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_mpap_do1step
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text52
  6566  001FF2                     __ptext52:
  6567                           	opt callstack 0
  6568  001FF2                     __mpap_step2:
  6569                           	opt callstack 22
  6570                           
  6571                           ;mpap.c: 49: LATD = 0x04;
  6572                           
  6573                           ;incstack = 0
  6574  001FF2  0E04               	movlw	4
  6575  001FF4  6E8C               	movwf	3980,c	;volatile
  6576  001FF6  0012               	return		;funcret
  6577  001FF8                     __end_of__mpap_step2:
  6578                           	opt callstack 0
  6579                           
  6580 ;; *************** function __mpap_step1 *****************
  6581 ;; Defined at:
  6582 ;;		line 33 in file "mpap.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6596 ;;      Params:         0       0       0       0       0       0       0       0       0
  6597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6599 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6600 ;;Total ram usage:        0 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_mpap_do1step
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text53
  6610  001FF8                     __ptext53:
  6611                           	opt callstack 0
  6612  001FF8                     __mpap_step1:
  6613                           	opt callstack 22
  6614                           
  6615                           ;mpap.c: 40: LATD = 0x08;
  6616                           
  6617                           ;incstack = 0
  6618  001FF8  0E08               	movlw	8
  6619  001FFA  6E8C               	movwf	3980,c	;volatile
  6620  001FFC  0012               	return		;funcret
  6621  001FFE                     __end_of__mpap_step1:
  6622                           	opt callstack 0
  6623                           
  6624 ;; *************** function __mpap_step4 *****************
  6625 ;; Defined at:
  6626 ;;		line 60 in file "mpap.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, status,2
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6640 ;;      Params:         0       0       0       0       0       0       0       0       0
  6641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6644 ;;Total ram usage:        0 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_mpap_do1step
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text54
  6654  001FFE                     __ptext54:
  6655                           	opt callstack 0
  6656  001FFE                     __mpap_step4:
  6657                           	opt callstack 22
  6658                           
  6659                           ;mpap.c: 67: LATD = 0x01;
  6660                           
  6661                           ;incstack = 0
  6662  001FFE  0E01               	movlw	1
  6663  002000  6E8C               	movwf	3980,c	;volatile
  6664  002002  0012               	return		;funcret
  6665  002004                     __end_of__mpap_step4:
  6666                           	opt callstack 0
  6667                           
  6668 ;; *************** function __mpap_off *****************
  6669 ;; Defined at:
  6670 ;;		line 75 in file "mpap.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6684 ;;      Params:         0       0       0       0       0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6688 ;;Total ram usage:        0 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_mpap_job
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text55
  6698  001FC6                     __ptext55:
  6699                           	opt callstack 0
  6700  001FC6                     __mpap_off:
  6701                           	opt callstack 24
  6702                           
  6703                           ;incstack = 0
  6704                           ;mpap.c: 77: do{LATD &= ~(1<<0);}while(0);
  6705  001FC6  908C               	bcf	3980,0,c	;volatile
  6706                           
  6707                           ;mpap.c: 78: do{LATD &= ~(1<<1);}while(0);
  6708  001FC8  928C               	bcf	3980,1,c	;volatile
  6709                           
  6710                           ;mpap.c: 79: do{LATD &= ~(1<<2);}while(0);
  6711  001FCA  948C               	bcf	3980,2,c	;volatile
  6712                           
  6713                           ;mpap.c: 80: do{LATD &= ~(1<<3);}while(0);
  6714  001FCC  968C               	bcf	3980,3,c	;volatile
  6715  001FCE  0012               	return		;funcret
  6716  001FD0                     __end_of__mpap_off:
  6717                           	opt callstack 0
  6718                           
  6719                           	psect	text56
  6720  000000                     __ptext56:
  6721                           	opt callstack 0
  6722                           
  6723                           	psect	rparam
  6724  0000                     
  6725                           	psect	temp
  6726  000047                     btemp:
  6727                           	opt callstack 0
  6728  000047                     	ds	1
  6729  0000                     int$flags	set	btemp
  6730  0000                     wtemp8	set	btemp+1
  6731  0000                     ttemp5	set	btemp+1
  6732  0000                     ttemp6	set	btemp+4
  6733  0000                     ttemp7	set	btemp+8
  6734                           tosu	equ	0xFFF
  6735                           tosh	equ	0xFFE
  6736                           tosl	equ	0xFFD
  6737                           stkptr	equ	0xFFC
  6738                           pclatu	equ	0xFFB
  6739                           pclath	equ	0xFFA
  6740                           pcl	equ	0xFF9
  6741                           tblptru	equ	0xFF8
  6742                           tblptrh	equ	0xFF7
  6743                           tblptrl	equ	0xFF6
  6744                           tablat	equ	0xFF5
  6745                           prodh	equ	0xFF4
  6746                           prodl	equ	0xFF3
  6747                           indf0	equ	0xFEF
  6748                           postinc0	equ	0xFEE
  6749                           postdec0	equ	0xFED
  6750                           preinc0	equ	0xFEC
  6751                           plusw0	equ	0xFEB
  6752                           fsr0h	equ	0xFEA
  6753                           fsr0l	equ	0xFE9
  6754                           wreg	equ	0xFE8
  6755                           indf1	equ	0xFE7
  6756                           postinc1	equ	0xFE6
  6757                           postdec1	equ	0xFE5
  6758                           preinc1	equ	0xFE4
  6759                           plusw1	equ	0xFE3
  6760                           fsr1h	equ	0xFE2
  6761                           fsr1l	equ	0xFE1
  6762                           bsr	equ	0xFE0
  6763                           indf2	equ	0xFDF
  6764                           postinc2	equ	0xFDE
  6765                           postdec2	equ	0xFDD
  6766                           preinc2	equ	0xFDC
  6767                           plusw2	equ	0xFDB
  6768                           fsr2h	equ	0xFDA
  6769                           fsr2l	equ	0xFD9
  6770                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        31
    BSS         221
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      70
    BANK0           160     19     132
    BANK1           256      0     123
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    S295_multiplexedDisp$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    multiplexedDisp.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    S182_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S182_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 


Critical Paths under _main in COMRAM

    _main->_disp_show_quantity
    _nozzle_moveto->_mpap_setupToTurn
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _ikb_flush->_ikey_clear_all_flag
    _display7s_job->_multiplexedDisp_job
    _display7s_init->_multiplexedDisp_init
    _disp_show_quantity->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___awtoft->___ftpack

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _main->_disp_show_quantity

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29562
                                             52 COMRAM     2     2      0
                 _disp_show_quantity
                     _display7s_init
                      _display7s_job
                          _ikb_flush
                           _ikb_init
                            _ikb_job
              _ikb_key_is_ready2read
                _mpap_setupToHomming
                          _mpap_sych
                      _nozzle_moveto
 ---------------------------------------------------------------------------------
 (1) _nozzle_moveto                                        1     1      0    1001
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     737
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mpap_setupToHomming                                  0     0      0     242
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToTurn                                     4     2      2     242
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ikb_key_is_ready2read                                1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8700
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
                   _keyRead_pin_key5 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key5                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    8237
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3774
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_flush                                            0     0      0      68
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (2) _ikey_clear_all_flag                                  1     1      0      68
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display7s_job                                        0     0      0     134
                _multiplexedDisp_job
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_job                                  8     8      0     134
                                             10 COMRAM     8     8      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (1) _display7s_init                                       0     0      0      68
               _multiplexedDisp_init
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_init                                 1     1      0      68
                                             10 COMRAM     1     1      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disp_show_quantity                                  23    20      3   19053
                                             48 COMRAM     4     1      3
                                              0 BANK0     19    19      0
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     1      5    2226
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     621
                                             33 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5414
                                             30 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4998
                                             18 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4127
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1818
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3536
                                             18 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3313
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (6) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (7) _mpap_normal_mode                                     1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (7) _mpap_homming                                         2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (8) _mpap_do1step                                         1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (9) __mpap_step4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) __mpap_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disp_show_quantity
     ___awtoft
       ___ftpack
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _display7s_init
     _multiplexedDisp_init
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _display7s_job
     _multiplexedDisp_job
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
       _keyRead_pin_key5 *
   _ikb_key_is_ready2read
   _mpap_setupToHomming
     _mpap_setupToTurn
       ___wmul (ARG)
   _mpap_sych
   _nozzle_moveto
     ___wmul
     _mpap_setupToTurn
       ___wmul (ARG)

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7B       7       48.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      84       5       82.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      46       1       74.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     145      20        0.0%
DATA                 0      0     145       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul  9 17:31:11 2019

          ??_mpap_setupToHomming 0015                               l94 1496  
            ___wmul@multiplicand 000D                      __CFG_BORV$3 000000  
                   ___ftadd@exp1 001E                     ___ftadd@exp2 001D  
                   ___ftadd@sign 001C                              l251 0994  
                            l244 08F0                              l261 0C2C  
                            l253 09F6                              l238 093A  
                            l271 0D8C                              l255 0A3A  
                            l273 0DC2                              l257 0A9C  
                            l267 0D58                              l259 0AE0  
                            l276 0E14                              l465 1E88  
                            l467 1E8C                              l833 1214  
                            l982 1B86                              l992 1D3C  
                            _GIE 007F97                   ?_display7s_job 0001  
                   __CFG_BOR$OFF 000000                              _key 0060  
                            tosl 000FFD                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                     __CFG_WDT$OFF 000000  
                           l3020 19CA                             l3004 199C  
                           l1174 1966                             l3024 19D2  
                           l3008 19A8                             l3034 19EE  
                           l3018 19C8                             l3300 1A24  
                           l2500 133A                             l3310 1A72  
                           l3206 1B7C                             l3222 1D32  
                           l3214 1D12                             l2326 1C28  
                           l2502 135A                             l3160 17BE  
                           l3304 1A46                             l3240 1156  
                           l3216 1D1A                             l3320 18F6  
                           l2520 141E                             l3170 181A  
                           l3162 17C8                             l3234 112E  
                           l3330 1928                             l3410 0B92  
                           l3172 1824                             l3164 17E6  
                           l2508 139A                             l3262 11A8  
                           l3168 17FC                             l3520 1E1C  
                           l3264 11B2                             l2624 1F44  
                           l3440 0E34                             l3424 0CDE  
                           l3416 0C1C                             l3282 1230  
                           l3274 11E6                             l3266 11BC  
                           l3530 1644                             l3194 1B54  
                           l3602 0FB6                             l2650 1854  
                           l3354 0812                             l2490 12C8  
                           l3292 1260                             l3276 11F0  
                           l3508 1DDE                             l3196 1B5C  
                           l3452 1E58                             l3620 0FFA  
                           l2636 1D8C                             l3372 08B0  
                           l2484 128A                             l3462 154C  
                           l3630 1044                             l3606 0FC2  
                           l2654 18BC                             l3366 0880  
                           l3710 148E                             l3560 16BC  
                           l3552 16A8                             l3376 08D0  
                           l3368 0890                             l3482 15A6  
                           l3626 1030                             l3492 15CE  
                           l3468 1574                             l3548 1698  
                           l3652 1096                             l3732 14E2  
                           l3724 14BE                             l3740 1506  
                           l3486 15B6                             l3566 16D8  
                           l3558 16B0                             l3662 10A6  
                           l3638 105E                             l3654 109C  
                           l3574 0E6A                             l3496 15DE  
                           l3584 0F2A                             l2864 1722  
                           l3736 14F4                             l3728 14D0  
                           l3746 1518                             l3598 0FA2  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             u2228 12AC  
                           u3220 1998                             u2229 12C0  
                           u2270 132A                             u2338 13E4  
                           u2339 13F8                             u2268 1310  
                           u3180 1F92                             u2269 1324  
                           u3520 182E                             u2298 137E  
                           u4251 1534                             u3611 10EE  
                           u4331 1628                             u2299 1392  
                           u4340 1632                             u4500 1040  
                           u3621 1102                             u3710 1186  
                           u4350 1662                             u4271 155C  
                           u3480 17B0                             u3560 1B60  
                           u3650 1120                             u4450 0F9E  
                           u2738 1D9C                             u2754 186A  
                           u4355 165A                             u2739 1DB0  
                           u2755 1864                             u4460 0FB2  
                           u2764 1884                             u2765 187E  
                           u3750 11C4                             u4390 16C2  
                           u3590 1D1E                             u3680 1148  
                           u4490 102C                             u3780 11F8  
                           u2788 18A8                             u2798 18CC  
                           u2799 18E0                             _UCFG 000F6F  
                           _UCON 000F6D                     __CFG_PWRT$ON 000000  
          _ikb_key_is_ready2read 1F7A                  ?_display7s_init 0001  
    __size_of_disp_show_quantity 02A0                             _main 1426  
                   ___ftpack@arg 000B                             _itoa 1E40  
                           _mpap 0037                     ___ftpack@exp 000E  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0047  
                           _utoa 18EE                    _nozzle_moveto 1EA2  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                    __CFG_IESO$OFF 000000  
            _multiplexedDisp0_on 2020              _multiplexedDisp1_on 2018  
            _multiplexedDisp2_on 2010              _multiplexedDisp3_on 2008  
            _multiplexedDisp4_on 2028                    __CFG_MCLRE$ON 000000  
                   ___ftmul@cntr 0020             __end_of_DISP7S_CHARS 080D  
                   ___param_bank 000000                     ___ftmul@sign 0021  
            _multiplexedDisp_job 184E                     ___fttol@exp1 0030  
                   ___fttol@lval 002C                    __CFG_PLLDIV$5 000000  
                          ?_main 0001                            ?_itoa 001A  
                __end_of___ftadd 1286                            _CMCON 000FB4  
                          ?_utoa 0012                  __end_of___ftmul 1618  
                          _T0CON 000FD5                  __end_of___ftsub 1E08  
                __end_of___fttol 16EA                  __end_of___lwdiv 1B90  
                __end_of___lwmod 1D46                            i2l138 1C58  
                          i2l490 1D00                            i2l484 1B3A  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _PORTC 000F82                            _PORTD 000F83  
                          _PORTE 000F84                    __CFG_USBDIV$2 000000  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96             ?_multiplexedDisp0_on 0001  
           ?_multiplexedDisp1_on 0001             ?_multiplexedDisp2_on 0001  
           ?_multiplexedDisp3_on 0001             ?_multiplexedDisp4_on 0001  
                 __CFG_FCMEN$OFF 000000                  __end_of_ikb_job 1FB2  
           ?_multiplexedDisp_job 0001                    ___awtoft@sign 0016  
                  ?_INTERRUPCION 0001                    ___ftpack@sign 000F  
                          pclath 000FFA                            tablat 000FF5  
                          ttemp5 0048                            ttemp6 004B  
                          ttemp7 004F                            utoa@c 0019  
                          utoa@v 0017                            status 000FD8  
                 ?_nozzle_moveto 0001                            wtemp8 0048  
    __size_of_ikey_is_accessible 004C             _multiplexedDisp0_off 2024  
           _multiplexedDisp1_off 201C             _multiplexedDisp2_off 2014  
           _multiplexedDisp3_off 200C             _multiplexedDisp4_off 2004  
                  ?_ikey_parsing 0001             __size_of__mpap_step1 0006  
           __size_of__mpap_step2 0006             __size_of__mpap_step3 0006  
           __size_of__mpap_step4 0006                  __initialization 1A76  
                   __end_of_main 1524                     __end_of_itoa 1E72  
           _multiplexedDisp_init 1D88                     __end_of_utoa 1982  
                ??_display7s_job 0013                           ??_main 0035  
                  ___fttol@sign1 002B                           ??_itoa 001F  
                         ??_utoa 0017                    mpap_do1step@i 0046  
                  __activetblptr 000002            ??_multiplexedDisp0_on 000B  
          ??_multiplexedDisp1_on 000B            ??_multiplexedDisp2_on 000B  
          ??_multiplexedDisp3_on 000B            ??_multiplexedDisp4_on 000B  
          ??_multiplexedDisp_job 000B                   ??_INTERRUPCION 0005  
                         _ADCON1 000FC1         __end_of_keyRead_pin_key1 1FD8  
       __end_of_keyRead_pin_key2 1FC6         __end_of_keyRead_pin_key3 1FBC  
       __end_of_keyRead_pin_key4 1FE6         __end_of_keyRead_pin_key5 1FE0  
         ?_ikb_key_is_ready2read 0001                 __end_of___awtoft 1E40  
               __end_of___ftpack 184E                           i2l3050 1C90  
                         i2l3046 1C82                           i2l2354 1D5C  
                         i2l2358 1D64                           i2l2696 1B1C  
               __end_of___lwtoft 1F40                           _TMR0IE 007F95  
                         _TMR0IF 007F92            ?_multiplexedDisp0_off 0001  
          ?_multiplexedDisp1_off 0001            ?_multiplexedDisp2_off 0001  
          ?_multiplexedDisp3_off 0001            ?_multiplexedDisp4_off 0001  
                 ??_ikey_parsing 001F                   __CFG_VREGEN$ON 000000  
       __end_of_mpap_normal_mode 1D04                 __end_of_ikb_init 17A0  
          ?_multiplexedDisp_init 0001                           ___ftge 1A02  
                         ___wmul 1ED0                        ??___ftadd 0019  
                      ??___ftmul 0019                        ??___ftsub 0025  
                      ??___fttol 0026                        ??___lwdiv 000F  
                      ??___lwmod 000F                           clear_0 1ABA  
                         clear_1 1AC6                           clear_2 1AD2  
               __end_of_mpap_job 1CBC                        ??_ikb_job 0024  
          ___ftmul@f3_as_product 001D         __end_of_mpap_setupToTurn 1EA2  
                   __pdataCOMRAM 0044                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8              ikey_is_accessible@k 000D  
                ??_nozzle_moveto 0015     __size_of_ikey_clear_all_flag 001E  
                     __accesstop 0060          __end_of__initialization 1AD8  
                __CFG_PBADEN$OFF 000000                    ?_mpap_do1step 0001  
                     ___ftadd@f1 0013                       ___ftadd@f2 0016  
                     ___ftge@ff1 0016                       ___ftge@ff2 0019  
                  ___rparam_used 000001                       ___awtoft@c 0013  
                     ___ftmul@f1 0013                       ___ftmul@f2 0016  
                     ___ftsub@f1 001F                       ___ftsub@f2 0022  
                     ___fttol@f1 0022                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1F5E                    ?_mpap_homming 0001  
             __size_of__mpap_off 000A                       ___lwtoft@c 0013  
               ??_display7s_init 000C                     _DISP7S_CHARS 080B  
             __size_of_ikb_flush 0006                   mpap_do1step@KI 0001  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                 ??_mpap_do1step 0001           ??_multiplexedDisp0_off 000B  
         ??_multiplexedDisp1_off 000B           ??_multiplexedDisp2_off 000B  
         ??_multiplexedDisp3_off 000B           ??_multiplexedDisp4_off 000B  
             __size_of_ikey_scan 01A0      __end_of_mpap_setupToHomming 1FA8  
         ??_multiplexedDisp_init 000B                   ??_mpap_homming 0002  
                        ?___ftge 0016             __end_of_INTERRUPCION 1C74  
             __size_of_mpap_sych 0080                          ?___wmul 000B  
                      ?___awtoft 0013                        ?___ftpack 000B  
                      ?___lwtoft 0013             __end_of_ikey_parsing 0E3E  
     __end_of_disp_show_quantity 10DE                        ?_ikb_init 0001  
              __end_of__mpap_off 1FD0                   display7s_job@q 003F  
                      ?_mpap_job 0001                          __Hparam 0000  
                        __Lparam 0000                __end_of_ikb_flush 1FEC  
                __size_of___ftge 0074                          ___ftadd 10DE  
                __size_of___wmul 0026                          ___ftmul 1524  
                        ___ftsub 1DC8                          ___fttol 1618  
                        ___lwdiv 1B3E                          ___lwmod 1D04  
                   __psmallconst 0800                          __pcinit 1A76  
                     ??___awtoft 0016                       ??___ftpack 0010  
                        __ramtop 0800                          __ptext0 1426  
                        __ptext1 1EA2                          __ptext2 1ED0  
                        __ptext3 1982                          __ptext4 1F96  
                        __ptext5 1E72                          __ptext6 1F7A  
                        __ptext7 1FA8                          __ptext8 1286  
                        __ptext9 1FE0                __end_of_ikey_scan 1426  
                        _ikb_job 1FA8                       ??___lwtoft 0016  
                        _group_x 00B0          ??_ikb_key_is_ready2read 000B  
     disp_show_quantity@last_pos 00E0                __end_of_mpap_sych 1A02  
        mpap_normal_mode@cod_ret 0002                       ??_ikb_init 000B  
                 __pintcode_body 1C2C             end_of_initialization 1AD8  
     __end_of_ikey_is_accessible 1C2C                ?_keyRead_pin_key1 0001  
              ?_keyRead_pin_key2 0001                ?_keyRead_pin_key3 0001  
              ?_keyRead_pin_key4 0001                ?_keyRead_pin_key5 0001  
                  ??__mpap_step1 0001                    ??__mpap_step2 0001  
                  ??__mpap_step3 0001                    ??__mpap_step4 0001  
                        itoa@buf 001A                          itoa@val 001B  
                  __Lmediumconst 0000                          int_func 1C2C  
             ??_keyRead_pin_key1 000B               ??_keyRead_pin_key2 000B  
             ??_keyRead_pin_key3 000B               ??_keyRead_pin_key4 000B  
             ??_keyRead_pin_key5 000B                       ??_mpap_job 0004  
              ?_mpap_normal_mode 0001                  main@c_access_kb 0035  
                        postdec1 000FE5                          postdec2 000FDD  
             ??_mpap_normal_mode 0002                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
         ikb_key_is_ready2read@k 000B                          utoa@buf 0012  
    __end_of_multiplexedDisp0_on 2024      __end_of_multiplexedDisp1_on 201C  
    __end_of_multiplexedDisp2_on 2014      __end_of_multiplexedDisp3_on 200C  
                        utoa@val 0013      __end_of_multiplexedDisp4_on 202C  
            _ikey_clear_all_flag 1F40      __end_of_multiplexedDisp_job 18EE  
           __end_of_mpap_do1step 1D88            __end_of_display7s_job 1F1C  
           ikey_clear_all_flag@i 000B                ?_mpap_setupToTurn 0011  
             ??_mpap_setupToTurn 0013             __end_of_mpap_homming 1B3E  
            nozzle_moveto@nozzle 0015             ?_ikey_clear_all_flag 0001  
          __size_of_INTERRUPCION 1C6C                      ___ftmul@exp 001C  
            __end_of__mpap_step1 1FFE              __end_of__mpap_step2 1FF8  
            __end_of__mpap_step3 1FF2              __end_of__mpap_step4 2004  
            __end_of_DISP7S_NUMS 080B                   __end_of___ftge 1A76  
mpap_setupToTurn@numSteps_tomove 0011            __size_of_ikey_parsing 0630  
                 __end_of___wmul 1EF6                    __pidataCOMRAM 202C  
            start_initialization 1A76                     _INTERRUPCION 0008  
          ??_ikey_clear_all_flag 000B                       ikey_scan@k 000C  
          __end_of_nozzle_moveto 1ED0                     _ikey_parsing 080E  
         disp_show_quantity@buff 00D1                         ??___ftge 001C  
         disp_show_quantity@real 00DB                         ??___wmul 000F  
                    __pdataBANK0 00B5                __size_of___awtoft 0038  
              __size_of___ftpack 00AE                      __pbssCOMRAM 0037  
              __size_of___lwtoft 0024                    __pcstackBANK0 00D1  
                   mpap_sych@sm0 0041                    ikey_parsing@k 0023  
              __size_of_ikb_init 00B6                      __mpap_step1 1FF8  
                    __mpap_step2 1FF2                      __mpap_step3 1FEC  
                    __mpap_step4 1FFE                      _DISP7S_NUMS 0801  
  __size_of_multiplexedDisp0_off 0004    __size_of_multiplexedDisp1_off 0004  
  __size_of_multiplexedDisp2_off 0004    __size_of_multiplexedDisp3_off 0004  
  __size_of_multiplexedDisp4_off 0004                       mpap_sych@c 0040  
                      __mpap_off 1FC6                 ___lwdiv@dividend 000B  
             _disp_show_quantity 0E3E                __size_of_mpap_job 0048  
                      __pintcode 0008    __size_of_multiplexedDisp_init 0040  
          __size_of_mpap_do1step 0042                         ?___ftadd 0013  
                       ?___ftmul 0013                         ?___ftsub 001F  
                       ?___fttol 0022                         ?___lwdiv 000B  
                       ?___lwmod 000B     __size_of_mpap_setupToHomming 0012  
            ?_disp_show_quantity 0031                        _ikb_flush 1FE6  
                       ?_ikb_job 0001                      __smallconst 0800  
          __size_of_mpap_homming 0058                  _multiplexedDisp 00B5  
                      _main_flag 0042            multiplexedDisp_init@i 000B  
                      _ikey_scan 1286   __size_of_ikb_key_is_ready2read 001C  
               ___lwdiv@quotient 0010    __end_of_ikb_key_is_ready2read 1F96  
           ??_disp_show_quantity 0034                        _mpap_step 00C9  
                      _mpap_sych 1982                   ___wmul@product 000F  
                   _mpap_do1step 1D46          __size_of_display7s_init 0050  
                     ?__mpap_off 0001                         i2u336_48 1CA2  
                       i2u336_49 1CB6                         i2u193_48 1D74  
             _ikey_is_accessible 1BE0                     _mpap_homming 1AE6  
      __size_of_keyRead_pin_key1 0008        __size_of_keyRead_pin_key2 000A  
      __size_of_keyRead_pin_key3 000A        __size_of_keyRead_pin_key4 0006  
      __size_of_keyRead_pin_key5 0008                       ?_ikb_flush 0001  
              ___wmul@multiplier 000B              ?_ikey_is_accessible 0001  
                      ikb_init@i 000B        __size_of_mpap_normal_mode 0048  
                     ?_ikey_scan 0001                        copy_data0 1A8A  
            mpap_homming@cod_ret 0003                       ?_mpap_sych 0001  
           ??_ikey_is_accessible 000B        __size_of_mpap_setupToTurn 0030  
                       __Hrparam 0000                         __Lrparam 0000  
          disp_show_quantity@num 00DE                 __size_of___ftadd 01A8  
               __size_of___ftmul 00F4                 __size_of___ftsub 0040  
               __size_of___fttol 00D2                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042                         ___awtoft 1E08  
                       ___ftpack 17A0                         ___lwtoft 1F1C  
               __size_of_ikb_job 000A     __size_of_multiplexedDisp0_on 0004  
   __size_of_multiplexedDisp1_on 0004     __size_of_multiplexedDisp2_on 0004  
   __size_of_multiplexedDisp3_on 0004     __size_of_multiplexedDisp4_on 0004  
                ___lwdiv@divisor 000D     __size_of_multiplexedDisp_job 00A0  
                ___lwdiv@counter 000F                         __ptext10 1FB2  
                       __ptext11 1FBC                         __ptext20 1EF6  
                       __ptext12 1FD0                         __ptext21 184E  
                       __ptext13 1FD8                         __ptext30 201C  
                       __ptext22 1B90                         __ptext14 080E  
                       __ptext31 2020                         __ptext23 1D88  
                       __ptext15 1BE0                         __ptext40 1DC8  
                       __ptext32 2024                         __ptext24 2004  
                       __ptext16 1F1C                         __ptext41 10DE  
                       __ptext33 2028                         __ptext25 2008  
                       __ptext17 16EA                         __ptext50 1D46  
                       __ptext42 1524                         __ptext34 0E3E  
                       __ptext26 200C                         __ptext18 1FE6  
                       __ptext51 1FEC                         __ptext43 1A02  
                       __ptext35 1E40                         __ptext27 2010  
                       __ptext19 1F40                         __ptext52 1FF2  
                       __ptext44 1E08                         __ptext36 18EE  
                       __ptext28 2014                         __ptext53 1FF8  
                       __ptext45 17A0                         __ptext37 1D04  
                       __ptext29 2018                         __ptext54 1FFE  
                       __ptext38 1B3E                         __ptext55 1FC6  
                       __ptext47 1C74                         __ptext39 1618  
                       __ptext56 0000                         __ptext48 1CBC  
                       __ptext49 1AE6                         _ikb_init 16EA  
           _mpap_setupToTurn$413 0013             multiplexedDisp_job@i 0012  
           multiplexedDisp_job@q 0011                    __size_of_main 00FE  
                  __size_of_itoa 0032                    __size_of_utoa 0094  
                       _isr_flag 0043                         _mpap_job 1C74  
                       _mpap_off 0044                      ??__mpap_off 0001  
         __size_of_display7s_job 0026                main@c_access_disp 0036  
                       int$flags 0047                         _pulsonic 0100  
                    ??_ikb_flush 000C            __CFG_CPUDIV$OSC1_PLL2 000000  
    __end_of_ikey_clear_all_flag 1F5E                      ??_ikey_scan 000B  
                       itoa@base 001D                         intlevel2 0000  
            _mpap_setupToHomming 1F96                      ??_mpap_sych 000B  
               ___lwmod@dividend 000B                     ?__mpap_step1 0001  
                   ?__mpap_step2 0001                     ?__mpap_step3 0001  
                   ?__mpap_step4 0001                   _display7s_init 1B90  
               _keyRead_pin_key1 1FD0                 _keyRead_pin_key2 1FBC  
               _keyRead_pin_key3 1FB2                 _keyRead_pin_key4 1FE0  
               _keyRead_pin_key5 1FD8             ?_mpap_setupToHomming 0001  
            disp_show_quantity@I 00E1              disp_show_quantity@f 0031  
            disp_show_quantity@i 00E3              disp_show_quantity@q 00DF  
                       utoa@base 0015     __end_of_multiplexedDisp0_off 2028  
   __end_of_multiplexedDisp1_off 2020     __end_of_multiplexedDisp2_off 2018  
   __end_of_multiplexedDisp3_off 2010     __end_of_multiplexedDisp4_off 2008  
         __size_of_nozzle_moveto 002E                  ___lwmod@divisor 000D  
               _mpap_normal_mode 1CBC                    _display7s_job 1EF6  
                ___lwmod@counter 000F     __end_of_multiplexedDisp_init 1DC8  
             __CFG_FOSC$HSPLL_HS 000000           __end_of_display7s_init 1BE0  
               _mpap_setupToTurn 1E72  
