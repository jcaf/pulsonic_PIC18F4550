

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul 13 03:19:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,keep,inline
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,keep,inline
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,keep,inline
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,keep,inline
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,keep,inline
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,keep,inline
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,keep,inline
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,keep,inline
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,keep,inline
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,keep,inline
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,keep,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,keep,inline
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,keep,inline
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,keep,inline
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.05
    92                           ; Generated 20/12/2018 GMT
    93                           ; 
    94                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4550 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataCOMRAM
   127  002390                     __pidataCOMRAM:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for mpap_do1step@i
   131  002390  FF                 	db	255
   132                           
   133                           	psect	idataBANK0
   134  00220E                     __pidataBANK0:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for _disp7s_mux
   138  00220E  88                 	db	low _disp7s_mux0_off
   139  00220F  23                 	db	high _disp7s_mux0_off
   140  002210  84                 	db	low _disp7s_mux0_on
   141  002211  23                 	db	high _disp7s_mux0_on
   142  002212  80                 	db	low _disp7s_mux1_off
   143  002213  23                 	db	high _disp7s_mux1_off
   144  002214  7C                 	db	low _disp7s_mux1_on
   145  002215  23                 	db	high _disp7s_mux1_on
   146  002216  78                 	db	low _disp7s_mux2_off
   147  002217  23                 	db	high _disp7s_mux2_off
   148  002218  74                 	db	low _disp7s_mux2_on
   149  002219  23                 	db	high _disp7s_mux2_on
   150  00221A  70                 	db	low _disp7s_mux3_off
   151  00221B  23                 	db	high _disp7s_mux3_off
   152  00221C  6C                 	db	low _disp7s_mux3_on
   153  00221D  23                 	db	high _disp7s_mux3_on
   154  00221E  68                 	db	low _disp7s_mux4_off
   155  00221F  23                 	db	high _disp7s_mux4_off
   156  002220  8C                 	db	low _disp7s_mux4_on
   157  002221  23                 	db	high _disp7s_mux4_on
   158                           
   159                           ;initializer for _mpap_step
   160  002222  2E                 	db	low __mpap_step1
   161  002223  23                 	db	high __mpap_step1
   162  002224  24                 	db	low __mpap_step2
   163  002225  23                 	db	high __mpap_step2
   164  002226  1A                 	db	low __mpap_step3
   165  002227  23                 	db	high __mpap_step3
   166  002228  38                 	db	low __mpap_step4
   167  002229  23                 	db	high __mpap_step4
   168                           
   169                           ;initializer for _mpap_off
   170  00222A  42                 	db	low __mpap_off
   171  00222B  23                 	db	high __mpap_off
   172                           
   173                           	psect	smallconst
   174  000800                     __psmallconst:
   175                           	opt callstack 0
   176  000800  00                 	db	0
   177  000801                     _DISP7S_NUMS:
   178                           	opt callstack 0
   179  000801  3F                 	db	63
   180  000802  06                 	db	6
   181  000803  5B                 	db	91
   182  000804  4F                 	db	79
   183  000805  66                 	db	102
   184  000806  6D                 	db	109
   185  000807  7C                 	db	124
   186  000808  07                 	db	7
   187  000809  7F                 	db	127
   188  00080A  67                 	db	103
   189  00080B                     __end_of_DISP7S_NUMS:
   190                           	opt callstack 0
   191  00080B                     _DISP7S_CHARS:
   192                           	opt callstack 0
   193  00080B  00                 	db	0
   194  00080C  40                 	db	64
   195  00080D                     __end_of_DISP7S_CHARS:
   196                           	opt callstack 0
   197  0000                     _TRISB	set	3987
   198  0000                     _TRISA	set	3986
   199  0000                     _PORTE	set	3972
   200  0000                     _PORTD	set	3971
   201  0000                     _PORTC	set	3970
   202  0000                     _TRISC	set	3988
   203  0000                     _TRISD	set	3989
   204  0000                     _TRISE	set	3990
   205  0000                     _TMR0L	set	4054
   206  0000                     _TMR0H	set	4055
   207  0000                     _T0CON	set	4053
   208  0000                     _UCFG	set	3951
   209  0000                     _UCON	set	3949
   210  0000                     _CMCON	set	4020
   211  0000                     _ADCON1	set	4033
   212  0000                     _LATB	set	3978
   213  0000                     _LATE	set	3981
   214  0000                     _LATD	set	3980
   215  0000                     _LATC	set	3979
   216  0000                     _LATA	set	3977
   217  0000                     _TMR0IF	set	32658
   218  0000                     _GIE	set	32663
   219  0000                     _TMR0IE	set	32661
   220                           
   221                           ; #config settings
   222  00080D  00                 	db	0	; dummy byte at the end
   223  0000                     
   224                           	psect	cinit
   225  001CD8                     __pcinit:
   226                           	opt callstack 0
   227  001CD8                     start_initialization:
   228                           	opt callstack 0
   229  001CD8                     __initialization:
   230                           	opt callstack 0
   231                           
   232                           ; Initialize objects allocated to BANK0 (30 bytes)
   233                           ; load TBLPTR registers with __pidataBANK0
   234  001CD8  0E0E               	movlw	low __pidataBANK0
   235  001CDA  6EF6               	movwf	tblptrl,c
   236  001CDC  0E22               	movlw	high __pidataBANK0
   237  001CDE  6EF7               	movwf	tblptrh,c
   238  001CE0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   239  001CE2  6EF8               	movwf	tblptru,c
   240  001CE4  EE00  F0CD         	lfsr	0,__pdataBANK0
   241  001CE8  EE10 F01E          	lfsr	1,30
   242  001CEC                     copy_data0:
   243  001CEC  0009               	tblrd		*+
   244  001CEE  CFF5 FFEE          	movff	tablat,postinc0
   245  001CF2  50E5               	movf	postdec1,w,c
   246  001CF4  50E1               	movf	fsr1l,w,c
   247  001CF6  E1FA               	bnz	copy_data0
   248                           
   249                           ; Initialize objects allocated to COMRAM (1 bytes)
   250                           ; load TBLPTR registers with __pidataCOMRAM
   251  001CF8  0E90               	movlw	low __pidataCOMRAM
   252  001CFA  6EF6               	movwf	tblptrl,c
   253  001CFC  0E23               	movlw	high __pidataCOMRAM
   254  001CFE  6EF7               	movwf	tblptrh,c
   255  001D00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   256  001D02  6EF8               	movwf	tblptru,c
   257  001D04  0009               	tblrd		*+	;fetch initializer
   258  001D06  CFF5 F050          	movff	tablat,__pdataCOMRAM
   259                           
   260                           ; Clear objects allocated to BANK1 (64 bytes)
   261  001D0A  EE01  F000         	lfsr	0,__pbssBANK1
   262  001D0E  0E40               	movlw	64
   263  001D10                     clear_0:
   264  001D10  6AEE               	clrf	postinc0,c
   265  001D12  06E8               	decf	wreg,f,c
   266  001D14  E1FD               	bnz	clear_0
   267                           
   268                           ; Clear objects allocated to BANK0 (109 bytes)
   269  001D16  EE00  F060         	lfsr	0,__pbssBANK0
   270  001D1A  0E6D               	movlw	109
   271  001D1C                     clear_1:
   272  001D1C  6AEE               	clrf	postinc0,c
   273  001D1E  06E8               	decf	wreg,f,c
   274  001D20  E1FD               	bnz	clear_1
   275                           
   276                           ; Clear objects allocated to COMRAM (10 bytes)
   277  001D22  EE00  F046         	lfsr	0,__pbssCOMRAM
   278  001D26  0E0A               	movlw	10
   279  001D28                     clear_2:
   280  001D28  6AEE               	clrf	postinc0,c
   281  001D2A  06E8               	decf	wreg,f,c
   282  001D2C  E1FD               	bnz	clear_2
   283  001D2E                     end_of_initialization:
   284                           	opt callstack 0
   285  001D2E                     __end_of__initialization:
   286                           	opt callstack 0
   287  001D2E  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   288  001D30  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   289  001D32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   290  001D34  6EF8               	movwf	tblptru,c
   291  001D36  0100               	movlb	0
   292  001D38  EF4F  F00B         	goto	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMRAM
   295  000046                     __pbssCOMRAM:
   296                           	opt callstack 0
   297  000046                     _mpap:
   298                           	opt callstack 0
   299  000046                     	ds	8
   300  00004E                     disp7s_job@q:
   301                           	opt callstack 0
   302  00004E                     	ds	1
   303  00004F                     _main_flag:
   304                           	opt callstack 0
   305  00004F                     	ds	1
   306                           
   307                           	psect	dataCOMRAM
   308  000050                     __pdataCOMRAM:
   309                           	opt callstack 0
   310  000050                     mpap_do1step@i:
   311                           	opt callstack 0
   312  000050                     	ds	1
   313                           
   314                           	psect	bssBANK0
   315  000060                     __pbssBANK0:
   316                           	opt callstack 0
   317  000060                     _key:
   318                           	opt callstack 0
   319  000060                     	ds	80
   320  0000B0                     _group_x:
   321                           	opt callstack 0
   322  0000B0                     	ds	5
   323  0000B5                     _pump:
   324                           	opt callstack 0
   325  0000B5                     	ds	3
   326  0000B8                     _visMode:
   327                           	opt callstack 0
   328  0000B8                     	ds	2
   329  0000BA                     _autoMode:
   330                           	opt callstack 0
   331  0000BA                     	ds	2
   332  0000BC                     	ds	2
   333  0000BE                     pump_job@c:
   334                           	opt callstack 0
   335  0000BE                     	ds	1
   336  0000BF                     mpap_sych@c:
   337                           	opt callstack 0
   338  0000BF                     	ds	1
   339  0000C0                     mpap_sych@sm0:
   340                           	opt callstack 0
   341  0000C0                     	ds	1
   342  0000C1                     	ds	1
   343  0000C2                     	ds	1
   344  0000C3                     	ds	1
   345  0000C4                     	ds	1
   346  0000C5                     	ds	1
   347  0000C6                     	ds	1
   348  0000C7                     _error_grantedToWriteDisp:
   349                           	opt callstack 0
   350  0000C7                     	ds	1
   351  0000C8                     _error_requestToWriteDisp:
   352                           	opt callstack 0
   353  0000C8                     	ds	1
   354  0000C9                     _disp_owner:
   355                           	opt callstack 0
   356  0000C9                     	ds	1
   357  0000CA                     _machineState:
   358                           	opt callstack 0
   359  0000CA                     	ds	1
   360  0000CB                     _lock:
   361                           	opt callstack 0
   362  0000CB                     	ds	1
   363  0000CC                     _isr_flag:
   364                           	opt callstack 0
   365  0000CC                     	ds	1
   366                           
   367                           	psect	dataBANK0
   368  0000CD                     __pdataBANK0:
   369                           	opt callstack 0
   370  0000CD                     _disp7s_mux:
   371                           	opt callstack 0
   372  0000CD                     	ds	20
   373  0000E1                     _mpap_step:
   374                           	opt callstack 0
   375  0000E1                     	ds	8
   376  0000E9                     _mpap_off:
   377                           	opt callstack 0
   378  0000E9                     	ds	2
   379                           
   380                           	psect	bssBANK1
   381  000100                     __pbssBANK1:
   382                           	opt callstack 0
   383  000100                     _pulsonic:
   384                           	opt callstack 0
   385  000100                     	ds	64
   386                           
   387                           	psect	cstackBANK0
   388  0000EB                     __pcstackBANK0:
   389                           	opt callstack 0
   390  0000EB                     disp7s_write_f@buff:
   391                           	opt callstack 0
   392                           
   393                           ; 10 bytes @ 0x0
   394  0000EB                     	ds	10
   395  0000F5                     disp7s_write_f@I:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0xA
   399  0000F5                     	ds	2
   400  0000F7                     disp7s_write_f@pi:
   401                           	opt callstack 0
   402                           
   403                           ; 1 bytes @ 0xC
   404  0000F7                     	ds	1
   405  0000F8                     disp7s_write_f@K10MULT:
   406                           	opt callstack 0
   407                           
   408                           ; 3 bytes @ 0xD
   409  0000F8                     	ds	3
   410  0000FB                     disp7s_write_f@i:
   411                           	opt callstack 0
   412                           
   413                           ; 1 bytes @ 0x10
   414  0000FB                     	ds	1
   415                           
   416                           	psect	cstackCOMRAM
   417  000001                     __pcstackCOMRAM:
   418                           	opt callstack 0
   419  000001                     mpap_do1step@KI:
   420                           	opt callstack 0
   421                           
   422                           ; 1 bytes @ 0x0
   423  000001                     	ds	1
   424  000002                     ??_mpap_homming:
   425  000002                     mpap_normal_mode@cod_ret:
   426                           	opt callstack 0
   427                           
   428                           ; 1 bytes @ 0x1
   429  000002                     	ds	1
   430  000003                     mpap_homming@cod_ret:
   431                           	opt callstack 0
   432                           
   433                           ; 1 bytes @ 0x2
   434  000003                     	ds	1
   435  000004                     
   436                           ; 1 bytes @ 0x3
   437  000004                     	ds	1
   438  000005                     ??_INTERRUPCION:
   439                           
   440                           ; 1 bytes @ 0x4
   441  000005                     	ds	6
   442  00000B                     ??_ikey_is_accessible:
   443  00000B                     ??_disp7s_mux_Q:
   444  00000B                     ?_strlen:
   445                           	opt callstack 0
   446  00000B                     ?___wmul:
   447                           	opt callstack 0
   448  00000B                     ?___lwdiv:
   449                           	opt callstack 0
   450  00000B                     ?___lwmod:
   451                           	opt callstack 0
   452  00000B                     ?___ftpack:
   453                           	opt callstack 0
   454  00000B                     ikb_init@i:
   455                           	opt callstack 0
   456  00000B                     ikb_key_is_ready2read@k:
   457                           	opt callstack 0
   458  00000B                     ikey_clear_all_flag@i:
   459                           	opt callstack 0
   460  00000B                     pulsonic_init@i:
   461                           	opt callstack 0
   462  00000B                     disp7s_mux_init@i:
   463                           	opt callstack 0
   464  00000B                     strlen@s:
   465                           	opt callstack 0
   466  00000B                     pump_setTick@ticks:
   467                           	opt callstack 0
   468  00000B                     ___wmul@multiplier:
   469                           	opt callstack 0
   470  00000B                     ___lwdiv@dividend:
   471                           	opt callstack 0
   472  00000B                     ___lwmod@dividend:
   473                           	opt callstack 0
   474  00000B                     ___ftpack@arg:
   475                           	opt callstack 0
   476                           
   477                           ; 3 bytes @ 0xA
   478  00000B                     	ds	1
   479  00000C                     ikey_scan@k:
   480                           	opt callstack 0
   481  00000C                     disp7s_init@i:
   482                           	opt callstack 0
   483                           
   484                           ; 1 bytes @ 0xB
   485  00000C                     	ds	1
   486  00000D                     ikey_is_accessible@k:
   487                           	opt callstack 0
   488  00000D                     strlen@cp:
   489                           	opt callstack 0
   490  00000D                     ___wmul@multiplicand:
   491                           	opt callstack 0
   492  00000D                     ___lwdiv@divisor:
   493                           	opt callstack 0
   494  00000D                     ___lwmod@divisor:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0xC
   498  00000D                     	ds	1
   499  00000E                     ___ftpack@exp:
   500                           	opt callstack 0
   501                           
   502                           ; 1 bytes @ 0xD
   503  00000E                     	ds	1
   504  00000F                     ___ftpack@sign:
   505                           	opt callstack 0
   506  00000F                     ___lwdiv@counter:
   507                           	opt callstack 0
   508  00000F                     ___lwmod@counter:
   509                           	opt callstack 0
   510  00000F                     ___wmul@product:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0xE
   514  00000F                     	ds	1
   515  000010                     ??___ftpack:
   516  000010                     ___lwdiv@quotient:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0xF
   520  000010                     	ds	1
   521  000011                     disp7s_mux_Q@q:
   522                           	opt callstack 0
   523  000011                     mpap_setupToTurn@numSteps_tomove:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x10
   527  000011                     	ds	1
   528  000012                     disp7s_mux_Q@i:
   529                           	opt callstack 0
   530  000012                     utoa@buf:
   531                           	opt callstack 0
   532                           
   533                           ; 1 bytes @ 0x11
   534  000012                     	ds	1
   535  000013                     ??_disp7s_job:
   536  000013                     ?___ftadd:
   537                           	opt callstack 0
   538  000013                     ?___ftmul:
   539                           	opt callstack 0
   540  000013                     ?___lwtoft:
   541                           	opt callstack 0
   542  000013                     _mpap_setupToTurn$427:
   543                           	opt callstack 0
   544  000013                     ___lwtoft@c:
   545                           	opt callstack 0
   546  000013                     utoa@val:
   547                           	opt callstack 0
   548  000013                     ___ftadd@f1:
   549                           	opt callstack 0
   550  000013                     ___ftmul@f1:
   551                           	opt callstack 0
   552                           
   553                           ; 3 bytes @ 0x12
   554  000013                     	ds	2
   555  000015                     mpap_movetoNozzle@n:
   556                           	opt callstack 0
   557  000015                     disp7s_job@pq:
   558                           	opt callstack 0
   559  000015                     utoa@base:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x14
   563  000015                     	ds	1
   564  000016                     ___ftadd@f2:
   565                           	opt callstack 0
   566  000016                     ___ftge@ff1:
   567                           	opt callstack 0
   568  000016                     ___ftmul@f2:
   569                           	opt callstack 0
   570                           
   571                           ; 3 bytes @ 0x15
   572  000016                     	ds	1
   573  000017                     utoa@v:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x16
   577  000017                     	ds	2
   578  000019                     ??___ftadd:
   579  000019                     ??___ftmul:
   580  000019                     utoa@c:
   581                           	opt callstack 0
   582  000019                     ___ftge@ff2:
   583                           	opt callstack 0
   584                           
   585                           ; 3 bytes @ 0x18
   586  000019                     	ds	1
   587  00001A                     itoa@buf:
   588                           	opt callstack 0
   589                           
   590                           ; 1 bytes @ 0x19
   591  00001A                     	ds	1
   592  00001B                     itoa@val:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x1A
   596  00001B                     	ds	1
   597  00001C                     ??___ftge:
   598  00001C                     ___ftadd@sign:
   599                           	opt callstack 0
   600  00001C                     ___ftmul@exp:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x1B
   604  00001C                     	ds	1
   605  00001D                     ___ftadd@exp2:
   606                           	opt callstack 0
   607  00001D                     itoa@base:
   608                           	opt callstack 0
   609  00001D                     ___ftmul@f3_as_product:
   610                           	opt callstack 0
   611                           
   612                           ; 3 bytes @ 0x1C
   613  00001D                     	ds	1
   614  00001E                     ___ftadd@exp1:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0x1D
   618  00001E                     	ds	1
   619  00001F                     ??_ikey_parsing:
   620  00001F                     nozzle_isEnabled@n:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x1E
   624  00001F                     	ds	1
   625  000020                     ___ftmul@cntr:
   626                           	opt callstack 0
   627  000020                     disp7s_write_i@pDisp:
   628                           	opt callstack 0
   629                           
   630                           ; 2 bytes @ 0x1F
   631  000020                     	ds	1
   632  000021                     ___ftmul@sign:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0x20
   636  000021                     	ds	1
   637  000022                     ?___fttol:
   638                           	opt callstack 0
   639  000022                     disp7s_write_i@NUM_OF_DISP:
   640                           	opt callstack 0
   641  000022                     ___fttol@f1:
   642                           	opt callstack 0
   643                           
   644                           ; 3 bytes @ 0x21
   645  000022                     	ds	1
   646  000023                     ikey_parsing@k:
   647                           	opt callstack 0
   648  000023                     disp7s_write_i@num:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0x22
   652  000023                     	ds	1
   653  000024                     
   654                           ; 1 bytes @ 0x23
   655  000024                     	ds	1
   656  000025                     ??_disp7s_write_i:
   657                           
   658                           ; 1 bytes @ 0x24
   659  000025                     	ds	1
   660  000026                     ??___fttol:
   661                           
   662                           ; 1 bytes @ 0x25
   663  000026                     	ds	4
   664  00002A                     disp7s_write_i@buff:
   665                           	opt callstack 0
   666                           
   667                           ; 10 bytes @ 0x29
   668  00002A                     	ds	1
   669  00002B                     ___fttol@sign1:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0x2A
   673  00002B                     	ds	1
   674  00002C                     ___fttol@lval:
   675                           	opt callstack 0
   676                           
   677                           ; 4 bytes @ 0x2B
   678  00002C                     	ds	4
   679  000030                     ___fttol@exp1:
   680                           	opt callstack 0
   681                           
   682                           ; 1 bytes @ 0x2F
   683  000030                     	ds	1
   684  000031                     disp7s_write_f@pDisp:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x30
   688  000031                     	ds	2
   689  000033                     disp7s_write_f@NUM_OF_DISP:
   690                           	opt callstack 0
   691                           
   692                           ; 1 bytes @ 0x32
   693  000033                     	ds	1
   694  000034                     disp7s_write_i@pi:
   695                           	opt callstack 0
   696  000034                     disp7s_write_f@num:
   697                           	opt callstack 0
   698                           
   699                           ; 3 bytes @ 0x33
   700  000034                     	ds	1
   701  000035                     disp7s_write_i@K10MULT:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x34
   705  000035                     	ds	2
   706  000037                     ??_disp7s_write_f:
   707  000037                     disp7s_write_i@i:
   708                           	opt callstack 0
   709                           
   710                           ; 1 bytes @ 0x36
   711  000037                     	ds	1
   712  000038                     disp7s_qtyDisp_writeInt@num:
   713                           	opt callstack 0
   714  000038                     disp7s_modeDisp_writeInt@num:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x37
   718  000038                     	ds	2
   719  00003A                     
   720                           ; 1 bytes @ 0x39
   721  00003A                     	ds	2
   722  00003C                     disp7s_qtyDisp_writeFloat@num:
   723                           	opt callstack 0
   724                           
   725                           ; 3 bytes @ 0x3B
   726  00003C                     	ds	3
   727  00003F                     visMode_disp@qty:
   728                           	opt callstack 0
   729                           
   730                           ; 3 bytes @ 0x3E
   731  00003F                     	ds	3
   732  000042                     visMode_disp@c:
   733                           	opt callstack 0
   734                           
   735                           ; 1 bytes @ 0x41
   736  000042                     	ds	1
   737  000043                     visMode_job@cod_ret:
   738                           	opt callstack 0
   739                           
   740                           ; 1 bytes @ 0x42
   741  000043                     	ds	1
   742  000044                     main@c_access_kb:
   743                           	opt callstack 0
   744                           
   745                           ; 1 bytes @ 0x43
   746  000044                     	ds	1
   747  000045                     main@c_access_disp:
   748                           	opt callstack 0
   749                           
   750                           ; 1 bytes @ 0x44
   751  000045                     	ds	1
   752                           
   753 ;;
   754 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   755 ;;
   756 ;; *************** function _main *****************
   757 ;; Defined at:
   758 ;;		line 79 in file "main.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  c_access_dis    1   68[COMRAM] char 
   763 ;;  c_access_kb     1   67[COMRAM] char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 3F/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   773 ;;      Params:         0       0       0       0       0       0       0       0       0
   774 ;;      Locals:         2       0       0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0
   776 ;;      Totals:         2       0       0       0       0       0       0       0       0
   777 ;;Total ram usage:        2 bytes
   778 ;; Hardware stack levels required when called:   12
   779 ;; This function calls:
   780 ;;		_autoMode_job
   781 ;;		_disp7s_init
   782 ;;		_disp7s_job
   783 ;;		_ikb_flush
   784 ;;		_ikb_init
   785 ;;		_ikb_job
   786 ;;		_mpap_sych
   787 ;;		_pulsonic_init
   788 ;;		_pump_job
   789 ;;		_visMode_init
   790 ;;		_visMode_job
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text0
   797  00169E                     __ptext0:
   798                           	opt callstack 0
   799  00169E                     _main:
   800                           	opt callstack 19
   801                           
   802                           ;main.c: 81: int8_t c_access_kb=0;
   803                           
   804                           ;incstack = 0
   805  00169E  0E00               	movlw	0
   806  0016A0  6E44               	movwf	main@c_access_kb,c
   807                           
   808                           ;main.c: 82: int8_t c_access_disp=0;
   809  0016A2  0E00               	movlw	0
   810  0016A4  6E45               	movwf	main@c_access_disp,c
   811                           
   812                           ;main.c: 84: LATA = 0x00;
   813  0016A6  0E00               	movlw	0
   814  0016A8  6E89               	movwf	3977,c	;volatile
   815                           
   816                           ;main.c: 85: LATC = 0x00;
   817  0016AA  0E00               	movlw	0
   818  0016AC  6E8B               	movwf	3979,c	;volatile
   819                           
   820                           ;main.c: 86: LATD = 0x00;
   821  0016AE  0E00               	movlw	0
   822  0016B0  6E8C               	movwf	3980,c	;volatile
   823                           
   824                           ;main.c: 87: LATE = 0x00;
   825  0016B2  0E00               	movlw	0
   826  0016B4  6E8D               	movwf	3981,c	;volatile
   827                           
   828                           ;main.c: 88: LATB = 0x00;
   829  0016B6  0E00               	movlw	0
   830  0016B8  6E8A               	movwf	3978,c	;volatile
   831                           
   832                           ;main.c: 90: ADCON1 = 0x0F;
   833  0016BA  0E0F               	movlw	15
   834  0016BC  6EC1               	movwf	4033,c	;volatile
   835                           
   836                           ;main.c: 91: CMCON=0xCF;
   837  0016BE  0ECF               	movlw	207
   838  0016C0  6EB4               	movwf	4020,c	;volatile
   839                           
   840                           ;main.c: 94: UCON = 0;
   841  0016C2  0E00               	movlw	0
   842  0016C4  6E6D               	movwf	3949,c	;volatile
   843                           
   844                           ;main.c: 95: UCFG = 1<<3;
   845  0016C6  0E08               	movlw	8
   846  0016C8  6E6F               	movwf	3951,c	;volatile
   847                           
   848                           ;main.c: 96: T0CON = 0B10000111;
   849  0016CA  0E87               	movlw	135
   850  0016CC  6ED5               	movwf	4053,c	;volatile
   851                           
   852                           ;main.c: 98: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) ) 
      +                          >> 8);
   853  0016CE  68D7               	setf	4055,c	;volatile
   854                           
   855                           ;main.c: 99: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) ))
      +                          ;
   856  0016D0  0ED1               	movlw	209
   857  0016D2  6ED6               	movwf	4054,c	;volatile
   858                           
   859                           ;main.c: 100: TMR0IE = 1;
   860  0016D4  8AF2               	bsf	4082,5,c	;volatile
   861  0016D6  808D               	bsf	3981,0,c	;volatile
   862  0016D8  9096               	bcf	3990,0,c	;volatile
   863  0016DA  9095               	bcf	3989,0,c	;volatile
   864  0016DC  9295               	bcf	3989,1,c	;volatile
   865  0016DE  9495               	bcf	3989,2,c	;volatile
   866  0016E0  9695               	bcf	3989,3,c	;volatile
   867  0016E2  928B               	bcf	3979,1,c	;volatile
   868  0016E4  9294               	bcf	3988,1,c	;volatile
   869  0016E6  8296               	bsf	3990,1,c	;volatile
   870  0016E8  8094               	bsf	3988,0,c	;volatile
   871  0016EA  8496               	bsf	3990,2,c	;volatile
   872                           
   873                           ;main.c: 118: ikb_init();
   874  0016EC  ECB0  F00B         	call	_ikb_init	;wreg free
   875                           
   876                           ; BSR set to: 0
   877                           ;main.c: 119: disp7s_init();
   878  0016F0  ECD0  F00E         	call	_disp7s_init	;wreg free
   879                           
   880                           ;main.c: 120: pulsonic_init();
   881  0016F4  EC6D  F010         	call	_pulsonic_init	;wreg free
   882                           
   883                           ;main.c: 127: visMode_init();
   884  0016F8  EC73  F011         	call	_visMode_init	;wreg free
   885                           
   886                           ; BSR set to: 0
   887                           ;main.c: 128: disp_owner = DISPOWNER_VISUALIZER_MODE;
   888  0016FC  0E01               	movlw	1
   889  0016FE  6FC9               	movwf	_disp_owner& (0+255),b
   890                           
   891                           ; BSR set to: 0
   892                           ;main.c: 131: GIE = 1;
   893  001700  8EF2               	bsf	4082,7,c	;volatile
   894  001702                     l4514:
   895                           
   896                           ; BSR set to: 0
   897                           ;main.c: 133: {;main.c: 134: if (isr_flag.f1ms)
   898  001702  A1CC               	btfss	_isr_flag& (0+255),0,b	;volatile
   899  001704  D002               	goto	l110
   900                           
   901                           ; BSR set to: 0
   902                           ;main.c: 135: {;main.c: 136: isr_flag.f1ms = 0;
   903  001706  91CC               	bcf	_isr_flag& (0+255),0,b	;volatile
   904                           
   905                           ;main.c: 137: main_flag.f1ms = 1;
   906  001708  804F               	bsf	_main_flag,0,c	;volatile
   907  00170A                     l110:
   908                           
   909                           ; BSR set to: 0
   910                           ;main.c: 138: };main.c: 140: if (main_flag.f1ms)
   911  00170A  A04F               	btfss	_main_flag,0,c	;volatile
   912  00170C  D017               	goto	l4538
   913                           
   914                           ; BSR set to: 0
   915                           ;main.c: 141: {;main.c: 142: if (++c_access_kb == 20)
   916  00170E  2A44               	incf	main@c_access_kb,f,c
   917  001710  0E14               	movlw	20
   918  001712  1844               	xorwf	main@c_access_kb,w,c
   919  001714  A4D8               	btfss	status,2,c
   920  001716  D009               	goto	l4532
   921                           
   922                           ; BSR set to: 0
   923                           ;main.c: 143: {;main.c: 144: c_access_kb = 0;
   924  001718  0E00               	movlw	0
   925  00171A  6E44               	movwf	main@c_access_kb,c
   926                           
   927                           ; BSR set to: 0
   928                           ;main.c: 147: if (!lock.kb)
   929  00171C  B1CB               	btfsc	_lock& (0+255),0,b
   930  00171E  D005               	goto	l4532
   931                           
   932                           ; BSR set to: 0
   933                           ;main.c: 151: if (1)
   934  001720  EC79  F011         	call	_ikb_job	;wreg free
   935                           
   936                           ;main.c: 152: {;main.c: 153: disp_owner = DISPOWNER_VISUALIZER_MODE;
   937  001724  0E01               	movlw	1
   938  001726  0100               	movlb	0	; () banked
   939  001728  6FC9               	movwf	_disp_owner& (0+255),b
   940  00172A                     l4532:
   941                           
   942                           ; BSR set to: 0
   943                           ;main.c: 163: };main.c: 164: };main.c: 165: };main.c: 168: if (++c_access_disp == 3)
   944  00172A  2A45               	incf	main@c_access_disp,f,c
   945  00172C  0E03               	movlw	3
   946  00172E  1845               	xorwf	main@c_access_disp,w,c
   947  001730  A4D8               	btfss	status,2,c
   948  001732  D004               	goto	l4538
   949                           
   950                           ; BSR set to: 0
   951                           ;main.c: 169: {;main.c: 170: c_access_disp = 0;
   952  001734  0E00               	movlw	0
   953  001736  6E45               	movwf	main@c_access_disp,c
   954                           
   955                           ; BSR set to: 0
   956                           ;main.c: 171: disp7s_job();
   957  001738  EC88  F00D         	call	_disp7s_job	;wreg free
   958  00173C                     l4538:
   959                           
   960                           ;main.c: 172: };main.c: 173: };main.c: 178: if (machineState == RUNNING)
   961  00173C  0100               	movlb	0	; () banked
   962  00173E  05CA               	decf	_machineState& (0+255),w,b
   963  001740  A4D8               	btfss	status,2,c
   964  001742  D006               	goto	l4546
   965                           
   966                           ; BSR set to: 0
   967                           ;main.c: 179: {;main.c: 181: if (!lock.autoMode)
   968  001744  A3CB               	btfss	_lock& (0+255),1,b
   969                           
   970                           ; BSR set to: 0
   971                           ;main.c: 182: {;main.c: 183: if (autoMode_job())
   972  001746  ECB2  F00C         	call	_autoMode_job	;wreg free
   973                           
   974                           ; BSR set to: 0
   975                           ;main.c: 185: };main.c: 186: };main.c: 187: if (!lock.visualizerMode)
   976  00174A  A5CB               	btfss	_lock& (0+255),2,b
   977                           
   978                           ; BSR set to: 0
   979                           ;main.c: 188: {;main.c: 189: if (visMode_job())
   980  00174C  ECFE  F00D         	call	_visMode_job	;wreg free
   981  001750                     l4546:
   982                           
   983                           ; BSR set to: 0
   984                           ;main.c: 202: };main.c: 203: };main.c: 205: pump_job();
   985                           
   986                           ; BSR set to: 0
   987  001750  EC9E  F00E         	call	_pump_job	;wreg free
   988                           
   989                           ;main.c: 206: mpap_sych();
   990  001754  EC47  F00D         	call	_mpap_sych	;wreg free
   991                           
   992                           ; BSR set to: 0
   993                           ;main.c: 209: main_flag.f1ms = 0;
   994  001758  904F               	bcf	_main_flag,0,c	;volatile
   995                           
   996                           ; BSR set to: 0
   997                           ;main.c: 210: ikb_flush();
   998  00175A  ECB1  F011         	call	_ikb_flush	;wreg free
   999  00175E  D7D1               	goto	l4514
  1000  001760                     __end_of_main:
  1001                           	opt callstack 0
  1002                           
  1003 ;; *************** function _visMode_job *****************
  1004 ;; Defined at:
  1005 ;;		line 19 in file "visualizerMode.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  cod_ret         1   66[COMRAM] char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      char 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 3F/0
  1016 ;;		On exit  : 3F/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1022 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1023 ;;Total ram usage:        1 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:   11
  1026 ;; This function calls:
  1027 ;;		_ikb_key_is_ready2read
  1028 ;;		_visMode_disp
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text1
  1035  001BFC                     __ptext1:
  1036                           	opt callstack 0
  1037  001BFC                     _visMode_job:
  1038                           	opt callstack 19
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;visualizerMode.c: 21: int8_t cod_ret = 0;
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;incstack = 0
  1045  001BFC  0E00               	movlw	0
  1046  001BFE  6E43               	movwf	visMode_job@cod_ret,c
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;visualizerMode.c: 24: if (ikb_key_is_ready2read(0))
  1050  001C00  0E00               	movlw	0
  1051  001C02  EC25  F011         	call	_ikb_key_is_ready2read
  1052  001C06  0900               	iorlw	0
  1053  001C08  B4D8               	btfsc	status,2,c
  1054  001C0A  D00D               	goto	l4450
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;visualizerMode.c: 25: {;visualizerMode.c: 26: if (++visMode.c>8)
  1058  001C0C  2BB9               	incf	(_visMode+1)& (0+255),f,b
  1059  001C0E  51B9               	movf	(_visMode+1)& (0+255),w,b
  1060  001C10  0A80               	xorlw	128
  1061  001C12  0F77               	addlw	-137
  1062  001C14  A0D8               	btfss	status,0,c
  1063  001C16  D005               	goto	l4448
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;visualizerMode.c: 27: {;visualizerMode.c: 28: visMode.c = 0x00;
  1067  001C18  0E00               	movlw	0
  1068  001C1A  6FB9               	movwf	(_visMode+1)& (0+255),b
  1069                           
  1070                           ;visualizerMode.c: 29: cod_ret = 1;
  1071  001C1C  0E01               	movlw	1
  1072  001C1E  6E43               	movwf	visMode_job@cod_ret,c
  1073                           
  1074                           ;visualizerMode.c: 30: }
  1075  001C20  D002               	goto	l4450
  1076  001C22                     l4448:
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;visualizerMode.c: 31: else;visualizerMode.c: 32: {;visualizerMode.c: 33: visMode.disp7s
      +                          _req = 1;
  1080  001C22  0E01               	movlw	1
  1081  001C24  6FB8               	movwf	_visMode& (0+255),b
  1082  001C26                     l4450:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;visualizerMode.c: 34: };visualizerMode.c: 35: };visualizerMode.c: 36: if (ikb_key_is_re
      +                          ady2read(1))
  1086  001C26  0E01               	movlw	1
  1087  001C28  EC25  F011         	call	_ikb_key_is_ready2read
  1088  001C2C  0900               	iorlw	0
  1089  001C2E  B4D8               	btfsc	status,2,c
  1090  001C30  D00A               	goto	l4458
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;visualizerMode.c: 37: {;visualizerMode.c: 38: if (--visMode.c < 0)
  1094  001C32  07B9               	decf	(_visMode+1)& (0+255),f,b
  1095  001C34  AFB9               	btfss	(_visMode+1)& (0+255),7,b
  1096  001C36  D005               	goto	l4456
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;visualizerMode.c: 39: {;visualizerMode.c: 40: visMode.c = 8;
  1100  001C38  0E08               	movlw	8
  1101  001C3A  6FB9               	movwf	(_visMode+1)& (0+255),b
  1102                           
  1103                           ;visualizerMode.c: 41: cod_ret = 1;
  1104  001C3C  0E01               	movlw	1
  1105  001C3E  6E43               	movwf	visMode_job@cod_ret,c
  1106                           
  1107                           ;visualizerMode.c: 42: }
  1108  001C40  D002               	goto	l4458
  1109  001C42                     l4456:
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;visualizerMode.c: 43: else;visualizerMode.c: 44: {;visualizerMode.c: 45: visMode.disp7s
      +                          _req = 1;
  1113  001C42  0E01               	movlw	1
  1114  001C44  6FB8               	movwf	_visMode& (0+255),b
  1115  001C46                     l4458:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;visualizerMode.c: 46: };visualizerMode.c: 47: };visualizerMode.c: 48: if (ikb_key_is_re
      +                          ady2read(2))
  1119  001C46  0E02               	movlw	2
  1120  001C48  EC25  F011         	call	_ikb_key_is_ready2read
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;visualizerMode.c: 51: };visualizerMode.c: 52: if (ikb_key_is_ready2read(3))
  1124  001C4C  0E03               	movlw	3
  1125  001C4E  EC25  F011         	call	_ikb_key_is_ready2read
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;visualizerMode.c: 55: };visualizerMode.c: 56: if (ikb_key_is_ready2read(4))
  1129  001C52  0E04               	movlw	4
  1130  001C54  EC25  F011         	call	_ikb_key_is_ready2read
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;visualizerMode.c: 59: };visualizerMode.c: 62: if ( visMode.disp7s_req == 1)
  1134  001C58  05B8               	decf	_visMode& (0+255),w,b
  1135  001C5A  A4D8               	btfss	status,2,c
  1136  001C5C  D006               	goto	l4470
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;visualizerMode.c: 63: {;visualizerMode.c: 64: visMode_disp(visMode.c);
  1140  001C5E  51B9               	movf	(_visMode+1)& (0+255),w,b
  1141  001C60  EC37  F00E         	call	_visMode_disp
  1142                           
  1143                           ;visualizerMode.c: 65: visMode.disp7s_req = 0;
  1144  001C64  0E00               	movlw	0
  1145  001C66  0100               	movlb	0	; () banked
  1146  001C68  6FB8               	movwf	_visMode& (0+255),b
  1147  001C6A                     l4470:
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;visualizerMode.c: 66: };visualizerMode.c: 68: return cod_ret;
  1151  001C6A  5043               	movf	visMode_job@cod_ret,w,c
  1152                           
  1153                           ; BSR set to: 0
  1154  001C6C  0012               	return		;funcret
  1155  001C6E                     __end_of_visMode_job:
  1156                           	opt callstack 0
  1157                           
  1158 ;; *************** function _visMode_disp *****************
  1159 ;; Defined at:
  1160 ;;		line 70 in file "visualizerMode.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  c               1    wreg     char 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  c               1   65[COMRAM] char 
  1165 ;;  qty             3   62[COMRAM] char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 3F/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0
  1176 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1178 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1179 ;;Total ram usage:        4 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:   10
  1182 ;; This function calls:
  1183 ;;		_disp7s_modeDisp_writeInt
  1184 ;;		_disp7s_qtyDisp_writeFloat
  1185 ;;		_disp7s_qtyDisp_writeInt
  1186 ;; This function is called by:
  1187 ;;		_visMode_job
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text2
  1192  001C6E                     __ptext2:
  1193                           	opt callstack 0
  1194  001C6E                     _visMode_disp:
  1195                           	opt callstack 19
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;incstack = 0
  1199                           ;visMode_disp@c stored from wreg
  1200  001C6E  6E42               	movwf	visMode_disp@c,c
  1201                           
  1202                           ;visualizerMode.c: 72: double qty;;visualizerMode.c: 75: if (disp_owner == DISPOWNER_VIS
      +                          UALIZER_MODE)
  1203  001C70  0100               	movlb	0	; () banked
  1204  001C72  05C9               	decf	_disp_owner& (0+255),w,b
  1205  001C74  A4D8               	btfss	status,2,c
  1206  001C76  0012               	return	
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;visualizerMode.c: 76: {;visualizerMode.c: 77: disp7s_modeDisp_writeInt(c+1);
  1210  001C78  0E01               	movlw	1
  1211  001C7A  2442               	addwf	visMode_disp@c,w,c
  1212  001C7C  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  1213  001C7E  6AE8               	clrf	wreg,c
  1214  001C80  B0D8               	btfsc	status,0,c
  1215  001C82  2AE8               	incf	wreg,f,c
  1216  001C84  BE42               	btfsc	visMode_disp@c,7,c
  1217  001C86  06E8               	decf	wreg,f,c
  1218  001C88  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  1219  001C8A  EC4E  F011         	call	_disp7s_modeDisp_writeInt	;wreg free
  1220                           
  1221                           ;visualizerMode.c: 79: if (c < 8)
  1222  001C8E  5042               	movf	visMode_disp@c,w,c
  1223  001C90  0A80               	xorlw	128
  1224  001C92  0F78               	addlw	-136
  1225  001C94  B0D8               	btfsc	status,0,c
  1226  001C96  D017               	goto	l4394
  1227                           
  1228                           ;visualizerMode.c: 80: {;visualizerMode.c: 81: qty = pulsonic.nozzle[c].Q_mlh;
  1229  001C98  5042               	movf	visMode_disp@c,w,c
  1230  001C9A  0D06               	mullw	6
  1231  001C9C  0E06               	movlw	low (_pulsonic+6)
  1232  001C9E  24F3               	addwf	prodl,w,c
  1233  001CA0  6ED9               	movwf	fsr2l,c
  1234  001CA2  0E01               	movlw	high (_pulsonic+6)
  1235  001CA4  20F4               	addwfc	prodh,w,c
  1236  001CA6  6EDA               	movwf	fsr2h,c
  1237  001CA8  CFDE F03F          	movff	postinc2,visMode_disp@qty
  1238  001CAC  CFDE F040          	movff	postinc2,visMode_disp@qty+1
  1239  001CB0  CFDD F041          	movff	postdec2,visMode_disp@qty+2
  1240                           
  1241                           ;visualizerMode.c: 83: {;visualizerMode.c: 84: disp7s_qtyDisp_writeFloat( qty );
  1242  001CB4  C03F  F03C         	movff	visMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  1243  001CB8  C040  F03D         	movff	visMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  1244  001CBC  C041  F03E         	movff	visMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  1245  001CC0  EC16  F011         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  1246                           
  1247                           ;visualizerMode.c: 85: }
  1248  001CC4  0012               	return	
  1249  001CC6                     l4394:
  1250                           
  1251                           ;visualizerMode.c: 91: else;visualizerMode.c: 92: {;visualizerMode.c: 93: disp7s_qtyDisp
      +                          _writeInt( pulsonic.oil.viscosity );
  1252  001CC6  0101               	movlb	1	; () banked
  1253  001CC8  5136               	movf	(_pulsonic+54)& (0+255),w,b
  1254  001CCA  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  1255  001CCC  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  1256  001CCE  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  1257  001CD0  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  1258  001CD2  EC41  F011         	call	_disp7s_qtyDisp_writeInt	;wreg free
  1259  001CD6  0012               	return		;funcret
  1260  001CD8                     __end_of_visMode_disp:
  1261                           	opt callstack 0
  1262                           
  1263 ;; *************** function _disp7s_qtyDisp_writeInt *****************
  1264 ;; Defined at:
  1265 ;;		line 254 in file "display.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  num             2   55[COMRAM] int 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 3F/1
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1279 ;;      Params:         2       0       0       0       0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1282 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1283 ;;Total ram usage:        2 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    9
  1286 ;; This function calls:
  1287 ;;		_disp7s_write_i
  1288 ;; This function is called by:
  1289 ;;		_visMode_disp
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text3
  1294  002282                     __ptext3:
  1295                           	opt callstack 0
  1296  002282                     _disp7s_qtyDisp_writeInt:
  1297                           	opt callstack 19
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;display.c: 256: disp7s_write_i(pulsonic.disp7s.qty, 3, num);
  1301                           
  1302                           ;incstack = 0
  1303  002282  0E3B               	movlw	low (_pulsonic+59)
  1304  002284  6E20               	movwf	disp7s_write_i@pDisp,c
  1305  002286  0E01               	movlw	high (_pulsonic+59)
  1306  002288  6E21               	movwf	disp7s_write_i@pDisp+1,c
  1307  00228A  0E03               	movlw	3
  1308  00228C  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  1309  00228E  C038  F023         	movff	disp7s_qtyDisp_writeInt@num,disp7s_write_i@num
  1310  002292  C039  F024         	movff	disp7s_qtyDisp_writeInt@num+1,disp7s_write_i@num+1
  1311  002296  ECE7  F009         	call	_disp7s_write_i	;wreg free
  1312  00229A  0012               	return		;funcret
  1313  00229C                     __end_of_disp7s_qtyDisp_writeInt:
  1314                           	opt callstack 0
  1315                           
  1316 ;; *************** function _disp7s_qtyDisp_writeFloat *****************
  1317 ;; Defined at:
  1318 ;;		line 215 in file "display.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  num             3   59[COMRAM] float 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 3F/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1332 ;;      Params:         3       0       0       0       0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1335 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1336 ;;Total ram usage:        3 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    9
  1339 ;; This function calls:
  1340 ;;		_disp7s_write_f
  1341 ;; This function is called by:
  1342 ;;		_visMode_disp
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text4
  1347  00222C                     __ptext4:
  1348                           	opt callstack 0
  1349  00222C                     _disp7s_qtyDisp_writeFloat:
  1350                           	opt callstack 19
  1351                           
  1352                           ;display.c: 217: disp7s_write_f(pulsonic.disp7s.qty, 3, num);
  1353                           
  1354                           ;incstack = 0
  1355  00222C  0E3B               	movlw	low (_pulsonic+59)
  1356  00222E  6E31               	movwf	disp7s_write_f@pDisp,c
  1357  002230  0E01               	movlw	high (_pulsonic+59)
  1358  002232  6E32               	movwf	disp7s_write_f@pDisp+1,c
  1359  002234  0E03               	movlw	3
  1360  002236  6E33               	movwf	disp7s_write_f@NUM_OF_DISP,c
  1361  002238  C03C  F034         	movff	disp7s_qtyDisp_writeFloat@num,disp7s_write_f@num
  1362  00223C  C03D  F035         	movff	disp7s_qtyDisp_writeFloat@num+1,disp7s_write_f@num+1
  1363  002240  C03E  F036         	movff	disp7s_qtyDisp_writeFloat@num+2,disp7s_write_f@num+2
  1364  002244  EC1F  F007         	call	_disp7s_write_f	;wreg free
  1365                           
  1366                           ; BSR set to: 0
  1367  002248  0012               	return		;funcret
  1368  00224A                     __end_of_disp7s_qtyDisp_writeFloat:
  1369                           	opt callstack 0
  1370                           
  1371 ;; *************** function _disp7s_write_f *****************
  1372 ;; Defined at:
  1373 ;;		line 161 in file "display.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  pDisp           2   48[COMRAM] PTR unsigned char 
  1376 ;;		 -> pulsonic.disp7s(5), pulsonic(64), 
  1377 ;;  NUM_OF_DISP     1   50[COMRAM] char 
  1378 ;;  num             3   51[COMRAM] char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  buff           10    0[BANK0 ] unsigned char [10]
  1381 ;;  K10MULT         3   13[BANK0 ] unsigned char [10]
  1382 ;;  I               2   10[BANK0 ] int 
  1383 ;;  i               1   16[BANK0 ] char 
  1384 ;;  pi              1   12[BANK0 ] char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 3F/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1394 ;;      Params:         6       0       0       0       0       0       0       0       0
  1395 ;;      Locals:         0      17       0       0       0       0       0       0       0
  1396 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1397 ;;      Totals:        11      17       0       0       0       0       0       0       0
  1398 ;;Total ram usage:       28 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    8
  1401 ;; This function calls:
  1402 ;;		___ftadd
  1403 ;;		___ftge
  1404 ;;		___ftmul
  1405 ;;		___fttol
  1406 ;;		_itoa
  1407 ;; This function is called by:
  1408 ;;		_disp7s_qtyDisp_writeFloat
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text5
  1413  000E3E                     __ptext5:
  1414                           	opt callstack 0
  1415  000E3E                     _disp7s_write_f:
  1416                           	opt callstack 19
  1417                           
  1418                           ;display.c: 163: double K10MULT;;display.c: 164: int16_t I;;display.c: 165: char buff[10
      +                          ];;display.c: 166: int8_t i;;display.c: 167: int8_t pi;;display.c: 169: K10MULT = 1;
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;incstack = 0
  1422  000E3E  0E00               	movlw	0
  1423  000E40  0100               	movlb	0	; () banked
  1424  000E42  6FF8               	movwf	disp7s_write_f@K10MULT& (0+255),b
  1425  000E44  0E80               	movlw	128
  1426  000E46  6FF9               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  1427  000E48  0E3F               	movlw	63
  1428  000E4A  6FFA               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;display.c: 170: i = NUM_OF_DISP;
  1432  000E4C  C033  F0FB         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_write_f@i
  1433                           
  1434                           ;display.c: 171: while (i--)
  1435  000E50  D014               	goto	l4176
  1436  000E52                     l4174:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;display.c: 172: {K10MULT *=10;}
  1440  000E52  C0F8  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  1441  000E56  C0F9  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  1442  000E5A  C0FA  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  1443  000E5E  0E00               	movlw	0
  1444  000E60  6E16               	movwf	___ftmul@f2,c
  1445  000E62  0E20               	movlw	32
  1446  000E64  6E17               	movwf	___ftmul@f2+1,c
  1447  000E66  0E41               	movlw	65
  1448  000E68  6E18               	movwf	___ftmul@f2+2,c
  1449  000E6A  EC6C  F00A         	call	___ftmul	;wreg free
  1450  000E6E  C013  F0F8         	movff	?___ftmul,disp7s_write_f@K10MULT
  1451  000E72  C014  F0F9         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  1452  000E76  C015  F0FA         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  1453  000E7A                     l4176:
  1454  000E7A  0100               	movlb	0	; () banked
  1455  000E7C  07FB               	decf	disp7s_write_f@i& (0+255),f,b
  1456  000E7E  29FB               	incf	disp7s_write_f@i& (0+255),w,b
  1457  000E80  A4D8               	btfss	status,2,c
  1458  000E82  D7E7               	goto	l4174
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;display.c: 173: if (num >= K10MULT)
  1462  000E84  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  1463  000E88  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  1464  000E8C  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  1465  000E90  C0F8  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  1466  000E94  C0F9  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  1467  000E98  C0FA  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  1468  000E9C  ECC4  F00D         	call	___ftge	;wreg free
  1469  000EA0  A0D8               	btfss	status,0,c
  1470  000EA2  D014               	goto	l4182
  1471                           
  1472                           ;display.c: 174: {num= K10MULT-1;}
  1473  000EA4  C0F8  F013         	movff	disp7s_write_f@K10MULT,___ftadd@f1
  1474  000EA8  C0F9  F014         	movff	disp7s_write_f@K10MULT+1,___ftadd@f1+1
  1475  000EAC  C0FA  F015         	movff	disp7s_write_f@K10MULT+2,___ftadd@f1+2
  1476  000EB0  0E00               	movlw	0
  1477  000EB2  6E16               	movwf	___ftadd@f2,c
  1478  000EB4  0E80               	movlw	128
  1479  000EB6  6E17               	movwf	___ftadd@f2+1,c
  1480  000EB8  0EBF               	movlw	191
  1481  000EBA  6E18               	movwf	___ftadd@f2+2,c
  1482  000EBC  EC43  F008         	call	___ftadd	;wreg free
  1483  000EC0  C013  F034         	movff	?___ftadd,disp7s_write_f@num
  1484  000EC4  C014  F035         	movff	?___ftadd+1,disp7s_write_f@num+1
  1485  000EC8  C015  F036         	movff	?___ftadd+2,disp7s_write_f@num+2
  1486  000ECC                     l4182:
  1487                           
  1488                           ;display.c: 176: for (i=0; i<NUM_OF_DISP; i++)
  1489  000ECC  0E00               	movlw	0
  1490  000ECE  0100               	movlb	0	; () banked
  1491  000ED0  6FFB               	movwf	disp7s_write_f@i& (0+255),b
  1492  000ED2  D013               	goto	l4188
  1493  000ED4                     l4184:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;display.c: 177: {pDisp[i] = DISP7S_CHARS[OFF];}
  1497  000ED4  0E0B               	movlw	low _DISP7S_CHARS
  1498  000ED6  6EF6               	movwf	tblptrl,c
  1499  000ED8                     	if	1	;There is more than 1 active tblptr byte
  1500  000ED8  0E08               	movlw	high _DISP7S_CHARS
  1501  000EDA  6EF7               	movwf	tblptrh,c
  1502  000EDC                     	endif
  1503  000EDC                     	if	0	;There are less than 3 active tblptr bytes
  1504  000EDC                     	endif
  1505  000EDC  C0FB  F037         	movff	disp7s_write_f@i,??_disp7s_write_f
  1506  000EE0  6A38               	clrf	(??_disp7s_write_f+1)& (0+255),c
  1507  000EE2  BE37               	btfsc	??_disp7s_write_f& (0+255),7,c
  1508  000EE4  0638               	decf	(??_disp7s_write_f+1)& (0+255),f,c
  1509  000EE6  5037               	movf	??_disp7s_write_f,w,c
  1510  000EE8  2431               	addwf	disp7s_write_f@pDisp,w,c
  1511  000EEA  6ED9               	movwf	fsr2l,c
  1512  000EEC  5038               	movf	??_disp7s_write_f+1,w,c
  1513  000EEE  2032               	addwfc	disp7s_write_f@pDisp+1,w,c
  1514  000EF0  6EDA               	movwf	fsr2h,c
  1515  000EF2  0008               	tblrd		*
  1516  000EF4  CFF5 FFDF          	movff	tablat,indf2
  1517                           
  1518                           ; BSR set to: 0
  1519  000EF8  2BFB               	incf	disp7s_write_f@i& (0+255),f,b
  1520  000EFA                     l4188:
  1521                           
  1522                           ; BSR set to: 0
  1523  000EFA  51FB               	movf	disp7s_write_f@i& (0+255),w,b
  1524  000EFC  0A80               	xorlw	128
  1525  000EFE  6E37               	movwf	??_disp7s_write_f& (0+255),c
  1526  000F00  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  1527  000F02  0A80               	xorlw	128
  1528  000F04  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  1529  000F06  A0D8               	btfss	status,0,c
  1530  000F08  D7E5               	goto	l4184
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;display.c: 179: K10MULT = 1;
  1534  000F0A  0E00               	movlw	0
  1535  000F0C  6FF8               	movwf	disp7s_write_f@K10MULT& (0+255),b
  1536  000F0E  0E80               	movlw	128
  1537  000F10  6FF9               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  1538  000F12  0E3F               	movlw	63
  1539  000F14  6FFA               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  1540                           
  1541                           ;display.c: 180: for (i=0; i<=NUM_OF_DISP; i++)
  1542  000F16  0E00               	movlw	0
  1543  000F18  6FFB               	movwf	disp7s_write_f@i& (0+255),b
  1544  000F1A  D074               	goto	l4216
  1545  000F1C                     l4192:
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;display.c: 181: {;display.c: 182: if (num< K10MULT)
  1549  000F1C  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  1550  000F20  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  1551  000F24  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  1552  000F28  C0F8  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  1553  000F2C  C0F9  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  1554  000F30  C0FA  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  1555  000F34  ECC4  F00D         	call	___ftge	;wreg free
  1556  000F38  B0D8               	btfsc	status,0,c
  1557  000F3A  D04E               	goto	l4212
  1558                           
  1559                           ;display.c: 183: {;display.c: 184: if (i<NUM_OF_DISP)
  1560  000F3C  0100               	movlb	0	; () banked
  1561  000F3E  51FB               	movf	disp7s_write_f@i& (0+255),w,b
  1562  000F40  0A80               	xorlw	128
  1563  000F42  6E37               	movwf	??_disp7s_write_f& (0+255),c
  1564  000F44  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  1565  000F46  0A80               	xorlw	128
  1566  000F48  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  1567  000F4A  B0D8               	btfsc	status,0,c
  1568  000F4C  D036               	goto	l4208
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;display.c: 185: {;display.c: 186: I = (int16_t)(num*10);
  1572  000F4E  0E00               	movlw	0
  1573  000F50  6E16               	movwf	___ftmul@f2,c
  1574  000F52  0E20               	movlw	32
  1575  000F54  6E17               	movwf	___ftmul@f2+1,c
  1576  000F56  0E41               	movlw	65
  1577  000F58  6E18               	movwf	___ftmul@f2+2,c
  1578  000F5A  C034  F013         	movff	disp7s_write_f@num,___ftmul@f1
  1579  000F5E  C035  F014         	movff	disp7s_write_f@num+1,___ftmul@f1+1
  1580  000F62  C036  F015         	movff	disp7s_write_f@num+2,___ftmul@f1+2
  1581  000F66  EC6C  F00A         	call	___ftmul	;wreg free
  1582  000F6A  C013  F022         	movff	?___ftmul,___fttol@f1
  1583  000F6E  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  1584  000F72  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  1585  000F76  ECE6  F00A         	call	___fttol	;wreg free
  1586  000F7A  C022  F0F5         	movff	?___fttol,disp7s_write_f@I
  1587  000F7E  C023  F0F6         	movff	?___fttol+1,disp7s_write_f@I+1
  1588                           
  1589                           ;display.c: 189: if (i==0)
  1590  000F82  0100               	movlb	0	; () banked
  1591  000F84  51FB               	movf	disp7s_write_f@i& (0+255),w,b
  1592  000F86  A4D8               	btfss	status,2,c
  1593  000F88  D00D               	goto	l4202
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;display.c: 190: {pDisp[1]= DISP7S_NUMS[0];}
  1597  000F8A  0E01               	movlw	low _DISP7S_NUMS
  1598  000F8C  6EF6               	movwf	tblptrl,c
  1599  000F8E                     	if	1	;There is more than 1 active tblptr byte
  1600  000F8E  0E08               	movlw	high _DISP7S_NUMS
  1601  000F90  6EF7               	movwf	tblptrh,c
  1602  000F92                     	endif
  1603  000F92                     	if	0	;There are less than 3 active tblptr bytes
  1604  000F92                     	endif
  1605  000F92  EE20 F001          	lfsr	2,1
  1606  000F96  5031               	movf	disp7s_write_f@pDisp,w,c
  1607  000F98  26D9               	addwf	fsr2l,f,c
  1608  000F9A  5032               	movf	disp7s_write_f@pDisp+1,w,c
  1609  000F9C  22DA               	addwfc	fsr2h,f,c
  1610  000F9E  0008               	tblrd		*
  1611  000FA0  CFF5 FFDF          	movff	tablat,indf2
  1612  000FA4                     l4202:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;display.c: 192: pDisp[1] |= 0x80;
  1616  000FA4  EE20 F001          	lfsr	2,1
  1617  000FA8  5031               	movf	disp7s_write_f@pDisp,w,c
  1618  000FAA  26D9               	addwf	fsr2l,f,c
  1619  000FAC  5032               	movf	disp7s_write_f@pDisp+1,w,c
  1620  000FAE  22DA               	addwfc	fsr2h,f,c
  1621  000FB0  0E00               	movlw	0
  1622  000FB2  8EDB               	bsf	plusw2,7,c
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;display.c: 193: pi = i;
  1626  000FB4  C0FB  F0F7         	movff	disp7s_write_f@i,disp7s_write_f@pi
  1627                           
  1628                           ;display.c: 194: break;
  1629  000FB8  D02D               	goto	u4740
  1630  000FBA                     l4208:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;display.c: 196: else;display.c: 197: {;display.c: 198: I = (int16_t)(num);
  1634  000FBA  C034  F022         	movff	disp7s_write_f@num,___fttol@f1
  1635  000FBE  C035  F023         	movff	disp7s_write_f@num+1,___fttol@f1+1
  1636  000FC2  C036  F024         	movff	disp7s_write_f@num+2,___fttol@f1+2
  1637  000FC6  ECE6  F00A         	call	___fttol	;wreg free
  1638  000FCA  C022  F0F5         	movff	?___fttol,disp7s_write_f@I
  1639  000FCE  C023  F0F6         	movff	?___fttol+1,disp7s_write_f@I+1
  1640                           
  1641                           ;display.c: 199: pi = i-1;
  1642  000FD2  0100               	movlb	0	; () banked
  1643  000FD4  05FB               	decf	disp7s_write_f@i& (0+255),w,b
  1644  000FD6  6FF7               	movwf	disp7s_write_f@pi& (0+255),b
  1645  000FD8                     l4212:
  1646                           
  1647                           ;display.c: 200: };display.c: 201: };display.c: 202: K10MULT *= 10;
  1648  000FD8  C0F8  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  1649  000FDC  C0F9  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  1650  000FE0  C0FA  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  1651  000FE4  0E00               	movlw	0
  1652  000FE6  6E16               	movwf	___ftmul@f2,c
  1653  000FE8  0E20               	movlw	32
  1654  000FEA  6E17               	movwf	___ftmul@f2+1,c
  1655  000FEC  0E41               	movlw	65
  1656  000FEE  6E18               	movwf	___ftmul@f2+2,c
  1657  000FF0  EC6C  F00A         	call	___ftmul	;wreg free
  1658  000FF4  C013  F0F8         	movff	?___ftmul,disp7s_write_f@K10MULT
  1659  000FF8  C014  F0F9         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  1660  000FFC  C015  F0FA         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  1661  001000  0100               	movlb	0	; () banked
  1662  001002  2BFB               	incf	disp7s_write_f@i& (0+255),f,b
  1663  001004                     l4216:
  1664                           
  1665                           ; BSR set to: 0
  1666  001004  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  1667  001006  0A80               	xorlw	128
  1668  001008  6E37               	movwf	??_disp7s_write_f& (0+255),c
  1669  00100A  51FB               	movf	disp7s_write_f@i& (0+255),w,b
  1670  00100C  0A80               	xorlw	128
  1671  00100E  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  1672  001010  B0D8               	btfsc	status,0,c
  1673  001012  D784               	goto	l4192
  1674  001014                     u4740:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;display.c: 203: };display.c: 205: itoa(buff, I, 10);
  1678  001014  0EEB               	movlw	low disp7s_write_f@buff
  1679  001016  6E1A               	movwf	itoa@buf,c
  1680  001018  C0F5  F01B         	movff	disp7s_write_f@I,itoa@val
  1681  00101C  C0F6  F01C         	movff	disp7s_write_f@I+1,itoa@val+1
  1682  001020  0E00               	movlw	0
  1683  001022  6E1E               	movwf	itoa@base+1,c
  1684  001024  0E0A               	movlw	10
  1685  001026  6E1D               	movwf	itoa@base,c
  1686  001028  EC89  F010         	call	_itoa	;wreg free
  1687                           
  1688                           ;display.c: 207: i=0;
  1689  00102C  0E00               	movlw	0
  1690  00102E  0100               	movlb	0	; () banked
  1691  001030  6FFB               	movwf	disp7s_write_f@i& (0+255),b
  1692                           
  1693                           ;display.c: 208: while (buff[i] != '\0')
  1694  001032  D021               	goto	l4228
  1695  001034                     l4222:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;display.c: 209: {;display.c: 210: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  1699  001034  51FB               	movf	disp7s_write_f@i& (0+255),w,b
  1700  001036  0FEB               	addlw	low disp7s_write_f@buff
  1701  001038  6ED9               	movwf	fsr2l,c
  1702  00103A  6ADA               	clrf	fsr2h,c
  1703  00103C  50DF               	movf	indf2,w,c
  1704  00103E  6E37               	movwf	??_disp7s_write_f& (0+255),c
  1705  001040  0ED0               	movlw	208
  1706  001042  2637               	addwf	??_disp7s_write_f,f,c
  1707  001044  5037               	movf	??_disp7s_write_f,w,c
  1708  001046  0F01               	addlw	low _DISP7S_NUMS
  1709  001048  6E38               	movwf	(??_disp7s_write_f+1)& (0+255),c
  1710  00104A  C038  FFF6         	movff	??_disp7s_write_f+1,tblptrl
  1711  00104E                     	if	1	;There is more than 1 active tblptr byte
  1712  00104E  0E08               	movlw	high __smallconst
  1713  001050  6EF7               	movwf	tblptrh,c
  1714  001052                     	endif
  1715  001052                     	if	0	;tblptru may be non-zero
  1716  001052                     	endif
  1717  001052                     	if	0	;tblptru may be non-zero
  1718  001052                     	endif
  1719  001052  0008               	tblrd		*
  1720  001054  CFF5 F039          	movff	tablat,??_disp7s_write_f+2
  1721  001058  C0F7  F03A         	movff	disp7s_write_f@pi,??_disp7s_write_f+3
  1722  00105C  6A3B               	clrf	(??_disp7s_write_f+4)& (0+255),c
  1723  00105E  BE3A               	btfsc	(??_disp7s_write_f+3)& (0+255),7,c
  1724  001060  063B               	decf	(??_disp7s_write_f+4)& (0+255),f,c
  1725  001062  503A               	movf	??_disp7s_write_f+3,w,c
  1726  001064  2431               	addwf	disp7s_write_f@pDisp,w,c
  1727  001066  6ED9               	movwf	fsr2l,c
  1728  001068  503B               	movf	??_disp7s_write_f+4,w,c
  1729  00106A  2032               	addwfc	disp7s_write_f@pDisp+1,w,c
  1730  00106C  6EDA               	movwf	fsr2h,c
  1731  00106E  5039               	movf	??_disp7s_write_f+2,w,c
  1732  001070  12DF               	iorwf	indf2,f,c
  1733                           
  1734                           ; BSR set to: 0
  1735  001072  07F7               	decf	disp7s_write_f@pi& (0+255),f,b
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;display.c: 211: i++;
  1739  001074  2BFB               	incf	disp7s_write_f@i& (0+255),f,b
  1740  001076                     l4228:
  1741                           
  1742                           ; BSR set to: 0
  1743  001076  51FB               	movf	disp7s_write_f@i& (0+255),w,b
  1744  001078  0FEB               	addlw	low disp7s_write_f@buff
  1745  00107A  6ED9               	movwf	fsr2l,c
  1746  00107C  6ADA               	clrf	fsr2h,c
  1747  00107E  50DF               	movf	indf2,w,c
  1748  001080  B4D8               	btfsc	status,2,c
  1749  001082  0012               	return	
  1750  001084  D7D7               	goto	l4222
  1751  001086                     __end_of_disp7s_write_f:
  1752                           	opt callstack 0
  1753                           
  1754 ;; *************** function ___fttol *****************
  1755 ;; Defined at:
  1756 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  f1              3   33[COMRAM] float 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  lval            4   43[COMRAM] unsigned long 
  1761 ;;  exp1            1   47[COMRAM] unsigned char 
  1762 ;;  sign1           1   42[COMRAM] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  4   33[COMRAM] long 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1772 ;;      Params:         4       0       0       0       0       0       0       0       0
  1773 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1774 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1775 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1776 ;;Total ram usage:       15 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    5
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_disp7s_write_f
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text6
  1787  0015CC                     __ptext6:
  1788                           	opt callstack 0
  1789  0015CC                     ___fttol:
  1790                           	opt callstack 21
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;incstack = 0
  1794  0015CC  C024  F026         	movff	___fttol@f1+2,??___fttol
  1795  0015D0  6A27               	clrf	(??___fttol+1)& (0+255),c
  1796  0015D2  6A28               	clrf	(??___fttol+2)& (0+255),c
  1797  0015D4  3423               	rlcf	___fttol@f1+1,w,c
  1798  0015D6  3626               	rlcf	??___fttol& (0+255),f,c
  1799  0015D8  E301               	bnc	u4601
  1800  0015DA  8027               	bsf	(??___fttol+1)& (0+255),0,c
  1801  0015DC                     u4601:
  1802  0015DC  5026               	movf	??___fttol,w,c
  1803  0015DE  6E30               	movwf	___fttol@exp1,c
  1804  0015E0  5030               	movf	___fttol@exp1,w,c
  1805  0015E2  A4D8               	btfss	status,2,c
  1806  0015E4  D009               	goto	l4130
  1807  0015E6                     u4610:
  1808  0015E6  0E00               	movlw	0
  1809  0015E8  6E22               	movwf	?___fttol,c
  1810  0015EA  0E00               	movlw	0
  1811  0015EC  6E23               	movwf	?___fttol+1,c
  1812  0015EE  0E00               	movlw	0
  1813  0015F0  6E24               	movwf	?___fttol+2,c
  1814  0015F2  0E00               	movlw	0
  1815  0015F4  6E25               	movwf	?___fttol+3,c
  1816  0015F6  0012               	return	
  1817  0015F8                     l4130:
  1818  0015F8  0E17               	movlw	23
  1819  0015FA  6E26               	movwf	??___fttol& (0+255),c
  1820  0015FC  C022  F027         	movff	___fttol@f1,??___fttol+1
  1821  001600  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  1822  001604  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  1823  001608  2826               	incf	??___fttol,w,c
  1824  00160A  6E2A               	movwf	(??___fttol+4)& (0+255),c
  1825  00160C  D004               	goto	u4620
  1826  00160E                     u4625:
  1827  00160E  90D8               	bcf	status,0,c
  1828  001610  3229               	rrcf	??___fttol+3,f,c
  1829  001612  3228               	rrcf	??___fttol+2,f,c
  1830  001614  3227               	rrcf	??___fttol+1,f,c
  1831  001616                     u4620:
  1832  001616  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  1833  001618  D7FA               	goto	u4625
  1834  00161A  5027               	movf	??___fttol+1,w,c
  1835  00161C  6E2B               	movwf	___fttol@sign1,c
  1836  00161E  8E23               	bsf	___fttol@f1+1,7,c
  1837  001620  0EFF               	movlw	255
  1838  001622  1622               	andwf	___fttol@f1,f,c
  1839  001624  0EFF               	movlw	255
  1840  001626  1623               	andwf	___fttol@f1+1,f,c
  1841  001628  0E00               	movlw	0
  1842  00162A  1624               	andwf	___fttol@f1+2,f,c
  1843  00162C  5022               	movf	___fttol@f1,w,c
  1844  00162E  6E2C               	movwf	___fttol@lval,c
  1845  001630  5023               	movf	___fttol@f1+1,w,c
  1846  001632  6E2D               	movwf	___fttol@lval+1,c
  1847  001634  5024               	movf	___fttol@f1+2,w,c
  1848  001636  6E2E               	movwf	___fttol@lval+2,c
  1849  001638  6A2F               	clrf	___fttol@lval+3,c
  1850  00163A  0E8E               	movlw	142
  1851  00163C  5E30               	subwf	___fttol@exp1,f,c
  1852  00163E  AE30               	btfss	___fttol@exp1,7,c
  1853  001640  D00D               	goto	l4152
  1854  001642  5030               	movf	___fttol@exp1,w,c
  1855  001644  0A80               	xorlw	128
  1856  001646  0F8F               	addlw	143
  1857  001648  A0D8               	btfss	status,0,c
  1858  00164A  D7CD               	goto	u4610
  1859  00164C                     l4148:
  1860  00164C  90D8               	bcf	status,0,c
  1861  00164E  322F               	rrcf	___fttol@lval+3,f,c
  1862  001650  322E               	rrcf	___fttol@lval+2,f,c
  1863  001652  322D               	rrcf	___fttol@lval+1,f,c
  1864  001654  322C               	rrcf	___fttol@lval,f,c
  1865  001656  3E30               	incfsz	___fttol@exp1,f,c
  1866  001658  D7F9               	goto	l4148
  1867  00165A  D00D               	goto	u4660
  1868  00165C                     l4152:
  1869  00165C  0E17               	movlw	23
  1870  00165E  6430               	cpfsgt	___fttol@exp1,c
  1871  001660  D007               	goto	l4160
  1872  001662  D7C1               	goto	u4610
  1873  001664                     l4158:
  1874  001664  90D8               	bcf	status,0,c
  1875  001666  362C               	rlcf	___fttol@lval,f,c
  1876  001668  362D               	rlcf	___fttol@lval+1,f,c
  1877  00166A  362E               	rlcf	___fttol@lval+2,f,c
  1878  00166C  362F               	rlcf	___fttol@lval+3,f,c
  1879  00166E  0630               	decf	___fttol@exp1,f,c
  1880  001670                     l4160:
  1881  001670  5030               	movf	___fttol@exp1,w,c
  1882  001672  A4D8               	btfss	status,2,c
  1883  001674  D7F7               	goto	l4158
  1884  001676                     u4660:
  1885  001676  502B               	movf	___fttol@sign1,w,c
  1886  001678  B4D8               	btfsc	status,2,c
  1887  00167A  D008               	goto	l4166
  1888  00167C  1E2F               	comf	___fttol@lval+3,f,c
  1889  00167E  1E2E               	comf	___fttol@lval+2,f,c
  1890  001680  1E2D               	comf	___fttol@lval+1,f,c
  1891  001682  6C2C               	negf	___fttol@lval,c
  1892  001684  0E00               	movlw	0
  1893  001686  222D               	addwfc	___fttol@lval+1,f,c
  1894  001688  222E               	addwfc	___fttol@lval+2,f,c
  1895  00168A  222F               	addwfc	___fttol@lval+3,f,c
  1896  00168C                     l4166:
  1897  00168C  C02C  F022         	movff	___fttol@lval,?___fttol
  1898  001690  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  1899  001694  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  1900  001698  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  1901  00169C  0012               	return		;funcret
  1902  00169E                     __end_of___fttol:
  1903                           	opt callstack 0
  1904                           
  1905 ;; *************** function ___ftmul *****************
  1906 ;; Defined at:
  1907 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  f1              3   18[COMRAM] float 
  1910 ;;  f2              3   21[COMRAM] float 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  1913 ;;  sign            1   32[COMRAM] unsigned char 
  1914 ;;  cntr            1   31[COMRAM] unsigned char 
  1915 ;;  exp             1   27[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  3   18[COMRAM] float 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1925 ;;      Params:         6       0       0       0       0       0       0       0       0
  1926 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1927 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1928 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1929 ;;Total ram usage:       15 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    6
  1932 ;; This function calls:
  1933 ;;		___ftpack
  1934 ;; This function is called by:
  1935 ;;		_disp7s_write_f
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text7
  1940  0014D8                     __ptext7:
  1941                           	opt callstack 0
  1942  0014D8                     ___ftmul:
  1943                           	opt callstack 20
  1944                           
  1945                           ;incstack = 0
  1946  0014D8  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  1947  0014DC  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  1948  0014DE  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  1949  0014E0  3414               	rlcf	___ftmul@f1+1,w,c
  1950  0014E2  3619               	rlcf	??___ftmul& (0+255),f,c
  1951  0014E4  E301               	bnc	u4511
  1952  0014E6  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  1953  0014E8                     u4511:
  1954  0014E8  5019               	movf	??___ftmul,w,c
  1955  0014EA  6E1C               	movwf	___ftmul@exp,c
  1956  0014EC  501C               	movf	___ftmul@exp,w,c
  1957  0014EE  A4D8               	btfss	status,2,c
  1958  0014F0  D007               	goto	l4064
  1959  0014F2  0E00               	movlw	0
  1960  0014F4  6E13               	movwf	?___ftmul,c
  1961  0014F6  0E00               	movlw	0
  1962  0014F8  6E14               	movwf	?___ftmul+1,c
  1963  0014FA  0E00               	movlw	0
  1964  0014FC  6E15               	movwf	?___ftmul+2,c
  1965  0014FE  0012               	return	
  1966  001500                     l4064:
  1967  001500  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  1968  001504  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  1969  001506  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  1970  001508  3417               	rlcf	___ftmul@f2+1,w,c
  1971  00150A  3619               	rlcf	??___ftmul& (0+255),f,c
  1972  00150C  E301               	bnc	u4531
  1973  00150E  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  1974  001510                     u4531:
  1975  001510  5019               	movf	??___ftmul,w,c
  1976  001512  6E21               	movwf	___ftmul@sign,c
  1977  001514  5021               	movf	___ftmul@sign,w,c
  1978  001516  A4D8               	btfss	status,2,c
  1979  001518  D007               	goto	l4070
  1980  00151A  0E00               	movlw	0
  1981  00151C  6E13               	movwf	?___ftmul,c
  1982  00151E  0E00               	movlw	0
  1983  001520  6E14               	movwf	?___ftmul+1,c
  1984  001522  0E00               	movlw	0
  1985  001524  6E15               	movwf	?___ftmul+2,c
  1986  001526  0012               	return	
  1987  001528                     l4070:
  1988  001528  5021               	movf	___ftmul@sign,w,c
  1989  00152A  0F7B               	addlw	123
  1990  00152C  261C               	addwf	___ftmul@exp,f,c
  1991  00152E  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  1992  001532  5018               	movf	___ftmul@f2+2,w,c
  1993  001534  1A21               	xorwf	___ftmul@sign,f,c
  1994  001536  0E80               	movlw	128
  1995  001538  1621               	andwf	___ftmul@sign,f,c
  1996  00153A  8E14               	bsf	___ftmul@f1+1,7,c
  1997  00153C  8E17               	bsf	___ftmul@f2+1,7,c
  1998  00153E  0EFF               	movlw	255
  1999  001540  1616               	andwf	___ftmul@f2,f,c
  2000  001542  0EFF               	movlw	255
  2001  001544  1617               	andwf	___ftmul@f2+1,f,c
  2002  001546  0E00               	movlw	0
  2003  001548  1618               	andwf	___ftmul@f2+2,f,c
  2004  00154A  0E00               	movlw	0
  2005  00154C  6E1D               	movwf	___ftmul@f3_as_product,c
  2006  00154E  0E00               	movlw	0
  2007  001550  6E1E               	movwf	___ftmul@f3_as_product+1,c
  2008  001552  0E00               	movlw	0
  2009  001554  6E1F               	movwf	___ftmul@f3_as_product+2,c
  2010  001556  0E07               	movlw	7
  2011  001558  6E20               	movwf	___ftmul@cntr,c
  2012  00155A                     l4084:
  2013  00155A  A013               	btfss	___ftmul@f1,0,c
  2014  00155C  D006               	goto	l4088
  2015  00155E  5016               	movf	___ftmul@f2,w,c
  2016  001560  261D               	addwf	___ftmul@f3_as_product,f,c
  2017  001562  5017               	movf	___ftmul@f2+1,w,c
  2018  001564  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  2019  001566  5018               	movf	___ftmul@f2+2,w,c
  2020  001568  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  2021  00156A                     l4088:
  2022  00156A  90D8               	bcf	status,0,c
  2023  00156C  3215               	rrcf	___ftmul@f1+2,f,c
  2024  00156E  3214               	rrcf	___ftmul@f1+1,f,c
  2025  001570  3213               	rrcf	___ftmul@f1,f,c
  2026  001572  90D8               	bcf	status,0,c
  2027  001574  3616               	rlcf	___ftmul@f2,f,c
  2028  001576  3617               	rlcf	___ftmul@f2+1,f,c
  2029  001578  3618               	rlcf	___ftmul@f2+2,f,c
  2030  00157A  2E20               	decfsz	___ftmul@cntr,f,c
  2031  00157C  D7EE               	goto	l4084
  2032  00157E  0E09               	movlw	9
  2033  001580  6E20               	movwf	___ftmul@cntr,c
  2034  001582                     l4094:
  2035  001582  A013               	btfss	___ftmul@f1,0,c
  2036  001584  D006               	goto	l4098
  2037  001586  5016               	movf	___ftmul@f2,w,c
  2038  001588  261D               	addwf	___ftmul@f3_as_product,f,c
  2039  00158A  5017               	movf	___ftmul@f2+1,w,c
  2040  00158C  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  2041  00158E  5018               	movf	___ftmul@f2+2,w,c
  2042  001590  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  2043  001592                     l4098:
  2044  001592  90D8               	bcf	status,0,c
  2045  001594  3215               	rrcf	___ftmul@f1+2,f,c
  2046  001596  3214               	rrcf	___ftmul@f1+1,f,c
  2047  001598  3213               	rrcf	___ftmul@f1,f,c
  2048  00159A  90D8               	bcf	status,0,c
  2049  00159C  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  2050  00159E  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  2051  0015A0  321D               	rrcf	___ftmul@f3_as_product,f,c
  2052  0015A2  2E20               	decfsz	___ftmul@cntr,f,c
  2053  0015A4  D7EE               	goto	l4094
  2054  0015A6  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  2055  0015AA  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2056  0015AE  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2057  0015B2  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  2058  0015B6  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  2059  0015BA  EC0B  F00C         	call	___ftpack	;wreg free
  2060  0015BE  C00B  F013         	movff	?___ftpack,?___ftmul
  2061  0015C2  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  2062  0015C6  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  2063  0015CA  0012               	return		;funcret
  2064  0015CC                     __end_of___ftmul:
  2065                           	opt callstack 0
  2066                           
  2067 ;; *************** function ___ftadd *****************
  2068 ;; Defined at:
  2069 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  f1              3   18[COMRAM] float 
  2072 ;;  f2              3   21[COMRAM] float 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  exp1            1   29[COMRAM] unsigned char 
  2075 ;;  exp2            1   28[COMRAM] unsigned char 
  2076 ;;  sign            1   27[COMRAM] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  3   18[COMRAM] float 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         6       0       0       0       0       0       0       0       0
  2087 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2088 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2089 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2090 ;;Total ram usage:       12 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    6
  2093 ;; This function calls:
  2094 ;;		___ftpack
  2095 ;; This function is called by:
  2096 ;;		_disp7s_write_f
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text8
  2101  001086                     __ptext8:
  2102                           	opt callstack 0
  2103  001086                     ___ftadd:
  2104                           	opt callstack 20
  2105                           
  2106                           ;incstack = 0
  2107  001086  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  2108  00108A  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  2109  00108C  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  2110  00108E  3414               	rlcf	___ftadd@f1+1,w,c
  2111  001090  3619               	rlcf	??___ftadd& (0+255),f,c
  2112  001092  E301               	bnc	u4301
  2113  001094  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  2114  001096                     u4301:
  2115  001096  5019               	movf	??___ftadd,w,c
  2116  001098  6E1E               	movwf	___ftadd@exp1,c
  2117  00109A  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  2118  00109E  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  2119  0010A0  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  2120  0010A2  3417               	rlcf	___ftadd@f2+1,w,c
  2121  0010A4  3619               	rlcf	??___ftadd& (0+255),f,c
  2122  0010A6  E301               	bnc	u4311
  2123  0010A8  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  2124  0010AA                     u4311:
  2125  0010AA  5019               	movf	??___ftadd,w,c
  2126  0010AC  6E1D               	movwf	___ftadd@exp2,c
  2127  0010AE  501E               	movf	___ftadd@exp1,w,c
  2128  0010B0  B4D8               	btfsc	status,2,c
  2129  0010B2  D00A               	goto	u4340
  2130  0010B4  501D               	movf	___ftadd@exp2,w,c
  2131  0010B6  5C1E               	subwf	___ftadd@exp1,w,c
  2132  0010B8  B0D8               	btfsc	status,0,c
  2133  0010BA  D00D               	goto	l3996
  2134  0010BC  501E               	movf	___ftadd@exp1,w,c
  2135  0010BE  5C1D               	subwf	___ftadd@exp2,w,c
  2136  0010C0  6E19               	movwf	??___ftadd& (0+255),c
  2137  0010C2  0E18               	movlw	24
  2138  0010C4  6419               	cpfsgt	??___ftadd,c
  2139  0010C6  D007               	goto	l3996
  2140  0010C8                     u4340:
  2141  0010C8  C016  F013         	movff	___ftadd@f2,?___ftadd
  2142  0010CC  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  2143  0010D0  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  2144  0010D4  0012               	return	
  2145  0010D6                     l3996:
  2146  0010D6  501D               	movf	___ftadd@exp2,w,c
  2147  0010D8  B4D8               	btfsc	status,2,c
  2148  0010DA  D00A               	goto	u4370
  2149  0010DC  501E               	movf	___ftadd@exp1,w,c
  2150  0010DE  5C1D               	subwf	___ftadd@exp2,w,c
  2151  0010E0  B0D8               	btfsc	status,0,c
  2152  0010E2  D00D               	goto	l4002
  2153  0010E4  501D               	movf	___ftadd@exp2,w,c
  2154  0010E6  5C1E               	subwf	___ftadd@exp1,w,c
  2155  0010E8  6E19               	movwf	??___ftadd& (0+255),c
  2156  0010EA  0E18               	movlw	24
  2157  0010EC  6419               	cpfsgt	??___ftadd,c
  2158  0010EE  D007               	goto	l4002
  2159  0010F0                     u4370:
  2160  0010F0  C013  F013         	movff	___ftadd@f1,?___ftadd
  2161  0010F4  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  2162  0010F8  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  2163  0010FC  0012               	return	
  2164  0010FE                     l4002:
  2165  0010FE  0E06               	movlw	6
  2166  001100  6E1C               	movwf	___ftadd@sign,c
  2167  001102  BE15               	btfsc	___ftadd@f1+2,7,c
  2168  001104  8E1C               	bsf	___ftadd@sign,7,c
  2169  001106  BE18               	btfsc	___ftadd@f2+2,7,c
  2170  001108  8C1C               	bsf	___ftadd@sign,6,c
  2171  00110A  8E14               	bsf	___ftadd@f1+1,7,c
  2172  00110C  0EFF               	movlw	255
  2173  00110E  1613               	andwf	___ftadd@f1,f,c
  2174  001110  0EFF               	movlw	255
  2175  001112  1614               	andwf	___ftadd@f1+1,f,c
  2176  001114  0E00               	movlw	0
  2177  001116  1615               	andwf	___ftadd@f1+2,f,c
  2178  001118  8E17               	bsf	___ftadd@f2+1,7,c
  2179  00111A  0EFF               	movlw	255
  2180  00111C  1616               	andwf	___ftadd@f2,f,c
  2181  00111E  0EFF               	movlw	255
  2182  001120  1617               	andwf	___ftadd@f2+1,f,c
  2183  001122  0E00               	movlw	0
  2184  001124  1618               	andwf	___ftadd@f2+2,f,c
  2185  001126  501D               	movf	___ftadd@exp2,w,c
  2186  001128  5C1E               	subwf	___ftadd@exp1,w,c
  2187  00112A  B0D8               	btfsc	status,0,c
  2188  00112C  D01B               	goto	l4028
  2189  00112E                     u4400:
  2190  00112E  90D8               	bcf	status,0,c
  2191  001130  3616               	rlcf	___ftadd@f2,f,c
  2192  001132  3617               	rlcf	___ftadd@f2+1,f,c
  2193  001134  3618               	rlcf	___ftadd@f2+2,f,c
  2194  001136  061D               	decf	___ftadd@exp2,f,c
  2195  001138  501E               	movf	___ftadd@exp1,w,c
  2196  00113A  181D               	xorwf	___ftadd@exp2,w,c
  2197  00113C  B4D8               	btfsc	status,2,c
  2198  00113E  D00D               	goto	l4026
  2199  001140  061C               	decf	___ftadd@sign,f,c
  2200  001142  C01C  F019         	movff	___ftadd@sign,??___ftadd
  2201  001146  0E07               	movlw	7
  2202  001148  1619               	andwf	??___ftadd,f,c
  2203  00114A  B4D8               	btfsc	status,2,c
  2204  00114C  D006               	goto	l4026
  2205  00114E  D7EF               	goto	u4400
  2206  001150                     l4024:
  2207  001150  90D8               	bcf	status,0,c
  2208  001152  3215               	rrcf	___ftadd@f1+2,f,c
  2209  001154  3214               	rrcf	___ftadd@f1+1,f,c
  2210  001156  3213               	rrcf	___ftadd@f1,f,c
  2211  001158  2A1E               	incf	___ftadd@exp1,f,c
  2212  00115A                     l4026:
  2213  00115A  501D               	movf	___ftadd@exp2,w,c
  2214  00115C  181E               	xorwf	___ftadd@exp1,w,c
  2215  00115E  B4D8               	btfsc	status,2,c
  2216  001160  D01F               	goto	u4470
  2217  001162  D7F6               	goto	l4024
  2218  001164                     l4028:
  2219  001164  501E               	movf	___ftadd@exp1,w,c
  2220  001166  5C1D               	subwf	___ftadd@exp2,w,c
  2221  001168  B0D8               	btfsc	status,0,c
  2222  00116A  D01A               	goto	u4470
  2223  00116C                     u4440:
  2224  00116C  90D8               	bcf	status,0,c
  2225  00116E  3613               	rlcf	___ftadd@f1,f,c
  2226  001170  3614               	rlcf	___ftadd@f1+1,f,c
  2227  001172  3615               	rlcf	___ftadd@f1+2,f,c
  2228  001174  061E               	decf	___ftadd@exp1,f,c
  2229  001176  501E               	movf	___ftadd@exp1,w,c
  2230  001178  181D               	xorwf	___ftadd@exp2,w,c
  2231  00117A  B4D8               	btfsc	status,2,c
  2232  00117C  D00D               	goto	l4038
  2233  00117E  061C               	decf	___ftadd@sign,f,c
  2234  001180  C01C  F019         	movff	___ftadd@sign,??___ftadd
  2235  001184  0E07               	movlw	7
  2236  001186  1619               	andwf	??___ftadd,f,c
  2237  001188  B4D8               	btfsc	status,2,c
  2238  00118A  D006               	goto	l4038
  2239  00118C  D7EF               	goto	u4440
  2240  00118E                     l4036:
  2241  00118E  90D8               	bcf	status,0,c
  2242  001190  3218               	rrcf	___ftadd@f2+2,f,c
  2243  001192  3217               	rrcf	___ftadd@f2+1,f,c
  2244  001194  3216               	rrcf	___ftadd@f2,f,c
  2245  001196  2A1D               	incf	___ftadd@exp2,f,c
  2246  001198                     l4038:
  2247  001198  501D               	movf	___ftadd@exp2,w,c
  2248  00119A  181E               	xorwf	___ftadd@exp1,w,c
  2249  00119C  A4D8               	btfss	status,2,c
  2250  00119E  D7F7               	goto	l4036
  2251  0011A0                     u4470:
  2252  0011A0  AE1C               	btfss	___ftadd@sign,7,c
  2253  0011A2  D00C               	goto	l1141
  2254  0011A4  0EFF               	movlw	255
  2255  0011A6  1A13               	xorwf	___ftadd@f1,f,c
  2256  0011A8  0EFF               	movlw	255
  2257  0011AA  1A14               	xorwf	___ftadd@f1+1,f,c
  2258  0011AC  0EFF               	movlw	255
  2259  0011AE  1A15               	xorwf	___ftadd@f1+2,f,c
  2260  0011B0  0E01               	movlw	1
  2261  0011B2  2613               	addwf	___ftadd@f1,f,c
  2262  0011B4  0E00               	movlw	0
  2263  0011B6  2214               	addwfc	___ftadd@f1+1,f,c
  2264  0011B8  0E00               	movlw	0
  2265  0011BA  2215               	addwfc	___ftadd@f1+2,f,c
  2266  0011BC                     l1141:
  2267  0011BC  AC1C               	btfss	___ftadd@sign,6,c
  2268  0011BE  D00C               	goto	l4044
  2269  0011C0  0EFF               	movlw	255
  2270  0011C2  1A16               	xorwf	___ftadd@f2,f,c
  2271  0011C4  0EFF               	movlw	255
  2272  0011C6  1A17               	xorwf	___ftadd@f2+1,f,c
  2273  0011C8  0EFF               	movlw	255
  2274  0011CA  1A18               	xorwf	___ftadd@f2+2,f,c
  2275  0011CC  0E01               	movlw	1
  2276  0011CE  2616               	addwf	___ftadd@f2,f,c
  2277  0011D0  0E00               	movlw	0
  2278  0011D2  2217               	addwfc	___ftadd@f2+1,f,c
  2279  0011D4  0E00               	movlw	0
  2280  0011D6  2218               	addwfc	___ftadd@f2+2,f,c
  2281  0011D8                     l4044:
  2282  0011D8  0E00               	movlw	0
  2283  0011DA  6E1C               	movwf	___ftadd@sign,c
  2284  0011DC  5013               	movf	___ftadd@f1,w,c
  2285  0011DE  2616               	addwf	___ftadd@f2,f,c
  2286  0011E0  5014               	movf	___ftadd@f1+1,w,c
  2287  0011E2  2217               	addwfc	___ftadd@f2+1,f,c
  2288  0011E4  5015               	movf	___ftadd@f1+2,w,c
  2289  0011E6  2218               	addwfc	___ftadd@f2+2,f,c
  2290  0011E8  AE18               	btfss	___ftadd@f2+2,7,c
  2291  0011EA  D00E               	goto	l4054
  2292  0011EC  0EFF               	movlw	255
  2293  0011EE  1A16               	xorwf	___ftadd@f2,f,c
  2294  0011F0  0EFF               	movlw	255
  2295  0011F2  1A17               	xorwf	___ftadd@f2+1,f,c
  2296  0011F4  0EFF               	movlw	255
  2297  0011F6  1A18               	xorwf	___ftadd@f2+2,f,c
  2298  0011F8  0E01               	movlw	1
  2299  0011FA  2616               	addwf	___ftadd@f2,f,c
  2300  0011FC  0E00               	movlw	0
  2301  0011FE  2217               	addwfc	___ftadd@f2+1,f,c
  2302  001200  0E00               	movlw	0
  2303  001202  2218               	addwfc	___ftadd@f2+2,f,c
  2304  001204  0E01               	movlw	1
  2305  001206  6E1C               	movwf	___ftadd@sign,c
  2306  001208                     l4054:
  2307  001208  C016  F00B         	movff	___ftadd@f2,___ftpack@arg
  2308  00120C  C017  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  2309  001210  C018  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  2310  001214  C01E  F00E         	movff	___ftadd@exp1,___ftpack@exp
  2311  001218  C01C  F00F         	movff	___ftadd@sign,___ftpack@sign
  2312  00121C  EC0B  F00C         	call	___ftpack	;wreg free
  2313  001220  C00B  F013         	movff	?___ftpack,?___ftadd
  2314  001224  C00C  F014         	movff	?___ftpack+1,?___ftadd+1
  2315  001228  C00D  F015         	movff	?___ftpack+2,?___ftadd+2
  2316  00122C  0012               	return		;funcret
  2317  00122E                     __end_of___ftadd:
  2318                           	opt callstack 0
  2319                           
  2320 ;; *************** function _disp7s_modeDisp_writeInt *****************
  2321 ;; Defined at:
  2322 ;;		line 258 in file "display.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  num             2   55[COMRAM] int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 3F/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2336 ;;      Params:         2       0       0       0       0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2339 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2340 ;;Total ram usage:        2 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    9
  2343 ;; This function calls:
  2344 ;;		_disp7s_write_i
  2345 ;; This function is called by:
  2346 ;;		_visMode_disp
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text9
  2351  00229C                     __ptext9:
  2352                           	opt callstack 0
  2353  00229C                     _disp7s_modeDisp_writeInt:
  2354                           	opt callstack 19
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;display.c: 260: disp7s_write_i(pulsonic.disp7s.mode, 2, num);
  2358                           
  2359                           ;incstack = 0
  2360  00229C  0E3E               	movlw	low (_pulsonic+62)
  2361  00229E  6E20               	movwf	disp7s_write_i@pDisp,c
  2362  0022A0  0E01               	movlw	high (_pulsonic+62)
  2363  0022A2  6E21               	movwf	disp7s_write_i@pDisp+1,c
  2364  0022A4  0E02               	movlw	2
  2365  0022A6  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  2366  0022A8  C038  F023         	movff	disp7s_modeDisp_writeInt@num,disp7s_write_i@num
  2367  0022AC  C039  F024         	movff	disp7s_modeDisp_writeInt@num+1,disp7s_write_i@num+1
  2368  0022B0  ECE7  F009         	call	_disp7s_write_i	;wreg free
  2369  0022B4  0012               	return		;funcret
  2370  0022B6                     __end_of_disp7s_modeDisp_writeInt:
  2371                           	opt callstack 0
  2372                           
  2373 ;; *************** function _disp7s_write_i *****************
  2374 ;; Defined at:
  2375 ;;		line 224 in file "display.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  pDisp           2   31[COMRAM] PTR unsigned char 
  2378 ;;		 -> pulsonic.disp7s(5), pulsonic(64), 
  2379 ;;  NUM_OF_DISP     1   33[COMRAM] char 
  2380 ;;  num             2   34[COMRAM] int 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  buff           10   41[COMRAM] unsigned char [10]
  2383 ;;  K10MULT         2   52[COMRAM] int 
  2384 ;;  i               1   54[COMRAM] char 
  2385 ;;  pi              1   51[COMRAM] char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 3E/1
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2395 ;;      Params:         5       0       0       0       0       0       0       0       0
  2396 ;;      Locals:        14       0       0       0       0       0       0       0       0
  2397 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2398 ;;      Totals:        24       0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:       24 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    8
  2402 ;; This function calls:
  2403 ;;		___wmul
  2404 ;;		_itoa
  2405 ;;		_strlen
  2406 ;; This function is called by:
  2407 ;;		_disp7s_qtyDisp_writeInt
  2408 ;;		_disp7s_modeDisp_writeInt
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text10
  2413  0013CE                     __ptext10:
  2414                           	opt callstack 0
  2415  0013CE                     _disp7s_write_i:
  2416                           	opt callstack 19
  2417                           
  2418                           ;display.c: 226: int16_t K10MULT;;display.c: 227: char buff[10];;display.c: 228: int8_t 
      +                          i;;display.c: 229: int8_t pi;;display.c: 231: K10MULT = 1;
  2419                           
  2420                           ;incstack = 0
  2421  0013CE  0E00               	movlw	0
  2422  0013D0  6E36               	movwf	disp7s_write_i@K10MULT+1,c
  2423  0013D2  0E01               	movlw	1
  2424  0013D4  6E35               	movwf	disp7s_write_i@K10MULT,c
  2425                           
  2426                           ;display.c: 232: i = NUM_OF_DISP;
  2427  0013D6  C022  F037         	movff	disp7s_write_i@NUM_OF_DISP,disp7s_write_i@i
  2428                           
  2429                           ;display.c: 233: while (i--)
  2430  0013DA  D00E               	goto	l4236
  2431  0013DC                     l4234:
  2432                           
  2433                           ;display.c: 234: {K10MULT *=10;}
  2434  0013DC  C035  F00B         	movff	disp7s_write_i@K10MULT,___wmul@multiplier
  2435  0013E0  C036  F00C         	movff	disp7s_write_i@K10MULT+1,___wmul@multiplier+1
  2436  0013E4  0E00               	movlw	0
  2437  0013E6  6E0E               	movwf	___wmul@multiplicand+1,c
  2438  0013E8  0E0A               	movlw	10
  2439  0013EA  6E0D               	movwf	___wmul@multiplicand,c
  2440  0013EC  ECD1  F010         	call	___wmul	;wreg free
  2441  0013F0  C00B  F035         	movff	?___wmul,disp7s_write_i@K10MULT
  2442  0013F4  C00C  F036         	movff	?___wmul+1,disp7s_write_i@K10MULT+1
  2443  0013F8                     l4236:
  2444  0013F8  0637               	decf	disp7s_write_i@i,f,c
  2445  0013FA  2837               	incf	disp7s_write_i@i,w,c
  2446  0013FC  A4D8               	btfss	status,2,c
  2447  0013FE  D7EE               	goto	l4234
  2448                           
  2449                           ;display.c: 236: if (num >= K10MULT)
  2450  001400  5035               	movf	disp7s_write_i@K10MULT,w,c
  2451  001402  5C23               	subwf	disp7s_write_i@num,w,c
  2452  001404  5024               	movf	disp7s_write_i@num+1,w,c
  2453  001406  0A80               	xorlw	128
  2454  001408  6E25               	movwf	??_disp7s_write_i& (0+255),c
  2455  00140A  5036               	movf	disp7s_write_i@K10MULT+1,w,c
  2456  00140C  0A80               	xorlw	128
  2457  00140E  5825               	subwfb	??_disp7s_write_i& (0+255),w,c
  2458  001410  A0D8               	btfss	status,0,c
  2459  001412  D006               	goto	l4242
  2460                           
  2461                           ;display.c: 237: {num= K10MULT-1;}
  2462  001414  0EFF               	movlw	255
  2463  001416  2435               	addwf	disp7s_write_i@K10MULT,w,c
  2464  001418  6E23               	movwf	disp7s_write_i@num,c
  2465  00141A  0EFF               	movlw	255
  2466  00141C  2036               	addwfc	disp7s_write_i@K10MULT+1,w,c
  2467  00141E  6E24               	movwf	disp7s_write_i@num+1,c
  2468  001420                     l4242:
  2469                           
  2470                           ;display.c: 239: itoa(buff, num, 10);
  2471  001420  0E2A               	movlw	low disp7s_write_i@buff
  2472  001422  6E1A               	movwf	itoa@buf,c
  2473  001424  C023  F01B         	movff	disp7s_write_i@num,itoa@val
  2474  001428  C024  F01C         	movff	disp7s_write_i@num+1,itoa@val+1
  2475  00142C  0E00               	movlw	0
  2476  00142E  6E1E               	movwf	itoa@base+1,c
  2477  001430  0E0A               	movlw	10
  2478  001432  6E1D               	movwf	itoa@base,c
  2479  001434  EC89  F010         	call	_itoa	;wreg free
  2480                           
  2481                           ;display.c: 242: for (i=0; i<NUM_OF_DISP; i++)
  2482  001438  0E00               	movlw	0
  2483  00143A  6E37               	movwf	disp7s_write_i@i,c
  2484  00143C  D013               	goto	l4250
  2485  00143E                     l4246:
  2486                           
  2487                           ;display.c: 243: {pDisp[i] = DISP7S_CHARS[OFF];}
  2488  00143E  0E0B               	movlw	low _DISP7S_CHARS
  2489  001440  6EF6               	movwf	tblptrl,c
  2490  001442                     	if	1	;There is more than 1 active tblptr byte
  2491  001442  0E08               	movlw	high _DISP7S_CHARS
  2492  001444  6EF7               	movwf	tblptrh,c
  2493  001446                     	endif
  2494  001446                     	if	0	;There are less than 3 active tblptr bytes
  2495  001446                     	endif
  2496  001446  C037  F025         	movff	disp7s_write_i@i,??_disp7s_write_i
  2497  00144A  6A26               	clrf	(??_disp7s_write_i+1)& (0+255),c
  2498  00144C  BE25               	btfsc	??_disp7s_write_i& (0+255),7,c
  2499  00144E  0626               	decf	(??_disp7s_write_i+1)& (0+255),f,c
  2500  001450  5025               	movf	??_disp7s_write_i,w,c
  2501  001452  2420               	addwf	disp7s_write_i@pDisp,w,c
  2502  001454  6ED9               	movwf	fsr2l,c
  2503  001456  5026               	movf	??_disp7s_write_i+1,w,c
  2504  001458  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  2505  00145A  6EDA               	movwf	fsr2h,c
  2506  00145C  0008               	tblrd		*
  2507  00145E  CFF5 FFDF          	movff	tablat,indf2
  2508  001462  2A37               	incf	disp7s_write_i@i,f,c
  2509  001464                     l4250:
  2510  001464  5037               	movf	disp7s_write_i@i,w,c
  2511  001466  0A80               	xorlw	128
  2512  001468  6E25               	movwf	??_disp7s_write_i& (0+255),c
  2513  00146A  5022               	movf	disp7s_write_i@NUM_OF_DISP,w,c
  2514  00146C  0A80               	xorlw	128
  2515  00146E  5C25               	subwf	??_disp7s_write_i& (0+255),w,c
  2516  001470  A0D8               	btfss	status,0,c
  2517  001472  D7E5               	goto	l4246
  2518                           
  2519                           ;display.c: 245: i=0;
  2520  001474  0E00               	movlw	0
  2521  001476  6E37               	movwf	disp7s_write_i@i,c
  2522                           
  2523                           ;display.c: 246: pi = strlen(buff)-1;
  2524  001478  0E2A               	movlw	low disp7s_write_i@buff
  2525  00147A  6E0B               	movwf	strlen@s,c
  2526  00147C  ECF6  F010         	call	_strlen	;wreg free
  2527  001480  040B               	decf	?_strlen,w,c
  2528  001482  6E34               	movwf	disp7s_write_i@pi,c
  2529                           
  2530                           ;display.c: 247: while (buff[i] != '\0')
  2531  001484  D021               	goto	l4262
  2532  001486                     l4256:
  2533                           
  2534                           ;display.c: 248: {;display.c: 249: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  2535  001486  5037               	movf	disp7s_write_i@i,w,c
  2536  001488  0F2A               	addlw	low disp7s_write_i@buff
  2537  00148A  6ED9               	movwf	fsr2l,c
  2538  00148C  6ADA               	clrf	fsr2h,c
  2539  00148E  50DF               	movf	indf2,w,c
  2540  001490  6E25               	movwf	??_disp7s_write_i& (0+255),c
  2541  001492  0ED0               	movlw	208
  2542  001494  2625               	addwf	??_disp7s_write_i,f,c
  2543  001496  5025               	movf	??_disp7s_write_i,w,c
  2544  001498  0F01               	addlw	low _DISP7S_NUMS
  2545  00149A  6E26               	movwf	(??_disp7s_write_i+1)& (0+255),c
  2546  00149C  C026  FFF6         	movff	??_disp7s_write_i+1,tblptrl
  2547  0014A0                     	if	1	;There is more than 1 active tblptr byte
  2548  0014A0  0E08               	movlw	high __smallconst
  2549  0014A2  6EF7               	movwf	tblptrh,c
  2550  0014A4                     	endif
  2551  0014A4                     	if	0	;tblptru may be non-zero
  2552  0014A4                     	endif
  2553  0014A4                     	if	0	;tblptru may be non-zero
  2554  0014A4                     	endif
  2555  0014A4  0008               	tblrd		*
  2556  0014A6  CFF5 F027          	movff	tablat,??_disp7s_write_i+2
  2557  0014AA  C034  F028         	movff	disp7s_write_i@pi,??_disp7s_write_i+3
  2558  0014AE  6A29               	clrf	(??_disp7s_write_i+4)& (0+255),c
  2559  0014B0  BE28               	btfsc	(??_disp7s_write_i+3)& (0+255),7,c
  2560  0014B2  0629               	decf	(??_disp7s_write_i+4)& (0+255),f,c
  2561  0014B4  5028               	movf	??_disp7s_write_i+3,w,c
  2562  0014B6  2420               	addwf	disp7s_write_i@pDisp,w,c
  2563  0014B8  6ED9               	movwf	fsr2l,c
  2564  0014BA  5029               	movf	??_disp7s_write_i+4,w,c
  2565  0014BC  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  2566  0014BE  6EDA               	movwf	fsr2h,c
  2567  0014C0  5027               	movf	??_disp7s_write_i+2,w,c
  2568  0014C2  12DF               	iorwf	indf2,f,c
  2569  0014C4  0634               	decf	disp7s_write_i@pi,f,c
  2570                           
  2571                           ;display.c: 250: i++;
  2572  0014C6  2A37               	incf	disp7s_write_i@i,f,c
  2573  0014C8                     l4262:
  2574  0014C8  5037               	movf	disp7s_write_i@i,w,c
  2575  0014CA  0F2A               	addlw	low disp7s_write_i@buff
  2576  0014CC  6ED9               	movwf	fsr2l,c
  2577  0014CE  6ADA               	clrf	fsr2h,c
  2578  0014D0  50DF               	movf	indf2,w,c
  2579  0014D2  B4D8               	btfsc	status,2,c
  2580  0014D4  0012               	return	
  2581  0014D6  D7D7               	goto	l4256
  2582  0014D8                     __end_of_disp7s_write_i:
  2583                           	opt callstack 0
  2584                           
  2585 ;; *************** function _strlen *****************
  2586 ;; Defined at:
  2587 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/strlen.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  s               1   10[COMRAM] PTR const unsigned char 
  2590 ;;		 -> disp7s_write_i@buff(10), 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  cp              1   12[COMRAM] PTR const unsigned char 
  2593 ;;		 -> disp7s_write_i@buff(10), 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  2   10[COMRAM] unsigned int 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/1
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2603 ;;      Params:         2       0       0       0       0       0       0       0       0
  2604 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2606 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2607 ;;Total ram usage:        3 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    5
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_disp7s_write_i
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text11
  2618  0021EC                     __ptext11:
  2619                           	opt callstack 0
  2620  0021EC                     _strlen:
  2621                           	opt callstack 21
  2622                           
  2623                           ;incstack = 0
  2624  0021EC  C00B  F00D         	movff	strlen@s,strlen@cp
  2625  0021F0  D001               	goto	l2850
  2626  0021F2                     l2848:
  2627  0021F2  2A0D               	incf	strlen@cp,f,c
  2628  0021F4                     l2850:
  2629  0021F4  500D               	movf	strlen@cp,w,c
  2630  0021F6  6ED9               	movwf	fsr2l,c
  2631  0021F8  6ADA               	clrf	fsr2h,c
  2632  0021FA  50DF               	movf	indf2,w,c
  2633  0021FC  A4D8               	btfss	status,2,c
  2634  0021FE  D7F9               	goto	l2848
  2635  002200  500B               	movf	strlen@s,w,c
  2636  002202  5C0D               	subwf	strlen@cp,w,c
  2637  002204  6E0B               	movwf	?_strlen,c
  2638  002206  6A0C               	clrf	?_strlen+1,c
  2639  002208  BE0B               	btfsc	?_strlen,7,c
  2640  00220A  060C               	decf	?_strlen+1,f,c
  2641  00220C  0012               	return		;funcret
  2642  00220E                     __end_of_strlen:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function _itoa *****************
  2646 ;; Defined at:
  2647 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  buf             1   25[COMRAM] PTR unsigned char 
  2650 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  2651 ;;  val             2   26[COMRAM] int 
  2652 ;;  base            2   28[COMRAM] int 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  cp              1    0        PTR unsigned char 
  2655 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      PTR unsigned char 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2665 ;;      Params:         5       0       0       0       0       0       0       0       0
  2666 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2668 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2669 ;;Total ram usage:        6 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    7
  2672 ;; This function calls:
  2673 ;;		_utoa
  2674 ;; This function is called by:
  2675 ;;		_disp7s_write_f
  2676 ;;		_disp7s_write_i
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text12
  2681  002112                     __ptext12:
  2682                           	opt callstack 0
  2683  002112                     _itoa:
  2684                           	opt callstack 19
  2685                           
  2686                           ;incstack = 0
  2687  002112  AE1C               	btfss	itoa@val+1,7,c
  2688  002114  D00A               	goto	l3984
  2689  002116  501A               	movf	itoa@buf,w,c
  2690  002118  6ED9               	movwf	fsr2l,c
  2691  00211A  6ADA               	clrf	fsr2h,c
  2692  00211C  0E2D               	movlw	45
  2693  00211E  6EDF               	movwf	indf2,c
  2694  002120  2A1A               	incf	itoa@buf,f,c
  2695  002122  6C1B               	negf	itoa@val,c
  2696  002124  1E1C               	comf	itoa@val+1,f,c
  2697  002126  B0D8               	btfsc	status,0,c
  2698  002128  2A1C               	incf	itoa@val+1,f,c
  2699  00212A                     l3984:
  2700  00212A  C01A  F012         	movff	itoa@buf,utoa@buf
  2701  00212E  C01B  F013         	movff	itoa@val,utoa@val
  2702  002132  C01C  F014         	movff	itoa@val+1,utoa@val+1
  2703  002136  C01D  F015         	movff	itoa@base,utoa@base
  2704  00213A  C01E  F016         	movff	itoa@base+1,utoa@base+1
  2705  00213E  ECFD  F00C         	call	_utoa	;wreg free
  2706  002142  0012               	return		;funcret
  2707  002144                     __end_of_itoa:
  2708                           	opt callstack 0
  2709                           
  2710 ;; *************** function _utoa *****************
  2711 ;; Defined at:
  2712 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  buf             1   17[COMRAM] PTR unsigned char 
  2715 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  2716 ;;  val             2   18[COMRAM] unsigned int 
  2717 ;;  base            2   20[COMRAM] int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  v               2   22[COMRAM] unsigned int 
  2720 ;;  c               1   24[COMRAM] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      PTR unsigned char 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2730 ;;      Params:         5       0       0       0       0       0       0       0       0
  2731 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2733 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2734 ;;Total ram usage:        8 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    6
  2737 ;; This function calls:
  2738 ;;		___lwdiv
  2739 ;;		___lwmod
  2740 ;; This function is called by:
  2741 ;;		_itoa
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text13
  2746  0019FA                     __ptext13:
  2747                           	opt callstack 0
  2748  0019FA                     _utoa:
  2749                           	opt callstack 19
  2750                           
  2751                           ;incstack = 0
  2752  0019FA  C013  F017         	movff	utoa@val,utoa@v
  2753  0019FE  C014  F018         	movff	utoa@val+1,utoa@v+1
  2754  001A02                     l3948:
  2755  001A02  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  2756  001A06  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  2757  001A0A  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  2758  001A0E  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  2759  001A12  EC2B  F00F         	call	___lwdiv	;wreg free
  2760  001A16  C00B  F017         	movff	?___lwdiv,utoa@v
  2761  001A1A  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  2762  001A1E  2A12               	incf	utoa@buf,f,c
  2763  001A20  5017               	movf	utoa@v,w,c
  2764  001A22  1018               	iorwf	utoa@v+1,w,c
  2765  001A24  A4D8               	btfss	status,2,c
  2766  001A26  D7ED               	goto	l3948
  2767  001A28  5012               	movf	utoa@buf,w,c
  2768  001A2A  6ED9               	movwf	fsr2l,c
  2769  001A2C  6ADA               	clrf	fsr2h,c
  2770  001A2E  0E00               	movlw	0
  2771  001A30  6EDF               	movwf	indf2,c
  2772  001A32  0612               	decf	utoa@buf,f,c
  2773  001A34                     l3958:
  2774  001A34  C013  F00B         	movff	utoa@val,___lwmod@dividend
  2775  001A38  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  2776  001A3C  C015  F00D         	movff	utoa@base,___lwmod@divisor
  2777  001A40  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  2778  001A44  EC0B  F010         	call	___lwmod	;wreg free
  2779  001A48  500B               	movf	?___lwmod,w,c
  2780  001A4A  6E19               	movwf	utoa@c,c
  2781  001A4C  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  2782  001A50  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  2783  001A54  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  2784  001A58  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  2785  001A5C  EC2B  F00F         	call	___lwdiv	;wreg free
  2786  001A60  C00B  F013         	movff	?___lwdiv,utoa@val
  2787  001A64  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  2788  001A68  0E09               	movlw	9
  2789  001A6A  6419               	cpfsgt	utoa@c,c
  2790  001A6C  D002               	goto	l1482
  2791  001A6E  0E07               	movlw	7
  2792  001A70  2619               	addwf	utoa@c,f,c
  2793  001A72                     l1482:
  2794  001A72  0E30               	movlw	48
  2795  001A74  2619               	addwf	utoa@c,f,c
  2796  001A76  5012               	movf	utoa@buf,w,c
  2797  001A78  6ED9               	movwf	fsr2l,c
  2798  001A7A  6ADA               	clrf	fsr2h,c
  2799  001A7C  C019  FFDF         	movff	utoa@c,indf2
  2800  001A80  0612               	decf	utoa@buf,f,c
  2801  001A82  5013               	movf	utoa@val,w,c
  2802  001A84  1014               	iorwf	utoa@val+1,w,c
  2803  001A86  A4D8               	btfss	status,2,c
  2804  001A88  D7D5               	goto	l3958
  2805                           
  2806                           ;	Return value of _utoa is never used
  2807  001A8A  2A12               	incf	utoa@buf,f,c
  2808  001A8C  0012               	return		;funcret
  2809  001A8E                     __end_of_utoa:
  2810                           	opt callstack 0
  2811                           
  2812 ;; *************** function ___lwmod *****************
  2813 ;; Defined at:
  2814 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  dividend        2   10[COMRAM] unsigned int 
  2817 ;;  divisor         2   12[COMRAM] unsigned int 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  counter         1   14[COMRAM] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  2   10[COMRAM] unsigned int 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2829 ;;      Params:         4       0       0       0       0       0       0       0       0
  2830 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2832 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2833 ;;Total ram usage:        5 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    5
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_utoa
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text14
  2844  002016                     __ptext14:
  2845                           	opt callstack 0
  2846  002016                     ___lwmod:
  2847                           	opt callstack 19
  2848                           
  2849                           ;incstack = 0
  2850  002016  500D               	movf	___lwmod@divisor,w,c
  2851  002018  100E               	iorwf	___lwmod@divisor+1,w,c
  2852  00201A  B4D8               	btfsc	status,2,c
  2853  00201C  D018               	goto	l1300
  2854  00201E  0E01               	movlw	1
  2855  002020  6E0F               	movwf	___lwmod@counter,c
  2856  002022  D004               	goto	l3900
  2857  002024                     l3898:
  2858  002024  90D8               	bcf	status,0,c
  2859  002026  360D               	rlcf	___lwmod@divisor,f,c
  2860  002028  360E               	rlcf	___lwmod@divisor+1,f,c
  2861  00202A  2A0F               	incf	___lwmod@counter,f,c
  2862  00202C                     l3900:
  2863  00202C  AE0E               	btfss	___lwmod@divisor+1,7,c
  2864  00202E  D7FA               	goto	l3898
  2865  002030                     u4160:
  2866  002030  500D               	movf	___lwmod@divisor,w,c
  2867  002032  5C0B               	subwf	___lwmod@dividend,w,c
  2868  002034  500E               	movf	___lwmod@divisor+1,w,c
  2869  002036  580C               	subwfb	___lwmod@dividend+1,w,c
  2870  002038  A0D8               	btfss	status,0,c
  2871  00203A  D004               	goto	l3906
  2872  00203C  500D               	movf	___lwmod@divisor,w,c
  2873  00203E  5E0B               	subwf	___lwmod@dividend,f,c
  2874  002040  500E               	movf	___lwmod@divisor+1,w,c
  2875  002042  5A0C               	subwfb	___lwmod@dividend+1,f,c
  2876  002044                     l3906:
  2877  002044  90D8               	bcf	status,0,c
  2878  002046  320E               	rrcf	___lwmod@divisor+1,f,c
  2879  002048  320D               	rrcf	___lwmod@divisor,f,c
  2880  00204A  2E0F               	decfsz	___lwmod@counter,f,c
  2881  00204C  D7F1               	goto	u4160
  2882  00204E                     l1300:
  2883  00204E  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  2884  002052  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  2885  002056  0012               	return		;funcret
  2886  002058                     __end_of___lwmod:
  2887                           	opt callstack 0
  2888                           
  2889 ;; *************** function ___lwdiv *****************
  2890 ;; Defined at:
  2891 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  dividend        2   10[COMRAM] unsigned int 
  2894 ;;  divisor         2   12[COMRAM] unsigned int 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  quotient        2   15[COMRAM] unsigned int 
  2897 ;;  counter         1   14[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  2   10[COMRAM] unsigned int 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2907 ;;      Params:         4       0       0       0       0       0       0       0       0
  2908 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2910 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2911 ;;Total ram usage:        7 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    5
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_utoa
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text15
  2922  001E56                     __ptext15:
  2923                           	opt callstack 0
  2924  001E56                     ___lwdiv:
  2925                           	opt callstack 19
  2926                           
  2927                           ;incstack = 0
  2928  001E56  0E00               	movlw	0
  2929  001E58  6E11               	movwf	___lwdiv@quotient+1,c
  2930  001E5A  0E00               	movlw	0
  2931  001E5C  6E10               	movwf	___lwdiv@quotient,c
  2932  001E5E  500D               	movf	___lwdiv@divisor,w,c
  2933  001E60  100E               	iorwf	___lwdiv@divisor+1,w,c
  2934  001E62  B4D8               	btfsc	status,2,c
  2935  001E64  D01C               	goto	l1290
  2936  001E66  0E01               	movlw	1
  2937  001E68  6E0F               	movwf	___lwdiv@counter,c
  2938  001E6A  D004               	goto	l3880
  2939  001E6C                     l3878:
  2940  001E6C  90D8               	bcf	status,0,c
  2941  001E6E  360D               	rlcf	___lwdiv@divisor,f,c
  2942  001E70  360E               	rlcf	___lwdiv@divisor+1,f,c
  2943  001E72  2A0F               	incf	___lwdiv@counter,f,c
  2944  001E74                     l3880:
  2945  001E74  AE0E               	btfss	___lwdiv@divisor+1,7,c
  2946  001E76  D7FA               	goto	l3878
  2947  001E78                     u4130:
  2948  001E78  90D8               	bcf	status,0,c
  2949  001E7A  3610               	rlcf	___lwdiv@quotient,f,c
  2950  001E7C  3611               	rlcf	___lwdiv@quotient+1,f,c
  2951  001E7E  500D               	movf	___lwdiv@divisor,w,c
  2952  001E80  5C0B               	subwf	___lwdiv@dividend,w,c
  2953  001E82  500E               	movf	___lwdiv@divisor+1,w,c
  2954  001E84  580C               	subwfb	___lwdiv@dividend+1,w,c
  2955  001E86  A0D8               	btfss	status,0,c
  2956  001E88  D005               	goto	l3890
  2957  001E8A  500D               	movf	___lwdiv@divisor,w,c
  2958  001E8C  5E0B               	subwf	___lwdiv@dividend,f,c
  2959  001E8E  500E               	movf	___lwdiv@divisor+1,w,c
  2960  001E90  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  2961  001E92  8010               	bsf	___lwdiv@quotient,0,c
  2962  001E94                     l3890:
  2963  001E94  90D8               	bcf	status,0,c
  2964  001E96  320E               	rrcf	___lwdiv@divisor+1,f,c
  2965  001E98  320D               	rrcf	___lwdiv@divisor,f,c
  2966  001E9A  2E0F               	decfsz	___lwdiv@counter,f,c
  2967  001E9C  D7ED               	goto	u4130
  2968  001E9E                     l1290:
  2969  001E9E  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  2970  001EA2  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2971  001EA6  0012               	return		;funcret
  2972  001EA8                     __end_of___lwdiv:
  2973                           	opt callstack 0
  2974                           
  2975 ;; *************** function _ikb_key_is_ready2read *****************
  2976 ;; Defined at:
  2977 ;;		line 426 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  k               1    wreg     unsigned char 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  k               1   10[COMRAM] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      unsigned char 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2986 ;; Tracked objects:
  2987 ;;		On entry : 3F/0
  2988 ;;		On exit  : 3F/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0
  2992 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2994 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2995 ;;Total ram usage:        1 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    5
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_visMode_job
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text16
  3006  00224A                     __ptext16:
  3007                           	opt callstack 0
  3008  00224A                     _ikb_key_is_ready2read:
  3009                           	opt callstack 24
  3010                           
  3011                           ;incstack = 0
  3012                           ;ikb_key_is_ready2read@k stored from wreg
  3013  00224A  6E0B               	movwf	ikb_key_is_ready2read@k,c
  3014                           
  3015                           ;ikb.c: 428: return key[k].bf.ReadyToRead;
  3016  00224C  500B               	movf	ikb_key_is_ready2read@k,w,c
  3017  00224E  0D10               	mullw	16
  3018  002250  50F3               	movf	prodl,w,c
  3019  002252  0F6A               	addlw	low (_key+10)
  3020  002254  6ED9               	movwf	fsr2l,c
  3021  002256  6ADA               	clrf	fsr2h,c
  3022  002258  0100               	movlb	0	; () banked
  3023  00225A  ACDF               	btfss	indf2,6,c
  3024  00225C  D002               	goto	u3350
  3025  00225E  0E01               	movlw	1
  3026  002260  0012               	return	
  3027  002262                     u3350:
  3028  002262  0E00               	movlw	0
  3029                           
  3030                           ; BSR set to: 0
  3031  002264  0012               	return		;funcret
  3032  002266                     __end_of_ikb_key_is_ready2read:
  3033                           	opt callstack 0
  3034                           
  3035 ;; *************** function _visMode_init *****************
  3036 ;; Defined at:
  3037 ;;		line 13 in file "visualizerMode.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 3F/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3054 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3055 ;;Total ram usage:        0 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    5
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text17
  3066  0022E6                     __ptext17:
  3067                           	opt callstack 0
  3068  0022E6                     _visMode_init:
  3069                           	opt callstack 25
  3070                           
  3071                           ;visualizerMode.c: 15: visMode.c = 0x00;
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;incstack = 0
  3075  0022E6  0E00               	movlw	0
  3076  0022E8  0100               	movlb	0	; () banked
  3077  0022EA  6FB9               	movwf	(_visMode+1)& (0+255),b
  3078                           
  3079                           ;visualizerMode.c: 16: visMode.disp7s_req = 1;
  3080  0022EC  0E01               	movlw	1
  3081  0022EE  6FB8               	movwf	_visMode& (0+255),b
  3082                           
  3083                           ; BSR set to: 0
  3084  0022F0  0012               	return		;funcret
  3085  0022F2                     __end_of_visMode_init:
  3086                           	opt callstack 0
  3087                           
  3088 ;; *************** function _pump_job *****************
  3089 ;; Defined at:
  3090 ;;		line 22 in file "pump.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  cod_ret         1    0        char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      char 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 3F/0
  3101 ;;		On exit  : 3F/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0
  3105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3107 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3108 ;;Total ram usage:        1 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    5
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text18
  3119  001D3C                     __ptext18:
  3120                           	opt callstack 0
  3121  001D3C                     _pump_job:
  3122                           	opt callstack 25
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;pump.c: 25: static int8_t c;;pump.c: 27: if (pump.ticks > 0)
  3126                           
  3127                           ; BSR set to: 0
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;incstack = 0
  3131  001D3C  51B5               	movf	_pump& (0+255),w,b
  3132  001D3E  11B6               	iorwf	(_pump+1)& (0+255),w,b
  3133  001D40  B4D8               	btfsc	status,2,c
  3134  001D42  0012               	return	
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;pump.c: 28: {;pump.c: 29: if (pump.sm0 == 0)
  3138  001D44  51B7               	movf	(_pump+2)& (0+255),w,b
  3139  001D46  A4D8               	btfss	status,2,c
  3140  001D48  D005               	goto	l3684
  3141                           
  3142                           ; BSR set to: 0
  3143  001D4A  908D               	bcf	3981,0,c	;volatile
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;pump.c: 32: c = 0x0;
  3147  001D4C  0E00               	movlw	0
  3148  001D4E  6FBE               	movwf	pump_job@c& (0+255),b
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;pump.c: 33: pump.sm0++;
  3152  001D50  2BB7               	incf	(_pump+2)& (0+255),f,b
  3153                           
  3154                           ;pump.c: 34: }
  3155  001D52  0012               	return	
  3156  001D54                     l3684:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;pump.c: 35: else if (pump.sm0 == 1)
  3160  001D54  05B7               	decf	(_pump+2)& (0+255),w,b
  3161  001D56  A4D8               	btfss	status,2,c
  3162  001D58  D00C               	goto	l3696
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;pump.c: 36: {;pump.c: 37: if (main_flag.f1ms)
  3166  001D5A  A04F               	btfss	_main_flag,0,c	;volatile
  3167  001D5C  0012               	return	
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;pump.c: 38: {;pump.c: 39: if (++c == 50)
  3171  001D5E  2BBE               	incf	pump_job@c& (0+255),f,b
  3172  001D60  0E32               	movlw	50
  3173  001D62  19BE               	xorwf	pump_job@c& (0+255),w,b
  3174  001D64  A4D8               	btfss	status,2,c
  3175  001D66  0012               	return	
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;pump.c: 40: {;pump.c: 41: c=0x00;
  3179  001D68  0E00               	movlw	0
  3180  001D6A  6FBE               	movwf	pump_job@c& (0+255),b
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;pump.c: 42: pump.sm0++;
  3184  001D6C  2BB7               	incf	(_pump+2)& (0+255),f,b
  3185                           
  3186                           ; BSR set to: 0
  3187  001D6E  808D               	bsf	3981,0,c	;volatile
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;pump.c: 44: };pump.c: 45: };pump.c: 46: }
  3191  001D70  0012               	return	
  3192  001D72                     l3696:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;pump.c: 47: else if (pump.sm0 == 2)
  3196  001D72  0E02               	movlw	2
  3197  001D74  19B7               	xorwf	(_pump+2)& (0+255),w,b
  3198  001D76  A4D8               	btfss	status,2,c
  3199  001D78  0012               	return	
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;pump.c: 48: {;pump.c: 49: if (main_flag.f1ms)
  3203  001D7A  A04F               	btfss	_main_flag,0,c	;volatile
  3204  001D7C  0012               	return	
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;pump.c: 50: {;pump.c: 51: if (++c == 50)
  3208  001D7E  2BBE               	incf	pump_job@c& (0+255),f,b
  3209  001D80  0E32               	movlw	50
  3210  001D82  19BE               	xorwf	pump_job@c& (0+255),w,b
  3211  001D84  A4D8               	btfss	status,2,c
  3212  001D86  0012               	return	
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;pump.c: 52: {;pump.c: 53: c=0x00;
  3216  001D88  0E00               	movlw	0
  3217  001D8A  6FBE               	movwf	pump_job@c& (0+255),b
  3218                           
  3219                           ;pump.c: 54: pump.sm0 = 0x00;
  3220  001D8C  0E00               	movlw	0
  3221  001D8E  6FB7               	movwf	(_pump+2)& (0+255),b
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;pump.c: 56: if (--pump.ticks == 0)
  3225  001D90  07B5               	decf	_pump& (0+255),f,b
  3226  001D92  A0D8               	btfss	status,0,c
  3227  001D94  07B6               	decf	(_pump+1)& (0+255),f,b
  3228  001D96  51B5               	movf	_pump& (0+255),w,b
  3229  001D98  11B6               	iorwf	(_pump+1)& (0+255),w,b
  3230  001D9A  B4D8               	btfsc	status,2,c
  3231  001D9C  0012               	return	
  3232  001D9E  0012               	return	
  3233  001DA0                     __end_of_pump_job:
  3234                           	opt callstack 0
  3235                           
  3236 ;; *************** function _pulsonic_init *****************
  3237 ;; Defined at:
  3238 ;;		line 6 in file "pulsonic.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  i               1   10[COMRAM] char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0
  3253 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3255 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3256 ;;Total ram usage:        1 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    5
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_main
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text19
  3267  0020DA                     __ptext19:
  3268                           	opt callstack 0
  3269  0020DA                     _pulsonic_init:
  3270                           	opt callstack 25
  3271                           
  3272                           ;pulsonic.c: 8: int8_t i;;pulsonic.c: 9: pulsonic.dist_total_time = 60;
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;incstack = 0
  3276  0020DA  0E00               	movlw	0
  3277  0020DC  0101               	movlb	1	; () banked
  3278  0020DE  6F03               	movwf	(_pulsonic+3)& (0+255),b
  3279  0020E0  0E3C               	movlw	60
  3280  0020E2  6F02               	movwf	(_pulsonic+2)& (0+255),b
  3281                           
  3282                           ;pulsonic.c: 13: for (i=0; i< 8; i++)
  3283  0020E4  0E00               	movlw	0
  3284  0020E6  6E0B               	movwf	pulsonic_init@i,c
  3285  0020E8                     l3564:
  3286                           
  3287                           ;pulsonic.c: 14: {;pulsonic.c: 15: pulsonic.nozzle[i].Q_mlh = 12.0;
  3288  0020E8  500B               	movf	pulsonic_init@i,w,c
  3289  0020EA  0D06               	mullw	6
  3290  0020EC  0E06               	movlw	low (_pulsonic+6)
  3291  0020EE  24F3               	addwf	prodl,w,c
  3292  0020F0  6ED9               	movwf	fsr2l,c
  3293  0020F2  0E01               	movlw	high (_pulsonic+6)
  3294  0020F4  20F4               	addwfc	prodh,w,c
  3295  0020F6  6EDA               	movwf	fsr2h,c
  3296  0020F8  0E00               	movlw	0
  3297  0020FA  6EDE               	movwf	postinc2,c
  3298  0020FC  0E40               	movlw	64
  3299  0020FE  6EDE               	movwf	postinc2,c
  3300  002100  0E41               	movlw	65
  3301  002102  6EDE               	movwf	postinc2,c
  3302  002104  2A0B               	incf	pulsonic_init@i,f,c
  3303  002106  500B               	movf	pulsonic_init@i,w,c
  3304  002108  0A80               	xorlw	128
  3305  00210A  0F78               	addlw	-136
  3306  00210C  B0D8               	btfsc	status,0,c
  3307  00210E  0012               	return	
  3308  002110  D7EB               	goto	l3564
  3309  002112                     __end_of_pulsonic_init:
  3310                           	opt callstack 0
  3311                           
  3312 ;; *************** function _mpap_sych *****************
  3313 ;; Defined at:
  3314 ;;		line 160 in file "mpap.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 3F/0
  3325 ;;		On exit  : 3F/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    5
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text20
  3343  001A8E                     __ptext20:
  3344                           	opt callstack 0
  3345  001A8E                     _mpap_sych:
  3346                           	opt callstack 25
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;mpap.c: 162: static int8_t sm0;;mpap.c: 163: static int8_t c;;mpap.c: 164: if (sm0 == 0
      +                          )
  3350                           
  3351                           ;incstack = 0
  3352  001A8E  51C0               	movf	mpap_sych@sm0& (0+255),w,b
  3353  001A90  A4D8               	btfss	status,2,c
  3354  001A92  D010               	goto	l3722
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;mpap.c: 165: {;mpap.c: 166: if ((mpap.mode == MPAP_NORMAL_MODE) || (mpap.mode == MPAP_H
      +                          OMMING_MODE))
  3358  001A94  0E03               	movlw	3
  3359  001A96  184D               	xorwf	_mpap+7,w,c	;volatile
  3360  001A98  B4D8               	btfsc	status,2,c
  3361  001A9A  D004               	goto	u3880
  3362                           
  3363                           ; BSR set to: 0
  3364  001A9C  0E02               	movlw	2
  3365  001A9E  184D               	xorwf	_mpap+7,w,c	;volatile
  3366  001AA0  A4D8               	btfss	status,2,c
  3367  001AA2  D002               	goto	l3718
  3368  001AA4                     u3880:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;mpap.c: 167: {;mpap.c: 168: sm0++;
  3372  001AA4  2BC0               	incf	mpap_sych@sm0& (0+255),f,b
  3373                           
  3374                           ;mpap.c: 169: }
  3375  001AA6  0012               	return	
  3376  001AA8                     l3718:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;mpap.c: 170: else if (mpap.mode == MPAP_STALL_MODE)
  3380  001AA8  044D               	decf	_mpap+7,w,c	;volatile
  3381  001AAA  A4D8               	btfss	status,2,c
  3382  001AAC  0012               	return	
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;mpap.c: 171: {;mpap.c: 172: sm0 = 2;
  3386  001AAE  0E02               	movlw	2
  3387  001AB0  6FC0               	movwf	mpap_sych@sm0& (0+255),b
  3388  001AB2  0012               	return	
  3389  001AB4                     l3722:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;mpap.c: 175: else if (sm0 == 1)
  3393  001AB4  05C0               	decf	mpap_sych@sm0& (0+255),w,b
  3394  001AB6  A4D8               	btfss	status,2,c
  3395  001AB8  D013               	goto	l3738
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;mpap.c: 176: {;mpap.c: 177: if (mpap.numSteps_tomove == 0)
  3399  001ABA  504A               	movf	_mpap+4,w,c	;volatile
  3400  001ABC  104B               	iorwf	_mpap+5,w,c	;volatile
  3401  001ABE  A4D8               	btfss	status,2,c
  3402  001AC0  0012               	return	
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;mpap.c: 178: {;mpap.c: 179: if (mpap.mode == MPAP_HOMMING_MODE)
  3406  001AC2  0E02               	movlw	2
  3407  001AC4  184D               	xorwf	_mpap+7,w,c	;volatile
  3408  001AC6  A4D8               	btfss	status,2,c
  3409  001AC8  D005               	goto	l3732
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;mpap.c: 180: {;mpap.c: 181: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  3413  001ACA  0101               	movlb	1	; () banked
  3414  001ACC  A13A               	btfss	(_pulsonic+58)& (0+255),0,b
  3415  001ACE  D003               	goto	l3734
  3416                           
  3417                           ; BSR set to: 1
  3418                           ;mpap.c: 182: {;mpap.c: 183: pulsonic.errors.flag.mpap_home_sensor = 0;
  3419  001AD0  913A               	bcf	(_pulsonic+58)& (0+255),0,b
  3420  001AD2  D001               	goto	l3734
  3421  001AD4                     l3732:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;mpap.c: 187: else if (mpap.mode == MPAP_NORMAL_MODE)
  3425  001AD4  504D               	movf	_mpap+7,w,c	;volatile
  3426  001AD6                     l3734:
  3427                           
  3428                           ;mpap.c: 189: };mpap.c: 190: sm0++;
  3429  001AD6  0100               	movlb	0	; () banked
  3430  001AD8  2BC0               	incf	mpap_sych@sm0& (0+255),f,b
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;mpap.c: 191: c = 0;
  3434  001ADA  0E00               	movlw	0
  3435  001ADC  6FBF               	movwf	mpap_sych@c& (0+255),b
  3436  001ADE  0012               	return	
  3437  001AE0                     l3738:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;mpap.c: 194: else if (sm0 == 2)
  3441  001AE0  0E02               	movlw	2
  3442  001AE2  19C0               	xorwf	mpap_sych@sm0& (0+255),w,b
  3443  001AE4  A4D8               	btfss	status,2,c
  3444  001AE6  D00A               	goto	l3748
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;mpap.c: 195: {;mpap.c: 196: if (main_flag.f1ms)
  3448  001AE8  A04F               	btfss	_main_flag,0,c	;volatile
  3449  001AEA  0012               	return	
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;mpap.c: 197: {;mpap.c: 198: if (++c == 10)
  3453  001AEC  2BBF               	incf	mpap_sych@c& (0+255),f,b
  3454  001AEE  0E0A               	movlw	10
  3455  001AF0  19BF               	xorwf	mpap_sych@c& (0+255),w,b
  3456  001AF2  A4D8               	btfss	status,2,c
  3457  001AF4  0012               	return	
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;mpap.c: 199: {;mpap.c: 201: mpap.mode = MPAP_STALL_MODE;
  3461  001AF6  0E01               	movlw	1
  3462  001AF8  6E4D               	movwf	_mpap+7,c	;volatile
  3463  001AFA  D7D4               	goto	u3880
  3464  001AFC                     l3748:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;mpap.c: 206: else if (sm0 == 3)
  3468  001AFC  0E03               	movlw	3
  3469  001AFE  19C0               	xorwf	mpap_sych@sm0& (0+255),w,b
  3470  001B00  A4D8               	btfss	status,2,c
  3471  001B02  0012               	return	
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;mpap.c: 207: {;mpap.c: 208: if (mpap.mode == MPAP_IDLE_MODE)
  3475  001B04  504D               	movf	_mpap+7,w,c	;volatile
  3476  001B06  A4D8               	btfss	status,2,c
  3477  001B08  0012               	return	
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;mpap.c: 209: {;mpap.c: 211: sm0 = 0;
  3481  001B0A  0E00               	movlw	0
  3482  001B0C  6FC0               	movwf	mpap_sych@sm0& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485  001B0E  0012               	return		;funcret
  3486  001B10                     __end_of_mpap_sych:
  3487                           	opt callstack 0
  3488                           
  3489 ;; *************** function _ikb_job *****************
  3490 ;; Defined at:
  3491 ;;		line 413 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 3F/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3505 ;;      Params:         0       0       0       0       0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3508 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    8
  3512 ;; This function calls:
  3513 ;;		_ikey_parsing
  3514 ;;		_ikey_scan
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text21
  3521  0022F2                     __ptext21:
  3522                           	opt callstack 0
  3523  0022F2                     _ikb_job:
  3524                           	opt callstack 22
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;ikb.c: 415: ikey_scan();
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;incstack = 0
  3531  0022F2  EC17  F009         	call	_ikey_scan	;wreg free
  3532                           
  3533                           ;ikb.c: 416: ikey_parsing();
  3534  0022F6  EC07  F004         	call	_ikey_parsing	;wreg free
  3535  0022FA  0012               	return		;funcret
  3536  0022FC                     __end_of_ikb_job:
  3537                           	opt callstack 0
  3538                           
  3539 ;; *************** function _ikey_scan *****************
  3540 ;; Defined at:
  3541 ;;		line 448 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  k               1   11[COMRAM] char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 3F/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3555 ;;      Params:         0       0       0       0       0       0       0       0       0
  3556 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3557 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3558 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3559 ;;Total ram usage:        2 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    6
  3562 ;; This function calls:
  3563 ;;		_keyRead_pin_key0
  3564 ;;		_keyRead_pin_key1
  3565 ;;		_keyRead_pin_key2
  3566 ;;		_keyRead_pin_key3
  3567 ;;		_keyRead_pin_key4
  3568 ;; This function is called by:
  3569 ;;		_ikb_job
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text22
  3574  00122E                     __ptext22:
  3575                           	opt callstack 0
  3576  00122E                     _ikey_scan:
  3577                           	opt callstack 23
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;ikb.c: 450: int8_t k = 5-1;
  3581                           
  3582                           ;incstack = 0
  3583  00122E  0E04               	movlw	4
  3584  001230  6E0C               	movwf	ikey_scan@k,c
  3585  001232                     l3232:
  3586                           
  3587                           ;ikb.c: 452: {;ikb.c: 453: if (key[k].sm0 == 0)
  3588  001232  500C               	movf	ikey_scan@k,w,c
  3589  001234  0D10               	mullw	16
  3590  001236  50F3               	movf	prodl,w,c
  3591  001238  0F64               	addlw	low (_key+4)
  3592  00123A  6ED9               	movwf	fsr2l,c
  3593  00123C  6ADA               	clrf	fsr2h,c
  3594  00123E  50DF               	movf	indf2,w,c
  3595  001240  A4D8               	btfss	status,2,c
  3596  001242  D016               	goto	l3238
  3597                           
  3598                           ;ikb.c: 454: {;ikb.c: 455: if (key[k].keyRead() == 0)
  3599  001244  500C               	movf	ikey_scan@k,w,c
  3600  001246  0D10               	mullw	16
  3601  001248  50F3               	movf	prodl,w,c
  3602  00124A  0F60               	addlw	low _key
  3603  00124C  6ED9               	movwf	fsr2l,c
  3604  00124E  6ADA               	clrf	fsr2h,c
  3605  001250  D801               	call	u2848
  3606  001252  D00A               	goto	u2849
  3607  001254                     u2848:
  3608  001254  0005               	push	
  3609  001256  6EFA               	movwf	pclath,c
  3610  001258  50DE               	movf	postinc2,w,c
  3611  00125A  6EFD               	movwf	tosl,c
  3612  00125C  50DE               	movf	postinc2,w,c
  3613  00125E  6EFE               	movwf	tosh,c
  3614  001260  50F8               	movf	tblptru,w,c
  3615  001262  6EFF               	movwf	tosu,c
  3616  001264  50FA               	movf	pclath,w,c
  3617  001266  0012               	return		;indir
  3618  001268                     u2849:
  3619  001268  0900               	iorlw	0
  3620  00126A  A4D8               	btfss	status,2,c
  3621  00126C  D0AC               	goto	l3268
  3622  00126E  D041               	goto	L1
  3623  001270                     l3238:
  3624                           
  3625                           ;ikb.c: 460: else if (key[k].sm0 == 1)
  3626  001270  500C               	movf	ikey_scan@k,w,c
  3627  001272  0D10               	mullw	16
  3628  001274  50F3               	movf	prodl,w,c
  3629  001276  0F64               	addlw	low (_key+4)
  3630  001278  6ED9               	movwf	fsr2l,c
  3631  00127A  6ADA               	clrf	fsr2h,c
  3632  00127C  04DE               	decf	postinc2,w,c
  3633  00127E  A4D8               	btfss	status,2,c
  3634  001280  D040               	goto	l3250
  3635                           
  3636                           ;ikb.c: 461: {;ikb.c: 462: if (++key[k].counter0 == 4)
  3637  001282  500C               	movf	ikey_scan@k,w,c
  3638  001284  0D10               	mullw	16
  3639  001286  50F3               	movf	prodl,w,c
  3640  001288  0F65               	addlw	low (_key+5)
  3641  00128A  6ED9               	movwf	fsr2l,c
  3642  00128C  6ADA               	clrf	fsr2h,c
  3643  00128E  2ADF               	incf	indf2,f,c
  3644  001290  0E04               	movlw	4
  3645  001292  18DE               	xorwf	postinc2,w,c
  3646  001294  A4D8               	btfss	status,2,c
  3647  001296  D097               	goto	l3268
  3648                           
  3649                           ;ikb.c: 463: {;ikb.c: 464: key[k].counter0 = 0x00;
  3650  001298  500C               	movf	ikey_scan@k,w,c
  3651  00129A  0D10               	mullw	16
  3652  00129C  50F3               	movf	prodl,w,c
  3653  00129E  0F65               	addlw	low (_key+5)
  3654  0012A0  6ED9               	movwf	fsr2l,c
  3655  0012A2  6ADA               	clrf	fsr2h,c
  3656  0012A4  0E00               	movlw	0
  3657  0012A6  6EDF               	movwf	indf2,c
  3658                           
  3659                           ;ikb.c: 466: if (key[k].keyRead() != 0)
  3660  0012A8  500C               	movf	ikey_scan@k,w,c
  3661  0012AA  0D10               	mullw	16
  3662  0012AC  50F3               	movf	prodl,w,c
  3663  0012AE  0F60               	addlw	low _key
  3664  0012B0  6ED9               	movwf	fsr2l,c
  3665  0012B2  6ADA               	clrf	fsr2h,c
  3666  0012B4  D801               	call	u2888
  3667  0012B6  D00A               	goto	u2889
  3668  0012B8                     u2888:
  3669  0012B8  0005               	push	
  3670  0012BA  6EFA               	movwf	pclath,c
  3671  0012BC  50DE               	movf	postinc2,w,c
  3672  0012BE  6EFD               	movwf	tosl,c
  3673  0012C0  50DE               	movf	postinc2,w,c
  3674  0012C2  6EFE               	movwf	tosh,c
  3675  0012C4  50F8               	movf	tblptru,w,c
  3676  0012C6  6EFF               	movwf	tosu,c
  3677  0012C8  50FA               	movf	pclath,w,c
  3678  0012CA  0012               	return		;indir
  3679  0012CC                     u2889:
  3680  0012CC  0900               	iorlw	0
  3681  0012CE  B4D8               	btfsc	status,2,c
  3682  0012D0  D008               	goto	l3248
  3683  0012D2                     u2890:
  3684                           
  3685                           ;ikb.c: 467: {;ikb.c: 468: key[k].sm0--;
  3686  0012D2  500C               	movf	ikey_scan@k,w,c
  3687  0012D4  0D10               	mullw	16
  3688  0012D6  50F3               	movf	prodl,w,c
  3689  0012D8  0F64               	addlw	low (_key+4)
  3690  0012DA  6ED9               	movwf	fsr2l,c
  3691  0012DC  6ADA               	clrf	fsr2h,c
  3692  0012DE  06DF               	decf	indf2,f,c
  3693                           
  3694                           ;ikb.c: 469: }
  3695  0012E0  D072               	goto	l3268
  3696  0012E2                     l3248:
  3697                           
  3698                           ;ikb.c: 470: else;ikb.c: 471: {;ikb.c: 472: key[k].bf.state = 1;
  3699  0012E2  500C               	movf	ikey_scan@k,w,c
  3700  0012E4  0D10               	mullw	16
  3701  0012E6  50F3               	movf	prodl,w,c
  3702  0012E8  0F6A               	addlw	low (_key+10)
  3703  0012EA  6ED9               	movwf	fsr2l,c
  3704  0012EC  6ADA               	clrf	fsr2h,c
  3705  0012EE  0100               	movlb	0	; () banked
  3706  0012F0  80DF               	bsf	indf2,0,c
  3707  0012F2                     L1:
  3708                           
  3709                           ;ikb.c: 473: key[k].sm0++;
  3710  0012F2  500C               	movf	ikey_scan@k,w,c
  3711  0012F4  0D10               	mullw	16
  3712  0012F6  50F3               	movf	prodl,w,c
  3713  0012F8  0F64               	addlw	low (_key+4)
  3714  0012FA  6ED9               	movwf	fsr2l,c
  3715  0012FC  6ADA               	clrf	fsr2h,c
  3716  0012FE  2ADF               	incf	indf2,f,c
  3717  001300  D062               	goto	l3268
  3718  001302                     l3250:
  3719                           
  3720                           ;ikb.c: 477: else if (key[k].sm0 == 2)
  3721  001302  500C               	movf	ikey_scan@k,w,c
  3722  001304  0D10               	mullw	16
  3723  001306  50F3               	movf	prodl,w,c
  3724  001308  0F64               	addlw	low (_key+4)
  3725  00130A  6ED9               	movwf	fsr2l,c
  3726  00130C  6ADA               	clrf	fsr2h,c
  3727  00130E  0E02               	movlw	2
  3728  001310  18DE               	xorwf	postinc2,w,c
  3729  001312  A4D8               	btfss	status,2,c
  3730  001314  D016               	goto	l3256
  3731                           
  3732                           ;ikb.c: 478: {;ikb.c: 479: if (key[k].keyRead() == 1)
  3733  001316  500C               	movf	ikey_scan@k,w,c
  3734  001318  0D10               	mullw	16
  3735  00131A  50F3               	movf	prodl,w,c
  3736  00131C  0F60               	addlw	low _key
  3737  00131E  6ED9               	movwf	fsr2l,c
  3738  001320  6ADA               	clrf	fsr2h,c
  3739  001322  D801               	call	u2918
  3740  001324  D00A               	goto	u2919
  3741  001326                     u2918:
  3742  001326  0005               	push	
  3743  001328  6EFA               	movwf	pclath,c
  3744  00132A  50DE               	movf	postinc2,w,c
  3745  00132C  6EFD               	movwf	tosl,c
  3746  00132E  50DE               	movf	postinc2,w,c
  3747  001330  6EFE               	movwf	tosh,c
  3748  001332  50F8               	movf	tblptru,w,c
  3749  001334  6EFF               	movwf	tosu,c
  3750  001336  50FA               	movf	pclath,w,c
  3751  001338  0012               	return		;indir
  3752  00133A                     u2919:
  3753  00133A  06E8               	decf	wreg,f,c
  3754  00133C  B4D8               	btfsc	status,2,c
  3755  00133E  D7D9               	goto	L1
  3756  001340  D042               	goto	l3268
  3757  001342                     l3256:
  3758                           
  3759                           ;ikb.c: 482: else if (key[k].sm0 == 3)
  3760  001342  500C               	movf	ikey_scan@k,w,c
  3761  001344  0D10               	mullw	16
  3762  001346  50F3               	movf	prodl,w,c
  3763  001348  0F64               	addlw	low (_key+4)
  3764  00134A  6ED9               	movwf	fsr2l,c
  3765  00134C  6ADA               	clrf	fsr2h,c
  3766  00134E  0E03               	movlw	3
  3767  001350  18DE               	xorwf	postinc2,w,c
  3768  001352  A4D8               	btfss	status,2,c
  3769  001354  D038               	goto	l3268
  3770                           
  3771                           ;ikb.c: 483: {;ikb.c: 484: if (++key[k].counter0 == 4)
  3772  001356  500C               	movf	ikey_scan@k,w,c
  3773  001358  0D10               	mullw	16
  3774  00135A  50F3               	movf	prodl,w,c
  3775  00135C  0F65               	addlw	low (_key+5)
  3776  00135E  6ED9               	movwf	fsr2l,c
  3777  001360  6ADA               	clrf	fsr2h,c
  3778  001362  2ADF               	incf	indf2,f,c
  3779  001364  0E04               	movlw	4
  3780  001366  18DE               	xorwf	postinc2,w,c
  3781  001368  A4D8               	btfss	status,2,c
  3782  00136A  D02D               	goto	l3268
  3783                           
  3784                           ;ikb.c: 485: {;ikb.c: 486: key[k].counter0 = 0x00;
  3785  00136C  500C               	movf	ikey_scan@k,w,c
  3786  00136E  0D10               	mullw	16
  3787  001370  50F3               	movf	prodl,w,c
  3788  001372  0F65               	addlw	low (_key+5)
  3789  001374  6ED9               	movwf	fsr2l,c
  3790  001376  6ADA               	clrf	fsr2h,c
  3791  001378  0E00               	movlw	0
  3792  00137A  6EDF               	movwf	indf2,c
  3793                           
  3794                           ;ikb.c: 488: if (key[k].keyRead() != 1)
  3795  00137C  500C               	movf	ikey_scan@k,w,c
  3796  00137E  0D10               	mullw	16
  3797  001380  50F3               	movf	prodl,w,c
  3798  001382  0F60               	addlw	low _key
  3799  001384  6ED9               	movwf	fsr2l,c
  3800  001386  6ADA               	clrf	fsr2h,c
  3801  001388  D801               	call	u2958
  3802  00138A  D00A               	goto	u2959
  3803  00138C                     u2958:
  3804  00138C  0005               	push	
  3805  00138E  6EFA               	movwf	pclath,c
  3806  001390  50DE               	movf	postinc2,w,c
  3807  001392  6EFD               	movwf	tosl,c
  3808  001394  50DE               	movf	postinc2,w,c
  3809  001396  6EFE               	movwf	tosh,c
  3810  001398  50F8               	movf	tblptru,w,c
  3811  00139A  6EFF               	movwf	tosu,c
  3812  00139C  50FA               	movf	pclath,w,c
  3813  00139E  0012               	return		;indir
  3814  0013A0                     u2959:
  3815  0013A0  06E8               	decf	wreg,f,c
  3816  0013A2  A4D8               	btfss	status,2,c
  3817  0013A4  D796               	goto	u2890
  3818                           
  3819                           ;ikb.c: 492: else;ikb.c: 493: {;ikb.c: 494: key[k].bf.state = 0;
  3820  0013A6  500C               	movf	ikey_scan@k,w,c
  3821  0013A8  0D10               	mullw	16
  3822  0013AA  50F3               	movf	prodl,w,c
  3823  0013AC  0F6A               	addlw	low (_key+10)
  3824  0013AE  6ED9               	movwf	fsr2l,c
  3825  0013B0  6ADA               	clrf	fsr2h,c
  3826  0013B2  0100               	movlb	0	; () banked
  3827  0013B4  90DF               	bcf	indf2,0,c
  3828                           
  3829                           ;ikb.c: 495: key[k].sm0 = 0x00;
  3830  0013B6  500C               	movf	ikey_scan@k,w,c
  3831  0013B8  0D10               	mullw	16
  3832  0013BA  50F3               	movf	prodl,w,c
  3833  0013BC  0F64               	addlw	low (_key+4)
  3834  0013BE  6ED9               	movwf	fsr2l,c
  3835  0013C0  6ADA               	clrf	fsr2h,c
  3836  0013C2  0E00               	movlw	0
  3837  0013C4  6EDF               	movwf	indf2,c
  3838  0013C6                     l3268:
  3839                           
  3840                           ;ikb.c: 496: };ikb.c: 497: };ikb.c: 498: };ikb.c: 499: }while (--k >= 0);
  3841  0013C6  060C               	decf	ikey_scan@k,f,c
  3842  0013C8  BE0C               	btfsc	ikey_scan@k,7,c
  3843  0013CA  0012               	return	
  3844  0013CC  D732               	goto	l3232
  3845  0013CE                     __end_of_ikey_scan:
  3846                           	opt callstack 0
  3847                           
  3848 ;; *************** function _keyRead_pin_key3 *****************
  3849 ;; Defined at:
  3850 ;;		line 205 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;		None
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      unsigned char 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3864 ;;      Params:         0       0       0       0       0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3867 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3868 ;;Total ram usage:        0 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    5
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_ikb_init
  3875 ;;		_ikey_scan
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text23
  3880  00235C                     __ptext23:
  3881                           	opt callstack 0
  3882  00235C                     _keyRead_pin_key3:
  3883                           	opt callstack 23
  3884                           
  3885                           ;ikb.c: 207: return ((PORTC & (1<<7))>>7);
  3886                           
  3887                           ;incstack = 0
  3888  00235C  4482               	rlncf	3970,w,c	;volatile
  3889  00235E  0B01               	andlw	1
  3890  002360  0012               	return		;funcret
  3891  002362                     __end_of_keyRead_pin_key3:
  3892                           	opt callstack 0
  3893                           
  3894 ;; *************** function _keyRead_pin_key2 *****************
  3895 ;; Defined at:
  3896 ;;		line 201 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      unsigned char 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3910 ;;      Params:         0       0       0       0       0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3913 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    5
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_ikb_init
  3921 ;;		_ikey_scan
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text24
  3926  0022FC                     __ptext24:
  3927                           	opt callstack 0
  3928  0022FC                     _keyRead_pin_key2:
  3929                           	opt callstack 23
  3930                           
  3931                           ;ikb.c: 203: return ((PORTC & (1<<6))>>6);
  3932                           
  3933                           ;incstack = 0
  3934  0022FC  4482               	rlncf	3970,w,c	;volatile
  3935  0022FE  46E8               	rlncf	wreg,f,c
  3936  002300  0B03               	andlw	3
  3937  002302  0B01               	andlw	1
  3938  002304  0012               	return		;funcret
  3939  002306                     __end_of_keyRead_pin_key2:
  3940                           	opt callstack 0
  3941                           
  3942 ;; *************** function _keyRead_pin_key1 *****************
  3943 ;; Defined at:
  3944 ;;		line 197 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      unsigned char 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3958 ;;      Params:         0       0       0       0       0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3961 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    5
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_ikb_init
  3969 ;;		_ikey_scan
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text25
  3974  002306                     __ptext25:
  3975                           	opt callstack 0
  3976  002306                     _keyRead_pin_key1:
  3977                           	opt callstack 23
  3978                           
  3979                           ;ikb.c: 199: return ((PORTC & (1<<5))>>5);
  3980                           
  3981                           ;incstack = 0
  3982  002306  3882               	swapf	3970,w,c	;volatile
  3983  002308  42E8               	rrncf	wreg,f,c
  3984  00230A  0B07               	andlw	7
  3985  00230C  0B01               	andlw	1
  3986  00230E  0012               	return		;funcret
  3987  002310                     __end_of_keyRead_pin_key1:
  3988                           	opt callstack 0
  3989                           
  3990 ;; *************** function _keyRead_pin_key0 *****************
  3991 ;; Defined at:
  3992 ;;		line 193 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      unsigned char 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4010 ;;Total ram usage:        0 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    5
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_ikb_init
  4017 ;;		_ikey_scan
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text26
  4022  00234C                     __ptext26:
  4023                           	opt callstack 0
  4024  00234C                     _keyRead_pin_key0:
  4025                           	opt callstack 23
  4026                           
  4027                           ;ikb.c: 195: return ((PORTC & (1<<4))>>4);
  4028                           
  4029                           ;incstack = 0
  4030  00234C  3882               	swapf	3970,w,c	;volatile
  4031  00234E  0B0F               	andlw	15
  4032  002350  0B01               	andlw	1
  4033  002352  0012               	return		;funcret
  4034  002354                     __end_of_keyRead_pin_key0:
  4035                           	opt callstack 0
  4036                           
  4037 ;; *************** function _keyRead_pin_key4 *****************
  4038 ;; Defined at:
  4039 ;;		line 209 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      unsigned char 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0
  4054 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4056 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4057 ;;Total ram usage:        0 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    5
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_ikb_init
  4064 ;;		_ikey_scan
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text27
  4069  002354                     __ptext27:
  4070                           	opt callstack 0
  4071  002354                     _keyRead_pin_key4:
  4072                           	opt callstack 23
  4073                           
  4074                           ;ikb.c: 211: return ((PORTD & (1<<4))>>4);
  4075                           
  4076                           ;incstack = 0
  4077  002354  3883               	swapf	3971,w,c	;volatile
  4078  002356  0B0F               	andlw	15
  4079  002358  0B01               	andlw	1
  4080  00235A  0012               	return		;funcret
  4081  00235C                     __end_of_keyRead_pin_key4:
  4082                           	opt callstack 0
  4083                           
  4084 ;; *************** function _ikey_parsing *****************
  4085 ;; Defined at:
  4086 ;;		line 544 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  k               1   34[COMRAM] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0
  4101 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4102 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4103 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4104 ;;Total ram usage:        5 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    7
  4107 ;; This function calls:
  4108 ;;		___ftge
  4109 ;;		___lwtoft
  4110 ;;		_ikey_is_accessible
  4111 ;; This function is called by:
  4112 ;;		_ikb_job
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text28
  4117  00080E                     __ptext28:
  4118                           	opt callstack 0
  4119  00080E                     _ikey_parsing:
  4120                           	opt callstack 22
  4121                           
  4122                           ;ikb.c: 546: uint8_t k;;ikb.c: 548: for (k=0; k < 5; k++)
  4123                           
  4124                           ;incstack = 0
  4125  00080E  0E00               	movlw	0
  4126  000810  6E23               	movwf	ikey_parsing@k,c
  4127  000812                     l4280:
  4128                           
  4129                           ;ikb.c: 549: {;ikb.c: 550: if ( key[k].sm1 == (0) )
  4130  000812  5023               	movf	ikey_parsing@k,w,c
  4131  000814  0D10               	mullw	16
  4132  000816  50F3               	movf	prodl,w,c
  4133  000818  0F66               	addlw	low (_key+6)
  4134  00081A  6ED9               	movwf	fsr2l,c
  4135  00081C  6ADA               	clrf	fsr2h,c
  4136  00081E  50DF               	movf	indf2,w,c
  4137  000820  A4D8               	btfss	status,2,c
  4138  000822  D08B               	goto	l286
  4139                           
  4140                           ;ikb.c: 551: {;ikb.c: 552: if ( ikey_is_accessible(k) )
  4141  000824  5023               	movf	ikey_parsing@k,w,c
  4142  000826  EC54  F00F         	call	_ikey_is_accessible
  4143  00082A  0900               	iorlw	0
  4144  00082C  B4D8               	btfsc	status,2,c
  4145  00082E  D085               	goto	l286
  4146                           
  4147                           ;ikb.c: 553: {;ikb.c: 554: if (key[k].bf.state == 1)
  4148  000830  5023               	movf	ikey_parsing@k,w,c
  4149  000832  0D10               	mullw	16
  4150  000834  50F3               	movf	prodl,w,c
  4151  000836  0F6A               	addlw	low (_key+10)
  4152  000838  6ED9               	movwf	fsr2l,c
  4153  00083A  6ADA               	clrf	fsr2h,c
  4154  00083C  0100               	movlb	0	; () banked
  4155  00083E  A0DF               	btfss	indf2,0,c
  4156  000840  D07C               	goto	l286
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;ikb.c: 555: {;ikb.c: 557: if (key[k].bf.OnKeyPressed)
  4160  000842  5023               	movf	ikey_parsing@k,w,c
  4161  000844  0D10               	mullw	16
  4162  000846  50F3               	movf	prodl,w,c
  4163  000848  0F6A               	addlw	low (_key+10)
  4164  00084A  6ED9               	movwf	fsr2l,c
  4165  00084C  6ADA               	clrf	fsr2h,c
  4166  00084E  A2DF               	btfss	indf2,1,c
  4167  000850  D01F               	goto	l4294
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;ikb.c: 558: {;ikb.c: 559: key[k].bf.ReadyToRead = 1;
  4171  000852  5023               	movf	ikey_parsing@k,w,c
  4172  000854  0D10               	mullw	16
  4173  000856  50F3               	movf	prodl,w,c
  4174  000858  0F6A               	addlw	low (_key+10)
  4175  00085A  6ED9               	movwf	fsr2l,c
  4176  00085C  6ADA               	clrf	fsr2h,c
  4177  00085E  8CDF               	bsf	indf2,6,c
  4178                           
  4179                           ;ikb.c: 561: if (key[k].bf.Reptt)
  4180  000860  5023               	movf	ikey_parsing@k,w,c
  4181  000862  0D10               	mullw	16
  4182  000864  50F3               	movf	prodl,w,c
  4183  000866  0F6A               	addlw	low (_key+10)
  4184  000868  6ED9               	movwf	fsr2l,c
  4185  00086A  6ADA               	clrf	fsr2h,c
  4186  00086C  AADF               	btfss	indf2,5,c
  4187  00086E  D008               	goto	l4292
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;ikb.c: 562: {;ikb.c: 563: key[k].sm1 = (6);
  4191  000870  5023               	movf	ikey_parsing@k,w,c
  4192  000872  0D10               	mullw	16
  4193  000874  50F3               	movf	prodl,w,c
  4194  000876  0F66               	addlw	low (_key+6)
  4195  000878  6ED9               	movwf	fsr2l,c
  4196  00087A  6ADA               	clrf	fsr2h,c
  4197  00087C  0E06               	movlw	6
  4198  00087E  D037               	goto	L2
  4199  000880                     l4292:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;ikb.c: 565: else;ikb.c: 566: {;ikb.c: 567: key[k].sm1 = (1);
  4203  000880  5023               	movf	ikey_parsing@k,w,c
  4204  000882  0D10               	mullw	16
  4205  000884  50F3               	movf	prodl,w,c
  4206  000886  0F66               	addlw	low (_key+6)
  4207  000888  6ED9               	movwf	fsr2l,c
  4208  00088A  6ADA               	clrf	fsr2h,c
  4209  00088C  0E01               	movlw	1
  4210  00088E  D02F               	goto	L2
  4211  000890                     l4294:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;ikb.c: 570: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  4215  000890  5023               	movf	ikey_parsing@k,w,c
  4216  000892  0D10               	mullw	16
  4217  000894  50F3               	movf	prodl,w,c
  4218  000896  0F6A               	addlw	low (_key+10)
  4219  000898  6ED9               	movwf	fsr2l,c
  4220  00089A  6ADA               	clrf	fsr2h,c
  4221  00089C  A4DF               	btfss	indf2,2,c
  4222  00089E  D008               	goto	l4298
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;ikb.c: 571: {;ikb.c: 572: key[k].sm1 = (5);
  4226  0008A0  5023               	movf	ikey_parsing@k,w,c
  4227  0008A2  0D10               	mullw	16
  4228  0008A4  50F3               	movf	prodl,w,c
  4229  0008A6  0F66               	addlw	low (_key+6)
  4230  0008A8  6ED9               	movwf	fsr2l,c
  4231  0008AA  6ADA               	clrf	fsr2h,c
  4232  0008AC  0E05               	movlw	5
  4233  0008AE  D01F               	goto	L2
  4234  0008B0                     l4298:
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;ikb.c: 575: else if (key[k].bf.AtTimeExpired)
  4238  0008B0  5023               	movf	ikey_parsing@k,w,c
  4239  0008B2  0D10               	mullw	16
  4240  0008B4  50F3               	movf	prodl,w,c
  4241  0008B6  0F6A               	addlw	low (_key+10)
  4242  0008B8  6ED9               	movwf	fsr2l,c
  4243  0008BA  6ADA               	clrf	fsr2h,c
  4244  0008BC  A6DF               	btfss	indf2,3,c
  4245  0008BE  D008               	goto	l4302
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;ikb.c: 576: {;ikb.c: 577: key[k].sm1 = (3);
  4249  0008C0  5023               	movf	ikey_parsing@k,w,c
  4250  0008C2  0D10               	mullw	16
  4251  0008C4  50F3               	movf	prodl,w,c
  4252  0008C6  0F66               	addlw	low (_key+6)
  4253  0008C8  6ED9               	movwf	fsr2l,c
  4254  0008CA  6ADA               	clrf	fsr2h,c
  4255  0008CC  0E03               	movlw	3
  4256  0008CE  D00F               	goto	L2
  4257  0008D0                     l4302:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;ikb.c: 579: else if (key[k].bf.AtTimeExpired2)
  4261  0008D0  5023               	movf	ikey_parsing@k,w,c
  4262  0008D2  0D10               	mullw	16
  4263  0008D4  50F3               	movf	prodl,w,c
  4264  0008D6  0F6A               	addlw	low (_key+10)
  4265  0008D8  6ED9               	movwf	fsr2l,c
  4266  0008DA  6ADA               	clrf	fsr2h,c
  4267  0008DC  A8DF               	btfss	indf2,4,c
  4268  0008DE  D008               	goto	l292
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;ikb.c: 580: {;ikb.c: 581: key[k].sm1 = (4);
  4272  0008E0  5023               	movf	ikey_parsing@k,w,c
  4273  0008E2  0D10               	mullw	16
  4274  0008E4  50F3               	movf	prodl,w,c
  4275  0008E6  0F66               	addlw	low (_key+6)
  4276  0008E8  6ED9               	movwf	fsr2l,c
  4277  0008EA  6ADA               	clrf	fsr2h,c
  4278  0008EC  0E04               	movlw	4
  4279  0008EE                     L2:
  4280  0008EE  6EDF               	movwf	indf2,c
  4281  0008F0                     l292:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;ikb.c: 582: };ikb.c: 585: key[k].bf.InProcessing = 1;
  4285  0008F0  5023               	movf	ikey_parsing@k,w,c
  4286  0008F2  0D10               	mullw	16
  4287  0008F4  50F3               	movf	prodl,w,c
  4288  0008F6  0F6B               	addlw	low (_key+11)
  4289  0008F8  6ED9               	movwf	fsr2l,c
  4290  0008FA  6ADA               	clrf	fsr2h,c
  4291  0008FC  82DF               	bsf	indf2,1,c
  4292                           
  4293                           ;ikb.c: 590: if (key[k].num_group_x != 0)
  4294  0008FE  5023               	movf	ikey_parsing@k,w,c
  4295  000900  0D10               	mullw	16
  4296  000902  50F3               	movf	prodl,w,c
  4297  000904  0F69               	addlw	low (_key+9)
  4298  000906  6ED9               	movwf	fsr2l,c
  4299  000908  6ADA               	clrf	fsr2h,c
  4300  00090A  50DF               	movf	indf2,w,c
  4301  00090C  B4D8               	btfsc	status,2,c
  4302  00090E  D015               	goto	l286
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;ikb.c: 591: {;ikb.c: 592: group_x[ key[k].num_group_x ] = 1;
  4306  000910  5023               	movf	ikey_parsing@k,w,c
  4307  000912  0D10               	mullw	16
  4308  000914  50F3               	movf	prodl,w,c
  4309  000916  0F69               	addlw	low (_key+9)
  4310  000918  6ED9               	movwf	fsr2l,c
  4311  00091A  6ADA               	clrf	fsr2h,c
  4312  00091C  50DF               	movf	indf2,w,c
  4313  00091E  6E1F               	movwf	??_ikey_parsing& (0+255),c
  4314  000920  501F               	movf	??_ikey_parsing,w,c
  4315  000922  0FB0               	addlw	low _group_x
  4316  000924  6ED9               	movwf	fsr2l,c
  4317  000926  6ADA               	clrf	fsr2h,c
  4318  000928  0E01               	movlw	1
  4319  00092A  6EDF               	movwf	indf2,c
  4320                           
  4321                           ;ikb.c: 593: key[k].bf.OwnerOfGroup = 1;
  4322  00092C  5023               	movf	ikey_parsing@k,w,c
  4323  00092E  0D10               	mullw	16
  4324  000930  50F3               	movf	prodl,w,c
  4325  000932  0F6B               	addlw	low (_key+11)
  4326  000934  6ED9               	movwf	fsr2l,c
  4327  000936  6ADA               	clrf	fsr2h,c
  4328  000938  80DF               	bsf	indf2,0,c
  4329  00093A                     l286:
  4330                           
  4331                           ;ikb.c: 594: };ikb.c: 596: };ikb.c: 597: };ikb.c: 598: };ikb.c: 602: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  4332  00093A  5023               	movf	ikey_parsing@k,w,c
  4333  00093C  0D10               	mullw	16
  4334  00093E  50F3               	movf	prodl,w,c
  4335  000940  0F66               	addlw	low (_key+6)
  4336  000942  6ED9               	movwf	fsr2l,c
  4337  000944  6ADA               	clrf	fsr2h,c
  4338  000946  0E05               	movlw	5
  4339  000948  64DF               	cpfsgt	indf2,c
  4340  00094A  D024               	goto	l299
  4341  00094C  5023               	movf	ikey_parsing@k,w,c
  4342  00094E  0D10               	mullw	16
  4343  000950  50F3               	movf	prodl,w,c
  4344  000952  0F66               	addlw	low (_key+6)
  4345  000954  6ED9               	movwf	fsr2l,c
  4346  000956  6ADA               	clrf	fsr2h,c
  4347  000958  0E09               	movlw	9
  4348  00095A  60DF               	cpfslt	indf2,c
  4349  00095C  D01B               	goto	l299
  4350                           
  4351                           ;ikb.c: 603: {;ikb.c: 604: if (key[k].bf.state == 0)
  4352  00095E  5023               	movf	ikey_parsing@k,w,c
  4353  000960  0D10               	mullw	16
  4354  000962  50F3               	movf	prodl,w,c
  4355  000964  0F6A               	addlw	low (_key+10)
  4356  000966  6ED9               	movwf	fsr2l,c
  4357  000968  6ADA               	clrf	fsr2h,c
  4358  00096A  0100               	movlb	0	; () banked
  4359  00096C  B0DF               	btfsc	indf2,0,c
  4360  00096E  D012               	goto	l299
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;ikb.c: 605: {;ikb.c: 606: key[k].counter1 = 0;
  4364  000970  5023               	movf	ikey_parsing@k,w,c
  4365  000972  0D10               	mullw	16
  4366  000974  50F3               	movf	prodl,w,c
  4367  000976  0F67               	addlw	low (_key+7)
  4368  000978  6ED9               	movwf	fsr2l,c
  4369  00097A  6ADA               	clrf	fsr2h,c
  4370  00097C  0E00               	movlw	0
  4371  00097E  6EDE               	movwf	postinc2,c
  4372  000980  0E00               	movlw	0
  4373  000982  6EDD               	movwf	postdec2,c
  4374                           
  4375                           ;ikb.c: 607: key[k].sm1 = (2);
  4376  000984  5023               	movf	ikey_parsing@k,w,c
  4377  000986  0D10               	mullw	16
  4378  000988  50F3               	movf	prodl,w,c
  4379  00098A  0F66               	addlw	low (_key+6)
  4380  00098C  6ED9               	movwf	fsr2l,c
  4381  00098E  6ADA               	clrf	fsr2h,c
  4382  000990  0E02               	movlw	2
  4383  000992  6EDF               	movwf	indf2,c
  4384  000994                     l299:
  4385                           
  4386                           ;ikb.c: 608: };ikb.c: 609: };ikb.c: 611: if (key[k].sm1 == (6) )
  4387  000994  5023               	movf	ikey_parsing@k,w,c
  4388  000996  0D10               	mullw	16
  4389  000998  50F3               	movf	prodl,w,c
  4390  00099A  0F66               	addlw	low (_key+6)
  4391  00099C  6ED9               	movwf	fsr2l,c
  4392  00099E  6ADA               	clrf	fsr2h,c
  4393  0009A0  0E06               	movlw	6
  4394  0009A2  18DE               	xorwf	postinc2,w,c
  4395  0009A4  A4D8               	btfss	status,2,c
  4396  0009A6  D027               	goto	l301
  4397                           
  4398                           ;ikb.c: 612: {;ikb.c: 613: if ( ++key[k].counter1 >= key[k].repp.to_start)
  4399  0009A8  5023               	movf	ikey_parsing@k,w,c
  4400  0009AA  0D10               	mullw	16
  4401  0009AC  50F3               	movf	prodl,w,c
  4402  0009AE  0F6C               	addlw	low (_key+12)
  4403  0009B0  6ED9               	movwf	fsr2l,c
  4404  0009B2  6ADA               	clrf	fsr2h,c
  4405  0009B4  5023               	movf	ikey_parsing@k,w,c
  4406  0009B6  0D10               	mullw	16
  4407  0009B8  50F3               	movf	prodl,w,c
  4408  0009BA  0F67               	addlw	low (_key+7)
  4409  0009BC  6EE1               	movwf	fsr1l,c
  4410  0009BE  6AE2               	clrf	fsr1h,c
  4411  0009C0  2AE6               	incf	postinc1,f,c
  4412  0009C2  0E00               	movlw	0
  4413  0009C4  22E5               	addwfc	postdec1,f,c
  4414  0009C6  50DE               	movf	postinc2,w,c
  4415  0009C8  5CE6               	subwf	postinc1,w,c
  4416  0009CA  50DE               	movf	postinc2,w,c
  4417  0009CC  58E6               	subwfb	postinc1,w,c
  4418  0009CE  A0D8               	btfss	status,0,c
  4419  0009D0  D012               	goto	l301
  4420                           
  4421                           ;ikb.c: 614: {;ikb.c: 615: key[k].counter1 =0;
  4422  0009D2  5023               	movf	ikey_parsing@k,w,c
  4423  0009D4  0D10               	mullw	16
  4424  0009D6  50F3               	movf	prodl,w,c
  4425  0009D8  0F67               	addlw	low (_key+7)
  4426  0009DA  6ED9               	movwf	fsr2l,c
  4427  0009DC  6ADA               	clrf	fsr2h,c
  4428  0009DE  0E00               	movlw	0
  4429  0009E0  6EDE               	movwf	postinc2,c
  4430  0009E2  0E00               	movlw	0
  4431  0009E4  6EDD               	movwf	postdec2,c
  4432                           
  4433                           ;ikb.c: 616: key[k].sm1 = (7);
  4434  0009E6  5023               	movf	ikey_parsing@k,w,c
  4435  0009E8  0D10               	mullw	16
  4436  0009EA  50F3               	movf	prodl,w,c
  4437  0009EC  0F66               	addlw	low (_key+6)
  4438  0009EE  6ED9               	movwf	fsr2l,c
  4439  0009F0  6ADA               	clrf	fsr2h,c
  4440  0009F2  0E07               	movlw	7
  4441  0009F4  6EDF               	movwf	indf2,c
  4442  0009F6                     l301:
  4443                           
  4444                           ;ikb.c: 617: };ikb.c: 618: };ikb.c: 619: if (key[k].sm1 == (7))
  4445  0009F6  5023               	movf	ikey_parsing@k,w,c
  4446  0009F8  0D10               	mullw	16
  4447  0009FA  50F3               	movf	prodl,w,c
  4448  0009FC  0F66               	addlw	low (_key+6)
  4449  0009FE  6ED9               	movwf	fsr2l,c
  4450  000A00  6ADA               	clrf	fsr2h,c
  4451  000A02  0E07               	movlw	7
  4452  000A04  18DE               	xorwf	postinc2,w,c
  4453  000A06  A4D8               	btfss	status,2,c
  4454  000A08  D018               	goto	l303
  4455                           
  4456                           ;ikb.c: 620: {;ikb.c: 621: if (key[k].bf.ReadyToRead == 0)
  4457  000A0A  5023               	movf	ikey_parsing@k,w,c
  4458  000A0C  0D10               	mullw	16
  4459  000A0E  50F3               	movf	prodl,w,c
  4460  000A10  0F6A               	addlw	low (_key+10)
  4461  000A12  6ED9               	movwf	fsr2l,c
  4462  000A14  6ADA               	clrf	fsr2h,c
  4463  000A16  0100               	movlb	0	; () banked
  4464  000A18  BCDF               	btfsc	indf2,6,c
  4465  000A1A  D00F               	goto	l303
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;ikb.c: 622: {;ikb.c: 623: key[k].bf.ReadyToRead = 1;
  4469  000A1C  5023               	movf	ikey_parsing@k,w,c
  4470  000A1E  0D10               	mullw	16
  4471  000A20  50F3               	movf	prodl,w,c
  4472  000A22  0F6A               	addlw	low (_key+10)
  4473  000A24  6ED9               	movwf	fsr2l,c
  4474  000A26  6ADA               	clrf	fsr2h,c
  4475  000A28  8CDF               	bsf	indf2,6,c
  4476                           
  4477                           ;ikb.c: 624: key[k].sm1 = (8);
  4478  000A2A  5023               	movf	ikey_parsing@k,w,c
  4479  000A2C  0D10               	mullw	16
  4480  000A2E  50F3               	movf	prodl,w,c
  4481  000A30  0F66               	addlw	low (_key+6)
  4482  000A32  6ED9               	movwf	fsr2l,c
  4483  000A34  6ADA               	clrf	fsr2h,c
  4484  000A36  0E08               	movlw	8
  4485  000A38  6EDF               	movwf	indf2,c
  4486  000A3A                     l303:
  4487                           
  4488                           ;ikb.c: 625: };ikb.c: 626: };ikb.c: 627: if (key[k].sm1 == (8))
  4489  000A3A  5023               	movf	ikey_parsing@k,w,c
  4490  000A3C  0D10               	mullw	16
  4491  000A3E  50F3               	movf	prodl,w,c
  4492  000A40  0F66               	addlw	low (_key+6)
  4493  000A42  6ED9               	movwf	fsr2l,c
  4494  000A44  6ADA               	clrf	fsr2h,c
  4495  000A46  0E08               	movlw	8
  4496  000A48  18DE               	xorwf	postinc2,w,c
  4497  000A4A  A4D8               	btfss	status,2,c
  4498  000A4C  D027               	goto	l305
  4499                           
  4500                           ;ikb.c: 628: {;ikb.c: 629: if ( ++key[k].counter1 >= key[k].repp.after_start)
  4501  000A4E  5023               	movf	ikey_parsing@k,w,c
  4502  000A50  0D10               	mullw	16
  4503  000A52  50F3               	movf	prodl,w,c
  4504  000A54  0F6E               	addlw	low (_key+14)
  4505  000A56  6ED9               	movwf	fsr2l,c
  4506  000A58  6ADA               	clrf	fsr2h,c
  4507  000A5A  5023               	movf	ikey_parsing@k,w,c
  4508  000A5C  0D10               	mullw	16
  4509  000A5E  50F3               	movf	prodl,w,c
  4510  000A60  0F67               	addlw	low (_key+7)
  4511  000A62  6EE1               	movwf	fsr1l,c
  4512  000A64  6AE2               	clrf	fsr1h,c
  4513  000A66  2AE6               	incf	postinc1,f,c
  4514  000A68  0E00               	movlw	0
  4515  000A6A  22E5               	addwfc	postdec1,f,c
  4516  000A6C  50DE               	movf	postinc2,w,c
  4517  000A6E  5CE6               	subwf	postinc1,w,c
  4518  000A70  50DE               	movf	postinc2,w,c
  4519  000A72  58E6               	subwfb	postinc1,w,c
  4520  000A74  A0D8               	btfss	status,0,c
  4521  000A76  D012               	goto	l305
  4522                           
  4523                           ;ikb.c: 630: {;ikb.c: 631: key[k].counter1 = 0;
  4524  000A78  5023               	movf	ikey_parsing@k,w,c
  4525  000A7A  0D10               	mullw	16
  4526  000A7C  50F3               	movf	prodl,w,c
  4527  000A7E  0F67               	addlw	low (_key+7)
  4528  000A80  6ED9               	movwf	fsr2l,c
  4529  000A82  6ADA               	clrf	fsr2h,c
  4530  000A84  0E00               	movlw	0
  4531  000A86  6EDE               	movwf	postinc2,c
  4532  000A88  0E00               	movlw	0
  4533  000A8A  6EDD               	movwf	postdec2,c
  4534                           
  4535                           ;ikb.c: 632: key[k].sm1 = (7);
  4536  000A8C  5023               	movf	ikey_parsing@k,w,c
  4537  000A8E  0D10               	mullw	16
  4538  000A90  50F3               	movf	prodl,w,c
  4539  000A92  0F66               	addlw	low (_key+6)
  4540  000A94  6ED9               	movwf	fsr2l,c
  4541  000A96  6ADA               	clrf	fsr2h,c
  4542  000A98  0E07               	movlw	7
  4543  000A9A  6EDF               	movwf	indf2,c
  4544  000A9C                     l305:
  4545                           
  4546                           ;ikb.c: 633: };ikb.c: 634: };ikb.c: 636: if (key[k].sm1 == (5) )
  4547  000A9C  5023               	movf	ikey_parsing@k,w,c
  4548  000A9E  0D10               	mullw	16
  4549  000AA0  50F3               	movf	prodl,w,c
  4550  000AA2  0F66               	addlw	low (_key+6)
  4551  000AA4  6ED9               	movwf	fsr2l,c
  4552  000AA6  6ADA               	clrf	fsr2h,c
  4553  000AA8  0E05               	movlw	5
  4554  000AAA  18DE               	xorwf	postinc2,w,c
  4555  000AAC  A4D8               	btfss	status,2,c
  4556  000AAE  D018               	goto	l307
  4557                           
  4558                           ;ikb.c: 637: {;ikb.c: 638: if (key[k].bf.state == 0)
  4559  000AB0  5023               	movf	ikey_parsing@k,w,c
  4560  000AB2  0D10               	mullw	16
  4561  000AB4  50F3               	movf	prodl,w,c
  4562  000AB6  0F6A               	addlw	low (_key+10)
  4563  000AB8  6ED9               	movwf	fsr2l,c
  4564  000ABA  6ADA               	clrf	fsr2h,c
  4565  000ABC  0100               	movlb	0	; () banked
  4566  000ABE  B0DF               	btfsc	indf2,0,c
  4567  000AC0  D00F               	goto	l307
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;ikb.c: 639: {;ikb.c: 640: key[k].bf.ReadyToRead = 1;
  4571  000AC2  5023               	movf	ikey_parsing@k,w,c
  4572  000AC4  0D10               	mullw	16
  4573  000AC6  50F3               	movf	prodl,w,c
  4574  000AC8  0F6A               	addlw	low (_key+10)
  4575  000ACA  6ED9               	movwf	fsr2l,c
  4576  000ACC  6ADA               	clrf	fsr2h,c
  4577  000ACE  8CDF               	bsf	indf2,6,c
  4578                           
  4579                           ;ikb.c: 641: key[k].sm1 = (2);
  4580  000AD0  5023               	movf	ikey_parsing@k,w,c
  4581  000AD2  0D10               	mullw	16
  4582  000AD4  50F3               	movf	prodl,w,c
  4583  000AD6  0F66               	addlw	low (_key+6)
  4584  000AD8  6ED9               	movwf	fsr2l,c
  4585  000ADA  6ADA               	clrf	fsr2h,c
  4586  000ADC  0E02               	movlw	2
  4587  000ADE  6EDF               	movwf	indf2,c
  4588  000AE0                     l307:
  4589                           
  4590                           ;ikb.c: 642: };ikb.c: 643: };ikb.c: 645: if (key[k].sm1 == (3) )
  4591  000AE0  5023               	movf	ikey_parsing@k,w,c
  4592  000AE2  0D10               	mullw	16
  4593  000AE4  50F3               	movf	prodl,w,c
  4594  000AE6  0F66               	addlw	low (_key+6)
  4595  000AE8  6ED9               	movwf	fsr2l,c
  4596  000AEA  6ADA               	clrf	fsr2h,c
  4597  000AEC  0E03               	movlw	3
  4598  000AEE  18DE               	xorwf	postinc2,w,c
  4599  000AF0  A4D8               	btfss	status,2,c
  4600  000AF2  D09C               	goto	l309
  4601                           
  4602                           ;ikb.c: 646: {;ikb.c: 647: key[k].counter1++;
  4603  000AF4  5023               	movf	ikey_parsing@k,w,c
  4604  000AF6  0D10               	mullw	16
  4605  000AF8  50F3               	movf	prodl,w,c
  4606  000AFA  0F67               	addlw	low (_key+7)
  4607  000AFC  6ED9               	movwf	fsr2l,c
  4608  000AFE  6ADA               	clrf	fsr2h,c
  4609  000B00  2ADE               	incf	postinc2,f,c
  4610  000B02  0E00               	movlw	0
  4611  000B04  22DD               	addwfc	postdec2,f,c
  4612                           
  4613                           ;ikb.c: 649: if (key[k].bf.state == 0)
  4614  000B06  5023               	movf	ikey_parsing@k,w,c
  4615  000B08  0D10               	mullw	16
  4616  000B0A  50F3               	movf	prodl,w,c
  4617  000B0C  0F6A               	addlw	low (_key+10)
  4618  000B0E  6ED9               	movwf	fsr2l,c
  4619  000B10  6ADA               	clrf	fsr2h,c
  4620  000B12  0100               	movlb	0	; () banked
  4621  000B14  B0DF               	btfsc	indf2,0,c
  4622  000B16  D03D               	goto	l4336
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;ikb.c: 650: {;ikb.c: 651: if (key[k].counter1 <= ((1000E-3/5E-3)) )
  4626  000B18  0E00               	movlw	0
  4627  000B1A  6E16               	movwf	___ftge@ff1,c
  4628  000B1C  0E48               	movlw	72
  4629  000B1E  6E17               	movwf	___ftge@ff1+1,c
  4630  000B20  0E43               	movlw	67
  4631  000B22  6E18               	movwf	___ftge@ff1+2,c
  4632  000B24  5023               	movf	ikey_parsing@k,w,c
  4633  000B26  0D10               	mullw	16
  4634  000B28  50F3               	movf	prodl,w,c
  4635  000B2A  0F67               	addlw	low (_key+7)
  4636  000B2C  6ED9               	movwf	fsr2l,c
  4637  000B2E  6ADA               	clrf	fsr2h,c
  4638  000B30  CFDE F013          	movff	postinc2,___lwtoft@c
  4639  000B34  CFDD F014          	movff	postdec2,___lwtoft@c+1
  4640  000B38  ECE4  F010         	call	___lwtoft	;wreg free
  4641  000B3C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  4642  000B40  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  4643  000B44  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  4644  000B48  ECC4  F00D         	call	___ftge	;wreg free
  4645  000B4C  A0D8               	btfss	status,0,c
  4646  000B4E  D021               	goto	l4336
  4647                           
  4648                           ;ikb.c: 652: {;ikb.c: 653: key[k].counter1 = 0;
  4649  000B50  5023               	movf	ikey_parsing@k,w,c
  4650  000B52  0D10               	mullw	16
  4651  000B54  50F3               	movf	prodl,w,c
  4652  000B56  0F67               	addlw	low (_key+7)
  4653  000B58  6ED9               	movwf	fsr2l,c
  4654  000B5A  6ADA               	clrf	fsr2h,c
  4655  000B5C  0E00               	movlw	0
  4656  000B5E  6EDE               	movwf	postinc2,c
  4657  000B60  0E00               	movlw	0
  4658  000B62  6EDD               	movwf	postdec2,c
  4659                           
  4660                           ;ikb.c: 655: key[k].bf.ReadyToRead = 1;
  4661  000B64  5023               	movf	ikey_parsing@k,w,c
  4662  000B66  0D10               	mullw	16
  4663  000B68  50F3               	movf	prodl,w,c
  4664  000B6A  0F6A               	addlw	low (_key+10)
  4665  000B6C  6ED9               	movwf	fsr2l,c
  4666  000B6E  6ADA               	clrf	fsr2h,c
  4667  000B70  0100               	movlb	0	; () banked
  4668  000B72  8CDF               	bsf	indf2,6,c
  4669                           
  4670                           ;ikb.c: 656: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  4671  000B74  5023               	movf	ikey_parsing@k,w,c
  4672  000B76  0D10               	mullw	16
  4673  000B78  50F3               	movf	prodl,w,c
  4674  000B7A  0F6A               	addlw	low (_key+10)
  4675  000B7C  6ED9               	movwf	fsr2l,c
  4676  000B7E  6ADA               	clrf	fsr2h,c
  4677  000B80  9EDF               	bcf	indf2,7,c
  4678                           
  4679                           ;ikb.c: 658: key[k].sm1 = (2);
  4680  000B82  5023               	movf	ikey_parsing@k,w,c
  4681  000B84  0D10               	mullw	16
  4682  000B86  50F3               	movf	prodl,w,c
  4683  000B88  0F66               	addlw	low (_key+6)
  4684  000B8A  6ED9               	movwf	fsr2l,c
  4685  000B8C  6ADA               	clrf	fsr2h,c
  4686  000B8E  0E02               	movlw	2
  4687  000B90  6EDF               	movwf	indf2,c
  4688  000B92                     l4336:
  4689                           
  4690                           ;ikb.c: 659: };ikb.c: 660: };ikb.c: 662: if (key[k].counter1 > ((1000E-3/5E-3)) )
  4691  000B92  0E00               	movlw	0
  4692  000B94  6E16               	movwf	___ftge@ff1,c
  4693  000B96  0E48               	movlw	72
  4694  000B98  6E17               	movwf	___ftge@ff1+1,c
  4695  000B9A  0E43               	movlw	67
  4696  000B9C  6E18               	movwf	___ftge@ff1+2,c
  4697  000B9E  5023               	movf	ikey_parsing@k,w,c
  4698  000BA0  0D10               	mullw	16
  4699  000BA2  50F3               	movf	prodl,w,c
  4700  000BA4  0F67               	addlw	low (_key+7)
  4701  000BA6  6ED9               	movwf	fsr2l,c
  4702  000BA8  6ADA               	clrf	fsr2h,c
  4703  000BAA  CFDE F013          	movff	postinc2,___lwtoft@c
  4704  000BAE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  4705  000BB2  ECE4  F010         	call	___lwtoft	;wreg free
  4706  000BB6  C013  F019         	movff	?___lwtoft,___ftge@ff2
  4707  000BBA  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  4708  000BBE  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  4709  000BC2  ECC4  F00D         	call	___ftge	;wreg free
  4710  000BC6  B0D8               	btfsc	status,0,c
  4711  000BC8  D031               	goto	l309
  4712                           
  4713                           ;ikb.c: 663: {;ikb.c: 664: key[k].counter1 = 0x0000;
  4714  000BCA  5023               	movf	ikey_parsing@k,w,c
  4715  000BCC  0D10               	mullw	16
  4716  000BCE  50F3               	movf	prodl,w,c
  4717  000BD0  0F67               	addlw	low (_key+7)
  4718  000BD2  6ED9               	movwf	fsr2l,c
  4719  000BD4  6ADA               	clrf	fsr2h,c
  4720  000BD6  0E00               	movlw	0
  4721  000BD8  6EDE               	movwf	postinc2,c
  4722  000BDA  0E00               	movlw	0
  4723  000BDC  6EDD               	movwf	postdec2,c
  4724                           
  4725                           ;ikb.c: 666: key[k].bf.ReadyToRead = 1;
  4726  000BDE  5023               	movf	ikey_parsing@k,w,c
  4727  000BE0  0D10               	mullw	16
  4728  000BE2  50F3               	movf	prodl,w,c
  4729  000BE4  0F6A               	addlw	low (_key+10)
  4730  000BE6  6ED9               	movwf	fsr2l,c
  4731  000BE8  6ADA               	clrf	fsr2h,c
  4732  000BEA  0100               	movlb	0	; () banked
  4733  000BEC  8CDF               	bsf	indf2,6,c
  4734                           
  4735                           ;ikb.c: 667: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  4736  000BEE  5023               	movf	ikey_parsing@k,w,c
  4737  000BF0  0D10               	mullw	16
  4738  000BF2  50F3               	movf	prodl,w,c
  4739  000BF4  0F6A               	addlw	low (_key+10)
  4740  000BF6  6ED9               	movwf	fsr2l,c
  4741  000BF8  6ADA               	clrf	fsr2h,c
  4742  000BFA  8EDF               	bsf	indf2,7,c
  4743                           
  4744                           ;ikb.c: 669: if (!key[k].bf.Reptt)
  4745  000BFC  5023               	movf	ikey_parsing@k,w,c
  4746  000BFE  0D10               	mullw	16
  4747  000C00  50F3               	movf	prodl,w,c
  4748  000C02  0F6A               	addlw	low (_key+10)
  4749  000C04  6ED9               	movwf	fsr2l,c
  4750  000C06  6ADA               	clrf	fsr2h,c
  4751  000C08  BADF               	btfsc	indf2,5,c
  4752  000C0A  D008               	goto	l4342
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;ikb.c: 670: {;ikb.c: 671: key[k].sm1 = (1);
  4756  000C0C  5023               	movf	ikey_parsing@k,w,c
  4757  000C0E  0D10               	mullw	16
  4758  000C10  50F3               	movf	prodl,w,c
  4759  000C12  0F66               	addlw	low (_key+6)
  4760  000C14  6ED9               	movwf	fsr2l,c
  4761  000C16  6ADA               	clrf	fsr2h,c
  4762  000C18  0E01               	movlw	1
  4763  000C1A  D007               	goto	L3
  4764  000C1C                     l4342:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;ikb.c: 673: else;ikb.c: 674: {;ikb.c: 675: key[k].sm1 = (8);
  4768  000C1C  5023               	movf	ikey_parsing@k,w,c
  4769  000C1E  0D10               	mullw	16
  4770  000C20  50F3               	movf	prodl,w,c
  4771  000C22  0F66               	addlw	low (_key+6)
  4772  000C24  6ED9               	movwf	fsr2l,c
  4773  000C26  6ADA               	clrf	fsr2h,c
  4774  000C28  0E08               	movlw	8
  4775  000C2A                     L3:
  4776  000C2A  6EDF               	movwf	indf2,c
  4777  000C2C                     l309:
  4778                           
  4779                           ;ikb.c: 676: };ikb.c: 677: };ikb.c: 678: };ikb.c: 683: if (key[k].sm1 == (4))
  4780  000C2C  5023               	movf	ikey_parsing@k,w,c
  4781  000C2E  0D10               	mullw	16
  4782  000C30  50F3               	movf	prodl,w,c
  4783  000C32  0F66               	addlw	low (_key+6)
  4784  000C34  6ED9               	movwf	fsr2l,c
  4785  000C36  6ADA               	clrf	fsr2h,c
  4786  000C38  0E04               	movlw	4
  4787  000C3A  18DE               	xorwf	postinc2,w,c
  4788  000C3C  A4D8               	btfss	status,2,c
  4789  000C3E  D08C               	goto	l315
  4790                           
  4791                           ;ikb.c: 684: {;ikb.c: 685: key[k].counter1++;
  4792  000C40  5023               	movf	ikey_parsing@k,w,c
  4793  000C42  0D10               	mullw	16
  4794  000C44  50F3               	movf	prodl,w,c
  4795  000C46  0F67               	addlw	low (_key+7)
  4796  000C48  6ED9               	movwf	fsr2l,c
  4797  000C4A  6ADA               	clrf	fsr2h,c
  4798  000C4C  2ADE               	incf	postinc2,f,c
  4799  000C4E  0E00               	movlw	0
  4800  000C50  22DD               	addwfc	postdec2,f,c
  4801                           
  4802                           ;ikb.c: 687: if (key[k].bf.state == 0)
  4803  000C52  5023               	movf	ikey_parsing@k,w,c
  4804  000C54  0D10               	mullw	16
  4805  000C56  50F3               	movf	prodl,w,c
  4806  000C58  0F6A               	addlw	low (_key+10)
  4807  000C5A  6ED9               	movwf	fsr2l,c
  4808  000C5C  6ADA               	clrf	fsr2h,c
  4809  000C5E  0100               	movlb	0	; () banked
  4810  000C60  B0DF               	btfsc	indf2,0,c
  4811  000C62  D03D               	goto	l4350
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;ikb.c: 688: {;ikb.c: 689: if (key[k].counter1 <= ((1000E-3/5E-3)))
  4815  000C64  0E00               	movlw	0
  4816  000C66  6E16               	movwf	___ftge@ff1,c
  4817  000C68  0E48               	movlw	72
  4818  000C6A  6E17               	movwf	___ftge@ff1+1,c
  4819  000C6C  0E43               	movlw	67
  4820  000C6E  6E18               	movwf	___ftge@ff1+2,c
  4821  000C70  5023               	movf	ikey_parsing@k,w,c
  4822  000C72  0D10               	mullw	16
  4823  000C74  50F3               	movf	prodl,w,c
  4824  000C76  0F67               	addlw	low (_key+7)
  4825  000C78  6ED9               	movwf	fsr2l,c
  4826  000C7A  6ADA               	clrf	fsr2h,c
  4827  000C7C  CFDE F013          	movff	postinc2,___lwtoft@c
  4828  000C80  CFDD F014          	movff	postdec2,___lwtoft@c+1
  4829  000C84  ECE4  F010         	call	___lwtoft	;wreg free
  4830  000C88  C013  F019         	movff	?___lwtoft,___ftge@ff2
  4831  000C8C  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  4832  000C90  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  4833  000C94  ECC4  F00D         	call	___ftge	;wreg free
  4834  000C98  A0D8               	btfss	status,0,c
  4835  000C9A  D021               	goto	l4350
  4836                           
  4837                           ;ikb.c: 690: {;ikb.c: 691: key[k].counter1 = 0;
  4838  000C9C  5023               	movf	ikey_parsing@k,w,c
  4839  000C9E  0D10               	mullw	16
  4840  000CA0  50F3               	movf	prodl,w,c
  4841  000CA2  0F67               	addlw	low (_key+7)
  4842  000CA4  6ED9               	movwf	fsr2l,c
  4843  000CA6  6ADA               	clrf	fsr2h,c
  4844  000CA8  0E00               	movlw	0
  4845  000CAA  6EDE               	movwf	postinc2,c
  4846  000CAC  0E00               	movlw	0
  4847  000CAE  6EDD               	movwf	postdec2,c
  4848                           
  4849                           ;ikb.c: 693: key[k].bf.ReadyToRead = 1;
  4850  000CB0  5023               	movf	ikey_parsing@k,w,c
  4851  000CB2  0D10               	mullw	16
  4852  000CB4  50F3               	movf	prodl,w,c
  4853  000CB6  0F6A               	addlw	low (_key+10)
  4854  000CB8  6ED9               	movwf	fsr2l,c
  4855  000CBA  6ADA               	clrf	fsr2h,c
  4856  000CBC  0100               	movlb	0	; () banked
  4857  000CBE  8CDF               	bsf	indf2,6,c
  4858                           
  4859                           ;ikb.c: 694: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  4860  000CC0  5023               	movf	ikey_parsing@k,w,c
  4861  000CC2  0D10               	mullw	16
  4862  000CC4  50F3               	movf	prodl,w,c
  4863  000CC6  0F6A               	addlw	low (_key+10)
  4864  000CC8  6ED9               	movwf	fsr2l,c
  4865  000CCA  6ADA               	clrf	fsr2h,c
  4866  000CCC  9EDF               	bcf	indf2,7,c
  4867                           
  4868                           ;ikb.c: 696: key[k].sm1 = (2);
  4869  000CCE  5023               	movf	ikey_parsing@k,w,c
  4870  000CD0  0D10               	mullw	16
  4871  000CD2  50F3               	movf	prodl,w,c
  4872  000CD4  0F66               	addlw	low (_key+6)
  4873  000CD6  6ED9               	movwf	fsr2l,c
  4874  000CD8  6ADA               	clrf	fsr2h,c
  4875  000CDA  0E02               	movlw	2
  4876  000CDC  6EDF               	movwf	indf2,c
  4877  000CDE                     l4350:
  4878                           
  4879                           ;ikb.c: 697: };ikb.c: 698: };ikb.c: 701: if (key[k].counter1 >= ((3000E-3/5E-3)))
  4880  000CDE  5023               	movf	ikey_parsing@k,w,c
  4881  000CE0  0D10               	mullw	16
  4882  000CE2  50F3               	movf	prodl,w,c
  4883  000CE4  0F67               	addlw	low (_key+7)
  4884  000CE6  6ED9               	movwf	fsr2l,c
  4885  000CE8  6ADA               	clrf	fsr2h,c
  4886  000CEA  CFDE F013          	movff	postinc2,___lwtoft@c
  4887  000CEE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  4888  000CF2  ECE4  F010         	call	___lwtoft	;wreg free
  4889  000CF6  C013  F016         	movff	?___lwtoft,___ftge@ff1
  4890  000CFA  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  4891  000CFE  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  4892  000D02  0E00               	movlw	0
  4893  000D04  6E19               	movwf	___ftge@ff2,c
  4894  000D06  0E16               	movlw	22
  4895  000D08  6E1A               	movwf	___ftge@ff2+1,c
  4896  000D0A  0E44               	movlw	68
  4897  000D0C  6E1B               	movwf	___ftge@ff2+2,c
  4898  000D0E  ECC4  F00D         	call	___ftge	;wreg free
  4899  000D12  A0D8               	btfss	status,0,c
  4900  000D14  D021               	goto	l315
  4901                           
  4902                           ;ikb.c: 702: {;ikb.c: 703: key[k].counter1 = 0x0000;
  4903  000D16  5023               	movf	ikey_parsing@k,w,c
  4904  000D18  0D10               	mullw	16
  4905  000D1A  50F3               	movf	prodl,w,c
  4906  000D1C  0F67               	addlw	low (_key+7)
  4907  000D1E  6ED9               	movwf	fsr2l,c
  4908  000D20  6ADA               	clrf	fsr2h,c
  4909  000D22  0E00               	movlw	0
  4910  000D24  6EDE               	movwf	postinc2,c
  4911  000D26  0E00               	movlw	0
  4912  000D28  6EDD               	movwf	postdec2,c
  4913                           
  4914                           ;ikb.c: 705: key[k].bf.ReadyToRead = 1;
  4915  000D2A  5023               	movf	ikey_parsing@k,w,c
  4916  000D2C  0D10               	mullw	16
  4917  000D2E  50F3               	movf	prodl,w,c
  4918  000D30  0F6A               	addlw	low (_key+10)
  4919  000D32  6ED9               	movwf	fsr2l,c
  4920  000D34  6ADA               	clrf	fsr2h,c
  4921  000D36  0100               	movlb	0	; () banked
  4922  000D38  8CDF               	bsf	indf2,6,c
  4923                           
  4924                           ;ikb.c: 706: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  4925  000D3A  5023               	movf	ikey_parsing@k,w,c
  4926  000D3C  0D10               	mullw	16
  4927  000D3E  50F3               	movf	prodl,w,c
  4928  000D40  0F6A               	addlw	low (_key+10)
  4929  000D42  6ED9               	movwf	fsr2l,c
  4930  000D44  6ADA               	clrf	fsr2h,c
  4931  000D46  8EDF               	bsf	indf2,7,c
  4932                           
  4933                           ;ikb.c: 709: key[k].sm1 = (1);
  4934  000D48  5023               	movf	ikey_parsing@k,w,c
  4935  000D4A  0D10               	mullw	16
  4936  000D4C  50F3               	movf	prodl,w,c
  4937  000D4E  0F66               	addlw	low (_key+6)
  4938  000D50  6ED9               	movwf	fsr2l,c
  4939  000D52  6ADA               	clrf	fsr2h,c
  4940  000D54  0E01               	movlw	1
  4941  000D56  6EDF               	movwf	indf2,c
  4942  000D58                     l315:
  4943                           
  4944                           ;ikb.c: 710: };ikb.c: 711: };ikb.c: 714: if (key[k].sm1 == (1))
  4945  000D58  5023               	movf	ikey_parsing@k,w,c
  4946  000D5A  0D10               	mullw	16
  4947  000D5C  50F3               	movf	prodl,w,c
  4948  000D5E  0F66               	addlw	low (_key+6)
  4949  000D60  6ED9               	movwf	fsr2l,c
  4950  000D62  6ADA               	clrf	fsr2h,c
  4951  000D64  04DE               	decf	postinc2,w,c
  4952  000D66  A4D8               	btfss	status,2,c
  4953  000D68  D011               	goto	l319
  4954                           
  4955                           ;ikb.c: 715: {;ikb.c: 716: if (key[k].bf.state == 0)
  4956  000D6A  5023               	movf	ikey_parsing@k,w,c
  4957  000D6C  0D10               	mullw	16
  4958  000D6E  50F3               	movf	prodl,w,c
  4959  000D70  0F6A               	addlw	low (_key+10)
  4960  000D72  6ED9               	movwf	fsr2l,c
  4961  000D74  6ADA               	clrf	fsr2h,c
  4962  000D76  0100               	movlb	0	; () banked
  4963  000D78  B0DF               	btfsc	indf2,0,c
  4964  000D7A  D008               	goto	l319
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;ikb.c: 717: {;ikb.c: 718: key[k].sm1 = (2);
  4968  000D7C  5023               	movf	ikey_parsing@k,w,c
  4969  000D7E  0D10               	mullw	16
  4970  000D80  50F3               	movf	prodl,w,c
  4971  000D82  0F66               	addlw	low (_key+6)
  4972  000D84  6ED9               	movwf	fsr2l,c
  4973  000D86  6ADA               	clrf	fsr2h,c
  4974  000D88  0E02               	movlw	2
  4975  000D8A  6EDF               	movwf	indf2,c
  4976  000D8C                     l319:
  4977                           
  4978                           ;ikb.c: 719: };ikb.c: 720: };ikb.c: 722: if (key[k].sm1 == (2))
  4979  000D8C  5023               	movf	ikey_parsing@k,w,c
  4980  000D8E  0D10               	mullw	16
  4981  000D90  50F3               	movf	prodl,w,c
  4982  000D92  0F66               	addlw	low (_key+6)
  4983  000D94  6ED9               	movwf	fsr2l,c
  4984  000D96  6ADA               	clrf	fsr2h,c
  4985  000D98  0E02               	movlw	2
  4986  000D9A  18DE               	xorwf	postinc2,w,c
  4987  000D9C  A4D8               	btfss	status,2,c
  4988  000D9E  D011               	goto	l321
  4989                           
  4990                           ;ikb.c: 723: {;ikb.c: 724: if (key[k].bf.ReadyToRead == 0)
  4991  000DA0  5023               	movf	ikey_parsing@k,w,c
  4992  000DA2  0D10               	mullw	16
  4993  000DA4  50F3               	movf	prodl,w,c
  4994  000DA6  0F6A               	addlw	low (_key+10)
  4995  000DA8  6ED9               	movwf	fsr2l,c
  4996  000DAA  6ADA               	clrf	fsr2h,c
  4997  000DAC  0100               	movlb	0	; () banked
  4998  000DAE  BCDF               	btfsc	indf2,6,c
  4999  000DB0  D008               	goto	l321
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;ikb.c: 725: {;ikb.c: 726: key[k].sm1 = (9);
  5003  000DB2  5023               	movf	ikey_parsing@k,w,c
  5004  000DB4  0D10               	mullw	16
  5005  000DB6  50F3               	movf	prodl,w,c
  5006  000DB8  0F66               	addlw	low (_key+6)
  5007  000DBA  6ED9               	movwf	fsr2l,c
  5008  000DBC  6ADA               	clrf	fsr2h,c
  5009  000DBE  0E09               	movlw	9
  5010  000DC0  6EDF               	movwf	indf2,c
  5011  000DC2                     l321:
  5012                           
  5013                           ;ikb.c: 727: };ikb.c: 728: };ikb.c: 730: if (key[k].sm1 == (9))
  5014  000DC2  5023               	movf	ikey_parsing@k,w,c
  5015  000DC4  0D10               	mullw	16
  5016  000DC6  50F3               	movf	prodl,w,c
  5017  000DC8  0F66               	addlw	low (_key+6)
  5018  000DCA  6ED9               	movwf	fsr2l,c
  5019  000DCC  6ADA               	clrf	fsr2h,c
  5020  000DCE  0E09               	movlw	9
  5021  000DD0  18DE               	xorwf	postinc2,w,c
  5022  000DD2  A4D8               	btfss	status,2,c
  5023  000DD4  D02F               	goto	l4366
  5024                           
  5025                           ;ikb.c: 731: {;ikb.c: 732: if (key[k].num_group_x > 0)
  5026  000DD6  5023               	movf	ikey_parsing@k,w,c
  5027  000DD8  0D10               	mullw	16
  5028  000DDA  50F3               	movf	prodl,w,c
  5029  000DDC  0F69               	addlw	low (_key+9)
  5030  000DDE  6ED9               	movwf	fsr2l,c
  5031  000DE0  6ADA               	clrf	fsr2h,c
  5032  000DE2  50DF               	movf	indf2,w,c
  5033  000DE4  B4D8               	btfsc	status,2,c
  5034  000DE6  D016               	goto	l324
  5035                           
  5036                           ;ikb.c: 733: {;ikb.c: 734: group_x[key[k].num_group_x] = 0;
  5037  000DE8  5023               	movf	ikey_parsing@k,w,c
  5038  000DEA  0D10               	mullw	16
  5039  000DEC  50F3               	movf	prodl,w,c
  5040  000DEE  0F69               	addlw	low (_key+9)
  5041  000DF0  6ED9               	movwf	fsr2l,c
  5042  000DF2  6ADA               	clrf	fsr2h,c
  5043  000DF4  50DF               	movf	indf2,w,c
  5044  000DF6  6E1F               	movwf	??_ikey_parsing& (0+255),c
  5045  000DF8  501F               	movf	??_ikey_parsing,w,c
  5046  000DFA  0FB0               	addlw	low _group_x
  5047  000DFC  6ED9               	movwf	fsr2l,c
  5048  000DFE  6ADA               	clrf	fsr2h,c
  5049  000E00  0E00               	movlw	0
  5050  000E02  6EDF               	movwf	indf2,c
  5051                           
  5052                           ;ikb.c: 735: key[k].bf.OwnerOfGroup = 0;
  5053  000E04  5023               	movf	ikey_parsing@k,w,c
  5054  000E06  0D10               	mullw	16
  5055  000E08  50F3               	movf	prodl,w,c
  5056  000E0A  0F6B               	addlw	low (_key+11)
  5057  000E0C  6ED9               	movwf	fsr2l,c
  5058  000E0E  6ADA               	clrf	fsr2h,c
  5059  000E10  0100               	movlb	0	; () banked
  5060  000E12  90DF               	bcf	indf2,0,c
  5061  000E14                     l324:
  5062                           
  5063                           ;ikb.c: 736: };ikb.c: 738: key[k].sm1 = (0);
  5064  000E14  5023               	movf	ikey_parsing@k,w,c
  5065  000E16  0D10               	mullw	16
  5066  000E18  50F3               	movf	prodl,w,c
  5067  000E1A  0F66               	addlw	low (_key+6)
  5068  000E1C  6ED9               	movwf	fsr2l,c
  5069  000E1E  6ADA               	clrf	fsr2h,c
  5070  000E20  0E00               	movlw	0
  5071  000E22  6EDF               	movwf	indf2,c
  5072                           
  5073                           ;ikb.c: 741: key[k].bf.InProcessing = 0;
  5074  000E24  5023               	movf	ikey_parsing@k,w,c
  5075  000E26  0D10               	mullw	16
  5076  000E28  50F3               	movf	prodl,w,c
  5077  000E2A  0F6B               	addlw	low (_key+11)
  5078  000E2C  6ED9               	movwf	fsr2l,c
  5079  000E2E  6ADA               	clrf	fsr2h,c
  5080  000E30  0100               	movlb	0	; () banked
  5081  000E32  92DF               	bcf	indf2,1,c
  5082  000E34                     l4366:
  5083  000E34  2A23               	incf	ikey_parsing@k,f,c
  5084  000E36  0E04               	movlw	4
  5085  000E38  6423               	cpfsgt	ikey_parsing@k,c
  5086  000E3A  D4EB               	goto	l4280
  5087  000E3C  0012               	return	
  5088  000E3E                     __end_of_ikey_parsing:
  5089                           	opt callstack 0
  5090                           
  5091 ;; *************** function _ikey_is_accessible *****************
  5092 ;; Defined at:
  5093 ;;		line 509 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  k               1    wreg     unsigned char 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  k               1   12[COMRAM] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      unsigned char 
  5100 ;; Registers used:
  5101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5107 ;;      Params:         0       0       0       0       0       0       0       0       0
  5108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5109 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5110 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5111 ;;Total ram usage:        3 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    5
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_ikey_parsing
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text29
  5122  001EA8                     __ptext29:
  5123                           	opt callstack 0
  5124  001EA8                     _ikey_is_accessible:
  5125                           	opt callstack 23
  5126                           
  5127                           ;incstack = 0
  5128                           ;ikey_is_accessible@k stored from wreg
  5129  001EA8  6E0D               	movwf	ikey_is_accessible@k,c
  5130                           
  5131                           ;ikb.c: 511: if (key[k].num_group_x != 0)
  5132  001EAA  500D               	movf	ikey_is_accessible@k,w,c
  5133  001EAC  0D10               	mullw	16
  5134  001EAE  50F3               	movf	prodl,w,c
  5135  001EB0  0F69               	addlw	low (_key+9)
  5136  001EB2  6ED9               	movwf	fsr2l,c
  5137  001EB4  6ADA               	clrf	fsr2h,c
  5138  001EB6  50DF               	movf	indf2,w,c
  5139  001EB8  B4D8               	btfsc	status,2,c
  5140  001EBA  D01A               	goto	l3176
  5141                           
  5142                           ;ikb.c: 512: {;ikb.c: 514: if (group_x[key[k].num_group_x] == 1)
  5143  001EBC  500D               	movf	ikey_is_accessible@k,w,c
  5144  001EBE  0D10               	mullw	16
  5145  001EC0  50F3               	movf	prodl,w,c
  5146  001EC2  0F69               	addlw	low (_key+9)
  5147  001EC4  6ED9               	movwf	fsr2l,c
  5148  001EC6  6ADA               	clrf	fsr2h,c
  5149  001EC8  50DF               	movf	indf2,w,c
  5150  001ECA  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  5151  001ECC  500B               	movf	??_ikey_is_accessible,w,c
  5152  001ECE  0FB0               	addlw	low _group_x
  5153  001ED0  6ED9               	movwf	fsr2l,c
  5154  001ED2  6ADA               	clrf	fsr2h,c
  5155  001ED4  04DE               	decf	postinc2,w,c
  5156  001ED6  A4D8               	btfss	status,2,c
  5157  001ED8  D00B               	goto	l3176
  5158                           
  5159                           ;ikb.c: 515: {;ikb.c: 517: if ( !key[k].bf.OwnerOfGroup)
  5160  001EDA  500D               	movf	ikey_is_accessible@k,w,c
  5161  001EDC  0D10               	mullw	16
  5162  001EDE  50F3               	movf	prodl,w,c
  5163  001EE0  0F6B               	addlw	low (_key+11)
  5164  001EE2  6ED9               	movwf	fsr2l,c
  5165  001EE4  6ADA               	clrf	fsr2h,c
  5166  001EE6  0100               	movlb	0	; () banked
  5167  001EE8  B0DF               	btfsc	indf2,0,c
  5168  001EEA  D002               	goto	l3176
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;ikb.c: 518: {;ikb.c: 519: return 0;
  5172  001EEC  0E00               	movlw	0
  5173  001EEE  0012               	return	
  5174  001EF0                     l3176:
  5175                           
  5176                           ;ikb.c: 520: };ikb.c: 521: };ikb.c: 522: };ikb.c: 523: return 1;
  5177  001EF0  0E01               	movlw	1
  5178  001EF2  0012               	return		;funcret
  5179  001EF4                     __end_of_ikey_is_accessible:
  5180                           	opt callstack 0
  5181                           
  5182 ;; *************** function ___lwtoft *****************
  5183 ;; Defined at:
  5184 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  c               2   18[COMRAM] unsigned int 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;		None
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  3   18[COMRAM] float 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5198 ;;      Params:         3       0       0       0       0       0       0       0       0
  5199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5201 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5202 ;;Total ram usage:        3 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    6
  5205 ;; This function calls:
  5206 ;;		___ftpack
  5207 ;; This function is called by:
  5208 ;;		_ikey_parsing
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text30
  5213  0021C8                     __ptext30:
  5214                           	opt callstack 0
  5215  0021C8                     ___lwtoft:
  5216                           	opt callstack 22
  5217                           
  5218                           ;incstack = 0
  5219  0021C8  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  5220  0021CC  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  5221  0021D0  6A0D               	clrf	___ftpack@arg+2,c
  5222  0021D2  0E8E               	movlw	142
  5223  0021D4  6E0E               	movwf	___ftpack@exp,c
  5224  0021D6  0E00               	movlw	0
  5225  0021D8  6E0F               	movwf	___ftpack@sign,c
  5226  0021DA  EC0B  F00C         	call	___ftpack	;wreg free
  5227  0021DE  C00B  F013         	movff	?___ftpack,?___lwtoft
  5228  0021E2  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  5229  0021E6  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  5230  0021EA  0012               	return		;funcret
  5231  0021EC                     __end_of___lwtoft:
  5232                           	opt callstack 0
  5233                           
  5234 ;; *************** function ___ftpack *****************
  5235 ;; Defined at:
  5236 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  arg             3   10[COMRAM] unsigned um
  5239 ;;  exp             1   13[COMRAM] unsigned char 
  5240 ;;  sign            1   14[COMRAM] unsigned char 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  3   10[COMRAM] float 
  5245 ;; Registers used:
  5246 ;;		wreg, status,2, status,0
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5252 ;;      Params:         5       0       0       0       0       0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5254 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5255 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5256 ;;Total ram usage:        8 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    5
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		___ftadd
  5263 ;;		___ftmul
  5264 ;;		___lwtoft
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text31
  5269  001816                     __ptext31:
  5270                           	opt callstack 0
  5271  001816                     ___ftpack:
  5272                           	opt callstack 20
  5273                           
  5274                           ;incstack = 0
  5275  001816  500E               	movf	___ftpack@exp,w,c
  5276  001818  B4D8               	btfsc	status,2,c
  5277  00181A  D005               	goto	u4190
  5278  00181C  500B               	movf	___ftpack@arg,w,c
  5279  00181E  100C               	iorwf	___ftpack@arg+1,w,c
  5280  001820  100D               	iorwf	___ftpack@arg+2,w,c
  5281  001822  A4D8               	btfss	status,2,c
  5282  001824  D00C               	goto	l3920
  5283  001826                     u4190:
  5284  001826  0E00               	movlw	0
  5285  001828  6E0B               	movwf	?___ftpack,c
  5286  00182A  0E00               	movlw	0
  5287  00182C  6E0C               	movwf	?___ftpack+1,c
  5288  00182E  0E00               	movlw	0
  5289  001830  6E0D               	movwf	?___ftpack+2,c
  5290  001832  0012               	return	
  5291  001834                     l3918:
  5292  001834  2A0E               	incf	___ftpack@exp,f,c
  5293  001836  90D8               	bcf	status,0,c
  5294  001838  320D               	rrcf	___ftpack@arg+2,f,c
  5295  00183A  320C               	rrcf	___ftpack@arg+1,f,c
  5296  00183C  320B               	rrcf	___ftpack@arg,f,c
  5297  00183E                     l3920:
  5298  00183E  0E00               	movlw	0
  5299  001840  140B               	andwf	___ftpack@arg,w,c
  5300  001842  6E10               	movwf	??___ftpack& (0+255),c
  5301  001844  0E00               	movlw	0
  5302  001846  140C               	andwf	___ftpack@arg+1,w,c
  5303  001848  6E11               	movwf	(??___ftpack+1)& (0+255),c
  5304  00184A  0EFE               	movlw	254
  5305  00184C  140D               	andwf	___ftpack@arg+2,w,c
  5306  00184E  6E12               	movwf	(??___ftpack+2)& (0+255),c
  5307  001850  5010               	movf	??___ftpack,w,c
  5308  001852  1011               	iorwf	??___ftpack+1,w,c
  5309  001854  1012               	iorwf	??___ftpack+2,w,c
  5310  001856  B4D8               	btfsc	status,2,c
  5311  001858  D00C               	goto	l3926
  5312  00185A  D7EC               	goto	l3918
  5313  00185C                     l3922:
  5314  00185C  2A0E               	incf	___ftpack@exp,f,c
  5315  00185E  0E01               	movlw	1
  5316  001860  260B               	addwf	___ftpack@arg,f,c
  5317  001862  0E00               	movlw	0
  5318  001864  220C               	addwfc	___ftpack@arg+1,f,c
  5319  001866  0E00               	movlw	0
  5320  001868  220D               	addwfc	___ftpack@arg+2,f,c
  5321  00186A  90D8               	bcf	status,0,c
  5322  00186C  320D               	rrcf	___ftpack@arg+2,f,c
  5323  00186E  320C               	rrcf	___ftpack@arg+1,f,c
  5324  001870  320B               	rrcf	___ftpack@arg,f,c
  5325  001872                     l3926:
  5326  001872  0E00               	movlw	0
  5327  001874  140B               	andwf	___ftpack@arg,w,c
  5328  001876  6E10               	movwf	??___ftpack& (0+255),c
  5329  001878  0E00               	movlw	0
  5330  00187A  140C               	andwf	___ftpack@arg+1,w,c
  5331  00187C  6E11               	movwf	(??___ftpack+1)& (0+255),c
  5332  00187E  0EFF               	movlw	255
  5333  001880  140D               	andwf	___ftpack@arg+2,w,c
  5334  001882  6E12               	movwf	(??___ftpack+2)& (0+255),c
  5335  001884  5010               	movf	??___ftpack,w,c
  5336  001886  1011               	iorwf	??___ftpack+1,w,c
  5337  001888  1012               	iorwf	??___ftpack+2,w,c
  5338  00188A  B4D8               	btfsc	status,2,c
  5339  00188C  D006               	goto	l3930
  5340  00188E  D7E6               	goto	l3922
  5341  001890                     l3928:
  5342  001890  060E               	decf	___ftpack@exp,f,c
  5343  001892  90D8               	bcf	status,0,c
  5344  001894  360B               	rlcf	___ftpack@arg,f,c
  5345  001896  360C               	rlcf	___ftpack@arg+1,f,c
  5346  001898  360D               	rlcf	___ftpack@arg+2,f,c
  5347  00189A                     l3930:
  5348  00189A  BE0C               	btfsc	___ftpack@arg+1,7,c
  5349  00189C  D003               	goto	u4230
  5350  00189E  0E02               	movlw	2
  5351  0018A0  600E               	cpfslt	___ftpack@exp,c
  5352  0018A2  D7F6               	goto	l3928
  5353  0018A4                     u4230:
  5354  0018A4  A00E               	btfss	___ftpack@exp,0,c
  5355  0018A6  9E0C               	bcf	___ftpack@arg+1,7,c
  5356  0018A8  90D8               	bcf	status,0,c
  5357  0018AA  320E               	rrcf	___ftpack@exp,f,c
  5358  0018AC  500E               	movf	___ftpack@exp,w,c
  5359  0018AE  120D               	iorwf	___ftpack@arg+2,f,c
  5360  0018B0  500F               	movf	___ftpack@sign,w,c
  5361  0018B2  A4D8               	btfss	status,2,c
  5362  0018B4  8E0D               	bsf	___ftpack@arg+2,7,c
  5363  0018B6  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  5364  0018BA  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  5365  0018BE  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  5366  0018C2  0012               	return		;funcret
  5367  0018C4                     __end_of___ftpack:
  5368                           	opt callstack 0
  5369                           
  5370 ;; *************** function _ikb_init *****************
  5371 ;; Defined at:
  5372 ;;		line 216 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;		None
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  i               1   10[COMRAM] char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      void 
  5379 ;; Registers used:
  5380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 3F/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5386 ;;      Params:         0       0       0       0       0       0       0       0       0
  5387 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5389 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5390 ;;Total ram usage:        1 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    5
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_main
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text32
  5401  001760                     __ptext32:
  5402                           	opt callstack 0
  5403  001760                     _ikb_init:
  5404                           	opt callstack 25
  5405                           
  5406                           ;incstack = 0
  5407                           ;ikb.c: 218: int8_t i;;ikb.c: 388: do{TRISC |= 1<<4;}while(0);
  5408  001760  8894               	bsf	3988,4,c	;volatile
  5409                           
  5410                           ;ikb.c: 389: do{TRISC |= 1<<5;}while(0);
  5411  001762  8A94               	bsf	3988,5,c	;volatile
  5412                           
  5413                           ;ikb.c: 390: do{TRISC |= 1<<6;}while(0);
  5414  001764  8C94               	bsf	3988,6,c	;volatile
  5415                           
  5416                           ;ikb.c: 391: do{TRISC |= 1<<7;}while(0);
  5417  001766  8E94               	bsf	3988,7,c	;volatile
  5418                           
  5419                           ;ikb.c: 392: do{TRISD |= 1<<4;}while(0);
  5420  001768  8895               	bsf	3989,4,c	;volatile
  5421                           
  5422                           ;ikb.c: 393: key[0].keyRead = keyRead_pin_key0;
  5423  00176A  0E4C               	movlw	low _keyRead_pin_key0
  5424  00176C  0100               	movlb	0	; () banked
  5425  00176E  6F60               	movwf	_key& (0+255),b	;volatile
  5426  001770  0E23               	movlw	high _keyRead_pin_key0
  5427  001772  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;ikb.c: 394: key[1].keyRead = keyRead_pin_key1;
  5431  001774  0E06               	movlw	low _keyRead_pin_key1
  5432  001776  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  5433  001778  0E23               	movlw	high _keyRead_pin_key1
  5434  00177A  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;ikb.c: 395: key[2].keyRead = keyRead_pin_key2;
  5438  00177C  0EFC               	movlw	low _keyRead_pin_key2
  5439  00177E  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  5440  001780  0E22               	movlw	high _keyRead_pin_key2
  5441  001782  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;ikb.c: 396: key[3].keyRead = keyRead_pin_key3;
  5445  001784  0E5C               	movlw	low _keyRead_pin_key3
  5446  001786  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  5447  001788  0E23               	movlw	high _keyRead_pin_key3
  5448  00178A  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;ikb.c: 397: key[4].keyRead = keyRead_pin_key4;
  5452  00178C  0E54               	movlw	low _keyRead_pin_key4
  5453  00178E  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  5454  001790  0E23               	movlw	high _keyRead_pin_key4
  5455  001792  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;ikb.c: 400: for (i=0; i<5; i++)
  5459  001794  0E00               	movlw	0
  5460  001796  6E0B               	movwf	ikb_init@i,c
  5461  001798                     l3524:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;ikb.c: 401: {;ikb.c: 402: key[i].bf.OnKeyPressed = 1;
  5465  001798  500B               	movf	ikb_init@i,w,c
  5466  00179A  0D10               	mullw	16
  5467  00179C  50F3               	movf	prodl,w,c
  5468  00179E  0F6A               	addlw	low (_key+10)
  5469  0017A0  6ED9               	movwf	fsr2l,c
  5470  0017A2  6ADA               	clrf	fsr2h,c
  5471  0017A4  82DF               	bsf	indf2,1,c
  5472                           
  5473                           ;ikb.c: 403: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  5474  0017A6  500B               	movf	ikb_init@i,w,c
  5475  0017A8  0D10               	mullw	16
  5476  0017AA  50F3               	movf	prodl,w,c
  5477  0017AC  0F6A               	addlw	low (_key+10)
  5478  0017AE  6ED9               	movwf	fsr2l,c
  5479  0017B0  6ADA               	clrf	fsr2h,c
  5480  0017B2  94DF               	bcf	indf2,2,c
  5481                           
  5482                           ;ikb.c: 404: key[i].bf.AtTimeExpired = 0;
  5483  0017B4  500B               	movf	ikb_init@i,w,c
  5484  0017B6  0D10               	mullw	16
  5485  0017B8  50F3               	movf	prodl,w,c
  5486  0017BA  0F6A               	addlw	low (_key+10)
  5487  0017BC  6ED9               	movwf	fsr2l,c
  5488  0017BE  6ADA               	clrf	fsr2h,c
  5489  0017C0  96DF               	bcf	indf2,3,c
  5490                           
  5491                           ;ikb.c: 405: key[i].bf.Reptt = 0;
  5492  0017C2  500B               	movf	ikb_init@i,w,c
  5493  0017C4  0D10               	mullw	16
  5494  0017C6  50F3               	movf	prodl,w,c
  5495  0017C8  0F6A               	addlw	low (_key+10)
  5496  0017CA  6ED9               	movwf	fsr2l,c
  5497  0017CC  6ADA               	clrf	fsr2h,c
  5498  0017CE  9ADF               	bcf	indf2,5,c
  5499                           
  5500                           ;ikb.c: 406: key[i].num_group_x = 0;
  5501  0017D0  500B               	movf	ikb_init@i,w,c
  5502  0017D2  0D10               	mullw	16
  5503  0017D4  50F3               	movf	prodl,w,c
  5504  0017D6  0F69               	addlw	low (_key+9)
  5505  0017D8  6ED9               	movwf	fsr2l,c
  5506  0017DA  6ADA               	clrf	fsr2h,c
  5507  0017DC  0E00               	movlw	0
  5508  0017DE  6EDF               	movwf	indf2,c
  5509                           
  5510                           ;ikb.c: 407: key[i].repp.to_start= (uint16_t)500.0/5;
  5511  0017E0  500B               	movf	ikb_init@i,w,c
  5512  0017E2  0D10               	mullw	16
  5513  0017E4  50F3               	movf	prodl,w,c
  5514  0017E6  0F6C               	addlw	low (_key+12)
  5515  0017E8  6ED9               	movwf	fsr2l,c
  5516  0017EA  6ADA               	clrf	fsr2h,c
  5517  0017EC  0E64               	movlw	100
  5518  0017EE  6EDE               	movwf	postinc2,c
  5519  0017F0  0E00               	movlw	0
  5520  0017F2  6EDD               	movwf	postdec2,c
  5521                           
  5522                           ;ikb.c: 408: key[i].repp.after_start = (uint16_t)200.0/5;
  5523  0017F4  500B               	movf	ikb_init@i,w,c
  5524  0017F6  0D10               	mullw	16
  5525  0017F8  50F3               	movf	prodl,w,c
  5526  0017FA  0F6E               	addlw	low (_key+14)
  5527  0017FC  6ED9               	movwf	fsr2l,c
  5528  0017FE  6ADA               	clrf	fsr2h,c
  5529  001800  0E28               	movlw	40
  5530  001802  6EDE               	movwf	postinc2,c
  5531  001804  0E00               	movlw	0
  5532  001806  6EDD               	movwf	postdec2,c
  5533                           
  5534                           ; BSR set to: 0
  5535  001808  2A0B               	incf	ikb_init@i,f,c
  5536                           
  5537                           ; BSR set to: 0
  5538  00180A  500B               	movf	ikb_init@i,w,c
  5539  00180C  0A80               	xorlw	128
  5540  00180E  0F7B               	addlw	-133
  5541  001810  B0D8               	btfsc	status,0,c
  5542  001812  0012               	return	
  5543  001814  D7C1               	goto	l3524
  5544  001816                     __end_of_ikb_init:
  5545                           	opt callstack 0
  5546                           
  5547 ;; *************** function _ikb_flush *****************
  5548 ;; Defined at:
  5549 ;;		line 418 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 3F/0
  5560 ;;		On exit  : 3F/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5566 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5567 ;;Total ram usage:        0 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    6
  5570 ;; This function calls:
  5571 ;;		_ikey_clear_all_flag
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text33
  5578  002362                     __ptext33:
  5579                           	opt callstack 0
  5580  002362                     _ikb_flush:
  5581                           	opt callstack 24
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;ikb.c: 420: ikey_clear_all_flag();
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;incstack = 0
  5588  002362  EC33  F011         	call	_ikey_clear_all_flag	;wreg free
  5589                           
  5590                           ; BSR set to: 0
  5591  002366  0012               	return		;funcret
  5592  002368                     __end_of_ikb_flush:
  5593                           	opt callstack 0
  5594                           
  5595 ;; *************** function _ikey_clear_all_flag *****************
  5596 ;; Defined at:
  5597 ;;		line 760 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  i               1   10[COMRAM] unsigned char 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5606 ;; Tracked objects:
  5607 ;;		On entry : 3F/0
  5608 ;;		On exit  : 3F/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0
  5612 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5614 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5615 ;;Total ram usage:        1 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    5
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_ikb_flush
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text34
  5626  002266                     __ptext34:
  5627                           	opt callstack 0
  5628  002266                     _ikey_clear_all_flag:
  5629                           	opt callstack 24
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;ikb.c: 762: uint8_t i;;ikb.c: 763: for (i=0; i<5; i++)
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;incstack = 0
  5636  002266  0E00               	movlw	0
  5637  002268  6E0B               	movwf	ikey_clear_all_flag@i,c
  5638  00226A                     l3372:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;ikb.c: 764: {;ikb.c: 766: key[i].bf.ReadyToRead = 0;
  5642  00226A  500B               	movf	ikey_clear_all_flag@i,w,c
  5643  00226C  0D10               	mullw	16
  5644  00226E  50F3               	movf	prodl,w,c
  5645  002270  0F6A               	addlw	low (_key+10)
  5646  002272  6ED9               	movwf	fsr2l,c
  5647  002274  6ADA               	clrf	fsr2h,c
  5648  002276  9CDF               	bcf	indf2,6,c
  5649                           
  5650                           ; BSR set to: 0
  5651  002278  2A0B               	incf	ikey_clear_all_flag@i,f,c
  5652                           
  5653                           ; BSR set to: 0
  5654  00227A  0E04               	movlw	4
  5655  00227C  640B               	cpfsgt	ikey_clear_all_flag@i,c
  5656  00227E  D7F5               	goto	l3372
  5657  002280  0012               	return	
  5658  002282                     __end_of_ikey_clear_all_flag:
  5659                           	opt callstack 0
  5660                           
  5661 ;; *************** function _disp7s_job *****************
  5662 ;; Defined at:
  5663 ;;		line 128 in file "display.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  pq              1   20[COMRAM] char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 3F/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0
  5678 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5679 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5680 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5681 ;;Total ram usage:        3 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    7
  5684 ;; This function calls:
  5685 ;;		_disp7s_mux0_off
  5686 ;;		_disp7s_mux0_on
  5687 ;;		_disp7s_mux1_off
  5688 ;;		_disp7s_mux1_on
  5689 ;;		_disp7s_mux2_off
  5690 ;;		_disp7s_mux2_on
  5691 ;;		_disp7s_mux3_off
  5692 ;;		_disp7s_mux3_on
  5693 ;;		_disp7s_mux4_off
  5694 ;;		_disp7s_mux4_on
  5695 ;;		_disp7s_mux_Q
  5696 ;; This function is called by:
  5697 ;;		_main
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text35
  5702  001B10                     __ptext35:
  5703                           	opt callstack 0
  5704  001B10                     _disp7s_job:
  5705                           	opt callstack 23
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;display.c: 134: pq= q-1;
  5709                           
  5710                           ; BSR set to: 0
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;incstack = 0
  5714  001B10  044E               	decf	disp7s_job@q,w,c
  5715  001B12  6E15               	movwf	disp7s_job@pq,c
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;display.c: 135: if (pq<0)
  5719  001B14  AE15               	btfss	disp7s_job@pq,7,c
  5720  001B16  D002               	goto	l3584
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;display.c: 136: {pq=(2 + 3)-1;}
  5724  001B18  0E04               	movlw	4
  5725  001B1A  6E15               	movwf	disp7s_job@pq,c
  5726  001B1C                     l3584:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;display.c: 137: disp7s_mux[pq].Qonoff[0]();
  5730  001B1C  5015               	movf	disp7s_job@pq,w,c
  5731  001B1E  0D04               	mullw	4
  5732  001B20  50F3               	movf	prodl,w,c
  5733  001B22  0FCD               	addlw	low _disp7s_mux
  5734  001B24  6ED9               	movwf	fsr2l,c
  5735  001B26  6ADA               	clrf	fsr2h,c
  5736  001B28  D801               	call	u3598
  5737  001B2A  D00A               	goto	u3599
  5738  001B2C                     u3598:
  5739  001B2C  0005               	push	
  5740  001B2E  6EFA               	movwf	pclath,c
  5741  001B30  50DE               	movf	postinc2,w,c
  5742  001B32  6EFD               	movwf	tosl,c
  5743  001B34  50DE               	movf	postinc2,w,c
  5744  001B36  6EFE               	movwf	tosh,c
  5745  001B38  50F8               	movf	tblptru,w,c
  5746  001B3A  6EFF               	movwf	tosu,c
  5747  001B3C  50FA               	movf	pclath,w,c
  5748  001B3E  0012               	return		;indir
  5749  001B40                     u3599:
  5750                           
  5751                           ;display.c: 139: if (q < 3)
  5752  001B40  504E               	movf	disp7s_job@q,w,c
  5753  001B42  0A80               	xorlw	128
  5754  001B44  0F7D               	addlw	-131
  5755  001B46  B0D8               	btfsc	status,0,c
  5756  001B48  D007               	goto	l3590
  5757                           
  5758                           ;display.c: 140: {LATB = pulsonic.disp7s.qty[q];}
  5759  001B4A  0E3B               	movlw	low (_pulsonic+59)
  5760  001B4C  244E               	addwf	disp7s_job@q,w,c
  5761  001B4E  6ED9               	movwf	fsr2l,c
  5762  001B50  6ADA               	clrf	fsr2h,c
  5763  001B52  0E01               	movlw	high (_pulsonic+59)
  5764  001B54  22DA               	addwfc	fsr2h,f,c
  5765  001B56  D00B               	goto	L4
  5766  001B58                     l3590:
  5767                           
  5768                           ;display.c: 141: else;display.c: 142: {LATB = pulsonic.disp7s.mode[q-3];}
  5769  001B58  C04E  F013         	movff	disp7s_job@q,??_disp7s_job
  5770  001B5C  6A14               	clrf	(??_disp7s_job+1)& (0+255),c
  5771  001B5E  BE13               	btfsc	??_disp7s_job& (0+255),7,c
  5772  001B60  0614               	decf	(??_disp7s_job+1)& (0+255),f,c
  5773  001B62  0E3B               	movlw	low (_pulsonic+59)
  5774  001B64  2413               	addwf	??_disp7s_job,w,c
  5775  001B66  6ED9               	movwf	fsr2l,c
  5776  001B68  0E01               	movlw	high (_pulsonic+59)
  5777  001B6A  2014               	addwfc	??_disp7s_job+1,w,c
  5778  001B6C  6EDA               	movwf	fsr2h,c
  5779  001B6E                     L4:
  5780  001B6E  50DF               	movf	indf2,w,c
  5781  001B70  6E8A               	movwf	3978,c	;volatile
  5782                           
  5783                           ;display.c: 144: disp7s_mux_Q(q);
  5784  001B72  504E               	movf	disp7s_job@q,w,c
  5785  001B74  EC62  F00C         	call	_disp7s_mux_Q
  5786                           
  5787                           ;display.c: 146: if (++q == (2 + 3))
  5788  001B78  2A4E               	incf	disp7s_job@q,f,c
  5789  001B7A  0E05               	movlw	5
  5790  001B7C  184E               	xorwf	disp7s_job@q,w,c
  5791  001B7E  A4D8               	btfss	status,2,c
  5792  001B80  0012               	return	
  5793                           
  5794                           ;display.c: 147: {q=0x0;}
  5795  001B82  0E00               	movlw	0
  5796  001B84  6E4E               	movwf	disp7s_job@q,c
  5797  001B86  0012               	return		;funcret
  5798  001B88                     __end_of_disp7s_job:
  5799                           	opt callstack 0
  5800                           
  5801 ;; *************** function _disp7s_mux_Q *****************
  5802 ;; Defined at:
  5803 ;;		line 97 in file "display.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  q               1    wreg     char 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  q               1   16[COMRAM] char 
  5808 ;;  i               1   17[COMRAM] char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5818 ;;      Params:         0       0       0       0       0       0       0       0       0
  5819 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5820 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5821 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5822 ;;Total ram usage:        8 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    6
  5825 ;; This function calls:
  5826 ;;		_disp7s_mux0_off
  5827 ;;		_disp7s_mux0_on
  5828 ;;		_disp7s_mux1_off
  5829 ;;		_disp7s_mux1_on
  5830 ;;		_disp7s_mux2_off
  5831 ;;		_disp7s_mux2_on
  5832 ;;		_disp7s_mux3_off
  5833 ;;		_disp7s_mux3_on
  5834 ;;		_disp7s_mux4_off
  5835 ;;		_disp7s_mux4_on
  5836 ;; This function is called by:
  5837 ;;		_disp7s_job
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text36
  5842  0018C4                     __ptext36:
  5843                           	opt callstack 0
  5844  0018C4                     _disp7s_mux_Q:
  5845                           	opt callstack 23
  5846                           
  5847                           ;incstack = 0
  5848                           ;disp7s_mux_Q@q stored from wreg
  5849  0018C4  6E11               	movwf	disp7s_mux_Q@q,c
  5850                           
  5851                           ;display.c: 99: int8_t i;;display.c: 100: for (i=0; i< (2 + 3); i++)
  5852  0018C6  0E00               	movlw	0
  5853  0018C8  6E12               	movwf	disp7s_mux_Q@i,c
  5854  0018CA                     l3470:
  5855                           
  5856                           ;display.c: 101: {;display.c: 102: if ( (1<<i) & (1<<q) )
  5857  0018CA  C011  F00B         	movff	disp7s_mux_Q@q,??_disp7s_mux_Q
  5858  0018CE  0E01               	movlw	1
  5859  0018D0  6E0C               	movwf	(??_disp7s_mux_Q+1)& (0+255),c
  5860  0018D2  0E00               	movlw	0
  5861  0018D4  6E0D               	movwf	(??_disp7s_mux_Q+2)& (0+255),c
  5862  0018D6  2A0B               	incf	??_disp7s_mux_Q,f,c
  5863  0018D8  D003               	goto	u3454
  5864  0018DA                     u3455:
  5865  0018DA  90D8               	bcf	status,0,c
  5866  0018DC  360C               	rlcf	??_disp7s_mux_Q+1,f,c
  5867  0018DE  360D               	rlcf	??_disp7s_mux_Q+2,f,c
  5868  0018E0                     u3454:
  5869  0018E0  2E0B               	decfsz	??_disp7s_mux_Q,f,c
  5870  0018E2  D7FB               	goto	u3455
  5871  0018E4  C012  F00E         	movff	disp7s_mux_Q@i,??_disp7s_mux_Q+3
  5872  0018E8  0E01               	movlw	1
  5873  0018EA  6E0F               	movwf	(??_disp7s_mux_Q+4)& (0+255),c
  5874  0018EC  0E00               	movlw	0
  5875  0018EE  6E10               	movwf	(??_disp7s_mux_Q+5)& (0+255),c
  5876  0018F0  2A0E               	incf	??_disp7s_mux_Q+3,f,c
  5877  0018F2  D003               	goto	u3464
  5878  0018F4                     u3465:
  5879  0018F4  90D8               	bcf	status,0,c
  5880  0018F6  360F               	rlcf	??_disp7s_mux_Q+4,f,c
  5881  0018F8  3610               	rlcf	??_disp7s_mux_Q+5,f,c
  5882  0018FA                     u3464:
  5883  0018FA  2E0E               	decfsz	??_disp7s_mux_Q+3,f,c
  5884  0018FC  D7FB               	goto	u3465
  5885  0018FE  500C               	movf	??_disp7s_mux_Q+1,w,c
  5886  001900  160F               	andwf	??_disp7s_mux_Q+4,f,c
  5887  001902  500D               	movf	??_disp7s_mux_Q+2,w,c
  5888  001904  1610               	andwf	??_disp7s_mux_Q+5,f,c
  5889  001906  500F               	movf	??_disp7s_mux_Q+4,w,c
  5890  001908  1010               	iorwf	??_disp7s_mux_Q+5,w,c
  5891  00190A  B4D8               	btfsc	status,2,c
  5892  00190C  D012               	goto	l3474
  5893                           
  5894                           ;display.c: 103: disp7s_mux[i].Qonoff[1]();
  5895  00190E  5012               	movf	disp7s_mux_Q@i,w,c
  5896  001910  0D04               	mullw	4
  5897  001912  50F3               	movf	prodl,w,c
  5898  001914  0FCF               	addlw	low (_disp7s_mux+2)
  5899  001916  6ED9               	movwf	fsr2l,c
  5900  001918  6ADA               	clrf	fsr2h,c
  5901  00191A  D801               	call	u3488
  5902  00191C  D01C               	goto	u3499
  5903  00191E                     u3488:
  5904  00191E  0005               	push	
  5905  001920  6EFA               	movwf	pclath,c
  5906  001922  50DE               	movf	postinc2,w,c
  5907  001924  6EFD               	movwf	tosl,c
  5908  001926  50DE               	movf	postinc2,w,c
  5909  001928  6EFE               	movwf	tosh,c
  5910  00192A  50F8               	movf	tblptru,w,c
  5911  00192C  6EFF               	movwf	tosu,c
  5912  00192E  50FA               	movf	pclath,w,c
  5913  001930  0012               	return		;indir
  5914  001932                     l3474:
  5915                           
  5916                           ;display.c: 104: else;display.c: 105: disp7s_mux[i].Qonoff[0]();
  5917  001932  5012               	movf	disp7s_mux_Q@i,w,c
  5918  001934  0D04               	mullw	4
  5919  001936  50F3               	movf	prodl,w,c
  5920  001938  0FCD               	addlw	low _disp7s_mux
  5921  00193A  6ED9               	movwf	fsr2l,c
  5922  00193C  6ADA               	clrf	fsr2h,c
  5923  00193E  D801               	call	u3498
  5924  001940  D00A               	goto	u3499
  5925  001942                     u3498:
  5926  001942  0005               	push	
  5927  001944  6EFA               	movwf	pclath,c
  5928  001946  50DE               	movf	postinc2,w,c
  5929  001948  6EFD               	movwf	tosl,c
  5930  00194A  50DE               	movf	postinc2,w,c
  5931  00194C  6EFE               	movwf	tosh,c
  5932  00194E  50F8               	movf	tblptru,w,c
  5933  001950  6EFF               	movwf	tosu,c
  5934  001952  50FA               	movf	pclath,w,c
  5935  001954  0012               	return		;indir
  5936  001956                     u3499:
  5937  001956  2A12               	incf	disp7s_mux_Q@i,f,c
  5938  001958  5012               	movf	disp7s_mux_Q@i,w,c
  5939  00195A  0A80               	xorlw	128
  5940  00195C  0F7B               	addlw	-133
  5941  00195E  B0D8               	btfsc	status,0,c
  5942  001960  0012               	return	
  5943  001962  D7B3               	goto	l3470
  5944  001964                     __end_of_disp7s_mux_Q:
  5945                           	opt callstack 0
  5946                           
  5947 ;; *************** function _disp7s_init *****************
  5948 ;; Defined at:
  5949 ;;		line 112 in file "display.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  i               1   11[COMRAM] char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 3F/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5963 ;;      Params:         0       0       0       0       0       0       0       0       0
  5964 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5966 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5967 ;;Total ram usage:        1 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    7
  5970 ;; This function calls:
  5971 ;;		_disp7s_mux_init
  5972 ;; This function is called by:
  5973 ;;		_main
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text37
  5978  001DA0                     __ptext37:
  5979                           	opt callstack 0
  5980  001DA0                     _disp7s_init:
  5981                           	opt callstack 23
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;display.c: 114: int8_t i;;display.c: 115: for (i=0; i<2; i++)
  5985                           
  5986                           ;incstack = 0
  5987  001DA0  0E00               	movlw	0
  5988  001DA2  6E0C               	movwf	disp7s_init@i,c
  5989  001DA4                     l3536:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;display.c: 116: {pulsonic.disp7s.mode[i] = DISP7S_CHARS[OFF];}
  5993  001DA4  0E0B               	movlw	low _DISP7S_CHARS
  5994  001DA6  6EF6               	movwf	tblptrl,c
  5995  001DA8                     	if	1	;There is more than 1 active tblptr byte
  5996  001DA8  0E08               	movlw	high _DISP7S_CHARS
  5997  001DAA  6EF7               	movwf	tblptrh,c
  5998  001DAC                     	endif
  5999  001DAC                     	if	0	;There are less than 3 active tblptr bytes
  6000  001DAC                     	endif
  6001  001DAC  0E3E               	movlw	low (_pulsonic+62)
  6002  001DAE  240C               	addwf	disp7s_init@i,w,c
  6003  001DB0  6ED9               	movwf	fsr2l,c
  6004  001DB2  6ADA               	clrf	fsr2h,c
  6005  001DB4  0E01               	movlw	high (_pulsonic+62)
  6006  001DB6  22DA               	addwfc	fsr2h,f,c
  6007  001DB8  0008               	tblrd		*
  6008  001DBA  CFF5 FFDF          	movff	tablat,indf2
  6009                           
  6010                           ; BSR set to: 0
  6011  001DBE  2A0C               	incf	disp7s_init@i,f,c
  6012                           
  6013                           ; BSR set to: 0
  6014  001DC0  500C               	movf	disp7s_init@i,w,c
  6015  001DC2  0A80               	xorlw	128
  6016  001DC4  0F7E               	addlw	-130
  6017  001DC6  A0D8               	btfss	status,0,c
  6018  001DC8  D7ED               	goto	l3536
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;display.c: 118: for (i=0; i<3; i++)
  6022  001DCA  0E00               	movlw	0
  6023  001DCC  6E0C               	movwf	disp7s_init@i,c
  6024  001DCE                     l3548:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;display.c: 119: {pulsonic.disp7s.qty[i] = DISP7S_CHARS[OFF];}
  6028  001DCE  0E0B               	movlw	low _DISP7S_CHARS
  6029  001DD0  6EF6               	movwf	tblptrl,c
  6030  001DD2                     	if	1	;There is more than 1 active tblptr byte
  6031  001DD2  0E08               	movlw	high _DISP7S_CHARS
  6032  001DD4  6EF7               	movwf	tblptrh,c
  6033  001DD6                     	endif
  6034  001DD6                     	if	0	;There are less than 3 active tblptr bytes
  6035  001DD6                     	endif
  6036  001DD6  0E3B               	movlw	low (_pulsonic+59)
  6037  001DD8  240C               	addwf	disp7s_init@i,w,c
  6038  001DDA  6ED9               	movwf	fsr2l,c
  6039  001DDC  6ADA               	clrf	fsr2h,c
  6040  001DDE  0E01               	movlw	high (_pulsonic+59)
  6041  001DE0  22DA               	addwfc	fsr2h,f,c
  6042  001DE2  0008               	tblrd		*
  6043  001DE4  CFF5 FFDF          	movff	tablat,indf2
  6044                           
  6045                           ; BSR set to: 0
  6046  001DE8  2A0C               	incf	disp7s_init@i,f,c
  6047                           
  6048                           ; BSR set to: 0
  6049  001DEA  500C               	movf	disp7s_init@i,w,c
  6050  001DEC  0A80               	xorlw	128
  6051  001DEE  0F7D               	addlw	-131
  6052  001DF0  A0D8               	btfss	status,0,c
  6053  001DF2  D7ED               	goto	l3548
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;display.c: 121: TRISB = 0x00;
  6057  001DF4  0E00               	movlw	0
  6058  001DF6  6E93               	movwf	3987,c	;volatile
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;display.c: 122: disp7s_mux_init();
  6062  001DF8  EC4D  F010         	call	_disp7s_mux_init	;wreg free
  6063  001DFC  0012               	return		;funcret
  6064  001DFE                     __end_of_disp7s_init:
  6065                           	opt callstack 0
  6066                           
  6067 ;; *************** function _disp7s_mux_init *****************
  6068 ;; Defined at:
  6069 ;;		line 83 in file "display.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  i               1   10[COMRAM] char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 3F/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0
  6084 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6086 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6087 ;;Total ram usage:        1 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    6
  6090 ;; This function calls:
  6091 ;;		_disp7s_mux0_off
  6092 ;;		_disp7s_mux0_on
  6093 ;;		_disp7s_mux1_off
  6094 ;;		_disp7s_mux1_on
  6095 ;;		_disp7s_mux2_off
  6096 ;;		_disp7s_mux2_on
  6097 ;;		_disp7s_mux3_off
  6098 ;;		_disp7s_mux3_on
  6099 ;;		_disp7s_mux4_off
  6100 ;;		_disp7s_mux4_on
  6101 ;; This function is called by:
  6102 ;;		_disp7s_init
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text38
  6107  00209A                     __ptext38:
  6108                           	opt callstack 0
  6109  00209A                     _disp7s_mux_init:
  6110                           	opt callstack 23
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;display.c: 85: int8_t i;;display.c: 86: for (i=0; i< (2 + 3); i++)
  6114                           
  6115                           ;incstack = 0
  6116  00209A  0E00               	movlw	0
  6117  00209C  6E0B               	movwf	disp7s_mux_init@i,c
  6118  00209E                     l3456:
  6119                           
  6120                           ;display.c: 87: {;display.c: 88: disp7s_mux[i].Qonoff[0]();
  6121  00209E  500B               	movf	disp7s_mux_init@i,w,c
  6122  0020A0  0D04               	mullw	4
  6123  0020A2  50F3               	movf	prodl,w,c
  6124  0020A4  0FCD               	addlw	low _disp7s_mux
  6125  0020A6  6ED9               	movwf	fsr2l,c
  6126  0020A8  6ADA               	clrf	fsr2h,c
  6127  0020AA  D801               	call	u3438
  6128  0020AC  D00A               	goto	u3439
  6129  0020AE                     u3438:
  6130  0020AE  0005               	push	
  6131  0020B0  6EFA               	movwf	pclath,c
  6132  0020B2  50DE               	movf	postinc2,w,c
  6133  0020B4  6EFD               	movwf	tosl,c
  6134  0020B6  50DE               	movf	postinc2,w,c
  6135  0020B8  6EFE               	movwf	tosh,c
  6136  0020BA  50F8               	movf	tblptru,w,c
  6137  0020BC  6EFF               	movwf	tosu,c
  6138  0020BE  50FA               	movf	pclath,w,c
  6139  0020C0  0012               	return		;indir
  6140  0020C2                     u3439:
  6141  0020C2  2A0B               	incf	disp7s_mux_init@i,f,c
  6142  0020C4  500B               	movf	disp7s_mux_init@i,w,c
  6143  0020C6  0A80               	xorlw	128
  6144  0020C8  0F7B               	addlw	-133
  6145  0020CA  A0D8               	btfss	status,0,c
  6146  0020CC  D7E8               	goto	l3456
  6147  0020CE  9892               	bcf	3986,4,c	;volatile
  6148                           
  6149                           ;display.c: 91: do{TRISA &= ~(1<<3);}while(0);
  6150  0020D0  9692               	bcf	3986,3,c	;volatile
  6151                           
  6152                           ;display.c: 92: do{TRISA &= ~(1<<2);}while(0);
  6153  0020D2  9492               	bcf	3986,2,c	;volatile
  6154                           
  6155                           ;display.c: 93: do{TRISA &= ~(1<<1);}while(0);
  6156  0020D4  9292               	bcf	3986,1,c	;volatile
  6157                           
  6158                           ;display.c: 94: do{TRISA &= ~(1<<0);}while(0);
  6159  0020D6  9092               	bcf	3986,0,c	;volatile
  6160  0020D8  0012               	return		;funcret
  6161  0020DA                     __end_of_disp7s_mux_init:
  6162                           	opt callstack 0
  6163                           
  6164 ;; *************** function _disp7s_mux4_off *****************
  6165 ;; Defined at:
  6166 ;;		line 41 in file "display.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      void 
  6173 ;; Registers used:
  6174 ;;		status,2, status,0
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6183 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6184 ;;Total ram usage:        0 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    5
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_disp7s_mux_init
  6191 ;;		_disp7s_mux_Q
  6192 ;;		_disp7s_job
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text39
  6197  002368                     __ptext39:
  6198                           	opt callstack 0
  6199  002368                     _disp7s_mux4_off:
  6200                           	opt callstack 23
  6201                           
  6202                           ;incstack = 0
  6203                           ;display.c: 43: do{LATA |= 1<<0;}while(0);
  6204  002368  8089               	bsf	3977,0,c	;volatile
  6205  00236A  0012               	return		;funcret
  6206  00236C                     __end_of_disp7s_mux4_off:
  6207                           	opt callstack 0
  6208                           
  6209 ;; *************** function _disp7s_mux3_on *****************
  6210 ;; Defined at:
  6211 ;;		line 36 in file "display.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    5
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_disp7s_mux_init
  6236 ;;		_disp7s_mux_Q
  6237 ;;		_disp7s_job
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text40
  6242  00236C                     __ptext40:
  6243                           	opt callstack 0
  6244  00236C                     _disp7s_mux3_on:
  6245                           	opt callstack 23
  6246                           
  6247                           ;incstack = 0
  6248                           ;display.c: 38: do{LATA &= ~(1<<1);}while(0);
  6249  00236C  9289               	bcf	3977,1,c	;volatile
  6250  00236E  0012               	return		;funcret
  6251  002370                     __end_of_disp7s_mux3_on:
  6252                           	opt callstack 0
  6253                           
  6254 ;; *************** function _disp7s_mux3_off *****************
  6255 ;; Defined at:
  6256 ;;		line 32 in file "display.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;		None
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;		None
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  1    wreg      void 
  6263 ;; Registers used:
  6264 ;;		status,2, status,0
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6270 ;;      Params:         0       0       0       0       0       0       0       0       0
  6271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6274 ;;Total ram usage:        0 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    5
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_disp7s_mux_init
  6281 ;;		_disp7s_mux_Q
  6282 ;;		_disp7s_job
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text41
  6287  002370                     __ptext41:
  6288                           	opt callstack 0
  6289  002370                     _disp7s_mux3_off:
  6290                           	opt callstack 23
  6291                           
  6292                           ;incstack = 0
  6293                           ;display.c: 34: do{LATA |= 1<<1;}while(0);
  6294  002370  8289               	bsf	3977,1,c	;volatile
  6295  002372  0012               	return		;funcret
  6296  002374                     __end_of_disp7s_mux3_off:
  6297                           	opt callstack 0
  6298                           
  6299 ;; *************** function _disp7s_mux2_on *****************
  6300 ;; Defined at:
  6301 ;;		line 27 in file "display.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		status,2, status,0
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:    5
  6322 ;; This function calls:
  6323 ;;		Nothing
  6324 ;; This function is called by:
  6325 ;;		_disp7s_mux_init
  6326 ;;		_disp7s_mux_Q
  6327 ;;		_disp7s_job
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text42
  6332  002374                     __ptext42:
  6333                           	opt callstack 0
  6334  002374                     _disp7s_mux2_on:
  6335                           	opt callstack 23
  6336                           
  6337                           ;incstack = 0
  6338                           ;display.c: 29: do{LATA &= ~(1<<2);}while(0);
  6339  002374  9489               	bcf	3977,2,c	;volatile
  6340  002376  0012               	return		;funcret
  6341  002378                     __end_of_disp7s_mux2_on:
  6342                           	opt callstack 0
  6343                           
  6344 ;; *************** function _disp7s_mux2_off *****************
  6345 ;; Defined at:
  6346 ;;		line 23 in file "display.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6360 ;;      Params:         0       0       0       0       0       0       0       0       0
  6361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6364 ;;Total ram usage:        0 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    5
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_disp7s_mux_init
  6371 ;;		_disp7s_mux_Q
  6372 ;;		_disp7s_job
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text43
  6377  002378                     __ptext43:
  6378                           	opt callstack 0
  6379  002378                     _disp7s_mux2_off:
  6380                           	opt callstack 23
  6381                           
  6382                           ;incstack = 0
  6383                           ;display.c: 25: do{LATA |= 1<<2;}while(0);
  6384  002378  8489               	bsf	3977,2,c	;volatile
  6385  00237A  0012               	return		;funcret
  6386  00237C                     __end_of_disp7s_mux2_off:
  6387                           	opt callstack 0
  6388                           
  6389 ;; *************** function _disp7s_mux1_on *****************
  6390 ;; Defined at:
  6391 ;;		line 18 in file "display.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6408 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6409 ;;Total ram usage:        0 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; Hardware stack levels required when called:    5
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_disp7s_mux_init
  6416 ;;		_disp7s_mux_Q
  6417 ;;		_disp7s_job
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text44
  6422  00237C                     __ptext44:
  6423                           	opt callstack 0
  6424  00237C                     _disp7s_mux1_on:
  6425                           	opt callstack 23
  6426                           
  6427                           ;incstack = 0
  6428                           ;display.c: 20: do{LATA &= ~(1<<3);}while(0);
  6429  00237C  9689               	bcf	3977,3,c	;volatile
  6430  00237E  0012               	return		;funcret
  6431  002380                     __end_of_disp7s_mux1_on:
  6432                           	opt callstack 0
  6433                           
  6434 ;; *************** function _disp7s_mux1_off *****************
  6435 ;; Defined at:
  6436 ;;		line 14 in file "display.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		status,2, status,0
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    5
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_disp7s_mux_init
  6461 ;;		_disp7s_mux_Q
  6462 ;;		_disp7s_job
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text45
  6467  002380                     __ptext45:
  6468                           	opt callstack 0
  6469  002380                     _disp7s_mux1_off:
  6470                           	opt callstack 23
  6471                           
  6472                           ;incstack = 0
  6473                           ;display.c: 16: do{LATA |= 1<<3;}while(0);
  6474  002380  8689               	bsf	3977,3,c	;volatile
  6475  002382  0012               	return		;funcret
  6476  002384                     __end_of_disp7s_mux1_off:
  6477                           	opt callstack 0
  6478                           
  6479 ;; *************** function _disp7s_mux0_on *****************
  6480 ;; Defined at:
  6481 ;;		line 9 in file "display.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;		None
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;		None
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  1    wreg      void 
  6488 ;; Registers used:
  6489 ;;		status,2, status,0
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6495 ;;      Params:         0       0       0       0       0       0       0       0       0
  6496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6499 ;;Total ram usage:        0 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    5
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_disp7s_mux_init
  6506 ;;		_disp7s_mux_Q
  6507 ;;		_disp7s_job
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text46
  6512  002384                     __ptext46:
  6513                           	opt callstack 0
  6514  002384                     _disp7s_mux0_on:
  6515                           	opt callstack 23
  6516                           
  6517                           ;incstack = 0
  6518                           ;display.c: 11: do{LATA &= ~(1<<4);}while(0);
  6519  002384  9889               	bcf	3977,4,c	;volatile
  6520  002386  0012               	return		;funcret
  6521  002388                     __end_of_disp7s_mux0_on:
  6522                           	opt callstack 0
  6523                           
  6524 ;; *************** function _disp7s_mux0_off *****************
  6525 ;; Defined at:
  6526 ;;		line 5 in file "display.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6540 ;;      Params:         0       0       0       0       0       0       0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6543 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    5
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_disp7s_mux_init
  6551 ;;		_disp7s_mux_Q
  6552 ;;		_disp7s_job
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text47
  6557  002388                     __ptext47:
  6558                           	opt callstack 0
  6559  002388                     _disp7s_mux0_off:
  6560                           	opt callstack 23
  6561                           
  6562                           ;incstack = 0
  6563                           ;display.c: 7: do{LATA |= 1<<4;}while(0);
  6564  002388  8889               	bsf	3977,4,c	;volatile
  6565  00238A  0012               	return		;funcret
  6566  00238C                     __end_of_disp7s_mux0_off:
  6567                           	opt callstack 0
  6568                           
  6569 ;; *************** function _disp7s_mux4_on *****************
  6570 ;; Defined at:
  6571 ;;		line 45 in file "display.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6585 ;;      Params:         0       0       0       0       0       0       0       0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6588 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6589 ;;Total ram usage:        0 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    5
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_disp7s_mux_init
  6596 ;;		_disp7s_mux_Q
  6597 ;;		_disp7s_job
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text48
  6602  00238C                     __ptext48:
  6603                           	opt callstack 0
  6604  00238C                     _disp7s_mux4_on:
  6605                           	opt callstack 23
  6606                           
  6607                           ;incstack = 0
  6608                           ;display.c: 47: do{LATA &= ~(1<<0);}while(0);
  6609  00238C  9089               	bcf	3977,0,c	;volatile
  6610  00238E  0012               	return		;funcret
  6611  002390                     __end_of_disp7s_mux4_on:
  6612                           	opt callstack 0
  6613                           
  6614 ;; *************** function _autoMode_job *****************
  6615 ;; Defined at:
  6616 ;;		line 21 in file "automode.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;		None
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  cod_ret         1    0        char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      char 
  6623 ;; Registers used:
  6624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 3F/0
  6627 ;;		On exit  : 3F/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6630 ;;      Params:         0       0       0       0       0       0       0       0       0
  6631 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6633 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6634 ;;Total ram usage:        1 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; Hardware stack levels required when called:    7
  6637 ;; This function calls:
  6638 ;;		_mpap_isIdle
  6639 ;;		_mpap_movetoNozzle
  6640 ;;		_mpap_setupToHomming
  6641 ;;		_nozzle_isEnabled
  6642 ;;		_pump_isIdle
  6643 ;;		_pump_setTick
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text49
  6650  001964                     __ptext49:
  6651                           	opt callstack 0
  6652  001964                     _autoMode_job:
  6653                           	opt callstack 23
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;automode.c: 25: if (autoMode.sm0 == 0)
  6657                           
  6658                           ;incstack = 0
  6659  001964  51BB               	movf	(_autoMode+1)& (0+255),w,b
  6660  001966  A4D8               	btfss	status,2,c
  6661  001968  D005               	goto	l4406
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;automode.c: 26: {;automode.c: 27: mpap_setupToHomming();
  6665  00196A  EC5B  F011         	call	_mpap_setupToHomming	;wreg free
  6666  00196E                     l4404:
  6667                           
  6668                           ;automode.c: 28: autoMode.sm0++;
  6669  00196E  0100               	movlb	0	; () banked
  6670  001970  2BBB               	incf	(_autoMode+1)& (0+255),f,b
  6671                           
  6672                           ;automode.c: 29: }
  6673  001972  D041               	goto	l722
  6674  001974                     l4406:
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;automode.c: 30: else if (autoMode.sm0 == 1)
  6678  001974  05BB               	decf	(_autoMode+1)& (0+255),w,b
  6679  001976  A4D8               	btfss	status,2,c
  6680  001978  D006               	goto	l4412
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;automode.c: 31: {;automode.c: 32: if (mpap_isIdle())
  6684  00197A  EC6C  F011         	call	_mpap_isIdle	;wreg free
  6685  00197E  0900               	iorlw	0
  6686  001980  A4D8               	btfss	status,2,c
  6687  001982  D7F5               	goto	l4404
  6688  001984  D038               	goto	l722
  6689  001986                     l4412:
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;automode.c: 38: else if (autoMode.sm0 == 2)
  6693  001986  0E02               	movlw	2
  6694  001988  19BB               	xorwf	(_autoMode+1)& (0+255),w,b
  6695  00198A  A4D8               	btfss	status,2,c
  6696  00198C  D019               	goto	l4424
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;automode.c: 39: {;automode.c: 40: if (nozzle_isEnabled(autoMode.n))
  6700  00198E  51BA               	movf	_autoMode& (0+255),w,b
  6701  001990  6E1F               	movwf	nozzle_isEnabled@n,c
  6702  001992  6A20               	clrf	nozzle_isEnabled@n+1,c
  6703  001994  BE1F               	btfsc	nozzle_isEnabled@n,7,c
  6704  001996  0620               	decf	nozzle_isEnabled@n+1,f,c
  6705  001998  EC9F  F00F         	call	_nozzle_isEnabled	;wreg free
  6706  00199C  0900               	iorlw	0
  6707  00199E  B4D8               	btfsc	status,2,c
  6708  0019A0  D006               	goto	l4420
  6709                           
  6710                           ;automode.c: 41: {;automode.c: 42: mpap_movetoNozzle(autoMode.n);
  6711  0019A2  0100               	movlb	0	; () banked
  6712  0019A4  51BA               	movf	_autoMode& (0+255),w,b
  6713  0019A6  ECBA  F010         	call	_mpap_movetoNozzle
  6714                           
  6715                           ;automode.c: 43: autoMode.sm0++;
  6716  0019AA  0100               	movlb	0	; () banked
  6717  0019AC  2BBB               	incf	(_autoMode+1)& (0+255),f,b
  6718  0019AE                     l4420:
  6719                           
  6720                           ;automode.c: 44: };automode.c: 46: if (++autoMode.n == 8)
  6721  0019AE  0100               	movlb	0	; () banked
  6722  0019B0  2BBA               	incf	_autoMode& (0+255),f,b
  6723  0019B2  0E08               	movlw	8
  6724  0019B4  19BA               	xorwf	_autoMode& (0+255),w,b
  6725  0019B6  A4D8               	btfss	status,2,c
  6726  0019B8  D01E               	goto	l722
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;automode.c: 47: {autoMode.n = 0x00;}
  6730  0019BA  0E00               	movlw	0
  6731  0019BC  6FBA               	movwf	_autoMode& (0+255),b
  6732  0019BE  D01B               	goto	l722
  6733  0019C0                     l4424:
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;automode.c: 49: else if (autoMode.sm0 == 3)
  6737  0019C0  0E03               	movlw	3
  6738  0019C2  19BB               	xorwf	(_autoMode+1)& (0+255),w,b
  6739  0019C4  A4D8               	btfss	status,2,c
  6740  0019C6  D00C               	goto	l4432
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;automode.c: 50: {;automode.c: 51: if (mpap_isIdle())
  6744  0019C8  EC6C  F011         	call	_mpap_isIdle	;wreg free
  6745  0019CC  0900               	iorlw	0
  6746  0019CE  B4D8               	btfsc	status,2,c
  6747  0019D0  D012               	goto	l722
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;automode.c: 52: {;automode.c: 53: pump_setTick(1);
  6751  0019D2  0E00               	movlw	0
  6752  0019D4  6E0C               	movwf	pump_setTick@ticks+1,c
  6753  0019D6  0E01               	movlw	1
  6754  0019D8  6E0B               	movwf	pump_setTick@ticks,c
  6755  0019DA  EC88  F011         	call	_pump_setTick	;wreg free
  6756  0019DE  D7C7               	goto	l4404
  6757  0019E0                     l4432:
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;automode.c: 57: else if (autoMode.sm0 == 4)
  6761  0019E0  0E04               	movlw	4
  6762  0019E2  19BB               	xorwf	(_autoMode+1)& (0+255),w,b
  6763  0019E4  A4D8               	btfss	status,2,c
  6764  0019E6  D007               	goto	l722
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;automode.c: 58: {;automode.c: 59: if (pump_isIdle())
  6768  0019E8  EC64  F011         	call	_pump_isIdle	;wreg free
  6769  0019EC  0900               	iorlw	0
  6770  0019EE  B4D8               	btfsc	status,2,c
  6771  0019F0  D002               	goto	l722
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;automode.c: 60: {;automode.c: 61: autoMode.sm0 = 0x2;
  6775  0019F2  0E02               	movlw	2
  6776  0019F4  6FBB               	movwf	(_autoMode+1)& (0+255),b
  6777  0019F6                     l722:
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;automode.c: 62: };automode.c: 63: };automode.c: 64: return cod_ret;
  6781  0019F6  0E00               	movlw	0
  6782                           
  6783                           ; BSR set to: 0
  6784  0019F8  0012               	return		;funcret
  6785  0019FA                     __end_of_autoMode_job:
  6786                           	opt callstack 0
  6787                           
  6788 ;; *************** function _pump_setTick *****************
  6789 ;; Defined at:
  6790 ;;		line 8 in file "pump.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  ticks           2   10[COMRAM] unsigned int 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		None
  6799 ;; Tracked objects:
  6800 ;;		On entry : 3F/0
  6801 ;;		On exit  : 3F/0
  6802 ;;		Unchanged: 3F/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6804 ;;      Params:         2       0       0       0       0       0       0       0       0
  6805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6807 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6808 ;;Total ram usage:        2 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    5
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_autoMode_job
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text50
  6819  002310                     __ptext50:
  6820                           	opt callstack 0
  6821  002310                     _pump_setTick:
  6822                           	opt callstack 24
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;pump.c: 10: pump.ticks = ticks;
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;incstack = 0
  6829  002310  C00B  F0B5         	movff	pump_setTick@ticks,_pump
  6830  002314  C00C  F0B6         	movff	pump_setTick@ticks+1,_pump+1
  6831                           
  6832                           ; BSR set to: 0
  6833  002318  0012               	return		;funcret
  6834  00231A                     __end_of_pump_setTick:
  6835                           	opt callstack 0
  6836                           
  6837 ;; *************** function _pump_isIdle *****************
  6838 ;; Defined at:
  6839 ;;		line 66 in file "pump.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;		None
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  1    wreg      char 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0
  6848 ;; Tracked objects:
  6849 ;;		On entry : 3F/0
  6850 ;;		On exit  : 3F/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6856 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6857 ;;Total ram usage:        0 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    5
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_autoMode_job
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text51
  6868  0022C8                     __ptext51:
  6869                           	opt callstack 0
  6870  0022C8                     _pump_isIdle:
  6871                           	opt callstack 24
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;pump.c: 68: if (pump.ticks == 0)
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;incstack = 0
  6878  0022C8  51B5               	movf	_pump& (0+255),w,b
  6879  0022CA  11B6               	iorwf	(_pump+1)& (0+255),w,b
  6880  0022CC  A4D8               	btfss	status,2,c
  6881  0022CE  D002               	goto	l3446
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;pump.c: 69: {return 1;}
  6885  0022D0  0E01               	movlw	1
  6886  0022D2  0012               	return	
  6887  0022D4                     l3446:
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;pump.c: 70: return 0;
  6891  0022D4  0E00               	movlw	0
  6892                           
  6893                           ; BSR set to: 0
  6894  0022D6  0012               	return		;funcret
  6895  0022D8                     __end_of_pump_isIdle:
  6896                           	opt callstack 0
  6897                           
  6898 ;; *************** function _nozzle_isEnabled *****************
  6899 ;; Defined at:
  6900 ;;		line 6 in file "nozzle.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  n               2   30[COMRAM] int 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  1    wreg      char 
  6907 ;; Registers used:
  6908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6909 ;; Tracked objects:
  6910 ;;		On entry : 3F/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6914 ;;      Params:         2       0       0       0       0       0       0       0       0
  6915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6917 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6918 ;;Total ram usage:        2 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; Hardware stack levels required when called:    6
  6921 ;; This function calls:
  6922 ;;		___ftge
  6923 ;;		___wmul
  6924 ;; This function is called by:
  6925 ;;		_autoMode_job
  6926 ;; This function uses a non-reentrant model
  6927 ;;
  6928                           
  6929                           	psect	text52
  6930  001F3E                     __ptext52:
  6931                           	opt callstack 0
  6932  001F3E                     _nozzle_isEnabled:
  6933                           	opt callstack 23
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;nozzle.c: 8: if (pulsonic.nozzle[n].Q_mlh > 0.0)
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;incstack = 0
  6940  001F3E  0E00               	movlw	0
  6941  001F40  6E16               	movwf	___ftge@ff1,c
  6942  001F42  0E00               	movlw	0
  6943  001F44  6E17               	movwf	___ftge@ff1+1,c
  6944  001F46  0E00               	movlw	0
  6945  001F48  6E18               	movwf	___ftge@ff1+2,c
  6946  001F4A  C01F  F00B         	movff	nozzle_isEnabled@n,___wmul@multiplier
  6947  001F4E  C020  F00C         	movff	nozzle_isEnabled@n+1,___wmul@multiplier+1
  6948  001F52  0E00               	movlw	0
  6949  001F54  6E0E               	movwf	___wmul@multiplicand+1,c
  6950  001F56  0E06               	movlw	6
  6951  001F58  6E0D               	movwf	___wmul@multiplicand,c
  6952  001F5A  ECD1  F010         	call	___wmul	;wreg free
  6953  001F5E  0E06               	movlw	low (_pulsonic+6)
  6954  001F60  240B               	addwf	?___wmul,w,c
  6955  001F62  6ED9               	movwf	fsr2l,c
  6956  001F64  0E01               	movlw	high (_pulsonic+6)
  6957  001F66  200C               	addwfc	?___wmul+1,w,c
  6958  001F68  6EDA               	movwf	fsr2h,c
  6959  001F6A  CFDE F019          	movff	postinc2,___ftge@ff2
  6960  001F6E  CFDE F01A          	movff	postinc2,___ftge@ff2+1
  6961  001F72  CFDD F01B          	movff	postdec2,___ftge@ff2+2
  6962  001F76  ECC4  F00D         	call	___ftge	;wreg free
  6963  001F7A  B0D8               	btfsc	status,0,c
  6964  001F7C  D002               	goto	l4376
  6965                           
  6966                           ;nozzle.c: 9: return 1;
  6967  001F7E  0E01               	movlw	1
  6968  001F80  0012               	return	
  6969  001F82                     l4376:
  6970                           
  6971                           ;nozzle.c: 10: return 0;
  6972  001F82  0E00               	movlw	0
  6973  001F84  0012               	return		;funcret
  6974  001F86                     __end_of_nozzle_isEnabled:
  6975                           	opt callstack 0
  6976                           
  6977 ;; *************** function ___ftge *****************
  6978 ;; Defined at:
  6979 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  ff1             3   21[COMRAM] float 
  6982 ;;  ff2             3   24[COMRAM] float 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;		None               void
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6994 ;;      Params:         6       0       0       0       0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6996 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6997 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6998 ;;Total ram usage:        9 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    5
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_ikey_parsing
  7005 ;;		_disp7s_write_f
  7006 ;;		_nozzle_isEnabled
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text53
  7011  001B88                     __ptext53:
  7012                           	opt callstack 0
  7013  001B88                     ___ftge:
  7014                           	opt callstack 21
  7015                           
  7016                           ;incstack = 0
  7017  001B88  AE18               	btfss	___ftge@ff1+2,7,c
  7018  001B8A  D00F               	goto	l4110
  7019  001B8C  0E00               	movlw	0
  7020  001B8E  6E1C               	movwf	??___ftge& (0+255),c
  7021  001B90  0E00               	movlw	0
  7022  001B92  6E1D               	movwf	(??___ftge+1)& (0+255),c
  7023  001B94  0E80               	movlw	128
  7024  001B96  6E1E               	movwf	(??___ftge+2)& (0+255),c
  7025  001B98  5016               	movf	___ftge@ff1,w,c
  7026  001B9A  5C1C               	subwf	??___ftge,w,c
  7027  001B9C  6E16               	movwf	___ftge@ff1,c
  7028  001B9E  5017               	movf	___ftge@ff1+1,w,c
  7029  001BA0  581D               	subwfb	??___ftge+1,w,c
  7030  001BA2  6E17               	movwf	___ftge@ff1+1,c
  7031  001BA4  5018               	movf	___ftge@ff1+2,w,c
  7032  001BA6  581E               	subwfb	??___ftge+2,w,c
  7033  001BA8  6E18               	movwf	___ftge@ff1+2,c
  7034  001BAA                     l4110:
  7035  001BAA  AE1B               	btfss	___ftge@ff2+2,7,c
  7036  001BAC  D00F               	goto	l4114
  7037  001BAE  0E00               	movlw	0
  7038  001BB0  6E1C               	movwf	??___ftge& (0+255),c
  7039  001BB2  0E00               	movlw	0
  7040  001BB4  6E1D               	movwf	(??___ftge+1)& (0+255),c
  7041  001BB6  0E80               	movlw	128
  7042  001BB8  6E1E               	movwf	(??___ftge+2)& (0+255),c
  7043  001BBA  5019               	movf	___ftge@ff2,w,c
  7044  001BBC  5C1C               	subwf	??___ftge,w,c
  7045  001BBE  6E19               	movwf	___ftge@ff2,c
  7046  001BC0  501A               	movf	___ftge@ff2+1,w,c
  7047  001BC2  581D               	subwfb	??___ftge+1,w,c
  7048  001BC4  6E1A               	movwf	___ftge@ff2+1,c
  7049  001BC6  501B               	movf	___ftge@ff2+2,w,c
  7050  001BC8  581E               	subwfb	??___ftge+2,w,c
  7051  001BCA  6E1B               	movwf	___ftge@ff2+2,c
  7052  001BCC                     l4114:
  7053  001BCC  0E00               	movlw	0
  7054  001BCE  1A16               	xorwf	___ftge@ff1,f,c
  7055  001BD0  0E00               	movlw	0
  7056  001BD2  1A17               	xorwf	___ftge@ff1+1,f,c
  7057  001BD4  0E80               	movlw	128
  7058  001BD6  1A18               	xorwf	___ftge@ff1+2,f,c
  7059  001BD8  0E00               	movlw	0
  7060  001BDA  1A19               	xorwf	___ftge@ff2,f,c
  7061  001BDC  0E00               	movlw	0
  7062  001BDE  1A1A               	xorwf	___ftge@ff2+1,f,c
  7063  001BE0  0E80               	movlw	128
  7064  001BE2  1A1B               	xorwf	___ftge@ff2+2,f,c
  7065  001BE4  5019               	movf	___ftge@ff2,w,c
  7066  001BE6  5C16               	subwf	___ftge@ff1,w,c
  7067  001BE8  501A               	movf	___ftge@ff2+1,w,c
  7068  001BEA  5817               	subwfb	___ftge@ff1+1,w,c
  7069  001BEC  501B               	movf	___ftge@ff2+2,w,c
  7070  001BEE  5818               	subwfb	___ftge@ff1+2,w,c
  7071  001BF0  B0D8               	btfsc	status,0,c
  7072  001BF2  D002               	goto	l4120
  7073  001BF4  90D8               	bcf	status,0,c
  7074  001BF6  0012               	return	
  7075  001BF8                     l4120:
  7076  001BF8  80D8               	bsf	status,0,c
  7077  001BFA  0012               	return		;funcret
  7078  001BFC                     __end_of___ftge:
  7079                           	opt callstack 0
  7080                           
  7081 ;; *************** function _mpap_setupToHomming *****************
  7082 ;; Defined at:
  7083 ;;		line 67 in file "mpap.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 3F/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7097 ;;      Params:         0       0       0       0       0       0       0       0       0
  7098 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7100 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7101 ;;Total ram usage:        0 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    6
  7104 ;; This function calls:
  7105 ;;		_mpap_setupToTurn
  7106 ;; This function is called by:
  7107 ;;		_autoMode_job
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text54
  7112  0022B6                     __ptext54:
  7113                           	opt callstack 0
  7114  0022B6                     _mpap_setupToHomming:
  7115                           	opt callstack 23
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;mpap.c: 69: mpap_setupToTurn( -1 *( (8*200) +20));
  7119                           
  7120                           ;incstack = 0
  7121  0022B6  0EF9               	movlw	249
  7122  0022B8  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  7123  0022BA  0EAC               	movlw	172
  7124  0022BC  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  7125  0022BE  ECA2  F010         	call	_mpap_setupToTurn	;wreg free
  7126                           
  7127                           ;mpap.c: 72: mpap.mode = MPAP_HOMMING_MODE;
  7128  0022C2  0E02               	movlw	2
  7129  0022C4  6E4D               	movwf	_mpap+7,c	;volatile
  7130  0022C6  0012               	return		;funcret
  7131  0022C8                     __end_of_mpap_setupToHomming:
  7132                           	opt callstack 0
  7133                           
  7134 ;; *************** function _mpap_movetoNozzle *****************
  7135 ;; Defined at:
  7136 ;;		line 215 in file "mpap.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  n               1    wreg     char 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  n               1   20[COMRAM] char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 3F/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0
  7151 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7153 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7154 ;;Total ram usage:        1 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    6
  7157 ;; This function calls:
  7158 ;;		___wmul
  7159 ;;		_mpap_setupToTurn
  7160 ;; This function is called by:
  7161 ;;		_autoMode_job
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text55
  7166  002174                     __ptext55:
  7167                           	opt callstack 0
  7168  002174                     _mpap_movetoNozzle:
  7169                           	opt callstack 23
  7170                           
  7171                           ;incstack = 0
  7172                           ;mpap_movetoNozzle@n stored from wreg
  7173  002174  6E15               	movwf	mpap_movetoNozzle@n,c
  7174                           
  7175                           ;mpap.c: 218: mpap_setupToTurn( (n*200) - mpap.numSteps_current);
  7176  002176  5015               	movf	mpap_movetoNozzle@n,w,c
  7177  002178  6E0B               	movwf	___wmul@multiplier,c
  7178  00217A  6A0C               	clrf	___wmul@multiplier+1,c
  7179  00217C  BE0B               	btfsc	___wmul@multiplier,7,c
  7180  00217E  060C               	decf	___wmul@multiplier+1,f,c
  7181  002180  0E00               	movlw	0
  7182  002182  6E0E               	movwf	___wmul@multiplicand+1,c
  7183  002184  0EC8               	movlw	200
  7184  002186  6E0D               	movwf	___wmul@multiplicand,c
  7185  002188  ECD1  F010         	call	___wmul	;wreg free
  7186  00218C  5046               	movf	_mpap,w,c	;volatile
  7187  00218E  5C0B               	subwf	?___wmul,w,c
  7188  002190  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  7189  002192  5047               	movf	_mpap+1,w,c	;volatile
  7190  002194  580C               	subwfb	?___wmul+1,w,c
  7191  002196  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  7192  002198  ECA2  F010         	call	_mpap_setupToTurn	;wreg free
  7193                           
  7194                           ;mpap.c: 220: mpap.mode = MPAP_NORMAL_MODE;
  7195  00219C  0E03               	movlw	3
  7196  00219E  6E4D               	movwf	_mpap+7,c	;volatile
  7197  0021A0  0012               	return		;funcret
  7198  0021A2                     __end_of_mpap_movetoNozzle:
  7199                           	opt callstack 0
  7200                           
  7201 ;; *************** function _mpap_setupToTurn *****************
  7202 ;; Defined at:
  7203 ;;		line 55 in file "mpap.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  numSteps_tom    2   16[COMRAM] int 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, status,2, status,0
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7217 ;;      Params:         2       0       0       0       0       0       0       0       0
  7218 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7220 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7221 ;;Total ram usage:        4 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    5
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_mpap_setupToHomming
  7228 ;;		_mpap_movetoNozzle
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text56
  7233  002144                     __ptext56:
  7234                           	opt callstack 0
  7235  002144                     _mpap_setupToTurn:
  7236                           	opt callstack 23
  7237                           
  7238                           ;mpap.c: 58: if (numSteps_tomove !=0)
  7239                           
  7240                           ;incstack = 0
  7241  002144  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  7242  002146  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  7243  002148  B4D8               	btfsc	status,2,c
  7244  00214A  0012               	return	
  7245                           
  7246                           ;mpap.c: 59: {;mpap.c: 60: mpap.KI = (numSteps_tomove<0)? -1: 1;
  7247  00214C  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  7248  00214E  D005               	goto	l428
  7249  002150  0E00               	movlw	0
  7250  002152  6E14               	movwf	_mpap_setupToTurn$427+1,c
  7251  002154  0E01               	movlw	1
  7252  002156  6E13               	movwf	_mpap_setupToTurn$427,c
  7253  002158  D002               	goto	l430
  7254  00215A                     l428:
  7255  00215A  6813               	setf	_mpap_setupToTurn$427,c
  7256  00215C  6814               	setf	_mpap_setupToTurn$427+1,c
  7257  00215E                     l430:
  7258  00215E  C013  F04C         	movff	_mpap_setupToTurn$427,_mpap+6	;volatile
  7259                           
  7260                           ;mpap.c: 62: mpap.counter_steps = 0;
  7261  002162  0E00               	movlw	0
  7262  002164  6E49               	movwf	_mpap+3,c	;volatile
  7263  002166  0E00               	movlw	0
  7264  002168  6E48               	movwf	_mpap+2,c	;volatile
  7265                           
  7266                           ;mpap.c: 64: mpap.numSteps_tomove = numSteps_tomove;
  7267  00216A  C011  F04A         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  7268  00216E  C012  F04B         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  7269  002172  0012               	return		;funcret
  7270  002174                     __end_of_mpap_setupToTurn:
  7271                           	opt callstack 0
  7272                           
  7273 ;; *************** function ___wmul *****************
  7274 ;; Defined at:
  7275 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  multiplier      2   10[COMRAM] unsigned int 
  7278 ;;  multiplicand    2   12[COMRAM] unsigned int 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  product         2   14[COMRAM] unsigned int 
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  2   10[COMRAM] unsigned int 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0, prodl, prodh
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/1
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7290 ;;      Params:         4       0       0       0       0       0       0       0       0
  7291 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7293 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7294 ;;Total ram usage:        6 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    5
  7297 ;; This function calls:
  7298 ;;		Nothing
  7299 ;; This function is called by:
  7300 ;;		_mpap_movetoNozzle
  7301 ;;		_disp7s_write_i
  7302 ;;		_nozzle_isEnabled
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text57
  7307  0021A2                     __ptext57:
  7308                           	opt callstack 0
  7309  0021A2                     ___wmul:
  7310                           	opt callstack 21
  7311                           
  7312                           ;incstack = 0
  7313  0021A2  500B               	movf	___wmul@multiplier,w,c
  7314  0021A4  020D               	mulwf	___wmul@multiplicand,c
  7315  0021A6  CFF3 F00F          	movff	prodl,___wmul@product
  7316  0021AA  CFF4 F010          	movff	prodh,___wmul@product+1
  7317  0021AE  500B               	movf	___wmul@multiplier,w,c
  7318  0021B0  020E               	mulwf	___wmul@multiplicand+1,c
  7319  0021B2  50F3               	movf	prodl,w,c
  7320  0021B4  2610               	addwf	___wmul@product+1,f,c
  7321  0021B6  500C               	movf	___wmul@multiplier+1,w,c
  7322  0021B8  020D               	mulwf	___wmul@multiplicand,c
  7323  0021BA  50F3               	movf	prodl,w,c
  7324  0021BC  2610               	addwf	___wmul@product+1,f,c
  7325  0021BE  C00F  F00B         	movff	___wmul@product,?___wmul
  7326  0021C2  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  7327  0021C6  0012               	return		;funcret
  7328  0021C8                     __end_of___wmul:
  7329                           	opt callstack 0
  7330                           
  7331 ;; *************** function _mpap_isIdle *****************
  7332 ;; Defined at:
  7333 ;;		line 222 in file "mpap.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;		None
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;		None
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1    wreg      char 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2
  7342 ;; Tracked objects:
  7343 ;;		On entry : 3F/0
  7344 ;;		On exit  : 3F/0
  7345 ;;		Unchanged: 3F/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7347 ;;      Params:         0       0       0       0       0       0       0       0       0
  7348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7350 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7351 ;;Total ram usage:        0 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    5
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_autoMode_job
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text58
  7362  0022D8                     __ptext58:
  7363                           	opt callstack 0
  7364  0022D8                     _mpap_isIdle:
  7365                           	opt callstack 24
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;mpap.c: 224: if (mpap.mode == MPAP_IDLE_MODE)
  7369                           
  7370                           ;incstack = 0
  7371  0022D8  504D               	movf	_mpap+7,w,c	;volatile
  7372  0022DA  A4D8               	btfss	status,2,c
  7373  0022DC  D002               	goto	l3434
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;mpap.c: 225: {return 1;}
  7377  0022DE  0E01               	movlw	1
  7378  0022E0  0012               	return	
  7379  0022E2                     l3434:
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;mpap.c: 226: return 0;
  7383  0022E2  0E00               	movlw	0
  7384                           
  7385                           ; BSR set to: 0
  7386  0022E4  0012               	return		;funcret
  7387  0022E6                     __end_of_mpap_isIdle:
  7388                           	opt callstack 0
  7389                           
  7390 ;; *************** function _INTERRUPCION *****************
  7391 ;; Defined at:
  7392 ;;		line 214 in file "main.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;		None
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      void 
  7399 ;; Registers used:
  7400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7406 ;;      Params:         0       0       0       0       0       0       0       0       0
  7407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7408 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7409 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7410 ;;Total ram usage:        6 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    4
  7413 ;; This function calls:
  7414 ;;		_mpap_job
  7415 ;; This function is called by:
  7416 ;;		Interrupt level 2
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	intcode
  7421  000008                     __pintcode:
  7422                           	opt callstack 0
  7423  000008                     _INTERRUPCION:
  7424                           	opt callstack 19
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;incstack = 0
  7428  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7429  00000A  ED7A  F00F         	call	int_func,f	;refresh shadow registers
  7430                           
  7431                           	psect	intcode_body
  7432  001EF4                     __pintcode_body:
  7433                           	opt callstack 19
  7434  001EF4                     int_func:
  7435                           	opt callstack 19
  7436  001EF4  0006               	pop		; remove dummy address from shadow register refresh
  7437  001EF6  CFFA F005          	movff	pclath,??_INTERRUPCION
  7438  001EFA  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  7439  001EFE  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  7440  001F02  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  7441  001F06  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  7442  001F0A  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  7443                           
  7444                           ;main.c: 216: if (TMR0IF)
  7445  001F0E  A4F2               	btfss	4082,2,c	;volatile
  7446  001F10  D008               	goto	i2l135
  7447                           
  7448                           ;main.c: 217: {;main.c: 218: isr_flag.f1ms = 1;
  7449  001F12  0100               	movlb	0	; () banked
  7450  001F14  81CC               	bsf	_isr_flag& (0+255),0,b	;volatile
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;main.c: 219: mpap_job();
  7454  001F16  ECC3  F00F         	call	_mpap_job	;wreg free
  7455                           
  7456                           ;main.c: 221: TMR0IF = 0;
  7457  001F1A  94F2               	bcf	4082,2,c	;volatile
  7458                           
  7459                           ;main.c: 222: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  7460  001F1C  68D7               	setf	4055,c	;volatile
  7461                           
  7462                           ;main.c: 223: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  7463  001F1E  0ED1               	movlw	209
  7464  001F20  6ED6               	movwf	4054,c	;volatile
  7465  001F22                     i2l135:
  7466  001F22  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  7467  001F26  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  7468  001F2A  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  7469  001F2E  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  7470  001F32  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  7471  001F36  C005  FFFA         	movff	??_INTERRUPCION,pclath
  7472  001F3A  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7473  001F3C  0011               	retfie		f
  7474  001F3E                     __end_of_INTERRUPCION:
  7475                           	opt callstack 0
  7476                           
  7477 ;; *************** function _mpap_job *****************
  7478 ;; Defined at:
  7479 ;;		line 140 in file "mpap.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;		None
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  cod_ret         1    0        char 
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  1    wreg      char 
  7486 ;; Registers used:
  7487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7488 ;; Tracked objects:
  7489 ;;		On entry : 3F/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7493 ;;      Params:         0       0       0       0       0       0       0       0       0
  7494 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7496 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7497 ;;Total ram usage:        1 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; Hardware stack levels required when called:    3
  7500 ;; This function calls:
  7501 ;;		__mpap_off
  7502 ;;		_mpap_homming
  7503 ;;		_mpap_normal_mode
  7504 ;; This function is called by:
  7505 ;;		_INTERRUPCION
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text60
  7510  001F86                     __ptext60:
  7511                           	opt callstack 0
  7512  001F86                     _mpap_job:
  7513                           	opt callstack 19
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;mpap.c: 142: int8_t cod_ret;;mpap.c: 144: if (mpap.mode == MPAP_HOMMING_MODE)
  7517                           
  7518                           ;incstack = 0
  7519  001F86  0E02               	movlw	2
  7520  001F88  184D               	xorwf	_mpap+7,w,c	;volatile
  7521  001F8A  A4D8               	btfss	status,2,c
  7522  001F8C  D003               	goto	i2l3760
  7523                           
  7524                           ; BSR set to: 0
  7525  001F8E  ECFF  F00E         	call	_mpap_homming	;wreg free
  7526  001F92  0012               	return	
  7527  001F94                     i2l3760:
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;mpap.c: 147: else if (mpap.mode == MPAP_NORMAL_MODE)
  7531  001F94  0E03               	movlw	3
  7532  001F96  184D               	xorwf	_mpap+7,w,c	;volatile
  7533  001F98  A4D8               	btfss	status,2,c
  7534  001F9A  D003               	goto	i2l3764
  7535                           
  7536                           ; BSR set to: 0
  7537  001F9C  ECE7  F00F         	call	_mpap_normal_mode	;wreg free
  7538  001FA0  0012               	return	
  7539  001FA2                     i2l3764:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;mpap.c: 150: else if (mpap.mode == MPAP_STALL_MODE)
  7543  001FA2  044D               	decf	_mpap+7,w,c	;volatile
  7544  001FA4  A4D8               	btfss	status,2,c
  7545  001FA6  0012               	return	
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;mpap.c: 151: {;mpap.c: 152: mpap.numSteps_tomove = 0x00;
  7549  001FA8  0E00               	movlw	0
  7550  001FAA  6E4B               	movwf	_mpap+5,c	;volatile
  7551  001FAC  0E00               	movlw	0
  7552  001FAE  6E4A               	movwf	_mpap+4,c	;volatile
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;mpap.c: 153: mpap_off();
  7556  001FB0  D801               	call	i2u402_48
  7557  001FB2  D00A               	goto	i2u402_49
  7558  001FB4                     i2u402_48:
  7559  001FB4  0005               	push	
  7560  001FB6  6EFA               	movwf	pclath,c
  7561  001FB8  51E9               	movf	_mpap_off& (0+255),w,b
  7562  001FBA  6EFD               	movwf	tosl,c
  7563  001FBC  51EA               	movf	(_mpap_off+1)& (0+255),w,b
  7564  001FBE  6EFE               	movwf	tosh,c
  7565  001FC0  50F8               	movf	tblptru,w,c
  7566  001FC2  6EFF               	movwf	tosu,c
  7567  001FC4  50FA               	movf	pclath,w,c
  7568  001FC6  0012               	return		;indir
  7569  001FC8                     i2u402_49:
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;mpap.c: 155: mpap.mode = MPAP_IDLE_MODE;
  7573  001FC8  0E00               	movlw	0
  7574  001FCA  6E4D               	movwf	_mpap+7,c	;volatile
  7575  001FCC  0012               	return	
  7576  001FCE                     __end_of_mpap_job:
  7577                           	opt callstack 0
  7578                           
  7579 ;; *************** function _mpap_normal_mode *****************
  7580 ;; Defined at:
  7581 ;;		line 120 in file "mpap.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;		None
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  cod_ret         1    1[COMRAM] char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      char 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 3F/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7595 ;;      Params:         0       0       0       0       0       0       0       0       0
  7596 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7598 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7599 ;;Total ram usage:        1 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    2
  7602 ;; This function calls:
  7603 ;;		_mpap_do1step
  7604 ;; This function is called by:
  7605 ;;		_mpap_job
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text61
  7610  001FCE                     __ptext61:
  7611                           	opt callstack 0
  7612  001FCE                     _mpap_normal_mode:
  7613                           	opt callstack 19
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;mpap.c: 122: int8_t cod_ret = 0;
  7617                           
  7618                           ;incstack = 0
  7619  001FCE  0E00               	movlw	0
  7620  001FD0  6E02               	movwf	mpap_normal_mode@cod_ret,c
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;mpap.c: 123: if (mpap.numSteps_tomove!=0)
  7624  001FD2  504A               	movf	_mpap+4,w,c	;volatile
  7625  001FD4  104B               	iorwf	_mpap+5,w,c	;volatile
  7626  001FD6  B4D8               	btfsc	status,2,c
  7627  001FD8  D01C               	goto	i2l450
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;mpap.c: 124: {;mpap.c: 125: mpap_do1step(mpap.KI);
  7631  001FDA  504C               	movf	_mpap+6,w,c	;volatile
  7632  001FDC  EC2C  F010         	call	_mpap_do1step
  7633                           
  7634                           ;mpap.c: 127: mpap.counter_steps+= mpap.KI;
  7635  001FE0  504C               	movf	_mpap+6,w,c	;volatile
  7636  001FE2  2648               	addwf	_mpap+2,f,c	;volatile
  7637  001FE4  0E00               	movlw	0
  7638  001FE6  BE4C               	btfsc	_mpap+6,7,c	;volatile
  7639  001FE8  0EFF               	movlw	255
  7640  001FEA  2249               	addwfc	_mpap+3,f,c	;volatile
  7641                           
  7642                           ;mpap.c: 129: mpap.numSteps_current+= mpap.KI;
  7643  001FEC  504C               	movf	_mpap+6,w,c	;volatile
  7644  001FEE  2646               	addwf	_mpap,f,c	;volatile
  7645  001FF0  0E00               	movlw	0
  7646  001FF2  BE4C               	btfsc	_mpap+6,7,c	;volatile
  7647  001FF4  0EFF               	movlw	255
  7648  001FF6  2247               	addwfc	_mpap+1,f,c	;volatile
  7649                           
  7650                           ;mpap.c: 131: if ( mpap.counter_steps== mpap.numSteps_tomove)
  7651  001FF8  504A               	movf	_mpap+4,w,c	;volatile
  7652  001FFA  1848               	xorwf	_mpap+2,w,c	;volatile
  7653  001FFC  E10A               	bnz	i2l450
  7654  001FFE  504B               	movf	_mpap+5,w,c	;volatile
  7655  002000  1849               	xorwf	_mpap+3,w,c	;volatile
  7656  002002  A4D8               	btfss	status,2,c
  7657  002004  D006               	goto	i2l450
  7658                           
  7659                           ;mpap.c: 132: {;mpap.c: 133: mpap.numSteps_tomove = 0;
  7660  002006  0E00               	movlw	0
  7661  002008  6E4B               	movwf	_mpap+5,c	;volatile
  7662  00200A  0E00               	movlw	0
  7663  00200C  6E4A               	movwf	_mpap+4,c	;volatile
  7664                           
  7665                           ;mpap.c: 134: cod_ret = 1;
  7666  00200E  0E01               	movlw	1
  7667  002010  6E02               	movwf	mpap_normal_mode@cod_ret,c
  7668  002012                     i2l450:
  7669                           
  7670                           ;mpap.c: 135: };mpap.c: 136: };mpap.c: 137: return cod_ret;
  7671  002012  5002               	movf	mpap_normal_mode@cod_ret,w,c
  7672  002014  0012               	return		;funcret
  7673  002016                     __end_of_mpap_normal_mode:
  7674                           	opt callstack 0
  7675                           
  7676 ;; *************** function _mpap_homming *****************
  7677 ;; Defined at:
  7678 ;;		line 96 in file "mpap.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;		None
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  cod_ret         1    2[COMRAM] char 
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      char 
  7685 ;; Registers used:
  7686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7687 ;; Tracked objects:
  7688 ;;		On entry : 3F/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7692 ;;      Params:         0       0       0       0       0       0       0       0       0
  7693 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7694 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7695 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7696 ;;Total ram usage:        2 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    2
  7699 ;; This function calls:
  7700 ;;		_mpap_do1step
  7701 ;; This function is called by:
  7702 ;;		_mpap_job
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text62
  7707  001DFE                     __ptext62:
  7708                           	opt callstack 0
  7709  001DFE                     _mpap_homming:
  7710                           	opt callstack 19
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;mpap.c: 98: int8_t cod_ret = 0;
  7714                           
  7715                           ;incstack = 0
  7716  001DFE  0E00               	movlw	0
  7717  001E00  6E03               	movwf	mpap_homming@cod_ret,c
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;mpap.c: 99: if (mpap.numSteps_tomove!=0)
  7721  001E02  504A               	movf	_mpap+4,w,c	;volatile
  7722  001E04  104B               	iorwf	_mpap+5,w,c	;volatile
  7723  001E06  B4D8               	btfsc	status,2,c
  7724  001E08  D024               	goto	i2l444
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;mpap.c: 100: {;mpap.c: 101: mpap_do1step(mpap.KI);
  7728  001E0A  504C               	movf	_mpap+6,w,c	;volatile
  7729  001E0C  EC2C  F010         	call	_mpap_do1step
  7730                           
  7731                           ;mpap.c: 103: mpap.counter_steps+= mpap.KI;
  7732  001E10  504C               	movf	_mpap+6,w,c	;volatile
  7733  001E12  2648               	addwf	_mpap+2,f,c	;volatile
  7734  001E14  0E00               	movlw	0
  7735  001E16  BE4C               	btfsc	_mpap+6,7,c	;volatile
  7736  001E18  0EFF               	movlw	255
  7737  001E1A  2249               	addwfc	_mpap+3,f,c	;volatile
  7738                           
  7739                           ;mpap.c: 105: if (((PORTE & (1<<1))>>1) == 0)
  7740  001E1C  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  7741  001E20  90D8               	bcf	status,0,c
  7742  001E22  3202               	rrcf	??_mpap_homming,f,c
  7743  001E24  B002               	btfsc	??_mpap_homming,0,c
  7744  001E26  D006               	goto	i2l3400
  7745                           
  7746                           ;mpap.c: 106: {;mpap.c: 107: mpap.numSteps_tomove = 0x0000;
  7747  001E28  0E00               	movlw	0
  7748  001E2A  6E4B               	movwf	_mpap+5,c	;volatile
  7749  001E2C  0E00               	movlw	0
  7750  001E2E  6E4A               	movwf	_mpap+4,c	;volatile
  7751                           
  7752                           ;mpap.c: 108: cod_ret = 1;
  7753  001E30  0E01               	movlw	1
  7754  001E32  6E03               	movwf	mpap_homming@cod_ret,c
  7755  001E34                     i2l3400:
  7756                           
  7757                           ;mpap.c: 109: };mpap.c: 110: if ( mpap.counter_steps == mpap.numSteps_tomove)
  7758  001E34  504A               	movf	_mpap+4,w,c	;volatile
  7759  001E36  1848               	xorwf	_mpap+2,w,c	;volatile
  7760  001E38  E10C               	bnz	i2l444
  7761  001E3A  504B               	movf	_mpap+5,w,c	;volatile
  7762  001E3C  1849               	xorwf	_mpap+3,w,c	;volatile
  7763  001E3E  A4D8               	btfss	status,2,c
  7764  001E40  D008               	goto	i2l444
  7765                           
  7766                           ;mpap.c: 111: {;mpap.c: 112: mpap.numSteps_tomove = 0x0000;
  7767  001E42  0E00               	movlw	0
  7768  001E44  6E4B               	movwf	_mpap+5,c	;volatile
  7769  001E46  0E00               	movlw	0
  7770  001E48  6E4A               	movwf	_mpap+4,c	;volatile
  7771                           
  7772                           ;mpap.c: 113: cod_ret = 1;
  7773  001E4A  0E01               	movlw	1
  7774  001E4C  6E03               	movwf	mpap_homming@cod_ret,c
  7775                           
  7776                           ;mpap.c: 114: pulsonic.errors.flag.mpap_home_sensor = 1;
  7777  001E4E  0101               	movlb	1	; () banked
  7778  001E50  813A               	bsf	(_pulsonic+58)& (0+255),0,b
  7779  001E52                     i2l444:
  7780                           
  7781                           ;mpap.c: 115: };mpap.c: 116: };mpap.c: 117: return cod_ret;
  7782  001E52  5003               	movf	mpap_homming@cod_ret,w,c
  7783  001E54  0012               	return		;funcret
  7784  001E56                     __end_of_mpap_homming:
  7785                           	opt callstack 0
  7786                           
  7787 ;; *************** function _mpap_do1step *****************
  7788 ;; Defined at:
  7789 ;;		line 76 in file "mpap.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  KI              1    wreg     char 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  KI              1    0[COMRAM] char 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1    wreg      void 
  7796 ;; Registers used:
  7797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 3F/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7803 ;;      Params:         0       0       0       0       0       0       0       0       0
  7804 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7806 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7807 ;;Total ram usage:        1 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    1
  7810 ;; This function calls:
  7811 ;;		__mpap_step1
  7812 ;;		__mpap_step2
  7813 ;;		__mpap_step3
  7814 ;;		__mpap_step4
  7815 ;; This function is called by:
  7816 ;;		_mpap_homming
  7817 ;;		_mpap_normal_mode
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text63
  7822  002058                     __ptext63:
  7823                           	opt callstack 0
  7824  002058                     _mpap_do1step:
  7825                           	opt callstack 19
  7826                           
  7827                           ;incstack = 0
  7828                           ;mpap_do1step@KI stored from wreg
  7829  002058  6E01               	movwf	mpap_do1step@KI,c
  7830                           
  7831                           ;mpap.c: 78: static int8_t i = -1;;mpap.c: 80: i= i + KI;
  7832  00205A  5050               	movf	mpap_do1step@i,w,c
  7833  00205C  2401               	addwf	mpap_do1step@KI,w,c
  7834  00205E  6E50               	movwf	mpap_do1step@i,c
  7835                           
  7836                           ;mpap.c: 82: if (i>3){i=0;}
  7837  002060  5050               	movf	mpap_do1step@i,w,c
  7838  002062  0A80               	xorlw	128
  7839  002064  0F7C               	addlw	-132
  7840  002066  A0D8               	btfss	status,0,c
  7841  002068  D002               	goto	i2l3194
  7842  00206A  0E00               	movlw	0
  7843  00206C  6E50               	movwf	mpap_do1step@i,c
  7844  00206E                     i2l3194:
  7845                           
  7846                           ;mpap.c: 83: if (i<0){i=3;}
  7847  00206E  AE50               	btfss	mpap_do1step@i,7,c
  7848  002070  D002               	goto	i2l3198
  7849  002072  0E03               	movlw	3
  7850  002074  6E50               	movwf	mpap_do1step@i,c
  7851  002076                     i2l3198:
  7852                           
  7853                           ;mpap.c: 85: mpap_step[i]();
  7854  002076  5050               	movf	mpap_do1step@i,w,c
  7855  002078  0D02               	mullw	2
  7856  00207A  50F3               	movf	prodl,w,c
  7857  00207C  0FE1               	addlw	low _mpap_step
  7858  00207E  6ED9               	movwf	fsr2l,c
  7859  002080  6ADA               	clrf	fsr2h,c
  7860  002082  D801               	call	i2u282_48
  7861  002084  0012               	return	
  7862  002086                     i2u282_48:
  7863  002086  0005               	push	
  7864  002088  6EFA               	movwf	pclath,c
  7865  00208A  50DE               	movf	postinc2,w,c
  7866  00208C  6EFD               	movwf	tosl,c
  7867  00208E  50DE               	movf	postinc2,w,c
  7868  002090  6EFE               	movwf	tosh,c
  7869  002092  50F8               	movf	tblptru,w,c
  7870  002094  6EFF               	movwf	tosu,c
  7871  002096  50FA               	movf	pclath,w,c
  7872  002098  0012               	return		;indir
  7873  00209A                     __end_of_mpap_do1step:
  7874                           	opt callstack 0
  7875                           
  7876 ;; *************** function __mpap_step3 *****************
  7877 ;; Defined at:
  7878 ;;		line 21 in file "mpap.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;		None
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;		None
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      void 
  7885 ;; Registers used:
  7886 ;;		status,2, status,0
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7892 ;;      Params:         0       0       0       0       0       0       0       0       0
  7893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7896 ;;Total ram usage:        0 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_mpap_do1step
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text64
  7906  00231A                     __ptext64:
  7907                           	opt callstack 0
  7908  00231A                     __mpap_step3:
  7909                           	opt callstack 19
  7910                           
  7911                           ;incstack = 0
  7912                           ;mpap.c: 23: do{LATD &= ~(1<<0);}while(0);
  7913  00231A  908C               	bcf	3980,0,c	;volatile
  7914                           
  7915                           ;mpap.c: 24: do{LATD |= 1<<1;}while(0);
  7916  00231C  828C               	bsf	3980,1,c	;volatile
  7917                           
  7918                           ;mpap.c: 25: do{LATD &= ~(1<<2);}while(0);
  7919  00231E  948C               	bcf	3980,2,c	;volatile
  7920                           
  7921                           ;mpap.c: 26: do{LATD &= ~(1<<3);}while(0);
  7922  002320  968C               	bcf	3980,3,c	;volatile
  7923  002322  0012               	return		;funcret
  7924  002324                     __end_of__mpap_step3:
  7925                           	opt callstack 0
  7926                           
  7927 ;; *************** function __mpap_step2 *****************
  7928 ;; Defined at:
  7929 ;;		line 13 in file "mpap.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;		None
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      void 
  7936 ;; Registers used:
  7937 ;;		status,2, status,0
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7943 ;;      Params:         0       0       0       0       0       0       0       0       0
  7944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7946 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7947 ;;Total ram usage:        0 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_mpap_do1step
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text65
  7957  002324                     __ptext65:
  7958                           	opt callstack 0
  7959  002324                     __mpap_step2:
  7960                           	opt callstack 19
  7961                           
  7962                           ;incstack = 0
  7963                           ;mpap.c: 15: do{LATD &= ~(1<<0);}while(0);
  7964  002324  908C               	bcf	3980,0,c	;volatile
  7965                           
  7966                           ;mpap.c: 16: do{LATD &= ~(1<<1);}while(0);
  7967  002326  928C               	bcf	3980,1,c	;volatile
  7968                           
  7969                           ;mpap.c: 17: do{LATD |= 1<<2;}while(0);
  7970  002328  848C               	bsf	3980,2,c	;volatile
  7971                           
  7972                           ;mpap.c: 18: do{LATD &= ~(1<<3);}while(0);
  7973  00232A  968C               	bcf	3980,3,c	;volatile
  7974  00232C  0012               	return		;funcret
  7975  00232E                     __end_of__mpap_step2:
  7976                           	opt callstack 0
  7977                           
  7978 ;; *************** function __mpap_step1 *****************
  7979 ;; Defined at:
  7980 ;;		line 5 in file "mpap.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;		None
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;		None
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7994 ;;      Params:         0       0       0       0       0       0       0       0       0
  7995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7997 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7998 ;;Total ram usage:        0 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_mpap_do1step
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text66
  8008  00232E                     __ptext66:
  8009                           	opt callstack 0
  8010  00232E                     __mpap_step1:
  8011                           	opt callstack 19
  8012                           
  8013                           ;incstack = 0
  8014                           ;mpap.c: 7: do{LATD &= ~(1<<0);}while(0);
  8015  00232E  908C               	bcf	3980,0,c	;volatile
  8016                           
  8017                           ;mpap.c: 8: do{LATD &= ~(1<<1);}while(0);
  8018  002330  928C               	bcf	3980,1,c	;volatile
  8019                           
  8020                           ;mpap.c: 9: do{LATD &= ~(1<<2);}while(0);
  8021  002332  948C               	bcf	3980,2,c	;volatile
  8022                           
  8023                           ;mpap.c: 10: do{LATD |= 1<<3;}while(0);
  8024  002334  868C               	bsf	3980,3,c	;volatile
  8025  002336  0012               	return		;funcret
  8026  002338                     __end_of__mpap_step1:
  8027                           	opt callstack 0
  8028                           
  8029 ;; *************** function __mpap_step4 *****************
  8030 ;; Defined at:
  8031 ;;		line 29 in file "mpap.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;		None
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		status,2, status,0
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8045 ;;      Params:         0       0       0       0       0       0       0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8048 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8049 ;;Total ram usage:        0 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		_mpap_do1step
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text67
  8059  002338                     __ptext67:
  8060                           	opt callstack 0
  8061  002338                     __mpap_step4:
  8062                           	opt callstack 19
  8063                           
  8064                           ;incstack = 0
  8065                           ;mpap.c: 31: do{LATD |= 1<<0;}while(0);
  8066  002338  808C               	bsf	3980,0,c	;volatile
  8067                           
  8068                           ;mpap.c: 32: do{LATD &= ~(1<<1);}while(0);
  8069  00233A  928C               	bcf	3980,1,c	;volatile
  8070                           
  8071                           ;mpap.c: 33: do{LATD &= ~(1<<2);}while(0);
  8072  00233C  948C               	bcf	3980,2,c	;volatile
  8073                           
  8074                           ;mpap.c: 34: do{LATD &= ~(1<<3);}while(0);
  8075  00233E  968C               	bcf	3980,3,c	;volatile
  8076  002340  0012               	return		;funcret
  8077  002342                     __end_of__mpap_step4:
  8078                           	opt callstack 0
  8079                           
  8080 ;; *************** function __mpap_off *****************
  8081 ;; Defined at:
  8082 ;;		line 43 in file "mpap.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;		None
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		status,2, status,0
  8091 ;; Tracked objects:
  8092 ;;		On entry : 3F/0
  8093 ;;		On exit  : 3F/0
  8094 ;;		Unchanged: 3F/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8096 ;;      Params:         0       0       0       0       0       0       0       0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8099 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8100 ;;Total ram usage:        0 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_mpap_job
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text68
  8110  002342                     __ptext68:
  8111                           	opt callstack 0
  8112  002342                     __mpap_off:
  8113                           	opt callstack 21
  8114                           
  8115                           ; BSR set to: 0
  8116                           
  8117                           ; BSR set to: 0
  8118                           
  8119                           ;incstack = 0
  8120                           ;mpap.c: 45: do{LATD &= ~(1<<0);}while(0);
  8121  002342  908C               	bcf	3980,0,c	;volatile
  8122                           
  8123                           ; BSR set to: 0
  8124                           
  8125                           ;mpap.c: 46: do{LATD &= ~(1<<1);}while(0);
  8126  002344  928C               	bcf	3980,1,c	;volatile
  8127                           
  8128                           ; BSR set to: 0
  8129                           
  8130                           ;mpap.c: 47: do{LATD &= ~(1<<2);}while(0);
  8131  002346  948C               	bcf	3980,2,c	;volatile
  8132                           
  8133                           ; BSR set to: 0
  8134                           
  8135                           ;mpap.c: 48: do{LATD &= ~(1<<3);}while(0);
  8136  002348  968C               	bcf	3980,3,c	;volatile
  8137                           
  8138                           ; BSR set to: 0
  8139  00234A  0012               	return		;funcret
  8140  00234C                     __end_of__mpap_off:
  8141                           	opt callstack 0
  8142                           
  8143                           	psect	text69
  8144  000000                     __ptext69:
  8145                           	opt callstack 0
  8146                           
  8147                           	psect	rparam
  8148  0000                     
  8149                           	psect	temp
  8150  000051                     btemp:
  8151                           	opt callstack 0
  8152  000051                     	ds	1
  8153  0000                     int$flags	set	btemp
  8154  0000                     wtemp8	set	btemp+1
  8155  0000                     ttemp5	set	btemp+1
  8156  0000                     ttemp6	set	btemp+4
  8157  0000                     ttemp7	set	btemp+8
  8158                           tosu	equ	0xFFF
  8159                           tosh	equ	0xFFE
  8160                           tosl	equ	0xFFD
  8161                           stkptr	equ	0xFFC
  8162                           pclatu	equ	0xFFB
  8163                           pclath	equ	0xFFA
  8164                           pcl	equ	0xFF9
  8165                           tblptru	equ	0xFF8
  8166                           tblptrh	equ	0xFF7
  8167                           tblptrl	equ	0xFF6
  8168                           tablat	equ	0xFF5
  8169                           prodh	equ	0xFF4
  8170                           prodl	equ	0xFF3
  8171                           indf0	equ	0xFEF
  8172                           postinc0	equ	0xFEE
  8173                           postdec0	equ	0xFED
  8174                           preinc0	equ	0xFEC
  8175                           plusw0	equ	0xFEB
  8176                           fsr0h	equ	0xFEA
  8177                           fsr0l	equ	0xFE9
  8178                           wreg	equ	0xFE8
  8179                           indf1	equ	0xFE7
  8180                           postinc1	equ	0xFE6
  8181                           postdec1	equ	0xFE5
  8182                           preinc1	equ	0xFE4
  8183                           plusw1	equ	0xFE3
  8184                           fsr1h	equ	0xFE2
  8185                           fsr1l	equ	0xFE1
  8186                           bsr	equ	0xFE0
  8187                           indf2	equ	0xFDF
  8188                           postinc2	equ	0xFDE
  8189                           postdec2	equ	0xFDD
  8190                           preinc2	equ	0xFDC
  8191                           plusw2	equ	0xFDB
  8192                           fsr2h	equ	0xFDA
  8193                           fsr2l	equ	0xFD9
  8194                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        31
    BSS         183
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      80
    BANK0           160     17     156
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_i@pDisp	PTR unsigned char  size(2) Largest target is 64
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[64]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_f@pDisp	PTR unsigned char  size(2) Largest target is 64
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[64]), 

    S473_disp7s_mux$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    disp7s_mux.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    S228_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S228_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 


Critical Paths under _main in COMRAM

    _main->_visMode_job
    _visMode_job->_visMode_disp
    _visMode_disp->_disp7s_qtyDisp_writeFloat
    _disp7s_qtyDisp_writeInt->_disp7s_write_i
    _disp7s_qtyDisp_writeFloat->_disp7s_write_f
    _disp7s_write_f->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftpack
    ___ftadd->___ftpack
    _disp7s_modeDisp_writeInt->_disp7s_write_i
    _disp7s_write_i->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _ikb_flush->_ikey_clear_all_flag
    _disp7s_job->_disp7s_mux_Q
    _disp7s_init->_disp7s_mux_init
    _autoMode_job->_nozzle_isEnabled
    _nozzle_isEnabled->___ftge
    ___ftge->___lwtoft
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_movetoNozzle->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _disp7s_qtyDisp_writeFloat->_disp7s_write_f

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   40463
                                             67 COMRAM     2     2      0
                       _autoMode_job
                        _disp7s_init
                         _disp7s_job
                          _ikb_flush
                           _ikb_init
                            _ikb_job
                          _mpap_sych
                      _pulsonic_init
                           _pump_job
                       _visMode_init
                        _visMode_job
 ---------------------------------------------------------------------------------
 (1) _visMode_job                                          1     1      0   26595
                                             66 COMRAM     1     1      0
              _ikb_key_is_ready2read
                       _visMode_disp
 ---------------------------------------------------------------------------------
 (2) _visMode_disp                                         4     4      0   26533
                                             62 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeInt                              2     0      2    5218
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeFloat                            3     0      3   15908
                                             59 COMRAM     3     0      3
                     _disp7s_write_f
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_f                                      28    22      6   15627
                                             48 COMRAM    11     5      6
                                              0 BANK0     17    17      0
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     621
                                             33 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4427
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5078
                                             18 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeInt                             2     0      2    5218
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_i                                      24    19      5    5097
                                             31 COMRAM    24    19      5
                             ___wmul
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               3     1      2     166
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 6     1      5    2496
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ikb_key_is_ready2read                                1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _visMode_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pump_job                                             1     1      0       8
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulsonic_init                                        1     1      0      68
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8350
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key0 *
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    7887
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3784
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3253
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_flush                                            0     0      0      68
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (2) _ikey_clear_all_flag                                  1     1      0      68
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _disp7s_job                                           3     3      0     181
                                             18 COMRAM     3     3      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
                       _disp7s_mux_Q
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_Q                                         8     8      0     134
                                             10 COMRAM     8     8      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (1) _disp7s_init                                          1     1      0     204
                                             11 COMRAM     1     1      0
                    _disp7s_mux_init
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_init                                      1     1      0      68
                                             10 COMRAM     1     1      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autoMode_job                                         1     1      0    4715
                                             32 COMRAM     1     1      0
                        _mpap_isIdle
                  _mpap_movetoNozzle
                _mpap_setupToHomming
                   _nozzle_isEnabled
                        _pump_isIdle
                       _pump_setTick
 ---------------------------------------------------------------------------------
 (2) _pump_setTick                                         2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _pump_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nozzle_isEnabled                                     2     0      2    2828
                                             30 COMRAM     2     0      2
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    1458
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToHomming                                  0     0      0     242
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_movetoNozzle                                    1     1      0    1513
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (3) _mpap_setupToTurn                                     4     2      2     242
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1249
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _mpap_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (9) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (10) _mpap_normal_mode                                    1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (10) _mpap_homming                                        2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (11) _mpap_do1step                                        1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (12) __mpap_step4                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) __mpap_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autoMode_job
     _mpap_isIdle
     _mpap_movetoNozzle
       ___wmul
       _mpap_setupToTurn
         ___wmul (ARG)
     _mpap_setupToHomming
       _mpap_setupToTurn
         ___wmul (ARG)
     _nozzle_isEnabled
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _pump_isIdle
     _pump_setTick
   _disp7s_init
     _disp7s_mux_init
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _disp7s_job
     _disp7s_mux0_off *
     _disp7s_mux0_on *
     _disp7s_mux1_off *
     _disp7s_mux1_on *
     _disp7s_mux2_off *
     _disp7s_mux2_on *
     _disp7s_mux3_off *
     _disp7s_mux3_on *
     _disp7s_mux4_off *
     _disp7s_mux4_on *
     _disp7s_mux_Q *
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key0 *
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
   _mpap_sych
   _pulsonic_init
   _pump_job
   _visMode_init
   _visMode_job
     _ikb_key_is_ready2read
     _visMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      20        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul 13 03:19:04 2019

             disp7s_write_f@K10MULT 00F8               ??_mpap_setupToHomming 0015  
                       _pump_isIdle 22C8                 ___wmul@multiplicand 000D  
                       __CFG_BORV$3 000000               disp7s_write_i@K10MULT 0035  
                      ___ftadd@exp1 001E                        ___ftadd@exp2 001D  
                      ___ftadd@sign 001C                                 l110 170A  
                               l301 09F6                                 l303 0A3A  
                               l321 0DC2                                 l305 0A9C  
                               l315 0D58                                 l307 0AE0  
                               l324 0E14                                 l309 0C2C  
                               l430 215E                                 l319 0D8C  
                               l428 215A                                 l292 08F0  
                               l286 093A                                 l722 19F6  
                               l299 0994                                 _GIE 007F97  
                      __CFG_BOR$OFF 000000                                 _key 0060  
                               prod 000FF3                                 tosl 000FFD  
                               wreg 000FE8              __size_of_pulsonic_init 0038  
                      _pump_setTick 2310                        __CFG_LVP$OFF 000000  
                      __CFG_WDT$OFF 000000                                l1300 204E  
                              l1141 11BC                                l1290 1E9E  
                              l4002 10FE                                l4110 1BAA  
                              l4120 1BF8                                l3232 1232  
                              l4024 1150                                l4114 1BCC  
                              l3250 1302                                l1482 1A72  
                              l4026 115A                                l4130 15F8  
                              l4202 0FA4                                l4044 11D8  
                              l4036 118E                                l4028 1164  
                              l4212 0FD8                                l4302 08D0  
                              l3238 1270                                l4054 1208  
                              l4038 1198                                l4070 1528  
                              l4222 1034                                l3176 1EF0  
                              l3256 1342                                l3248 12E2  
                              l4064 1500                                l4160 1670  
                              l4152 165C                                l4208 0FBA  
                              l4216 1004                                l3434 22E2  
                              l4250 1464                                l4242 1420  
                              l4234 13DC                                l4420 19AE  
                              l4412 1986                                l4404 196E  
                              l3372 226A                                l3524 1798  
                              l3268 13C6                                l4236 13F8  
                              l4084 155A                                l4148 164C  
                              l4228 1076                                l3446 22D4  
                              l4406 1974                                l3470 18CA  
                              l4350 0CDE                                l4342 0C1C  
                              l4262 14C8                                l4246 143E  
                              l4094 1582                                l4166 168C  
                              l4158 1664                                l4182 0ECC  
                              l4174 0E52                                l4432 19E0  
                              l4424 19C0                                l3456 209E  
                              l3536 1DA4                                l4336 0B92  
                              l4280 0812                                l4256 1486  
                              l4088 156A                                l4192 0F1C  
                              l4184 0ED4                                l4176 0E7A  
                              l3474 1932                                l3722 1AB4  
                              l2850 21F4                                l4098 1592  
                              l4450 1C26                                l4514 1702  
                              l3548 1DCE                                l4292 0880  
                              l3732 1AD4                                l3564 20E8  
                              l3900 202C                                l4188 0EFA  
                              l4532 172A                                l3590 1B58  
                              l4366 0E34                                l4294 0890  
                              l3734 1AD6                                l3718 1AA8  
                              l4470 1C6A                                l4376 1F82  
                              l3584 1B1C                                l3920 183E  
                              l2848 21F2                                l4456 1C42  
                              l4448 1C22                                l3930 189A  
                              l3922 185C                                l4298 08B0  
                              l3738 1AE0                                l3906 2044  
                              l4394 1CC6                                l4458 1C46  
                              l4546 1750                                l4538 173C  
                              l3748 1AFC                                l3684 1D54  
                              l3926 1872                                l3918 1834  
                              l3928 1890                                l3696 1D72  
                              l3880 1E74                                l3890 1E94  
                              l3948 1A02                                l3878 1E6C  
                              l3958 1A34                                l3984 212A  
                              l3898 2024                                l3996 10D6  
                              _LATA 000F89                                _LATB 000F8A  
                              _LATC 000F8B                                _LATD 000F8C  
                              _LATE 000F8D                                u4130 1E78  
                              u4301 1096                                u4230 18A4  
                              u3350 2262                                u4311 10AA  
                              u4160 2030                                u4400 112E  
                              u4340 10C8                                u3438 20AE  
                              u3454 18E0                                u4190 1826  
                              u3439 20C2                                u3455 18DA  
                              u4511 14E8                                u3464 18FA  
                              u4440 116C                                u3465 18F4  
                              u4601 15DC                                u4370 10F0  
                              u4610 15E6                                u4531 1510  
                              u4620 1616                                u2918 1326  
                              u4470 11A0                                u2919 133A  
                              u3488 191E                                u2848 1254  
                              u2849 1268                                u4625 160E  
                              u3498 1942                                u2890 12D2  
                              u3499 1956                                u4660 1676  
                              u4740 1014                                u3598 1B2C  
                              u2958 138C                                u3599 1B40  
                              u2959 13A0                                u2888 12B8  
                              u3880 1AA4                                u2889 12CC  
                              _UCFG 000F6F                                _UCON 000F6D  
                      __CFG_PWRT$ON 000000               _ikb_key_is_ready2read 224A  
                              _main 169E                        ___ftpack@arg 000B  
                              _lock 00CB                                _itoa 2112  
                              _mpap 0046                        ___ftpack@exp 000E  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              _pump 00B5                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 0051                                _utoa 19FA  
   __end_of_disp7s_qtyDisp_writeInt 229C                                prodh 000FF4  
                              prodl 000FF3                                start 000E  
                    pulsonic_init@i 000B                       __CFG_IESO$OFF 000000  
                     __CFG_MCLRE$ON 000000                       ?_autoMode_job 0001  
                      ___ftmul@cntr 0020                __end_of_DISP7S_CHARS 080D  
                      ___param_bank 000000                        ___ftmul@sign 0021  
                     visMode_disp@c 0042                        ___fttol@exp1 0030  
                      ___fttol@lval 002C                       __CFG_PLLDIV$5 000000  
                             ?_main 0001                               ?_itoa 001A  
                   __end_of___ftadd 122E                               _CMCON 000FB4  
                             ?_utoa 0012                     __end_of___ftmul 15CC  
                             _T0CON 000FD5                     __end_of___fttol 169E  
                   __end_of___lwdiv 1EA8                     __end_of___lwmod 2058  
                             i2l135 1F22                               i2l450 2012  
                             i2l444 1E52                               _TMR0H 000FD7  
                             _TMR0L 000FD6                               _PORTC 000F82  
                             _PORTD 000F83                               _PORTE 000F84  
                     __CFG_USBDIV$2 000000                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
                    __CFG_FCMEN$OFF 000000                     __end_of_ikb_job 22FC  
                     ?_INTERRUPCION 0001                     _disp7s_mux0_off 2388  
                   _disp7s_mux1_off 2380                     _disp7s_mux2_off 2378  
                   _disp7s_mux3_off 2370                     _disp7s_mux4_off 2368  
                     ___ftpack@sign 000F                               pclath 000FFA  
                             tablat 000FF5                               plusw2 000FDB  
        __size_of_mpap_movetoNozzle 002E                               ttemp5 0052  
                             ttemp6 0055                               ttemp7 0059  
                             utoa@c 0019                     _disp7s_mux_init 209A  
                             utoa@v 0017                               status 000FD8  
                             wtemp8 0052         __size_of_ikey_is_accessible 004C  
  __end_of_disp7s_modeDisp_writeInt 22B6                       ?_ikey_parsing 0001  
              __size_of__mpap_step1 000A                __size_of__mpap_step2 000A  
              __size_of__mpap_step3 000A                __size_of__mpap_step4 000A  
                    ??_autoMode_job 0021                       _pulsonic_init 20DA  
                      ?_mpap_isIdle 0001                     __initialization 1CD8  
                      __end_of_main 1760                        __end_of_itoa 2144  
                      __end_of_utoa 1A8E  __size_of_disp7s_qtyDisp_writeFloat 001E  
                            ??_main 0044                       ___fttol@sign1 002B  
                            ??_itoa 001F                __end_of_disp7s_mux_Q 1964  
                            ??_utoa 0017                       mpap_do1step@i 0050  
                     __activetblptr 000002                      ??_INTERRUPCION 0005  
              __size_of_disp7s_init 005E                              _ADCON1 000FC1  
          __end_of_keyRead_pin_key0 2354            __end_of_keyRead_pin_key1 2310  
          __end_of_keyRead_pin_key2 2306            __end_of_keyRead_pin_key3 2362  
          __end_of_keyRead_pin_key4 235C              ?_ikb_key_is_ready2read 0001  
                  __end_of___ftpack 18C4                              i2l3400 1E34  
                            i2l3194 206E                              i2l3198 2076  
                            i2l3760 1F94                              i2l3764 1FA2  
                  __end_of___lwtoft 21EC                              _TMR0IE 007F95  
                            _TMR0IF 007F92                      ??_ikey_parsing 001F  
                    __CFG_VREGEN$ON 000000           __size_of_nozzle_isEnabled 0048  
                    ?_pulsonic_init 0001            __end_of_mpap_normal_mode 2016  
         disp7s_write_f@NUM_OF_DISP 0033            _error_requestToWriteDisp 00C8  
                  __end_of_ikb_init 1816                              ___ftge 1B88  
                            ___wmul 21A2                           ??___ftadd 0019  
                         ??___ftmul 0019                           ??___fttol 0026  
                         ??___lwdiv 000F                           ??___lwmod 000F  
                            clear_0 1D10                              clear_1 1D1C  
                            clear_2 1D28                    __end_of_mpap_job 1FCE  
                         ??_ikb_job 0024                              _strlen 21EC  
           __end_of_disp7s_mux0_off 238C             __end_of_disp7s_mux1_off 2384  
             ___ftmul@f3_as_product 001D             __end_of_disp7s_mux2_off 237C  
           __end_of_disp7s_mux3_off 2374             __end_of_disp7s_mux4_off 236C  
 __end_of_disp7s_qtyDisp_writeFloat 224A            __end_of_mpap_setupToTurn 2174  
                      __pdataCOMRAM 0050                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                 ikey_is_accessible@k 000D  
           __end_of_disp7s_mux_init 20DA                    __end_of_pump_job 1DA0  
                      ?_visMode_job 0001        __size_of_ikey_clear_all_flag 001C  
                        __accesstop 0060             __end_of__initialization 1D2E  
                   __CFG_PBADEN$OFF 000000                       ?_mpap_do1step 0001  
                        ___ftadd@f1 0013                          ___ftadd@f2 0016  
                        ___ftge@ff1 0016                          ___ftge@ff2 0019  
                     ___rparam_used 000001                          ___ftmul@f1 0013  
                        ___ftmul@f2 0016                          ___fttol@f1 0022  
                    __pcstackCOMRAM 0001                        __pidataBANK0 220E  
                     ?_mpap_homming 0001                        ?_pump_isIdle 0001  
                __size_of__mpap_off 000A                          ___lwtoft@c 0013  
                   visMode_disp@qty 003F   __size_of_disp7s_modeDisp_writeInt 001A  
         ?_disp7s_modeDisp_writeInt 0038                __end_of_autoMode_job 19FA  
                      _DISP7S_CHARS 080B                  __size_of_ikb_flush 0006  
                    mpap_do1step@KI 0001                          __pbssBANK0 0060  
                        __pbssBANK1 0100                  visMode_job@cod_ret 0043  
                    ??_mpap_do1step 0001                  __size_of_ikey_scan 01A0  
                   ??_pulsonic_init 000B         __end_of_mpap_setupToHomming 22C8  
                    ??_mpap_homming 0002                             ?___ftge 0016  
              __end_of_INTERRUPCION 1F3E                  __size_of_mpap_sych 0082  
                           ?___wmul 000B               __size_of_disp7s_mux_Q 00A0  
              __size_of_mpap_isIdle 000E                  mpap_movetoNozzle@n 0015  
                   disp7s_write_f@I 00F5                     disp7s_write_f@i 00FB  
                   disp7s_write_i@i 0037            ?_disp7s_qtyDisp_writeInt 0038  
                        _disp7s_job 1B10                          _disp7s_mux 00CD  
                         ?___ftpack 000B                             ?_strlen 000B  
                         ?___lwtoft 0013             __size_of_disp7s_mux0_on 0004  
           __size_of_disp7s_mux1_on 0004             __size_of_disp7s_mux2_on 0004  
           __size_of_disp7s_mux3_on 0004             __size_of_disp7s_mux4_on 0004  
                  ?_disp7s_mux0_off 0001                    ?_disp7s_mux1_off 0001  
                  ?_disp7s_mux2_off 0001                    ?_disp7s_mux3_off 0001  
                  ?_disp7s_mux4_off 0001                __end_of_ikey_parsing 0E3E  
           __size_of_disp7s_write_f 0248             __size_of_disp7s_write_i 010A  
                        _disp_owner 00C9                    ?_disp7s_mux_init 0001  
                         ?_ikb_init 0001                   disp7s_write_f@num 0034  
                 disp7s_write_i@num 0023                   __end_of__mpap_off 234C  
                      _disp7s_mux_Q 18C4                    _nozzle_isEnabled 1F3E  
                         ?_mpap_job 0001                             __Hparam 0000  
                           __Lparam 0000         disp7s_modeDisp_writeInt@num 0038  
         disp7s_write_i@NUM_OF_DISP 0022                   __end_of_ikb_flush 2368  
                   __size_of___ftge 0074                             ___ftadd 1086  
                   __size_of___wmul 0026                             ___ftmul 14D8  
                           ___fttol 15CC                   pump_setTick@ticks 000B  
                           ___lwdiv 1E56                           ?_pump_job 0001  
                           ___lwmod 2016                        __psmallconst 0800  
                           __pcinit 1CD8                          ??___ftpack 0010  
                           __ramtop 0800                             __ptext0 169E  
                           __ptext1 1BFC                             __ptext2 1C6E  
                           __ptext3 2282                             __ptext4 222C  
                           __ptext5 0E3E                             __ptext6 15CC  
                           __ptext7 14D8                             __ptext8 1086  
                           __ptext9 229C                   __end_of_ikey_scan 13CE  
                           _ikb_job 22F2                          ??___lwtoft 0016  
                   __size_of_strlen 0022                             _group_x 00B0  
          _error_grantedToWriteDisp 00C7             ??_ikb_key_is_ready2read 000B  
                           _visMode 00B8                   __end_of_mpap_sych 1B10  
           mpap_normal_mode@cod_ret 0002                          ??_ikb_init 000B  
                    __pintcode_body 1EF4                end_of_initialization 1D2E  
        __end_of_ikey_is_accessible 1EF4                   ?_keyRead_pin_key0 0001  
                 ?_keyRead_pin_key1 0001                   ?_keyRead_pin_key2 0001  
                 ?_keyRead_pin_key3 0001                   ?_keyRead_pin_key4 0001  
                     ??__mpap_step1 0001                       ??__mpap_step2 0001  
                     ??__mpap_step3 0001                       ??__mpap_step4 0001  
              __size_of_visMode_job 0072                             itoa@buf 001A  
                           itoa@val 001B                       __Lmediumconst 0000  
                           int_func 1EF4                  ??_keyRead_pin_key0 000B  
                ??_keyRead_pin_key1 000B                  ??_keyRead_pin_key2 000B  
                ??_keyRead_pin_key3 000B                  ??_keyRead_pin_key4 000B  
               errorHandler_queue@c 00BC                 errorHandler_queue@i 00C2  
                        ??_mpap_job 0004                   ?_mpap_normal_mode 0001  
                   main@c_access_kb 0044                             postdec1 000FE5  
                           postdec2 000FDD                  ??_mpap_normal_mode 0002  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE              ikb_key_is_ready2read@k 000B  
                        ??_pump_job 000B                             utoa@buf 0012  
                           utoa@val 0013                         ?_disp7s_job 0001  
               _ikey_clear_all_flag 2266                             strlen@s 000B  
                     ?_visMode_disp 0001                       ?_visMode_init 0001  
                      _machineState 00CA                __size_of_pump_isIdle 0010  
             __size_of_autoMode_job 0096                __end_of_mpap_do1step 209A  
                     ??_disp7s_init 000C                ikey_clear_all_flag@i 000B  
                 ?_mpap_setupToTurn 0011                  ??_mpap_setupToTurn 0013  
              __end_of_mpap_homming 1E56                ?_ikey_clear_all_flag 0001  
      disp7s_qtyDisp_writeFloat@num 003C                 disp7s_write_f@pDisp 0031  
               disp7s_write_i@pDisp 0020               __size_of_INTERRUPCION 1F36  
                       ___ftmul@exp 001C                        _autoMode_job 1964  
               __end_of__mpap_step1 2338                 __end_of__mpap_step2 232E  
               __end_of__mpap_step3 2324                 __end_of__mpap_step4 2342  
               __end_of_DISP7S_NUMS 080B                      __end_of___ftge 1BFC  
   mpap_setupToTurn@numSteps_tomove 0011                      ??_visMode_disp 003F  
                    ??_visMode_init 000B               __size_of_ikey_parsing 0630  
                    __end_of___wmul 21C8                       __pidataCOMRAM 2390  
                    _disp7s_mux0_on 2384                      _disp7s_mux1_on 237C  
                    _disp7s_mux2_on 2374                      _disp7s_mux3_on 236C  
                    _disp7s_mux4_on 238C                      __end_of_strlen 220E  
               start_initialization 1CD8          ?_disp7s_qtyDisp_writeFloat 003C  
                     ?_pump_setTick 000B                      _disp7s_write_f 0E3E  
                    _disp7s_write_i 13CE                        _INTERRUPCION 0008  
               __end_of_disp7s_init 1DFE               ??_ikey_clear_all_flag 000B  
                        ikey_scan@k 000C                 __size_of_disp7s_job 0078  
                      _ikey_parsing 080E                            ??___ftge 001C  
                          ??___wmul 000F                         __pdataBANK0 00CD  
            __end_of_disp7s_mux0_on 2388              __end_of_disp7s_mux1_on 2380  
            __end_of_disp7s_mux2_on 2378              __end_of_disp7s_mux3_on 2370  
            __end_of_disp7s_mux4_on 2390                            ??_strlen 000D  
            __end_of_disp7s_write_f 1086              __end_of_disp7s_write_i 14D8  
                 __size_of___ftpack 00AE            __end_of_nozzle_isEnabled 1F86  
                    ??_pump_setTick 000D                         __pbssCOMRAM 0046  
                 __size_of___lwtoft 0024                       __pcstackBANK0 00EB  
        disp7s_qtyDisp_writeInt@num 0038                    disp7s_mux_init@i 000B  
                      mpap_sych@sm0 00C0    __size_of_disp7s_qtyDisp_writeInt 001A  
                     ikey_parsing@k 0023                   __size_of_ikb_init 00B6  
                       __mpap_step1 232E                         __mpap_step2 2324  
                       __mpap_step3 231A                         __mpap_step4 2338  
                       _DISP7S_NUMS 0801                          mpap_sych@c 00BF  
             __end_of_pulsonic_init 2112                           __mpap_off 2342  
                     ??_mpap_isIdle 000B                    ___lwdiv@dividend 000B  
                 __size_of_mpap_job 0048                           __pintcode 0008  
             __size_of_mpap_do1step 0042                            ?___ftadd 0013  
                          ?___ftmul 0013                            ?___fttol 0022  
                          ?___lwdiv 000B                            ?___lwmod 000B  
          _disp7s_modeDisp_writeInt 229C                     ?_disp7s_mux0_on 0001  
                   ?_disp7s_mux1_on 0001                     ?_disp7s_mux2_on 0001  
                   ?_disp7s_mux3_on 0001                     ?_disp7s_mux4_on 0001  
      __size_of_mpap_setupToHomming 0012                           _ikb_flush 2362  
                 __size_of_pump_job 0064                            ?_ikb_job 0001  
                  disp7s_write_f@pi 00F7                    disp7s_write_i@pi 0034  
                       __smallconst 0800               __size_of_mpap_homming 0058  
                         _main_flag 004F                     ?_disp7s_write_f 0031  
                   ?_disp7s_write_i 0020                         _disp7s_init 1DA0  
                         _ikey_scan 122E      __size_of_ikb_key_is_ready2read 001C  
                  ___lwdiv@quotient 0010       __end_of_ikb_key_is_ready2read 2266  
          __size_of_disp7s_mux0_off 0004            __size_of_disp7s_mux1_off 0004  
          __size_of_disp7s_mux2_off 0004            __size_of_disp7s_mux3_off 0004  
          __size_of_disp7s_mux4_off 0004                __end_of_visMode_disp 1CD8  
              __end_of_visMode_init 22F2                           _mpap_step 00E1  
                         _mpap_sych 1A8E                      ___wmul@product 000F  
                      _mpap_do1step 2058            __size_of_disp7s_mux_init 0040  
                        ?__mpap_off 0001                            i2u402_48 1FB4  
                          i2u402_49 1FC8                            i2u282_48 2086  
                _ikey_is_accessible 1EA8                        _mpap_homming 1DFE  
         __size_of_keyRead_pin_key0 0008           __size_of_keyRead_pin_key1 000A  
         __size_of_keyRead_pin_key2 000A           __size_of_keyRead_pin_key3 0006  
         __size_of_keyRead_pin_key4 0008                        ??_disp7s_job 0013  
               __end_of_mpap_isIdle 22E6                          ?_ikb_flush 0001  
                 ___wmul@multiplier 000B                 ?_ikey_is_accessible 0001  
                disp7s_write_f@buff 00EB                           ikb_init@i 000B  
         __size_of_mpap_normal_mode 0048                  disp7s_write_i@buff 002A  
                        ?_ikey_scan 0001                       ??_visMode_job 0043  
                         copy_data0 1CEC                 mpap_homming@cod_ret 0003  
                        ?_mpap_sych 0001                ??_ikey_is_accessible 000B  
                __end_of_disp7s_job 1B88           __size_of_mpap_setupToTurn 0030  
                          __Hrparam 0000                __end_of_pump_setTick 231A  
                          __Lrparam 0000                check_startSignal@sm0 00C6  
              check_startSignal@sm1 00C5                       ??_pump_isIdle 000B  
                  __size_of___ftadd 01A8                    __size_of___ftmul 00F4  
                  __size_of___fttol 00D2                    __size_of___lwdiv 0052  
                  __size_of___lwmod 0042                            ___ftpack 1816  
                          ___lwtoft 21C8                    __size_of_ikb_job 000A  
                     disp7s_mux_Q@i 0012                       disp7s_mux_Q@q 0011  
       ??_disp7s_qtyDisp_writeFloat 003F               errorHandler_queue@sm0 00C1  
                   ___lwdiv@divisor 000D             _disp7s_qtyDisp_writeInt 2282  
                 check_oilLevel@sm0 00C4                   check_oilLevel@sm1 00C3  
                   ___lwdiv@counter 000F                            __ptext10 13CE  
                          __ptext11 21EC                            __ptext20 1A8E  
                          __ptext12 2112                            __ptext21 22F2  
                          __ptext13 19FA                            __ptext30 21C8  
                          __ptext22 122E                            __ptext14 2016  
                          __ptext31 1816                            __ptext23 235C  
                          __ptext15 1E56                            __ptext40 236C  
                          __ptext32 1760                            __ptext24 22FC  
                          __ptext16 224A                            __ptext41 2370  
                          __ptext33 2362                            __ptext25 2306  
                          __ptext17 22E6                            __ptext50 2310  
                          __ptext42 2374                            __ptext34 2266  
                          __ptext26 234C                            __ptext18 1D3C  
                          __ptext51 22C8                            __ptext43 2378  
                          __ptext35 1B10                            __ptext27 2354  
                          __ptext19 20DA                            __ptext60 1F86  
                          __ptext52 1F3E                            __ptext44 237C  
                          __ptext36 18C4                            __ptext28 080E  
                          __ptext61 1FCE                            __ptext53 1B88  
                          __ptext45 2380                            __ptext37 1DA0  
                          __ptext29 1EA8                            __ptext62 1DFE  
                          __ptext54 22B6                            __ptext46 2384  
                          __ptext38 209A                            __ptext63 2058  
                          __ptext55 2174                            __ptext47 2388  
                          __ptext39 2368                            __ptext64 231A  
                          __ptext56 2144                            __ptext48 238C  
                          __ptext65 2324                            __ptext57 21A2  
                          __ptext49 1964                            __ptext66 232E  
                          __ptext58 22D8                            __ptext67 2338  
                          __ptext68 2342                            __ptext69 0000  
                          _ikb_init 1760                _mpap_setupToTurn$427 0013  
                          _autoMode 00BA                       __size_of_main 00C2  
                     __size_of_itoa 0032                       __size_of_utoa 0094  
               __end_of_visMode_job 1C6E                            _isr_flag 00CC  
                          _mpap_job 1F86                            _mpap_off 00E9  
                 ??_disp7s_mux0_off 000B                   ??_disp7s_mux1_off 000B  
                 ??_disp7s_mux2_off 000B                   ??_disp7s_mux3_off 000B  
                       ??__mpap_off 0001                   ??_disp7s_mux4_off 000B  
                 main@c_access_disp 0045                         _mpap_isIdle 22D8  
                          int$flags 0051                   ??_disp7s_mux_init 000B  
                          _pump_job 1D3C                            _pulsonic 0100  
                       ??_ikb_flush 000C                   nozzle_isEnabled@n 001F  
             __CFG_CPUDIV$OSC1_PLL2 000000                 __end_of_pump_isIdle 22D8  
       __end_of_ikey_clear_all_flag 2282                   ?_nozzle_isEnabled 001F  
                         pump_job@c 00BE                         ??_ikey_scan 000B  
             __size_of_visMode_disp 006A                            itoa@base 001D  
             __size_of_visMode_init 000C                  ??_nozzle_isEnabled 0021  
                      disp7s_job@pq 0015                        disp7s_init@i 000C  
                          intlevel2 0000                 _mpap_setupToHomming 22B6  
                       ??_mpap_sych 000B                    ___lwmod@dividend 000B  
                      ?__mpap_step1 0001                        ?__mpap_step2 0001  
                      ?__mpap_step3 0001                        ?__mpap_step4 0001  
                     ?_disp7s_mux_Q 0001          ??_disp7s_modeDisp_writeInt 003A  
                 _mpap_movetoNozzle 2174           _disp7s_qtyDisp_writeFloat 222C  
                  ??_disp7s_mux0_on 000B                    ??_disp7s_mux1_on 000B  
                  ??_disp7s_mux2_on 000B                    ??_disp7s_mux3_on 000B  
                  ??_disp7s_mux4_on 000B                  ?_mpap_movetoNozzle 0001  
                  _keyRead_pin_key0 234C                    _keyRead_pin_key1 2306  
                  _keyRead_pin_key2 22FC                    _keyRead_pin_key3 235C  
                  _keyRead_pin_key4 2354                    ??_disp7s_write_f 0037  
                  ??_disp7s_write_i 0025                ?_mpap_setupToHomming 0001  
               ??_mpap_movetoNozzle 0015                        _visMode_disp 1C6E  
                      _visMode_init 22E6                            utoa@base 0015  
                       disp7s_job@q 004E           ??_disp7s_qtyDisp_writeInt 003A  
                      ?_disp7s_init 0001                     ___lwmod@divisor 000D  
                  _mpap_normal_mode 1FCE                            strlen@cp 000D  
                   ___lwmod@counter 000F                         _visMode_job 1BFC  
                __CFG_FOSC$HSPLL_HS 000000               __size_of_pump_setTick 000A  
                    ??_disp7s_mux_Q 000B           __end_of_mpap_movetoNozzle 21A2  
                  _mpap_setupToTurn 2144  
