

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 14 00:27:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,keep,inline
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,keep,inline
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,keep,inline
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,keep,inline
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,keep,inline
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,keep,inline
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,keep,inline
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           ; Version 2.05
    98                           ; Generated 20/12/2018 GMT
    99                           ; 
   100                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F4550 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	idataCOMRAM
   133  0025C2                     __pidataCOMRAM:
   134                           	opt callstack 0
   135                           
   136                           ;initializer for mpap_do1step@i
   137  0025C2  FF                 	db	255
   138                           
   139                           	psect	idataBANK0
   140  00241E                     __pidataBANK0:
   141                           	opt callstack 0
   142                           
   143                           ;initializer for _disp7s_mux
   144  00241E  BA                 	db	low _disp7s_mux0_off
   145  00241F  25                 	db	high _disp7s_mux0_off
   146  002420  B6                 	db	low _disp7s_mux0_on
   147  002421  25                 	db	high _disp7s_mux0_on
   148  002422  B2                 	db	low _disp7s_mux1_off
   149  002423  25                 	db	high _disp7s_mux1_off
   150  002424  AE                 	db	low _disp7s_mux1_on
   151  002425  25                 	db	high _disp7s_mux1_on
   152  002426  AA                 	db	low _disp7s_mux2_off
   153  002427  25                 	db	high _disp7s_mux2_off
   154  002428  A6                 	db	low _disp7s_mux2_on
   155  002429  25                 	db	high _disp7s_mux2_on
   156  00242A  A2                 	db	low _disp7s_mux3_off
   157  00242B  25                 	db	high _disp7s_mux3_off
   158  00242C  9E                 	db	low _disp7s_mux3_on
   159  00242D  25                 	db	high _disp7s_mux3_on
   160  00242E  9A                 	db	low _disp7s_mux4_off
   161  00242F  25                 	db	high _disp7s_mux4_off
   162  002430  BE                 	db	low _disp7s_mux4_on
   163  002431  25                 	db	high _disp7s_mux4_on
   164                           
   165                           ;initializer for _mpap_step
   166  002432  66                 	db	low __mpap_step1
   167  002433  25                 	db	high __mpap_step1
   168  002434  5C                 	db	low __mpap_step2
   169  002435  25                 	db	high __mpap_step2
   170  002436  52                 	db	low __mpap_step3
   171  002437  25                 	db	high __mpap_step3
   172  002438  70                 	db	low __mpap_step4
   173  002439  25                 	db	high __mpap_step4
   174                           
   175                           ;initializer for _mpap_off
   176  00243A  7A                 	db	low __mpap_off
   177  00243B  25                 	db	high __mpap_off
   178                           
   179                           	psect	smallconst
   180  000800                     __psmallconst:
   181                           	opt callstack 0
   182  000800  00                 	db	0
   183  000801                     _DISP7S_NUMS:
   184                           	opt callstack 0
   185  000801  3F                 	db	63
   186  000802  06                 	db	6
   187  000803  5B                 	db	91
   188  000804  4F                 	db	79
   189  000805  66                 	db	102
   190  000806  6D                 	db	109
   191  000807  7C                 	db	124
   192  000808  07                 	db	7
   193  000809  7F                 	db	127
   194  00080A  67                 	db	103
   195  00080B                     __end_of_DISP7S_NUMS:
   196                           	opt callstack 0
   197  00080B                     _OIL_VISCOSITY:
   198                           	opt callstack 0
   199  00080B  16                 	db	22
   200  00080C  20                 	db	32
   201  00080D  2E                 	db	46
   202  00080E  44                 	db	68
   203  00080F                     __end_of_OIL_VISCOSITY:
   204                           	opt callstack 0
   205  00080F                     _DISP7S_CHARS:
   206                           	opt callstack 0
   207  00080F  00                 	db	0
   208  000810  40                 	db	64
   209  000811                     __end_of_DISP7S_CHARS:
   210                           	opt callstack 0
   211  0000                     _TRISB	set	3987
   212  0000                     _TRISA	set	3986
   213  0000                     _PORTE	set	3972
   214  0000                     _PORTD	set	3971
   215  0000                     _PORTC	set	3970
   216  0000                     _TRISC	set	3988
   217  0000                     _TRISD	set	3989
   218  0000                     _TRISE	set	3990
   219  0000                     _TMR0L	set	4054
   220  0000                     _TMR0H	set	4055
   221  0000                     _T0CON	set	4053
   222  0000                     _UCFG	set	3951
   223  0000                     _UCON	set	3949
   224  0000                     _CMCON	set	4020
   225  0000                     _ADCON1	set	4033
   226  0000                     _LATB	set	3978
   227  0000                     _LATE	set	3981
   228  0000                     _LATD	set	3980
   229  0000                     _LATC	set	3979
   230  0000                     _LATA	set	3977
   231  0000                     _TMR0IF	set	32658
   232  0000                     _GIE	set	32663
   233  0000                     _TMR0IE	set	32661
   234                           
   235                           ; #config settings
   236  000811  00                 	db	0	; dummy byte at the end
   237  0000                     
   238                           	psect	cinit
   239  001E40                     __pcinit:
   240                           	opt callstack 0
   241  001E40                     start_initialization:
   242                           	opt callstack 0
   243  001E40                     __initialization:
   244                           	opt callstack 0
   245                           
   246                           ; Initialize objects allocated to BANK0 (30 bytes)
   247                           ; load TBLPTR registers with __pidataBANK0
   248  001E40  0E1E               	movlw	low __pidataBANK0
   249  001E42  6EF6               	movwf	tblptrl,c
   250  001E44  0E24               	movlw	high __pidataBANK0
   251  001E46  6EF7               	movwf	tblptrh,c
   252  001E48  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   253  001E4A  6EF8               	movwf	tblptru,c
   254  001E4C  EE00  F0CB         	lfsr	0,__pdataBANK0
   255  001E50  EE10 F01E          	lfsr	1,30
   256  001E54                     copy_data0:
   257  001E54  0009               	tblrd		*+
   258  001E56  CFF5 FFEE          	movff	tablat,postinc0
   259  001E5A  50E5               	movf	postdec1,w,c
   260  001E5C  50E1               	movf	fsr1l,w,c
   261  001E5E  E1FA               	bnz	copy_data0
   262                           
   263                           ; Initialize objects allocated to COMRAM (1 bytes)
   264                           ; load TBLPTR registers with __pidataCOMRAM
   265  001E60  0EC2               	movlw	low __pidataCOMRAM
   266  001E62  6EF6               	movwf	tblptrl,c
   267  001E64  0E25               	movlw	high __pidataCOMRAM
   268  001E66  6EF7               	movwf	tblptrh,c
   269  001E68  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   270  001E6A  6EF8               	movwf	tblptru,c
   271  001E6C  0009               	tblrd		*+	;fetch initializer
   272  001E6E  CFF5 F054          	movff	tablat,__pdataCOMRAM
   273                           
   274                           ; Clear objects allocated to BANK1 (64 bytes)
   275  001E72  EE01  F000         	lfsr	0,__pbssBANK1
   276  001E76  0E40               	movlw	64
   277  001E78                     clear_0:
   278  001E78  6AEE               	clrf	postinc0,c
   279  001E7A  06E8               	decf	wreg,f,c
   280  001E7C  E1FD               	bnz	clear_0
   281                           
   282                           ; Clear objects allocated to BANK0 (107 bytes)
   283  001E7E  EE00  F060         	lfsr	0,__pbssBANK0
   284  001E82  0E6B               	movlw	107
   285  001E84                     clear_1:
   286  001E84  6AEE               	clrf	postinc0,c
   287  001E86  06E8               	decf	wreg,f,c
   288  001E88  E1FD               	bnz	clear_1
   289                           
   290                           ; Clear objects allocated to COMRAM (12 bytes)
   291  001E8A  EE00  F048         	lfsr	0,__pbssCOMRAM
   292  001E8E  0E0C               	movlw	12
   293  001E90                     clear_2:
   294  001E90  6AEE               	clrf	postinc0,c
   295  001E92  06E8               	decf	wreg,f,c
   296  001E94  E1FD               	bnz	clear_2
   297  001E96                     end_of_initialization:
   298                           	opt callstack 0
   299  001E96                     __end_of__initialization:
   300                           	opt callstack 0
   301  001E96  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   302  001E98  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   303  001E9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   304  001E9C  6EF8               	movwf	tblptru,c
   305  001E9E  0100               	movlb	0
   306  001EA0  EFD3  F009         	goto	_main	;jump to C main() function
   307                           
   308                           	psect	bssCOMRAM
   309  000048                     __pbssCOMRAM:
   310                           	opt callstack 0
   311  000048                     _mpap:
   312                           	opt callstack 0
   313  000048                     	ds	8
   314  000050                     _autoMode:
   315                           	opt callstack 0
   316  000050                     	ds	2
   317  000052                     disp7s_job@q:
   318                           	opt callstack 0
   319  000052                     	ds	1
   320  000053                     mpap_sych@sm0:
   321                           	opt callstack 0
   322  000053                     	ds	1
   323                           
   324                           	psect	dataCOMRAM
   325  000054                     __pdataCOMRAM:
   326                           	opt callstack 0
   327  000054                     mpap_do1step@i:
   328                           	opt callstack 0
   329  000054                     	ds	1
   330                           
   331                           	psect	bssBANK0
   332  000060                     __pbssBANK0:
   333                           	opt callstack 0
   334  000060                     _key:
   335                           	opt callstack 0
   336  000060                     	ds	80
   337  0000B0                     _group_x:
   338                           	opt callstack 0
   339  0000B0                     	ds	5
   340  0000B5                     _pump:
   341                           	opt callstack 0
   342  0000B5                     	ds	3
   343  0000B8                     _visMode:
   344                           	opt callstack 0
   345  0000B8                     	ds	2
   346  0000BA                     	ds	2
   347  0000BC                     pump_job@c:
   348                           	opt callstack 0
   349  0000BC                     	ds	1
   350  0000BD                     mpap_sych@c:
   351                           	opt callstack 0
   352  0000BD                     	ds	1
   353  0000BE                     	ds	1
   354  0000BF                     	ds	1
   355  0000C0                     	ds	1
   356  0000C1                     	ds	1
   357  0000C2                     	ds	1
   358  0000C3                     	ds	1
   359  0000C4                     _error_grantedToWriteDisp:
   360                           	opt callstack 0
   361  0000C4                     	ds	1
   362  0000C5                     _error_requestToWriteDisp:
   363                           	opt callstack 0
   364  0000C5                     	ds	1
   365  0000C6                     _disp_owner:
   366                           	opt callstack 0
   367  0000C6                     	ds	1
   368  0000C7                     _machState:
   369                           	opt callstack 0
   370  0000C7                     	ds	1
   371  0000C8                     _unlock:
   372                           	opt callstack 0
   373  0000C8                     	ds	1
   374  0000C9                     _main_flag:
   375                           	opt callstack 0
   376  0000C9                     	ds	1
   377  0000CA                     _isr_flag:
   378                           	opt callstack 0
   379  0000CA                     	ds	1
   380                           
   381                           	psect	dataBANK0
   382  0000CB                     __pdataBANK0:
   383                           	opt callstack 0
   384  0000CB                     _disp7s_mux:
   385                           	opt callstack 0
   386  0000CB                     	ds	20
   387  0000DF                     _mpap_step:
   388                           	opt callstack 0
   389  0000DF                     	ds	8
   390  0000E7                     _mpap_off:
   391                           	opt callstack 0
   392  0000E7                     	ds	2
   393                           
   394                           	psect	bssBANK1
   395  000100                     __pbssBANK1:
   396                           	opt callstack 0
   397  000100                     _pulsonic:
   398                           	opt callstack 0
   399  000100                     	ds	64
   400                           
   401                           	psect	cstackBANK0
   402  0000E9                     __pcstackBANK0:
   403                           	opt callstack 0
   404  0000E9                     disp7s_write_f@buff:
   405                           	opt callstack 0
   406                           
   407                           ; 10 bytes @ 0x0
   408  0000E9                     	ds	10
   409  0000F3                     disp7s_write_f@I:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0xA
   413  0000F3                     	ds	2
   414  0000F5                     disp7s_write_f@pi:
   415                           	opt callstack 0
   416                           
   417                           ; 1 bytes @ 0xC
   418  0000F5                     	ds	1
   419  0000F6                     disp7s_write_f@K10MULT:
   420                           	opt callstack 0
   421                           
   422                           ; 3 bytes @ 0xD
   423  0000F6                     	ds	3
   424  0000F9                     disp7s_write_f@i:
   425                           	opt callstack 0
   426                           
   427                           ; 1 bytes @ 0x10
   428  0000F9                     	ds	1
   429                           
   430                           	psect	cstackCOMRAM
   431  000001                     __pcstackCOMRAM:
   432                           	opt callstack 0
   433  000001                     mpap_do1step@KI:
   434                           	opt callstack 0
   435                           
   436                           ; 1 bytes @ 0x0
   437  000001                     	ds	1
   438  000002                     ??_mpap_homming:
   439  000002                     mpap_normal_mode@cod_ret:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x1
   443  000002                     	ds	1
   444  000003                     mpap_homming@cod_ret:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x2
   448  000003                     	ds	1
   449  000004                     
   450                           ; 1 bytes @ 0x3
   451  000004                     	ds	1
   452  000005                     ??_INTERRUPCION:
   453                           
   454                           ; 1 bytes @ 0x4
   455  000005                     	ds	6
   456  00000B                     ??_ikey_is_accessible:
   457  00000B                     ??_disp7s_mux_Q:
   458  00000B                     ?_strlen:
   459                           	opt callstack 0
   460  00000B                     ?___wmul:
   461                           	opt callstack 0
   462  00000B                     ?___lwdiv:
   463                           	opt callstack 0
   464  00000B                     ?___lwmod:
   465                           	opt callstack 0
   466  00000B                     ?___ftpack:
   467                           	opt callstack 0
   468  00000B                     ikb_init@i:
   469                           	opt callstack 0
   470  00000B                     ikb_key_is_ready2read@k:
   471                           	opt callstack 0
   472  00000B                     ikb_key_was_read@k:
   473                           	opt callstack 0
   474  00000B                     pulsonic_init@i:
   475                           	opt callstack 0
   476  00000B                     disp7s_mux_init@i:
   477                           	opt callstack 0
   478  00000B                     visMode_init@numVista:
   479                           	opt callstack 0
   480  00000B                     strlen@s:
   481                           	opt callstack 0
   482  00000B                     pump_setTick@ticks:
   483                           	opt callstack 0
   484  00000B                     disp7s_off@pDisp:
   485                           	opt callstack 0
   486  00000B                     ___wmul@multiplier:
   487                           	opt callstack 0
   488  00000B                     ___lwdiv@dividend:
   489                           	opt callstack 0
   490  00000B                     ___lwmod@dividend:
   491                           	opt callstack 0
   492  00000B                     ___ftpack@arg:
   493                           	opt callstack 0
   494                           
   495                           ; 3 bytes @ 0xA
   496  00000B                     	ds	1
   497  00000C                     ikey_scan@k:
   498                           	opt callstack 0
   499  00000C                     disp7s_init@i:
   500                           	opt callstack 0
   501  00000C                     autoMode_kb@cod_ret:
   502                           	opt callstack 0
   503                           
   504                           ; 1 bytes @ 0xB
   505  00000C                     	ds	1
   506  00000D                     ikey_is_accessible@k:
   507                           	opt callstack 0
   508  00000D                     disp7s_off@NUM_OF_DISP:
   509                           	opt callstack 0
   510  00000D                     strlen@cp:
   511                           	opt callstack 0
   512  00000D                     ___wmul@multiplicand:
   513                           	opt callstack 0
   514  00000D                     ___lwdiv@divisor:
   515                           	opt callstack 0
   516  00000D                     ___lwmod@divisor:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0xC
   520  00000D                     	ds	1
   521  00000E                     ??_disp7s_off:
   522  00000E                     ___ftpack@exp:
   523                           	opt callstack 0
   524                           
   525                           ; 1 bytes @ 0xD
   526  00000E                     	ds	1
   527  00000F                     ___ftpack@sign:
   528                           	opt callstack 0
   529  00000F                     ___lwdiv@counter:
   530                           	opt callstack 0
   531  00000F                     ___lwmod@counter:
   532                           	opt callstack 0
   533  00000F                     ___wmul@product:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0xE
   537  00000F                     	ds	1
   538  000010                     ??___ftpack:
   539  000010                     disp7s_off@i:
   540                           	opt callstack 0
   541  000010                     ___lwdiv@quotient:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0xF
   545  000010                     	ds	1
   546  000011                     disp7s_mux_Q@q:
   547                           	opt callstack 0
   548  000011                     mpap_setupToTurn@numSteps_tomove:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x10
   552  000011                     	ds	1
   553  000012                     disp7s_mux_Q@i:
   554                           	opt callstack 0
   555  000012                     utoa@buf:
   556                           	opt callstack 0
   557                           
   558                           ; 1 bytes @ 0x11
   559  000012                     	ds	1
   560  000013                     ??_disp7s_job:
   561  000013                     ?___ftmul:
   562                           	opt callstack 0
   563  000013                     ?___lwtoft:
   564                           	opt callstack 0
   565  000013                     _mpap_setupToTurn$438:
   566                           	opt callstack 0
   567  000013                     ___lwtoft@c:
   568                           	opt callstack 0
   569  000013                     utoa@val:
   570                           	opt callstack 0
   571  000013                     ___ftmul@f1:
   572                           	opt callstack 0
   573                           
   574                           ; 3 bytes @ 0x12
   575  000013                     	ds	2
   576  000015                     mpap_movetoNozzle@n:
   577                           	opt callstack 0
   578  000015                     disp7s_job@pq:
   579                           	opt callstack 0
   580  000015                     utoa@base:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x14
   584  000015                     	ds	1
   585  000016                     ?___ftadd:
   586                           	opt callstack 0
   587  000016                     ___ftadd@f1:
   588                           	opt callstack 0
   589  000016                     ___ftge@ff1:
   590                           	opt callstack 0
   591  000016                     ___ftmul@f2:
   592                           	opt callstack 0
   593                           
   594                           ; 3 bytes @ 0x15
   595  000016                     	ds	1
   596  000017                     utoa@v:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x16
   600  000017                     	ds	2
   601  000019                     ??___ftmul:
   602  000019                     utoa@c:
   603                           	opt callstack 0
   604  000019                     ___ftadd@f2:
   605                           	opt callstack 0
   606  000019                     ___ftge@ff2:
   607                           	opt callstack 0
   608                           
   609                           ; 3 bytes @ 0x18
   610  000019                     	ds	1
   611  00001A                     itoa@buf:
   612                           	opt callstack 0
   613                           
   614                           ; 1 bytes @ 0x19
   615  00001A                     	ds	1
   616  00001B                     itoa@val:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x1A
   620  00001B                     	ds	1
   621  00001C                     ??___ftadd:
   622  00001C                     ??___ftge:
   623  00001C                     ___ftmul@exp:
   624                           	opt callstack 0
   625                           
   626                           ; 1 bytes @ 0x1B
   627  00001C                     	ds	1
   628  00001D                     itoa@base:
   629                           	opt callstack 0
   630  00001D                     ___ftmul@f3_as_product:
   631                           	opt callstack 0
   632                           
   633                           ; 3 bytes @ 0x1C
   634  00001D                     	ds	2
   635  00001F                     ??_ikey_parsing:
   636  00001F                     ___ftadd@sign:
   637                           	opt callstack 0
   638  00001F                     nozzle_isEnabled@n:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x1E
   642  00001F                     	ds	1
   643  000020                     ___ftadd@exp2:
   644                           	opt callstack 0
   645  000020                     ___ftmul@cntr:
   646                           	opt callstack 0
   647  000020                     disp7s_write_i@pDisp:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x1F
   651  000020                     	ds	1
   652  000021                     ___ftadd@exp1:
   653                           	opt callstack 0
   654  000021                     ___ftmul@sign:
   655                           	opt callstack 0
   656                           
   657                           ; 1 bytes @ 0x20
   658  000021                     	ds	1
   659  000022                     ?___fttol:
   660                           	opt callstack 0
   661  000022                     disp7s_write_i@NUM_OF_DISP:
   662                           	opt callstack 0
   663  000022                     ___fttol@f1:
   664                           	opt callstack 0
   665                           
   666                           ; 3 bytes @ 0x21
   667  000022                     	ds	1
   668  000023                     ikey_parsing@k:
   669                           	opt callstack 0
   670  000023                     disp7s_write_i@num:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x22
   674  000023                     	ds	1
   675  000024                     
   676                           ; 1 bytes @ 0x23
   677  000024                     	ds	1
   678  000025                     ??_disp7s_write_i:
   679                           
   680                           ; 1 bytes @ 0x24
   681  000025                     	ds	1
   682  000026                     ??___fttol:
   683                           
   684                           ; 1 bytes @ 0x25
   685  000026                     	ds	4
   686  00002A                     disp7s_write_i@buff:
   687                           	opt callstack 0
   688                           
   689                           ; 10 bytes @ 0x29
   690  00002A                     	ds	1
   691  00002B                     ___fttol@sign1:
   692                           	opt callstack 0
   693                           
   694                           ; 1 bytes @ 0x2A
   695  00002B                     	ds	1
   696  00002C                     ___fttol@lval:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0x2B
   700  00002C                     	ds	4
   701  000030                     ___fttol@exp1:
   702                           	opt callstack 0
   703                           
   704                           ; 1 bytes @ 0x2F
   705  000030                     	ds	1
   706  000031                     ?_pulsonic_getTotalSum_mlh:
   707                           	opt callstack 0
   708  000031                     disp7s_write_f@pDisp:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x30
   712  000031                     	ds	2
   713  000033                     disp7s_write_f@NUM_OF_DISP:
   714                           	opt callstack 0
   715  000033                     pulsonic_getTotalSum_mlh@acc:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x32
   719  000033                     	ds	1
   720  000034                     disp7s_write_i@pi:
   721                           	opt callstack 0
   722  000034                     disp7s_write_f@num:
   723                           	opt callstack 0
   724                           
   725                           ; 3 bytes @ 0x33
   726  000034                     	ds	1
   727  000035                     pulsonic_getTotalSum_mlh@i:
   728                           	opt callstack 0
   729  000035                     disp7s_write_i@K10MULT:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x34
   733  000035                     	ds	2
   734  000037                     ??_disp7s_write_f:
   735  000037                     disp7s_write_i@i:
   736                           	opt callstack 0
   737                           
   738                           ; 1 bytes @ 0x36
   739  000037                     	ds	1
   740  000038                     disp7s_qtyDisp_writeInt@num:
   741                           	opt callstack 0
   742  000038                     disp7s_modeDisp_writeInt@num:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x37
   746  000038                     	ds	2
   747  00003A                     
   748                           ; 1 bytes @ 0x39
   749  00003A                     	ds	2
   750  00003C                     disp7s_qtyDisp_writeFloat@num:
   751                           	opt callstack 0
   752                           
   753                           ; 3 bytes @ 0x3B
   754  00003C                     	ds	3
   755  00003F                     autoMode_init@init:
   756                           	opt callstack 0
   757  00003F                     visMode_disp@qty:
   758                           	opt callstack 0
   759                           
   760                           ; 3 bytes @ 0x3E
   761  00003F                     	ds	1
   762  000040                     _autoMode_init$1551:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x3F
   766  000040                     	ds	2
   767  000042                     visMode_disp@c:
   768                           	opt callstack 0
   769                           
   770                           ; 1 bytes @ 0x41
   771  000042                     	ds	1
   772  000043                     visMode_job@cod_ret:
   773                           	opt callstack 0
   774                           
   775                           ; 1 bytes @ 0x42
   776  000043                     	ds	1
   777  000044                     main@c_access_kb:
   778                           	opt callstack 0
   779                           
   780                           ; 1 bytes @ 0x43
   781  000044                     	ds	1
   782  000045                     main@c_access_disp:
   783                           	opt callstack 0
   784                           
   785                           ; 1 bytes @ 0x44
   786  000045                     	ds	1
   787  000046                     main@codapp:
   788                           	opt callstack 0
   789                           
   790                           ; 1 bytes @ 0x45
   791  000046                     	ds	1
   792  000047                     main@kb_mode:
   793                           	opt callstack 0
   794                           
   795                           ; 1 bytes @ 0x46
   796  000047                     	ds	1
   797                           
   798 ;;
   799 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   800 ;;
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 79 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  kb_mode         1   70[COMRAM] char 
   808 ;;  codapp          1   69[COMRAM] char 
   809 ;;  c_access_dis    1   68[COMRAM] char 
   810 ;;  c_access_kb     1   67[COMRAM] char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 3F/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         0       0       0       0       0       0       0       0       0
   821 ;;      Locals:         4       0       0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0
   823 ;;      Totals:         4       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:        4 bytes
   825 ;; Hardware stack levels required when called:   12
   826 ;; This function calls:
   827 ;;		_autoMode_init
   828 ;;		_autoMode_job
   829 ;;		_autoMode_kb
   830 ;;		_disp7s_init
   831 ;;		_disp7s_job
   832 ;;		_ikb_init
   833 ;;		_ikb_job
   834 ;;		_mpap_sych
   835 ;;		_pulsonic_init
   836 ;;		_pump_job
   837 ;;		_visMode_job
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text0
   844  0013A6                     __ptext0:
   845                           	opt callstack 0
   846  0013A6                     _main:
   847                           	opt callstack 19
   848                           
   849                           ;main.c: 81: int8_t c_access_kb=0;
   850                           
   851                           ;incstack = 0
   852  0013A6  0E00               	movlw	0
   853  0013A8  6E44               	movwf	main@c_access_kb,c
   854                           
   855                           ;main.c: 82: int8_t c_access_disp=0;
   856  0013AA  0E00               	movlw	0
   857  0013AC  6E45               	movwf	main@c_access_disp,c
   858                           
   859                           ;main.c: 83: int8_t kb_mode=0;
   860  0013AE  0E00               	movlw	0
   861  0013B0  6E47               	movwf	main@kb_mode,c
   862                           
   863                           ;main.c: 84: int8_t codapp;;main.c: 86: LATA = 0x00;
   864  0013B2  0E00               	movlw	0
   865  0013B4  6E89               	movwf	3977,c	;volatile
   866                           
   867                           ;main.c: 87: LATC = 0x00;
   868  0013B6  0E00               	movlw	0
   869  0013B8  6E8B               	movwf	3979,c	;volatile
   870                           
   871                           ;main.c: 88: LATD = 0x00;
   872  0013BA  0E00               	movlw	0
   873  0013BC  6E8C               	movwf	3980,c	;volatile
   874                           
   875                           ;main.c: 89: LATE = 0x00;
   876  0013BE  0E00               	movlw	0
   877  0013C0  6E8D               	movwf	3981,c	;volatile
   878                           
   879                           ;main.c: 90: LATB = 0x00;
   880  0013C2  0E00               	movlw	0
   881  0013C4  6E8A               	movwf	3978,c	;volatile
   882                           
   883                           ;main.c: 92: ADCON1 = 0x0F;
   884  0013C6  0E0F               	movlw	15
   885  0013C8  6EC1               	movwf	4033,c	;volatile
   886                           
   887                           ;main.c: 93: CMCON=0xCF;
   888  0013CA  0ECF               	movlw	207
   889  0013CC  6EB4               	movwf	4020,c	;volatile
   890                           
   891                           ;main.c: 96: UCON = 0;
   892  0013CE  0E00               	movlw	0
   893  0013D0  6E6D               	movwf	3949,c	;volatile
   894                           
   895                           ;main.c: 97: UCFG = 1<<3;
   896  0013D2  0E08               	movlw	8
   897  0013D4  6E6F               	movwf	3951,c	;volatile
   898                           
   899                           ;main.c: 98: T0CON = 0B10000111;
   900  0013D6  0E87               	movlw	135
   901  0013D8  6ED5               	movwf	4053,c	;volatile
   902                           
   903                           ;main.c: 100: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
   904  0013DA  68D7               	setf	4055,c	;volatile
   905                           
   906                           ;main.c: 101: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
   907  0013DC  0ED1               	movlw	209
   908  0013DE  6ED6               	movwf	4054,c	;volatile
   909                           
   910                           ;main.c: 102: TMR0IE = 1;
   911  0013E0  8AF2               	bsf	4082,5,c	;volatile
   912  0013E2  808D               	bsf	3981,0,c	;volatile
   913  0013E4  9096               	bcf	3990,0,c	;volatile
   914  0013E6  9095               	bcf	3989,0,c	;volatile
   915  0013E8  9295               	bcf	3989,1,c	;volatile
   916  0013EA  9495               	bcf	3989,2,c	;volatile
   917  0013EC  9695               	bcf	3989,3,c	;volatile
   918  0013EE  928B               	bcf	3979,1,c	;volatile
   919  0013F0  9294               	bcf	3988,1,c	;volatile
   920  0013F2  8296               	bsf	3990,1,c	;volatile
   921  0013F4  8094               	bsf	3988,0,c	;volatile
   922  0013F6  8496               	bsf	3990,2,c	;volatile
   923                           
   924                           ;main.c: 120: ikb_init();
   925  0013F8  ECC3  F00B         	call	_ikb_init	;wreg free
   926                           
   927                           ; BSR set to: 0
   928                           ;main.c: 121: disp7s_init();
   929  0013FC  ECB4  F00F         	call	_disp7s_init	;wreg free
   930                           
   931                           ;main.c: 122: pulsonic_init();
   932  001400  EC84  F00F         	call	_pulsonic_init	;wreg free
   933                           
   934                           ; BSR set to: 1
   935                           ;main.c: 125: unlock.kb = 1;
   936  001404  0100               	movlb	0	; () banked
   937  001406  81C8               	bsf	_unlock& (0+255),0,b
   938                           
   939                           ; BSR set to: 0
   940                           ;main.c: 126: unlock.autoMode = 1;
   941  001408  83C8               	bsf	_unlock& (0+255),1,b
   942                           
   943                           ; BSR set to: 0
   944                           ;main.c: 127: unlock.visMode = 0;
   945  00140A  95C8               	bcf	_unlock& (0+255),2,b
   946                           
   947                           ; BSR set to: 0
   948                           ;main.c: 129: autoMode_init(AUTOMODE_INIT_RESTART);
   949  00140C  0E00               	movlw	0
   950  00140E  ECEF  F010         	call	_autoMode_init
   951                           
   952                           ; BSR set to: 0
   953                           ;main.c: 130: disp_owner = DISPOWNER_AUTOMODE;
   954  001412  0E00               	movlw	0
   955  001414  6FC6               	movwf	_disp_owner& (0+255),b
   956                           
   957                           ; BSR set to: 0
   958                           ;main.c: 132: machState = MACHSTATE_RUNNING;
   959  001416  0E01               	movlw	1
   960  001418  6FC7               	movwf	_machState& (0+255),b
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 134: GIE = 1;
   964  00141A  8EF2               	bsf	4082,7,c	;volatile
   965  00141C                     l5192:
   966                           
   967                           ; BSR set to: 0
   968                           ;main.c: 136: {;main.c: 137: if (isr_flag.f1ms)
   969  00141C  A1CA               	btfss	_isr_flag& (0+255),0,b	;volatile
   970  00141E  D002               	goto	l110
   971                           
   972                           ; BSR set to: 0
   973                           ;main.c: 138: {;main.c: 139: isr_flag.f1ms = 0;
   974  001420  91CA               	bcf	_isr_flag& (0+255),0,b	;volatile
   975                           
   976                           ;main.c: 140: main_flag.f1ms = 1;
   977  001422  81C9               	bsf	_main_flag& (0+255),0,b	;volatile
   978  001424                     l110:
   979                           
   980                           ; BSR set to: 0
   981                           ;main.c: 141: };main.c: 143: if (main_flag.f1ms)
   982  001424  A1C9               	btfss	_main_flag& (0+255),0,b	;volatile
   983  001426  D029               	goto	l5222
   984                           
   985                           ; BSR set to: 0
   986                           ;main.c: 144: {;main.c: 145: if (++c_access_kb == 20)
   987  001428  2A44               	incf	main@c_access_kb,f,c
   988  00142A  0E14               	movlw	20
   989  00142C  1844               	xorwf	main@c_access_kb,w,c
   990  00142E  A4D8               	btfss	status,2,c
   991  001430  D01B               	goto	l5216
   992                           
   993                           ; BSR set to: 0
   994                           ;main.c: 146: {;main.c: 147: c_access_kb = 0;
   995  001432  0E00               	movlw	0
   996  001434  6E44               	movwf	main@c_access_kb,c
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 149: if (unlock.kb)
  1000  001436  A1C8               	btfss	_unlock& (0+255),0,b
  1001  001438  D017               	goto	l5216
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;main.c: 150: {;main.c: 151: ikb_job();
  1005  00143A  EC95  F012         	call	_ikb_job	;wreg free
  1006                           
  1007                           ;main.c: 153: if (kb_mode == KB_MODE_AUTOMODE)
  1008  00143E  5047               	movf	main@kb_mode,w,c
  1009  001440  A4D8               	btfss	status,2,c
  1010  001442  D00A               	goto	l5210
  1011                           
  1012                           ;main.c: 154: {;main.c: 155: if (autoMode_kb())
  1013  001444  EC6D  F00E         	call	_autoMode_kb	;wreg free
  1014  001448  0900               	iorlw	0
  1015  00144A  B4D8               	btfsc	status,2,c
  1016  00144C  D00D               	goto	l5216
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;main.c: 156: {;main.c: 157: kb_mode = KB_MODE_VISMODE;
  1020  00144E  0E01               	movlw	1
  1021  001450  6E47               	movwf	main@kb_mode,c
  1022                           
  1023                           ;main.c: 158: disp_owner = DISPOWNER_VISMODE;
  1024  001452  0E01               	movlw	1
  1025  001454  6FC6               	movwf	_disp_owner& (0+255),b
  1026  001456  D008               	goto	l5216
  1027  001458                     l5210:
  1028                           
  1029                           ;main.c: 161: else if (kb_mode == KB_MODE_VISMODE)
  1030  001458  0447               	decf	main@kb_mode,w,c
  1031  00145A  B4D8               	btfsc	status,2,c
  1032  00145C  D005               	goto	l5216
  1033                           
  1034                           ;main.c: 165: else;main.c: 166: {;main.c: 167: machState = MACHSTATE_CONFIG;
  1035  00145E  0E02               	movlw	2
  1036  001460  0100               	movlb	0	; () banked
  1037  001462  6FC7               	movwf	_machState& (0+255),b
  1038                           
  1039                           ;main.c: 168: machState = MACHSTATE_RUNNING;
  1040  001464  0E01               	movlw	1
  1041  001466  6FC7               	movwf	_machState& (0+255),b
  1042  001468                     l5216:
  1043                           
  1044                           ;main.c: 169: };main.c: 170: };main.c: 171: };main.c: 174: if (++c_access_disp == 3)
  1045  001468  2A45               	incf	main@c_access_disp,f,c
  1046  00146A  0E03               	movlw	3
  1047  00146C  1845               	xorwf	main@c_access_disp,w,c
  1048  00146E  A4D8               	btfss	status,2,c
  1049  001470  D004               	goto	l5222
  1050                           
  1051                           ;main.c: 175: {;main.c: 176: c_access_disp = 0;
  1052  001472  0E00               	movlw	0
  1053  001474  6E45               	movwf	main@c_access_disp,c
  1054                           
  1055                           ;main.c: 177: disp7s_job();
  1056  001476  ECAA  F00E         	call	_disp7s_job	;wreg free
  1057  00147A                     l5222:
  1058                           
  1059                           ;main.c: 178: };main.c: 179: };main.c: 184: if (machState == MACHSTATE_RUNNING)
  1060  00147A  0100               	movlb	0	; () banked
  1061  00147C  05C7               	decf	_machState& (0+255),w,b
  1062  00147E  A4D8               	btfss	status,2,c
  1063  001480  D014               	goto	l125
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;main.c: 185: {;main.c: 187: if (unlock.autoMode)
  1067  001482  B3C8               	btfsc	_unlock& (0+255),1,b
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;main.c: 188: {;main.c: 189: if (autoMode_job())
  1071  001484  EC60  F00D         	call	_autoMode_job	;wreg free
  1072                           
  1073                           ;main.c: 191: };main.c: 192: };main.c: 193: if (unlock.visMode)
  1074  001488  0100               	movlb	0	; () banked
  1075  00148A  A5C8               	btfss	_unlock& (0+255),2,b
  1076  00148C  D00E               	goto	l125
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;main.c: 194: {;main.c: 195: codapp = visMode_job();
  1080  00148E  EC75  F00C         	call	_visMode_job	;wreg free
  1081  001492  6E46               	movwf	main@codapp,c
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;main.c: 196: if (codapp == 1)
  1085  001494  0446               	decf	main@codapp,w,c
  1086  001496  A4D8               	btfss	status,2,c
  1087  001498  D008               	goto	l125
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;main.c: 197: {;main.c: 198: unlock.visMode = 0;
  1091  00149A  95C8               	bcf	_unlock& (0+255),2,b
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;main.c: 199: kb_mode = KB_MODE_AUTOMODE;
  1095  00149C  0E00               	movlw	0
  1096  00149E  6E47               	movwf	main@kb_mode,c
  1097                           
  1098                           ;main.c: 200: disp_owner = DISPOWNER_AUTOMODE;
  1099  0014A0  0E00               	movlw	0
  1100  0014A2  6FC6               	movwf	_disp_owner& (0+255),b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;main.c: 201: autoMode_init(AUTOMODE_INIT_CONTINUE);
  1104  0014A4  0E01               	movlw	1
  1105  0014A6  ECEF  F010         	call	_autoMode_init
  1106  0014AA                     l125:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;main.c: 217: };main.c: 218: };main.c: 220: pump_job();
  1110                           
  1111                           ; BSR set to: 0
  1112  0014AA  EC52  F00F         	call	_pump_job	;wreg free
  1113                           
  1114                           ;main.c: 221: mpap_sych();
  1115  0014AE  ECEE  F00D         	call	_mpap_sych	;wreg free
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;main.c: 224: main_flag.f1ms = 0;
  1119  0014B2  91C9               	bcf	_main_flag& (0+255),0,b	;volatile
  1120  0014B4  D7B3               	goto	l5192
  1121  0014B6                     __end_of_main:
  1122                           	opt callstack 0
  1123                           
  1124 ;; *************** function _visMode_job *****************
  1125 ;; Defined at:
  1126 ;;		line 20 in file "visualizerMode.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  cod_ret         1   66[COMRAM] char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      char 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 3F/0
  1137 ;;		On exit  : 3F/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0
  1141 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1143 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1144 ;;Total ram usage:        1 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:   11
  1147 ;; This function calls:
  1148 ;;		_ikb_key_is_ready2read
  1149 ;;		_ikb_key_was_read
  1150 ;;		_visMode_disp
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text1
  1157  0018EA                     __ptext1:
  1158                           	opt callstack 0
  1159  0018EA                     _visMode_job:
  1160                           	opt callstack 19
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;visualizerMode.c: 22: int8_t cod_ret = 0;
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;incstack = 0
  1167  0018EA  0E00               	movlw	0
  1168  0018EC  6E43               	movwf	visMode_job@cod_ret,c
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;visualizerMode.c: 25: if (ikb_key_is_ready2read(0))
  1172  0018EE  0E00               	movlw	0
  1173  0018F0  EC2D  F012         	call	_ikb_key_is_ready2read
  1174  0018F4  0900               	iorlw	0
  1175  0018F6  B4D8               	btfsc	status,2,c
  1176  0018F8  D010               	goto	l5034
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;visualizerMode.c: 26: {;visualizerMode.c: 27: ikb_key_was_read(0);
  1180  0018FA  0E00               	movlw	0
  1181  0018FC  EC55  F012         	call	_ikb_key_was_read
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;visualizerMode.c: 29: if (++visMode.numVista >= (8+1))
  1185  001900  2BB9               	incf	(_visMode+1)& (0+255),f,b
  1186  001902  51B9               	movf	(_visMode+1)& (0+255),w,b
  1187  001904  0A80               	xorlw	128
  1188  001906  0F77               	addlw	-137
  1189  001908  A0D8               	btfss	status,0,c
  1190  00190A  D005               	goto	l5032
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;visualizerMode.c: 30: {;visualizerMode.c: 31: visMode.numVista = 0x00;
  1194  00190C  0E00               	movlw	0
  1195  00190E  6FB9               	movwf	(_visMode+1)& (0+255),b
  1196                           
  1197                           ;visualizerMode.c: 32: cod_ret = 1;
  1198  001910  0E01               	movlw	1
  1199  001912  6E43               	movwf	visMode_job@cod_ret,c
  1200                           
  1201                           ;visualizerMode.c: 33: }
  1202  001914  D002               	goto	l5034
  1203  001916                     l5032:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;visualizerMode.c: 34: else;visualizerMode.c: 35: {;visualizerMode.c: 36: visMode.disp7s
      +                          _accessReq = 1;
  1207  001916  0E01               	movlw	1
  1208  001918  6FB8               	movwf	_visMode& (0+255),b
  1209  00191A                     l5034:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;visualizerMode.c: 37: };visualizerMode.c: 38: };visualizerMode.c: 40: if (ikb_key_is_re
      +                          ady2read(1))
  1213  00191A  0E01               	movlw	1
  1214  00191C  EC2D  F012         	call	_ikb_key_is_ready2read
  1215  001920  0900               	iorlw	0
  1216  001922  B4D8               	btfsc	status,2,c
  1217  001924  D00D               	goto	l5044
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;visualizerMode.c: 41: {;visualizerMode.c: 42: ikb_key_was_read(1);
  1221  001926  0E01               	movlw	1
  1222  001928  EC55  F012         	call	_ikb_key_was_read
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;visualizerMode.c: 44: if (--visMode.numVista < 0)
  1226  00192C  07B9               	decf	(_visMode+1)& (0+255),f,b
  1227  00192E  AFB9               	btfss	(_visMode+1)& (0+255),7,b
  1228  001930  D005               	goto	l5042
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;visualizerMode.c: 45: {;visualizerMode.c: 46: visMode.numVista = (8+1)-1;
  1232  001932  0E08               	movlw	8
  1233  001934  6FB9               	movwf	(_visMode+1)& (0+255),b
  1234                           
  1235                           ;visualizerMode.c: 47: cod_ret = 1;
  1236  001936  0E01               	movlw	1
  1237  001938  6E43               	movwf	visMode_job@cod_ret,c
  1238                           
  1239                           ;visualizerMode.c: 48: }
  1240  00193A  D002               	goto	l5044
  1241  00193C                     l5042:
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;visualizerMode.c: 49: else;visualizerMode.c: 50: {;visualizerMode.c: 51: visMode.disp7s
      +                          _accessReq = 1;
  1245  00193C  0E01               	movlw	1
  1246  00193E  6FB8               	movwf	_visMode& (0+255),b
  1247  001940                     l5044:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;visualizerMode.c: 52: };visualizerMode.c: 53: };visualizerMode.c: 54: if (ikb_key_is_re
      +                          ady2read(2))
  1251  001940  0E02               	movlw	2
  1252  001942  EC2D  F012         	call	_ikb_key_is_ready2read
  1253  001946  0900               	iorlw	0
  1254  001948  B4D8               	btfsc	status,2,c
  1255  00194A  D003               	goto	l838
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;visualizerMode.c: 55: {;visualizerMode.c: 56: ikb_key_was_read(2);
  1259  00194C  0E02               	movlw	2
  1260  00194E  EC55  F012         	call	_ikb_key_was_read
  1261  001952                     l838:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;visualizerMode.c: 58: };visualizerMode.c: 59: if (ikb_key_is_ready2read(3))
  1265  001952  0E03               	movlw	3
  1266  001954  EC2D  F012         	call	_ikb_key_is_ready2read
  1267  001958  0900               	iorlw	0
  1268  00195A  B4D8               	btfsc	status,2,c
  1269  00195C  D003               	goto	l839
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;visualizerMode.c: 60: {;visualizerMode.c: 61: ikb_key_was_read(3);
  1273  00195E  0E03               	movlw	3
  1274  001960  EC55  F012         	call	_ikb_key_was_read
  1275  001964                     l839:
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;visualizerMode.c: 63: };visualizerMode.c: 64: if (ikb_key_is_ready2read(4))
  1279  001964  0E04               	movlw	4
  1280  001966  EC2D  F012         	call	_ikb_key_is_ready2read
  1281  00196A  0900               	iorlw	0
  1282  00196C  B4D8               	btfsc	status,2,c
  1283  00196E  D003               	goto	l5052
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;visualizerMode.c: 65: {;visualizerMode.c: 66: ikb_key_was_read(4);
  1287  001970  0E04               	movlw	4
  1288  001972  EC55  F012         	call	_ikb_key_was_read
  1289  001976                     l5052:
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;visualizerMode.c: 68: };visualizerMode.c: 71: if ( visMode.disp7s_accessReq == 1)
  1293  001976  05B8               	decf	_visMode& (0+255),w,b
  1294  001978  A4D8               	btfss	status,2,c
  1295  00197A  D006               	goto	l5058
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;visualizerMode.c: 72: {;visualizerMode.c: 73: visMode_disp(visMode.numVista);
  1299  00197C  51B9               	movf	(_visMode+1)& (0+255),w,b
  1300  00197E  EC2F  F00E         	call	_visMode_disp
  1301                           
  1302                           ;visualizerMode.c: 74: visMode.disp7s_accessReq = 0;
  1303  001982  0E00               	movlw	0
  1304  001984  0100               	movlb	0	; () banked
  1305  001986  6FB8               	movwf	_visMode& (0+255),b
  1306  001988                     l5058:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;visualizerMode.c: 75: };visualizerMode.c: 77: return cod_ret;
  1310  001988  5043               	movf	visMode_job@cod_ret,w,c
  1311                           
  1312                           ; BSR set to: 0
  1313  00198A  0012               	return		;funcret
  1314  00198C                     __end_of_visMode_job:
  1315                           	opt callstack 0
  1316                           
  1317 ;; *************** function _visMode_disp *****************
  1318 ;; Defined at:
  1319 ;;		line 79 in file "visualizerMode.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  c               1    wreg     char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  c               1   65[COMRAM] char 
  1324 ;;  qty             3   62[COMRAM] char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 3F/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0
  1335 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1337 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1338 ;;Total ram usage:        4 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:   10
  1341 ;; This function calls:
  1342 ;;		_disp7s_modeDisp_writeInt
  1343 ;;		_disp7s_modeDisp_writeText_oil
  1344 ;;		_disp7s_qtyDisp_writeFloat
  1345 ;;		_disp7s_qtyDisp_writeInt
  1346 ;;		_disp7s_qtyDisp_writeText_OFF
  1347 ;; This function is called by:
  1348 ;;		_visMode_job
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text2
  1353  001C5E                     __ptext2:
  1354                           	opt callstack 0
  1355  001C5E                     _visMode_disp:
  1356                           	opt callstack 19
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;incstack = 0
  1360                           ;visMode_disp@c stored from wreg
  1361  001C5E  6E42               	movwf	visMode_disp@c,c
  1362                           
  1363                           ;visualizerMode.c: 81: double qty;;visualizerMode.c: 84: if (disp_owner == DISPOWNER_VIS
      +                          MODE)
  1364  001C60  0100               	movlb	0	; () banked
  1365  001C62  05C6               	decf	_disp_owner& (0+255),w,b
  1366  001C64  A4D8               	btfss	status,2,c
  1367  001C66  0012               	return	
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;visualizerMode.c: 85: {;visualizerMode.c: 86: disp7s_modeDisp_writeInt(c+1);
  1371  001C68  0E01               	movlw	1
  1372  001C6A  2442               	addwf	visMode_disp@c,w,c
  1373  001C6C  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  1374  001C6E  6AE8               	clrf	wreg,c
  1375  001C70  B0D8               	btfsc	status,0,c
  1376  001C72  2AE8               	incf	wreg,f,c
  1377  001C74  BE42               	btfsc	visMode_disp@c,7,c
  1378  001C76  06E8               	decf	wreg,f,c
  1379  001C78  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  1380  001C7A  EC48  F012         	call	_disp7s_modeDisp_writeInt	;wreg free
  1381                           
  1382                           ;visualizerMode.c: 88: if (c < 8)
  1383  001C7E  5042               	movf	visMode_disp@c,w,c
  1384  001C80  0A80               	xorlw	128
  1385  001C82  0F78               	addlw	-136
  1386  001C84  B0D8               	btfsc	status,0,c
  1387  001C86  D01F               	goto	l4836
  1388                           
  1389                           ;visualizerMode.c: 89: {;visualizerMode.c: 90: qty = pulsonic.nozzle[c].Q_mlh;
  1390  001C88  5042               	movf	visMode_disp@c,w,c
  1391  001C8A  0D06               	mullw	6
  1392  001C8C  0E06               	movlw	low (_pulsonic+6)
  1393  001C8E  24F3               	addwf	prodl,w,c
  1394  001C90  6ED9               	movwf	fsr2l,c
  1395  001C92  0E01               	movlw	high (_pulsonic+6)
  1396  001C94  20F4               	addwfc	prodh,w,c
  1397  001C96  6EDA               	movwf	fsr2h,c
  1398  001C98  CFDE F03F          	movff	postinc2,visMode_disp@qty
  1399  001C9C  CFDE F040          	movff	postinc2,visMode_disp@qty+1
  1400  001CA0  CFDD F041          	movff	postdec2,visMode_disp@qty+2
  1401                           
  1402                           ;visualizerMode.c: 91: if (qty == 0)
  1403  001CA4  503F               	movf	visMode_disp@qty,w,c
  1404  001CA6  1040               	iorwf	visMode_disp@qty+1,w,c
  1405  001CA8  1041               	iorwf	visMode_disp@qty+2,w,c
  1406  001CAA  A4D8               	btfss	status,2,c
  1407  001CAC  D003               	goto	l4834
  1408                           
  1409                           ;visualizerMode.c: 92: {;visualizerMode.c: 93: disp7s_qtyDisp_writeText_OFF();
  1410  001CAE  EC71  F012         	call	_disp7s_qtyDisp_writeText_OFF	;wreg free
  1411                           
  1412                           ;visualizerMode.c: 94: }
  1413  001CB2  0012               	return	
  1414  001CB4                     l4834:
  1415                           
  1416                           ;visualizerMode.c: 95: else;visualizerMode.c: 96: {;visualizerMode.c: 97: disp7s_qtyDisp
      +                          _writeFloat( qty );
  1417  001CB4  C03F  F03C         	movff	visMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  1418  001CB8  C040  F03D         	movff	visMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  1419  001CBC  C041  F03E         	movff	visMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  1420  001CC0  EC1E  F012         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  1421  001CC4  0012               	return	
  1422  001CC6                     l4836:
  1423                           
  1424                           ;visualizerMode.c: 100: else;visualizerMode.c: 101: {;visualizerMode.c: 102: disp7s_mode
      +                          Disp_writeText_oil();
  1425  001CC6  EC8F  F012         	call	_disp7s_modeDisp_writeText_oil	;wreg free
  1426                           
  1427                           ; BSR set to: 1
  1428                           ;visualizerMode.c: 103: disp7s_qtyDisp_writeInt( pulsonic.oil.viscosity );
  1429  001CCA  5136               	movf	(_pulsonic+54)& (0+255),w,b
  1430  001CCC  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  1431  001CCE  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  1432  001CD0  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  1433  001CD2  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  1434  001CD4  EC3B  F012         	call	_disp7s_qtyDisp_writeInt	;wreg free
  1435  001CD8  0012               	return		;funcret
  1436  001CDA                     __end_of_visMode_disp:
  1437                           	opt callstack 0
  1438                           
  1439 ;; *************** function _disp7s_qtyDisp_writeText_OFF *****************
  1440 ;; Defined at:
  1441 ;;		line 169 in file "display.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 3F/1
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1455 ;;      Params:         0       0       0       0       0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    5
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_visMode_disp
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text3
  1470  0024E2                     __ptext3:
  1471                           	opt callstack 0
  1472  0024E2                     _disp7s_qtyDisp_writeText_OFF:
  1473                           	opt callstack 23
  1474                           
  1475                           ;display.c: 171: pulsonic.disp7s.qty[2] =0x3F;
  1476                           
  1477                           ;incstack = 0
  1478  0024E2  0E3F               	movlw	63
  1479  0024E4  0101               	movlb	1	; () banked
  1480  0024E6  6F3D               	movwf	(_pulsonic+61)& (0+255),b
  1481                           
  1482                           ;display.c: 172: pulsonic.disp7s.qty[1] =0x71;
  1483  0024E8  0E71               	movlw	113
  1484  0024EA  6F3C               	movwf	(_pulsonic+60)& (0+255),b
  1485                           
  1486                           ;display.c: 173: pulsonic.disp7s.qty[0] =0x71;
  1487  0024EC  0E71               	movlw	113
  1488  0024EE  6F3B               	movwf	(_pulsonic+59)& (0+255),b
  1489                           
  1490                           ; BSR set to: 1
  1491  0024F0  0012               	return		;funcret
  1492  0024F2                     __end_of_disp7s_qtyDisp_writeText_OFF:
  1493                           	opt callstack 0
  1494                           
  1495 ;; *************** function _disp7s_qtyDisp_writeInt *****************
  1496 ;; Defined at:
  1497 ;;		line 281 in file "display.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  num             2   55[COMRAM] int 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 3F/1
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1511 ;;      Params:         2       0       0       0       0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1514 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1515 ;;Total ram usage:        2 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    9
  1518 ;; This function calls:
  1519 ;;		_disp7s_write_i
  1520 ;; This function is called by:
  1521 ;;		_visMode_disp
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text4
  1526  002476                     __ptext4:
  1527                           	opt callstack 0
  1528  002476                     _disp7s_qtyDisp_writeInt:
  1529                           	opt callstack 19
  1530                           
  1531                           ; BSR set to: 1
  1532                           ;display.c: 283: disp7s_write_i(pulsonic.disp7s.qty, 3, num);
  1533                           
  1534                           ; BSR set to: 1
  1535                           ;incstack = 0
  1536  002476  0E3B               	movlw	low (_pulsonic+59)
  1537  002478  6E20               	movwf	disp7s_write_i@pDisp,c
  1538  00247A  0E01               	movlw	high (_pulsonic+59)
  1539  00247C  6E21               	movwf	disp7s_write_i@pDisp+1,c
  1540  00247E  0E03               	movlw	3
  1541  002480  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  1542  002482  C038  F023         	movff	disp7s_qtyDisp_writeInt@num,disp7s_write_i@num
  1543  002486  C039  F024         	movff	disp7s_qtyDisp_writeInt@num+1,disp7s_write_i@num+1
  1544  00248A  EC5B  F00A         	call	_disp7s_write_i	;wreg free
  1545  00248E  0012               	return		;funcret
  1546  002490                     __end_of_disp7s_qtyDisp_writeInt:
  1547                           	opt callstack 0
  1548                           
  1549 ;; *************** function _disp7s_modeDisp_writeText_oil *****************
  1550 ;; Defined at:
  1551 ;;		line 164 in file "display.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 3F/1
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1568 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    5
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_visMode_disp
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text5
  1580  00251E                     __ptext5:
  1581                           	opt callstack 0
  1582  00251E                     _disp7s_modeDisp_writeText_oil:
  1583                           	opt callstack 23
  1584                           
  1585                           ;display.c: 166: pulsonic.disp7s.mode[1] =0x5C;
  1586                           
  1587                           ;incstack = 0
  1588  00251E  0E5C               	movlw	92
  1589  002520  0101               	movlb	1	; () banked
  1590  002522  6F3F               	movwf	(_pulsonic+63)& (0+255),b
  1591                           
  1592                           ;display.c: 167: pulsonic.disp7s.mode[0] =0x16;
  1593  002524  0E16               	movlw	22
  1594  002526  6F3E               	movwf	(_pulsonic+62)& (0+255),b
  1595                           
  1596                           ; BSR set to: 1
  1597  002528  0012               	return		;funcret
  1598  00252A                     __end_of_disp7s_modeDisp_writeText_oil:
  1599                           	opt callstack 0
  1600                           
  1601 ;; *************** function _disp7s_modeDisp_writeInt *****************
  1602 ;; Defined at:
  1603 ;;		line 285 in file "display.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  num             2   55[COMRAM] int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 3F/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1617 ;;      Params:         2       0       0       0       0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1620 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    9
  1624 ;; This function calls:
  1625 ;;		_disp7s_write_i
  1626 ;; This function is called by:
  1627 ;;		_visMode_disp
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text6
  1632  002490                     __ptext6:
  1633                           	opt callstack 0
  1634  002490                     _disp7s_modeDisp_writeInt:
  1635                           	opt callstack 19
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;display.c: 287: disp7s_write_i(pulsonic.disp7s.mode, 2, num);
  1639                           
  1640                           ; BSR set to: 1
  1641                           ;incstack = 0
  1642  002490  0E3E               	movlw	low (_pulsonic+62)
  1643  002492  6E20               	movwf	disp7s_write_i@pDisp,c
  1644  002494  0E01               	movlw	high (_pulsonic+62)
  1645  002496  6E21               	movwf	disp7s_write_i@pDisp+1,c
  1646  002498  0E02               	movlw	2
  1647  00249A  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  1648  00249C  C038  F023         	movff	disp7s_modeDisp_writeInt@num,disp7s_write_i@num
  1649  0024A0  C039  F024         	movff	disp7s_modeDisp_writeInt@num+1,disp7s_write_i@num+1
  1650  0024A4  EC5B  F00A         	call	_disp7s_write_i	;wreg free
  1651  0024A8  0012               	return		;funcret
  1652  0024AA                     __end_of_disp7s_modeDisp_writeInt:
  1653                           	opt callstack 0
  1654                           
  1655 ;; *************** function _disp7s_write_i *****************
  1656 ;; Defined at:
  1657 ;;		line 251 in file "display.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  pDisp           2   31[COMRAM] PTR unsigned char 
  1660 ;;		 -> pulsonic.disp7s(5), pulsonic(64), 
  1661 ;;  NUM_OF_DISP     1   33[COMRAM] char 
  1662 ;;  num             2   34[COMRAM] int 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  buff           10   41[COMRAM] unsigned char [10]
  1665 ;;  K10MULT         2   52[COMRAM] int 
  1666 ;;  i               1   54[COMRAM] char 
  1667 ;;  pi              1   51[COMRAM] char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 3E/1
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1677 ;;      Params:         5       0       0       0       0       0       0       0       0
  1678 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1679 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1680 ;;      Totals:        24       0       0       0       0       0       0       0       0
  1681 ;;Total ram usage:       24 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    8
  1684 ;; This function calls:
  1685 ;;		___wmul
  1686 ;;		_itoa
  1687 ;;		_strlen
  1688 ;; This function is called by:
  1689 ;;		_disp7s_qtyDisp_writeInt
  1690 ;;		_disp7s_modeDisp_writeInt
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text7
  1695  0014B6                     __ptext7:
  1696                           	opt callstack 0
  1697  0014B6                     _disp7s_write_i:
  1698                           	opt callstack 19
  1699                           
  1700                           ;display.c: 253: int16_t K10MULT;;display.c: 254: char buff[10];;display.c: 255: int8_t 
      +                          i;;display.c: 256: int8_t pi;;display.c: 258: K10MULT = 1;
  1701                           
  1702                           ;incstack = 0
  1703  0014B6  0E00               	movlw	0
  1704  0014B8  6E36               	movwf	disp7s_write_i@K10MULT+1,c
  1705  0014BA  0E01               	movlw	1
  1706  0014BC  6E35               	movwf	disp7s_write_i@K10MULT,c
  1707                           
  1708                           ;display.c: 259: i = NUM_OF_DISP;
  1709  0014BE  C022  F037         	movff	disp7s_write_i@NUM_OF_DISP,disp7s_write_i@i
  1710                           
  1711                           ;display.c: 260: while (i--)
  1712  0014C2  D00E               	goto	l4486
  1713  0014C4                     l4484:
  1714                           
  1715                           ;display.c: 261: {K10MULT *=10;}
  1716  0014C4  C035  F00B         	movff	disp7s_write_i@K10MULT,___wmul@multiplier
  1717  0014C8  C036  F00C         	movff	disp7s_write_i@K10MULT+1,___wmul@multiplier+1
  1718  0014CC  0E00               	movlw	0
  1719  0014CE  6E0E               	movwf	___wmul@multiplicand+1,c
  1720  0014D0  0E0A               	movlw	10
  1721  0014D2  6E0D               	movwf	___wmul@multiplicand,c
  1722  0014D4  ECD9  F011         	call	___wmul	;wreg free
  1723  0014D8  C00B  F035         	movff	?___wmul,disp7s_write_i@K10MULT
  1724  0014DC  C00C  F036         	movff	?___wmul+1,disp7s_write_i@K10MULT+1
  1725  0014E0                     l4486:
  1726  0014E0  0637               	decf	disp7s_write_i@i,f,c
  1727  0014E2  2837               	incf	disp7s_write_i@i,w,c
  1728  0014E4  A4D8               	btfss	status,2,c
  1729  0014E6  D7EE               	goto	l4484
  1730                           
  1731                           ;display.c: 263: if (num >= K10MULT)
  1732  0014E8  5035               	movf	disp7s_write_i@K10MULT,w,c
  1733  0014EA  5C23               	subwf	disp7s_write_i@num,w,c
  1734  0014EC  5024               	movf	disp7s_write_i@num+1,w,c
  1735  0014EE  0A80               	xorlw	128
  1736  0014F0  6E25               	movwf	??_disp7s_write_i& (0+255),c
  1737  0014F2  5036               	movf	disp7s_write_i@K10MULT+1,w,c
  1738  0014F4  0A80               	xorlw	128
  1739  0014F6  5825               	subwfb	??_disp7s_write_i& (0+255),w,c
  1740  0014F8  A0D8               	btfss	status,0,c
  1741  0014FA  D006               	goto	l4492
  1742                           
  1743                           ;display.c: 264: {num= K10MULT-1;}
  1744  0014FC  0EFF               	movlw	255
  1745  0014FE  2435               	addwf	disp7s_write_i@K10MULT,w,c
  1746  001500  6E23               	movwf	disp7s_write_i@num,c
  1747  001502  0EFF               	movlw	255
  1748  001504  2036               	addwfc	disp7s_write_i@K10MULT+1,w,c
  1749  001506  6E24               	movwf	disp7s_write_i@num+1,c
  1750  001508                     l4492:
  1751                           
  1752                           ;display.c: 266: itoa(buff, num, 10);
  1753  001508  0E2A               	movlw	low disp7s_write_i@buff
  1754  00150A  6E1A               	movwf	itoa@buf,c
  1755  00150C  C023  F01B         	movff	disp7s_write_i@num,itoa@val
  1756  001510  C024  F01C         	movff	disp7s_write_i@num+1,itoa@val+1
  1757  001514  0E00               	movlw	0
  1758  001516  6E1E               	movwf	itoa@base+1,c
  1759  001518  0E0A               	movlw	10
  1760  00151A  6E1D               	movwf	itoa@base,c
  1761  00151C  EC91  F011         	call	_itoa	;wreg free
  1762                           
  1763                           ;display.c: 269: for (i=0; i<NUM_OF_DISP; i++)
  1764  001520  0E00               	movlw	0
  1765  001522  6E37               	movwf	disp7s_write_i@i,c
  1766  001524  D013               	goto	l4500
  1767  001526                     l4496:
  1768                           
  1769                           ;display.c: 270: {pDisp[i] = DISP7S_CHARS[OFF];}
  1770  001526  0E0F               	movlw	low _DISP7S_CHARS
  1771  001528  6EF6               	movwf	tblptrl,c
  1772  00152A                     	if	1	;There is more than 1 active tblptr byte
  1773  00152A  0E08               	movlw	high _DISP7S_CHARS
  1774  00152C  6EF7               	movwf	tblptrh,c
  1775  00152E                     	endif
  1776  00152E                     	if	0	;There are less than 3 active tblptr bytes
  1777  00152E                     	endif
  1778  00152E  C037  F025         	movff	disp7s_write_i@i,??_disp7s_write_i
  1779  001532  6A26               	clrf	(??_disp7s_write_i+1)& (0+255),c
  1780  001534  BE25               	btfsc	??_disp7s_write_i& (0+255),7,c
  1781  001536  0626               	decf	(??_disp7s_write_i+1)& (0+255),f,c
  1782  001538  5025               	movf	??_disp7s_write_i,w,c
  1783  00153A  2420               	addwf	disp7s_write_i@pDisp,w,c
  1784  00153C  6ED9               	movwf	fsr2l,c
  1785  00153E  5026               	movf	??_disp7s_write_i+1,w,c
  1786  001540  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  1787  001542  6EDA               	movwf	fsr2h,c
  1788  001544  0008               	tblrd		*
  1789  001546  CFF5 FFDF          	movff	tablat,indf2
  1790  00154A  2A37               	incf	disp7s_write_i@i,f,c
  1791  00154C                     l4500:
  1792  00154C  5037               	movf	disp7s_write_i@i,w,c
  1793  00154E  0A80               	xorlw	128
  1794  001550  6E25               	movwf	??_disp7s_write_i& (0+255),c
  1795  001552  5022               	movf	disp7s_write_i@NUM_OF_DISP,w,c
  1796  001554  0A80               	xorlw	128
  1797  001556  5C25               	subwf	??_disp7s_write_i& (0+255),w,c
  1798  001558  A0D8               	btfss	status,0,c
  1799  00155A  D7E5               	goto	l4496
  1800                           
  1801                           ;display.c: 272: i=0;
  1802  00155C  0E00               	movlw	0
  1803  00155E  6E37               	movwf	disp7s_write_i@i,c
  1804                           
  1805                           ;display.c: 273: pi = strlen(buff)-1;
  1806  001560  0E2A               	movlw	low disp7s_write_i@buff
  1807  001562  6E0B               	movwf	strlen@s,c
  1808  001564  ECFE  F011         	call	_strlen	;wreg free
  1809  001568  040B               	decf	?_strlen,w,c
  1810  00156A  6E34               	movwf	disp7s_write_i@pi,c
  1811                           
  1812                           ;display.c: 274: while (buff[i] != '\0')
  1813  00156C  D021               	goto	l4512
  1814  00156E                     l4506:
  1815                           
  1816                           ;display.c: 275: {;display.c: 276: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  1817  00156E  5037               	movf	disp7s_write_i@i,w,c
  1818  001570  0F2A               	addlw	low disp7s_write_i@buff
  1819  001572  6ED9               	movwf	fsr2l,c
  1820  001574  6ADA               	clrf	fsr2h,c
  1821  001576  50DF               	movf	indf2,w,c
  1822  001578  6E25               	movwf	??_disp7s_write_i& (0+255),c
  1823  00157A  0ED0               	movlw	208
  1824  00157C  2625               	addwf	??_disp7s_write_i,f,c
  1825  00157E  5025               	movf	??_disp7s_write_i,w,c
  1826  001580  0F01               	addlw	low _DISP7S_NUMS
  1827  001582  6E26               	movwf	(??_disp7s_write_i+1)& (0+255),c
  1828  001584  C026  FFF6         	movff	??_disp7s_write_i+1,tblptrl
  1829  001588                     	if	1	;There is more than 1 active tblptr byte
  1830  001588  0E08               	movlw	high __smallconst
  1831  00158A  6EF7               	movwf	tblptrh,c
  1832  00158C                     	endif
  1833  00158C                     	if	0	;tblptru may be non-zero
  1834  00158C                     	endif
  1835  00158C                     	if	0	;tblptru may be non-zero
  1836  00158C                     	endif
  1837  00158C  0008               	tblrd		*
  1838  00158E  CFF5 F027          	movff	tablat,??_disp7s_write_i+2
  1839  001592  C034  F028         	movff	disp7s_write_i@pi,??_disp7s_write_i+3
  1840  001596  6A29               	clrf	(??_disp7s_write_i+4)& (0+255),c
  1841  001598  BE28               	btfsc	(??_disp7s_write_i+3)& (0+255),7,c
  1842  00159A  0629               	decf	(??_disp7s_write_i+4)& (0+255),f,c
  1843  00159C  5028               	movf	??_disp7s_write_i+3,w,c
  1844  00159E  2420               	addwf	disp7s_write_i@pDisp,w,c
  1845  0015A0  6ED9               	movwf	fsr2l,c
  1846  0015A2  5029               	movf	??_disp7s_write_i+4,w,c
  1847  0015A4  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  1848  0015A6  6EDA               	movwf	fsr2h,c
  1849  0015A8  5027               	movf	??_disp7s_write_i+2,w,c
  1850  0015AA  12DF               	iorwf	indf2,f,c
  1851  0015AC  0634               	decf	disp7s_write_i@pi,f,c
  1852                           
  1853                           ;display.c: 277: i++;
  1854  0015AE  2A37               	incf	disp7s_write_i@i,f,c
  1855  0015B0                     l4512:
  1856  0015B0  5037               	movf	disp7s_write_i@i,w,c
  1857  0015B2  0F2A               	addlw	low disp7s_write_i@buff
  1858  0015B4  6ED9               	movwf	fsr2l,c
  1859  0015B6  6ADA               	clrf	fsr2h,c
  1860  0015B8  50DF               	movf	indf2,w,c
  1861  0015BA  B4D8               	btfsc	status,2,c
  1862  0015BC  0012               	return	
  1863  0015BE  D7D7               	goto	l4506
  1864  0015C0                     __end_of_disp7s_write_i:
  1865                           	opt callstack 0
  1866                           
  1867 ;; *************** function _strlen *****************
  1868 ;; Defined at:
  1869 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/strlen.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  s               1   10[COMRAM] PTR const unsigned char 
  1872 ;;		 -> disp7s_write_i@buff(10), 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  cp              1   12[COMRAM] PTR const unsigned char 
  1875 ;;		 -> disp7s_write_i@buff(10), 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   10[COMRAM] unsigned int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/1
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1885 ;;      Params:         2       0       0       0       0       0       0       0       0
  1886 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1888 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1889 ;;Total ram usage:        3 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    5
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_disp7s_write_i
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text8
  1900  0023FC                     __ptext8:
  1901                           	opt callstack 0
  1902  0023FC                     _strlen:
  1903                           	opt callstack 21
  1904                           
  1905                           ;incstack = 0
  1906  0023FC  C00B  F00D         	movff	strlen@s,strlen@cp
  1907  002400  D001               	goto	l4230
  1908  002402                     l4228:
  1909  002402  2A0D               	incf	strlen@cp,f,c
  1910  002404                     l4230:
  1911  002404  500D               	movf	strlen@cp,w,c
  1912  002406  6ED9               	movwf	fsr2l,c
  1913  002408  6ADA               	clrf	fsr2h,c
  1914  00240A  50DF               	movf	indf2,w,c
  1915  00240C  A4D8               	btfss	status,2,c
  1916  00240E  D7F9               	goto	l4228
  1917  002410  500B               	movf	strlen@s,w,c
  1918  002412  5C0D               	subwf	strlen@cp,w,c
  1919  002414  6E0B               	movwf	?_strlen,c
  1920  002416  6A0C               	clrf	?_strlen+1,c
  1921  002418  BE0B               	btfsc	?_strlen,7,c
  1922  00241A  060C               	decf	?_strlen+1,f,c
  1923  00241C  0012               	return		;funcret
  1924  00241E                     __end_of_strlen:
  1925                           	opt callstack 0
  1926                           
  1927 ;; *************** function _pump_job *****************
  1928 ;; Defined at:
  1929 ;;		line 22 in file "pump.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  cod_ret         1    0        char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      char 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 3F/0
  1940 ;;		On exit  : 3F/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0
  1944 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1946 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1947 ;;Total ram usage:        1 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    5
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text9
  1958  001EA4                     __ptext9:
  1959                           	opt callstack 0
  1960  001EA4                     _pump_job:
  1961                           	opt callstack 25
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;pump.c: 25: static int8_t c;;pump.c: 27: if (pump.ticks > 0)
  1965                           
  1966                           ; BSR set to: 0
  1967                           
  1968                           ;incstack = 0
  1969  001EA4  51B5               	movf	_pump& (0+255),w,b
  1970  001EA6  11B6               	iorwf	(_pump+1)& (0+255),w,b
  1971  001EA8  B4D8               	btfsc	status,2,c
  1972  001EAA  0012               	return	
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;pump.c: 28: {;pump.c: 29: if (pump.sm0 == 0)
  1976  001EAC  51B7               	movf	(_pump+2)& (0+255),w,b
  1977  001EAE  A4D8               	btfss	status,2,c
  1978  001EB0  D005               	goto	l5074
  1979                           
  1980                           ; BSR set to: 0
  1981  001EB2  908D               	bcf	3981,0,c	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;pump.c: 32: c = 0x0;
  1985  001EB4  0E00               	movlw	0
  1986  001EB6  6FBC               	movwf	pump_job@c& (0+255),b
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;pump.c: 33: pump.sm0++;
  1990  001EB8  2BB7               	incf	(_pump+2)& (0+255),f,b
  1991                           
  1992                           ;pump.c: 34: }
  1993  001EBA  0012               	return	
  1994  001EBC                     l5074:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;pump.c: 35: else if (pump.sm0 == 1)
  1998  001EBC  05B7               	decf	(_pump+2)& (0+255),w,b
  1999  001EBE  A4D8               	btfss	status,2,c
  2000  001EC0  D00C               	goto	l5086
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;pump.c: 36: {;pump.c: 37: if (main_flag.f1ms)
  2004  001EC2  A1C9               	btfss	_main_flag& (0+255),0,b	;volatile
  2005  001EC4  0012               	return	
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;pump.c: 38: {;pump.c: 39: if (++c == 50)
  2009  001EC6  2BBC               	incf	pump_job@c& (0+255),f,b
  2010  001EC8  0E32               	movlw	50
  2011  001ECA  19BC               	xorwf	pump_job@c& (0+255),w,b
  2012  001ECC  A4D8               	btfss	status,2,c
  2013  001ECE  0012               	return	
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;pump.c: 40: {;pump.c: 41: c=0x00;
  2017  001ED0  0E00               	movlw	0
  2018  001ED2  6FBC               	movwf	pump_job@c& (0+255),b
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;pump.c: 42: pump.sm0++;
  2022  001ED4  2BB7               	incf	(_pump+2)& (0+255),f,b
  2023                           
  2024                           ; BSR set to: 0
  2025  001ED6  808D               	bsf	3981,0,c	;volatile
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;pump.c: 44: };pump.c: 45: };pump.c: 46: }
  2029  001ED8  0012               	return	
  2030  001EDA                     l5086:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;pump.c: 47: else if (pump.sm0 == 2)
  2034  001EDA  0E02               	movlw	2
  2035  001EDC  19B7               	xorwf	(_pump+2)& (0+255),w,b
  2036  001EDE  A4D8               	btfss	status,2,c
  2037  001EE0  0012               	return	
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;pump.c: 48: {;pump.c: 49: if (main_flag.f1ms)
  2041  001EE2  A1C9               	btfss	_main_flag& (0+255),0,b	;volatile
  2042  001EE4  0012               	return	
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;pump.c: 50: {;pump.c: 51: if (++c == 50)
  2046  001EE6  2BBC               	incf	pump_job@c& (0+255),f,b
  2047  001EE8  0E32               	movlw	50
  2048  001EEA  19BC               	xorwf	pump_job@c& (0+255),w,b
  2049  001EEC  A4D8               	btfss	status,2,c
  2050  001EEE  0012               	return	
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;pump.c: 52: {;pump.c: 53: c=0x00;
  2054  001EF0  0E00               	movlw	0
  2055  001EF2  6FBC               	movwf	pump_job@c& (0+255),b
  2056                           
  2057                           ;pump.c: 54: pump.sm0 = 0x00;
  2058  001EF4  0E00               	movlw	0
  2059  001EF6  6FB7               	movwf	(_pump+2)& (0+255),b
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;pump.c: 56: if (--pump.ticks == 0)
  2063  001EF8  07B5               	decf	_pump& (0+255),f,b
  2064  001EFA  A0D8               	btfss	status,0,c
  2065  001EFC  07B6               	decf	(_pump+1)& (0+255),f,b
  2066  001EFE  51B5               	movf	_pump& (0+255),w,b
  2067  001F00  11B6               	iorwf	(_pump+1)& (0+255),w,b
  2068  001F02  B4D8               	btfsc	status,2,c
  2069  001F04  0012               	return	
  2070  001F06  0012               	return	
  2071  001F08                     __end_of_pump_job:
  2072                           	opt callstack 0
  2073                           
  2074 ;; *************** function _pulsonic_init *****************
  2075 ;; Defined at:
  2076 ;;		line 8 in file "pulsonic.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  i               1   10[COMRAM] char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 3F/1
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0
  2091 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2093 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2094 ;;Total ram usage:        1 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    5
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text10
  2105  001F08                     __ptext10:
  2106                           	opt callstack 0
  2107  001F08                     _pulsonic_init:
  2108                           	opt callstack 25
  2109                           
  2110                           ;pulsonic.c: 10: int8_t i;;pulsonic.c: 11: pulsonic.dist_total_time = 60;
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;incstack = 0
  2114  001F08  0E00               	movlw	0
  2115  001F0A  0101               	movlb	1	; () banked
  2116  001F0C  6F03               	movwf	(_pulsonic+3)& (0+255),b
  2117  001F0E  0E3C               	movlw	60
  2118  001F10  6F02               	movwf	(_pulsonic+2)& (0+255),b
  2119                           
  2120                           ;pulsonic.c: 15: for (i=0; i< 8; i++)
  2121  001F12  0E00               	movlw	0
  2122  001F14  6E0B               	movwf	pulsonic_init@i,c
  2123  001F16                     l4898:
  2124                           
  2125                           ;pulsonic.c: 16: {;pulsonic.c: 17: pulsonic.nozzle[i].Q_mlh = 12.0;
  2126  001F16  500B               	movf	pulsonic_init@i,w,c
  2127  001F18  0D06               	mullw	6
  2128  001F1A  0E06               	movlw	low (_pulsonic+6)
  2129  001F1C  24F3               	addwf	prodl,w,c
  2130  001F1E  6ED9               	movwf	fsr2l,c
  2131  001F20  0E01               	movlw	high (_pulsonic+6)
  2132  001F22  20F4               	addwfc	prodh,w,c
  2133  001F24  6EDA               	movwf	fsr2h,c
  2134  001F26  0E00               	movlw	0
  2135  001F28  6EDE               	movwf	postinc2,c
  2136  001F2A  0E40               	movlw	64
  2137  001F2C  6EDE               	movwf	postinc2,c
  2138  001F2E  0E41               	movlw	65
  2139  001F30  6EDE               	movwf	postinc2,c
  2140  001F32  2A0B               	incf	pulsonic_init@i,f,c
  2141  001F34  500B               	movf	pulsonic_init@i,w,c
  2142  001F36  0A80               	xorlw	128
  2143  001F38  0F78               	addlw	-136
  2144  001F3A  A0D8               	btfss	status,0,c
  2145  001F3C  D7EC               	goto	l4898
  2146                           
  2147                           ;pulsonic.c: 18: };pulsonic.c: 19: pulsonic.oil.viscosity = OIL_VISCOSITY[0];
  2148  001F3E  0E0B               	movlw	low _OIL_VISCOSITY
  2149  001F40  6EF6               	movwf	tblptrl,c
  2150  001F42                     	if	1	;There is more than 1 active tblptr byte
  2151  001F42  0E08               	movlw	high _OIL_VISCOSITY
  2152  001F44  6EF7               	movwf	tblptrh,c
  2153  001F46                     	endif
  2154  001F46                     	if	0	;There are less than 3 active tblptr bytes
  2155  001F46                     	endif
  2156  001F46  0008               	tblrd		*
  2157  001F48  CFF5 F136          	movff	tablat,_pulsonic+54
  2158                           
  2159                           ;pulsonic.c: 21: pulsonic.nozzle[3].Q_mlh = 0;
  2160  001F4C  0E00               	movlw	0
  2161  001F4E  0101               	movlb	1	; () banked
  2162  001F50  6F18               	movwf	(_pulsonic+24)& (0+255),b
  2163  001F52  0E00               	movlw	0
  2164  001F54  6F19               	movwf	(_pulsonic+25)& (0+255),b
  2165  001F56  0E00               	movlw	0
  2166  001F58  6F1A               	movwf	(_pulsonic+26)& (0+255),b
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;pulsonic.c: 22: pulsonic.nozzle[5].Q_mlh = 0;
  2170  001F5A  0E00               	movlw	0
  2171  001F5C  6F24               	movwf	(_pulsonic+36)& (0+255),b
  2172  001F5E  0E00               	movlw	0
  2173  001F60  6F25               	movwf	(_pulsonic+37)& (0+255),b
  2174  001F62  0E00               	movlw	0
  2175  001F64  6F26               	movwf	(_pulsonic+38)& (0+255),b
  2176                           
  2177                           ; BSR set to: 1
  2178  001F66  0012               	return		;funcret
  2179  001F68                     __end_of_pulsonic_init:
  2180                           	opt callstack 0
  2181                           
  2182 ;; *************** function _mpap_sych *****************
  2183 ;; Defined at:
  2184 ;;		line 160 in file "mpap.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 3F/0
  2195 ;;		On exit  : 3F/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    5
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text11
  2213  001BDC                     __ptext11:
  2214                           	opt callstack 0
  2215  001BDC                     _mpap_sych:
  2216                           	opt callstack 25
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;mpap.c: 162: static int8_t sm0;;mpap.c: 163: static int8_t c;;mpap.c: 164: if (sm0 == 0
      +                          )
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;incstack = 0
  2223  001BDC  5053               	movf	mpap_sych@sm0,w,c
  2224  001BDE  A4D8               	btfss	status,2,c
  2225  001BE0  D010               	goto	l5112
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;mpap.c: 165: {;mpap.c: 166: if ((mpap.mode == MPAP_NORMAL_MODE) || (mpap.mode == MPAP_H
      +                          OMMING_MODE))
  2229  001BE2  0E03               	movlw	3
  2230  001BE4  184F               	xorwf	_mpap+7,w,c	;volatile
  2231  001BE6  B4D8               	btfsc	status,2,c
  2232  001BE8  D004               	goto	u6270
  2233                           
  2234                           ; BSR set to: 0
  2235  001BEA  0E02               	movlw	2
  2236  001BEC  184F               	xorwf	_mpap+7,w,c	;volatile
  2237  001BEE  A4D8               	btfss	status,2,c
  2238  001BF0  D002               	goto	l5108
  2239  001BF2                     u6270:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;mpap.c: 167: {;mpap.c: 168: sm0++;
  2243  001BF2  2A53               	incf	mpap_sych@sm0,f,c
  2244                           
  2245                           ;mpap.c: 169: }
  2246  001BF4  0012               	return	
  2247  001BF6                     l5108:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;mpap.c: 170: else if (mpap.mode == MPAP_STALL_MODE)
  2251  001BF6  044F               	decf	_mpap+7,w,c	;volatile
  2252  001BF8  A4D8               	btfss	status,2,c
  2253  001BFA  0012               	return	
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;mpap.c: 171: {;mpap.c: 172: sm0 = 2;
  2257  001BFC  0E02               	movlw	2
  2258  001BFE  6E53               	movwf	mpap_sych@sm0,c
  2259  001C00  0012               	return	
  2260  001C02                     l5112:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;mpap.c: 175: else if (sm0 == 1)
  2264  001C02  0453               	decf	mpap_sych@sm0,w,c
  2265  001C04  A4D8               	btfss	status,2,c
  2266  001C06  D013               	goto	l5128
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;mpap.c: 176: {;mpap.c: 177: if (mpap.numSteps_tomove == 0)
  2270  001C08  504C               	movf	_mpap+4,w,c	;volatile
  2271  001C0A  104D               	iorwf	_mpap+5,w,c	;volatile
  2272  001C0C  A4D8               	btfss	status,2,c
  2273  001C0E  0012               	return	
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;mpap.c: 178: {;mpap.c: 179: if (mpap.mode == MPAP_HOMMING_MODE)
  2277  001C10  0E02               	movlw	2
  2278  001C12  184F               	xorwf	_mpap+7,w,c	;volatile
  2279  001C14  A4D8               	btfss	status,2,c
  2280  001C16  D005               	goto	l5122
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;mpap.c: 180: {;mpap.c: 181: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  2284  001C18  0101               	movlb	1	; () banked
  2285  001C1A  A13A               	btfss	(_pulsonic+58)& (0+255),0,b
  2286  001C1C  D003               	goto	l5124
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;mpap.c: 182: {;mpap.c: 183: pulsonic.errors.flag.mpap_home_sensor = 0;
  2290  001C1E  913A               	bcf	(_pulsonic+58)& (0+255),0,b
  2291  001C20  D001               	goto	l5124
  2292  001C22                     l5122:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;mpap.c: 187: else if (mpap.mode == MPAP_NORMAL_MODE)
  2296  001C22  504F               	movf	_mpap+7,w,c	;volatile
  2297  001C24                     l5124:
  2298                           
  2299                           ;mpap.c: 189: };mpap.c: 190: sm0++;
  2300  001C24  2A53               	incf	mpap_sych@sm0,f,c
  2301                           
  2302                           ;mpap.c: 191: c = 0;
  2303  001C26  0E00               	movlw	0
  2304  001C28  0100               	movlb	0	; () banked
  2305  001C2A  6FBD               	movwf	mpap_sych@c& (0+255),b
  2306  001C2C  0012               	return	
  2307  001C2E                     l5128:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;mpap.c: 194: else if (sm0 == 2)
  2311  001C2E  0E02               	movlw	2
  2312  001C30  1853               	xorwf	mpap_sych@sm0,w,c
  2313  001C32  A4D8               	btfss	status,2,c
  2314  001C34  D00A               	goto	l5138
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;mpap.c: 195: {;mpap.c: 196: if (main_flag.f1ms)
  2318  001C36  A1C9               	btfss	_main_flag& (0+255),0,b	;volatile
  2319  001C38  0012               	return	
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;mpap.c: 197: {;mpap.c: 198: if (++c == 10)
  2323  001C3A  2BBD               	incf	mpap_sych@c& (0+255),f,b
  2324  001C3C  0E0A               	movlw	10
  2325  001C3E  19BD               	xorwf	mpap_sych@c& (0+255),w,b
  2326  001C40  A4D8               	btfss	status,2,c
  2327  001C42  0012               	return	
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;mpap.c: 199: {;mpap.c: 201: mpap.mode = MPAP_STALL_MODE;
  2331  001C44  0E01               	movlw	1
  2332  001C46  6E4F               	movwf	_mpap+7,c	;volatile
  2333  001C48  D7D4               	goto	u6270
  2334  001C4A                     l5138:
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;mpap.c: 206: else if (sm0 == 3)
  2338  001C4A  0E03               	movlw	3
  2339  001C4C  1853               	xorwf	mpap_sych@sm0,w,c
  2340  001C4E  A4D8               	btfss	status,2,c
  2341  001C50  0012               	return	
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;mpap.c: 207: {;mpap.c: 208: if (mpap.mode == MPAP_IDLE_MODE)
  2345  001C52  504F               	movf	_mpap+7,w,c	;volatile
  2346  001C54  A4D8               	btfss	status,2,c
  2347  001C56  0012               	return	
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;mpap.c: 209: {;mpap.c: 211: sm0 = 0;
  2351  001C58  0E00               	movlw	0
  2352  001C5A  6E53               	movwf	mpap_sych@sm0,c
  2353                           
  2354                           ; BSR set to: 0
  2355  001C5C  0012               	return		;funcret
  2356  001C5E                     __end_of_mpap_sych:
  2357                           	opt callstack 0
  2358                           
  2359 ;; *************** function _ikb_job *****************
  2360 ;; Defined at:
  2361 ;;		line 413 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 3F/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2378 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    8
  2382 ;; This function calls:
  2383 ;;		_ikey_parsing
  2384 ;;		_ikey_scan
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text12
  2391  00252A                     __ptext12:
  2392                           	opt callstack 0
  2393  00252A                     _ikb_job:
  2394                           	opt callstack 22
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;ikb.c: 415: ikey_scan();
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;incstack = 0
  2401  00252A  EC03  F009         	call	_ikey_scan	;wreg free
  2402                           
  2403                           ;ikb.c: 416: ikey_parsing();
  2404  00252E  EC09  F004         	call	_ikey_parsing	;wreg free
  2405  002532  0012               	return		;funcret
  2406  002534                     __end_of_ikb_job:
  2407                           	opt callstack 0
  2408                           
  2409 ;; *************** function _ikey_scan *****************
  2410 ;; Defined at:
  2411 ;;		line 448 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  k               1   11[COMRAM] char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 3F/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2425 ;;      Params:         0       0       0       0       0       0       0       0       0
  2426 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2427 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2428 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2429 ;;Total ram usage:        2 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    6
  2432 ;; This function calls:
  2433 ;;		_keyRead_pin_key0
  2434 ;;		_keyRead_pin_key1
  2435 ;;		_keyRead_pin_key2
  2436 ;;		_keyRead_pin_key3
  2437 ;;		_keyRead_pin_key4
  2438 ;; This function is called by:
  2439 ;;		_ikb_job
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text13
  2444  001206                     __ptext13:
  2445                           	opt callstack 0
  2446  001206                     _ikey_scan:
  2447                           	opt callstack 23
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;ikb.c: 450: int8_t k = 5-1;
  2451                           
  2452                           ;incstack = 0
  2453  001206  0E04               	movlw	4
  2454  001208  6E0C               	movwf	ikey_scan@k,c
  2455  00120A                     l4594:
  2456                           
  2457                           ;ikb.c: 452: {;ikb.c: 453: if (key[k].sm0 == 0)
  2458  00120A  500C               	movf	ikey_scan@k,w,c
  2459  00120C  0D10               	mullw	16
  2460  00120E  50F3               	movf	prodl,w,c
  2461  001210  0F64               	addlw	low (_key+4)
  2462  001212  6ED9               	movwf	fsr2l,c
  2463  001214  6ADA               	clrf	fsr2h,c
  2464  001216  50DF               	movf	indf2,w,c
  2465  001218  A4D8               	btfss	status,2,c
  2466  00121A  D016               	goto	l4600
  2467                           
  2468                           ;ikb.c: 454: {;ikb.c: 455: if (key[k].keyRead() == 0)
  2469  00121C  500C               	movf	ikey_scan@k,w,c
  2470  00121E  0D10               	mullw	16
  2471  001220  50F3               	movf	prodl,w,c
  2472  001222  0F60               	addlw	low _key
  2473  001224  6ED9               	movwf	fsr2l,c
  2474  001226  6ADA               	clrf	fsr2h,c
  2475  001228  D801               	call	u5178
  2476  00122A  D00A               	goto	u5179
  2477  00122C                     u5178:
  2478  00122C  0005               	push	
  2479  00122E  6EFA               	movwf	pclath,c
  2480  001230  50DE               	movf	postinc2,w,c
  2481  001232  6EFD               	movwf	tosl,c
  2482  001234  50DE               	movf	postinc2,w,c
  2483  001236  6EFE               	movwf	tosh,c
  2484  001238  50F8               	movf	tblptru,w,c
  2485  00123A  6EFF               	movwf	tosu,c
  2486  00123C  50FA               	movf	pclath,w,c
  2487  00123E  0012               	return		;indir
  2488  001240                     u5179:
  2489  001240  0900               	iorlw	0
  2490  001242  A4D8               	btfss	status,2,c
  2491  001244  D0AC               	goto	l4630
  2492  001246  D041               	goto	L1
  2493  001248                     l4600:
  2494                           
  2495                           ;ikb.c: 460: else if (key[k].sm0 == 1)
  2496  001248  500C               	movf	ikey_scan@k,w,c
  2497  00124A  0D10               	mullw	16
  2498  00124C  50F3               	movf	prodl,w,c
  2499  00124E  0F64               	addlw	low (_key+4)
  2500  001250  6ED9               	movwf	fsr2l,c
  2501  001252  6ADA               	clrf	fsr2h,c
  2502  001254  04DE               	decf	postinc2,w,c
  2503  001256  A4D8               	btfss	status,2,c
  2504  001258  D040               	goto	l4612
  2505                           
  2506                           ;ikb.c: 461: {;ikb.c: 462: if (++key[k].counter0 == 4)
  2507  00125A  500C               	movf	ikey_scan@k,w,c
  2508  00125C  0D10               	mullw	16
  2509  00125E  50F3               	movf	prodl,w,c
  2510  001260  0F65               	addlw	low (_key+5)
  2511  001262  6ED9               	movwf	fsr2l,c
  2512  001264  6ADA               	clrf	fsr2h,c
  2513  001266  2ADF               	incf	indf2,f,c
  2514  001268  0E04               	movlw	4
  2515  00126A  18DE               	xorwf	postinc2,w,c
  2516  00126C  A4D8               	btfss	status,2,c
  2517  00126E  D097               	goto	l4630
  2518                           
  2519                           ;ikb.c: 463: {;ikb.c: 464: key[k].counter0 = 0x00;
  2520  001270  500C               	movf	ikey_scan@k,w,c
  2521  001272  0D10               	mullw	16
  2522  001274  50F3               	movf	prodl,w,c
  2523  001276  0F65               	addlw	low (_key+5)
  2524  001278  6ED9               	movwf	fsr2l,c
  2525  00127A  6ADA               	clrf	fsr2h,c
  2526  00127C  0E00               	movlw	0
  2527  00127E  6EDF               	movwf	indf2,c
  2528                           
  2529                           ;ikb.c: 466: if (key[k].keyRead() != 0)
  2530  001280  500C               	movf	ikey_scan@k,w,c
  2531  001282  0D10               	mullw	16
  2532  001284  50F3               	movf	prodl,w,c
  2533  001286  0F60               	addlw	low _key
  2534  001288  6ED9               	movwf	fsr2l,c
  2535  00128A  6ADA               	clrf	fsr2h,c
  2536  00128C  D801               	call	u5218
  2537  00128E  D00A               	goto	u5219
  2538  001290                     u5218:
  2539  001290  0005               	push	
  2540  001292  6EFA               	movwf	pclath,c
  2541  001294  50DE               	movf	postinc2,w,c
  2542  001296  6EFD               	movwf	tosl,c
  2543  001298  50DE               	movf	postinc2,w,c
  2544  00129A  6EFE               	movwf	tosh,c
  2545  00129C  50F8               	movf	tblptru,w,c
  2546  00129E  6EFF               	movwf	tosu,c
  2547  0012A0  50FA               	movf	pclath,w,c
  2548  0012A2  0012               	return		;indir
  2549  0012A4                     u5219:
  2550  0012A4  0900               	iorlw	0
  2551  0012A6  B4D8               	btfsc	status,2,c
  2552  0012A8  D008               	goto	l4610
  2553  0012AA                     u5220:
  2554                           
  2555                           ;ikb.c: 467: {;ikb.c: 468: key[k].sm0--;
  2556  0012AA  500C               	movf	ikey_scan@k,w,c
  2557  0012AC  0D10               	mullw	16
  2558  0012AE  50F3               	movf	prodl,w,c
  2559  0012B0  0F64               	addlw	low (_key+4)
  2560  0012B2  6ED9               	movwf	fsr2l,c
  2561  0012B4  6ADA               	clrf	fsr2h,c
  2562  0012B6  06DF               	decf	indf2,f,c
  2563                           
  2564                           ;ikb.c: 469: }
  2565  0012B8  D072               	goto	l4630
  2566  0012BA                     l4610:
  2567                           
  2568                           ;ikb.c: 470: else;ikb.c: 471: {;ikb.c: 472: key[k].bf.state = 1;
  2569  0012BA  500C               	movf	ikey_scan@k,w,c
  2570  0012BC  0D10               	mullw	16
  2571  0012BE  50F3               	movf	prodl,w,c
  2572  0012C0  0F6A               	addlw	low (_key+10)
  2573  0012C2  6ED9               	movwf	fsr2l,c
  2574  0012C4  6ADA               	clrf	fsr2h,c
  2575  0012C6  0100               	movlb	0	; () banked
  2576  0012C8  80DF               	bsf	indf2,0,c
  2577  0012CA                     L1:
  2578                           
  2579                           ;ikb.c: 473: key[k].sm0++;
  2580  0012CA  500C               	movf	ikey_scan@k,w,c
  2581  0012CC  0D10               	mullw	16
  2582  0012CE  50F3               	movf	prodl,w,c
  2583  0012D0  0F64               	addlw	low (_key+4)
  2584  0012D2  6ED9               	movwf	fsr2l,c
  2585  0012D4  6ADA               	clrf	fsr2h,c
  2586  0012D6  2ADF               	incf	indf2,f,c
  2587  0012D8  D062               	goto	l4630
  2588  0012DA                     l4612:
  2589                           
  2590                           ;ikb.c: 477: else if (key[k].sm0 == 2)
  2591  0012DA  500C               	movf	ikey_scan@k,w,c
  2592  0012DC  0D10               	mullw	16
  2593  0012DE  50F3               	movf	prodl,w,c
  2594  0012E0  0F64               	addlw	low (_key+4)
  2595  0012E2  6ED9               	movwf	fsr2l,c
  2596  0012E4  6ADA               	clrf	fsr2h,c
  2597  0012E6  0E02               	movlw	2
  2598  0012E8  18DE               	xorwf	postinc2,w,c
  2599  0012EA  A4D8               	btfss	status,2,c
  2600  0012EC  D016               	goto	l4618
  2601                           
  2602                           ;ikb.c: 478: {;ikb.c: 479: if (key[k].keyRead() == 1)
  2603  0012EE  500C               	movf	ikey_scan@k,w,c
  2604  0012F0  0D10               	mullw	16
  2605  0012F2  50F3               	movf	prodl,w,c
  2606  0012F4  0F60               	addlw	low _key
  2607  0012F6  6ED9               	movwf	fsr2l,c
  2608  0012F8  6ADA               	clrf	fsr2h,c
  2609  0012FA  D801               	call	u5248
  2610  0012FC  D00A               	goto	u5249
  2611  0012FE                     u5248:
  2612  0012FE  0005               	push	
  2613  001300  6EFA               	movwf	pclath,c
  2614  001302  50DE               	movf	postinc2,w,c
  2615  001304  6EFD               	movwf	tosl,c
  2616  001306  50DE               	movf	postinc2,w,c
  2617  001308  6EFE               	movwf	tosh,c
  2618  00130A  50F8               	movf	tblptru,w,c
  2619  00130C  6EFF               	movwf	tosu,c
  2620  00130E  50FA               	movf	pclath,w,c
  2621  001310  0012               	return		;indir
  2622  001312                     u5249:
  2623  001312  06E8               	decf	wreg,f,c
  2624  001314  B4D8               	btfsc	status,2,c
  2625  001316  D7D9               	goto	L1
  2626  001318  D042               	goto	l4630
  2627  00131A                     l4618:
  2628                           
  2629                           ;ikb.c: 482: else if (key[k].sm0 == 3)
  2630  00131A  500C               	movf	ikey_scan@k,w,c
  2631  00131C  0D10               	mullw	16
  2632  00131E  50F3               	movf	prodl,w,c
  2633  001320  0F64               	addlw	low (_key+4)
  2634  001322  6ED9               	movwf	fsr2l,c
  2635  001324  6ADA               	clrf	fsr2h,c
  2636  001326  0E03               	movlw	3
  2637  001328  18DE               	xorwf	postinc2,w,c
  2638  00132A  A4D8               	btfss	status,2,c
  2639  00132C  D038               	goto	l4630
  2640                           
  2641                           ;ikb.c: 483: {;ikb.c: 484: if (++key[k].counter0 == 4)
  2642  00132E  500C               	movf	ikey_scan@k,w,c
  2643  001330  0D10               	mullw	16
  2644  001332  50F3               	movf	prodl,w,c
  2645  001334  0F65               	addlw	low (_key+5)
  2646  001336  6ED9               	movwf	fsr2l,c
  2647  001338  6ADA               	clrf	fsr2h,c
  2648  00133A  2ADF               	incf	indf2,f,c
  2649  00133C  0E04               	movlw	4
  2650  00133E  18DE               	xorwf	postinc2,w,c
  2651  001340  A4D8               	btfss	status,2,c
  2652  001342  D02D               	goto	l4630
  2653                           
  2654                           ;ikb.c: 485: {;ikb.c: 486: key[k].counter0 = 0x00;
  2655  001344  500C               	movf	ikey_scan@k,w,c
  2656  001346  0D10               	mullw	16
  2657  001348  50F3               	movf	prodl,w,c
  2658  00134A  0F65               	addlw	low (_key+5)
  2659  00134C  6ED9               	movwf	fsr2l,c
  2660  00134E  6ADA               	clrf	fsr2h,c
  2661  001350  0E00               	movlw	0
  2662  001352  6EDF               	movwf	indf2,c
  2663                           
  2664                           ;ikb.c: 488: if (key[k].keyRead() != 1)
  2665  001354  500C               	movf	ikey_scan@k,w,c
  2666  001356  0D10               	mullw	16
  2667  001358  50F3               	movf	prodl,w,c
  2668  00135A  0F60               	addlw	low _key
  2669  00135C  6ED9               	movwf	fsr2l,c
  2670  00135E  6ADA               	clrf	fsr2h,c
  2671  001360  D801               	call	u5288
  2672  001362  D00A               	goto	u5289
  2673  001364                     u5288:
  2674  001364  0005               	push	
  2675  001366  6EFA               	movwf	pclath,c
  2676  001368  50DE               	movf	postinc2,w,c
  2677  00136A  6EFD               	movwf	tosl,c
  2678  00136C  50DE               	movf	postinc2,w,c
  2679  00136E  6EFE               	movwf	tosh,c
  2680  001370  50F8               	movf	tblptru,w,c
  2681  001372  6EFF               	movwf	tosu,c
  2682  001374  50FA               	movf	pclath,w,c
  2683  001376  0012               	return		;indir
  2684  001378                     u5289:
  2685  001378  06E8               	decf	wreg,f,c
  2686  00137A  A4D8               	btfss	status,2,c
  2687  00137C  D796               	goto	u5220
  2688                           
  2689                           ;ikb.c: 492: else;ikb.c: 493: {;ikb.c: 494: key[k].bf.state = 0;
  2690  00137E  500C               	movf	ikey_scan@k,w,c
  2691  001380  0D10               	mullw	16
  2692  001382  50F3               	movf	prodl,w,c
  2693  001384  0F6A               	addlw	low (_key+10)
  2694  001386  6ED9               	movwf	fsr2l,c
  2695  001388  6ADA               	clrf	fsr2h,c
  2696  00138A  0100               	movlb	0	; () banked
  2697  00138C  90DF               	bcf	indf2,0,c
  2698                           
  2699                           ;ikb.c: 495: key[k].sm0 = 0x00;
  2700  00138E  500C               	movf	ikey_scan@k,w,c
  2701  001390  0D10               	mullw	16
  2702  001392  50F3               	movf	prodl,w,c
  2703  001394  0F64               	addlw	low (_key+4)
  2704  001396  6ED9               	movwf	fsr2l,c
  2705  001398  6ADA               	clrf	fsr2h,c
  2706  00139A  0E00               	movlw	0
  2707  00139C  6EDF               	movwf	indf2,c
  2708  00139E                     l4630:
  2709                           
  2710                           ;ikb.c: 496: };ikb.c: 497: };ikb.c: 498: };ikb.c: 499: }while (--k >= 0);
  2711  00139E  060C               	decf	ikey_scan@k,f,c
  2712  0013A0  BE0C               	btfsc	ikey_scan@k,7,c
  2713  0013A2  0012               	return	
  2714  0013A4  D732               	goto	l4594
  2715  0013A6                     __end_of_ikey_scan:
  2716                           	opt callstack 0
  2717                           
  2718 ;; *************** function _keyRead_pin_key3 *****************
  2719 ;; Defined at:
  2720 ;;		line 205 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      unsigned char 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2737 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    5
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_ikb_init
  2745 ;;		_ikey_scan
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text14
  2750  002594                     __ptext14:
  2751                           	opt callstack 0
  2752  002594                     _keyRead_pin_key3:
  2753                           	opt callstack 23
  2754                           
  2755                           ;ikb.c: 207: return ((PORTC & (1<<7))>>7);
  2756                           
  2757                           ;incstack = 0
  2758  002594  4482               	rlncf	3970,w,c	;volatile
  2759  002596  0B01               	andlw	1
  2760  002598  0012               	return		;funcret
  2761  00259A                     __end_of_keyRead_pin_key3:
  2762                           	opt callstack 0
  2763                           
  2764 ;; *************** function _keyRead_pin_key2 *****************
  2765 ;; Defined at:
  2766 ;;		line 201 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      unsigned char 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    5
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_ikb_init
  2791 ;;		_ikey_scan
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text15
  2796  002534                     __ptext15:
  2797                           	opt callstack 0
  2798  002534                     _keyRead_pin_key2:
  2799                           	opt callstack 23
  2800                           
  2801                           ;ikb.c: 203: return ((PORTC & (1<<6))>>6);
  2802                           
  2803                           ;incstack = 0
  2804  002534  4482               	rlncf	3970,w,c	;volatile
  2805  002536  46E8               	rlncf	wreg,f,c
  2806  002538  0B03               	andlw	3
  2807  00253A  0B01               	andlw	1
  2808  00253C  0012               	return		;funcret
  2809  00253E                     __end_of_keyRead_pin_key2:
  2810                           	opt callstack 0
  2811                           
  2812 ;; *************** function _keyRead_pin_key1 *****************
  2813 ;; Defined at:
  2814 ;;		line 197 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2828 ;;      Params:         0       0       0       0       0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    5
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_ikb_init
  2839 ;;		_ikey_scan
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text16
  2844  00253E                     __ptext16:
  2845                           	opt callstack 0
  2846  00253E                     _keyRead_pin_key1:
  2847                           	opt callstack 23
  2848                           
  2849                           ;ikb.c: 199: return ((PORTC & (1<<5))>>5);
  2850                           
  2851                           ;incstack = 0
  2852  00253E  3882               	swapf	3970,w,c	;volatile
  2853  002540  42E8               	rrncf	wreg,f,c
  2854  002542  0B07               	andlw	7
  2855  002544  0B01               	andlw	1
  2856  002546  0012               	return		;funcret
  2857  002548                     __end_of_keyRead_pin_key1:
  2858                           	opt callstack 0
  2859                           
  2860 ;; *************** function _keyRead_pin_key0 *****************
  2861 ;; Defined at:
  2862 ;;		line 193 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      unsigned char 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    5
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_ikb_init
  2887 ;;		_ikey_scan
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text17
  2892  002584                     __ptext17:
  2893                           	opt callstack 0
  2894  002584                     _keyRead_pin_key0:
  2895                           	opt callstack 23
  2896                           
  2897                           ;ikb.c: 195: return ((PORTC & (1<<4))>>4);
  2898                           
  2899                           ;incstack = 0
  2900  002584  3882               	swapf	3970,w,c	;volatile
  2901  002586  0B0F               	andlw	15
  2902  002588  0B01               	andlw	1
  2903  00258A  0012               	return		;funcret
  2904  00258C                     __end_of_keyRead_pin_key0:
  2905                           	opt callstack 0
  2906                           
  2907 ;; *************** function _keyRead_pin_key4 *****************
  2908 ;; Defined at:
  2909 ;;		line 209 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      unsigned char 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    5
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_ikb_init
  2934 ;;		_ikey_scan
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text18
  2939  00258C                     __ptext18:
  2940                           	opt callstack 0
  2941  00258C                     _keyRead_pin_key4:
  2942                           	opt callstack 23
  2943                           
  2944                           ;ikb.c: 211: return ((PORTD & (1<<4))>>4);
  2945                           
  2946                           ;incstack = 0
  2947  00258C  3883               	swapf	3971,w,c	;volatile
  2948  00258E  0B0F               	andlw	15
  2949  002590  0B01               	andlw	1
  2950  002592  0012               	return		;funcret
  2951  002594                     __end_of_keyRead_pin_key4:
  2952                           	opt callstack 0
  2953                           
  2954 ;; *************** function _ikey_parsing *****************
  2955 ;; Defined at:
  2956 ;;		line 544 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  k               1   34[COMRAM] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0
  2971 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2973 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        5 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    7
  2977 ;; This function calls:
  2978 ;;		___ftge
  2979 ;;		___lwtoft
  2980 ;;		_ikey_is_accessible
  2981 ;; This function is called by:
  2982 ;;		_ikb_job
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text19
  2987  000812                     __ptext19:
  2988                           	opt callstack 0
  2989  000812                     _ikey_parsing:
  2990                           	opt callstack 22
  2991                           
  2992                           ;ikb.c: 546: uint8_t k;;ikb.c: 548: for (k=0; k < 5; k++)
  2993                           
  2994                           ;incstack = 0
  2995  000812  0E00               	movlw	0
  2996  000814  6E23               	movwf	ikey_parsing@k,c
  2997  000816                     l4638:
  2998                           
  2999                           ;ikb.c: 549: {;ikb.c: 550: if ( key[k].sm1 == (0) )
  3000  000816  5023               	movf	ikey_parsing@k,w,c
  3001  000818  0D10               	mullw	16
  3002  00081A  50F3               	movf	prodl,w,c
  3003  00081C  0F66               	addlw	low (_key+6)
  3004  00081E  6ED9               	movwf	fsr2l,c
  3005  000820  6ADA               	clrf	fsr2h,c
  3006  000822  50DF               	movf	indf2,w,c
  3007  000824  A4D8               	btfss	status,2,c
  3008  000826  D08B               	goto	l289
  3009                           
  3010                           ;ikb.c: 551: {;ikb.c: 552: if ( ikey_is_accessible(k) )
  3011  000828  5023               	movf	ikey_parsing@k,w,c
  3012  00082A  EC38  F010         	call	_ikey_is_accessible
  3013  00082E  0900               	iorlw	0
  3014  000830  B4D8               	btfsc	status,2,c
  3015  000832  D085               	goto	l289
  3016                           
  3017                           ;ikb.c: 553: {;ikb.c: 554: if (key[k].bf.state == 1)
  3018  000834  5023               	movf	ikey_parsing@k,w,c
  3019  000836  0D10               	mullw	16
  3020  000838  50F3               	movf	prodl,w,c
  3021  00083A  0F6A               	addlw	low (_key+10)
  3022  00083C  6ED9               	movwf	fsr2l,c
  3023  00083E  6ADA               	clrf	fsr2h,c
  3024  000840  0100               	movlb	0	; () banked
  3025  000842  A0DF               	btfss	indf2,0,c
  3026  000844  D07C               	goto	l289
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;ikb.c: 555: {;ikb.c: 557: if (key[k].bf.OnKeyPressed)
  3030  000846  5023               	movf	ikey_parsing@k,w,c
  3031  000848  0D10               	mullw	16
  3032  00084A  50F3               	movf	prodl,w,c
  3033  00084C  0F6A               	addlw	low (_key+10)
  3034  00084E  6ED9               	movwf	fsr2l,c
  3035  000850  6ADA               	clrf	fsr2h,c
  3036  000852  A2DF               	btfss	indf2,1,c
  3037  000854  D01F               	goto	l4652
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;ikb.c: 558: {;ikb.c: 559: key[k].bf.ReadyToRead = 1;
  3041  000856  5023               	movf	ikey_parsing@k,w,c
  3042  000858  0D10               	mullw	16
  3043  00085A  50F3               	movf	prodl,w,c
  3044  00085C  0F6A               	addlw	low (_key+10)
  3045  00085E  6ED9               	movwf	fsr2l,c
  3046  000860  6ADA               	clrf	fsr2h,c
  3047  000862  8CDF               	bsf	indf2,6,c
  3048                           
  3049                           ;ikb.c: 561: if (key[k].bf.Reptt)
  3050  000864  5023               	movf	ikey_parsing@k,w,c
  3051  000866  0D10               	mullw	16
  3052  000868  50F3               	movf	prodl,w,c
  3053  00086A  0F6A               	addlw	low (_key+10)
  3054  00086C  6ED9               	movwf	fsr2l,c
  3055  00086E  6ADA               	clrf	fsr2h,c
  3056  000870  AADF               	btfss	indf2,5,c
  3057  000872  D008               	goto	l4650
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;ikb.c: 562: {;ikb.c: 563: key[k].sm1 = (6);
  3061  000874  5023               	movf	ikey_parsing@k,w,c
  3062  000876  0D10               	mullw	16
  3063  000878  50F3               	movf	prodl,w,c
  3064  00087A  0F66               	addlw	low (_key+6)
  3065  00087C  6ED9               	movwf	fsr2l,c
  3066  00087E  6ADA               	clrf	fsr2h,c
  3067  000880  0E06               	movlw	6
  3068  000882  D037               	goto	L2
  3069  000884                     l4650:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;ikb.c: 565: else;ikb.c: 566: {;ikb.c: 567: key[k].sm1 = (1);
  3073  000884  5023               	movf	ikey_parsing@k,w,c
  3074  000886  0D10               	mullw	16
  3075  000888  50F3               	movf	prodl,w,c
  3076  00088A  0F66               	addlw	low (_key+6)
  3077  00088C  6ED9               	movwf	fsr2l,c
  3078  00088E  6ADA               	clrf	fsr2h,c
  3079  000890  0E01               	movlw	1
  3080  000892  D02F               	goto	L2
  3081  000894                     l4652:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;ikb.c: 570: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  3085  000894  5023               	movf	ikey_parsing@k,w,c
  3086  000896  0D10               	mullw	16
  3087  000898  50F3               	movf	prodl,w,c
  3088  00089A  0F6A               	addlw	low (_key+10)
  3089  00089C  6ED9               	movwf	fsr2l,c
  3090  00089E  6ADA               	clrf	fsr2h,c
  3091  0008A0  A4DF               	btfss	indf2,2,c
  3092  0008A2  D008               	goto	l4656
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;ikb.c: 571: {;ikb.c: 572: key[k].sm1 = (5);
  3096  0008A4  5023               	movf	ikey_parsing@k,w,c
  3097  0008A6  0D10               	mullw	16
  3098  0008A8  50F3               	movf	prodl,w,c
  3099  0008AA  0F66               	addlw	low (_key+6)
  3100  0008AC  6ED9               	movwf	fsr2l,c
  3101  0008AE  6ADA               	clrf	fsr2h,c
  3102  0008B0  0E05               	movlw	5
  3103  0008B2  D01F               	goto	L2
  3104  0008B4                     l4656:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;ikb.c: 575: else if (key[k].bf.AtTimeExpired)
  3108  0008B4  5023               	movf	ikey_parsing@k,w,c
  3109  0008B6  0D10               	mullw	16
  3110  0008B8  50F3               	movf	prodl,w,c
  3111  0008BA  0F6A               	addlw	low (_key+10)
  3112  0008BC  6ED9               	movwf	fsr2l,c
  3113  0008BE  6ADA               	clrf	fsr2h,c
  3114  0008C0  A6DF               	btfss	indf2,3,c
  3115  0008C2  D008               	goto	l4660
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;ikb.c: 576: {;ikb.c: 577: key[k].sm1 = (3);
  3119  0008C4  5023               	movf	ikey_parsing@k,w,c
  3120  0008C6  0D10               	mullw	16
  3121  0008C8  50F3               	movf	prodl,w,c
  3122  0008CA  0F66               	addlw	low (_key+6)
  3123  0008CC  6ED9               	movwf	fsr2l,c
  3124  0008CE  6ADA               	clrf	fsr2h,c
  3125  0008D0  0E03               	movlw	3
  3126  0008D2  D00F               	goto	L2
  3127  0008D4                     l4660:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;ikb.c: 579: else if (key[k].bf.AtTimeExpired2)
  3131  0008D4  5023               	movf	ikey_parsing@k,w,c
  3132  0008D6  0D10               	mullw	16
  3133  0008D8  50F3               	movf	prodl,w,c
  3134  0008DA  0F6A               	addlw	low (_key+10)
  3135  0008DC  6ED9               	movwf	fsr2l,c
  3136  0008DE  6ADA               	clrf	fsr2h,c
  3137  0008E0  A8DF               	btfss	indf2,4,c
  3138  0008E2  D008               	goto	l295
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;ikb.c: 580: {;ikb.c: 581: key[k].sm1 = (4);
  3142  0008E4  5023               	movf	ikey_parsing@k,w,c
  3143  0008E6  0D10               	mullw	16
  3144  0008E8  50F3               	movf	prodl,w,c
  3145  0008EA  0F66               	addlw	low (_key+6)
  3146  0008EC  6ED9               	movwf	fsr2l,c
  3147  0008EE  6ADA               	clrf	fsr2h,c
  3148  0008F0  0E04               	movlw	4
  3149  0008F2                     L2:
  3150  0008F2  6EDF               	movwf	indf2,c
  3151  0008F4                     l295:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;ikb.c: 582: };ikb.c: 585: key[k].bf.InProcessing = 1;
  3155  0008F4  5023               	movf	ikey_parsing@k,w,c
  3156  0008F6  0D10               	mullw	16
  3157  0008F8  50F3               	movf	prodl,w,c
  3158  0008FA  0F6B               	addlw	low (_key+11)
  3159  0008FC  6ED9               	movwf	fsr2l,c
  3160  0008FE  6ADA               	clrf	fsr2h,c
  3161  000900  82DF               	bsf	indf2,1,c
  3162                           
  3163                           ;ikb.c: 590: if (key[k].num_group_x != 0)
  3164  000902  5023               	movf	ikey_parsing@k,w,c
  3165  000904  0D10               	mullw	16
  3166  000906  50F3               	movf	prodl,w,c
  3167  000908  0F69               	addlw	low (_key+9)
  3168  00090A  6ED9               	movwf	fsr2l,c
  3169  00090C  6ADA               	clrf	fsr2h,c
  3170  00090E  50DF               	movf	indf2,w,c
  3171  000910  B4D8               	btfsc	status,2,c
  3172  000912  D015               	goto	l289
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;ikb.c: 591: {;ikb.c: 592: group_x[ key[k].num_group_x ] = 1;
  3176  000914  5023               	movf	ikey_parsing@k,w,c
  3177  000916  0D10               	mullw	16
  3178  000918  50F3               	movf	prodl,w,c
  3179  00091A  0F69               	addlw	low (_key+9)
  3180  00091C  6ED9               	movwf	fsr2l,c
  3181  00091E  6ADA               	clrf	fsr2h,c
  3182  000920  50DF               	movf	indf2,w,c
  3183  000922  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3184  000924  501F               	movf	??_ikey_parsing,w,c
  3185  000926  0FB0               	addlw	low _group_x
  3186  000928  6ED9               	movwf	fsr2l,c
  3187  00092A  6ADA               	clrf	fsr2h,c
  3188  00092C  0E01               	movlw	1
  3189  00092E  6EDF               	movwf	indf2,c
  3190                           
  3191                           ;ikb.c: 593: key[k].bf.OwnerOfGroup = 1;
  3192  000930  5023               	movf	ikey_parsing@k,w,c
  3193  000932  0D10               	mullw	16
  3194  000934  50F3               	movf	prodl,w,c
  3195  000936  0F6B               	addlw	low (_key+11)
  3196  000938  6ED9               	movwf	fsr2l,c
  3197  00093A  6ADA               	clrf	fsr2h,c
  3198  00093C  80DF               	bsf	indf2,0,c
  3199  00093E                     l289:
  3200                           
  3201                           ;ikb.c: 594: };ikb.c: 596: };ikb.c: 597: };ikb.c: 598: };ikb.c: 602: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  3202  00093E  5023               	movf	ikey_parsing@k,w,c
  3203  000940  0D10               	mullw	16
  3204  000942  50F3               	movf	prodl,w,c
  3205  000944  0F66               	addlw	low (_key+6)
  3206  000946  6ED9               	movwf	fsr2l,c
  3207  000948  6ADA               	clrf	fsr2h,c
  3208  00094A  0E05               	movlw	5
  3209  00094C  64DF               	cpfsgt	indf2,c
  3210  00094E  D024               	goto	l302
  3211  000950  5023               	movf	ikey_parsing@k,w,c
  3212  000952  0D10               	mullw	16
  3213  000954  50F3               	movf	prodl,w,c
  3214  000956  0F66               	addlw	low (_key+6)
  3215  000958  6ED9               	movwf	fsr2l,c
  3216  00095A  6ADA               	clrf	fsr2h,c
  3217  00095C  0E09               	movlw	9
  3218  00095E  60DF               	cpfslt	indf2,c
  3219  000960  D01B               	goto	l302
  3220                           
  3221                           ;ikb.c: 603: {;ikb.c: 604: if (key[k].bf.state == 0)
  3222  000962  5023               	movf	ikey_parsing@k,w,c
  3223  000964  0D10               	mullw	16
  3224  000966  50F3               	movf	prodl,w,c
  3225  000968  0F6A               	addlw	low (_key+10)
  3226  00096A  6ED9               	movwf	fsr2l,c
  3227  00096C  6ADA               	clrf	fsr2h,c
  3228  00096E  0100               	movlb	0	; () banked
  3229  000970  B0DF               	btfsc	indf2,0,c
  3230  000972  D012               	goto	l302
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;ikb.c: 605: {;ikb.c: 606: key[k].counter1 = 0;
  3234  000974  5023               	movf	ikey_parsing@k,w,c
  3235  000976  0D10               	mullw	16
  3236  000978  50F3               	movf	prodl,w,c
  3237  00097A  0F67               	addlw	low (_key+7)
  3238  00097C  6ED9               	movwf	fsr2l,c
  3239  00097E  6ADA               	clrf	fsr2h,c
  3240  000980  0E00               	movlw	0
  3241  000982  6EDE               	movwf	postinc2,c
  3242  000984  0E00               	movlw	0
  3243  000986  6EDD               	movwf	postdec2,c
  3244                           
  3245                           ;ikb.c: 607: key[k].sm1 = (2);
  3246  000988  5023               	movf	ikey_parsing@k,w,c
  3247  00098A  0D10               	mullw	16
  3248  00098C  50F3               	movf	prodl,w,c
  3249  00098E  0F66               	addlw	low (_key+6)
  3250  000990  6ED9               	movwf	fsr2l,c
  3251  000992  6ADA               	clrf	fsr2h,c
  3252  000994  0E02               	movlw	2
  3253  000996  6EDF               	movwf	indf2,c
  3254  000998                     l302:
  3255                           
  3256                           ;ikb.c: 608: };ikb.c: 609: };ikb.c: 611: if (key[k].sm1 == (6) )
  3257  000998  5023               	movf	ikey_parsing@k,w,c
  3258  00099A  0D10               	mullw	16
  3259  00099C  50F3               	movf	prodl,w,c
  3260  00099E  0F66               	addlw	low (_key+6)
  3261  0009A0  6ED9               	movwf	fsr2l,c
  3262  0009A2  6ADA               	clrf	fsr2h,c
  3263  0009A4  0E06               	movlw	6
  3264  0009A6  18DE               	xorwf	postinc2,w,c
  3265  0009A8  A4D8               	btfss	status,2,c
  3266  0009AA  D027               	goto	l304
  3267                           
  3268                           ;ikb.c: 612: {;ikb.c: 613: if ( ++key[k].counter1 >= key[k].repp.to_start)
  3269  0009AC  5023               	movf	ikey_parsing@k,w,c
  3270  0009AE  0D10               	mullw	16
  3271  0009B0  50F3               	movf	prodl,w,c
  3272  0009B2  0F6C               	addlw	low (_key+12)
  3273  0009B4  6ED9               	movwf	fsr2l,c
  3274  0009B6  6ADA               	clrf	fsr2h,c
  3275  0009B8  5023               	movf	ikey_parsing@k,w,c
  3276  0009BA  0D10               	mullw	16
  3277  0009BC  50F3               	movf	prodl,w,c
  3278  0009BE  0F67               	addlw	low (_key+7)
  3279  0009C0  6EE1               	movwf	fsr1l,c
  3280  0009C2  6AE2               	clrf	fsr1h,c
  3281  0009C4  2AE6               	incf	postinc1,f,c
  3282  0009C6  0E00               	movlw	0
  3283  0009C8  22E5               	addwfc	postdec1,f,c
  3284  0009CA  50DE               	movf	postinc2,w,c
  3285  0009CC  5CE6               	subwf	postinc1,w,c
  3286  0009CE  50DE               	movf	postinc2,w,c
  3287  0009D0  58E6               	subwfb	postinc1,w,c
  3288  0009D2  A0D8               	btfss	status,0,c
  3289  0009D4  D012               	goto	l304
  3290                           
  3291                           ;ikb.c: 614: {;ikb.c: 615: key[k].counter1 =0;
  3292  0009D6  5023               	movf	ikey_parsing@k,w,c
  3293  0009D8  0D10               	mullw	16
  3294  0009DA  50F3               	movf	prodl,w,c
  3295  0009DC  0F67               	addlw	low (_key+7)
  3296  0009DE  6ED9               	movwf	fsr2l,c
  3297  0009E0  6ADA               	clrf	fsr2h,c
  3298  0009E2  0E00               	movlw	0
  3299  0009E4  6EDE               	movwf	postinc2,c
  3300  0009E6  0E00               	movlw	0
  3301  0009E8  6EDD               	movwf	postdec2,c
  3302                           
  3303                           ;ikb.c: 616: key[k].sm1 = (7);
  3304  0009EA  5023               	movf	ikey_parsing@k,w,c
  3305  0009EC  0D10               	mullw	16
  3306  0009EE  50F3               	movf	prodl,w,c
  3307  0009F0  0F66               	addlw	low (_key+6)
  3308  0009F2  6ED9               	movwf	fsr2l,c
  3309  0009F4  6ADA               	clrf	fsr2h,c
  3310  0009F6  0E07               	movlw	7
  3311  0009F8  6EDF               	movwf	indf2,c
  3312  0009FA                     l304:
  3313                           
  3314                           ;ikb.c: 617: };ikb.c: 618: };ikb.c: 619: if (key[k].sm1 == (7))
  3315  0009FA  5023               	movf	ikey_parsing@k,w,c
  3316  0009FC  0D10               	mullw	16
  3317  0009FE  50F3               	movf	prodl,w,c
  3318  000A00  0F66               	addlw	low (_key+6)
  3319  000A02  6ED9               	movwf	fsr2l,c
  3320  000A04  6ADA               	clrf	fsr2h,c
  3321  000A06  0E07               	movlw	7
  3322  000A08  18DE               	xorwf	postinc2,w,c
  3323  000A0A  A4D8               	btfss	status,2,c
  3324  000A0C  D018               	goto	l306
  3325                           
  3326                           ;ikb.c: 620: {;ikb.c: 621: if (key[k].bf.ReadyToRead == 0)
  3327  000A0E  5023               	movf	ikey_parsing@k,w,c
  3328  000A10  0D10               	mullw	16
  3329  000A12  50F3               	movf	prodl,w,c
  3330  000A14  0F6A               	addlw	low (_key+10)
  3331  000A16  6ED9               	movwf	fsr2l,c
  3332  000A18  6ADA               	clrf	fsr2h,c
  3333  000A1A  0100               	movlb	0	; () banked
  3334  000A1C  BCDF               	btfsc	indf2,6,c
  3335  000A1E  D00F               	goto	l306
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;ikb.c: 622: {;ikb.c: 623: key[k].bf.ReadyToRead = 1;
  3339  000A20  5023               	movf	ikey_parsing@k,w,c
  3340  000A22  0D10               	mullw	16
  3341  000A24  50F3               	movf	prodl,w,c
  3342  000A26  0F6A               	addlw	low (_key+10)
  3343  000A28  6ED9               	movwf	fsr2l,c
  3344  000A2A  6ADA               	clrf	fsr2h,c
  3345  000A2C  8CDF               	bsf	indf2,6,c
  3346                           
  3347                           ;ikb.c: 624: key[k].sm1 = (8);
  3348  000A2E  5023               	movf	ikey_parsing@k,w,c
  3349  000A30  0D10               	mullw	16
  3350  000A32  50F3               	movf	prodl,w,c
  3351  000A34  0F66               	addlw	low (_key+6)
  3352  000A36  6ED9               	movwf	fsr2l,c
  3353  000A38  6ADA               	clrf	fsr2h,c
  3354  000A3A  0E08               	movlw	8
  3355  000A3C  6EDF               	movwf	indf2,c
  3356  000A3E                     l306:
  3357                           
  3358                           ;ikb.c: 625: };ikb.c: 626: };ikb.c: 627: if (key[k].sm1 == (8))
  3359  000A3E  5023               	movf	ikey_parsing@k,w,c
  3360  000A40  0D10               	mullw	16
  3361  000A42  50F3               	movf	prodl,w,c
  3362  000A44  0F66               	addlw	low (_key+6)
  3363  000A46  6ED9               	movwf	fsr2l,c
  3364  000A48  6ADA               	clrf	fsr2h,c
  3365  000A4A  0E08               	movlw	8
  3366  000A4C  18DE               	xorwf	postinc2,w,c
  3367  000A4E  A4D8               	btfss	status,2,c
  3368  000A50  D027               	goto	l308
  3369                           
  3370                           ;ikb.c: 628: {;ikb.c: 629: if ( ++key[k].counter1 >= key[k].repp.after_start)
  3371  000A52  5023               	movf	ikey_parsing@k,w,c
  3372  000A54  0D10               	mullw	16
  3373  000A56  50F3               	movf	prodl,w,c
  3374  000A58  0F6E               	addlw	low (_key+14)
  3375  000A5A  6ED9               	movwf	fsr2l,c
  3376  000A5C  6ADA               	clrf	fsr2h,c
  3377  000A5E  5023               	movf	ikey_parsing@k,w,c
  3378  000A60  0D10               	mullw	16
  3379  000A62  50F3               	movf	prodl,w,c
  3380  000A64  0F67               	addlw	low (_key+7)
  3381  000A66  6EE1               	movwf	fsr1l,c
  3382  000A68  6AE2               	clrf	fsr1h,c
  3383  000A6A  2AE6               	incf	postinc1,f,c
  3384  000A6C  0E00               	movlw	0
  3385  000A6E  22E5               	addwfc	postdec1,f,c
  3386  000A70  50DE               	movf	postinc2,w,c
  3387  000A72  5CE6               	subwf	postinc1,w,c
  3388  000A74  50DE               	movf	postinc2,w,c
  3389  000A76  58E6               	subwfb	postinc1,w,c
  3390  000A78  A0D8               	btfss	status,0,c
  3391  000A7A  D012               	goto	l308
  3392                           
  3393                           ;ikb.c: 630: {;ikb.c: 631: key[k].counter1 = 0;
  3394  000A7C  5023               	movf	ikey_parsing@k,w,c
  3395  000A7E  0D10               	mullw	16
  3396  000A80  50F3               	movf	prodl,w,c
  3397  000A82  0F67               	addlw	low (_key+7)
  3398  000A84  6ED9               	movwf	fsr2l,c
  3399  000A86  6ADA               	clrf	fsr2h,c
  3400  000A88  0E00               	movlw	0
  3401  000A8A  6EDE               	movwf	postinc2,c
  3402  000A8C  0E00               	movlw	0
  3403  000A8E  6EDD               	movwf	postdec2,c
  3404                           
  3405                           ;ikb.c: 632: key[k].sm1 = (7);
  3406  000A90  5023               	movf	ikey_parsing@k,w,c
  3407  000A92  0D10               	mullw	16
  3408  000A94  50F3               	movf	prodl,w,c
  3409  000A96  0F66               	addlw	low (_key+6)
  3410  000A98  6ED9               	movwf	fsr2l,c
  3411  000A9A  6ADA               	clrf	fsr2h,c
  3412  000A9C  0E07               	movlw	7
  3413  000A9E  6EDF               	movwf	indf2,c
  3414  000AA0                     l308:
  3415                           
  3416                           ;ikb.c: 633: };ikb.c: 634: };ikb.c: 636: if (key[k].sm1 == (5) )
  3417  000AA0  5023               	movf	ikey_parsing@k,w,c
  3418  000AA2  0D10               	mullw	16
  3419  000AA4  50F3               	movf	prodl,w,c
  3420  000AA6  0F66               	addlw	low (_key+6)
  3421  000AA8  6ED9               	movwf	fsr2l,c
  3422  000AAA  6ADA               	clrf	fsr2h,c
  3423  000AAC  0E05               	movlw	5
  3424  000AAE  18DE               	xorwf	postinc2,w,c
  3425  000AB0  A4D8               	btfss	status,2,c
  3426  000AB2  D018               	goto	l310
  3427                           
  3428                           ;ikb.c: 637: {;ikb.c: 638: if (key[k].bf.state == 0)
  3429  000AB4  5023               	movf	ikey_parsing@k,w,c
  3430  000AB6  0D10               	mullw	16
  3431  000AB8  50F3               	movf	prodl,w,c
  3432  000ABA  0F6A               	addlw	low (_key+10)
  3433  000ABC  6ED9               	movwf	fsr2l,c
  3434  000ABE  6ADA               	clrf	fsr2h,c
  3435  000AC0  0100               	movlb	0	; () banked
  3436  000AC2  B0DF               	btfsc	indf2,0,c
  3437  000AC4  D00F               	goto	l310
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;ikb.c: 639: {;ikb.c: 640: key[k].bf.ReadyToRead = 1;
  3441  000AC6  5023               	movf	ikey_parsing@k,w,c
  3442  000AC8  0D10               	mullw	16
  3443  000ACA  50F3               	movf	prodl,w,c
  3444  000ACC  0F6A               	addlw	low (_key+10)
  3445  000ACE  6ED9               	movwf	fsr2l,c
  3446  000AD0  6ADA               	clrf	fsr2h,c
  3447  000AD2  8CDF               	bsf	indf2,6,c
  3448                           
  3449                           ;ikb.c: 641: key[k].sm1 = (2);
  3450  000AD4  5023               	movf	ikey_parsing@k,w,c
  3451  000AD6  0D10               	mullw	16
  3452  000AD8  50F3               	movf	prodl,w,c
  3453  000ADA  0F66               	addlw	low (_key+6)
  3454  000ADC  6ED9               	movwf	fsr2l,c
  3455  000ADE  6ADA               	clrf	fsr2h,c
  3456  000AE0  0E02               	movlw	2
  3457  000AE2  6EDF               	movwf	indf2,c
  3458  000AE4                     l310:
  3459                           
  3460                           ;ikb.c: 642: };ikb.c: 643: };ikb.c: 645: if (key[k].sm1 == (3) )
  3461  000AE4  5023               	movf	ikey_parsing@k,w,c
  3462  000AE6  0D10               	mullw	16
  3463  000AE8  50F3               	movf	prodl,w,c
  3464  000AEA  0F66               	addlw	low (_key+6)
  3465  000AEC  6ED9               	movwf	fsr2l,c
  3466  000AEE  6ADA               	clrf	fsr2h,c
  3467  000AF0  0E03               	movlw	3
  3468  000AF2  18DE               	xorwf	postinc2,w,c
  3469  000AF4  A4D8               	btfss	status,2,c
  3470  000AF6  D09C               	goto	l312
  3471                           
  3472                           ;ikb.c: 646: {;ikb.c: 647: key[k].counter1++;
  3473  000AF8  5023               	movf	ikey_parsing@k,w,c
  3474  000AFA  0D10               	mullw	16
  3475  000AFC  50F3               	movf	prodl,w,c
  3476  000AFE  0F67               	addlw	low (_key+7)
  3477  000B00  6ED9               	movwf	fsr2l,c
  3478  000B02  6ADA               	clrf	fsr2h,c
  3479  000B04  2ADE               	incf	postinc2,f,c
  3480  000B06  0E00               	movlw	0
  3481  000B08  22DD               	addwfc	postdec2,f,c
  3482                           
  3483                           ;ikb.c: 649: if (key[k].bf.state == 0)
  3484  000B0A  5023               	movf	ikey_parsing@k,w,c
  3485  000B0C  0D10               	mullw	16
  3486  000B0E  50F3               	movf	prodl,w,c
  3487  000B10  0F6A               	addlw	low (_key+10)
  3488  000B12  6ED9               	movwf	fsr2l,c
  3489  000B14  6ADA               	clrf	fsr2h,c
  3490  000B16  0100               	movlb	0	; () banked
  3491  000B18  B0DF               	btfsc	indf2,0,c
  3492  000B1A  D03D               	goto	l4694
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;ikb.c: 650: {;ikb.c: 651: if (key[k].counter1 <= ((1000E-3/5E-3)) )
  3496  000B1C  0E00               	movlw	0
  3497  000B1E  6E16               	movwf	___ftge@ff1,c
  3498  000B20  0E48               	movlw	72
  3499  000B22  6E17               	movwf	___ftge@ff1+1,c
  3500  000B24  0E43               	movlw	67
  3501  000B26  6E18               	movwf	___ftge@ff1+2,c
  3502  000B28  5023               	movf	ikey_parsing@k,w,c
  3503  000B2A  0D10               	mullw	16
  3504  000B2C  50F3               	movf	prodl,w,c
  3505  000B2E  0F67               	addlw	low (_key+7)
  3506  000B30  6ED9               	movwf	fsr2l,c
  3507  000B32  6ADA               	clrf	fsr2h,c
  3508  000B34  CFDE F013          	movff	postinc2,___lwtoft@c
  3509  000B38  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3510  000B3C  ECEC  F011         	call	___lwtoft	;wreg free
  3511  000B40  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3512  000B44  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3513  000B48  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3514  000B4C  ECE6  F00E         	call	___ftge	;wreg free
  3515  000B50  A0D8               	btfss	status,0,c
  3516  000B52  D021               	goto	l4694
  3517                           
  3518                           ;ikb.c: 652: {;ikb.c: 653: key[k].counter1 = 0;
  3519  000B54  5023               	movf	ikey_parsing@k,w,c
  3520  000B56  0D10               	mullw	16
  3521  000B58  50F3               	movf	prodl,w,c
  3522  000B5A  0F67               	addlw	low (_key+7)
  3523  000B5C  6ED9               	movwf	fsr2l,c
  3524  000B5E  6ADA               	clrf	fsr2h,c
  3525  000B60  0E00               	movlw	0
  3526  000B62  6EDE               	movwf	postinc2,c
  3527  000B64  0E00               	movlw	0
  3528  000B66  6EDD               	movwf	postdec2,c
  3529                           
  3530                           ;ikb.c: 655: key[k].bf.ReadyToRead = 1;
  3531  000B68  5023               	movf	ikey_parsing@k,w,c
  3532  000B6A  0D10               	mullw	16
  3533  000B6C  50F3               	movf	prodl,w,c
  3534  000B6E  0F6A               	addlw	low (_key+10)
  3535  000B70  6ED9               	movwf	fsr2l,c
  3536  000B72  6ADA               	clrf	fsr2h,c
  3537  000B74  0100               	movlb	0	; () banked
  3538  000B76  8CDF               	bsf	indf2,6,c
  3539                           
  3540                           ;ikb.c: 656: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3541  000B78  5023               	movf	ikey_parsing@k,w,c
  3542  000B7A  0D10               	mullw	16
  3543  000B7C  50F3               	movf	prodl,w,c
  3544  000B7E  0F6A               	addlw	low (_key+10)
  3545  000B80  6ED9               	movwf	fsr2l,c
  3546  000B82  6ADA               	clrf	fsr2h,c
  3547  000B84  9EDF               	bcf	indf2,7,c
  3548                           
  3549                           ;ikb.c: 658: key[k].sm1 = (2);
  3550  000B86  5023               	movf	ikey_parsing@k,w,c
  3551  000B88  0D10               	mullw	16
  3552  000B8A  50F3               	movf	prodl,w,c
  3553  000B8C  0F66               	addlw	low (_key+6)
  3554  000B8E  6ED9               	movwf	fsr2l,c
  3555  000B90  6ADA               	clrf	fsr2h,c
  3556  000B92  0E02               	movlw	2
  3557  000B94  6EDF               	movwf	indf2,c
  3558  000B96                     l4694:
  3559                           
  3560                           ;ikb.c: 659: };ikb.c: 660: };ikb.c: 662: if (key[k].counter1 > ((1000E-3/5E-3)) )
  3561  000B96  0E00               	movlw	0
  3562  000B98  6E16               	movwf	___ftge@ff1,c
  3563  000B9A  0E48               	movlw	72
  3564  000B9C  6E17               	movwf	___ftge@ff1+1,c
  3565  000B9E  0E43               	movlw	67
  3566  000BA0  6E18               	movwf	___ftge@ff1+2,c
  3567  000BA2  5023               	movf	ikey_parsing@k,w,c
  3568  000BA4  0D10               	mullw	16
  3569  000BA6  50F3               	movf	prodl,w,c
  3570  000BA8  0F67               	addlw	low (_key+7)
  3571  000BAA  6ED9               	movwf	fsr2l,c
  3572  000BAC  6ADA               	clrf	fsr2h,c
  3573  000BAE  CFDE F013          	movff	postinc2,___lwtoft@c
  3574  000BB2  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3575  000BB6  ECEC  F011         	call	___lwtoft	;wreg free
  3576  000BBA  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3577  000BBE  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3578  000BC2  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3579  000BC6  ECE6  F00E         	call	___ftge	;wreg free
  3580  000BCA  B0D8               	btfsc	status,0,c
  3581  000BCC  D031               	goto	l312
  3582                           
  3583                           ;ikb.c: 663: {;ikb.c: 664: key[k].counter1 = 0x0000;
  3584  000BCE  5023               	movf	ikey_parsing@k,w,c
  3585  000BD0  0D10               	mullw	16
  3586  000BD2  50F3               	movf	prodl,w,c
  3587  000BD4  0F67               	addlw	low (_key+7)
  3588  000BD6  6ED9               	movwf	fsr2l,c
  3589  000BD8  6ADA               	clrf	fsr2h,c
  3590  000BDA  0E00               	movlw	0
  3591  000BDC  6EDE               	movwf	postinc2,c
  3592  000BDE  0E00               	movlw	0
  3593  000BE0  6EDD               	movwf	postdec2,c
  3594                           
  3595                           ;ikb.c: 666: key[k].bf.ReadyToRead = 1;
  3596  000BE2  5023               	movf	ikey_parsing@k,w,c
  3597  000BE4  0D10               	mullw	16
  3598  000BE6  50F3               	movf	prodl,w,c
  3599  000BE8  0F6A               	addlw	low (_key+10)
  3600  000BEA  6ED9               	movwf	fsr2l,c
  3601  000BEC  6ADA               	clrf	fsr2h,c
  3602  000BEE  0100               	movlb	0	; () banked
  3603  000BF0  8CDF               	bsf	indf2,6,c
  3604                           
  3605                           ;ikb.c: 667: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3606  000BF2  5023               	movf	ikey_parsing@k,w,c
  3607  000BF4  0D10               	mullw	16
  3608  000BF6  50F3               	movf	prodl,w,c
  3609  000BF8  0F6A               	addlw	low (_key+10)
  3610  000BFA  6ED9               	movwf	fsr2l,c
  3611  000BFC  6ADA               	clrf	fsr2h,c
  3612  000BFE  8EDF               	bsf	indf2,7,c
  3613                           
  3614                           ;ikb.c: 669: if (!key[k].bf.Reptt)
  3615  000C00  5023               	movf	ikey_parsing@k,w,c
  3616  000C02  0D10               	mullw	16
  3617  000C04  50F3               	movf	prodl,w,c
  3618  000C06  0F6A               	addlw	low (_key+10)
  3619  000C08  6ED9               	movwf	fsr2l,c
  3620  000C0A  6ADA               	clrf	fsr2h,c
  3621  000C0C  BADF               	btfsc	indf2,5,c
  3622  000C0E  D008               	goto	l4700
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;ikb.c: 670: {;ikb.c: 671: key[k].sm1 = (1);
  3626  000C10  5023               	movf	ikey_parsing@k,w,c
  3627  000C12  0D10               	mullw	16
  3628  000C14  50F3               	movf	prodl,w,c
  3629  000C16  0F66               	addlw	low (_key+6)
  3630  000C18  6ED9               	movwf	fsr2l,c
  3631  000C1A  6ADA               	clrf	fsr2h,c
  3632  000C1C  0E01               	movlw	1
  3633  000C1E  D007               	goto	L3
  3634  000C20                     l4700:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;ikb.c: 673: else;ikb.c: 674: {;ikb.c: 675: key[k].sm1 = (8);
  3638  000C20  5023               	movf	ikey_parsing@k,w,c
  3639  000C22  0D10               	mullw	16
  3640  000C24  50F3               	movf	prodl,w,c
  3641  000C26  0F66               	addlw	low (_key+6)
  3642  000C28  6ED9               	movwf	fsr2l,c
  3643  000C2A  6ADA               	clrf	fsr2h,c
  3644  000C2C  0E08               	movlw	8
  3645  000C2E                     L3:
  3646  000C2E  6EDF               	movwf	indf2,c
  3647  000C30                     l312:
  3648                           
  3649                           ;ikb.c: 676: };ikb.c: 677: };ikb.c: 678: };ikb.c: 683: if (key[k].sm1 == (4))
  3650  000C30  5023               	movf	ikey_parsing@k,w,c
  3651  000C32  0D10               	mullw	16
  3652  000C34  50F3               	movf	prodl,w,c
  3653  000C36  0F66               	addlw	low (_key+6)
  3654  000C38  6ED9               	movwf	fsr2l,c
  3655  000C3A  6ADA               	clrf	fsr2h,c
  3656  000C3C  0E04               	movlw	4
  3657  000C3E  18DE               	xorwf	postinc2,w,c
  3658  000C40  A4D8               	btfss	status,2,c
  3659  000C42  D08C               	goto	l318
  3660                           
  3661                           ;ikb.c: 684: {;ikb.c: 685: key[k].counter1++;
  3662  000C44  5023               	movf	ikey_parsing@k,w,c
  3663  000C46  0D10               	mullw	16
  3664  000C48  50F3               	movf	prodl,w,c
  3665  000C4A  0F67               	addlw	low (_key+7)
  3666  000C4C  6ED9               	movwf	fsr2l,c
  3667  000C4E  6ADA               	clrf	fsr2h,c
  3668  000C50  2ADE               	incf	postinc2,f,c
  3669  000C52  0E00               	movlw	0
  3670  000C54  22DD               	addwfc	postdec2,f,c
  3671                           
  3672                           ;ikb.c: 687: if (key[k].bf.state == 0)
  3673  000C56  5023               	movf	ikey_parsing@k,w,c
  3674  000C58  0D10               	mullw	16
  3675  000C5A  50F3               	movf	prodl,w,c
  3676  000C5C  0F6A               	addlw	low (_key+10)
  3677  000C5E  6ED9               	movwf	fsr2l,c
  3678  000C60  6ADA               	clrf	fsr2h,c
  3679  000C62  0100               	movlb	0	; () banked
  3680  000C64  B0DF               	btfsc	indf2,0,c
  3681  000C66  D03D               	goto	l4708
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;ikb.c: 688: {;ikb.c: 689: if (key[k].counter1 <= ((1000E-3/5E-3)))
  3685  000C68  0E00               	movlw	0
  3686  000C6A  6E16               	movwf	___ftge@ff1,c
  3687  000C6C  0E48               	movlw	72
  3688  000C6E  6E17               	movwf	___ftge@ff1+1,c
  3689  000C70  0E43               	movlw	67
  3690  000C72  6E18               	movwf	___ftge@ff1+2,c
  3691  000C74  5023               	movf	ikey_parsing@k,w,c
  3692  000C76  0D10               	mullw	16
  3693  000C78  50F3               	movf	prodl,w,c
  3694  000C7A  0F67               	addlw	low (_key+7)
  3695  000C7C  6ED9               	movwf	fsr2l,c
  3696  000C7E  6ADA               	clrf	fsr2h,c
  3697  000C80  CFDE F013          	movff	postinc2,___lwtoft@c
  3698  000C84  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3699  000C88  ECEC  F011         	call	___lwtoft	;wreg free
  3700  000C8C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3701  000C90  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3702  000C94  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3703  000C98  ECE6  F00E         	call	___ftge	;wreg free
  3704  000C9C  A0D8               	btfss	status,0,c
  3705  000C9E  D021               	goto	l4708
  3706                           
  3707                           ;ikb.c: 690: {;ikb.c: 691: key[k].counter1 = 0;
  3708  000CA0  5023               	movf	ikey_parsing@k,w,c
  3709  000CA2  0D10               	mullw	16
  3710  000CA4  50F3               	movf	prodl,w,c
  3711  000CA6  0F67               	addlw	low (_key+7)
  3712  000CA8  6ED9               	movwf	fsr2l,c
  3713  000CAA  6ADA               	clrf	fsr2h,c
  3714  000CAC  0E00               	movlw	0
  3715  000CAE  6EDE               	movwf	postinc2,c
  3716  000CB0  0E00               	movlw	0
  3717  000CB2  6EDD               	movwf	postdec2,c
  3718                           
  3719                           ;ikb.c: 693: key[k].bf.ReadyToRead = 1;
  3720  000CB4  5023               	movf	ikey_parsing@k,w,c
  3721  000CB6  0D10               	mullw	16
  3722  000CB8  50F3               	movf	prodl,w,c
  3723  000CBA  0F6A               	addlw	low (_key+10)
  3724  000CBC  6ED9               	movwf	fsr2l,c
  3725  000CBE  6ADA               	clrf	fsr2h,c
  3726  000CC0  0100               	movlb	0	; () banked
  3727  000CC2  8CDF               	bsf	indf2,6,c
  3728                           
  3729                           ;ikb.c: 694: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3730  000CC4  5023               	movf	ikey_parsing@k,w,c
  3731  000CC6  0D10               	mullw	16
  3732  000CC8  50F3               	movf	prodl,w,c
  3733  000CCA  0F6A               	addlw	low (_key+10)
  3734  000CCC  6ED9               	movwf	fsr2l,c
  3735  000CCE  6ADA               	clrf	fsr2h,c
  3736  000CD0  9EDF               	bcf	indf2,7,c
  3737                           
  3738                           ;ikb.c: 696: key[k].sm1 = (2);
  3739  000CD2  5023               	movf	ikey_parsing@k,w,c
  3740  000CD4  0D10               	mullw	16
  3741  000CD6  50F3               	movf	prodl,w,c
  3742  000CD8  0F66               	addlw	low (_key+6)
  3743  000CDA  6ED9               	movwf	fsr2l,c
  3744  000CDC  6ADA               	clrf	fsr2h,c
  3745  000CDE  0E02               	movlw	2
  3746  000CE0  6EDF               	movwf	indf2,c
  3747  000CE2                     l4708:
  3748                           
  3749                           ;ikb.c: 697: };ikb.c: 698: };ikb.c: 701: if (key[k].counter1 >= ((3000E-3/5E-3)))
  3750  000CE2  5023               	movf	ikey_parsing@k,w,c
  3751  000CE4  0D10               	mullw	16
  3752  000CE6  50F3               	movf	prodl,w,c
  3753  000CE8  0F67               	addlw	low (_key+7)
  3754  000CEA  6ED9               	movwf	fsr2l,c
  3755  000CEC  6ADA               	clrf	fsr2h,c
  3756  000CEE  CFDE F013          	movff	postinc2,___lwtoft@c
  3757  000CF2  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3758  000CF6  ECEC  F011         	call	___lwtoft	;wreg free
  3759  000CFA  C013  F016         	movff	?___lwtoft,___ftge@ff1
  3760  000CFE  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  3761  000D02  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  3762  000D06  0E00               	movlw	0
  3763  000D08  6E19               	movwf	___ftge@ff2,c
  3764  000D0A  0E16               	movlw	22
  3765  000D0C  6E1A               	movwf	___ftge@ff2+1,c
  3766  000D0E  0E44               	movlw	68
  3767  000D10  6E1B               	movwf	___ftge@ff2+2,c
  3768  000D12  ECE6  F00E         	call	___ftge	;wreg free
  3769  000D16  A0D8               	btfss	status,0,c
  3770  000D18  D021               	goto	l318
  3771                           
  3772                           ;ikb.c: 702: {;ikb.c: 703: key[k].counter1 = 0x0000;
  3773  000D1A  5023               	movf	ikey_parsing@k,w,c
  3774  000D1C  0D10               	mullw	16
  3775  000D1E  50F3               	movf	prodl,w,c
  3776  000D20  0F67               	addlw	low (_key+7)
  3777  000D22  6ED9               	movwf	fsr2l,c
  3778  000D24  6ADA               	clrf	fsr2h,c
  3779  000D26  0E00               	movlw	0
  3780  000D28  6EDE               	movwf	postinc2,c
  3781  000D2A  0E00               	movlw	0
  3782  000D2C  6EDD               	movwf	postdec2,c
  3783                           
  3784                           ;ikb.c: 705: key[k].bf.ReadyToRead = 1;
  3785  000D2E  5023               	movf	ikey_parsing@k,w,c
  3786  000D30  0D10               	mullw	16
  3787  000D32  50F3               	movf	prodl,w,c
  3788  000D34  0F6A               	addlw	low (_key+10)
  3789  000D36  6ED9               	movwf	fsr2l,c
  3790  000D38  6ADA               	clrf	fsr2h,c
  3791  000D3A  0100               	movlb	0	; () banked
  3792  000D3C  8CDF               	bsf	indf2,6,c
  3793                           
  3794                           ;ikb.c: 706: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3795  000D3E  5023               	movf	ikey_parsing@k,w,c
  3796  000D40  0D10               	mullw	16
  3797  000D42  50F3               	movf	prodl,w,c
  3798  000D44  0F6A               	addlw	low (_key+10)
  3799  000D46  6ED9               	movwf	fsr2l,c
  3800  000D48  6ADA               	clrf	fsr2h,c
  3801  000D4A  8EDF               	bsf	indf2,7,c
  3802                           
  3803                           ;ikb.c: 709: key[k].sm1 = (1);
  3804  000D4C  5023               	movf	ikey_parsing@k,w,c
  3805  000D4E  0D10               	mullw	16
  3806  000D50  50F3               	movf	prodl,w,c
  3807  000D52  0F66               	addlw	low (_key+6)
  3808  000D54  6ED9               	movwf	fsr2l,c
  3809  000D56  6ADA               	clrf	fsr2h,c
  3810  000D58  0E01               	movlw	1
  3811  000D5A  6EDF               	movwf	indf2,c
  3812  000D5C                     l318:
  3813                           
  3814                           ;ikb.c: 710: };ikb.c: 711: };ikb.c: 714: if (key[k].sm1 == (1))
  3815  000D5C  5023               	movf	ikey_parsing@k,w,c
  3816  000D5E  0D10               	mullw	16
  3817  000D60  50F3               	movf	prodl,w,c
  3818  000D62  0F66               	addlw	low (_key+6)
  3819  000D64  6ED9               	movwf	fsr2l,c
  3820  000D66  6ADA               	clrf	fsr2h,c
  3821  000D68  04DE               	decf	postinc2,w,c
  3822  000D6A  A4D8               	btfss	status,2,c
  3823  000D6C  D011               	goto	l322
  3824                           
  3825                           ;ikb.c: 715: {;ikb.c: 716: if (key[k].bf.state == 0)
  3826  000D6E  5023               	movf	ikey_parsing@k,w,c
  3827  000D70  0D10               	mullw	16
  3828  000D72  50F3               	movf	prodl,w,c
  3829  000D74  0F6A               	addlw	low (_key+10)
  3830  000D76  6ED9               	movwf	fsr2l,c
  3831  000D78  6ADA               	clrf	fsr2h,c
  3832  000D7A  0100               	movlb	0	; () banked
  3833  000D7C  B0DF               	btfsc	indf2,0,c
  3834  000D7E  D008               	goto	l322
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;ikb.c: 717: {;ikb.c: 718: key[k].sm1 = (2);
  3838  000D80  5023               	movf	ikey_parsing@k,w,c
  3839  000D82  0D10               	mullw	16
  3840  000D84  50F3               	movf	prodl,w,c
  3841  000D86  0F66               	addlw	low (_key+6)
  3842  000D88  6ED9               	movwf	fsr2l,c
  3843  000D8A  6ADA               	clrf	fsr2h,c
  3844  000D8C  0E02               	movlw	2
  3845  000D8E  6EDF               	movwf	indf2,c
  3846  000D90                     l322:
  3847                           
  3848                           ;ikb.c: 719: };ikb.c: 720: };ikb.c: 722: if (key[k].sm1 == (2))
  3849  000D90  5023               	movf	ikey_parsing@k,w,c
  3850  000D92  0D10               	mullw	16
  3851  000D94  50F3               	movf	prodl,w,c
  3852  000D96  0F66               	addlw	low (_key+6)
  3853  000D98  6ED9               	movwf	fsr2l,c
  3854  000D9A  6ADA               	clrf	fsr2h,c
  3855  000D9C  0E02               	movlw	2
  3856  000D9E  18DE               	xorwf	postinc2,w,c
  3857  000DA0  A4D8               	btfss	status,2,c
  3858  000DA2  D011               	goto	l324
  3859                           
  3860                           ;ikb.c: 723: {;ikb.c: 724: if (key[k].bf.ReadyToRead == 0)
  3861  000DA4  5023               	movf	ikey_parsing@k,w,c
  3862  000DA6  0D10               	mullw	16
  3863  000DA8  50F3               	movf	prodl,w,c
  3864  000DAA  0F6A               	addlw	low (_key+10)
  3865  000DAC  6ED9               	movwf	fsr2l,c
  3866  000DAE  6ADA               	clrf	fsr2h,c
  3867  000DB0  0100               	movlb	0	; () banked
  3868  000DB2  BCDF               	btfsc	indf2,6,c
  3869  000DB4  D008               	goto	l324
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;ikb.c: 725: {;ikb.c: 726: key[k].sm1 = (9);
  3873  000DB6  5023               	movf	ikey_parsing@k,w,c
  3874  000DB8  0D10               	mullw	16
  3875  000DBA  50F3               	movf	prodl,w,c
  3876  000DBC  0F66               	addlw	low (_key+6)
  3877  000DBE  6ED9               	movwf	fsr2l,c
  3878  000DC0  6ADA               	clrf	fsr2h,c
  3879  000DC2  0E09               	movlw	9
  3880  000DC4  6EDF               	movwf	indf2,c
  3881  000DC6                     l324:
  3882                           
  3883                           ;ikb.c: 727: };ikb.c: 728: };ikb.c: 730: if (key[k].sm1 == (9))
  3884  000DC6  5023               	movf	ikey_parsing@k,w,c
  3885  000DC8  0D10               	mullw	16
  3886  000DCA  50F3               	movf	prodl,w,c
  3887  000DCC  0F66               	addlw	low (_key+6)
  3888  000DCE  6ED9               	movwf	fsr2l,c
  3889  000DD0  6ADA               	clrf	fsr2h,c
  3890  000DD2  0E09               	movlw	9
  3891  000DD4  18DE               	xorwf	postinc2,w,c
  3892  000DD6  A4D8               	btfss	status,2,c
  3893  000DD8  D02F               	goto	l4724
  3894                           
  3895                           ;ikb.c: 731: {;ikb.c: 732: if (key[k].num_group_x > 0)
  3896  000DDA  5023               	movf	ikey_parsing@k,w,c
  3897  000DDC  0D10               	mullw	16
  3898  000DDE  50F3               	movf	prodl,w,c
  3899  000DE0  0F69               	addlw	low (_key+9)
  3900  000DE2  6ED9               	movwf	fsr2l,c
  3901  000DE4  6ADA               	clrf	fsr2h,c
  3902  000DE6  50DF               	movf	indf2,w,c
  3903  000DE8  B4D8               	btfsc	status,2,c
  3904  000DEA  D016               	goto	l327
  3905                           
  3906                           ;ikb.c: 733: {;ikb.c: 734: group_x[key[k].num_group_x] = 0;
  3907  000DEC  5023               	movf	ikey_parsing@k,w,c
  3908  000DEE  0D10               	mullw	16
  3909  000DF0  50F3               	movf	prodl,w,c
  3910  000DF2  0F69               	addlw	low (_key+9)
  3911  000DF4  6ED9               	movwf	fsr2l,c
  3912  000DF6  6ADA               	clrf	fsr2h,c
  3913  000DF8  50DF               	movf	indf2,w,c
  3914  000DFA  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3915  000DFC  501F               	movf	??_ikey_parsing,w,c
  3916  000DFE  0FB0               	addlw	low _group_x
  3917  000E00  6ED9               	movwf	fsr2l,c
  3918  000E02  6ADA               	clrf	fsr2h,c
  3919  000E04  0E00               	movlw	0
  3920  000E06  6EDF               	movwf	indf2,c
  3921                           
  3922                           ;ikb.c: 735: key[k].bf.OwnerOfGroup = 0;
  3923  000E08  5023               	movf	ikey_parsing@k,w,c
  3924  000E0A  0D10               	mullw	16
  3925  000E0C  50F3               	movf	prodl,w,c
  3926  000E0E  0F6B               	addlw	low (_key+11)
  3927  000E10  6ED9               	movwf	fsr2l,c
  3928  000E12  6ADA               	clrf	fsr2h,c
  3929  000E14  0100               	movlb	0	; () banked
  3930  000E16  90DF               	bcf	indf2,0,c
  3931  000E18                     l327:
  3932                           
  3933                           ;ikb.c: 736: };ikb.c: 738: key[k].sm1 = (0);
  3934  000E18  5023               	movf	ikey_parsing@k,w,c
  3935  000E1A  0D10               	mullw	16
  3936  000E1C  50F3               	movf	prodl,w,c
  3937  000E1E  0F66               	addlw	low (_key+6)
  3938  000E20  6ED9               	movwf	fsr2l,c
  3939  000E22  6ADA               	clrf	fsr2h,c
  3940  000E24  0E00               	movlw	0
  3941  000E26  6EDF               	movwf	indf2,c
  3942                           
  3943                           ;ikb.c: 741: key[k].bf.InProcessing = 0;
  3944  000E28  5023               	movf	ikey_parsing@k,w,c
  3945  000E2A  0D10               	mullw	16
  3946  000E2C  50F3               	movf	prodl,w,c
  3947  000E2E  0F6B               	addlw	low (_key+11)
  3948  000E30  6ED9               	movwf	fsr2l,c
  3949  000E32  6ADA               	clrf	fsr2h,c
  3950  000E34  0100               	movlb	0	; () banked
  3951  000E36  92DF               	bcf	indf2,1,c
  3952  000E38                     l4724:
  3953  000E38  2A23               	incf	ikey_parsing@k,f,c
  3954  000E3A  0E04               	movlw	4
  3955  000E3C  6423               	cpfsgt	ikey_parsing@k,c
  3956  000E3E  D4EB               	goto	l4638
  3957  000E40  0012               	return	
  3958  000E42                     __end_of_ikey_parsing:
  3959                           	opt callstack 0
  3960                           
  3961 ;; *************** function _ikey_is_accessible *****************
  3962 ;; Defined at:
  3963 ;;		line 509 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  k               1    wreg     unsigned char 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  k               1   12[COMRAM] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      unsigned char 
  3970 ;; Registers used:
  3971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3979 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3980 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3981 ;;Total ram usage:        3 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    5
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_ikey_parsing
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text20
  3992  002070                     __ptext20:
  3993                           	opt callstack 0
  3994  002070                     _ikey_is_accessible:
  3995                           	opt callstack 23
  3996                           
  3997                           ;incstack = 0
  3998                           ;ikey_is_accessible@k stored from wreg
  3999  002070  6E0D               	movwf	ikey_is_accessible@k,c
  4000                           
  4001                           ;ikb.c: 511: if (key[k].num_group_x != 0)
  4002  002072  500D               	movf	ikey_is_accessible@k,w,c
  4003  002074  0D10               	mullw	16
  4004  002076  50F3               	movf	prodl,w,c
  4005  002078  0F69               	addlw	low (_key+9)
  4006  00207A  6ED9               	movwf	fsr2l,c
  4007  00207C  6ADA               	clrf	fsr2h,c
  4008  00207E  50DF               	movf	indf2,w,c
  4009  002080  B4D8               	btfsc	status,2,c
  4010  002082  D01A               	goto	l4544
  4011                           
  4012                           ;ikb.c: 512: {;ikb.c: 514: if (group_x[key[k].num_group_x] == 1)
  4013  002084  500D               	movf	ikey_is_accessible@k,w,c
  4014  002086  0D10               	mullw	16
  4015  002088  50F3               	movf	prodl,w,c
  4016  00208A  0F69               	addlw	low (_key+9)
  4017  00208C  6ED9               	movwf	fsr2l,c
  4018  00208E  6ADA               	clrf	fsr2h,c
  4019  002090  50DF               	movf	indf2,w,c
  4020  002092  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  4021  002094  500B               	movf	??_ikey_is_accessible,w,c
  4022  002096  0FB0               	addlw	low _group_x
  4023  002098  6ED9               	movwf	fsr2l,c
  4024  00209A  6ADA               	clrf	fsr2h,c
  4025  00209C  04DE               	decf	postinc2,w,c
  4026  00209E  A4D8               	btfss	status,2,c
  4027  0020A0  D00B               	goto	l4544
  4028                           
  4029                           ;ikb.c: 515: {;ikb.c: 517: if ( !key[k].bf.OwnerOfGroup)
  4030  0020A2  500D               	movf	ikey_is_accessible@k,w,c
  4031  0020A4  0D10               	mullw	16
  4032  0020A6  50F3               	movf	prodl,w,c
  4033  0020A8  0F6B               	addlw	low (_key+11)
  4034  0020AA  6ED9               	movwf	fsr2l,c
  4035  0020AC  6ADA               	clrf	fsr2h,c
  4036  0020AE  0100               	movlb	0	; () banked
  4037  0020B0  B0DF               	btfsc	indf2,0,c
  4038  0020B2  D002               	goto	l4544
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;ikb.c: 518: {;ikb.c: 519: return 0;
  4042  0020B4  0E00               	movlw	0
  4043  0020B6  0012               	return	
  4044  0020B8                     l4544:
  4045                           
  4046                           ;ikb.c: 520: };ikb.c: 521: };ikb.c: 522: };ikb.c: 523: return 1;
  4047  0020B8  0E01               	movlw	1
  4048  0020BA  0012               	return		;funcret
  4049  0020BC                     __end_of_ikey_is_accessible:
  4050                           	opt callstack 0
  4051                           
  4052 ;; *************** function _ikb_init *****************
  4053 ;; Defined at:
  4054 ;;		line 216 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  i               1   10[COMRAM] char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 3F/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4068 ;;      Params:         0       0       0       0       0       0       0       0       0
  4069 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4071 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4072 ;;Total ram usage:        1 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    5
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_main
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text21
  4083  001786                     __ptext21:
  4084                           	opt callstack 0
  4085  001786                     _ikb_init:
  4086                           	opt callstack 25
  4087                           
  4088                           ;incstack = 0
  4089                           ;ikb.c: 218: int8_t i;;ikb.c: 388: do{TRISC |= 1<<4;}while(0);
  4090  001786  8894               	bsf	3988,4,c	;volatile
  4091                           
  4092                           ;ikb.c: 389: do{TRISC |= 1<<5;}while(0);
  4093  001788  8A94               	bsf	3988,5,c	;volatile
  4094                           
  4095                           ;ikb.c: 390: do{TRISC |= 1<<6;}while(0);
  4096  00178A  8C94               	bsf	3988,6,c	;volatile
  4097                           
  4098                           ;ikb.c: 391: do{TRISC |= 1<<7;}while(0);
  4099  00178C  8E94               	bsf	3988,7,c	;volatile
  4100                           
  4101                           ;ikb.c: 392: do{TRISD |= 1<<4;}while(0);
  4102  00178E  8895               	bsf	3989,4,c	;volatile
  4103                           
  4104                           ;ikb.c: 393: key[0].keyRead = keyRead_pin_key0;
  4105  001790  0E84               	movlw	low _keyRead_pin_key0
  4106  001792  0100               	movlb	0	; () banked
  4107  001794  6F60               	movwf	_key& (0+255),b	;volatile
  4108  001796  0E25               	movlw	high _keyRead_pin_key0
  4109  001798  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;ikb.c: 394: key[1].keyRead = keyRead_pin_key1;
  4113  00179A  0E3E               	movlw	low _keyRead_pin_key1
  4114  00179C  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  4115  00179E  0E25               	movlw	high _keyRead_pin_key1
  4116  0017A0  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;ikb.c: 395: key[2].keyRead = keyRead_pin_key2;
  4120  0017A2  0E34               	movlw	low _keyRead_pin_key2
  4121  0017A4  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  4122  0017A6  0E25               	movlw	high _keyRead_pin_key2
  4123  0017A8  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;ikb.c: 396: key[3].keyRead = keyRead_pin_key3;
  4127  0017AA  0E94               	movlw	low _keyRead_pin_key3
  4128  0017AC  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  4129  0017AE  0E25               	movlw	high _keyRead_pin_key3
  4130  0017B0  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;ikb.c: 397: key[4].keyRead = keyRead_pin_key4;
  4134  0017B2  0E8C               	movlw	low _keyRead_pin_key4
  4135  0017B4  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  4136  0017B6  0E25               	movlw	high _keyRead_pin_key4
  4137  0017B8  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;ikb.c: 400: for (i=0; i<5; i++)
  4141  0017BA  0E00               	movlw	0
  4142  0017BC  6E0B               	movwf	ikb_init@i,c
  4143  0017BE                     l4858:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;ikb.c: 401: {;ikb.c: 402: key[i].bf.OnKeyPressed = 1;
  4147  0017BE  500B               	movf	ikb_init@i,w,c
  4148  0017C0  0D10               	mullw	16
  4149  0017C2  50F3               	movf	prodl,w,c
  4150  0017C4  0F6A               	addlw	low (_key+10)
  4151  0017C6  6ED9               	movwf	fsr2l,c
  4152  0017C8  6ADA               	clrf	fsr2h,c
  4153  0017CA  82DF               	bsf	indf2,1,c
  4154                           
  4155                           ;ikb.c: 403: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  4156  0017CC  500B               	movf	ikb_init@i,w,c
  4157  0017CE  0D10               	mullw	16
  4158  0017D0  50F3               	movf	prodl,w,c
  4159  0017D2  0F6A               	addlw	low (_key+10)
  4160  0017D4  6ED9               	movwf	fsr2l,c
  4161  0017D6  6ADA               	clrf	fsr2h,c
  4162  0017D8  94DF               	bcf	indf2,2,c
  4163                           
  4164                           ;ikb.c: 404: key[i].bf.AtTimeExpired = 0;
  4165  0017DA  500B               	movf	ikb_init@i,w,c
  4166  0017DC  0D10               	mullw	16
  4167  0017DE  50F3               	movf	prodl,w,c
  4168  0017E0  0F6A               	addlw	low (_key+10)
  4169  0017E2  6ED9               	movwf	fsr2l,c
  4170  0017E4  6ADA               	clrf	fsr2h,c
  4171  0017E6  96DF               	bcf	indf2,3,c
  4172                           
  4173                           ;ikb.c: 405: key[i].bf.Reptt = 0;
  4174  0017E8  500B               	movf	ikb_init@i,w,c
  4175  0017EA  0D10               	mullw	16
  4176  0017EC  50F3               	movf	prodl,w,c
  4177  0017EE  0F6A               	addlw	low (_key+10)
  4178  0017F0  6ED9               	movwf	fsr2l,c
  4179  0017F2  6ADA               	clrf	fsr2h,c
  4180  0017F4  9ADF               	bcf	indf2,5,c
  4181                           
  4182                           ;ikb.c: 406: key[i].num_group_x = 0;
  4183  0017F6  500B               	movf	ikb_init@i,w,c
  4184  0017F8  0D10               	mullw	16
  4185  0017FA  50F3               	movf	prodl,w,c
  4186  0017FC  0F69               	addlw	low (_key+9)
  4187  0017FE  6ED9               	movwf	fsr2l,c
  4188  001800  6ADA               	clrf	fsr2h,c
  4189  001802  0E00               	movlw	0
  4190  001804  6EDF               	movwf	indf2,c
  4191                           
  4192                           ;ikb.c: 407: key[i].repp.to_start= (uint16_t)500.0/5;
  4193  001806  500B               	movf	ikb_init@i,w,c
  4194  001808  0D10               	mullw	16
  4195  00180A  50F3               	movf	prodl,w,c
  4196  00180C  0F6C               	addlw	low (_key+12)
  4197  00180E  6ED9               	movwf	fsr2l,c
  4198  001810  6ADA               	clrf	fsr2h,c
  4199  001812  0E64               	movlw	100
  4200  001814  6EDE               	movwf	postinc2,c
  4201  001816  0E00               	movlw	0
  4202  001818  6EDD               	movwf	postdec2,c
  4203                           
  4204                           ;ikb.c: 408: key[i].repp.after_start = (uint16_t)200.0/5;
  4205  00181A  500B               	movf	ikb_init@i,w,c
  4206  00181C  0D10               	mullw	16
  4207  00181E  50F3               	movf	prodl,w,c
  4208  001820  0F6E               	addlw	low (_key+14)
  4209  001822  6ED9               	movwf	fsr2l,c
  4210  001824  6ADA               	clrf	fsr2h,c
  4211  001826  0E28               	movlw	40
  4212  001828  6EDE               	movwf	postinc2,c
  4213  00182A  0E00               	movlw	0
  4214  00182C  6EDD               	movwf	postdec2,c
  4215                           
  4216                           ; BSR set to: 0
  4217  00182E  2A0B               	incf	ikb_init@i,f,c
  4218                           
  4219                           ; BSR set to: 0
  4220  001830  500B               	movf	ikb_init@i,w,c
  4221  001832  0A80               	xorlw	128
  4222  001834  0F7B               	addlw	-133
  4223  001836  B0D8               	btfsc	status,0,c
  4224  001838  0012               	return	
  4225  00183A  D7C1               	goto	l4858
  4226  00183C                     __end_of_ikb_init:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _disp7s_job *****************
  4230 ;; Defined at:
  4231 ;;		line 128 in file "display.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  pq              1   20[COMRAM] char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0
  4246 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4247 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4248 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4249 ;;Total ram usage:        3 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    7
  4252 ;; This function calls:
  4253 ;;		_disp7s_mux0_off
  4254 ;;		_disp7s_mux0_on
  4255 ;;		_disp7s_mux1_off
  4256 ;;		_disp7s_mux1_on
  4257 ;;		_disp7s_mux2_off
  4258 ;;		_disp7s_mux2_on
  4259 ;;		_disp7s_mux3_off
  4260 ;;		_disp7s_mux3_on
  4261 ;;		_disp7s_mux4_off
  4262 ;;		_disp7s_mux4_on
  4263 ;;		_disp7s_mux_Q
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text22
  4270  001D54                     __ptext22:
  4271                           	opt callstack 0
  4272  001D54                     _disp7s_job:
  4273                           	opt callstack 23
  4274                           
  4275                           ;display.c: 134: pq= q-1;
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;incstack = 0
  4279  001D54  0452               	decf	disp7s_job@q,w,c
  4280  001D56  6E15               	movwf	disp7s_job@pq,c
  4281                           
  4282                           ;display.c: 135: if (pq<0)
  4283  001D58  AE15               	btfss	disp7s_job@pq,7,c
  4284  001D5A  D002               	goto	l4968
  4285                           
  4286                           ;display.c: 136: {pq=(2 + 3)-1;}
  4287  001D5C  0E04               	movlw	4
  4288  001D5E  6E15               	movwf	disp7s_job@pq,c
  4289  001D60                     l4968:
  4290                           
  4291                           ;display.c: 137: disp7s_mux[pq].Qonoff[0]();
  4292  001D60  5015               	movf	disp7s_job@pq,w,c
  4293  001D62  0D04               	mullw	4
  4294  001D64  50F3               	movf	prodl,w,c
  4295  001D66  0FCB               	addlw	low _disp7s_mux
  4296  001D68  6ED9               	movwf	fsr2l,c
  4297  001D6A  6ADA               	clrf	fsr2h,c
  4298  001D6C  D801               	call	u5958
  4299  001D6E  D00A               	goto	u5959
  4300  001D70                     u5958:
  4301  001D70  0005               	push	
  4302  001D72  6EFA               	movwf	pclath,c
  4303  001D74  50DE               	movf	postinc2,w,c
  4304  001D76  6EFD               	movwf	tosl,c
  4305  001D78  50DE               	movf	postinc2,w,c
  4306  001D7A  6EFE               	movwf	tosh,c
  4307  001D7C  50F8               	movf	tblptru,w,c
  4308  001D7E  6EFF               	movwf	tosu,c
  4309  001D80  50FA               	movf	pclath,w,c
  4310  001D82  0012               	return		;indir
  4311  001D84                     u5959:
  4312                           
  4313                           ;display.c: 139: if (q < 3)
  4314  001D84  5052               	movf	disp7s_job@q,w,c
  4315  001D86  0A80               	xorlw	128
  4316  001D88  0F7D               	addlw	-131
  4317  001D8A  B0D8               	btfsc	status,0,c
  4318  001D8C  D007               	goto	l4974
  4319                           
  4320                           ;display.c: 140: {LATB = pulsonic.disp7s.qty[q];}
  4321  001D8E  0E3B               	movlw	low (_pulsonic+59)
  4322  001D90  2452               	addwf	disp7s_job@q,w,c
  4323  001D92  6ED9               	movwf	fsr2l,c
  4324  001D94  6ADA               	clrf	fsr2h,c
  4325  001D96  0E01               	movlw	high (_pulsonic+59)
  4326  001D98  22DA               	addwfc	fsr2h,f,c
  4327  001D9A  D00B               	goto	L4
  4328  001D9C                     l4974:
  4329                           
  4330                           ;display.c: 141: else;display.c: 142: {LATB = pulsonic.disp7s.mode[q-3];}
  4331  001D9C  C052  F013         	movff	disp7s_job@q,??_disp7s_job
  4332  001DA0  6A14               	clrf	(??_disp7s_job+1)& (0+255),c
  4333  001DA2  BE13               	btfsc	??_disp7s_job& (0+255),7,c
  4334  001DA4  0614               	decf	(??_disp7s_job+1)& (0+255),f,c
  4335  001DA6  0E3B               	movlw	low (_pulsonic+59)
  4336  001DA8  2413               	addwf	??_disp7s_job,w,c
  4337  001DAA  6ED9               	movwf	fsr2l,c
  4338  001DAC  0E01               	movlw	high (_pulsonic+59)
  4339  001DAE  2014               	addwfc	??_disp7s_job+1,w,c
  4340  001DB0  6EDA               	movwf	fsr2h,c
  4341  001DB2                     L4:
  4342  001DB2  50DF               	movf	indf2,w,c
  4343  001DB4  6E8A               	movwf	3978,c	;volatile
  4344                           
  4345                           ;display.c: 144: disp7s_mux_Q(q);
  4346  001DB6  5052               	movf	disp7s_job@q,w,c
  4347  001DB8  ECC6  F00C         	call	_disp7s_mux_Q
  4348                           
  4349                           ;display.c: 146: if (++q == (2 + 3))
  4350  001DBC  2A52               	incf	disp7s_job@q,f,c
  4351  001DBE  0E05               	movlw	5
  4352  001DC0  1852               	xorwf	disp7s_job@q,w,c
  4353  001DC2  A4D8               	btfss	status,2,c
  4354  001DC4  0012               	return	
  4355                           
  4356                           ;display.c: 147: {q=0x0;}
  4357  001DC6  0E00               	movlw	0
  4358  001DC8  6E52               	movwf	disp7s_job@q,c
  4359  001DCA  0012               	return		;funcret
  4360  001DCC                     __end_of_disp7s_job:
  4361                           	opt callstack 0
  4362                           
  4363 ;; *************** function _disp7s_mux_Q *****************
  4364 ;; Defined at:
  4365 ;;		line 97 in file "display.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  q               1    wreg     char 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  q               1   16[COMRAM] char 
  4370 ;;  i               1   17[COMRAM] char 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4380 ;;      Params:         0       0       0       0       0       0       0       0       0
  4381 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4382 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4383 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4384 ;;Total ram usage:        8 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    6
  4387 ;; This function calls:
  4388 ;;		_disp7s_mux0_off
  4389 ;;		_disp7s_mux0_on
  4390 ;;		_disp7s_mux1_off
  4391 ;;		_disp7s_mux1_on
  4392 ;;		_disp7s_mux2_off
  4393 ;;		_disp7s_mux2_on
  4394 ;;		_disp7s_mux3_off
  4395 ;;		_disp7s_mux3_on
  4396 ;;		_disp7s_mux4_off
  4397 ;;		_disp7s_mux4_on
  4398 ;; This function is called by:
  4399 ;;		_disp7s_job
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text23
  4404  00198C                     __ptext23:
  4405                           	opt callstack 0
  4406  00198C                     _disp7s_mux_Q:
  4407                           	opt callstack 23
  4408                           
  4409                           ;incstack = 0
  4410                           ;disp7s_mux_Q@q stored from wreg
  4411  00198C  6E11               	movwf	disp7s_mux_Q@q,c
  4412                           
  4413                           ;display.c: 99: int8_t i;;display.c: 100: for (i=0; i< (2 + 3); i++)
  4414  00198E  0E00               	movlw	0
  4415  001990  6E12               	movwf	disp7s_mux_Q@i,c
  4416  001992                     l4796:
  4417                           
  4418                           ;display.c: 101: {;display.c: 102: if ( (1<<i) & (1<<q) )
  4419  001992  C011  F00B         	movff	disp7s_mux_Q@q,??_disp7s_mux_Q
  4420  001996  0E01               	movlw	1
  4421  001998  6E0C               	movwf	(??_disp7s_mux_Q+1)& (0+255),c
  4422  00199A  0E00               	movlw	0
  4423  00199C  6E0D               	movwf	(??_disp7s_mux_Q+2)& (0+255),c
  4424  00199E  2A0B               	incf	??_disp7s_mux_Q,f,c
  4425  0019A0  D003               	goto	u5734
  4426  0019A2                     u5735:
  4427  0019A2  90D8               	bcf	status,0,c
  4428  0019A4  360C               	rlcf	??_disp7s_mux_Q+1,f,c
  4429  0019A6  360D               	rlcf	??_disp7s_mux_Q+2,f,c
  4430  0019A8                     u5734:
  4431  0019A8  2E0B               	decfsz	??_disp7s_mux_Q,f,c
  4432  0019AA  D7FB               	goto	u5735
  4433  0019AC  C012  F00E         	movff	disp7s_mux_Q@i,??_disp7s_mux_Q+3
  4434  0019B0  0E01               	movlw	1
  4435  0019B2  6E0F               	movwf	(??_disp7s_mux_Q+4)& (0+255),c
  4436  0019B4  0E00               	movlw	0
  4437  0019B6  6E10               	movwf	(??_disp7s_mux_Q+5)& (0+255),c
  4438  0019B8  2A0E               	incf	??_disp7s_mux_Q+3,f,c
  4439  0019BA  D003               	goto	u5744
  4440  0019BC                     u5745:
  4441  0019BC  90D8               	bcf	status,0,c
  4442  0019BE  360F               	rlcf	??_disp7s_mux_Q+4,f,c
  4443  0019C0  3610               	rlcf	??_disp7s_mux_Q+5,f,c
  4444  0019C2                     u5744:
  4445  0019C2  2E0E               	decfsz	??_disp7s_mux_Q+3,f,c
  4446  0019C4  D7FB               	goto	u5745
  4447  0019C6  500C               	movf	??_disp7s_mux_Q+1,w,c
  4448  0019C8  160F               	andwf	??_disp7s_mux_Q+4,f,c
  4449  0019CA  500D               	movf	??_disp7s_mux_Q+2,w,c
  4450  0019CC  1610               	andwf	??_disp7s_mux_Q+5,f,c
  4451  0019CE  500F               	movf	??_disp7s_mux_Q+4,w,c
  4452  0019D0  1010               	iorwf	??_disp7s_mux_Q+5,w,c
  4453  0019D2  B4D8               	btfsc	status,2,c
  4454  0019D4  D012               	goto	l4800
  4455                           
  4456                           ;display.c: 103: disp7s_mux[i].Qonoff[1]();
  4457  0019D6  5012               	movf	disp7s_mux_Q@i,w,c
  4458  0019D8  0D04               	mullw	4
  4459  0019DA  50F3               	movf	prodl,w,c
  4460  0019DC  0FCD               	addlw	low (_disp7s_mux+2)
  4461  0019DE  6ED9               	movwf	fsr2l,c
  4462  0019E0  6ADA               	clrf	fsr2h,c
  4463  0019E2  D801               	call	u5768
  4464  0019E4  D01C               	goto	u5779
  4465  0019E6                     u5768:
  4466  0019E6  0005               	push	
  4467  0019E8  6EFA               	movwf	pclath,c
  4468  0019EA  50DE               	movf	postinc2,w,c
  4469  0019EC  6EFD               	movwf	tosl,c
  4470  0019EE  50DE               	movf	postinc2,w,c
  4471  0019F0  6EFE               	movwf	tosh,c
  4472  0019F2  50F8               	movf	tblptru,w,c
  4473  0019F4  6EFF               	movwf	tosu,c
  4474  0019F6  50FA               	movf	pclath,w,c
  4475  0019F8  0012               	return		;indir
  4476  0019FA                     l4800:
  4477                           
  4478                           ;display.c: 104: else;display.c: 105: disp7s_mux[i].Qonoff[0]();
  4479  0019FA  5012               	movf	disp7s_mux_Q@i,w,c
  4480  0019FC  0D04               	mullw	4
  4481  0019FE  50F3               	movf	prodl,w,c
  4482  001A00  0FCB               	addlw	low _disp7s_mux
  4483  001A02  6ED9               	movwf	fsr2l,c
  4484  001A04  6ADA               	clrf	fsr2h,c
  4485  001A06  D801               	call	u5778
  4486  001A08  D00A               	goto	u5779
  4487  001A0A                     u5778:
  4488  001A0A  0005               	push	
  4489  001A0C  6EFA               	movwf	pclath,c
  4490  001A0E  50DE               	movf	postinc2,w,c
  4491  001A10  6EFD               	movwf	tosl,c
  4492  001A12  50DE               	movf	postinc2,w,c
  4493  001A14  6EFE               	movwf	tosh,c
  4494  001A16  50F8               	movf	tblptru,w,c
  4495  001A18  6EFF               	movwf	tosu,c
  4496  001A1A  50FA               	movf	pclath,w,c
  4497  001A1C  0012               	return		;indir
  4498  001A1E                     u5779:
  4499  001A1E  2A12               	incf	disp7s_mux_Q@i,f,c
  4500  001A20  5012               	movf	disp7s_mux_Q@i,w,c
  4501  001A22  0A80               	xorlw	128
  4502  001A24  0F7B               	addlw	-133
  4503  001A26  B0D8               	btfsc	status,0,c
  4504  001A28  0012               	return	
  4505  001A2A  D7B3               	goto	l4796
  4506  001A2C                     __end_of_disp7s_mux_Q:
  4507                           	opt callstack 0
  4508                           
  4509 ;; *************** function _disp7s_init *****************
  4510 ;; Defined at:
  4511 ;;		line 112 in file "display.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  i               1   11[COMRAM] char 
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 3F/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0
  4526 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4528 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4529 ;;Total ram usage:        1 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    7
  4532 ;; This function calls:
  4533 ;;		_disp7s_mux_init
  4534 ;; This function is called by:
  4535 ;;		_main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text24
  4540  001F68                     __ptext24:
  4541                           	opt callstack 0
  4542  001F68                     _disp7s_init:
  4543                           	opt callstack 23
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;display.c: 114: int8_t i;;display.c: 115: for (i=0; i<2; i++)
  4547                           
  4548                           ;incstack = 0
  4549  001F68  0E00               	movlw	0
  4550  001F6A  6E0C               	movwf	disp7s_init@i,c
  4551  001F6C                     l4870:
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;display.c: 116: {pulsonic.disp7s.mode[i] = DISP7S_CHARS[OFF];}
  4555  001F6C  0E0F               	movlw	low _DISP7S_CHARS
  4556  001F6E  6EF6               	movwf	tblptrl,c
  4557  001F70                     	if	1	;There is more than 1 active tblptr byte
  4558  001F70  0E08               	movlw	high _DISP7S_CHARS
  4559  001F72  6EF7               	movwf	tblptrh,c
  4560  001F74                     	endif
  4561  001F74                     	if	0	;There are less than 3 active tblptr bytes
  4562  001F74                     	endif
  4563  001F74  0E3E               	movlw	low (_pulsonic+62)
  4564  001F76  240C               	addwf	disp7s_init@i,w,c
  4565  001F78  6ED9               	movwf	fsr2l,c
  4566  001F7A  6ADA               	clrf	fsr2h,c
  4567  001F7C  0E01               	movlw	high (_pulsonic+62)
  4568  001F7E  22DA               	addwfc	fsr2h,f,c
  4569  001F80  0008               	tblrd		*
  4570  001F82  CFF5 FFDF          	movff	tablat,indf2
  4571                           
  4572                           ; BSR set to: 0
  4573  001F86  2A0C               	incf	disp7s_init@i,f,c
  4574                           
  4575                           ; BSR set to: 0
  4576  001F88  500C               	movf	disp7s_init@i,w,c
  4577  001F8A  0A80               	xorlw	128
  4578  001F8C  0F7E               	addlw	-130
  4579  001F8E  A0D8               	btfss	status,0,c
  4580  001F90  D7ED               	goto	l4870
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;display.c: 118: for (i=0; i<3; i++)
  4584  001F92  0E00               	movlw	0
  4585  001F94  6E0C               	movwf	disp7s_init@i,c
  4586  001F96                     l4882:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;display.c: 119: {pulsonic.disp7s.qty[i] = DISP7S_CHARS[OFF];}
  4590  001F96  0E0F               	movlw	low _DISP7S_CHARS
  4591  001F98  6EF6               	movwf	tblptrl,c
  4592  001F9A                     	if	1	;There is more than 1 active tblptr byte
  4593  001F9A  0E08               	movlw	high _DISP7S_CHARS
  4594  001F9C  6EF7               	movwf	tblptrh,c
  4595  001F9E                     	endif
  4596  001F9E                     	if	0	;There are less than 3 active tblptr bytes
  4597  001F9E                     	endif
  4598  001F9E  0E3B               	movlw	low (_pulsonic+59)
  4599  001FA0  240C               	addwf	disp7s_init@i,w,c
  4600  001FA2  6ED9               	movwf	fsr2l,c
  4601  001FA4  6ADA               	clrf	fsr2h,c
  4602  001FA6  0E01               	movlw	high (_pulsonic+59)
  4603  001FA8  22DA               	addwfc	fsr2h,f,c
  4604  001FAA  0008               	tblrd		*
  4605  001FAC  CFF5 FFDF          	movff	tablat,indf2
  4606                           
  4607                           ; BSR set to: 0
  4608  001FB0  2A0C               	incf	disp7s_init@i,f,c
  4609                           
  4610                           ; BSR set to: 0
  4611  001FB2  500C               	movf	disp7s_init@i,w,c
  4612  001FB4  0A80               	xorlw	128
  4613  001FB6  0F7D               	addlw	-131
  4614  001FB8  A0D8               	btfss	status,0,c
  4615  001FBA  D7ED               	goto	l4882
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;display.c: 121: TRISB = 0x00;
  4619  001FBC  0E00               	movlw	0
  4620  001FBE  6E93               	movwf	3987,c	;volatile
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;display.c: 122: disp7s_mux_init();
  4624  001FC0  EC52  F011         	call	_disp7s_mux_init	;wreg free
  4625  001FC4  0012               	return		;funcret
  4626  001FC6                     __end_of_disp7s_init:
  4627                           	opt callstack 0
  4628                           
  4629 ;; *************** function _disp7s_mux_init *****************
  4630 ;; Defined at:
  4631 ;;		line 83 in file "display.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  i               1   10[COMRAM] char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 3F/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0
  4646 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4648 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4649 ;;Total ram usage:        1 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    6
  4652 ;; This function calls:
  4653 ;;		_disp7s_mux0_off
  4654 ;;		_disp7s_mux0_on
  4655 ;;		_disp7s_mux1_off
  4656 ;;		_disp7s_mux1_on
  4657 ;;		_disp7s_mux2_off
  4658 ;;		_disp7s_mux2_on
  4659 ;;		_disp7s_mux3_off
  4660 ;;		_disp7s_mux3_on
  4661 ;;		_disp7s_mux4_off
  4662 ;;		_disp7s_mux4_on
  4663 ;; This function is called by:
  4664 ;;		_disp7s_init
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text25
  4669  0022A4                     __ptext25:
  4670                           	opt callstack 0
  4671  0022A4                     _disp7s_mux_init:
  4672                           	opt callstack 23
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;display.c: 85: int8_t i;;display.c: 86: for (i=0; i< (2 + 3); i++)
  4676                           
  4677                           ;incstack = 0
  4678  0022A4  0E00               	movlw	0
  4679  0022A6  6E0B               	movwf	disp7s_mux_init@i,c
  4680  0022A8                     l4782:
  4681                           
  4682                           ;display.c: 87: {;display.c: 88: disp7s_mux[i].Qonoff[0]();
  4683  0022A8  500B               	movf	disp7s_mux_init@i,w,c
  4684  0022AA  0D04               	mullw	4
  4685  0022AC  50F3               	movf	prodl,w,c
  4686  0022AE  0FCB               	addlw	low _disp7s_mux
  4687  0022B0  6ED9               	movwf	fsr2l,c
  4688  0022B2  6ADA               	clrf	fsr2h,c
  4689  0022B4  D801               	call	u5718
  4690  0022B6  D00A               	goto	u5719
  4691  0022B8                     u5718:
  4692  0022B8  0005               	push	
  4693  0022BA  6EFA               	movwf	pclath,c
  4694  0022BC  50DE               	movf	postinc2,w,c
  4695  0022BE  6EFD               	movwf	tosl,c
  4696  0022C0  50DE               	movf	postinc2,w,c
  4697  0022C2  6EFE               	movwf	tosh,c
  4698  0022C4  50F8               	movf	tblptru,w,c
  4699  0022C6  6EFF               	movwf	tosu,c
  4700  0022C8  50FA               	movf	pclath,w,c
  4701  0022CA  0012               	return		;indir
  4702  0022CC                     u5719:
  4703  0022CC  2A0B               	incf	disp7s_mux_init@i,f,c
  4704  0022CE  500B               	movf	disp7s_mux_init@i,w,c
  4705  0022D0  0A80               	xorlw	128
  4706  0022D2  0F7B               	addlw	-133
  4707  0022D4  A0D8               	btfss	status,0,c
  4708  0022D6  D7E8               	goto	l4782
  4709  0022D8  9892               	bcf	3986,4,c	;volatile
  4710                           
  4711                           ;display.c: 91: do{TRISA &= ~(1<<3);}while(0);
  4712  0022DA  9692               	bcf	3986,3,c	;volatile
  4713                           
  4714                           ;display.c: 92: do{TRISA &= ~(1<<2);}while(0);
  4715  0022DC  9492               	bcf	3986,2,c	;volatile
  4716                           
  4717                           ;display.c: 93: do{TRISA &= ~(1<<1);}while(0);
  4718  0022DE  9292               	bcf	3986,1,c	;volatile
  4719                           
  4720                           ;display.c: 94: do{TRISA &= ~(1<<0);}while(0);
  4721  0022E0  9092               	bcf	3986,0,c	;volatile
  4722  0022E2  0012               	return		;funcret
  4723  0022E4                     __end_of_disp7s_mux_init:
  4724                           	opt callstack 0
  4725                           
  4726 ;; *************** function _disp7s_mux4_off *****************
  4727 ;; Defined at:
  4728 ;;		line 41 in file "display.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    5
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_disp7s_mux_init
  4753 ;;		_disp7s_mux_Q
  4754 ;;		_disp7s_job
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text26
  4759  00259A                     __ptext26:
  4760                           	opt callstack 0
  4761  00259A                     _disp7s_mux4_off:
  4762                           	opt callstack 23
  4763                           
  4764                           ;incstack = 0
  4765                           ;display.c: 43: do{LATA |= 1<<0;}while(0);
  4766  00259A  8089               	bsf	3977,0,c	;volatile
  4767  00259C  0012               	return		;funcret
  4768  00259E                     __end_of_disp7s_mux4_off:
  4769                           	opt callstack 0
  4770                           
  4771 ;; *************** function _disp7s_mux3_on *****************
  4772 ;; Defined at:
  4773 ;;		line 36 in file "display.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4790 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4791 ;;Total ram usage:        0 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    5
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_disp7s_mux_init
  4798 ;;		_disp7s_mux_Q
  4799 ;;		_disp7s_job
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text27
  4804  00259E                     __ptext27:
  4805                           	opt callstack 0
  4806  00259E                     _disp7s_mux3_on:
  4807                           	opt callstack 23
  4808                           
  4809                           ;incstack = 0
  4810                           ;display.c: 38: do{LATA &= ~(1<<1);}while(0);
  4811  00259E  9289               	bcf	3977,1,c	;volatile
  4812  0025A0  0012               	return		;funcret
  4813  0025A2                     __end_of_disp7s_mux3_on:
  4814                           	opt callstack 0
  4815                           
  4816 ;; *************** function _disp7s_mux3_off *****************
  4817 ;; Defined at:
  4818 ;;		line 32 in file "display.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4832 ;;      Params:         0       0       0       0       0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4836 ;;Total ram usage:        0 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    5
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_disp7s_mux_init
  4843 ;;		_disp7s_mux_Q
  4844 ;;		_disp7s_job
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text28
  4849  0025A2                     __ptext28:
  4850                           	opt callstack 0
  4851  0025A2                     _disp7s_mux3_off:
  4852                           	opt callstack 23
  4853                           
  4854                           ;incstack = 0
  4855                           ;display.c: 34: do{LATA |= 1<<1;}while(0);
  4856  0025A2  8289               	bsf	3977,1,c	;volatile
  4857  0025A4  0012               	return		;funcret
  4858  0025A6                     __end_of_disp7s_mux3_off:
  4859                           	opt callstack 0
  4860                           
  4861 ;; *************** function _disp7s_mux2_on *****************
  4862 ;; Defined at:
  4863 ;;		line 27 in file "display.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		status,2, status,0
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4877 ;;      Params:         0       0       0       0       0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4880 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    5
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_disp7s_mux_init
  4888 ;;		_disp7s_mux_Q
  4889 ;;		_disp7s_job
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text29
  4894  0025A6                     __ptext29:
  4895                           	opt callstack 0
  4896  0025A6                     _disp7s_mux2_on:
  4897                           	opt callstack 23
  4898                           
  4899                           ;incstack = 0
  4900                           ;display.c: 29: do{LATA &= ~(1<<2);}while(0);
  4901  0025A6  9489               	bcf	3977,2,c	;volatile
  4902  0025A8  0012               	return		;funcret
  4903  0025AA                     __end_of_disp7s_mux2_on:
  4904                           	opt callstack 0
  4905                           
  4906 ;; *************** function _disp7s_mux2_off *****************
  4907 ;; Defined at:
  4908 ;;		line 23 in file "display.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4925 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4926 ;;Total ram usage:        0 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    5
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_disp7s_mux_init
  4933 ;;		_disp7s_mux_Q
  4934 ;;		_disp7s_job
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text30
  4939  0025AA                     __ptext30:
  4940                           	opt callstack 0
  4941  0025AA                     _disp7s_mux2_off:
  4942                           	opt callstack 23
  4943                           
  4944                           ;incstack = 0
  4945                           ;display.c: 25: do{LATA |= 1<<2;}while(0);
  4946  0025AA  8489               	bsf	3977,2,c	;volatile
  4947  0025AC  0012               	return		;funcret
  4948  0025AE                     __end_of_disp7s_mux2_off:
  4949                           	opt callstack 0
  4950                           
  4951 ;; *************** function _disp7s_mux1_on *****************
  4952 ;; Defined at:
  4953 ;;		line 18 in file "display.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		status,2, status,0
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    5
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_disp7s_mux_init
  4978 ;;		_disp7s_mux_Q
  4979 ;;		_disp7s_job
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text31
  4984  0025AE                     __ptext31:
  4985                           	opt callstack 0
  4986  0025AE                     _disp7s_mux1_on:
  4987                           	opt callstack 23
  4988                           
  4989                           ;incstack = 0
  4990                           ;display.c: 20: do{LATA &= ~(1<<3);}while(0);
  4991  0025AE  9689               	bcf	3977,3,c	;volatile
  4992  0025B0  0012               	return		;funcret
  4993  0025B2                     __end_of_disp7s_mux1_on:
  4994                           	opt callstack 0
  4995                           
  4996 ;; *************** function _disp7s_mux1_off *****************
  4997 ;; Defined at:
  4998 ;;		line 14 in file "display.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5015 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    5
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_disp7s_mux_init
  5023 ;;		_disp7s_mux_Q
  5024 ;;		_disp7s_job
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text32
  5029  0025B2                     __ptext32:
  5030                           	opt callstack 0
  5031  0025B2                     _disp7s_mux1_off:
  5032                           	opt callstack 23
  5033                           
  5034                           ;incstack = 0
  5035                           ;display.c: 16: do{LATA |= 1<<3;}while(0);
  5036  0025B2  8689               	bsf	3977,3,c	;volatile
  5037  0025B4  0012               	return		;funcret
  5038  0025B6                     __end_of_disp7s_mux1_off:
  5039                           	opt callstack 0
  5040                           
  5041 ;; *************** function _disp7s_mux0_on *****************
  5042 ;; Defined at:
  5043 ;;		line 9 in file "display.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    5
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_disp7s_mux_init
  5068 ;;		_disp7s_mux_Q
  5069 ;;		_disp7s_job
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text33
  5074  0025B6                     __ptext33:
  5075                           	opt callstack 0
  5076  0025B6                     _disp7s_mux0_on:
  5077                           	opt callstack 23
  5078                           
  5079                           ;incstack = 0
  5080                           ;display.c: 11: do{LATA &= ~(1<<4);}while(0);
  5081  0025B6  9889               	bcf	3977,4,c	;volatile
  5082  0025B8  0012               	return		;funcret
  5083  0025BA                     __end_of_disp7s_mux0_on:
  5084                           	opt callstack 0
  5085                           
  5086 ;; *************** function _disp7s_mux0_off *****************
  5087 ;; Defined at:
  5088 ;;		line 5 in file "display.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5102 ;;      Params:         0       0       0       0       0       0       0       0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5105 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5106 ;;Total ram usage:        0 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    5
  5109 ;; This function calls:
  5110 ;;		Nothing
  5111 ;; This function is called by:
  5112 ;;		_disp7s_mux_init
  5113 ;;		_disp7s_mux_Q
  5114 ;;		_disp7s_job
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text34
  5119  0025BA                     __ptext34:
  5120                           	opt callstack 0
  5121  0025BA                     _disp7s_mux0_off:
  5122                           	opt callstack 23
  5123                           
  5124                           ;incstack = 0
  5125                           ;display.c: 7: do{LATA |= 1<<4;}while(0);
  5126  0025BA  8889               	bsf	3977,4,c	;volatile
  5127  0025BC  0012               	return		;funcret
  5128  0025BE                     __end_of_disp7s_mux0_off:
  5129                           	opt callstack 0
  5130                           
  5131 ;; *************** function _disp7s_mux4_on *****************
  5132 ;; Defined at:
  5133 ;;		line 45 in file "display.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    5
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_disp7s_mux_init
  5158 ;;		_disp7s_mux_Q
  5159 ;;		_disp7s_job
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text35
  5164  0025BE                     __ptext35:
  5165                           	opt callstack 0
  5166  0025BE                     _disp7s_mux4_on:
  5167                           	opt callstack 23
  5168                           
  5169                           ;incstack = 0
  5170                           ;display.c: 47: do{LATA &= ~(1<<0);}while(0);
  5171  0025BE  9089               	bcf	3977,0,c	;volatile
  5172  0025C0  0012               	return		;funcret
  5173  0025C2                     __end_of_disp7s_mux4_on:
  5174                           	opt callstack 0
  5175                           
  5176 ;; *************** function _autoMode_kb *****************
  5177 ;; Defined at:
  5178 ;;		line 74 in file "automode.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  cod_ret         1   11[COMRAM] char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      char 
  5185 ;; Registers used:
  5186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 3F/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0
  5193 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5195 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5196 ;;Total ram usage:        1 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    6
  5199 ;; This function calls:
  5200 ;;		_ikb_key_is_ready2read
  5201 ;;		_ikb_key_was_read
  5202 ;;		_visMode_init
  5203 ;; This function is called by:
  5204 ;;		_main
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text36
  5209  001CDA                     __ptext36:
  5210                           	opt callstack 0
  5211  001CDA                     _autoMode_kb:
  5212                           	opt callstack 24
  5213                           
  5214                           ;automode.c: 76: int8_t cod_ret = 0;
  5215                           
  5216                           ;incstack = 0
  5217  001CDA  0E00               	movlw	0
  5218  001CDC  6E0C               	movwf	autoMode_kb@cod_ret,c
  5219                           
  5220                           ;automode.c: 78: if (ikb_key_is_ready2read(0))
  5221  001CDE  0E00               	movlw	0
  5222  001CE0  EC2D  F012         	call	_ikb_key_is_ready2read
  5223  001CE4  0900               	iorlw	0
  5224  001CE6  B4D8               	btfsc	status,2,c
  5225  001CE8  D009               	goto	l4938
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;automode.c: 79: {;automode.c: 80: ikb_key_was_read(0);
  5229  001CEA  0E00               	movlw	0
  5230  001CEC  EC55  F012         	call	_ikb_key_was_read
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;automode.c: 82: visMode_init(0x00);
  5234  001CF0  0E00               	movlw	0
  5235  001CF2  EC81  F012         	call	_visMode_init
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;automode.c: 83: unlock.visMode = 1;
  5239  001CF6  85C8               	bsf	_unlock& (0+255),2,b
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;automode.c: 84: cod_ret = 1;
  5243  001CF8  0E01               	movlw	1
  5244  001CFA  6E0C               	movwf	autoMode_kb@cod_ret,c
  5245  001CFC                     l4938:
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;automode.c: 86: };automode.c: 87: if (ikb_key_is_ready2read(1))
  5249  001CFC  0E01               	movlw	1
  5250  001CFE  EC2D  F012         	call	_ikb_key_is_ready2read
  5251  001D02  0900               	iorlw	0
  5252  001D04  B4D8               	btfsc	status,2,c
  5253  001D06  D009               	goto	l4948
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;automode.c: 88: {;automode.c: 89: ikb_key_was_read(1);
  5257  001D08  0E01               	movlw	1
  5258  001D0A  EC55  F012         	call	_ikb_key_was_read
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;automode.c: 91: visMode_init((8+1)-1);
  5262  001D0E  0E08               	movlw	8
  5263  001D10  EC81  F012         	call	_visMode_init
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;automode.c: 92: unlock.visMode = 1;
  5267  001D14  85C8               	bsf	_unlock& (0+255),2,b
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;automode.c: 93: cod_ret = 1;
  5271  001D16  0E01               	movlw	1
  5272  001D18  6E0C               	movwf	autoMode_kb@cod_ret,c
  5273  001D1A                     l4948:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;automode.c: 94: };automode.c: 95: if (ikb_key_is_ready2read(2))
  5277  001D1A  0E02               	movlw	2
  5278  001D1C  EC2D  F012         	call	_ikb_key_is_ready2read
  5279  001D20  0900               	iorlw	0
  5280  001D22  B4D8               	btfsc	status,2,c
  5281  001D24  D003               	goto	l771
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;automode.c: 96: {;automode.c: 97: ikb_key_was_read(2);
  5285  001D26  0E02               	movlw	2
  5286  001D28  EC55  F012         	call	_ikb_key_was_read
  5287  001D2C                     l771:
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;automode.c: 99: };automode.c: 100: if (ikb_key_is_ready2read(3))
  5291  001D2C  0E03               	movlw	3
  5292  001D2E  EC2D  F012         	call	_ikb_key_is_ready2read
  5293  001D32  0900               	iorlw	0
  5294  001D34  B4D8               	btfsc	status,2,c
  5295  001D36  D003               	goto	l772
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;automode.c: 101: {;automode.c: 102: ikb_key_was_read(3);
  5299  001D38  0E03               	movlw	3
  5300  001D3A  EC55  F012         	call	_ikb_key_was_read
  5301  001D3E                     l772:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;automode.c: 104: };automode.c: 105: if (ikb_key_is_ready2read(4))
  5305  001D3E  0E04               	movlw	4
  5306  001D40  EC2D  F012         	call	_ikb_key_is_ready2read
  5307  001D44  0900               	iorlw	0
  5308  001D46  B4D8               	btfsc	status,2,c
  5309  001D48  D003               	goto	l4956
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;automode.c: 106: {;automode.c: 107: ikb_key_was_read(4);
  5313  001D4A  0E04               	movlw	4
  5314  001D4C  EC55  F012         	call	_ikb_key_was_read
  5315  001D50                     l4956:
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;automode.c: 109: };automode.c: 111: return cod_ret;
  5319  001D50  500C               	movf	autoMode_kb@cod_ret,w,c
  5320                           
  5321                           ; BSR set to: 0
  5322  001D52  0012               	return		;funcret
  5323  001D54                     __end_of_autoMode_kb:
  5324                           	opt callstack 0
  5325                           
  5326 ;; *************** function _visMode_init *****************
  5327 ;; Defined at:
  5328 ;;		line 14 in file "visualizerMode.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  numVista        1    wreg     char 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  numVista        1   10[COMRAM] char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2
  5337 ;; Tracked objects:
  5338 ;;		On entry : 3F/0
  5339 ;;		On exit  : 3F/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0
  5343 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5345 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5346 ;;Total ram usage:        1 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    5
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_autoMode_kb
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text37
  5357  002502                     __ptext37:
  5358                           	opt callstack 0
  5359  002502                     _visMode_init:
  5360                           	opt callstack 24
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;incstack = 0
  5364                           ;visMode_init@numVista stored from wreg
  5365  002502  6E0B               	movwf	visMode_init@numVista,c
  5366                           
  5367                           ;visualizerMode.c: 16: visMode.numVista = numVista;
  5368  002504  C00B  F0B9         	movff	visMode_init@numVista,_visMode+1
  5369                           
  5370                           ;visualizerMode.c: 17: visMode.disp7s_accessReq = 1;
  5371  002508  0E01               	movlw	1
  5372  00250A  0100               	movlb	0	; () banked
  5373  00250C  6FB8               	movwf	_visMode& (0+255),b
  5374                           
  5375                           ; BSR set to: 0
  5376  00250E  0012               	return		;funcret
  5377  002510                     __end_of_visMode_init:
  5378                           	opt callstack 0
  5379                           
  5380 ;; *************** function _ikb_key_was_read *****************
  5381 ;; Defined at:
  5382 ;;		line 434 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  k               1    wreg     unsigned char 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  k               1   10[COMRAM] unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5391 ;; Tracked objects:
  5392 ;;		On entry : 3F/0
  5393 ;;		On exit  : 3F/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5396 ;;      Params:         0       0       0       0       0       0       0       0       0
  5397 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5399 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5400 ;;Total ram usage:        1 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    5
  5403 ;; This function calls:
  5404 ;;		Nothing
  5405 ;; This function is called by:
  5406 ;;		_autoMode_kb
  5407 ;;		_visMode_job
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text38
  5412  0024AA                     __ptext38:
  5413                           	opt callstack 0
  5414  0024AA                     _ikb_key_was_read:
  5415                           	opt callstack 24
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;incstack = 0
  5419                           ;ikb_key_was_read@k stored from wreg
  5420  0024AA  6E0B               	movwf	ikb_key_was_read@k,c
  5421                           
  5422                           ;ikb.c: 436: key[k].bf.ReadyToRead = 0;
  5423  0024AC  500B               	movf	ikb_key_was_read@k,w,c
  5424  0024AE  0D10               	mullw	16
  5425  0024B0  50F3               	movf	prodl,w,c
  5426  0024B2  0F6A               	addlw	low (_key+10)
  5427  0024B4  6ED9               	movwf	fsr2l,c
  5428  0024B6  6ADA               	clrf	fsr2h,c
  5429  0024B8  0100               	movlb	0	; () banked
  5430  0024BA  9CDF               	bcf	indf2,6,c
  5431                           
  5432                           ; BSR set to: 0
  5433  0024BC  0012               	return		;funcret
  5434  0024BE                     __end_of_ikb_key_was_read:
  5435                           	opt callstack 0
  5436                           
  5437 ;; *************** function _ikb_key_is_ready2read *****************
  5438 ;; Defined at:
  5439 ;;		line 426 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  k               1    wreg     unsigned char 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  k               1   10[COMRAM] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      unsigned char 
  5446 ;; Registers used:
  5447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 3F/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0
  5454 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5456 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5457 ;;Total ram usage:        1 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    5
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_autoMode_kb
  5464 ;;		_visMode_job
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text39
  5469  00245A                     __ptext39:
  5470                           	opt callstack 0
  5471  00245A                     _ikb_key_is_ready2read:
  5472                           	opt callstack 24
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;incstack = 0
  5476                           ;ikb_key_is_ready2read@k stored from wreg
  5477  00245A  6E0B               	movwf	ikb_key_is_ready2read@k,c
  5478                           
  5479                           ;ikb.c: 428: return key[k].bf.ReadyToRead;
  5480  00245C  500B               	movf	ikb_key_is_ready2read@k,w,c
  5481  00245E  0D10               	mullw	16
  5482  002460  50F3               	movf	prodl,w,c
  5483  002462  0F6A               	addlw	low (_key+10)
  5484  002464  6ED9               	movwf	fsr2l,c
  5485  002466  6ADA               	clrf	fsr2h,c
  5486  002468  0100               	movlb	0	; () banked
  5487  00246A  ACDF               	btfss	indf2,6,c
  5488  00246C  D002               	goto	u5670
  5489  00246E  0E01               	movlw	1
  5490  002470  0012               	return	
  5491  002472                     u5670:
  5492  002472  0E00               	movlw	0
  5493                           
  5494                           ; BSR set to: 0
  5495  002474  0012               	return		;funcret
  5496  002476                     __end_of_ikb_key_is_ready2read:
  5497                           	opt callstack 0
  5498                           
  5499 ;; *************** function _autoMode_job *****************
  5500 ;; Defined at:
  5501 ;;		line 28 in file "automode.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  cod_ret         1    0        char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      char 
  5508 ;; Registers used:
  5509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 3F/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5515 ;;      Params:         0       0       0       0       0       0       0       0       0
  5516 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5518 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5519 ;;Total ram usage:        1 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    7
  5522 ;; This function calls:
  5523 ;;		_mpap_isIdle
  5524 ;;		_mpap_movetoNozzle
  5525 ;;		_mpap_setupToHomming
  5526 ;;		_nozzle_isEnabled
  5527 ;;		_pump_isIdle
  5528 ;;		_pump_setTick
  5529 ;; This function is called by:
  5530 ;;		_main
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text40
  5535  001AC0                     __ptext40:
  5536                           	opt callstack 0
  5537  001AC0                     _autoMode_job:
  5538                           	opt callstack 23
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;automode.c: 32: if (autoMode.sm0 == 0)
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;incstack = 0
  5545  001AC0  5051               	movf	_autoMode+1,w,c
  5546  001AC2  A4D8               	btfss	status,2,c
  5547  001AC4  D004               	goto	l4988
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;automode.c: 33: {;automode.c: 34: mpap_setupToHomming();
  5551  001AC6  EC5F  F012         	call	_mpap_setupToHomming	;wreg free
  5552  001ACA                     l4986:
  5553                           
  5554                           ;automode.c: 35: autoMode.sm0++;
  5555  001ACA  2A51               	incf	_autoMode+1,f,c
  5556                           
  5557                           ;automode.c: 36: }
  5558  001ACC  D03E               	goto	l753
  5559  001ACE                     l4988:
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;automode.c: 37: else if (autoMode.sm0 == 1)
  5563  001ACE  0451               	decf	_autoMode+1,w,c
  5564  001AD0  A4D8               	btfss	status,2,c
  5565  001AD2  D006               	goto	l4994
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;automode.c: 38: {;automode.c: 39: if (mpap_isIdle())
  5569  001AD4  EC88  F012         	call	_mpap_isIdle	;wreg free
  5570  001AD8  0900               	iorlw	0
  5571  001ADA  A4D8               	btfss	status,2,c
  5572  001ADC  D7F6               	goto	l4986
  5573  001ADE  D035               	goto	l753
  5574  001AE0                     l4994:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;automode.c: 45: else if (autoMode.sm0 == 2)
  5578  001AE0  0E02               	movlw	2
  5579  001AE2  1851               	xorwf	_autoMode+1,w,c
  5580  001AE4  A4D8               	btfss	status,2,c
  5581  001AE6  D016               	goto	l5006
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;automode.c: 46: {;automode.c: 47: if (nozzle_isEnabled(autoMode.n))
  5585  001AE8  5050               	movf	_autoMode,w,c
  5586  001AEA  6E1F               	movwf	nozzle_isEnabled@n,c
  5587  001AEC  6A20               	clrf	nozzle_isEnabled@n+1,c
  5588  001AEE  BE1F               	btfsc	nozzle_isEnabled@n,7,c
  5589  001AF0  0620               	decf	nozzle_isEnabled@n+1,f,c
  5590  001AF2  EC83  F010         	call	_nozzle_isEnabled	;wreg free
  5591  001AF6  0900               	iorlw	0
  5592  001AF8  B4D8               	btfsc	status,2,c
  5593  001AFA  D004               	goto	l5002
  5594                           
  5595                           ;automode.c: 48: {;automode.c: 49: mpap_movetoNozzle(autoMode.n);
  5596  001AFC  5050               	movf	_autoMode,w,c
  5597  001AFE  ECC2  F011         	call	_mpap_movetoNozzle
  5598                           
  5599                           ;automode.c: 50: autoMode.sm0++;
  5600  001B02  2A51               	incf	_autoMode+1,f,c
  5601  001B04                     l5002:
  5602                           
  5603                           ;automode.c: 51: };automode.c: 53: if (++autoMode.n == 8)
  5604  001B04  2A50               	incf	_autoMode,f,c
  5605  001B06  0E08               	movlw	8
  5606  001B08  1850               	xorwf	_autoMode,w,c
  5607  001B0A  A4D8               	btfss	status,2,c
  5608  001B0C  D01E               	goto	l753
  5609                           
  5610                           ;automode.c: 54: {autoMode.n = 0x00;}
  5611  001B0E  0E00               	movlw	0
  5612  001B10  6E50               	movwf	_autoMode,c
  5613  001B12  D01B               	goto	l753
  5614  001B14                     l5006:
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;automode.c: 56: else if (autoMode.sm0 == 3)
  5618  001B14  0E03               	movlw	3
  5619  001B16  1851               	xorwf	_autoMode+1,w,c
  5620  001B18  A4D8               	btfss	status,2,c
  5621  001B1A  D00C               	goto	l5014
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;automode.c: 57: {;automode.c: 58: if (mpap_isIdle())
  5625  001B1C  EC88  F012         	call	_mpap_isIdle	;wreg free
  5626  001B20  0900               	iorlw	0
  5627  001B22  B4D8               	btfsc	status,2,c
  5628  001B24  D012               	goto	l753
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;automode.c: 59: {;automode.c: 60: pump_setTick(1);
  5632  001B26  0E00               	movlw	0
  5633  001B28  6E0C               	movwf	pump_setTick@ticks+1,c
  5634  001B2A  0E01               	movlw	1
  5635  001B2C  6E0B               	movwf	pump_setTick@ticks,c
  5636  001B2E  ECA4  F012         	call	_pump_setTick	;wreg free
  5637  001B32  D7CB               	goto	l4986
  5638  001B34                     l5014:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;automode.c: 64: else if (autoMode.sm0 == 4)
  5642  001B34  0E04               	movlw	4
  5643  001B36  1851               	xorwf	_autoMode+1,w,c
  5644  001B38  A4D8               	btfss	status,2,c
  5645  001B3A  D007               	goto	l753
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;automode.c: 65: {;automode.c: 66: if (pump_isIdle())
  5649  001B3C  EC79  F012         	call	_pump_isIdle	;wreg free
  5650  001B40  0900               	iorlw	0
  5651  001B42  B4D8               	btfsc	status,2,c
  5652  001B44  D002               	goto	l753
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;automode.c: 67: {;automode.c: 68: autoMode.sm0 = 0x2;
  5656  001B46  0E02               	movlw	2
  5657  001B48  6E51               	movwf	_autoMode+1,c
  5658  001B4A                     l753:
  5659                           
  5660                           ;automode.c: 69: };automode.c: 70: };automode.c: 71: return cod_ret;
  5661  001B4A  0E00               	movlw	0
  5662  001B4C  0012               	return		;funcret
  5663  001B4E                     __end_of_autoMode_job:
  5664                           	opt callstack 0
  5665                           
  5666 ;; *************** function _pump_setTick *****************
  5667 ;; Defined at:
  5668 ;;		line 8 in file "pump.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  ticks           2   10[COMRAM] unsigned int 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		None
  5677 ;; Tracked objects:
  5678 ;;		On entry : 3F/0
  5679 ;;		On exit  : 3F/0
  5680 ;;		Unchanged: 3F/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5682 ;;      Params:         2       0       0       0       0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5685 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5686 ;;Total ram usage:        2 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    5
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_autoMode_job
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text41
  5697  002548                     __ptext41:
  5698                           	opt callstack 0
  5699  002548                     _pump_setTick:
  5700                           	opt callstack 24
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;pump.c: 10: pump.ticks = ticks;
  5704                           
  5705                           ;incstack = 0
  5706  002548  C00B  F0B5         	movff	pump_setTick@ticks,_pump
  5707  00254C  C00C  F0B6         	movff	pump_setTick@ticks+1,_pump+1
  5708                           
  5709                           ; BSR set to: 0
  5710  002550  0012               	return		;funcret
  5711  002552                     __end_of_pump_setTick:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function _pump_isIdle *****************
  5715 ;; Defined at:
  5716 ;;		line 66 in file "pump.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;		None
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      char 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0
  5725 ;; Tracked objects:
  5726 ;;		On entry : 3F/0
  5727 ;;		On exit  : 3F/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5733 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5734 ;;Total ram usage:        0 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    5
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_autoMode_job
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text42
  5745  0024F2                     __ptext42:
  5746                           	opt callstack 0
  5747  0024F2                     _pump_isIdle:
  5748                           	opt callstack 24
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;pump.c: 68: if (pump.ticks == 0)
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;incstack = 0
  5755  0024F2  51B5               	movf	_pump& (0+255),w,b
  5756  0024F4  11B6               	iorwf	(_pump+1)& (0+255),w,b
  5757  0024F6  A4D8               	btfss	status,2,c
  5758  0024F8  D002               	goto	l4772
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;pump.c: 69: {return 1;}
  5762  0024FA  0E01               	movlw	1
  5763  0024FC  0012               	return	
  5764  0024FE                     l4772:
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;pump.c: 70: return 0;
  5768  0024FE  0E00               	movlw	0
  5769                           
  5770                           ; BSR set to: 0
  5771  002500  0012               	return		;funcret
  5772  002502                     __end_of_pump_isIdle:
  5773                           	opt callstack 0
  5774                           
  5775 ;; *************** function _nozzle_isEnabled *****************
  5776 ;; Defined at:
  5777 ;;		line 6 in file "nozzle.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  n               2   30[COMRAM] int 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      char 
  5784 ;; Registers used:
  5785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 3F/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5791 ;;      Params:         2       0       0       0       0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5794 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5795 ;;Total ram usage:        2 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    6
  5798 ;; This function calls:
  5799 ;;		___ftge
  5800 ;;		___wmul
  5801 ;; This function is called by:
  5802 ;;		_autoMode_job
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text43
  5807  002106                     __ptext43:
  5808                           	opt callstack 0
  5809  002106                     _nozzle_isEnabled:
  5810                           	opt callstack 23
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;nozzle.c: 8: if (pulsonic.nozzle[n].Q_mlh > 0.0)
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;incstack = 0
  5817  002106  0E00               	movlw	0
  5818  002108  6E16               	movwf	___ftge@ff1,c
  5819  00210A  0E00               	movlw	0
  5820  00210C  6E17               	movwf	___ftge@ff1+1,c
  5821  00210E  0E00               	movlw	0
  5822  002110  6E18               	movwf	___ftge@ff1+2,c
  5823  002112  C01F  F00B         	movff	nozzle_isEnabled@n,___wmul@multiplier
  5824  002116  C020  F00C         	movff	nozzle_isEnabled@n+1,___wmul@multiplier+1
  5825  00211A  0E00               	movlw	0
  5826  00211C  6E0E               	movwf	___wmul@multiplicand+1,c
  5827  00211E  0E06               	movlw	6
  5828  002120  6E0D               	movwf	___wmul@multiplicand,c
  5829  002122  ECD9  F011         	call	___wmul	;wreg free
  5830  002126  0E06               	movlw	low (_pulsonic+6)
  5831  002128  240B               	addwf	?___wmul,w,c
  5832  00212A  6ED9               	movwf	fsr2l,c
  5833  00212C  0E01               	movlw	high (_pulsonic+6)
  5834  00212E  200C               	addwfc	?___wmul+1,w,c
  5835  002130  6EDA               	movwf	fsr2h,c
  5836  002132  CFDE F019          	movff	postinc2,___ftge@ff2
  5837  002136  CFDE F01A          	movff	postinc2,___ftge@ff2+1
  5838  00213A  CFDD F01B          	movff	postdec2,___ftge@ff2+2
  5839  00213E  ECE6  F00E         	call	___ftge	;wreg free
  5840  002142  B0D8               	btfsc	status,0,c
  5841  002144  D002               	goto	l4814
  5842                           
  5843                           ;nozzle.c: 9: return 1;
  5844  002146  0E01               	movlw	1
  5845  002148  0012               	return	
  5846  00214A                     l4814:
  5847                           
  5848                           ;nozzle.c: 10: return 0;
  5849  00214A  0E00               	movlw	0
  5850  00214C  0012               	return		;funcret
  5851  00214E                     __end_of_nozzle_isEnabled:
  5852                           	opt callstack 0
  5853                           
  5854 ;; *************** function _mpap_setupToHomming *****************
  5855 ;; Defined at:
  5856 ;;		line 67 in file "mpap.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;		None
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0, cstack
  5865 ;; Tracked objects:
  5866 ;;		On entry : 3F/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5870 ;;      Params:         0       0       0       0       0       0       0       0       0
  5871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5873 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5874 ;;Total ram usage:        0 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    6
  5877 ;; This function calls:
  5878 ;;		_mpap_setupToTurn
  5879 ;; This function is called by:
  5880 ;;		_autoMode_job
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text44
  5885  0024BE                     __ptext44:
  5886                           	opt callstack 0
  5887  0024BE                     _mpap_setupToHomming:
  5888                           	opt callstack 23
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;mpap.c: 69: mpap_setupToTurn( -1 *( (8*200) +20));
  5892                           
  5893                           ;incstack = 0
  5894  0024BE  0EF9               	movlw	249
  5895  0024C0  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  5896  0024C2  0EAC               	movlw	172
  5897  0024C4  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  5898  0024C6  ECAA  F011         	call	_mpap_setupToTurn	;wreg free
  5899                           
  5900                           ;mpap.c: 72: mpap.mode = MPAP_HOMMING_MODE;
  5901  0024CA  0E02               	movlw	2
  5902  0024CC  6E4F               	movwf	_mpap+7,c	;volatile
  5903  0024CE  0012               	return		;funcret
  5904  0024D0                     __end_of_mpap_setupToHomming:
  5905                           	opt callstack 0
  5906                           
  5907 ;; *************** function _mpap_movetoNozzle *****************
  5908 ;; Defined at:
  5909 ;;		line 215 in file "mpap.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  n               1    wreg     char 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  n               1   20[COMRAM] char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0
  5924 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5926 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5927 ;;Total ram usage:        1 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    6
  5930 ;; This function calls:
  5931 ;;		___wmul
  5932 ;;		_mpap_setupToTurn
  5933 ;; This function is called by:
  5934 ;;		_autoMode_job
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text45
  5939  002384                     __ptext45:
  5940                           	opt callstack 0
  5941  002384                     _mpap_movetoNozzle:
  5942                           	opt callstack 23
  5943                           
  5944                           ;incstack = 0
  5945                           ;mpap_movetoNozzle@n stored from wreg
  5946  002384  6E15               	movwf	mpap_movetoNozzle@n,c
  5947                           
  5948                           ;mpap.c: 218: mpap_setupToTurn( (n*200) - mpap.numSteps_current);
  5949  002386  5015               	movf	mpap_movetoNozzle@n,w,c
  5950  002388  6E0B               	movwf	___wmul@multiplier,c
  5951  00238A  6A0C               	clrf	___wmul@multiplier+1,c
  5952  00238C  BE0B               	btfsc	___wmul@multiplier,7,c
  5953  00238E  060C               	decf	___wmul@multiplier+1,f,c
  5954  002390  0E00               	movlw	0
  5955  002392  6E0E               	movwf	___wmul@multiplicand+1,c
  5956  002394  0EC8               	movlw	200
  5957  002396  6E0D               	movwf	___wmul@multiplicand,c
  5958  002398  ECD9  F011         	call	___wmul	;wreg free
  5959  00239C  5048               	movf	_mpap,w,c	;volatile
  5960  00239E  5C0B               	subwf	?___wmul,w,c
  5961  0023A0  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  5962  0023A2  5049               	movf	_mpap+1,w,c	;volatile
  5963  0023A4  580C               	subwfb	?___wmul+1,w,c
  5964  0023A6  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  5965  0023A8  ECAA  F011         	call	_mpap_setupToTurn	;wreg free
  5966                           
  5967                           ;mpap.c: 220: mpap.mode = MPAP_NORMAL_MODE;
  5968  0023AC  0E03               	movlw	3
  5969  0023AE  6E4F               	movwf	_mpap+7,c	;volatile
  5970  0023B0  0012               	return		;funcret
  5971  0023B2                     __end_of_mpap_movetoNozzle:
  5972                           	opt callstack 0
  5973                           
  5974 ;; *************** function _mpap_setupToTurn *****************
  5975 ;; Defined at:
  5976 ;;		line 55 in file "mpap.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  numSteps_tom    2   16[COMRAM] int 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;		None
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5990 ;;      Params:         2       0       0       0       0       0       0       0       0
  5991 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5993 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5994 ;;Total ram usage:        4 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    5
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_mpap_setupToHomming
  6001 ;;		_mpap_movetoNozzle
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text46
  6006  002354                     __ptext46:
  6007                           	opt callstack 0
  6008  002354                     _mpap_setupToTurn:
  6009                           	opt callstack 23
  6010                           
  6011                           ;mpap.c: 58: if (numSteps_tomove !=0)
  6012                           
  6013                           ;incstack = 0
  6014  002354  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  6015  002356  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  6016  002358  B4D8               	btfsc	status,2,c
  6017  00235A  0012               	return	
  6018                           
  6019                           ;mpap.c: 59: {;mpap.c: 60: mpap.KI = (numSteps_tomove<0)? -1: 1;
  6020  00235C  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  6021  00235E  D005               	goto	l433
  6022  002360  0E00               	movlw	0
  6023  002362  6E14               	movwf	_mpap_setupToTurn$438+1,c
  6024  002364  0E01               	movlw	1
  6025  002366  6E13               	movwf	_mpap_setupToTurn$438,c
  6026  002368  D002               	goto	l435
  6027  00236A                     l433:
  6028  00236A  6813               	setf	_mpap_setupToTurn$438,c
  6029  00236C  6814               	setf	_mpap_setupToTurn$438+1,c
  6030  00236E                     l435:
  6031  00236E  C013  F04E         	movff	_mpap_setupToTurn$438,_mpap+6	;volatile
  6032                           
  6033                           ;mpap.c: 62: mpap.counter_steps = 0;
  6034  002372  0E00               	movlw	0
  6035  002374  6E4B               	movwf	_mpap+3,c	;volatile
  6036  002376  0E00               	movlw	0
  6037  002378  6E4A               	movwf	_mpap+2,c	;volatile
  6038                           
  6039                           ;mpap.c: 64: mpap.numSteps_tomove = numSteps_tomove;
  6040  00237A  C011  F04C         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  6041  00237E  C012  F04D         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  6042  002382  0012               	return		;funcret
  6043  002384                     __end_of_mpap_setupToTurn:
  6044                           	opt callstack 0
  6045                           
  6046 ;; *************** function _mpap_isIdle *****************
  6047 ;; Defined at:
  6048 ;;		line 222 in file "mpap.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;		None
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;		None
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      char 
  6055 ;; Registers used:
  6056 ;;		wreg, status,2
  6057 ;; Tracked objects:
  6058 ;;		On entry : 3F/0
  6059 ;;		On exit  : 3F/0
  6060 ;;		Unchanged: 3F/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6062 ;;      Params:         0       0       0       0       0       0       0       0       0
  6063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6065 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6066 ;;Total ram usage:        0 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    5
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_autoMode_job
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text47
  6077  002510                     __ptext47:
  6078                           	opt callstack 0
  6079  002510                     _mpap_isIdle:
  6080                           	opt callstack 24
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;mpap.c: 224: if (mpap.mode == MPAP_IDLE_MODE)
  6084                           
  6085                           ;incstack = 0
  6086  002510  504F               	movf	_mpap+7,w,c	;volatile
  6087  002512  A4D8               	btfss	status,2,c
  6088  002514  D002               	goto	l4760
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;mpap.c: 225: {return 1;}
  6092  002516  0E01               	movlw	1
  6093  002518  0012               	return	
  6094  00251A                     l4760:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;mpap.c: 226: return 0;
  6098  00251A  0E00               	movlw	0
  6099                           
  6100                           ; BSR set to: 0
  6101  00251C  0012               	return		;funcret
  6102  00251E                     __end_of_mpap_isIdle:
  6103                           	opt callstack 0
  6104                           
  6105 ;; *************** function _autoMode_init *****************
  6106 ;; Defined at:
  6107 ;;		line 15 in file "automode.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  init            1    wreg     char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  init            1   62[COMRAM] char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 3F/0
  6118 ;;		On exit  : 3F/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6121 ;;      Params:         0       0       0       0       0       0       0       0       0
  6122 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6124 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6125 ;;Total ram usage:        3 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:   10
  6128 ;; This function calls:
  6129 ;;		___lwtoft
  6130 ;;		_disp7s_modeDisp_off
  6131 ;;		_disp7s_qtyDisp_writeFloat
  6132 ;;		_pulsonic_getTotalSum_mlh
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text48
  6139  0021DE                     __ptext48:
  6140                           	opt callstack 0
  6141  0021DE                     _autoMode_init:
  6142                           	opt callstack 20
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;incstack = 0
  6146                           ;autoMode_init@init stored from wreg
  6147  0021DE  6E3F               	movwf	autoMode_init@init,c
  6148                           
  6149                           ;automode.c: 17: if (disp_owner == DISPOWNER_AUTOMODE)
  6150  0021E0  0100               	movlb	0	; () banked
  6151  0021E2  51C6               	movf	_disp_owner& (0+255),w,b
  6152  0021E4  A4D8               	btfss	status,2,c
  6153  0021E6  D016               	goto	l4918
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;automode.c: 18: {;automode.c: 19: disp7s_modeDisp_off();
  6157  0021E8  EC68  F012         	call	_disp7s_modeDisp_off	;wreg free
  6158                           
  6159                           ;automode.c: 20: disp7s_qtyDisp_writeFloat( pulsonic_getTotalSum_mlh() );
  6160  0021EC  ECA7  F00D         	call	_pulsonic_getTotalSum_mlh	;wreg free
  6161  0021F0  C031  F040         	movff	?_pulsonic_getTotalSum_mlh,_autoMode_init$1551
  6162  0021F4  C032  F041         	movff	?_pulsonic_getTotalSum_mlh+1,_autoMode_init$1551+1
  6163                           
  6164                           ;automode.c: 20: disp7s_qtyDisp_writeFloat( pulsonic_getTotalSum_mlh() );
  6165  0021F8  C040  F013         	movff	_autoMode_init$1551,___lwtoft@c
  6166  0021FC  C041  F014         	movff	_autoMode_init$1551+1,___lwtoft@c+1
  6167  002200  ECEC  F011         	call	___lwtoft	;wreg free
  6168  002204  C013  F03C         	movff	?___lwtoft,disp7s_qtyDisp_writeFloat@num
  6169  002208  C014  F03D         	movff	?___lwtoft+1,disp7s_qtyDisp_writeFloat@num+1
  6170  00220C  C015  F03E         	movff	?___lwtoft+2,disp7s_qtyDisp_writeFloat@num+2
  6171  002210  EC1E  F012         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  6172  002214                     l4918:
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;automode.c: 21: };automode.c: 22: if (init == AUTOMODE_INIT_RESTART)
  6176  002214  503F               	movf	autoMode_init@init,w,c
  6177  002216  A4D8               	btfss	status,2,c
  6178  002218  0012               	return	
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;automode.c: 23: {;automode.c: 24: autoMode.n = 0x0;
  6182  00221A  0E00               	movlw	0
  6183  00221C  6E50               	movwf	_autoMode,c
  6184                           
  6185                           ; BSR set to: 0
  6186  00221E  0012               	return		;funcret
  6187  002220                     __end_of_autoMode_init:
  6188                           	opt callstack 0
  6189                           
  6190 ;; *************** function _pulsonic_getTotalSum_mlh *****************
  6191 ;; Defined at:
  6192 ;;		line 25 in file "pulsonic.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;		None
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  i               2   52[COMRAM] int 
  6197 ;;  acc             2   50[COMRAM] unsigned int 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  2   48[COMRAM] unsigned int 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6207 ;;      Params:         2       0       0       0       0       0       0       0       0
  6208 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6210 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6211 ;;Total ram usage:        6 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    7
  6214 ;; This function calls:
  6215 ;;		___ftadd
  6216 ;;		___fttol
  6217 ;;		___lwtoft
  6218 ;;		___wmul
  6219 ;; This function is called by:
  6220 ;;		_autoMode_init
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text49
  6225  001B4E                     __ptext49:
  6226                           	opt callstack 0
  6227  001B4E                     _pulsonic_getTotalSum_mlh:
  6228                           	opt callstack 22
  6229                           
  6230                           ;pulsonic.c: 27: int i;;pulsonic.c: 28: uint16_t acc = 0;
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;incstack = 0
  6234  001B4E  0E00               	movlw	0
  6235  001B50  6E34               	movwf	pulsonic_getTotalSum_mlh@acc+1,c
  6236  001B52  0E00               	movlw	0
  6237  001B54  6E33               	movwf	pulsonic_getTotalSum_mlh@acc,c
  6238                           
  6239                           ;pulsonic.c: 29: for (i=0; i<8; i++)
  6240  001B56  0E00               	movlw	0
  6241  001B58  6E36               	movwf	pulsonic_getTotalSum_mlh@i+1,c
  6242  001B5A  0E00               	movlw	0
  6243  001B5C  6E35               	movwf	pulsonic_getTotalSum_mlh@i,c
  6244  001B5E                     l4740:
  6245                           
  6246                           ;pulsonic.c: 30: {;pulsonic.c: 31: acc += pulsonic.nozzle[i].Q_mlh;
  6247  001B5E  C035  F00B         	movff	pulsonic_getTotalSum_mlh@i,___wmul@multiplier
  6248  001B62  C036  F00C         	movff	pulsonic_getTotalSum_mlh@i+1,___wmul@multiplier+1
  6249  001B66  0E00               	movlw	0
  6250  001B68  6E0E               	movwf	___wmul@multiplicand+1,c
  6251  001B6A  0E06               	movlw	6
  6252  001B6C  6E0D               	movwf	___wmul@multiplicand,c
  6253  001B6E  ECD9  F011         	call	___wmul	;wreg free
  6254  001B72  0E06               	movlw	low (_pulsonic+6)
  6255  001B74  240B               	addwf	?___wmul,w,c
  6256  001B76  6ED9               	movwf	fsr2l,c
  6257  001B78  0E01               	movlw	high (_pulsonic+6)
  6258  001B7A  200C               	addwfc	?___wmul+1,w,c
  6259  001B7C  6EDA               	movwf	fsr2h,c
  6260  001B7E  CFDE F019          	movff	postinc2,___ftadd@f2
  6261  001B82  CFDE F01A          	movff	postinc2,___ftadd@f2+1
  6262  001B86  CFDD F01B          	movff	postdec2,___ftadd@f2+2
  6263  001B8A  C033  F013         	movff	pulsonic_getTotalSum_mlh@acc,___lwtoft@c
  6264  001B8E  C034  F014         	movff	pulsonic_getTotalSum_mlh@acc+1,___lwtoft@c+1
  6265  001B92  ECEC  F011         	call	___lwtoft	;wreg free
  6266  001B96  C013  F016         	movff	?___lwtoft,___ftadd@f1
  6267  001B9A  C014  F017         	movff	?___lwtoft+1,___ftadd@f1+1
  6268  001B9E  C015  F018         	movff	?___lwtoft+2,___ftadd@f1+2
  6269  001BA2  EC2F  F008         	call	___ftadd	;wreg free
  6270  001BA6  C016  F022         	movff	?___ftadd,___fttol@f1
  6271  001BAA  C017  F023         	movff	?___ftadd+1,___fttol@f1+1
  6272  001BAE  C018  F024         	movff	?___ftadd+2,___fttol@f1+2
  6273  001BB2  EC5A  F00B         	call	___fttol	;wreg free
  6274  001BB6  C022  F033         	movff	?___fttol,pulsonic_getTotalSum_mlh@acc
  6275  001BBA  C023  F034         	movff	?___fttol+1,pulsonic_getTotalSum_mlh@acc+1
  6276  001BBE  4A35               	infsnz	pulsonic_getTotalSum_mlh@i,f,c
  6277  001BC0  2A36               	incf	pulsonic_getTotalSum_mlh@i+1,f,c
  6278  001BC2  BE36               	btfsc	pulsonic_getTotalSum_mlh@i+1,7,c
  6279  001BC4  D7CC               	goto	l4740
  6280  001BC6  5036               	movf	pulsonic_getTotalSum_mlh@i+1,w,c
  6281  001BC8  E104               	bnz	u5680
  6282  001BCA  0E08               	movlw	8
  6283  001BCC  5C35               	subwf	pulsonic_getTotalSum_mlh@i,w,c
  6284  001BCE  A0D8               	btfss	status,0,c
  6285  001BD0  D7C6               	goto	l4740
  6286  001BD2                     u5680:
  6287                           
  6288                           ;pulsonic.c: 32: };pulsonic.c: 33: return acc;
  6289  001BD2  C033  F031         	movff	pulsonic_getTotalSum_mlh@acc,?_pulsonic_getTotalSum_mlh
  6290  001BD6  C034  F032         	movff	pulsonic_getTotalSum_mlh@acc+1,?_pulsonic_getTotalSum_mlh+1
  6291  001BDA  0012               	return		;funcret
  6292  001BDC                     __end_of_pulsonic_getTotalSum_mlh:
  6293                           	opt callstack 0
  6294                           
  6295 ;; *************** function ___wmul *****************
  6296 ;; Defined at:
  6297 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  multiplier      2   10[COMRAM] unsigned int 
  6300 ;;  multiplicand    2   12[COMRAM] unsigned int 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  product         2   14[COMRAM] unsigned int 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  2   10[COMRAM] unsigned int 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0, prodl, prodh
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/1
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6312 ;;      Params:         4       0       0       0       0       0       0       0       0
  6313 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6315 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6316 ;;Total ram usage:        6 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    5
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_mpap_movetoNozzle
  6323 ;;		_disp7s_write_i
  6324 ;;		_pulsonic_getTotalSum_mlh
  6325 ;;		_nozzle_isEnabled
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text50
  6330  0023B2                     __ptext50:
  6331                           	opt callstack 0
  6332  0023B2                     ___wmul:
  6333                           	opt callstack 21
  6334                           
  6335                           ;incstack = 0
  6336  0023B2  500B               	movf	___wmul@multiplier,w,c
  6337  0023B4  020D               	mulwf	___wmul@multiplicand,c
  6338  0023B6  CFF3 F00F          	movff	prodl,___wmul@product
  6339  0023BA  CFF4 F010          	movff	prodh,___wmul@product+1
  6340  0023BE  500B               	movf	___wmul@multiplier,w,c
  6341  0023C0  020E               	mulwf	___wmul@multiplicand+1,c
  6342  0023C2  50F3               	movf	prodl,w,c
  6343  0023C4  2610               	addwf	___wmul@product+1,f,c
  6344  0023C6  500C               	movf	___wmul@multiplier+1,w,c
  6345  0023C8  020D               	mulwf	___wmul@multiplicand,c
  6346  0023CA  50F3               	movf	prodl,w,c
  6347  0023CC  2610               	addwf	___wmul@product+1,f,c
  6348  0023CE  C00F  F00B         	movff	___wmul@product,?___wmul
  6349  0023D2  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  6350  0023D6  0012               	return		;funcret
  6351  0023D8                     __end_of___wmul:
  6352                           	opt callstack 0
  6353                           
  6354 ;; *************** function ___lwtoft *****************
  6355 ;; Defined at:
  6356 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  c               2   18[COMRAM] unsigned int 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  3   18[COMRAM] float 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6370 ;;      Params:         3       0       0       0       0       0       0       0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6373 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6374 ;;Total ram usage:        3 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    6
  6377 ;; This function calls:
  6378 ;;		___ftpack
  6379 ;; This function is called by:
  6380 ;;		_ikey_parsing
  6381 ;;		_pulsonic_getTotalSum_mlh
  6382 ;;		_autoMode_init
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text51
  6387  0023D8                     __ptext51:
  6388                           	opt callstack 0
  6389  0023D8                     ___lwtoft:
  6390                           	opt callstack 22
  6391                           
  6392                           ;incstack = 0
  6393  0023D8  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  6394  0023DC  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  6395  0023E0  6A0D               	clrf	___ftpack@arg+2,c
  6396  0023E2  0E8E               	movlw	142
  6397  0023E4  6E0E               	movwf	___ftpack@exp,c
  6398  0023E6  0E00               	movlw	0
  6399  0023E8  6E0F               	movwf	___ftpack@sign,c
  6400  0023EA  EC1E  F00C         	call	___ftpack	;wreg free
  6401  0023EE  C00B  F013         	movff	?___ftpack,?___lwtoft
  6402  0023F2  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  6403  0023F6  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  6404  0023FA  0012               	return		;funcret
  6405  0023FC                     __end_of___lwtoft:
  6406                           	opt callstack 0
  6407                           
  6408 ;; *************** function _disp7s_qtyDisp_writeFloat *****************
  6409 ;; Defined at:
  6410 ;;		line 242 in file "display.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  num             3   59[COMRAM] float 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 3F/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6424 ;;      Params:         3       0       0       0       0       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6427 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6428 ;;Total ram usage:        3 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    9
  6431 ;; This function calls:
  6432 ;;		_disp7s_write_f
  6433 ;; This function is called by:
  6434 ;;		_autoMode_init
  6435 ;;		_visMode_disp
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text52
  6440  00243C                     __ptext52:
  6441                           	opt callstack 0
  6442  00243C                     _disp7s_qtyDisp_writeFloat:
  6443                           	opt callstack 19
  6444                           
  6445                           ;display.c: 244: disp7s_write_f(pulsonic.disp7s.qty, 3, num);
  6446                           
  6447                           ;incstack = 0
  6448  00243C  0E3B               	movlw	low (_pulsonic+59)
  6449  00243E  6E31               	movwf	disp7s_write_f@pDisp,c
  6450  002440  0E01               	movlw	high (_pulsonic+59)
  6451  002442  6E32               	movwf	disp7s_write_f@pDisp+1,c
  6452  002444  0E03               	movlw	3
  6453  002446  6E33               	movwf	disp7s_write_f@NUM_OF_DISP,c
  6454  002448  C03C  F034         	movff	disp7s_qtyDisp_writeFloat@num,disp7s_write_f@num
  6455  00244C  C03D  F035         	movff	disp7s_qtyDisp_writeFloat@num+1,disp7s_write_f@num+1
  6456  002450  C03E  F036         	movff	disp7s_qtyDisp_writeFloat@num+2,disp7s_write_f@num+2
  6457  002454  EC21  F007         	call	_disp7s_write_f	;wreg free
  6458                           
  6459                           ; BSR set to: 0
  6460  002458  0012               	return		;funcret
  6461  00245A                     __end_of_disp7s_qtyDisp_writeFloat:
  6462                           	opt callstack 0
  6463                           
  6464 ;; *************** function _disp7s_write_f *****************
  6465 ;; Defined at:
  6466 ;;		line 187 in file "display.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  pDisp           2   48[COMRAM] PTR unsigned char 
  6469 ;;		 -> pulsonic.disp7s(5), pulsonic(64), 
  6470 ;;  NUM_OF_DISP     1   50[COMRAM] char 
  6471 ;;  num             3   51[COMRAM] char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  buff           10    0[BANK0 ] unsigned char [10]
  6474 ;;  K10MULT         3   13[BANK0 ] unsigned char [10]
  6475 ;;  I               2   10[BANK0 ] int 
  6476 ;;  i               1   16[BANK0 ] char 
  6477 ;;  pi              1   12[BANK0 ] char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 3F/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6487 ;;      Params:         6       0       0       0       0       0       0       0       0
  6488 ;;      Locals:         0      17       0       0       0       0       0       0       0
  6489 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6490 ;;      Totals:        11      17       0       0       0       0       0       0       0
  6491 ;;Total ram usage:       28 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    8
  6494 ;; This function calls:
  6495 ;;		___ftadd
  6496 ;;		___ftge
  6497 ;;		___ftmul
  6498 ;;		___fttol
  6499 ;;		_disp7s_off
  6500 ;;		_itoa
  6501 ;; This function is called by:
  6502 ;;		_disp7s_qtyDisp_writeFloat
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text53
  6507  000E42                     __ptext53:
  6508                           	opt callstack 0
  6509  000E42                     _disp7s_write_f:
  6510                           	opt callstack 19
  6511                           
  6512                           ;display.c: 189: double K10MULT;;display.c: 190: int16_t I;;display.c: 191: char buff[10
      +                          ];;display.c: 192: int8_t i;;display.c: 193: int8_t pi;;display.c: 195: K10MULT = 1;
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;incstack = 0
  6516  000E42  0E00               	movlw	0
  6517  000E44  0100               	movlb	0	; () banked
  6518  000E46  6FF6               	movwf	disp7s_write_f@K10MULT& (0+255),b
  6519  000E48  0E80               	movlw	128
  6520  000E4A  6FF7               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  6521  000E4C  0E3F               	movlw	63
  6522  000E4E  6FF8               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;display.c: 196: i = NUM_OF_DISP;
  6526  000E50  C033  F0F9         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_write_f@i
  6527                           
  6528                           ;display.c: 197: while (i--)
  6529  000E54  D014               	goto	l4430
  6530  000E56                     l4428:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;display.c: 198: {K10MULT *=10;}
  6534  000E56  C0F6  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  6535  000E5A  C0F7  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  6536  000E5E  C0F8  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  6537  000E62  0E00               	movlw	0
  6538  000E64  6E16               	movwf	___ftmul@f2,c
  6539  000E66  0E20               	movlw	32
  6540  000E68  6E17               	movwf	___ftmul@f2+1,c
  6541  000E6A  0E41               	movlw	65
  6542  000E6C  6E18               	movwf	___ftmul@f2+2,c
  6543  000E6E  ECE0  F00A         	call	___ftmul	;wreg free
  6544  000E72  C013  F0F6         	movff	?___ftmul,disp7s_write_f@K10MULT
  6545  000E76  C014  F0F7         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  6546  000E7A  C015  F0F8         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  6547  000E7E                     l4430:
  6548  000E7E  0100               	movlb	0	; () banked
  6549  000E80  07F9               	decf	disp7s_write_f@i& (0+255),f,b
  6550  000E82  29F9               	incf	disp7s_write_f@i& (0+255),w,b
  6551  000E84  A4D8               	btfss	status,2,c
  6552  000E86  D7E7               	goto	l4428
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;display.c: 199: if (num >= K10MULT)
  6556  000E88  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  6557  000E8C  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  6558  000E90  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  6559  000E94  C0F6  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  6560  000E98  C0F7  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  6561  000E9C  C0F8  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  6562  000EA0  ECE6  F00E         	call	___ftge	;wreg free
  6563  000EA4  A0D8               	btfss	status,0,c
  6564  000EA6  D014               	goto	l4436
  6565                           
  6566                           ;display.c: 200: {num= K10MULT-1;}
  6567  000EA8  C0F6  F016         	movff	disp7s_write_f@K10MULT,___ftadd@f1
  6568  000EAC  C0F7  F017         	movff	disp7s_write_f@K10MULT+1,___ftadd@f1+1
  6569  000EB0  C0F8  F018         	movff	disp7s_write_f@K10MULT+2,___ftadd@f1+2
  6570  000EB4  0E00               	movlw	0
  6571  000EB6  6E19               	movwf	___ftadd@f2,c
  6572  000EB8  0E80               	movlw	128
  6573  000EBA  6E1A               	movwf	___ftadd@f2+1,c
  6574  000EBC  0EBF               	movlw	191
  6575  000EBE  6E1B               	movwf	___ftadd@f2+2,c
  6576  000EC0  EC2F  F008         	call	___ftadd	;wreg free
  6577  000EC4  C016  F034         	movff	?___ftadd,disp7s_write_f@num
  6578  000EC8  C017  F035         	movff	?___ftadd+1,disp7s_write_f@num+1
  6579  000ECC  C018  F036         	movff	?___ftadd+2,disp7s_write_f@num+2
  6580  000ED0                     l4436:
  6581                           
  6582                           ;display.c: 202: disp7s_off(pDisp, NUM_OF_DISP);
  6583  000ED0  C031  F00B         	movff	disp7s_write_f@pDisp,disp7s_off@pDisp
  6584  000ED4  C032  F00C         	movff	disp7s_write_f@pDisp+1,disp7s_off@pDisp+1
  6585  000ED8  C033  F00D         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_off@NUM_OF_DISP
  6586  000EDC  EC72  F011         	call	_disp7s_off	;wreg free
  6587                           
  6588                           ;display.c: 206: K10MULT = 1;
  6589  000EE0  0E00               	movlw	0
  6590  000EE2  0100               	movlb	0	; () banked
  6591  000EE4  6FF6               	movwf	disp7s_write_f@K10MULT& (0+255),b
  6592  000EE6  0E80               	movlw	128
  6593  000EE8  6FF7               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  6594  000EEA  0E3F               	movlw	63
  6595  000EEC  6FF8               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;display.c: 207: for (i=0; i<=NUM_OF_DISP; i++)
  6599  000EEE  0E00               	movlw	0
  6600  000EF0  6FF9               	movwf	disp7s_write_f@i& (0+255),b
  6601  000EF2  D074               	goto	l4466
  6602  000EF4                     l4442:
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;display.c: 208: {;display.c: 209: if (num< K10MULT)
  6606  000EF4  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  6607  000EF8  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  6608  000EFC  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  6609  000F00  C0F6  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  6610  000F04  C0F7  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  6611  000F08  C0F8  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  6612  000F0C  ECE6  F00E         	call	___ftge	;wreg free
  6613  000F10  B0D8               	btfsc	status,0,c
  6614  000F12  D04E               	goto	l4462
  6615                           
  6616                           ;display.c: 210: {;display.c: 211: if (i<NUM_OF_DISP)
  6617  000F14  0100               	movlb	0	; () banked
  6618  000F16  51F9               	movf	disp7s_write_f@i& (0+255),w,b
  6619  000F18  0A80               	xorlw	128
  6620  000F1A  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6621  000F1C  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  6622  000F1E  0A80               	xorlw	128
  6623  000F20  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  6624  000F22  B0D8               	btfsc	status,0,c
  6625  000F24  D036               	goto	l4458
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;display.c: 212: {;display.c: 213: I = (int16_t)(num*10);
  6629  000F26  0E00               	movlw	0
  6630  000F28  6E16               	movwf	___ftmul@f2,c
  6631  000F2A  0E20               	movlw	32
  6632  000F2C  6E17               	movwf	___ftmul@f2+1,c
  6633  000F2E  0E41               	movlw	65
  6634  000F30  6E18               	movwf	___ftmul@f2+2,c
  6635  000F32  C034  F013         	movff	disp7s_write_f@num,___ftmul@f1
  6636  000F36  C035  F014         	movff	disp7s_write_f@num+1,___ftmul@f1+1
  6637  000F3A  C036  F015         	movff	disp7s_write_f@num+2,___ftmul@f1+2
  6638  000F3E  ECE0  F00A         	call	___ftmul	;wreg free
  6639  000F42  C013  F022         	movff	?___ftmul,___fttol@f1
  6640  000F46  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  6641  000F4A  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  6642  000F4E  EC5A  F00B         	call	___fttol	;wreg free
  6643  000F52  C022  F0F3         	movff	?___fttol,disp7s_write_f@I
  6644  000F56  C023  F0F4         	movff	?___fttol+1,disp7s_write_f@I+1
  6645                           
  6646                           ;display.c: 216: if (i==0)
  6647  000F5A  0100               	movlb	0	; () banked
  6648  000F5C  51F9               	movf	disp7s_write_f@i& (0+255),w,b
  6649  000F5E  A4D8               	btfss	status,2,c
  6650  000F60  D00D               	goto	l4452
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;display.c: 217: {pDisp[1]= DISP7S_NUMS[0];}
  6654  000F62  0E01               	movlw	low _DISP7S_NUMS
  6655  000F64  6EF6               	movwf	tblptrl,c
  6656  000F66                     	if	1	;There is more than 1 active tblptr byte
  6657  000F66  0E08               	movlw	high _DISP7S_NUMS
  6658  000F68  6EF7               	movwf	tblptrh,c
  6659  000F6A                     	endif
  6660  000F6A                     	if	0	;There are less than 3 active tblptr bytes
  6661  000F6A                     	endif
  6662  000F6A  EE20 F001          	lfsr	2,1
  6663  000F6E  5031               	movf	disp7s_write_f@pDisp,w,c
  6664  000F70  26D9               	addwf	fsr2l,f,c
  6665  000F72  5032               	movf	disp7s_write_f@pDisp+1,w,c
  6666  000F74  22DA               	addwfc	fsr2h,f,c
  6667  000F76  0008               	tblrd		*
  6668  000F78  CFF5 FFDF          	movff	tablat,indf2
  6669  000F7C                     l4452:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;display.c: 219: pDisp[1] |= 0x80;
  6673  000F7C  EE20 F001          	lfsr	2,1
  6674  000F80  5031               	movf	disp7s_write_f@pDisp,w,c
  6675  000F82  26D9               	addwf	fsr2l,f,c
  6676  000F84  5032               	movf	disp7s_write_f@pDisp+1,w,c
  6677  000F86  22DA               	addwfc	fsr2h,f,c
  6678  000F88  0E00               	movlw	0
  6679  000F8A  8EDB               	bsf	plusw2,7,c
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;display.c: 220: pi = i;
  6683  000F8C  C0F9  F0F5         	movff	disp7s_write_f@i,disp7s_write_f@pi
  6684                           
  6685                           ;display.c: 221: break;
  6686  000F90  D02D               	goto	u5050
  6687  000F92                     l4458:
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;display.c: 223: else;display.c: 224: {;display.c: 225: I = (int16_t)(num);
  6691  000F92  C034  F022         	movff	disp7s_write_f@num,___fttol@f1
  6692  000F96  C035  F023         	movff	disp7s_write_f@num+1,___fttol@f1+1
  6693  000F9A  C036  F024         	movff	disp7s_write_f@num+2,___fttol@f1+2
  6694  000F9E  EC5A  F00B         	call	___fttol	;wreg free
  6695  000FA2  C022  F0F3         	movff	?___fttol,disp7s_write_f@I
  6696  000FA6  C023  F0F4         	movff	?___fttol+1,disp7s_write_f@I+1
  6697                           
  6698                           ;display.c: 226: pi = i-1;
  6699  000FAA  0100               	movlb	0	; () banked
  6700  000FAC  05F9               	decf	disp7s_write_f@i& (0+255),w,b
  6701  000FAE  6FF5               	movwf	disp7s_write_f@pi& (0+255),b
  6702  000FB0                     l4462:
  6703                           
  6704                           ;display.c: 227: };display.c: 228: };display.c: 229: K10MULT *= 10;
  6705  000FB0  C0F6  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  6706  000FB4  C0F7  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  6707  000FB8  C0F8  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  6708  000FBC  0E00               	movlw	0
  6709  000FBE  6E16               	movwf	___ftmul@f2,c
  6710  000FC0  0E20               	movlw	32
  6711  000FC2  6E17               	movwf	___ftmul@f2+1,c
  6712  000FC4  0E41               	movlw	65
  6713  000FC6  6E18               	movwf	___ftmul@f2+2,c
  6714  000FC8  ECE0  F00A         	call	___ftmul	;wreg free
  6715  000FCC  C013  F0F6         	movff	?___ftmul,disp7s_write_f@K10MULT
  6716  000FD0  C014  F0F7         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  6717  000FD4  C015  F0F8         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  6718  000FD8  0100               	movlb	0	; () banked
  6719  000FDA  2BF9               	incf	disp7s_write_f@i& (0+255),f,b
  6720  000FDC                     l4466:
  6721                           
  6722                           ; BSR set to: 0
  6723  000FDC  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  6724  000FDE  0A80               	xorlw	128
  6725  000FE0  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6726  000FE2  51F9               	movf	disp7s_write_f@i& (0+255),w,b
  6727  000FE4  0A80               	xorlw	128
  6728  000FE6  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  6729  000FE8  B0D8               	btfsc	status,0,c
  6730  000FEA  D784               	goto	l4442
  6731  000FEC                     u5050:
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;display.c: 230: };display.c: 232: itoa(buff, I, 10);
  6735  000FEC  0EE9               	movlw	low disp7s_write_f@buff
  6736  000FEE  6E1A               	movwf	itoa@buf,c
  6737  000FF0  C0F3  F01B         	movff	disp7s_write_f@I,itoa@val
  6738  000FF4  C0F4  F01C         	movff	disp7s_write_f@I+1,itoa@val+1
  6739  000FF8  0E00               	movlw	0
  6740  000FFA  6E1E               	movwf	itoa@base+1,c
  6741  000FFC  0E0A               	movlw	10
  6742  000FFE  6E1D               	movwf	itoa@base,c
  6743  001000  EC91  F011         	call	_itoa	;wreg free
  6744                           
  6745                           ;display.c: 234: i=0;
  6746  001004  0E00               	movlw	0
  6747  001006  0100               	movlb	0	; () banked
  6748  001008  6FF9               	movwf	disp7s_write_f@i& (0+255),b
  6749                           
  6750                           ;display.c: 235: while (buff[i] != '\0')
  6751  00100A  D021               	goto	l4478
  6752  00100C                     l4472:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;display.c: 236: {;display.c: 237: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  6756  00100C  51F9               	movf	disp7s_write_f@i& (0+255),w,b
  6757  00100E  0FE9               	addlw	low disp7s_write_f@buff
  6758  001010  6ED9               	movwf	fsr2l,c
  6759  001012  6ADA               	clrf	fsr2h,c
  6760  001014  50DF               	movf	indf2,w,c
  6761  001016  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6762  001018  0ED0               	movlw	208
  6763  00101A  2637               	addwf	??_disp7s_write_f,f,c
  6764  00101C  5037               	movf	??_disp7s_write_f,w,c
  6765  00101E  0F01               	addlw	low _DISP7S_NUMS
  6766  001020  6E38               	movwf	(??_disp7s_write_f+1)& (0+255),c
  6767  001022  C038  FFF6         	movff	??_disp7s_write_f+1,tblptrl
  6768  001026                     	if	1	;There is more than 1 active tblptr byte
  6769  001026  0E08               	movlw	high __smallconst
  6770  001028  6EF7               	movwf	tblptrh,c
  6771  00102A                     	endif
  6772  00102A                     	if	0	;tblptru may be non-zero
  6773  00102A                     	endif
  6774  00102A                     	if	0	;tblptru may be non-zero
  6775  00102A                     	endif
  6776  00102A  0008               	tblrd		*
  6777  00102C  CFF5 F039          	movff	tablat,??_disp7s_write_f+2
  6778  001030  C0F5  F03A         	movff	disp7s_write_f@pi,??_disp7s_write_f+3
  6779  001034  6A3B               	clrf	(??_disp7s_write_f+4)& (0+255),c
  6780  001036  BE3A               	btfsc	(??_disp7s_write_f+3)& (0+255),7,c
  6781  001038  063B               	decf	(??_disp7s_write_f+4)& (0+255),f,c
  6782  00103A  503A               	movf	??_disp7s_write_f+3,w,c
  6783  00103C  2431               	addwf	disp7s_write_f@pDisp,w,c
  6784  00103E  6ED9               	movwf	fsr2l,c
  6785  001040  503B               	movf	??_disp7s_write_f+4,w,c
  6786  001042  2032               	addwfc	disp7s_write_f@pDisp+1,w,c
  6787  001044  6EDA               	movwf	fsr2h,c
  6788  001046  5039               	movf	??_disp7s_write_f+2,w,c
  6789  001048  12DF               	iorwf	indf2,f,c
  6790                           
  6791                           ; BSR set to: 0
  6792  00104A  07F5               	decf	disp7s_write_f@pi& (0+255),f,b
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;display.c: 238: i++;
  6796  00104C  2BF9               	incf	disp7s_write_f@i& (0+255),f,b
  6797  00104E                     l4478:
  6798                           
  6799                           ; BSR set to: 0
  6800  00104E  51F9               	movf	disp7s_write_f@i& (0+255),w,b
  6801  001050  0FE9               	addlw	low disp7s_write_f@buff
  6802  001052  6ED9               	movwf	fsr2l,c
  6803  001054  6ADA               	clrf	fsr2h,c
  6804  001056  50DF               	movf	indf2,w,c
  6805  001058  B4D8               	btfsc	status,2,c
  6806  00105A  0012               	return	
  6807  00105C  D7D7               	goto	l4472
  6808  00105E                     __end_of_disp7s_write_f:
  6809                           	opt callstack 0
  6810                           
  6811 ;; *************** function _itoa *****************
  6812 ;; Defined at:
  6813 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  buf             1   25[COMRAM] PTR unsigned char 
  6816 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  6817 ;;  val             2   26[COMRAM] int 
  6818 ;;  base            2   28[COMRAM] int 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  cp              1    0        PTR unsigned char 
  6821 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      PTR unsigned char 
  6824 ;; Registers used:
  6825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/1
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6831 ;;      Params:         5       0       0       0       0       0       0       0       0
  6832 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6834 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6835 ;;Total ram usage:        6 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    7
  6838 ;; This function calls:
  6839 ;;		_utoa
  6840 ;; This function is called by:
  6841 ;;		_disp7s_write_f
  6842 ;;		_disp7s_write_i
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text54
  6847  002322                     __ptext54:
  6848                           	opt callstack 0
  6849  002322                     _itoa:
  6850                           	opt callstack 19
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;incstack = 0
  6854  002322  AE1C               	btfss	itoa@val+1,7,c
  6855  002324  D00A               	goto	l4222
  6856  002326  501A               	movf	itoa@buf,w,c
  6857  002328  6ED9               	movwf	fsr2l,c
  6858  00232A  6ADA               	clrf	fsr2h,c
  6859  00232C  0E2D               	movlw	45
  6860  00232E  6EDF               	movwf	indf2,c
  6861  002330  2A1A               	incf	itoa@buf,f,c
  6862  002332  6C1B               	negf	itoa@val,c
  6863  002334  1E1C               	comf	itoa@val+1,f,c
  6864  002336  B0D8               	btfsc	status,0,c
  6865  002338  2A1C               	incf	itoa@val+1,f,c
  6866  00233A                     l4222:
  6867  00233A  C01A  F012         	movff	itoa@buf,utoa@buf
  6868  00233E  C01B  F013         	movff	itoa@val,utoa@val
  6869  002342  C01C  F014         	movff	itoa@val+1,utoa@val+1
  6870  002346  C01D  F015         	movff	itoa@base,utoa@base
  6871  00234A  C01E  F016         	movff	itoa@base+1,utoa@base+1
  6872  00234E  EC16  F00D         	call	_utoa	;wreg free
  6873  002352  0012               	return		;funcret
  6874  002354                     __end_of_itoa:
  6875                           	opt callstack 0
  6876                           
  6877 ;; *************** function _utoa *****************
  6878 ;; Defined at:
  6879 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  buf             1   17[COMRAM] PTR unsigned char 
  6882 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  6883 ;;  val             2   18[COMRAM] unsigned int 
  6884 ;;  base            2   20[COMRAM] int 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  v               2   22[COMRAM] unsigned int 
  6887 ;;  c               1   24[COMRAM] unsigned char 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      PTR unsigned char 
  6890 ;; Registers used:
  6891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/1
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6897 ;;      Params:         5       0       0       0       0       0       0       0       0
  6898 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6900 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6901 ;;Total ram usage:        8 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; Hardware stack levels required when called:    6
  6904 ;; This function calls:
  6905 ;;		___lwdiv
  6906 ;;		___lwmod
  6907 ;; This function is called by:
  6908 ;;		_itoa
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text55
  6913  001A2C                     __ptext55:
  6914                           	opt callstack 0
  6915  001A2C                     _utoa:
  6916                           	opt callstack 19
  6917                           
  6918                           ;incstack = 0
  6919  001A2C  C013  F017         	movff	utoa@val,utoa@v
  6920  001A30  C014  F018         	movff	utoa@val+1,utoa@v+1
  6921  001A34                     l4178:
  6922  001A34  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  6923  001A38  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  6924  001A3C  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  6925  001A40  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  6926  001A44  EC0F  F010         	call	___lwdiv	;wreg free
  6927  001A48  C00B  F017         	movff	?___lwdiv,utoa@v
  6928  001A4C  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  6929  001A50  2A12               	incf	utoa@buf,f,c
  6930  001A52  5017               	movf	utoa@v,w,c
  6931  001A54  1018               	iorwf	utoa@v+1,w,c
  6932  001A56  A4D8               	btfss	status,2,c
  6933  001A58  D7ED               	goto	l4178
  6934  001A5A  5012               	movf	utoa@buf,w,c
  6935  001A5C  6ED9               	movwf	fsr2l,c
  6936  001A5E  6ADA               	clrf	fsr2h,c
  6937  001A60  0E00               	movlw	0
  6938  001A62  6EDF               	movwf	indf2,c
  6939  001A64  0612               	decf	utoa@buf,f,c
  6940  001A66                     l4188:
  6941  001A66  C013  F00B         	movff	utoa@val,___lwmod@dividend
  6942  001A6A  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  6943  001A6E  C015  F00D         	movff	utoa@base,___lwmod@divisor
  6944  001A72  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  6945  001A76  EC10  F011         	call	___lwmod	;wreg free
  6946  001A7A  500B               	movf	?___lwmod,w,c
  6947  001A7C  6E19               	movwf	utoa@c,c
  6948  001A7E  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  6949  001A82  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  6950  001A86  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  6951  001A8A  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  6952  001A8E  EC0F  F010         	call	___lwdiv	;wreg free
  6953  001A92  C00B  F013         	movff	?___lwdiv,utoa@val
  6954  001A96  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  6955  001A9A  0E09               	movlw	9
  6956  001A9C  6419               	cpfsgt	utoa@c,c
  6957  001A9E  D002               	goto	l1524
  6958  001AA0  0E07               	movlw	7
  6959  001AA2  2619               	addwf	utoa@c,f,c
  6960  001AA4                     l1524:
  6961  001AA4  0E30               	movlw	48
  6962  001AA6  2619               	addwf	utoa@c,f,c
  6963  001AA8  5012               	movf	utoa@buf,w,c
  6964  001AAA  6ED9               	movwf	fsr2l,c
  6965  001AAC  6ADA               	clrf	fsr2h,c
  6966  001AAE  C019  FFDF         	movff	utoa@c,indf2
  6967  001AB2  0612               	decf	utoa@buf,f,c
  6968  001AB4  5013               	movf	utoa@val,w,c
  6969  001AB6  1014               	iorwf	utoa@val+1,w,c
  6970  001AB8  A4D8               	btfss	status,2,c
  6971  001ABA  D7D5               	goto	l4188
  6972                           
  6973                           ;	Return value of _utoa is never used
  6974  001ABC  2A12               	incf	utoa@buf,f,c
  6975  001ABE  0012               	return		;funcret
  6976  001AC0                     __end_of_utoa:
  6977                           	opt callstack 0
  6978                           
  6979 ;; *************** function ___lwmod *****************
  6980 ;; Defined at:
  6981 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  dividend        2   10[COMRAM] unsigned int 
  6984 ;;  divisor         2   12[COMRAM] unsigned int 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  counter         1   14[COMRAM] unsigned char 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2   10[COMRAM] unsigned int 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2, status,0
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/1
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6996 ;;      Params:         4       0       0       0       0       0       0       0       0
  6997 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6999 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7000 ;;Total ram usage:        5 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    5
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		_utoa
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text56
  7011  002220                     __ptext56:
  7012                           	opt callstack 0
  7013  002220                     ___lwmod:
  7014                           	opt callstack 19
  7015                           
  7016                           ;incstack = 0
  7017  002220  500D               	movf	___lwmod@divisor,w,c
  7018  002222  100E               	iorwf	___lwmod@divisor+1,w,c
  7019  002224  B4D8               	btfsc	status,2,c
  7020  002226  D018               	goto	l1342
  7021  002228  0E01               	movlw	1
  7022  00222A  6E0F               	movwf	___lwmod@counter,c
  7023  00222C  D004               	goto	l4130
  7024  00222E                     l4128:
  7025  00222E  90D8               	bcf	status,0,c
  7026  002230  360D               	rlcf	___lwmod@divisor,f,c
  7027  002232  360E               	rlcf	___lwmod@divisor+1,f,c
  7028  002234  2A0F               	incf	___lwmod@counter,f,c
  7029  002236                     l4130:
  7030  002236  AE0E               	btfss	___lwmod@divisor+1,7,c
  7031  002238  D7FA               	goto	l4128
  7032  00223A                     u4460:
  7033  00223A  500D               	movf	___lwmod@divisor,w,c
  7034  00223C  5C0B               	subwf	___lwmod@dividend,w,c
  7035  00223E  500E               	movf	___lwmod@divisor+1,w,c
  7036  002240  580C               	subwfb	___lwmod@dividend+1,w,c
  7037  002242  A0D8               	btfss	status,0,c
  7038  002244  D004               	goto	l4136
  7039  002246  500D               	movf	___lwmod@divisor,w,c
  7040  002248  5E0B               	subwf	___lwmod@dividend,f,c
  7041  00224A  500E               	movf	___lwmod@divisor+1,w,c
  7042  00224C  5A0C               	subwfb	___lwmod@dividend+1,f,c
  7043  00224E                     l4136:
  7044  00224E  90D8               	bcf	status,0,c
  7045  002250  320E               	rrcf	___lwmod@divisor+1,f,c
  7046  002252  320D               	rrcf	___lwmod@divisor,f,c
  7047  002254  2E0F               	decfsz	___lwmod@counter,f,c
  7048  002256  D7F1               	goto	u4460
  7049  002258                     l1342:
  7050  002258  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  7051  00225C  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  7052  002260  0012               	return		;funcret
  7053  002262                     __end_of___lwmod:
  7054                           	opt callstack 0
  7055                           
  7056 ;; *************** function ___lwdiv *****************
  7057 ;; Defined at:
  7058 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  dividend        2   10[COMRAM] unsigned int 
  7061 ;;  divisor         2   12[COMRAM] unsigned int 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  quotient        2   15[COMRAM] unsigned int 
  7064 ;;  counter         1   14[COMRAM] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  2   10[COMRAM] unsigned int 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2, status,0
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/1
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7074 ;;      Params:         4       0       0       0       0       0       0       0       0
  7075 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7077 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7078 ;;Total ram usage:        7 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    5
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_utoa
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088                           	psect	text57
  7089  00201E                     __ptext57:
  7090                           	opt callstack 0
  7091  00201E                     ___lwdiv:
  7092                           	opt callstack 19
  7093                           
  7094                           ;incstack = 0
  7095  00201E  0E00               	movlw	0
  7096  002020  6E11               	movwf	___lwdiv@quotient+1,c
  7097  002022  0E00               	movlw	0
  7098  002024  6E10               	movwf	___lwdiv@quotient,c
  7099  002026  500D               	movf	___lwdiv@divisor,w,c
  7100  002028  100E               	iorwf	___lwdiv@divisor+1,w,c
  7101  00202A  B4D8               	btfsc	status,2,c
  7102  00202C  D01C               	goto	l1332
  7103  00202E  0E01               	movlw	1
  7104  002030  6E0F               	movwf	___lwdiv@counter,c
  7105  002032  D004               	goto	l4110
  7106  002034                     l4108:
  7107  002034  90D8               	bcf	status,0,c
  7108  002036  360D               	rlcf	___lwdiv@divisor,f,c
  7109  002038  360E               	rlcf	___lwdiv@divisor+1,f,c
  7110  00203A  2A0F               	incf	___lwdiv@counter,f,c
  7111  00203C                     l4110:
  7112  00203C  AE0E               	btfss	___lwdiv@divisor+1,7,c
  7113  00203E  D7FA               	goto	l4108
  7114  002040                     u4430:
  7115  002040  90D8               	bcf	status,0,c
  7116  002042  3610               	rlcf	___lwdiv@quotient,f,c
  7117  002044  3611               	rlcf	___lwdiv@quotient+1,f,c
  7118  002046  500D               	movf	___lwdiv@divisor,w,c
  7119  002048  5C0B               	subwf	___lwdiv@dividend,w,c
  7120  00204A  500E               	movf	___lwdiv@divisor+1,w,c
  7121  00204C  580C               	subwfb	___lwdiv@dividend+1,w,c
  7122  00204E  A0D8               	btfss	status,0,c
  7123  002050  D005               	goto	l4120
  7124  002052  500D               	movf	___lwdiv@divisor,w,c
  7125  002054  5E0B               	subwf	___lwdiv@dividend,f,c
  7126  002056  500E               	movf	___lwdiv@divisor+1,w,c
  7127  002058  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  7128  00205A  8010               	bsf	___lwdiv@quotient,0,c
  7129  00205C                     l4120:
  7130  00205C  90D8               	bcf	status,0,c
  7131  00205E  320E               	rrcf	___lwdiv@divisor+1,f,c
  7132  002060  320D               	rrcf	___lwdiv@divisor,f,c
  7133  002062  2E0F               	decfsz	___lwdiv@counter,f,c
  7134  002064  D7ED               	goto	u4430
  7135  002066                     l1332:
  7136  002066  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  7137  00206A  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7138  00206E  0012               	return		;funcret
  7139  002070                     __end_of___lwdiv:
  7140                           	opt callstack 0
  7141                           
  7142 ;; *************** function ___fttol *****************
  7143 ;; Defined at:
  7144 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  f1              3   33[COMRAM] float 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  lval            4   43[COMRAM] unsigned long 
  7149 ;;  exp1            1   47[COMRAM] unsigned char 
  7150 ;;  sign1           1   42[COMRAM] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  4   33[COMRAM] long 
  7153 ;; Registers used:
  7154 ;;		wreg, status,2, status,0
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7160 ;;      Params:         4       0       0       0       0       0       0       0       0
  7161 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7162 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7163 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7164 ;;Total ram usage:       15 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    5
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_pulsonic_getTotalSum_mlh
  7171 ;;		_disp7s_write_f
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text58
  7176  0016B4                     __ptext58:
  7177                           	opt callstack 0
  7178  0016B4                     ___fttol:
  7179                           	opt callstack 21
  7180                           
  7181                           ;incstack = 0
  7182  0016B4  C024  F026         	movff	___fttol@f1+2,??___fttol
  7183  0016B8  6A27               	clrf	(??___fttol+1)& (0+255),c
  7184  0016BA  6A28               	clrf	(??___fttol+2)& (0+255),c
  7185  0016BC  3423               	rlcf	___fttol@f1+1,w,c
  7186  0016BE  3626               	rlcf	??___fttol& (0+255),f,c
  7187  0016C0  E301               	bnc	u4921
  7188  0016C2  8027               	bsf	(??___fttol+1)& (0+255),0,c
  7189  0016C4                     u4921:
  7190  0016C4  5026               	movf	??___fttol,w,c
  7191  0016C6  6E30               	movwf	___fttol@exp1,c
  7192  0016C8  5030               	movf	___fttol@exp1,w,c
  7193  0016CA  A4D8               	btfss	status,2,c
  7194  0016CC  D009               	goto	l4384
  7195  0016CE                     u4930:
  7196  0016CE  0E00               	movlw	0
  7197  0016D0  6E22               	movwf	?___fttol,c
  7198  0016D2  0E00               	movlw	0
  7199  0016D4  6E23               	movwf	?___fttol+1,c
  7200  0016D6  0E00               	movlw	0
  7201  0016D8  6E24               	movwf	?___fttol+2,c
  7202  0016DA  0E00               	movlw	0
  7203  0016DC  6E25               	movwf	?___fttol+3,c
  7204  0016DE  0012               	return	
  7205  0016E0                     l4384:
  7206  0016E0  0E17               	movlw	23
  7207  0016E2  6E26               	movwf	??___fttol& (0+255),c
  7208  0016E4  C022  F027         	movff	___fttol@f1,??___fttol+1
  7209  0016E8  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  7210  0016EC  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  7211  0016F0  2826               	incf	??___fttol,w,c
  7212  0016F2  6E2A               	movwf	(??___fttol+4)& (0+255),c
  7213  0016F4  D004               	goto	u4940
  7214  0016F6                     u4945:
  7215  0016F6  90D8               	bcf	status,0,c
  7216  0016F8  3229               	rrcf	??___fttol+3,f,c
  7217  0016FA  3228               	rrcf	??___fttol+2,f,c
  7218  0016FC  3227               	rrcf	??___fttol+1,f,c
  7219  0016FE                     u4940:
  7220  0016FE  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  7221  001700  D7FA               	goto	u4945
  7222  001702  5027               	movf	??___fttol+1,w,c
  7223  001704  6E2B               	movwf	___fttol@sign1,c
  7224  001706  8E23               	bsf	___fttol@f1+1,7,c
  7225  001708  0EFF               	movlw	255
  7226  00170A  1622               	andwf	___fttol@f1,f,c
  7227  00170C  0EFF               	movlw	255
  7228  00170E  1623               	andwf	___fttol@f1+1,f,c
  7229  001710  0E00               	movlw	0
  7230  001712  1624               	andwf	___fttol@f1+2,f,c
  7231  001714  5022               	movf	___fttol@f1,w,c
  7232  001716  6E2C               	movwf	___fttol@lval,c
  7233  001718  5023               	movf	___fttol@f1+1,w,c
  7234  00171A  6E2D               	movwf	___fttol@lval+1,c
  7235  00171C  5024               	movf	___fttol@f1+2,w,c
  7236  00171E  6E2E               	movwf	___fttol@lval+2,c
  7237  001720  6A2F               	clrf	___fttol@lval+3,c
  7238  001722  0E8E               	movlw	142
  7239  001724  5E30               	subwf	___fttol@exp1,f,c
  7240  001726  AE30               	btfss	___fttol@exp1,7,c
  7241  001728  D00D               	goto	l4406
  7242  00172A  5030               	movf	___fttol@exp1,w,c
  7243  00172C  0A80               	xorlw	128
  7244  00172E  0F8F               	addlw	143
  7245  001730  A0D8               	btfss	status,0,c
  7246  001732  D7CD               	goto	u4930
  7247  001734                     l4402:
  7248  001734  90D8               	bcf	status,0,c
  7249  001736  322F               	rrcf	___fttol@lval+3,f,c
  7250  001738  322E               	rrcf	___fttol@lval+2,f,c
  7251  00173A  322D               	rrcf	___fttol@lval+1,f,c
  7252  00173C  322C               	rrcf	___fttol@lval,f,c
  7253  00173E  3E30               	incfsz	___fttol@exp1,f,c
  7254  001740  D7F9               	goto	l4402
  7255  001742  D00D               	goto	u4980
  7256  001744                     l4406:
  7257  001744  0E17               	movlw	23
  7258  001746  6430               	cpfsgt	___fttol@exp1,c
  7259  001748  D007               	goto	l4414
  7260  00174A  D7C1               	goto	u4930
  7261  00174C                     l4412:
  7262  00174C  90D8               	bcf	status,0,c
  7263  00174E  362C               	rlcf	___fttol@lval,f,c
  7264  001750  362D               	rlcf	___fttol@lval+1,f,c
  7265  001752  362E               	rlcf	___fttol@lval+2,f,c
  7266  001754  362F               	rlcf	___fttol@lval+3,f,c
  7267  001756  0630               	decf	___fttol@exp1,f,c
  7268  001758                     l4414:
  7269  001758  5030               	movf	___fttol@exp1,w,c
  7270  00175A  A4D8               	btfss	status,2,c
  7271  00175C  D7F7               	goto	l4412
  7272  00175E                     u4980:
  7273  00175E  502B               	movf	___fttol@sign1,w,c
  7274  001760  B4D8               	btfsc	status,2,c
  7275  001762  D008               	goto	l4420
  7276  001764  1E2F               	comf	___fttol@lval+3,f,c
  7277  001766  1E2E               	comf	___fttol@lval+2,f,c
  7278  001768  1E2D               	comf	___fttol@lval+1,f,c
  7279  00176A  6C2C               	negf	___fttol@lval,c
  7280  00176C  0E00               	movlw	0
  7281  00176E  222D               	addwfc	___fttol@lval+1,f,c
  7282  001770  222E               	addwfc	___fttol@lval+2,f,c
  7283  001772  222F               	addwfc	___fttol@lval+3,f,c
  7284  001774                     l4420:
  7285  001774  C02C  F022         	movff	___fttol@lval,?___fttol
  7286  001778  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  7287  00177C  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  7288  001780  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  7289  001784  0012               	return		;funcret
  7290  001786                     __end_of___fttol:
  7291                           	opt callstack 0
  7292                           
  7293 ;; *************** function ___ftmul *****************
  7294 ;; Defined at:
  7295 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  f1              3   18[COMRAM] float 
  7298 ;;  f2              3   21[COMRAM] float 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  7301 ;;  sign            1   32[COMRAM] unsigned char 
  7302 ;;  cntr            1   31[COMRAM] unsigned char 
  7303 ;;  exp             1   27[COMRAM] unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  3   18[COMRAM] float 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7313 ;;      Params:         6       0       0       0       0       0       0       0       0
  7314 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7315 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7316 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7317 ;;Total ram usage:       15 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    6
  7320 ;; This function calls:
  7321 ;;		___ftpack
  7322 ;; This function is called by:
  7323 ;;		_disp7s_write_f
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text59
  7328  0015C0                     __ptext59:
  7329                           	opt callstack 0
  7330  0015C0                     ___ftmul:
  7331                           	opt callstack 20
  7332                           
  7333                           ;incstack = 0
  7334  0015C0  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  7335  0015C4  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  7336  0015C6  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  7337  0015C8  3414               	rlcf	___ftmul@f1+1,w,c
  7338  0015CA  3619               	rlcf	??___ftmul& (0+255),f,c
  7339  0015CC  E301               	bnc	u4831
  7340  0015CE  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  7341  0015D0                     u4831:
  7342  0015D0  5019               	movf	??___ftmul,w,c
  7343  0015D2  6E1C               	movwf	___ftmul@exp,c
  7344  0015D4  501C               	movf	___ftmul@exp,w,c
  7345  0015D6  A4D8               	btfss	status,2,c
  7346  0015D8  D007               	goto	l4318
  7347  0015DA  0E00               	movlw	0
  7348  0015DC  6E13               	movwf	?___ftmul,c
  7349  0015DE  0E00               	movlw	0
  7350  0015E0  6E14               	movwf	?___ftmul+1,c
  7351  0015E2  0E00               	movlw	0
  7352  0015E4  6E15               	movwf	?___ftmul+2,c
  7353  0015E6  0012               	return	
  7354  0015E8                     l4318:
  7355  0015E8  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  7356  0015EC  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  7357  0015EE  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  7358  0015F0  3417               	rlcf	___ftmul@f2+1,w,c
  7359  0015F2  3619               	rlcf	??___ftmul& (0+255),f,c
  7360  0015F4  E301               	bnc	u4851
  7361  0015F6  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  7362  0015F8                     u4851:
  7363  0015F8  5019               	movf	??___ftmul,w,c
  7364  0015FA  6E21               	movwf	___ftmul@sign,c
  7365  0015FC  5021               	movf	___ftmul@sign,w,c
  7366  0015FE  A4D8               	btfss	status,2,c
  7367  001600  D007               	goto	l4324
  7368  001602  0E00               	movlw	0
  7369  001604  6E13               	movwf	?___ftmul,c
  7370  001606  0E00               	movlw	0
  7371  001608  6E14               	movwf	?___ftmul+1,c
  7372  00160A  0E00               	movlw	0
  7373  00160C  6E15               	movwf	?___ftmul+2,c
  7374  00160E  0012               	return	
  7375  001610                     l4324:
  7376  001610  5021               	movf	___ftmul@sign,w,c
  7377  001612  0F7B               	addlw	123
  7378  001614  261C               	addwf	___ftmul@exp,f,c
  7379  001616  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  7380  00161A  5018               	movf	___ftmul@f2+2,w,c
  7381  00161C  1A21               	xorwf	___ftmul@sign,f,c
  7382  00161E  0E80               	movlw	128
  7383  001620  1621               	andwf	___ftmul@sign,f,c
  7384  001622  8E14               	bsf	___ftmul@f1+1,7,c
  7385  001624  8E17               	bsf	___ftmul@f2+1,7,c
  7386  001626  0EFF               	movlw	255
  7387  001628  1616               	andwf	___ftmul@f2,f,c
  7388  00162A  0EFF               	movlw	255
  7389  00162C  1617               	andwf	___ftmul@f2+1,f,c
  7390  00162E  0E00               	movlw	0
  7391  001630  1618               	andwf	___ftmul@f2+2,f,c
  7392  001632  0E00               	movlw	0
  7393  001634  6E1D               	movwf	___ftmul@f3_as_product,c
  7394  001636  0E00               	movlw	0
  7395  001638  6E1E               	movwf	___ftmul@f3_as_product+1,c
  7396  00163A  0E00               	movlw	0
  7397  00163C  6E1F               	movwf	___ftmul@f3_as_product+2,c
  7398  00163E  0E07               	movlw	7
  7399  001640  6E20               	movwf	___ftmul@cntr,c
  7400  001642                     l4338:
  7401  001642  A013               	btfss	___ftmul@f1,0,c
  7402  001644  D006               	goto	l4342
  7403  001646  5016               	movf	___ftmul@f2,w,c
  7404  001648  261D               	addwf	___ftmul@f3_as_product,f,c
  7405  00164A  5017               	movf	___ftmul@f2+1,w,c
  7406  00164C  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  7407  00164E  5018               	movf	___ftmul@f2+2,w,c
  7408  001650  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  7409  001652                     l4342:
  7410  001652  90D8               	bcf	status,0,c
  7411  001654  3215               	rrcf	___ftmul@f1+2,f,c
  7412  001656  3214               	rrcf	___ftmul@f1+1,f,c
  7413  001658  3213               	rrcf	___ftmul@f1,f,c
  7414  00165A  90D8               	bcf	status,0,c
  7415  00165C  3616               	rlcf	___ftmul@f2,f,c
  7416  00165E  3617               	rlcf	___ftmul@f2+1,f,c
  7417  001660  3618               	rlcf	___ftmul@f2+2,f,c
  7418  001662  2E20               	decfsz	___ftmul@cntr,f,c
  7419  001664  D7EE               	goto	l4338
  7420  001666  0E09               	movlw	9
  7421  001668  6E20               	movwf	___ftmul@cntr,c
  7422  00166A                     l4348:
  7423  00166A  A013               	btfss	___ftmul@f1,0,c
  7424  00166C  D006               	goto	l4352
  7425  00166E  5016               	movf	___ftmul@f2,w,c
  7426  001670  261D               	addwf	___ftmul@f3_as_product,f,c
  7427  001672  5017               	movf	___ftmul@f2+1,w,c
  7428  001674  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  7429  001676  5018               	movf	___ftmul@f2+2,w,c
  7430  001678  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  7431  00167A                     l4352:
  7432  00167A  90D8               	bcf	status,0,c
  7433  00167C  3215               	rrcf	___ftmul@f1+2,f,c
  7434  00167E  3214               	rrcf	___ftmul@f1+1,f,c
  7435  001680  3213               	rrcf	___ftmul@f1,f,c
  7436  001682  90D8               	bcf	status,0,c
  7437  001684  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  7438  001686  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  7439  001688  321D               	rrcf	___ftmul@f3_as_product,f,c
  7440  00168A  2E20               	decfsz	___ftmul@cntr,f,c
  7441  00168C  D7EE               	goto	l4348
  7442  00168E  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  7443  001692  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7444  001696  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7445  00169A  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  7446  00169E  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  7447  0016A2  EC1E  F00C         	call	___ftpack	;wreg free
  7448  0016A6  C00B  F013         	movff	?___ftpack,?___ftmul
  7449  0016AA  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  7450  0016AE  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  7451  0016B2  0012               	return		;funcret
  7452  0016B4                     __end_of___ftmul:
  7453                           	opt callstack 0
  7454                           
  7455 ;; *************** function ___ftge *****************
  7456 ;; Defined at:
  7457 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  ff1             3   21[COMRAM] float 
  7460 ;;  ff2             3   24[COMRAM] float 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;		None
  7463 ;; Return value:  Size  Location     Type
  7464 ;;		None               void
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7472 ;;      Params:         6       0       0       0       0       0       0       0       0
  7473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7474 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7475 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7476 ;;Total ram usage:        9 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    5
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_ikey_parsing
  7483 ;;		_disp7s_write_f
  7484 ;;		_nozzle_isEnabled
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text60
  7489  001DCC                     __ptext60:
  7490                           	opt callstack 0
  7491  001DCC                     ___ftge:
  7492                           	opt callstack 21
  7493                           
  7494                           ;incstack = 0
  7495  001DCC  AE18               	btfss	___ftge@ff1+2,7,c
  7496  001DCE  D00F               	goto	l4364
  7497  001DD0  0E00               	movlw	0
  7498  001DD2  6E1C               	movwf	??___ftge& (0+255),c
  7499  001DD4  0E00               	movlw	0
  7500  001DD6  6E1D               	movwf	(??___ftge+1)& (0+255),c
  7501  001DD8  0E80               	movlw	128
  7502  001DDA  6E1E               	movwf	(??___ftge+2)& (0+255),c
  7503  001DDC  5016               	movf	___ftge@ff1,w,c
  7504  001DDE  5C1C               	subwf	??___ftge,w,c
  7505  001DE0  6E16               	movwf	___ftge@ff1,c
  7506  001DE2  5017               	movf	___ftge@ff1+1,w,c
  7507  001DE4  581D               	subwfb	??___ftge+1,w,c
  7508  001DE6  6E17               	movwf	___ftge@ff1+1,c
  7509  001DE8  5018               	movf	___ftge@ff1+2,w,c
  7510  001DEA  581E               	subwfb	??___ftge+2,w,c
  7511  001DEC  6E18               	movwf	___ftge@ff1+2,c
  7512  001DEE                     l4364:
  7513  001DEE  AE1B               	btfss	___ftge@ff2+2,7,c
  7514  001DF0  D00F               	goto	l4368
  7515  001DF2  0E00               	movlw	0
  7516  001DF4  6E1C               	movwf	??___ftge& (0+255),c
  7517  001DF6  0E00               	movlw	0
  7518  001DF8  6E1D               	movwf	(??___ftge+1)& (0+255),c
  7519  001DFA  0E80               	movlw	128
  7520  001DFC  6E1E               	movwf	(??___ftge+2)& (0+255),c
  7521  001DFE  5019               	movf	___ftge@ff2,w,c
  7522  001E00  5C1C               	subwf	??___ftge,w,c
  7523  001E02  6E19               	movwf	___ftge@ff2,c
  7524  001E04  501A               	movf	___ftge@ff2+1,w,c
  7525  001E06  581D               	subwfb	??___ftge+1,w,c
  7526  001E08  6E1A               	movwf	___ftge@ff2+1,c
  7527  001E0A  501B               	movf	___ftge@ff2+2,w,c
  7528  001E0C  581E               	subwfb	??___ftge+2,w,c
  7529  001E0E  6E1B               	movwf	___ftge@ff2+2,c
  7530  001E10                     l4368:
  7531  001E10  0E00               	movlw	0
  7532  001E12  1A16               	xorwf	___ftge@ff1,f,c
  7533  001E14  0E00               	movlw	0
  7534  001E16  1A17               	xorwf	___ftge@ff1+1,f,c
  7535  001E18  0E80               	movlw	128
  7536  001E1A  1A18               	xorwf	___ftge@ff1+2,f,c
  7537  001E1C  0E00               	movlw	0
  7538  001E1E  1A19               	xorwf	___ftge@ff2,f,c
  7539  001E20  0E00               	movlw	0
  7540  001E22  1A1A               	xorwf	___ftge@ff2+1,f,c
  7541  001E24  0E80               	movlw	128
  7542  001E26  1A1B               	xorwf	___ftge@ff2+2,f,c
  7543  001E28  5019               	movf	___ftge@ff2,w,c
  7544  001E2A  5C16               	subwf	___ftge@ff1,w,c
  7545  001E2C  501A               	movf	___ftge@ff2+1,w,c
  7546  001E2E  5817               	subwfb	___ftge@ff1+1,w,c
  7547  001E30  501B               	movf	___ftge@ff2+2,w,c
  7548  001E32  5818               	subwfb	___ftge@ff1+2,w,c
  7549  001E34  B0D8               	btfsc	status,0,c
  7550  001E36  D002               	goto	l4374
  7551  001E38  90D8               	bcf	status,0,c
  7552  001E3A  0012               	return	
  7553  001E3C                     l4374:
  7554  001E3C  80D8               	bsf	status,0,c
  7555  001E3E  0012               	return		;funcret
  7556  001E40                     __end_of___ftge:
  7557                           	opt callstack 0
  7558                           
  7559 ;; *************** function ___ftadd *****************
  7560 ;; Defined at:
  7561 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  f1              3   21[COMRAM] float 
  7564 ;;  f2              3   24[COMRAM] float 
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  exp1            1   32[COMRAM] unsigned char 
  7567 ;;  exp2            1   31[COMRAM] unsigned char 
  7568 ;;  sign            1   30[COMRAM] unsigned char 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  3   21[COMRAM] float 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0, cstack
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7578 ;;      Params:         6       0       0       0       0       0       0       0       0
  7579 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7580 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7581 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7582 ;;Total ram usage:       12 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    6
  7585 ;; This function calls:
  7586 ;;		___ftpack
  7587 ;; This function is called by:
  7588 ;;		_pulsonic_getTotalSum_mlh
  7589 ;;		_disp7s_write_f
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text61
  7594  00105E                     __ptext61:
  7595                           	opt callstack 0
  7596  00105E                     ___ftadd:
  7597                           	opt callstack 20
  7598                           
  7599                           ;incstack = 0
  7600  00105E  C018  F01C         	movff	___ftadd@f1+2,??___ftadd
  7601  001062  6A1D               	clrf	(??___ftadd+1)& (0+255),c
  7602  001064  6A1E               	clrf	(??___ftadd+2)& (0+255),c
  7603  001066  3417               	rlcf	___ftadd@f1+1,w,c
  7604  001068  361C               	rlcf	??___ftadd& (0+255),f,c
  7605  00106A  E301               	bnc	u4621
  7606  00106C  801D               	bsf	(??___ftadd+1)& (0+255),0,c
  7607  00106E                     u4621:
  7608  00106E  501C               	movf	??___ftadd,w,c
  7609  001070  6E21               	movwf	___ftadd@exp1,c
  7610  001072  C01B  F01C         	movff	___ftadd@f2+2,??___ftadd
  7611  001076  6A1D               	clrf	(??___ftadd+1)& (0+255),c
  7612  001078  6A1E               	clrf	(??___ftadd+2)& (0+255),c
  7613  00107A  341A               	rlcf	___ftadd@f2+1,w,c
  7614  00107C  361C               	rlcf	??___ftadd& (0+255),f,c
  7615  00107E  E301               	bnc	u4631
  7616  001080  801D               	bsf	(??___ftadd+1)& (0+255),0,c
  7617  001082                     u4631:
  7618  001082  501C               	movf	??___ftadd,w,c
  7619  001084  6E20               	movwf	___ftadd@exp2,c
  7620  001086  5021               	movf	___ftadd@exp1,w,c
  7621  001088  B4D8               	btfsc	status,2,c
  7622  00108A  D00A               	goto	u4660
  7623  00108C  5020               	movf	___ftadd@exp2,w,c
  7624  00108E  5C21               	subwf	___ftadd@exp1,w,c
  7625  001090  B0D8               	btfsc	status,0,c
  7626  001092  D00D               	goto	l4250
  7627  001094  5021               	movf	___ftadd@exp1,w,c
  7628  001096  5C20               	subwf	___ftadd@exp2,w,c
  7629  001098  6E1C               	movwf	??___ftadd& (0+255),c
  7630  00109A  0E18               	movlw	24
  7631  00109C  641C               	cpfsgt	??___ftadd,c
  7632  00109E  D007               	goto	l4250
  7633  0010A0                     u4660:
  7634  0010A0  C019  F016         	movff	___ftadd@f2,?___ftadd
  7635  0010A4  C01A  F017         	movff	___ftadd@f2+1,?___ftadd+1
  7636  0010A8  C01B  F018         	movff	___ftadd@f2+2,?___ftadd+2
  7637  0010AC  0012               	return	
  7638  0010AE                     l4250:
  7639  0010AE  5020               	movf	___ftadd@exp2,w,c
  7640  0010B0  B4D8               	btfsc	status,2,c
  7641  0010B2  D00A               	goto	u4690
  7642  0010B4  5021               	movf	___ftadd@exp1,w,c
  7643  0010B6  5C20               	subwf	___ftadd@exp2,w,c
  7644  0010B8  B0D8               	btfsc	status,0,c
  7645  0010BA  D00D               	goto	l4256
  7646  0010BC  5020               	movf	___ftadd@exp2,w,c
  7647  0010BE  5C21               	subwf	___ftadd@exp1,w,c
  7648  0010C0  6E1C               	movwf	??___ftadd& (0+255),c
  7649  0010C2  0E18               	movlw	24
  7650  0010C4  641C               	cpfsgt	??___ftadd,c
  7651  0010C6  D007               	goto	l4256
  7652  0010C8                     u4690:
  7653  0010C8  C016  F016         	movff	___ftadd@f1,?___ftadd
  7654  0010CC  C017  F017         	movff	___ftadd@f1+1,?___ftadd+1
  7655  0010D0  C018  F018         	movff	___ftadd@f1+2,?___ftadd+2
  7656  0010D4  0012               	return	
  7657  0010D6                     l4256:
  7658  0010D6  0E06               	movlw	6
  7659  0010D8  6E1F               	movwf	___ftadd@sign,c
  7660  0010DA  BE18               	btfsc	___ftadd@f1+2,7,c
  7661  0010DC  8E1F               	bsf	___ftadd@sign,7,c
  7662  0010DE  BE1B               	btfsc	___ftadd@f2+2,7,c
  7663  0010E0  8C1F               	bsf	___ftadd@sign,6,c
  7664  0010E2  8E17               	bsf	___ftadd@f1+1,7,c
  7665  0010E4  0EFF               	movlw	255
  7666  0010E6  1616               	andwf	___ftadd@f1,f,c
  7667  0010E8  0EFF               	movlw	255
  7668  0010EA  1617               	andwf	___ftadd@f1+1,f,c
  7669  0010EC  0E00               	movlw	0
  7670  0010EE  1618               	andwf	___ftadd@f1+2,f,c
  7671  0010F0  8E1A               	bsf	___ftadd@f2+1,7,c
  7672  0010F2  0EFF               	movlw	255
  7673  0010F4  1619               	andwf	___ftadd@f2,f,c
  7674  0010F6  0EFF               	movlw	255
  7675  0010F8  161A               	andwf	___ftadd@f2+1,f,c
  7676  0010FA  0E00               	movlw	0
  7677  0010FC  161B               	andwf	___ftadd@f2+2,f,c
  7678  0010FE  5020               	movf	___ftadd@exp2,w,c
  7679  001100  5C21               	subwf	___ftadd@exp1,w,c
  7680  001102  B0D8               	btfsc	status,0,c
  7681  001104  D01B               	goto	l4282
  7682  001106                     u4720:
  7683  001106  90D8               	bcf	status,0,c
  7684  001108  3619               	rlcf	___ftadd@f2,f,c
  7685  00110A  361A               	rlcf	___ftadd@f2+1,f,c
  7686  00110C  361B               	rlcf	___ftadd@f2+2,f,c
  7687  00110E  0620               	decf	___ftadd@exp2,f,c
  7688  001110  5021               	movf	___ftadd@exp1,w,c
  7689  001112  1820               	xorwf	___ftadd@exp2,w,c
  7690  001114  B4D8               	btfsc	status,2,c
  7691  001116  D00D               	goto	l4280
  7692  001118  061F               	decf	___ftadd@sign,f,c
  7693  00111A  C01F  F01C         	movff	___ftadd@sign,??___ftadd
  7694  00111E  0E07               	movlw	7
  7695  001120  161C               	andwf	??___ftadd,f,c
  7696  001122  B4D8               	btfsc	status,2,c
  7697  001124  D006               	goto	l4280
  7698  001126  D7EF               	goto	u4720
  7699  001128                     l4278:
  7700  001128  90D8               	bcf	status,0,c
  7701  00112A  3218               	rrcf	___ftadd@f1+2,f,c
  7702  00112C  3217               	rrcf	___ftadd@f1+1,f,c
  7703  00112E  3216               	rrcf	___ftadd@f1,f,c
  7704  001130  2A21               	incf	___ftadd@exp1,f,c
  7705  001132                     l4280:
  7706  001132  5020               	movf	___ftadd@exp2,w,c
  7707  001134  1821               	xorwf	___ftadd@exp1,w,c
  7708  001136  B4D8               	btfsc	status,2,c
  7709  001138  D01F               	goto	u4790
  7710  00113A  D7F6               	goto	l4278
  7711  00113C                     l4282:
  7712  00113C  5021               	movf	___ftadd@exp1,w,c
  7713  00113E  5C20               	subwf	___ftadd@exp2,w,c
  7714  001140  B0D8               	btfsc	status,0,c
  7715  001142  D01A               	goto	u4790
  7716  001144                     u4760:
  7717  001144  90D8               	bcf	status,0,c
  7718  001146  3616               	rlcf	___ftadd@f1,f,c
  7719  001148  3617               	rlcf	___ftadd@f1+1,f,c
  7720  00114A  3618               	rlcf	___ftadd@f1+2,f,c
  7721  00114C  0621               	decf	___ftadd@exp1,f,c
  7722  00114E  5021               	movf	___ftadd@exp1,w,c
  7723  001150  1820               	xorwf	___ftadd@exp2,w,c
  7724  001152  B4D8               	btfsc	status,2,c
  7725  001154  D00D               	goto	l4292
  7726  001156  061F               	decf	___ftadd@sign,f,c
  7727  001158  C01F  F01C         	movff	___ftadd@sign,??___ftadd
  7728  00115C  0E07               	movlw	7
  7729  00115E  161C               	andwf	??___ftadd,f,c
  7730  001160  B4D8               	btfsc	status,2,c
  7731  001162  D006               	goto	l4292
  7732  001164  D7EF               	goto	u4760
  7733  001166                     l4290:
  7734  001166  90D8               	bcf	status,0,c
  7735  001168  321B               	rrcf	___ftadd@f2+2,f,c
  7736  00116A  321A               	rrcf	___ftadd@f2+1,f,c
  7737  00116C  3219               	rrcf	___ftadd@f2,f,c
  7738  00116E  2A20               	incf	___ftadd@exp2,f,c
  7739  001170                     l4292:
  7740  001170  5020               	movf	___ftadd@exp2,w,c
  7741  001172  1821               	xorwf	___ftadd@exp1,w,c
  7742  001174  A4D8               	btfss	status,2,c
  7743  001176  D7F7               	goto	l4290
  7744  001178                     u4790:
  7745  001178  AE1F               	btfss	___ftadd@sign,7,c
  7746  00117A  D00C               	goto	l1183
  7747  00117C  0EFF               	movlw	255
  7748  00117E  1A16               	xorwf	___ftadd@f1,f,c
  7749  001180  0EFF               	movlw	255
  7750  001182  1A17               	xorwf	___ftadd@f1+1,f,c
  7751  001184  0EFF               	movlw	255
  7752  001186  1A18               	xorwf	___ftadd@f1+2,f,c
  7753  001188  0E01               	movlw	1
  7754  00118A  2616               	addwf	___ftadd@f1,f,c
  7755  00118C  0E00               	movlw	0
  7756  00118E  2217               	addwfc	___ftadd@f1+1,f,c
  7757  001190  0E00               	movlw	0
  7758  001192  2218               	addwfc	___ftadd@f1+2,f,c
  7759  001194                     l1183:
  7760  001194  AC1F               	btfss	___ftadd@sign,6,c
  7761  001196  D00C               	goto	l4298
  7762  001198  0EFF               	movlw	255
  7763  00119A  1A19               	xorwf	___ftadd@f2,f,c
  7764  00119C  0EFF               	movlw	255
  7765  00119E  1A1A               	xorwf	___ftadd@f2+1,f,c
  7766  0011A0  0EFF               	movlw	255
  7767  0011A2  1A1B               	xorwf	___ftadd@f2+2,f,c
  7768  0011A4  0E01               	movlw	1
  7769  0011A6  2619               	addwf	___ftadd@f2,f,c
  7770  0011A8  0E00               	movlw	0
  7771  0011AA  221A               	addwfc	___ftadd@f2+1,f,c
  7772  0011AC  0E00               	movlw	0
  7773  0011AE  221B               	addwfc	___ftadd@f2+2,f,c
  7774  0011B0                     l4298:
  7775  0011B0  0E00               	movlw	0
  7776  0011B2  6E1F               	movwf	___ftadd@sign,c
  7777  0011B4  5016               	movf	___ftadd@f1,w,c
  7778  0011B6  2619               	addwf	___ftadd@f2,f,c
  7779  0011B8  5017               	movf	___ftadd@f1+1,w,c
  7780  0011BA  221A               	addwfc	___ftadd@f2+1,f,c
  7781  0011BC  5018               	movf	___ftadd@f1+2,w,c
  7782  0011BE  221B               	addwfc	___ftadd@f2+2,f,c
  7783  0011C0  AE1B               	btfss	___ftadd@f2+2,7,c
  7784  0011C2  D00E               	goto	l4308
  7785  0011C4  0EFF               	movlw	255
  7786  0011C6  1A19               	xorwf	___ftadd@f2,f,c
  7787  0011C8  0EFF               	movlw	255
  7788  0011CA  1A1A               	xorwf	___ftadd@f2+1,f,c
  7789  0011CC  0EFF               	movlw	255
  7790  0011CE  1A1B               	xorwf	___ftadd@f2+2,f,c
  7791  0011D0  0E01               	movlw	1
  7792  0011D2  2619               	addwf	___ftadd@f2,f,c
  7793  0011D4  0E00               	movlw	0
  7794  0011D6  221A               	addwfc	___ftadd@f2+1,f,c
  7795  0011D8  0E00               	movlw	0
  7796  0011DA  221B               	addwfc	___ftadd@f2+2,f,c
  7797  0011DC  0E01               	movlw	1
  7798  0011DE  6E1F               	movwf	___ftadd@sign,c
  7799  0011E0                     l4308:
  7800  0011E0  C019  F00B         	movff	___ftadd@f2,___ftpack@arg
  7801  0011E4  C01A  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  7802  0011E8  C01B  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  7803  0011EC  C021  F00E         	movff	___ftadd@exp1,___ftpack@exp
  7804  0011F0  C01F  F00F         	movff	___ftadd@sign,___ftpack@sign
  7805  0011F4  EC1E  F00C         	call	___ftpack	;wreg free
  7806  0011F8  C00B  F016         	movff	?___ftpack,?___ftadd
  7807  0011FC  C00C  F017         	movff	?___ftpack+1,?___ftadd+1
  7808  001200  C00D  F018         	movff	?___ftpack+2,?___ftadd+2
  7809  001204  0012               	return		;funcret
  7810  001206                     __end_of___ftadd:
  7811                           	opt callstack 0
  7812                           
  7813 ;; *************** function ___ftpack *****************
  7814 ;; Defined at:
  7815 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  arg             3   10[COMRAM] unsigned um
  7818 ;;  exp             1   13[COMRAM] unsigned char 
  7819 ;;  sign            1   14[COMRAM] unsigned char 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  3   10[COMRAM] float 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2, status,0
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7831 ;;      Params:         5       0       0       0       0       0       0       0       0
  7832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7833 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7834 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7835 ;;Total ram usage:        8 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; Hardware stack levels required when called:    5
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		___ftadd
  7842 ;;		___ftmul
  7843 ;;		___lwtoft
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           	psect	text62
  7848  00183C                     __ptext62:
  7849                           	opt callstack 0
  7850  00183C                     ___ftpack:
  7851                           	opt callstack 20
  7852                           
  7853                           ;incstack = 0
  7854  00183C  500E               	movf	___ftpack@exp,w,c
  7855  00183E  B4D8               	btfsc	status,2,c
  7856  001840  D005               	goto	u4490
  7857  001842  500B               	movf	___ftpack@arg,w,c
  7858  001844  100C               	iorwf	___ftpack@arg+1,w,c
  7859  001846  100D               	iorwf	___ftpack@arg+2,w,c
  7860  001848  A4D8               	btfss	status,2,c
  7861  00184A  D00C               	goto	l4150
  7862  00184C                     u4490:
  7863  00184C  0E00               	movlw	0
  7864  00184E  6E0B               	movwf	?___ftpack,c
  7865  001850  0E00               	movlw	0
  7866  001852  6E0C               	movwf	?___ftpack+1,c
  7867  001854  0E00               	movlw	0
  7868  001856  6E0D               	movwf	?___ftpack+2,c
  7869  001858  0012               	return	
  7870  00185A                     l4148:
  7871  00185A  2A0E               	incf	___ftpack@exp,f,c
  7872  00185C  90D8               	bcf	status,0,c
  7873  00185E  320D               	rrcf	___ftpack@arg+2,f,c
  7874  001860  320C               	rrcf	___ftpack@arg+1,f,c
  7875  001862  320B               	rrcf	___ftpack@arg,f,c
  7876  001864                     l4150:
  7877  001864  0E00               	movlw	0
  7878  001866  140B               	andwf	___ftpack@arg,w,c
  7879  001868  6E10               	movwf	??___ftpack& (0+255),c
  7880  00186A  0E00               	movlw	0
  7881  00186C  140C               	andwf	___ftpack@arg+1,w,c
  7882  00186E  6E11               	movwf	(??___ftpack+1)& (0+255),c
  7883  001870  0EFE               	movlw	254
  7884  001872  140D               	andwf	___ftpack@arg+2,w,c
  7885  001874  6E12               	movwf	(??___ftpack+2)& (0+255),c
  7886  001876  5010               	movf	??___ftpack,w,c
  7887  001878  1011               	iorwf	??___ftpack+1,w,c
  7888  00187A  1012               	iorwf	??___ftpack+2,w,c
  7889  00187C  B4D8               	btfsc	status,2,c
  7890  00187E  D00C               	goto	l4156
  7891  001880  D7EC               	goto	l4148
  7892  001882                     l4152:
  7893  001882  2A0E               	incf	___ftpack@exp,f,c
  7894  001884  0E01               	movlw	1
  7895  001886  260B               	addwf	___ftpack@arg,f,c
  7896  001888  0E00               	movlw	0
  7897  00188A  220C               	addwfc	___ftpack@arg+1,f,c
  7898  00188C  0E00               	movlw	0
  7899  00188E  220D               	addwfc	___ftpack@arg+2,f,c
  7900  001890  90D8               	bcf	status,0,c
  7901  001892  320D               	rrcf	___ftpack@arg+2,f,c
  7902  001894  320C               	rrcf	___ftpack@arg+1,f,c
  7903  001896  320B               	rrcf	___ftpack@arg,f,c
  7904  001898                     l4156:
  7905  001898  0E00               	movlw	0
  7906  00189A  140B               	andwf	___ftpack@arg,w,c
  7907  00189C  6E10               	movwf	??___ftpack& (0+255),c
  7908  00189E  0E00               	movlw	0
  7909  0018A0  140C               	andwf	___ftpack@arg+1,w,c
  7910  0018A2  6E11               	movwf	(??___ftpack+1)& (0+255),c
  7911  0018A4  0EFF               	movlw	255
  7912  0018A6  140D               	andwf	___ftpack@arg+2,w,c
  7913  0018A8  6E12               	movwf	(??___ftpack+2)& (0+255),c
  7914  0018AA  5010               	movf	??___ftpack,w,c
  7915  0018AC  1011               	iorwf	??___ftpack+1,w,c
  7916  0018AE  1012               	iorwf	??___ftpack+2,w,c
  7917  0018B0  B4D8               	btfsc	status,2,c
  7918  0018B2  D006               	goto	l4160
  7919  0018B4  D7E6               	goto	l4152
  7920  0018B6                     l4158:
  7921  0018B6  060E               	decf	___ftpack@exp,f,c
  7922  0018B8  90D8               	bcf	status,0,c
  7923  0018BA  360B               	rlcf	___ftpack@arg,f,c
  7924  0018BC  360C               	rlcf	___ftpack@arg+1,f,c
  7925  0018BE  360D               	rlcf	___ftpack@arg+2,f,c
  7926  0018C0                     l4160:
  7927  0018C0  BE0C               	btfsc	___ftpack@arg+1,7,c
  7928  0018C2  D003               	goto	u4530
  7929  0018C4  0E02               	movlw	2
  7930  0018C6  600E               	cpfslt	___ftpack@exp,c
  7931  0018C8  D7F6               	goto	l4158
  7932  0018CA                     u4530:
  7933  0018CA  A00E               	btfss	___ftpack@exp,0,c
  7934  0018CC  9E0C               	bcf	___ftpack@arg+1,7,c
  7935  0018CE  90D8               	bcf	status,0,c
  7936  0018D0  320E               	rrcf	___ftpack@exp,f,c
  7937  0018D2  500E               	movf	___ftpack@exp,w,c
  7938  0018D4  120D               	iorwf	___ftpack@arg+2,f,c
  7939  0018D6  500F               	movf	___ftpack@sign,w,c
  7940  0018D8  A4D8               	btfss	status,2,c
  7941  0018DA  8E0D               	bsf	___ftpack@arg+2,7,c
  7942  0018DC  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  7943  0018E0  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  7944  0018E4  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  7945  0018E8  0012               	return		;funcret
  7946  0018EA                     __end_of___ftpack:
  7947                           	opt callstack 0
  7948                           
  7949 ;; *************** function _disp7s_modeDisp_off *****************
  7950 ;; Defined at:
  7951 ;;		line 156 in file "display.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 3F/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7968 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        0 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    6
  7972 ;; This function calls:
  7973 ;;		_disp7s_off
  7974 ;; This function is called by:
  7975 ;;		_autoMode_init
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           	psect	text63
  7980  0024D0                     __ptext63:
  7981                           	opt callstack 0
  7982  0024D0                     _disp7s_modeDisp_off:
  7983                           	opt callstack 23
  7984                           
  7985                           ; BSR set to: 0
  7986                           ;display.c: 158: disp7s_off(pulsonic.disp7s.mode, 2);
  7987                           
  7988                           ;incstack = 0
  7989  0024D0  0E3E               	movlw	low (_pulsonic+62)
  7990  0024D2  6E0B               	movwf	disp7s_off@pDisp,c
  7991  0024D4  0E01               	movlw	high (_pulsonic+62)
  7992  0024D6  6E0C               	movwf	disp7s_off@pDisp+1,c
  7993  0024D8  0E02               	movlw	2
  7994  0024DA  6E0D               	movwf	disp7s_off@NUM_OF_DISP,c
  7995  0024DC  EC72  F011         	call	_disp7s_off	;wreg free
  7996  0024E0  0012               	return		;funcret
  7997  0024E2                     __end_of_disp7s_modeDisp_off:
  7998                           	opt callstack 0
  7999                           
  8000 ;; *************** function _disp7s_off *****************
  8001 ;; Defined at:
  8002 ;;		line 150 in file "display.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;  pDisp           2   10[COMRAM] PTR unsigned char 
  8005 ;;		 -> pulsonic.disp7s(5), pulsonic(64), 
  8006 ;;  NUM_OF_DISP     1   12[COMRAM] char 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  i               1   15[COMRAM] char 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      void 
  8011 ;; Registers used:
  8012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8018 ;;      Params:         3       0       0       0       0       0       0       0       0
  8019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8020 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8021 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8022 ;;Total ram usage:        6 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; Hardware stack levels required when called:    5
  8025 ;; This function calls:
  8026 ;;		Nothing
  8027 ;; This function is called by:
  8028 ;;		_disp7s_modeDisp_off
  8029 ;;		_disp7s_write_f
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text64
  8034  0022E4                     __ptext64:
  8035                           	opt callstack 0
  8036  0022E4                     _disp7s_off:
  8037                           	opt callstack 21
  8038                           
  8039                           ;display.c: 152: int8_t i;;display.c: 153: for (i=0; i<NUM_OF_DISP; i++)
  8040                           
  8041                           ;incstack = 0
  8042  0022E4  0E00               	movlw	0
  8043  0022E6  6E10               	movwf	disp7s_off@i,c
  8044  0022E8  D013               	goto	l4212
  8045  0022EA                     l4208:
  8046                           
  8047                           ;display.c: 154: {pDisp[i] = DISP7S_CHARS[OFF];}
  8048  0022EA  0E0F               	movlw	low _DISP7S_CHARS
  8049  0022EC  6EF6               	movwf	tblptrl,c
  8050  0022EE                     	if	1	;There is more than 1 active tblptr byte
  8051  0022EE  0E08               	movlw	high _DISP7S_CHARS
  8052  0022F0  6EF7               	movwf	tblptrh,c
  8053  0022F2                     	endif
  8054  0022F2                     	if	0	;There are less than 3 active tblptr bytes
  8055  0022F2                     	endif
  8056  0022F2  C010  F00E         	movff	disp7s_off@i,??_disp7s_off
  8057  0022F6  6A0F               	clrf	(??_disp7s_off+1)& (0+255),c
  8058  0022F8  BE0E               	btfsc	??_disp7s_off& (0+255),7,c
  8059  0022FA  060F               	decf	(??_disp7s_off+1)& (0+255),f,c
  8060  0022FC  500E               	movf	??_disp7s_off,w,c
  8061  0022FE  240B               	addwf	disp7s_off@pDisp,w,c
  8062  002300  6ED9               	movwf	fsr2l,c
  8063  002302  500F               	movf	??_disp7s_off+1,w,c
  8064  002304  200C               	addwfc	disp7s_off@pDisp+1,w,c
  8065  002306  6EDA               	movwf	fsr2h,c
  8066  002308  0008               	tblrd		*
  8067  00230A  CFF5 FFDF          	movff	tablat,indf2
  8068  00230E  2A10               	incf	disp7s_off@i,f,c
  8069  002310                     l4212:
  8070  002310  5010               	movf	disp7s_off@i,w,c
  8071  002312  0A80               	xorlw	128
  8072  002314  6E0E               	movwf	??_disp7s_off& (0+255),c
  8073  002316  500D               	movf	disp7s_off@NUM_OF_DISP,w,c
  8074  002318  0A80               	xorlw	128
  8075  00231A  5C0E               	subwf	??_disp7s_off& (0+255),w,c
  8076  00231C  B0D8               	btfsc	status,0,c
  8077  00231E  0012               	return	
  8078  002320  D7E4               	goto	l4208
  8079  002322                     __end_of_disp7s_off:
  8080                           	opt callstack 0
  8081                           
  8082 ;; *************** function _INTERRUPCION *****************
  8083 ;; Defined at:
  8084 ;;		line 229 in file "main.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;		None
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  1    wreg      void 
  8091 ;; Registers used:
  8092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8098 ;;      Params:         0       0       0       0       0       0       0       0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8100 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8101 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8102 ;;Total ram usage:        6 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    4
  8105 ;; This function calls:
  8106 ;;		_mpap_job
  8107 ;; This function is called by:
  8108 ;;		Interrupt level 2
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           	psect	intcode
  8113  000008                     __pintcode:
  8114                           	opt callstack 0
  8115  000008                     _INTERRUPCION:
  8116                           	opt callstack 19
  8117                           
  8118                           ;incstack = 0
  8119  000008  8255               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8120  00000A  ED5E  F010         	call	int_func,f	;refresh shadow registers
  8121                           
  8122                           	psect	intcode_body
  8123  0020BC                     __pintcode_body:
  8124                           	opt callstack 19
  8125  0020BC                     int_func:
  8126                           	opt callstack 19
  8127  0020BC  0006               	pop		; remove dummy address from shadow register refresh
  8128  0020BE  CFFA F005          	movff	pclath,??_INTERRUPCION
  8129  0020C2  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  8130  0020C6  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  8131  0020CA  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  8132  0020CE  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  8133  0020D2  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  8134                           
  8135                           ;main.c: 231: if (TMR0IF)
  8136  0020D6  A4F2               	btfss	4082,2,c	;volatile
  8137  0020D8  D008               	goto	i2l138
  8138                           
  8139                           ;main.c: 232: {;main.c: 233: isr_flag.f1ms = 1;
  8140  0020DA  0100               	movlb	0	; () banked
  8141  0020DC  81CA               	bsf	_isr_flag& (0+255),0,b	;volatile
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;main.c: 234: mpap_job();
  8145  0020DE  ECA7  F010         	call	_mpap_job	;wreg free
  8146                           
  8147                           ;main.c: 236: TMR0IF = 0;
  8148  0020E2  94F2               	bcf	4082,2,c	;volatile
  8149                           
  8150                           ;main.c: 237: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  8151  0020E4  68D7               	setf	4055,c	;volatile
  8152                           
  8153                           ;main.c: 238: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  8154  0020E6  0ED1               	movlw	209
  8155  0020E8  6ED6               	movwf	4054,c	;volatile
  8156  0020EA                     i2l138:
  8157  0020EA  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  8158  0020EE  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  8159  0020F2  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  8160  0020F6  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  8161  0020FA  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  8162  0020FE  C005  FFFA         	movff	??_INTERRUPCION,pclath
  8163  002102  9255               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8164  002104  0011               	retfie		f
  8165  002106                     __end_of_INTERRUPCION:
  8166                           	opt callstack 0
  8167                           
  8168 ;; *************** function _mpap_job *****************
  8169 ;; Defined at:
  8170 ;;		line 140 in file "mpap.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;		None
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  cod_ret         1    0        char 
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  1    wreg      char 
  8177 ;; Registers used:
  8178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8179 ;; Tracked objects:
  8180 ;;		On entry : 3F/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8184 ;;      Params:         0       0       0       0       0       0       0       0       0
  8185 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8187 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8188 ;;Total ram usage:        1 bytes
  8189 ;; Hardware stack levels used:    1
  8190 ;; Hardware stack levels required when called:    3
  8191 ;; This function calls:
  8192 ;;		__mpap_off
  8193 ;;		_mpap_homming
  8194 ;;		_mpap_normal_mode
  8195 ;; This function is called by:
  8196 ;;		_INTERRUPCION
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text66
  8201  00214E                     __ptext66:
  8202                           	opt callstack 0
  8203  00214E                     _mpap_job:
  8204                           	opt callstack 19
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;mpap.c: 142: int8_t cod_ret;;mpap.c: 144: if (mpap.mode == MPAP_HOMMING_MODE)
  8208                           
  8209                           ;incstack = 0
  8210  00214E  0E02               	movlw	2
  8211  002150  184F               	xorwf	_mpap+7,w,c	;volatile
  8212  002152  A4D8               	btfss	status,2,c
  8213  002154  D003               	goto	i2l3968
  8214                           
  8215                           ; BSR set to: 0
  8216  002156  ECE3  F00F         	call	_mpap_homming	;wreg free
  8217  00215A  0012               	return	
  8218  00215C                     i2l3968:
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;mpap.c: 147: else if (mpap.mode == MPAP_NORMAL_MODE)
  8222  00215C  0E03               	movlw	3
  8223  00215E  184F               	xorwf	_mpap+7,w,c	;volatile
  8224  002160  A4D8               	btfss	status,2,c
  8225  002162  D003               	goto	i2l3972
  8226                           
  8227                           ; BSR set to: 0
  8228  002164  ECCB  F010         	call	_mpap_normal_mode	;wreg free
  8229  002168  0012               	return	
  8230  00216A                     i2l3972:
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;mpap.c: 150: else if (mpap.mode == MPAP_STALL_MODE)
  8234  00216A  044F               	decf	_mpap+7,w,c	;volatile
  8235  00216C  A4D8               	btfss	status,2,c
  8236  00216E  0012               	return	
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;mpap.c: 151: {;mpap.c: 152: mpap.numSteps_tomove = 0x00;
  8240  002170  0E00               	movlw	0
  8241  002172  6E4D               	movwf	_mpap+5,c	;volatile
  8242  002174  0E00               	movlw	0
  8243  002176  6E4C               	movwf	_mpap+4,c	;volatile
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;mpap.c: 153: mpap_off();
  8247  002178  D801               	call	i2u428_48
  8248  00217A  D00A               	goto	i2u428_49
  8249  00217C                     i2u428_48:
  8250  00217C  0005               	push	
  8251  00217E  6EFA               	movwf	pclath,c
  8252  002180  51E7               	movf	_mpap_off& (0+255),w,b
  8253  002182  6EFD               	movwf	tosl,c
  8254  002184  51E8               	movf	(_mpap_off+1)& (0+255),w,b
  8255  002186  6EFE               	movwf	tosh,c
  8256  002188  50F8               	movf	tblptru,w,c
  8257  00218A  6EFF               	movwf	tosu,c
  8258  00218C  50FA               	movf	pclath,w,c
  8259  00218E  0012               	return		;indir
  8260  002190                     i2u428_49:
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;mpap.c: 155: mpap.mode = MPAP_IDLE_MODE;
  8264  002190  0E00               	movlw	0
  8265  002192  6E4F               	movwf	_mpap+7,c	;volatile
  8266  002194  0012               	return	
  8267  002196                     __end_of_mpap_job:
  8268                           	opt callstack 0
  8269                           
  8270 ;; *************** function _mpap_normal_mode *****************
  8271 ;; Defined at:
  8272 ;;		line 120 in file "mpap.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;		None
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  cod_ret         1    1[COMRAM] char 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      char 
  8279 ;; Registers used:
  8280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8281 ;; Tracked objects:
  8282 ;;		On entry : 3F/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8286 ;;      Params:         0       0       0       0       0       0       0       0       0
  8287 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8289 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8290 ;;Total ram usage:        1 bytes
  8291 ;; Hardware stack levels used:    1
  8292 ;; Hardware stack levels required when called:    2
  8293 ;; This function calls:
  8294 ;;		_mpap_do1step
  8295 ;; This function is called by:
  8296 ;;		_mpap_job
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text67
  8301  002196                     __ptext67:
  8302                           	opt callstack 0
  8303  002196                     _mpap_normal_mode:
  8304                           	opt callstack 19
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;mpap.c: 122: int8_t cod_ret = 0;
  8308                           
  8309                           ;incstack = 0
  8310  002196  0E00               	movlw	0
  8311  002198  6E02               	movwf	mpap_normal_mode@cod_ret,c
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;mpap.c: 123: if (mpap.numSteps_tomove!=0)
  8315  00219A  504C               	movf	_mpap+4,w,c	;volatile
  8316  00219C  104D               	iorwf	_mpap+5,w,c	;volatile
  8317  00219E  B4D8               	btfsc	status,2,c
  8318  0021A0  D01C               	goto	i2l455
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;mpap.c: 124: {;mpap.c: 125: mpap_do1step(mpap.KI);
  8322  0021A2  504E               	movf	_mpap+6,w,c	;volatile
  8323  0021A4  EC31  F011         	call	_mpap_do1step
  8324                           
  8325                           ;mpap.c: 127: mpap.counter_steps+= mpap.KI;
  8326  0021A8  504E               	movf	_mpap+6,w,c	;volatile
  8327  0021AA  264A               	addwf	_mpap+2,f,c	;volatile
  8328  0021AC  0E00               	movlw	0
  8329  0021AE  BE4E               	btfsc	_mpap+6,7,c	;volatile
  8330  0021B0  0EFF               	movlw	255
  8331  0021B2  224B               	addwfc	_mpap+3,f,c	;volatile
  8332                           
  8333                           ;mpap.c: 129: mpap.numSteps_current+= mpap.KI;
  8334  0021B4  504E               	movf	_mpap+6,w,c	;volatile
  8335  0021B6  2648               	addwf	_mpap,f,c	;volatile
  8336  0021B8  0E00               	movlw	0
  8337  0021BA  BE4E               	btfsc	_mpap+6,7,c	;volatile
  8338  0021BC  0EFF               	movlw	255
  8339  0021BE  2249               	addwfc	_mpap+1,f,c	;volatile
  8340                           
  8341                           ;mpap.c: 131: if ( mpap.counter_steps== mpap.numSteps_tomove)
  8342  0021C0  504C               	movf	_mpap+4,w,c	;volatile
  8343  0021C2  184A               	xorwf	_mpap+2,w,c	;volatile
  8344  0021C4  E10A               	bnz	i2l455
  8345  0021C6  504D               	movf	_mpap+5,w,c	;volatile
  8346  0021C8  184B               	xorwf	_mpap+3,w,c	;volatile
  8347  0021CA  A4D8               	btfss	status,2,c
  8348  0021CC  D006               	goto	i2l455
  8349                           
  8350                           ;mpap.c: 132: {;mpap.c: 133: mpap.numSteps_tomove = 0;
  8351  0021CE  0E00               	movlw	0
  8352  0021D0  6E4D               	movwf	_mpap+5,c	;volatile
  8353  0021D2  0E00               	movlw	0
  8354  0021D4  6E4C               	movwf	_mpap+4,c	;volatile
  8355                           
  8356                           ;mpap.c: 134: cod_ret = 1;
  8357  0021D6  0E01               	movlw	1
  8358  0021D8  6E02               	movwf	mpap_normal_mode@cod_ret,c
  8359  0021DA                     i2l455:
  8360                           
  8361                           ;mpap.c: 135: };mpap.c: 136: };mpap.c: 137: return cod_ret;
  8362  0021DA  5002               	movf	mpap_normal_mode@cod_ret,w,c
  8363  0021DC  0012               	return		;funcret
  8364  0021DE                     __end_of_mpap_normal_mode:
  8365                           	opt callstack 0
  8366                           
  8367 ;; *************** function _mpap_homming *****************
  8368 ;; Defined at:
  8369 ;;		line 96 in file "mpap.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  cod_ret         1    2[COMRAM] char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      char 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 3F/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:        2 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    2
  8390 ;; This function calls:
  8391 ;;		_mpap_do1step
  8392 ;; This function is called by:
  8393 ;;		_mpap_job
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text68
  8398  001FC6                     __ptext68:
  8399                           	opt callstack 0
  8400  001FC6                     _mpap_homming:
  8401                           	opt callstack 19
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;mpap.c: 98: int8_t cod_ret = 0;
  8405                           
  8406                           ;incstack = 0
  8407  001FC6  0E00               	movlw	0
  8408  001FC8  6E03               	movwf	mpap_homming@cod_ret,c
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;mpap.c: 99: if (mpap.numSteps_tomove!=0)
  8412  001FCA  504C               	movf	_mpap+4,w,c	;volatile
  8413  001FCC  104D               	iorwf	_mpap+5,w,c	;volatile
  8414  001FCE  B4D8               	btfsc	status,2,c
  8415  001FD0  D024               	goto	i2l449
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;mpap.c: 100: {;mpap.c: 101: mpap_do1step(mpap.KI);
  8419  001FD2  504E               	movf	_mpap+6,w,c	;volatile
  8420  001FD4  EC31  F011         	call	_mpap_do1step
  8421                           
  8422                           ;mpap.c: 103: mpap.counter_steps+= mpap.KI;
  8423  001FD8  504E               	movf	_mpap+6,w,c	;volatile
  8424  001FDA  264A               	addwf	_mpap+2,f,c	;volatile
  8425  001FDC  0E00               	movlw	0
  8426  001FDE  BE4E               	btfsc	_mpap+6,7,c	;volatile
  8427  001FE0  0EFF               	movlw	255
  8428  001FE2  224B               	addwfc	_mpap+3,f,c	;volatile
  8429                           
  8430                           ;mpap.c: 105: if (((PORTE & (1<<1))>>1) == 0)
  8431  001FE4  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  8432  001FE8  90D8               	bcf	status,0,c
  8433  001FEA  3202               	rrcf	??_mpap_homming,f,c
  8434  001FEC  B002               	btfsc	??_mpap_homming,0,c
  8435  001FEE  D006               	goto	i2l3546
  8436                           
  8437                           ;mpap.c: 106: {;mpap.c: 107: mpap.numSteps_tomove = 0x0000;
  8438  001FF0  0E00               	movlw	0
  8439  001FF2  6E4D               	movwf	_mpap+5,c	;volatile
  8440  001FF4  0E00               	movlw	0
  8441  001FF6  6E4C               	movwf	_mpap+4,c	;volatile
  8442                           
  8443                           ;mpap.c: 108: cod_ret = 1;
  8444  001FF8  0E01               	movlw	1
  8445  001FFA  6E03               	movwf	mpap_homming@cod_ret,c
  8446  001FFC                     i2l3546:
  8447                           
  8448                           ;mpap.c: 109: };mpap.c: 110: if ( mpap.counter_steps == mpap.numSteps_tomove)
  8449  001FFC  504C               	movf	_mpap+4,w,c	;volatile
  8450  001FFE  184A               	xorwf	_mpap+2,w,c	;volatile
  8451  002000  E10C               	bnz	i2l449
  8452  002002  504D               	movf	_mpap+5,w,c	;volatile
  8453  002004  184B               	xorwf	_mpap+3,w,c	;volatile
  8454  002006  A4D8               	btfss	status,2,c
  8455  002008  D008               	goto	i2l449
  8456                           
  8457                           ;mpap.c: 111: {;mpap.c: 112: mpap.numSteps_tomove = 0x0000;
  8458  00200A  0E00               	movlw	0
  8459  00200C  6E4D               	movwf	_mpap+5,c	;volatile
  8460  00200E  0E00               	movlw	0
  8461  002010  6E4C               	movwf	_mpap+4,c	;volatile
  8462                           
  8463                           ;mpap.c: 113: cod_ret = 1;
  8464  002012  0E01               	movlw	1
  8465  002014  6E03               	movwf	mpap_homming@cod_ret,c
  8466                           
  8467                           ;mpap.c: 114: pulsonic.errors.flag.mpap_home_sensor = 1;
  8468  002016  0101               	movlb	1	; () banked
  8469  002018  813A               	bsf	(_pulsonic+58)& (0+255),0,b
  8470  00201A                     i2l449:
  8471                           
  8472                           ;mpap.c: 115: };mpap.c: 116: };mpap.c: 117: return cod_ret;
  8473  00201A  5003               	movf	mpap_homming@cod_ret,w,c
  8474  00201C  0012               	return		;funcret
  8475  00201E                     __end_of_mpap_homming:
  8476                           	opt callstack 0
  8477                           
  8478 ;; *************** function _mpap_do1step *****************
  8479 ;; Defined at:
  8480 ;;		line 76 in file "mpap.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  KI              1    wreg     char 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  KI              1    0[COMRAM] char 
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 3F/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0
  8495 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8497 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8498 ;;Total ram usage:        1 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    1
  8501 ;; This function calls:
  8502 ;;		__mpap_step1
  8503 ;;		__mpap_step2
  8504 ;;		__mpap_step3
  8505 ;;		__mpap_step4
  8506 ;; This function is called by:
  8507 ;;		_mpap_homming
  8508 ;;		_mpap_normal_mode
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text69
  8513  002262                     __ptext69:
  8514                           	opt callstack 0
  8515  002262                     _mpap_do1step:
  8516                           	opt callstack 19
  8517                           
  8518                           ;incstack = 0
  8519                           ;mpap_do1step@KI stored from wreg
  8520  002262  6E01               	movwf	mpap_do1step@KI,c
  8521                           
  8522                           ;mpap.c: 78: static int8_t i = -1;;mpap.c: 80: i= i + KI;
  8523  002264  5054               	movf	mpap_do1step@i,w,c
  8524  002266  2401               	addwf	mpap_do1step@KI,w,c
  8525  002268  6E54               	movwf	mpap_do1step@i,c
  8526                           
  8527                           ;mpap.c: 82: if (i>3){i=0;}
  8528  00226A  5054               	movf	mpap_do1step@i,w,c
  8529  00226C  0A80               	xorlw	128
  8530  00226E  0F7C               	addlw	-132
  8531  002270  A0D8               	btfss	status,0,c
  8532  002272  D002               	goto	i2l3334
  8533  002274  0E00               	movlw	0
  8534  002276  6E54               	movwf	mpap_do1step@i,c
  8535  002278                     i2l3334:
  8536                           
  8537                           ;mpap.c: 83: if (i<0){i=3;}
  8538  002278  AE54               	btfss	mpap_do1step@i,7,c
  8539  00227A  D002               	goto	i2l3338
  8540  00227C  0E03               	movlw	3
  8541  00227E  6E54               	movwf	mpap_do1step@i,c
  8542  002280                     i2l3338:
  8543                           
  8544                           ;mpap.c: 85: mpap_step[i]();
  8545  002280  5054               	movf	mpap_do1step@i,w,c
  8546  002282  0D02               	mullw	2
  8547  002284  50F3               	movf	prodl,w,c
  8548  002286  0FDF               	addlw	low _mpap_step
  8549  002288  6ED9               	movwf	fsr2l,c
  8550  00228A  6ADA               	clrf	fsr2h,c
  8551  00228C  D801               	call	i2u297_48
  8552  00228E  0012               	return	
  8553  002290                     i2u297_48:
  8554  002290  0005               	push	
  8555  002292  6EFA               	movwf	pclath,c
  8556  002294  50DE               	movf	postinc2,w,c
  8557  002296  6EFD               	movwf	tosl,c
  8558  002298  50DE               	movf	postinc2,w,c
  8559  00229A  6EFE               	movwf	tosh,c
  8560  00229C  50F8               	movf	tblptru,w,c
  8561  00229E  6EFF               	movwf	tosu,c
  8562  0022A0  50FA               	movf	pclath,w,c
  8563  0022A2  0012               	return		;indir
  8564  0022A4                     __end_of_mpap_do1step:
  8565                           	opt callstack 0
  8566                           
  8567 ;; *************** function __mpap_step3 *****************
  8568 ;; Defined at:
  8569 ;;		line 21 in file "mpap.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;		None
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;		None
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      void 
  8576 ;; Registers used:
  8577 ;;		status,2, status,0
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8583 ;;      Params:         0       0       0       0       0       0       0       0       0
  8584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8586 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8587 ;;Total ram usage:        0 bytes
  8588 ;; Hardware stack levels used:    1
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_mpap_do1step
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text70
  8597  002552                     __ptext70:
  8598                           	opt callstack 0
  8599  002552                     __mpap_step3:
  8600                           	opt callstack 19
  8601                           
  8602                           ;incstack = 0
  8603                           ;mpap.c: 23: do{LATD &= ~(1<<0);}while(0);
  8604  002552  908C               	bcf	3980,0,c	;volatile
  8605                           
  8606                           ;mpap.c: 24: do{LATD |= 1<<1;}while(0);
  8607  002554  828C               	bsf	3980,1,c	;volatile
  8608                           
  8609                           ;mpap.c: 25: do{LATD &= ~(1<<2);}while(0);
  8610  002556  948C               	bcf	3980,2,c	;volatile
  8611                           
  8612                           ;mpap.c: 26: do{LATD &= ~(1<<3);}while(0);
  8613  002558  968C               	bcf	3980,3,c	;volatile
  8614  00255A  0012               	return		;funcret
  8615  00255C                     __end_of__mpap_step3:
  8616                           	opt callstack 0
  8617                           
  8618 ;; *************** function __mpap_step2 *****************
  8619 ;; Defined at:
  8620 ;;		line 13 in file "mpap.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;		None
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		status,2, status,0
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8634 ;;      Params:         0       0       0       0       0       0       0       0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8637 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8638 ;;Total ram usage:        0 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_mpap_do1step
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text71
  8648  00255C                     __ptext71:
  8649                           	opt callstack 0
  8650  00255C                     __mpap_step2:
  8651                           	opt callstack 19
  8652                           
  8653                           ;incstack = 0
  8654                           ;mpap.c: 15: do{LATD &= ~(1<<0);}while(0);
  8655  00255C  908C               	bcf	3980,0,c	;volatile
  8656                           
  8657                           ;mpap.c: 16: do{LATD &= ~(1<<1);}while(0);
  8658  00255E  928C               	bcf	3980,1,c	;volatile
  8659                           
  8660                           ;mpap.c: 17: do{LATD |= 1<<2;}while(0);
  8661  002560  848C               	bsf	3980,2,c	;volatile
  8662                           
  8663                           ;mpap.c: 18: do{LATD &= ~(1<<3);}while(0);
  8664  002562  968C               	bcf	3980,3,c	;volatile
  8665  002564  0012               	return		;funcret
  8666  002566                     __end_of__mpap_step2:
  8667                           	opt callstack 0
  8668                           
  8669 ;; *************** function __mpap_step1 *****************
  8670 ;; Defined at:
  8671 ;;		line 5 in file "mpap.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8685 ;;      Params:         0       0       0       0       0       0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8688 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8689 ;;Total ram usage:        0 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_mpap_do1step
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text72
  8699  002566                     __ptext72:
  8700                           	opt callstack 0
  8701  002566                     __mpap_step1:
  8702                           	opt callstack 19
  8703                           
  8704                           ;incstack = 0
  8705                           ;mpap.c: 7: do{LATD &= ~(1<<0);}while(0);
  8706  002566  908C               	bcf	3980,0,c	;volatile
  8707                           
  8708                           ;mpap.c: 8: do{LATD &= ~(1<<1);}while(0);
  8709  002568  928C               	bcf	3980,1,c	;volatile
  8710                           
  8711                           ;mpap.c: 9: do{LATD &= ~(1<<2);}while(0);
  8712  00256A  948C               	bcf	3980,2,c	;volatile
  8713                           
  8714                           ;mpap.c: 10: do{LATD |= 1<<3;}while(0);
  8715  00256C  868C               	bsf	3980,3,c	;volatile
  8716  00256E  0012               	return		;funcret
  8717  002570                     __end_of__mpap_step1:
  8718                           	opt callstack 0
  8719                           
  8720 ;; *************** function __mpap_step4 *****************
  8721 ;; Defined at:
  8722 ;;		line 29 in file "mpap.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;		None
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;		None
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  1    wreg      void 
  8729 ;; Registers used:
  8730 ;;		status,2, status,0
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/0
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8736 ;;      Params:         0       0       0       0       0       0       0       0       0
  8737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8739 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8740 ;;Total ram usage:        0 bytes
  8741 ;; Hardware stack levels used:    1
  8742 ;; This function calls:
  8743 ;;		Nothing
  8744 ;; This function is called by:
  8745 ;;		_mpap_do1step
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text73
  8750  002570                     __ptext73:
  8751                           	opt callstack 0
  8752  002570                     __mpap_step4:
  8753                           	opt callstack 19
  8754                           
  8755                           ;incstack = 0
  8756                           ;mpap.c: 31: do{LATD |= 1<<0;}while(0);
  8757  002570  808C               	bsf	3980,0,c	;volatile
  8758                           
  8759                           ;mpap.c: 32: do{LATD &= ~(1<<1);}while(0);
  8760  002572  928C               	bcf	3980,1,c	;volatile
  8761                           
  8762                           ;mpap.c: 33: do{LATD &= ~(1<<2);}while(0);
  8763  002574  948C               	bcf	3980,2,c	;volatile
  8764                           
  8765                           ;mpap.c: 34: do{LATD &= ~(1<<3);}while(0);
  8766  002576  968C               	bcf	3980,3,c	;volatile
  8767  002578  0012               	return		;funcret
  8768  00257A                     __end_of__mpap_step4:
  8769                           	opt callstack 0
  8770                           
  8771 ;; *************** function __mpap_off *****************
  8772 ;; Defined at:
  8773 ;;		line 43 in file "mpap.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;		None
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1    wreg      void 
  8780 ;; Registers used:
  8781 ;;		status,2, status,0
  8782 ;; Tracked objects:
  8783 ;;		On entry : 3F/0
  8784 ;;		On exit  : 3F/0
  8785 ;;		Unchanged: 3F/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8787 ;;      Params:         0       0       0       0       0       0       0       0       0
  8788 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8790 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8791 ;;Total ram usage:        0 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_mpap_job
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           	psect	text74
  8801  00257A                     __ptext74:
  8802                           	opt callstack 0
  8803  00257A                     __mpap_off:
  8804                           	opt callstack 21
  8805                           
  8806                           ; BSR set to: 0
  8807                           
  8808                           ; BSR set to: 0
  8809                           
  8810                           ;incstack = 0
  8811                           ;mpap.c: 45: do{LATD &= ~(1<<0);}while(0);
  8812  00257A  908C               	bcf	3980,0,c	;volatile
  8813                           
  8814                           ; BSR set to: 0
  8815                           
  8816                           ;mpap.c: 46: do{LATD &= ~(1<<1);}while(0);
  8817  00257C  928C               	bcf	3980,1,c	;volatile
  8818                           
  8819                           ; BSR set to: 0
  8820                           
  8821                           ;mpap.c: 47: do{LATD &= ~(1<<2);}while(0);
  8822  00257E  948C               	bcf	3980,2,c	;volatile
  8823                           
  8824                           ; BSR set to: 0
  8825                           
  8826                           ;mpap.c: 48: do{LATD &= ~(1<<3);}while(0);
  8827  002580  968C               	bcf	3980,3,c	;volatile
  8828                           
  8829                           ; BSR set to: 0
  8830  002582  0012               	return		;funcret
  8831  002584                     __end_of__mpap_off:
  8832                           	opt callstack 0
  8833                           
  8834                           	psect	text75
  8835  000000                     __ptext75:
  8836                           	opt callstack 0
  8837                           
  8838                           	psect	rparam
  8839  0000                     
  8840                           	psect	temp
  8841  000055                     btemp:
  8842                           	opt callstack 0
  8843  000055                     	ds	1
  8844  0000                     int$flags	set	btemp
  8845  0000                     wtemp8	set	btemp+1
  8846  0000                     ttemp5	set	btemp+1
  8847  0000                     ttemp6	set	btemp+4
  8848  0000                     ttemp7	set	btemp+8
  8849                           tosu	equ	0xFFF
  8850                           tosh	equ	0xFFE
  8851                           tosl	equ	0xFFD
  8852                           stkptr	equ	0xFFC
  8853                           pclatu	equ	0xFFB
  8854                           pclath	equ	0xFFA
  8855                           pcl	equ	0xFF9
  8856                           tblptru	equ	0xFF8
  8857                           tblptrh	equ	0xFF7
  8858                           tblptrl	equ	0xFF6
  8859                           tablat	equ	0xFF5
  8860                           prodh	equ	0xFF4
  8861                           prodl	equ	0xFF3
  8862                           indf0	equ	0xFEF
  8863                           postinc0	equ	0xFEE
  8864                           postdec0	equ	0xFED
  8865                           preinc0	equ	0xFEC
  8866                           plusw0	equ	0xFEB
  8867                           fsr0h	equ	0xFEA
  8868                           fsr0l	equ	0xFE9
  8869                           wreg	equ	0xFE8
  8870                           indf1	equ	0xFE7
  8871                           postinc1	equ	0xFE6
  8872                           postdec1	equ	0xFE5
  8873                           preinc1	equ	0xFE4
  8874                           plusw1	equ	0xFE3
  8875                           fsr1h	equ	0xFE2
  8876                           fsr1l	equ	0xFE1
  8877                           bsr	equ	0xFE0
  8878                           indf2	equ	0xFDF
  8879                           postinc2	equ	0xFDE
  8880                           postdec2	equ	0xFDD
  8881                           preinc2	equ	0xFDC
  8882                           plusw2	equ	0xFDB
  8883                           fsr2h	equ	0xFDA
  8884                           fsr2l	equ	0xFD9
  8885                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        31
    BSS         183
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      84
    BANK0           160     17     154
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_i@pDisp	PTR unsigned char  size(2) Largest target is 64
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[64]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_f@pDisp	PTR unsigned char  size(2) Largest target is 64
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[64]), 

    disp7s_off@pDisp	PTR unsigned char  size(2) Largest target is 64
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[64]), 

    S484_disp7s_mux$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    disp7s_mux.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    S238_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S238_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 


Critical Paths under _main in COMRAM

    _main->_visMode_job
    _visMode_job->_visMode_disp
    _visMode_disp->_disp7s_qtyDisp_writeFloat
    _disp7s_qtyDisp_writeInt->_disp7s_write_i
    _disp7s_modeDisp_writeInt->_disp7s_write_i
    _disp7s_write_i->_itoa
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    _disp7s_job->_disp7s_mux_Q
    _disp7s_init->_disp7s_mux_init
    _autoMode_kb->_ikb_key_is_ready2read
    _autoMode_kb->_ikb_key_was_read
    _autoMode_kb->_visMode_init
    _autoMode_job->_nozzle_isEnabled
    _nozzle_isEnabled->___ftge
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_movetoNozzle->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _autoMode_init->_disp7s_qtyDisp_writeFloat
    _pulsonic_getTotalSum_mlh->___fttol
    ___lwtoft->___ftpack
    _disp7s_qtyDisp_writeFloat->_disp7s_write_f
    _disp7s_write_f->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftadd
    ___fttol->___ftmul
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___ftadd->___lwtoft
    _disp7s_modeDisp_off->_disp7s_off

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _disp7s_qtyDisp_writeFloat->_disp7s_write_f

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   75128
                                             67 COMRAM     4     4      0
                      _autoMode_init
                       _autoMode_job
                        _autoMode_kb
                        _disp7s_init
                         _disp7s_job
                           _ikb_init
                            _ikb_job
                          _mpap_sych
                      _pulsonic_init
                           _pump_job
                        _visMode_job
 ---------------------------------------------------------------------------------
 (1) _visMode_job                                          1     1      0   27702
                                             66 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
                       _visMode_disp
 ---------------------------------------------------------------------------------
 (2) _visMode_disp                                         4     4      0   27600
                                             62 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
      _disp7s_modeDisp_writeText_oil
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
       _disp7s_qtyDisp_writeText_OFF
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeText_OFF                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeInt                              2     0      2    5491
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeText_oil                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeInt                             2     0      2    5491
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_i                                      24    19      5    5370
                                             31 COMRAM    24    19      5
                             ___wmul
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               3     1      2     220
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _pump_job                                             1     1      0      13
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulsonic_init                                        1     1      0      99
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8608
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     654
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key0 *
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    7954
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      93
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     285
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _disp7s_job                                           3     3      0     263
                                             18 COMRAM     3     3      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
                       _disp7s_mux_Q
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_Q                                         8     8      0     192
                                             10 COMRAM     8     8      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (1) _disp7s_init                                          1     1      0     297
                                             11 COMRAM     1     1      0
                    _disp7s_mux_init
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_init                                      1     1      0      99
                                             10 COMRAM     1     1      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autoMode_kb                                          1     1      0     133
                                             11 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
                       _visMode_init
 ---------------------------------------------------------------------------------
 (2) _visMode_init                                         1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ikb_key_was_read                                     1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ikb_key_is_ready2read                                1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _autoMode_job                                         1     1      0    5321
                                             32 COMRAM     1     1      0
                        _mpap_isIdle
                  _mpap_movetoNozzle
                _mpap_setupToHomming
                   _nozzle_isEnabled
                        _pump_isIdle
                       _pump_setTick
 ---------------------------------------------------------------------------------
 (2) _pump_setTick                                         2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _pump_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nozzle_isEnabled                                     2     0      2    3047
                                             30 COMRAM     2     0      2
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToHomming                                  0     0      0     310
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_movetoNozzle                                    1     1      0    1809
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (3) _mpap_setupToTurn                                     4     2      2     310
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mpap_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autoMode_init                                        3     3      0   32197
                                             62 COMRAM     3     3      0
                           ___lwtoft
                _disp7s_modeDisp_off
          _disp7s_qtyDisp_writeFloat
           _pulsonic_getTotalSum_mlh
 ---------------------------------------------------------------------------------
 (2) _pulsonic_getTotalSum_mlh                             6     4      2   11218
                                             48 COMRAM     6     4      2
                            ___ftadd
                            ___fttol
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1468
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3824
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeFloat                            3     0      3   16460
                                             59 COMRAM     3     0      3
                           ___lwtoft (ARG)
                     _disp7s_write_f
           _pulsonic_getTotalSum_mlh (ARG)
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_f                                      28    22      6   16249
                                             48 COMRAM    11     5      6
                                              0 BANK0     17    17      0
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                         _disp7s_off
                               _itoa
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 6     1      5    2496
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     641
                                             33 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4427
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    1458
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5118
                                             21 COMRAM    12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3253
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _disp7s_modeDisp_off                                  0     0      0     630
                         _disp7s_off
 ---------------------------------------------------------------------------------
 (5) _disp7s_off                                           6     3      3     630
                                             10 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (9) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (10) _mpap_normal_mode                                    1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (10) _mpap_homming                                        2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (11) _mpap_do1step                                        1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (12) __mpap_step4                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) __mpap_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autoMode_init
     ___lwtoft
       ___ftpack
     _disp7s_modeDisp_off
       _disp7s_off
     _disp7s_qtyDisp_writeFloat
       ___lwtoft (ARG)
         ___ftpack
       _disp7s_write_f (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftge
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         _disp7s_off
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _pulsonic_getTotalSum_mlh (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lwtoft
           ___ftpack
         ___wmul
     _pulsonic_getTotalSum_mlh
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lwtoft
         ___ftpack
       ___wmul
   _autoMode_job
     _mpap_isIdle
     _mpap_movetoNozzle
       ___wmul
       _mpap_setupToTurn
         ___wmul (ARG)
     _mpap_setupToHomming
       _mpap_setupToTurn
         ___wmul (ARG)
     _nozzle_isEnabled
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _pump_isIdle
     _pump_setTick
   _autoMode_kb
     _ikb_key_is_ready2read
     _ikb_key_was_read
     _visMode_init
   _disp7s_init
     _disp7s_mux_init
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _disp7s_job
     _disp7s_mux0_off *
     _disp7s_mux0_on *
     _disp7s_mux1_off *
     _disp7s_mux1_on *
     _disp7s_mux2_off *
     _disp7s_mux2_on *
     _disp7s_mux3_off *
     _disp7s_mux3_on *
     _disp7s_mux4_off *
     _disp7s_mux4_on *
     _disp7s_mux_Q *
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key0 *
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
   _mpap_sych
   _pulsonic_init
   _pump_job
   _visMode_job
     _ikb_key_is_ready2read
     _ikb_key_was_read
     _visMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_modeDisp_writeText_oil
       _disp7s_qtyDisp_writeFloat
         ___lwtoft (ARG)
           ___ftpack
         _disp7s_write_f (ARG)
           ___ftadd
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol
             ___ftadd (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___lwtoft
             ___ftpack
           ___wmul
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeText_OFF

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      54       1       89.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      20        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 14 00:27:17 2019

                 disp7s_write_f@K10MULT 00F6                      autoMode_kb@cod_ret 000C  
                 ??_mpap_setupToHomming 0015                             _pump_isIdle 24F2  
                   ___wmul@multiplicand 000D                             __CFG_BORV$3 000000  
                 disp7s_write_i@K10MULT 0035                            ___ftadd@exp1 0021  
                          ___ftadd@exp2 0020                            ___ftadd@sign 001F  
                                   l110 1424                                     l125 14AA  
                                   l310 0AE4                                     l302 0998  
                                   l312 0C30                                     l304 09FA  
                                   l322 0D90                                     l306 0A3E  
                                   l324 0DC6                                     l308 0AA0  
                                   l318 0D5C                                     l327 0E18  
                                   l433 236A                                     l435 236E  
                                   l295 08F4                                     l289 093E  
                                   l753 1B4A                                     l771 1D2C  
                                   l772 1D3E                                     l838 1952  
                                   l839 1964                                     _GIE 007F97  
                          __CFG_BOR$OFF 000000                                     _key 0060  
                                   prod 000FF3                                     tosl 000FFD  
                                   wreg 000FE8                  __size_of_pulsonic_init 0060  
                          _pump_setTick 2548                            ?_autoMode_kb 0001  
                          __CFG_LVP$OFF 000000                             main@kb_mode 0047  
                          __CFG_WDT$OFF 000000                                    l1332 2066  
                                  l1342 2258                                    l1183 1194  
                                  l1524 1AA4                                    l4110 203C  
                                  l4120 205C                                    l4130 2236  
                                  l5002 1B04                                    l4212 2310  
                                  l4108 2034                                    l4150 1864  
                                  l4222 233A                                    l5014 1B34  
                                  l5006 1B14                                    l4230 2404  
                                  l4208 22EA                                    l4160 18C0  
                                  l4152 1882                                    l4136 224E  
                                  l4128 222E                                    l5112 1C02  
                                  l5032 1916                                    l4250 10AE  
                                  l4402 1734                                    l5122 1C22  
                                  l5042 193C                                    l5034 191A  
                                  l5210 1458                                    l4156 1898  
                                  l4148 185A                                    l4308 11E0  
                                  l4324 1610                                    l4420 1774  
                                  l4412 174C                                    l5124 1C24  
                                  l5108 1BF6                                    l4228 2402  
                                  l4500 154C                                    l5052 1976  
                                  l5044 1940                                    l4158 18B6  
                                  l4342 1652                                    l4318 15E8  
                                  l4414 1758                                    l4406 1744  
                                  l4430 0E7E                                    l5222 147A  
                                  l4280 1132                                    l4256 10D6  
                                  l4352 167A                                    l4600 1248  
                                  l5128 1C2E                                    l4512 15B0  
                                  l5216 1468                                    l4290 1166  
                                  l4282 113C                                    l4338 1642  
                                  l4178 1A34                                    l4442 0EF4  
                                  l4610 12BA                                    l5138 1C4A  
                                  l5074 1EBC                                    l4506 156E  
                                  l5058 1988                                    l4292 1170  
                                  l4364 1DEE                                    l4348 166A  
                                  l4188 1A66                                    l4452 0F7C  
                                  l4436 0ED0                                    l4428 0E56  
                                  l4700 0C20                                    l4612 12DA  
                                  l4278 1128                                    l4374 1E3C  
                                  l4462 0FB0                                    l4630 139E  
                                  l5086 1EDA                                    l4368 1E10  
                                  l4384 16E0                                    l4472 100C  
                                  l4800 19FA                                    l4544 20B8  
                                  l5192 141C                                    l4298 11B0  
                                  l4458 0F92                                    l4466 0FDC  
                                  l4650 0884                                    l4618 131A  
                                  l4740 1B5E                                    l4724 0E38  
                                  l4708 0CE2                                    l4660 08D4  
                                  l4652 0894                                    l4492 1508  
                                  l4484 14C4                                    l4478 104E  
                                  l4814 214A                                    l4638 0816  
                                  l4486 14E0                                    l4760 251A  
                                  l4656 08B4                                    l4496 1526  
                                  l4594 120A                                    l4834 1CB4  
                                  l4772 24FE                                    l4836 1CC6  
                                  l4918 2214                                    l4782 22A8  
                                  l4870 1F6C                                    l4694 0B96  
                                  l4938 1CFC                                    l4882 1F96  
                                  l4858 17BE                                    l4956 1D50  
                                  l4948 1D1A                                    l4796 1992  
                                  l4974 1D9C                                    l4968 1D60  
                                  l4994 1AE0                                    l4986 1ACA  
                                  l4898 1F16                                    l4988 1ACE  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATC 000F8B                                    _LATD 000F8C  
                                  _LATE 000F8D                                    u5050 0FEC  
                                  u5220 12AA                                    u4430 2040  
                                  u4530 18CA                                    u5218 1290  
                                  u5219 12A4                                    u4460 223A  
                                  u4621 106E                                    u4631 1082  
                                  u4720 1106                                    u5248 12FE  
                                  u5249 1312                                    u4490 184C  
                                  u5178 122C                                    u5179 1240  
                                  u4660 10A0                                    u6270 1BF2  
                                  u4831 15D0                                    u4760 1144  
                                  u5288 1364                                    u4921 16C4  
                                  u5289 1378                                    u4690 10C8  
                                  u4930 16CE                                    u4851 15F8  
                                  u4940 16FE                                    u4790 1178  
                                  u5670 2472                                    u5718 22B8  
                                  u5734 19A8                                    u5719 22CC  
                                  u5735 19A2                                    u5680 1BD2  
                                  u5744 19C2                                    u4945 16F6  
                                  u5745 19BC                                    u4980 175E  
                                  _UCFG 000F6F                                    u5768 19E6  
                                  u5778 1A0A                                    u5779 1A1E  
        ?_disp7s_modeDisp_writeText_oil 0001                                    u5958 1D70  
                                  u5959 1D84                                    _UCON 000F6D  
                          __CFG_PWRT$ON 000000                   _ikb_key_is_ready2read 245A  
                                  _main 13A6                            ___ftpack@arg 000B  
                                  _itoa 2322                                    _mpap 0048  
                          ___ftpack@exp 000E                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    _pump 00B5  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0055  
                                  _utoa 1A2C         __end_of_disp7s_qtyDisp_writeInt 2490  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 000E                          pulsonic_init@i 000B  
                         __CFG_IESO$OFF 000000                           __CFG_MCLRE$ON 000000  
                         ?_autoMode_job 0001                            ___ftmul@cntr 0020  
                  __end_of_DISP7S_CHARS 0811                            ___param_bank 000000  
                          ___ftmul@sign 0021                           _autoMode_init 21DE  
                         visMode_disp@c 0042                            ___fttol@exp1 0030  
                          ___fttol@lval 002C                           __CFG_PLLDIV$5 000000  
                                 ?_main 0001                                   ?_itoa 001A  
                       __end_of___ftadd 1206                                   _CMCON 000FB4  
                                 ?_utoa 0012                         __end_of___ftmul 16B4  
                                 _T0CON 000FD5                         __end_of___fttol 1786  
                       __end_of___lwdiv 2070                         __end_of___lwmod 2262  
                                 i2l138 20EA                                   i2l455 21DA  
                                 i2l449 201A                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _PORTC 000F82  
                                 _PORTD 000F83                                   _PORTE 000F84  
                         __CFG_USBDIV$2 000000                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                        __CFG_FCMEN$OFF 000000                         __end_of_ikb_job 2534  
                         ?_INTERRUPCION 0001                         _disp7s_mux0_off 25BA  
                       _disp7s_mux1_off 25B2                         _disp7s_mux2_off 25AA  
                       _disp7s_mux3_off 25A2                         _disp7s_mux4_off 259A  
                         ___ftpack@sign 000F                                   pclath 000FFA  
                                 tablat 000FF5                                   plusw2 000FDB  
            __size_of_mpap_movetoNozzle 002E                                   ttemp5 0056  
                                 ttemp6 0059                                   ttemp7 005D  
                                 utoa@c 0019                         _disp7s_mux_init 22A4  
                                 utoa@v 0017                                   status 000FD8  
                                 wtemp8 0056             __size_of_ikey_is_accessible 004C  
      __end_of_disp7s_modeDisp_writeInt 24AA                           ?_ikey_parsing 0001  
                  __size_of__mpap_step1 000A                    __size_of__mpap_step2 000A  
                  __size_of__mpap_step3 000A                    __size_of__mpap_step4 000A  
                        ??_autoMode_job 0021                           _pulsonic_init 1F08  
                          ?_mpap_isIdle 0001                          ?_autoMode_init 0001  
                       __initialization 1E40                            __end_of_main 14B6  
                          __end_of_itoa 2354                            __end_of_utoa 1AC0  
                     ikb_key_was_read@k 000B      __size_of_disp7s_qtyDisp_writeFloat 001E  
                                ??_main 0044                           ___fttol@sign1 002B  
                                ??_itoa 001F                    __end_of_disp7s_mux_Q 1A2C  
                                ??_utoa 0017                           mpap_do1step@i 0054  
                         __activetblptr 000002                          ??_INTERRUPCION 0005  
                  __size_of_disp7s_init 005E                                  _ADCON1 000FC1  
              __end_of_keyRead_pin_key0 258C                __end_of_keyRead_pin_key1 2548  
              __end_of_keyRead_pin_key2 253E                __end_of_keyRead_pin_key3 259A  
              __end_of_keyRead_pin_key4 2594                  ?_ikb_key_is_ready2read 0001  
                      __end_of___ftpack 18EA                                  i2l3334 2278  
                                i2l3338 2280                                  i2l3546 1FFC  
                                i2l3972 216A                                  i2l3968 215C  
                      __end_of___lwtoft 23FC                                  _TMR0IE 007F95  
                                _TMR0IF 007F92                          ??_ikey_parsing 001F  
                        __CFG_VREGEN$ON 000000               __size_of_nozzle_isEnabled 0048  
                        ?_pulsonic_init 0001                __end_of_mpap_normal_mode 21DE  
             disp7s_write_f@NUM_OF_DISP 0033                _error_requestToWriteDisp 00C5  
              _pulsonic_getTotalSum_mlh 1B4E                        __end_of_ikb_init 183C  
                                ___ftge 1DCC                                  ___wmul 23B2  
                             ??___ftadd 001C                               ??___ftmul 0019  
                             ??___fttol 0026                               ??___lwdiv 000F  
                             ??___lwmod 000F                       ?_ikb_key_was_read 0001  
                                clear_0 1E78                                  clear_1 1E84  
                                clear_2 1E90                        __end_of_mpap_job 2196  
                    ??_ikb_key_was_read 000B                      _autoMode_init$1551 0040  
                                _unlock 00C8                               ??_ikb_job 0024  
                                _strlen 23FC                 __end_of_disp7s_mux0_off 25BE  
               __end_of_disp7s_mux1_off 25B6                   ___ftmul@f3_as_product 001D  
               __end_of_disp7s_mux2_off 25AE                 __end_of_disp7s_mux3_off 25A6  
               __end_of_disp7s_mux4_off 259E       __end_of_disp7s_qtyDisp_writeFloat 245A  
              __end_of_mpap_setupToTurn 2384                            __pdataCOMRAM 0054  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                   ikey_is_accessible@k 000D                 __end_of_disp7s_mux_init 22E4  
                      __end_of_pump_job 1F08                            ?_visMode_job 0001  
                  __size_of_autoMode_kb 007A                              __accesstop 0060  
               __end_of__initialization 1E96                         __CFG_PBADEN$OFF 000000  
                         ?_mpap_do1step 0001                              ___ftadd@f1 0016  
                            ___ftadd@f2 0019                              ___ftge@ff1 0016  
                            ___ftge@ff2 0019                         disp7s_off@pDisp 000B  
                         ___rparam_used 000001                         ??_autoMode_init 003F  
                            ___ftmul@f1 0013                              ___ftmul@f2 0016  
                            ___fttol@f1 0022                          __pcstackCOMRAM 0001  
                          __pidataBANK0 241E                           ?_mpap_homming 0001  
                          ?_pump_isIdle 0001                      __size_of__mpap_off 000A  
                            ___lwtoft@c 0013                         visMode_disp@qty 003F  
     __size_of_disp7s_modeDisp_writeInt 001A               ?_disp7s_modeDisp_writeInt 0038  
                  __end_of_autoMode_job 1B4E                            _DISP7S_CHARS 080F  
                        mpap_do1step@KI 0001                              __pbssBANK0 0060  
                            __pbssBANK1 0100                      visMode_job@cod_ret 0043  
                        ??_mpap_do1step 0001                      __size_of_ikey_scan 01A0  
                       ??_pulsonic_init 000B             __end_of_mpap_setupToHomming 24D0  
                        ??_mpap_homming 0002                                 ?___ftge 0016  
                  __end_of_INTERRUPCION 2106                      __size_of_mpap_sych 0082  
                               ?___wmul 000B                   __size_of_disp7s_mux_Q 00A0  
                  __size_of_mpap_isIdle 000E                      mpap_movetoNozzle@n 0015  
                       disp7s_write_f@I 00F3                         disp7s_write_f@i 00F9  
                       disp7s_write_i@i 0037                ?_disp7s_qtyDisp_writeInt 0038  
                            _disp7s_job 1D54                              _disp7s_off 22E4  
                            _disp7s_mux 00CB            __size_of_disp7s_modeDisp_off 0012  
                             ?___ftpack 000B                                 ?_strlen 000B  
                             ?___lwtoft 0013                 __size_of_disp7s_mux0_on 0004  
               __size_of_disp7s_mux1_on 0004                 __size_of_disp7s_mux2_on 0004  
               __size_of_disp7s_mux3_on 0004                 __size_of_disp7s_mux4_on 0004  
                      ?_disp7s_mux0_off 0001                        ?_disp7s_mux1_off 0001  
                      ?_disp7s_mux2_off 0001                        ?_disp7s_mux3_off 0001  
                      ?_disp7s_mux4_off 0001                    __end_of_ikey_parsing 0E42  
           pulsonic_getTotalSum_mlh@acc 0033                 __size_of_disp7s_write_f 021C  
               __size_of_disp7s_write_i 010A                              _disp_owner 00C6  
                      ?_disp7s_mux_init 0001                               ?_ikb_init 0001  
                     disp7s_write_f@num 0034                       disp7s_write_i@num 0023  
                     __end_of__mpap_off 2584                            _disp7s_mux_Q 198C  
                      _nozzle_isEnabled 2106                               ?_mpap_job 0001  
                               __Hparam 0000                                 __Lparam 0000  
           disp7s_modeDisp_writeInt@num 0038               disp7s_write_i@NUM_OF_DISP 0022  
                       __size_of___ftge 0074                                 ___ftadd 105E  
                       __size_of___wmul 0026                                 ___ftmul 15C0  
                               ___fttol 16B4                       pump_setTick@ticks 000B  
                               ___lwdiv 201E                               ?_pump_job 0001  
                               ___lwmod 2220                            __psmallconst 0800  
                               __pcinit 1E40                              ??___ftpack 0010  
                               __ramtop 0800                                 __ptext0 13A6  
                               __ptext1 18EA                                 __ptext2 1C5E  
                               __ptext3 24E2                                 __ptext4 2476  
                               __ptext5 251E                                 __ptext6 2490  
                               __ptext7 14B6                                 __ptext8 23FC  
                               __ptext9 1EA4                       __end_of_ikey_scan 13A6  
                               _ikb_job 252A                              ??___lwtoft 0016  
                       __size_of_strlen 0022                                 _group_x 00B0  
              _error_grantedToWriteDisp 00C4                 ??_ikb_key_is_ready2read 000B  
                               _visMode 00B8                       __end_of_mpap_sych 1C5E  
               mpap_normal_mode@cod_ret 0002                              ??_ikb_init 000B  
                        __pintcode_body 20BC                    end_of_initialization 1E96  
            __end_of_ikey_is_accessible 20BC                       ?_keyRead_pin_key0 0001  
                     ?_keyRead_pin_key1 0001                       ?_keyRead_pin_key2 0001  
                     ?_keyRead_pin_key3 0001                       ?_keyRead_pin_key4 0001  
            ??_pulsonic_getTotalSum_mlh 0033                           ??__mpap_step1 0001  
                         ??__mpap_step2 0001                           ??__mpap_step3 0001  
                         ??__mpap_step4 0001                    __size_of_visMode_job 00A2  
                               itoa@buf 001A                                 itoa@val 001B  
                         __Lmediumconst 0000                                 int_func 20BC  
                    ??_keyRead_pin_key0 000B                      ??_keyRead_pin_key1 000B  
                    ??_keyRead_pin_key2 000B                      ??_keyRead_pin_key3 000B  
                    ??_keyRead_pin_key4 000B          ??_disp7s_qtyDisp_writeText_OFF 000B  
                   errorHandler_queue@c 00BA                     errorHandler_queue@i 00BF  
                            ??_mpap_job 0004                           _OIL_VISCOSITY 080B  
                     ?_mpap_normal_mode 0001                         main@c_access_kb 0044  
                               postdec1 000FE5                                 postdec2 000FDD  
                    ??_mpap_normal_mode 0002                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                ikb_key_is_ready2read@k 000B                              ??_pump_job 000B  
                               utoa@buf 0012                                 utoa@val 0013  
                           ?_disp7s_job 0001                             ?_disp7s_off 000B  
                               strlen@s 000B                           ?_visMode_disp 0001  
                         ?_visMode_init 0001                    __size_of_pump_isIdle 0010  
                 __size_of_autoMode_job 008E                    __end_of_mpap_do1step 22A4  
                         ??_disp7s_init 000C                       ?_mpap_setupToTurn 0011  
                    ??_mpap_setupToTurn 0013                    __end_of_mpap_homming 201E  
             __size_of_ikb_key_was_read 0014            disp7s_qtyDisp_writeFloat@num 003C  
                            main@codapp 0046                     disp7s_write_f@pDisp 0031  
                   disp7s_write_i@pDisp 0020                   __size_of_INTERRUPCION 20FE  
                           ___ftmul@exp 001C                            _autoMode_job 1AC0  
                   __end_of__mpap_step1 2570                     __end_of__mpap_step2 2566  
                   __end_of__mpap_step3 255C                     __end_of__mpap_step4 257A  
                   __end_of_DISP7S_NUMS 080B                          __end_of___ftge 1E40  
       mpap_setupToTurn@numSteps_tomove 0011                          ??_visMode_disp 003F  
                        ??_visMode_init 000B                   __size_of_ikey_parsing 0630  
                        __end_of___wmul 23D8                           __pidataCOMRAM 25C2  
                        _disp7s_mux0_on 25B6                          _disp7s_mux1_on 25AE  
                        _disp7s_mux2_on 25A6                          _disp7s_mux3_on 259E  
                        _disp7s_mux4_on 25BE                          __end_of_strlen 241E  
                     autoMode_init@init 003F                     start_initialization 1E40  
            ?_disp7s_qtyDisp_writeFloat 003C                           ?_pump_setTick 000B  
                         ??_autoMode_kb 000C                          _disp7s_write_f 0E42  
                        _disp7s_write_i 14B6                            _INTERRUPCION 0008  
                   __end_of_disp7s_init 1FC6                    visMode_init@numVista 000B  
                            ikey_scan@k 000C                     _disp7s_modeDisp_off 24D0  
                   __size_of_disp7s_job 0078                     __size_of_disp7s_off 003E  
                          _ikey_parsing 0812                   __end_of_autoMode_init 2220  
                              ??___ftge 001C                                ??___wmul 000F  
                           __pdataBANK0 00CB                  __end_of_disp7s_mux0_on 25BA  
                __end_of_disp7s_mux1_on 25B2                  __end_of_disp7s_mux2_on 25AA  
                __end_of_disp7s_mux3_on 25A2                  __end_of_disp7s_mux4_on 25C2  
                  ?_disp7s_modeDisp_off 0001                                ??_strlen 000D  
                __end_of_disp7s_write_f 105E                  __end_of_disp7s_write_i 15C0  
                     __size_of___ftpack 00AE                __end_of_nozzle_isEnabled 214E  
                        ??_pump_setTick 000D                             __pbssCOMRAM 0048  
                     __size_of___lwtoft 0024                           __pcstackBANK0 00E9  
            disp7s_qtyDisp_writeInt@num 0038                        disp7s_mux_init@i 000B  
                          mpap_sych@sm0 0053        __size_of_disp7s_qtyDisp_writeInt 001A  
      __end_of_pulsonic_getTotalSum_mlh 1BDC               pulsonic_getTotalSum_mlh@i 0035  
                   __end_of_autoMode_kb 1D54                           ikey_parsing@k 0023  
                     __size_of_ikb_init 00B6                             __mpap_step1 2566  
                           __mpap_step2 255C                             __mpap_step3 2552  
                           __mpap_step4 2570                             _DISP7S_NUMS 0801  
                            mpap_sych@c 00BD                   __end_of_pulsonic_init 1F68  
                             __mpap_off 257A                           ??_mpap_isIdle 000B  
                      ___lwdiv@dividend 000B                       __size_of_mpap_job 0048  
                             __pintcode 0008                   __size_of_mpap_do1step 0042  
                              ?___ftadd 0016                                ?___ftmul 0013  
                              ?___fttol 0022                                ?___lwdiv 000B  
                              ?___lwmod 000B                   ??_disp7s_modeDisp_off 0011  
              _disp7s_modeDisp_writeInt 2490                         ?_disp7s_mux0_on 0001  
                       ?_disp7s_mux1_on 0001                         ?_disp7s_mux2_on 0001  
                       ?_disp7s_mux3_on 0001                         ?_disp7s_mux4_on 0001  
          __size_of_mpap_setupToHomming 0012                               _machState 00C7  
                     __size_of_pump_job 0064                                ?_ikb_job 0001  
                      disp7s_write_f@pi 00F5                        disp7s_write_i@pi 0034  
                           __smallconst 0800                   __size_of_mpap_homming 0058  
                             _main_flag 00C9                         ?_disp7s_write_f 0031  
                       ?_disp7s_write_i 0020                             _disp7s_init 1F68  
                             _ikey_scan 1206          __size_of_ikb_key_is_ready2read 001C  
                      ___lwdiv@quotient 0010           __end_of_ikb_key_is_ready2read 2476  
                      _ikb_key_was_read 24AA                __size_of_disp7s_mux0_off 0004  
              __size_of_disp7s_mux1_off 0004                __size_of_disp7s_mux2_off 0004  
              __size_of_disp7s_mux3_off 0004                __size_of_disp7s_mux4_off 0004  
                  __end_of_visMode_disp 1CDA                    __end_of_visMode_init 2510  
                             _mpap_step 00DF                               _mpap_sych 1BDC  
                        ___wmul@product 000F                            _mpap_do1step 2262  
              __size_of_disp7s_mux_init 0040                              ?__mpap_off 0001  
                              i2u428_48 217C                                i2u428_49 2190  
                              i2u297_48 2290                      _ikey_is_accessible 2070  
                          _mpap_homming 1FC6               __size_of_keyRead_pin_key0 0008  
             __size_of_keyRead_pin_key1 000A               __size_of_keyRead_pin_key2 000A  
             __size_of_keyRead_pin_key3 0006               __size_of_keyRead_pin_key4 0008  
                          ??_disp7s_job 0013                            ??_disp7s_off 000E  
                   __end_of_mpap_isIdle 251E         ??_disp7s_modeDisp_writeText_oil 000B  
                     ___wmul@multiplier 000B                     ?_ikey_is_accessible 0001  
                    disp7s_write_f@buff 00E9                               ikb_init@i 000B  
             __size_of_mpap_normal_mode 0048                      disp7s_write_i@buff 002A  
                 disp7s_off@NUM_OF_DISP 000D                              ?_ikey_scan 0001  
                           _autoMode_kb 1CDA                           ??_visMode_job 0043  
                             copy_data0 1E54                     mpap_homming@cod_ret 0003  
                            ?_mpap_sych 0001                    ??_ikey_is_accessible 000B  
                    __end_of_disp7s_job 1DCC                      __end_of_disp7s_off 2322  
             __size_of_mpap_setupToTurn 0030                                __Hrparam 0000  
                  __end_of_pump_setTick 2552                                __Lrparam 0000  
                  check_startSignal@sm0 00C3                    check_startSignal@sm1 00C2  
                         ??_pump_isIdle 000B                        __size_of___ftadd 01A8  
     __size_of_pulsonic_getTotalSum_mlh 008E                        __size_of___ftmul 00F4  
                      __size_of___fttol 00D2                        __size_of___lwdiv 0052  
             ?_pulsonic_getTotalSum_mlh 0031                        __size_of___lwmod 0042  
                              ___ftpack 183C                                ___lwtoft 23D8  
  __end_of_disp7s_qtyDisp_writeText_OFF 24F2   __size_of_disp7s_qtyDisp_writeText_OFF 0010  
          _disp7s_qtyDisp_writeText_OFF 24E2                        __size_of_ikb_job 000A  
                         disp7s_mux_Q@i 0012                           disp7s_mux_Q@q 0011  
           ??_disp7s_qtyDisp_writeFloat 003F                   errorHandler_queue@sm0 00BE  
                       ___lwdiv@divisor 000D                 _disp7s_qtyDisp_writeInt 2476  
                     check_oilLevel@sm0 00C1                       check_oilLevel@sm1 00C0  
                       ___lwdiv@counter 000F                                __ptext10 1F08  
                              __ptext11 1BDC                                __ptext20 2070  
                              __ptext12 252A                                __ptext21 1786  
                              __ptext13 1206                                __ptext30 25AA  
                              __ptext22 1D54                                __ptext14 2594  
                              __ptext31 25AE                                __ptext23 198C  
                              __ptext15 2534                                __ptext40 1AC0  
                              __ptext32 25B2                                __ptext24 1F68  
                              __ptext16 253E                                __ptext41 2548  
                              __ptext33 25B6                                __ptext25 22A4  
                              __ptext17 2584                                __ptext50 23B2  
                              __ptext42 24F2                                __ptext34 25BA  
                              __ptext26 259A                                __ptext18 258C  
                              __ptext51 23D8                                __ptext43 2106  
                              __ptext35 25BE                                __ptext27 259E  
                              __ptext19 0812                                __ptext60 1DCC  
                              __ptext52 243C                                __ptext44 24BE  
                              __ptext36 1CDA                                __ptext28 25A2  
                              __ptext61 105E                                __ptext53 0E42  
                              __ptext45 2384                                __ptext37 2502  
                              __ptext29 25A6                                __ptext70 2552  
                              __ptext62 183C                                __ptext54 2322  
                              __ptext46 2354                                __ptext38 24AA  
                              __ptext71 255C                                __ptext63 24D0  
                              __ptext55 1A2C                                __ptext47 2510  
                              __ptext39 245A                                __ptext72 2566  
                              __ptext64 22E4                                __ptext56 2220  
                              __ptext48 21DE                                __ptext73 2570  
                              __ptext57 201E                                __ptext49 1B4E  
                              __ptext74 257A                                __ptext66 214E  
                              __ptext58 16B4                                __ptext75 0000  
                              __ptext67 2196                                __ptext59 15C0  
                              __ptext68 1FC6                                __ptext69 2262  
                              _ikb_init 1786                    _mpap_setupToTurn$438 0013  
                              _autoMode 0050                           __size_of_main 0110  
                         __size_of_itoa 0032                           __size_of_utoa 0094  
                   __end_of_visMode_job 198C                                _isr_flag 00CA  
                              _mpap_job 214E                                _mpap_off 00E7  
                     ??_disp7s_mux0_off 000B                       ??_disp7s_mux1_off 000B  
                     ??_disp7s_mux2_off 000B                       ??_disp7s_mux3_off 000B  
                           ??__mpap_off 0001                       ??_disp7s_mux4_off 000B  
                     main@c_access_disp 0045                             _mpap_isIdle 2510  
                              int$flags 0055                       ??_disp7s_mux_init 000B  
                              _pump_job 1EA4                                _pulsonic 0100  
                     nozzle_isEnabled@n 001F                   __CFG_CPUDIV$OSC1_PLL2 000000  
                   __end_of_pump_isIdle 2502                       ?_nozzle_isEnabled 001F  
                             pump_job@c 00BC           ?_disp7s_qtyDisp_writeText_OFF 0001  
 __end_of_disp7s_modeDisp_writeText_oil 252A  __size_of_disp7s_modeDisp_writeText_oil 000C  
         _disp7s_modeDisp_writeText_oil 251E                             ??_ikey_scan 000B  
                 __size_of_visMode_disp 007C                                itoa@base 001D  
                 __size_of_visMode_init 000E                      ??_nozzle_isEnabled 0021  
                          disp7s_job@pq 0015                            disp7s_init@i 000C  
                              intlevel2 0000                     _mpap_setupToHomming 24BE  
                           ??_mpap_sych 000B                        ___lwmod@dividend 000B  
                          ?__mpap_step1 0001                            ?__mpap_step2 0001  
                          ?__mpap_step3 0001                            ?__mpap_step4 0001  
                         ?_disp7s_mux_Q 0001              ??_disp7s_modeDisp_writeInt 003A  
                     _mpap_movetoNozzle 2384               _disp7s_qtyDisp_writeFloat 243C  
                      ??_disp7s_mux0_on 000B                        ??_disp7s_mux1_on 000B  
                      ??_disp7s_mux2_on 000B                        ??_disp7s_mux3_on 000B  
                      ??_disp7s_mux4_on 000B                      ?_mpap_movetoNozzle 0001  
              __end_of_ikb_key_was_read 24BE                        _keyRead_pin_key0 2584  
                      _keyRead_pin_key1 253E                        _keyRead_pin_key2 2534  
                      _keyRead_pin_key3 2594                        _keyRead_pin_key4 258C  
                      ??_disp7s_write_f 0037                        ??_disp7s_write_i 0025  
                  ?_mpap_setupToHomming 0001                     ??_mpap_movetoNozzle 0015  
                          _visMode_disp 1C5E                            _visMode_init 2502  
                              utoa@base 0015                             disp7s_job@q 0052  
                           disp7s_off@i 0010               ??_disp7s_qtyDisp_writeInt 003A  
                          ?_disp7s_init 0001                         ___lwmod@divisor 000D  
                      _mpap_normal_mode 2196                                strlen@cp 000D  
                       ___lwmod@counter 000F                  __size_of_autoMode_init 0042  
                           _visMode_job 18EA                      __CFG_FOSC$HSPLL_HS 000000  
                 __size_of_pump_setTick 000A                          ??_disp7s_mux_Q 000B  
             __end_of_mpap_movetoNozzle 23B2                   __end_of_OIL_VISCOSITY 080F  
                      _mpap_setupToTurn 2354             __end_of_disp7s_modeDisp_off 24E2  
