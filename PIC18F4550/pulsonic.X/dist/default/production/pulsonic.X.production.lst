

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 20:06:16 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,keep,inline
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,keep,inline
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,keep,inline
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,keep,inline
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,keep,inline
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,keep,inline
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,keep,inline
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,keep,inline
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    99                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113  0000                     
   114                           ; Version 2.05
   115                           ; Generated 20/12/2018 GMT
   116                           ; 
   117                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC18F4550 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     
   149                           	psect	idataCOMRAM
   150  002BCC                     __pidataCOMRAM:
   151                           	opt callstack 0
   152                           
   153                           ;initializer for mpap_do1step@i
   154  002BCC  FF                 	db	255
   155                           
   156                           ;initializer for errorHandler_queue@i
   157  002BCD  FF                 	db	255
   158                           
   159                           	psect	idataBANK0
   160  0029B6                     __pidataBANK0:
   161                           	opt callstack 0
   162                           
   163                           ;initializer for _disp7s_mux
   164  0029B6  C4                 	db	low _disp7s_mux0_off
   165  0029B7  2B                 	db	high _disp7s_mux0_off
   166  0029B8  C0                 	db	low _disp7s_mux0_on
   167  0029B9  2B                 	db	high _disp7s_mux0_on
   168  0029BA  BC                 	db	low _disp7s_mux1_off
   169  0029BB  2B                 	db	high _disp7s_mux1_off
   170  0029BC  B8                 	db	low _disp7s_mux1_on
   171  0029BD  2B                 	db	high _disp7s_mux1_on
   172  0029BE  B4                 	db	low _disp7s_mux2_off
   173  0029BF  2B                 	db	high _disp7s_mux2_off
   174  0029C0  B0                 	db	low _disp7s_mux2_on
   175  0029C1  2B                 	db	high _disp7s_mux2_on
   176  0029C2  AC                 	db	low _disp7s_mux3_off
   177  0029C3  2B                 	db	high _disp7s_mux3_off
   178  0029C4  A8                 	db	low _disp7s_mux3_on
   179  0029C5  2B                 	db	high _disp7s_mux3_on
   180  0029C6  A4                 	db	low _disp7s_mux4_off
   181  0029C7  2B                 	db	high _disp7s_mux4_off
   182  0029C8  C8                 	db	low _disp7s_mux4_on
   183  0029C9  2B                 	db	high _disp7s_mux4_on
   184                           
   185                           ;initializer for _mpap_step
   186  0029CA  64                 	db	low __mpap_step1
   187  0029CB  2B                 	db	high __mpap_step1
   188  0029CC  5A                 	db	low __mpap_step2
   189  0029CD  2B                 	db	high __mpap_step2
   190  0029CE  50                 	db	low __mpap_step3
   191  0029CF  2B                 	db	high __mpap_step3
   192  0029D0  6E                 	db	low __mpap_step4
   193  0029D1  2B                 	db	high __mpap_step4
   194                           
   195                           ;initializer for _NOZZLE_QTY_DIFF
   196  0029D2  CD                 	db	205
   197  0029D3  CC                 	db	204
   198  0029D4  3D                 	db	61
   199                           
   200                           ;initializer for _mpap_off
   201  0029D5  78                 	db	low __mpap_off
   202  0029D6  2B                 	db	high __mpap_off
   203                           
   204                           	psect	smallconst
   205  000800                     __psmallconst:
   206                           	opt callstack 0
   207  000800  00                 	db	0
   208  000801                     _DISP7S_NUMS:
   209                           	opt callstack 0
   210  000801  3F                 	db	63
   211  000802  06                 	db	6
   212  000803  5B                 	db	91
   213  000804  4F                 	db	79
   214  000805  66                 	db	102
   215  000806  6D                 	db	109
   216  000807  7C                 	db	124
   217  000808  07                 	db	7
   218  000809  7F                 	db	127
   219  00080A  67                 	db	103
   220  00080B                     __end_of_DISP7S_NUMS:
   221                           	opt callstack 0
   222  00080B                     _OIL_VISCOSITY:
   223                           	opt callstack 0
   224  00080B  16                 	db	22
   225  00080C  20                 	db	32
   226  00080D  2E                 	db	46
   227  00080E  44                 	db	68
   228  00080F                     __end_of_OIL_VISCOSITY:
   229                           	opt callstack 0
   230  00080F                     _DISP7S_CHARS:
   231                           	opt callstack 0
   232  00080F  00                 	db	0
   233  000810  40                 	db	64
   234  000811                     __end_of_DISP7S_CHARS:
   235                           	opt callstack 0
   236  0000                     _TRISB	set	3987
   237  0000                     _TRISA	set	3986
   238  0000                     _PORTE	set	3972
   239  0000                     _PORTD	set	3971
   240  0000                     _PORTC	set	3970
   241  0000                     _TRISC	set	3988
   242  0000                     _TRISD	set	3989
   243  0000                     _TRISE	set	3990
   244  0000                     _TMR0L	set	4054
   245  0000                     _TMR0H	set	4055
   246  0000                     _T0CON	set	4053
   247  0000                     _UCFG	set	3951
   248  0000                     _UCON	set	3949
   249  0000                     _CMCON	set	4020
   250  0000                     _ADCON1	set	4033
   251  0000                     _LATB	set	3978
   252  0000                     _LATE	set	3981
   253  0000                     _LATD	set	3980
   254  0000                     _LATC	set	3979
   255  0000                     _LATA	set	3977
   256  0000                     _TMR0IF	set	32658
   257  0000                     _GIE	set	32663
   258  0000                     _TMR0IE	set	32661
   259                           
   260                           ; #config settings
   261  000811  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	cinit
   264  00222E                     __pcinit:
   265                           	opt callstack 0
   266  00222E                     start_initialization:
   267                           	opt callstack 0
   268  00222E                     __initialization:
   269                           	opt callstack 0
   270                           
   271                           ; Initialize objects allocated to BANK0 (33 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273  00222E  0EB6               	movlw	low __pidataBANK0
   274  002230  6EF6               	movwf	tblptrl,c
   275  002232  0E29               	movlw	high __pidataBANK0
   276  002234  6EF7               	movwf	tblptrh,c
   277  002236  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278  002238  6EF8               	movwf	tblptru,c
   279  00223A  EE00  F0CD         	lfsr	0,__pdataBANK0
   280  00223E  EE10 F021          	lfsr	1,33
   281  002242                     copy_data0:
   282  002242  0009               	tblrd		*+
   283  002244  CFF5 FFEE          	movff	tablat,postinc0
   284  002248  50E5               	movf	postdec1,w,c
   285  00224A  50E1               	movf	fsr1l,w,c
   286  00224C  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to COMRAM (2 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290  00224E  0ECC               	movlw	low __pidataCOMRAM
   291  002250  6EF6               	movwf	tblptrl,c
   292  002252  0E2B               	movlw	high __pidataCOMRAM
   293  002254  6EF7               	movwf	tblptrh,c
   294  002256  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295  002258  6EF8               	movwf	tblptru,c
   296  00225A  0009               	tblrd		*+	;fetch initializer
   297  00225C  CFF5 F051          	movff	tablat,__pdataCOMRAM
   298  002260  0009               	tblrd		*+	;fetch initializer
   299  002262  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   300                           
   301                           ; Clear objects allocated to BANK1 (65 bytes)
   302  002266  EE01  F000         	lfsr	0,__pbssBANK1
   303  00226A  0E41               	movlw	65
   304  00226C                     clear_0:
   305  00226C  6AEE               	clrf	postinc0,c
   306  00226E  06E8               	decf	wreg,f,c
   307  002270  E1FD               	bnz	clear_0
   308                           
   309                           ; Clear objects allocated to BANK0 (109 bytes)
   310  002272  EE00  F060         	lfsr	0,__pbssBANK0
   311  002276  0E6D               	movlw	109
   312  002278                     clear_1:
   313  002278  6AEE               	clrf	postinc0,c
   314  00227A  06E8               	decf	wreg,f,c
   315  00227C  E1FD               	bnz	clear_1
   316                           
   317                           ; Clear objects allocated to COMRAM (13 bytes)
   318  00227E  EE00  F044         	lfsr	0,__pbssCOMRAM
   319  002282  0E0D               	movlw	13
   320  002284                     clear_2:
   321  002284  6AEE               	clrf	postinc0,c
   322  002286  06E8               	decf	wreg,f,c
   323  002288  E1FD               	bnz	clear_2
   324  00228A                     end_of_initialization:
   325                           	opt callstack 0
   326  00228A                     __end_of__initialization:
   327                           	opt callstack 0
   328  00228A  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  00228C  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  00228E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  002290  6EF8               	movwf	tblptru,c
   332  002292  0100               	movlb	0
   333  002294  EF23  F00B         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336  000044                     __pbssCOMRAM:
   337                           	opt callstack 0
   338  000044                     _pump:
   339                           	opt callstack 0
   340  000044                     	ds	3
   341  000047                     _smain:
   342                           	opt callstack 0
   343  000047                     	ds	3
   344  00004A                     _configMode:
   345                           	opt callstack 0
   346  00004A                     	ds	2
   347  00004C                     _autoMode:
   348                           	opt callstack 0
   349  00004C                     	ds	2
   350  00004E                     disp7s_job@q:
   351                           	opt callstack 0
   352  00004E                     	ds	1
   353  00004F                     mpap_sych@sm0:
   354                           	opt callstack 0
   355  00004F                     	ds	1
   356  000050                     _disp_owner:
   357                           	opt callstack 0
   358  000050                     	ds	1
   359                           
   360                           	psect	dataCOMRAM
   361  000051                     __pdataCOMRAM:
   362                           	opt callstack 0
   363  000051                     mpap_do1step@i:
   364                           	opt callstack 0
   365  000051                     	ds	1
   366  000052                     errorHandler_queue@i:
   367                           	opt callstack 0
   368  000052                     	ds	1
   369                           
   370                           	psect	bssBANK0
   371  000060                     __pbssBANK0:
   372                           	opt callstack 0
   373  000060                     _key:
   374                           	opt callstack 0
   375  000060                     	ds	80
   376  0000B0                     _mpap:
   377                           	opt callstack 0
   378  0000B0                     	ds	8
   379  0000B8                     _group_x:
   380                           	opt callstack 0
   381  0000B8                     	ds	5
   382  0000BD                     _visMode:
   383                           	opt callstack 0
   384  0000BD                     	ds	2
   385  0000BF                     errorHandler_queue@c:
   386                           	opt callstack 0
   387  0000BF                     	ds	2
   388  0000C1                     pump_job@c:
   389                           	opt callstack 0
   390  0000C1                     	ds	1
   391  0000C2                     mpap_sych@c:
   392                           	opt callstack 0
   393  0000C2                     	ds	1
   394  0000C3                     errorHandler_queue@sm0:
   395                           	opt callstack 0
   396  0000C3                     	ds	1
   397  0000C4                     check_oilLevel@sm1:
   398                           	opt callstack 0
   399  0000C4                     	ds	1
   400  0000C5                     check_oilLevel@sm0:
   401                           	opt callstack 0
   402  0000C5                     	ds	1
   403  0000C6                     check_startSignal@sm1:
   404                           	opt callstack 0
   405  0000C6                     	ds	1
   406  0000C7                     check_startSignal@sm0:
   407                           	opt callstack 0
   408  0000C7                     	ds	1
   409  0000C8                     _error_grantedToWriteDisp:
   410                           	opt callstack 0
   411  0000C8                     	ds	1
   412  0000C9                     _error_requestToWriteDisp:
   413                           	opt callstack 0
   414  0000C9                     	ds	1
   415  0000CA                     _machState:
   416                           	opt callstack 0
   417  0000CA                     	ds	1
   418  0000CB                     _unlock:
   419                           	opt callstack 0
   420  0000CB                     	ds	1
   421  0000CC                     _isr_flag:
   422                           	opt callstack 0
   423  0000CC                     	ds	1
   424                           
   425                           	psect	dataBANK0
   426  0000CD                     __pdataBANK0:
   427                           	opt callstack 0
   428  0000CD                     _disp7s_mux:
   429                           	opt callstack 0
   430  0000CD                     	ds	20
   431  0000E1                     _mpap_step:
   432                           	opt callstack 0
   433  0000E1                     	ds	8
   434  0000E9                     _NOZZLE_QTY_DIFF:
   435                           	opt callstack 0
   436  0000E9                     	ds	3
   437  0000EC                     _mpap_off:
   438                           	opt callstack 0
   439  0000EC                     	ds	2
   440                           
   441                           	psect	bssBANK1
   442  000100                     __pbssBANK1:
   443                           	opt callstack 0
   444  000100                     _pulsonic:
   445                           	opt callstack 0
   446  000100                     	ds	65
   447                           
   448                           	psect	cstackBANK1
   449  000141                     __pcstackBANK1:
   450                           	opt callstack 0
   451  000141                     disp7s_qtyDisp_writeFloat@num:
   452                           	opt callstack 0
   453                           
   454                           ; 3 bytes @ 0x0
   455  000141                     	ds	3
   456                           
   457                           	psect	cstackBANK0
   458  0000EE                     __pcstackBANK0:
   459                           	opt callstack 0
   460  0000EE                     disp7s_write_f@buff:
   461                           	opt callstack 0
   462                           
   463                           ; 10 bytes @ 0x0
   464  0000EE                     	ds	10
   465  0000F8                     disp7s_write_f@I:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0xA
   469  0000F8                     	ds	2
   470  0000FA                     disp7s_write_f@pi:
   471                           	opt callstack 0
   472                           
   473                           ; 1 bytes @ 0xC
   474  0000FA                     	ds	1
   475  0000FB                     disp7s_write_f@K10MULT:
   476                           	opt callstack 0
   477                           
   478                           ; 3 bytes @ 0xD
   479  0000FB                     	ds	3
   480  0000FE                     disp7s_write_f@i:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x10
   484  0000FE                     	ds	1
   485                           
   486                           	psect	cstackCOMRAM
   487  000001                     __pcstackCOMRAM:
   488                           	opt callstack 0
   489  000001                     mpap_do1step@KI:
   490                           	opt callstack 0
   491                           
   492                           ; 1 bytes @ 0x0
   493  000001                     	ds	1
   494  000002                     ??_mpap_homming:
   495  000002                     mpap_normal_mode@cod_ret:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x1
   499  000002                     	ds	1
   500  000003                     mpap_homming@cod_ret:
   501                           	opt callstack 0
   502                           
   503                           ; 1 bytes @ 0x2
   504  000003                     	ds	1
   505  000004                     
   506                           ; 1 bytes @ 0x3
   507  000004                     	ds	1
   508  000005                     ??_INTERRUPCION:
   509                           
   510                           ; 1 bytes @ 0x4
   511  000005                     	ds	6
   512  00000B                     ??_errorHandler_queue:
   513  00000B                     ??_is_startSignal:
   514  00000B                     ??_ikey_is_accessible:
   515  00000B                     ??_disp7s_mux_Q:
   516  00000B                     ?_strlen:
   517                           	opt callstack 0
   518  00000B                     ?___wmul:
   519                           	opt callstack 0
   520  00000B                     ?___lwdiv:
   521                           	opt callstack 0
   522  00000B                     ?___lwmod:
   523                           	opt callstack 0
   524  00000B                     ?___ftpack:
   525                           	opt callstack 0
   526  00000B                     ikb_init@i:
   527                           	opt callstack 0
   528  00000B                     ikb_key_is_ready2read@k:
   529                           	opt callstack 0
   530  00000B                     ikb_key_was_read@k:
   531                           	opt callstack 0
   532  00000B                     ikey_clear_all_flag@i:
   533                           	opt callstack 0
   534  00000B                     pulsonic_init@i:
   535                           	opt callstack 0
   536  00000B                     disp7s_mux_init@i:
   537                           	opt callstack 0
   538  00000B                     visMode_init@numVista:
   539                           	opt callstack 0
   540  00000B                     configMode_init@numRegistro:
   541                           	opt callstack 0
   542  00000B                     strlen@s:
   543                           	opt callstack 0
   544  00000B                     pump_setTick@ticks:
   545                           	opt callstack 0
   546  00000B                     disp7s_off@pDisp:
   547                           	opt callstack 0
   548  00000B                     ___wmul@multiplier:
   549                           	opt callstack 0
   550  00000B                     ___lwdiv@dividend:
   551                           	opt callstack 0
   552  00000B                     ___lwmod@dividend:
   553                           	opt callstack 0
   554  00000B                     ___ftpack@arg:
   555                           	opt callstack 0
   556                           
   557                           ; 3 bytes @ 0xA
   558  00000B                     	ds	1
   559  00000C                     ikey_scan@k:
   560                           	opt callstack 0
   561  00000C                     disp7s_init@i:
   562                           	opt callstack 0
   563  00000C                     autoMode_kb@cod_ret:
   564                           	opt callstack 0
   565  00000C                     visMode_kb@cod_ret:
   566                           	opt callstack 0
   567                           
   568                           ; 1 bytes @ 0xB
   569  00000C                     	ds	1
   570  00000D                     ikey_is_accessible@k:
   571                           	opt callstack 0
   572  00000D                     disp7s_off@NUM_OF_DISP:
   573                           	opt callstack 0
   574  00000D                     strlen@cp:
   575                           	opt callstack 0
   576  00000D                     ___wmul@multiplicand:
   577                           	opt callstack 0
   578  00000D                     ___lwdiv@divisor:
   579                           	opt callstack 0
   580  00000D                     ___lwmod@divisor:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0xC
   584  00000D                     	ds	1
   585  00000E                     ??_disp7s_off:
   586  00000E                     ___ftpack@exp:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0xD
   590  00000E                     	ds	1
   591  00000F                     ___ftpack@sign:
   592                           	opt callstack 0
   593  00000F                     ___lwdiv@counter:
   594                           	opt callstack 0
   595  00000F                     ___lwmod@counter:
   596                           	opt callstack 0
   597  00000F                     ___wmul@product:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0xE
   601  00000F                     	ds	1
   602  000010                     ??___ftpack:
   603  000010                     errorHandler_queue@is_granted:
   604                           	opt callstack 0
   605  000010                     disp7s_off@i:
   606                           	opt callstack 0
   607  000010                     ___lwdiv@quotient:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0xF
   611  000010                     	ds	1
   612  000011                     disp7s_mux_Q@q:
   613                           	opt callstack 0
   614  000011                     mpap_setupToTurn@numSteps_tomove:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x10
   618  000011                     	ds	1
   619  000012                     disp7s_mux_Q@i:
   620                           	opt callstack 0
   621  000012                     utoa@buf:
   622                           	opt callstack 0
   623                           
   624                           ; 1 bytes @ 0x11
   625  000012                     	ds	1
   626  000013                     ??_disp7s_job:
   627  000013                     ?___ftadd:
   628                           	opt callstack 0
   629  000013                     ?___ftmul:
   630                           	opt callstack 0
   631  000013                     ?___lwtoft:
   632                           	opt callstack 0
   633  000013                     _mpap_setupToTurn$500:
   634                           	opt callstack 0
   635  000013                     ___lwtoft@c:
   636                           	opt callstack 0
   637  000013                     utoa@val:
   638                           	opt callstack 0
   639  000013                     ___ftadd@f1:
   640                           	opt callstack 0
   641  000013                     ___ftmul@f1:
   642                           	opt callstack 0
   643                           
   644                           ; 3 bytes @ 0x12
   645  000013                     	ds	2
   646  000015                     mpap_movetoNozzle@numNozzle:
   647                           	opt callstack 0
   648  000015                     disp7s_job@pq:
   649                           	opt callstack 0
   650  000015                     utoa@base:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x14
   654  000015                     	ds	1
   655  000016                     ___ftadd@f2:
   656                           	opt callstack 0
   657  000016                     ___ftge@ff1:
   658                           	opt callstack 0
   659  000016                     ___ftmul@f2:
   660                           	opt callstack 0
   661                           
   662                           ; 3 bytes @ 0x15
   663  000016                     	ds	1
   664  000017                     utoa@v:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x16
   668  000017                     	ds	2
   669  000019                     ??___ftadd:
   670  000019                     ??___ftmul:
   671  000019                     utoa@c:
   672                           	opt callstack 0
   673  000019                     ___ftge@ff2:
   674                           	opt callstack 0
   675                           
   676                           ; 3 bytes @ 0x18
   677  000019                     	ds	1
   678  00001A                     itoa@buf:
   679                           	opt callstack 0
   680                           
   681                           ; 1 bytes @ 0x19
   682  00001A                     	ds	1
   683  00001B                     itoa@val:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x1A
   687  00001B                     	ds	1
   688  00001C                     ??___ftge:
   689  00001C                     ___ftadd@sign:
   690                           	opt callstack 0
   691  00001C                     ___ftmul@exp:
   692                           	opt callstack 0
   693                           
   694                           ; 1 bytes @ 0x1B
   695  00001C                     	ds	1
   696  00001D                     ___ftadd@exp2:
   697                           	opt callstack 0
   698  00001D                     itoa@base:
   699                           	opt callstack 0
   700  00001D                     ___ftmul@f3_as_product:
   701                           	opt callstack 0
   702                           
   703                           ; 3 bytes @ 0x1C
   704  00001D                     	ds	1
   705  00001E                     ___ftadd@exp1:
   706                           	opt callstack 0
   707                           
   708                           ; 1 bytes @ 0x1D
   709  00001E                     	ds	1
   710  00001F                     ??_ikey_parsing:
   711  00001F                     ?___ftsub:
   712                           	opt callstack 0
   713  00001F                     ?_pulsonic_getTotalSum_mlh:
   714                           	opt callstack 0
   715  00001F                     nozzle_isEnabled@n:
   716                           	opt callstack 0
   717  00001F                     ___ftsub@f1:
   718                           	opt callstack 0
   719                           
   720                           ; 3 bytes @ 0x1E
   721  00001F                     	ds	1
   722  000020                     ___ftmul@cntr:
   723                           	opt callstack 0
   724  000020                     disp7s_write_i@pDisp:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x1F
   728  000020                     	ds	1
   729  000021                     autoMode_job@cod_ret:
   730                           	opt callstack 0
   731  000021                     ___ftmul@sign:
   732                           	opt callstack 0
   733                           
   734                           ; 1 bytes @ 0x20
   735  000021                     	ds	1
   736  000022                     ?___fttol:
   737                           	opt callstack 0
   738  000022                     disp7s_write_i@NUM_OF_DISP:
   739                           	opt callstack 0
   740  000022                     pulsonic_getTotalSum_mlh@acc:
   741                           	opt callstack 0
   742  000022                     ___ftsub@f2:
   743                           	opt callstack 0
   744  000022                     ___fttol@f1:
   745                           	opt callstack 0
   746                           
   747                           ; 3 bytes @ 0x21
   748  000022                     	ds	1
   749  000023                     ikey_parsing@k:
   750                           	opt callstack 0
   751  000023                     disp7s_write_i@num:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x22
   755  000023                     	ds	1
   756  000024                     
   757                           ; 1 bytes @ 0x23
   758  000024                     	ds	1
   759  000025                     ??_configMode_kb:
   760  000025                     ??_disp7s_write_i:
   761  000025                     pulsonic_getTotalSum_mlh@i:
   762                           	opt callstack 0
   763                           
   764                           ; 2 bytes @ 0x24
   765  000025                     	ds	1
   766  000026                     ??___fttol:
   767                           
   768                           ; 1 bytes @ 0x25
   769  000026                     	ds	2
   770  000028                     configMode_kb@cod_ret:
   771                           	opt callstack 0
   772                           
   773                           ; 1 bytes @ 0x27
   774  000028                     	ds	2
   775  00002A                     disp7s_write_i@buff:
   776                           	opt callstack 0
   777                           
   778                           ; 10 bytes @ 0x29
   779  00002A                     	ds	1
   780  00002B                     ___fttol@sign1:
   781                           	opt callstack 0
   782                           
   783                           ; 1 bytes @ 0x2A
   784  00002B                     	ds	1
   785  00002C                     ___fttol@lval:
   786                           	opt callstack 0
   787                           
   788                           ; 4 bytes @ 0x2B
   789  00002C                     	ds	4
   790  000030                     ___fttol@exp1:
   791                           	opt callstack 0
   792                           
   793                           ; 1 bytes @ 0x2F
   794  000030                     	ds	1
   795  000031                     disp7s_write_f@pDisp:
   796                           	opt callstack 0
   797                           
   798                           ; 2 bytes @ 0x30
   799  000031                     	ds	2
   800  000033                     disp7s_write_f@NUM_OF_DISP:
   801                           	opt callstack 0
   802                           
   803                           ; 1 bytes @ 0x32
   804  000033                     	ds	1
   805  000034                     disp7s_write_i@pi:
   806                           	opt callstack 0
   807  000034                     disp7s_write_f@num:
   808                           	opt callstack 0
   809                           
   810                           ; 3 bytes @ 0x33
   811  000034                     	ds	1
   812  000035                     disp7s_write_i@K10MULT:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x34
   816  000035                     	ds	2
   817  000037                     ??_disp7s_write_f:
   818  000037                     disp7s_write_i@i:
   819                           	opt callstack 0
   820                           
   821                           ; 1 bytes @ 0x36
   822  000037                     	ds	1
   823  000038                     disp7s_qtyDisp_writeInt@num:
   824                           	opt callstack 0
   825  000038                     disp7s_modeDisp_writeInt@num:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0x37
   829  000038                     	ds	2
   830  00003A                     
   831                           ; 1 bytes @ 0x39
   832  00003A                     	ds	2
   833  00003C                     autoMode_init@init:
   834                           	opt callstack 0
   835  00003C                     visMode_disp@qty:
   836                           	opt callstack 0
   837  00003C                     configMode_disp@qty:
   838                           	opt callstack 0
   839                           
   840                           ; 3 bytes @ 0x3B
   841  00003C                     	ds	1
   842  00003D                     
   843                           ; 1 bytes @ 0x3C
   844  00003D                     	ds	2
   845  00003F                     visMode_disp@numVista:
   846                           	opt callstack 0
   847  00003F                     configMode_disp@numRegistro:
   848                           	opt callstack 0
   849                           
   850                           ; 1 bytes @ 0x3E
   851  00003F                     	ds	1
   852  000040                     visMode_job@cod_ret:
   853                           	opt callstack 0
   854  000040                     configMode_job@cod_ret:
   855                           	opt callstack 0
   856                           
   857                           ; 1 bytes @ 0x3F
   858  000040                     	ds	1
   859  000041                     main@c_access_kb:
   860                           	opt callstack 0
   861                           
   862                           ; 1 bytes @ 0x40
   863  000041                     	ds	1
   864  000042                     main@c_access_disp:
   865                           	opt callstack 0
   866                           
   867                           ; 1 bytes @ 0x41
   868  000042                     	ds	1
   869  000043                     main@codapp:
   870                           	opt callstack 0
   871                           
   872                           ; 1 bytes @ 0x42
   873  000043                     	ds	1
   874                           
   875 ;;
   876 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   877 ;;
   878 ;; *************** function _main *****************
   879 ;; Defined at:
   880 ;;		line 94 in file "main.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  codapp          1   66[COMRAM] char 
   885 ;;  c_access_dis    1   65[COMRAM] char 
   886 ;;  c_access_kb     1   64[COMRAM] char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 3F/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         0       0       0       0       0       0       0       0       0
   897 ;;      Locals:         3       0       0       0       0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0
   899 ;;      Totals:         3       0       0       0       0       0       0       0       0
   900 ;;Total ram usage:        3 bytes
   901 ;; Hardware stack levels required when called:   13
   902 ;; This function calls:
   903 ;;		_autoMode_init
   904 ;;		_autoMode_job
   905 ;;		_check_oilLevel
   906 ;;		_check_startSignal
   907 ;;		_configMode_init
   908 ;;		_configMode_job
   909 ;;		_disp7s_init
   910 ;;		_disp7s_job
   911 ;;		_errorHandler_queue
   912 ;;		_ikb_flush
   913 ;;		_ikb_init
   914 ;;		_ikb_job
   915 ;;		_mpap_sych
   916 ;;		_ps_autoMode_start
   917 ;;		_pulsonic_init
   918 ;;		_pump_job
   919 ;;		_visMode_job
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text0
   926  001646                     __ptext0:
   927                           	opt callstack 0
   928  001646                     _main:
   929                           	opt callstack 18
   930                           
   931                           ;main.c: 96: int8_t c_access_kb=0;
   932                           
   933                           ;incstack = 0
   934  001646  0E00               	movlw	0
   935  001648  6E41               	movwf	main@c_access_kb,c
   936                           
   937                           ;main.c: 97: int8_t c_access_disp=0;
   938  00164A  0E00               	movlw	0
   939  00164C  6E42               	movwf	main@c_access_disp,c
   940                           
   941                           ;main.c: 98: int8_t codapp;;main.c: 100: LATA = 0x00;
   942  00164E  0E00               	movlw	0
   943  001650  6E89               	movwf	3977,c	;volatile
   944                           
   945                           ;main.c: 101: LATC = 0x00;
   946  001652  0E00               	movlw	0
   947  001654  6E8B               	movwf	3979,c	;volatile
   948                           
   949                           ;main.c: 102: LATD = 0x00;
   950  001656  0E00               	movlw	0
   951  001658  6E8C               	movwf	3980,c	;volatile
   952                           
   953                           ;main.c: 103: LATE = 0x00;
   954  00165A  0E00               	movlw	0
   955  00165C  6E8D               	movwf	3981,c	;volatile
   956                           
   957                           ;main.c: 104: LATB = 0x00;
   958  00165E  0E00               	movlw	0
   959  001660  6E8A               	movwf	3978,c	;volatile
   960                           
   961                           ;main.c: 106: ADCON1 = 0x0F;
   962  001662  0E0F               	movlw	15
   963  001664  6EC1               	movwf	4033,c	;volatile
   964                           
   965                           ;main.c: 107: CMCON=0xCF;
   966  001666  0ECF               	movlw	207
   967  001668  6EB4               	movwf	4020,c	;volatile
   968                           
   969                           ;main.c: 110: UCON = 0;
   970  00166A  0E00               	movlw	0
   971  00166C  6E6D               	movwf	3949,c	;volatile
   972                           
   973                           ;main.c: 111: UCFG = 1<<3;
   974  00166E  0E08               	movlw	8
   975  001670  6E6F               	movwf	3951,c	;volatile
   976                           
   977                           ;main.c: 112: T0CON = 0B10000111;
   978  001672  0E87               	movlw	135
   979  001674  6ED5               	movwf	4053,c	;volatile
   980                           
   981                           ;main.c: 114: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
   982  001676  68D7               	setf	4055,c	;volatile
   983                           
   984                           ;main.c: 115: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
   985  001678  0ED1               	movlw	209
   986  00167A  6ED6               	movwf	4054,c	;volatile
   987                           
   988                           ;main.c: 116: TMR0IE = 1;
   989  00167C  8AF2               	bsf	4082,5,c	;volatile
   990  00167E  808D               	bsf	3981,0,c	;volatile
   991  001680  9096               	bcf	3990,0,c	;volatile
   992  001682  9095               	bcf	3989,0,c	;volatile
   993  001684  9295               	bcf	3989,1,c	;volatile
   994  001686  9495               	bcf	3989,2,c	;volatile
   995  001688  9695               	bcf	3989,3,c	;volatile
   996  00168A  928B               	bcf	3979,1,c	;volatile
   997  00168C  9294               	bcf	3988,1,c	;volatile
   998  00168E  8296               	bsf	3990,1,c	;volatile
   999  001690  8094               	bsf	3988,0,c	;volatile
  1000  001692  8496               	bsf	3990,2,c	;volatile
  1001                           
  1002                           ;main.c: 134: ikb_init();
  1003  001694  EC31  F00D         	call	_ikb_init	;wreg free
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;main.c: 135: disp7s_init();
  1007  001698  ECE2  F011         	call	_disp7s_init	;wreg free
  1008                           
  1009                           ;main.c: 136: pulsonic_init();
  1010  00169C  ECB2  F011         	call	_pulsonic_init	;wreg free
  1011                           
  1012                           ; BSR set to: 1
  1013                           ;main.c: 138: unlock.kb = 1;
  1014  0016A0  0100               	movlb	0	; () banked
  1015  0016A2  81CB               	bsf	_unlock& (0+255),0,b
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;main.c: 140: unlock.visMode = 0;
  1019  0016A4  95CB               	bcf	_unlock& (0+255),2,b
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;main.c: 143: unlock.autoMode = 0;
  1023  0016A6  93CB               	bcf	_unlock& (0+255),1,b
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;main.c: 148: machState = MACHSTATE_RUNNING;
  1027  0016A8  0E01               	movlw	1
  1028  0016AA  6FCA               	movwf	_machState& (0+255),b
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 151: GIE = 1;
  1032  0016AC  8EF2               	bsf	4082,7,c	;volatile
  1033  0016AE                     l6187:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;main.c: 153: {;main.c: 154: if (isr_flag.f1ms)
  1037  0016AE  A1CC               	btfss	_isr_flag& (0+255),0,b	;volatile
  1038  0016B0  D002               	goto	l129
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;main.c: 155: {;main.c: 156: isr_flag.f1ms = 0;
  1042  0016B2  91CC               	bcf	_isr_flag& (0+255),0,b	;volatile
  1043                           
  1044                           ;main.c: 157: smain.f.f1ms = 1;
  1045  0016B4  8047               	bsf	_smain,0,c	;volatile
  1046  0016B6                     l129:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 158: };main.c: 159: if (smain.f.f1ms)
  1050  0016B6  A047               	btfss	_smain,0,c	;volatile
  1051  0016B8  D013               	goto	l6205
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;main.c: 160: {;main.c: 161: if (++c_access_kb == 20)
  1055  0016BA  2A41               	incf	main@c_access_kb,f,c
  1056  0016BC  0E14               	movlw	20
  1057  0016BE  1841               	xorwf	main@c_access_kb,w,c
  1058  0016C0  A4D8               	btfss	status,2,c
  1059  0016C2  D005               	goto	l6199
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;main.c: 162: {;main.c: 163: c_access_kb = 0;
  1063  0016C4  0E00               	movlw	0
  1064  0016C6  6E41               	movwf	main@c_access_kb,c
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 164: if (unlock.kb)
  1068  0016C8  B1CB               	btfsc	_unlock& (0+255),0,b
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;main.c: 165: {ikb_job();}
  1072  0016CA  EC94  F015         	call	_ikb_job	;wreg free
  1073  0016CE                     l6199:
  1074                           
  1075                           ;main.c: 166: };main.c: 167: if (++c_access_disp == 3)
  1076  0016CE  2A42               	incf	main@c_access_disp,f,c
  1077  0016D0  0E03               	movlw	3
  1078  0016D2  1842               	xorwf	main@c_access_disp,w,c
  1079  0016D4  A4D8               	btfss	status,2,c
  1080  0016D6  D004               	goto	l6205
  1081                           
  1082                           ;main.c: 168: {;main.c: 169: c_access_disp = 0;
  1083  0016D8  0E00               	movlw	0
  1084  0016DA  6E42               	movwf	main@c_access_disp,c
  1085                           
  1086                           ;main.c: 170: disp7s_job();
  1087  0016DC  EC2D  F010         	call	_disp7s_job	;wreg free
  1088  0016E0                     l6205:
  1089                           
  1090                           ;main.c: 171: };main.c: 172: };main.c: 174: check_startSignal();
  1091  0016E0  EC11  F012         	call	_check_startSignal	;wreg free
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;main.c: 175: check_oilLevel();
  1095  0016E4  EC3C  F012         	call	_check_oilLevel	;wreg free
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;main.c: 176: errorHandler_queue();
  1099  0016E8  ECE3  F00D         	call	_errorHandler_queue	;wreg free
  1100                           
  1101                           ;main.c: 178: if (machState == MACHSTATE_RUNNING)
  1102  0016EC  0100               	movlb	0	; () banked
  1103  0016EE  05CA               	decf	_machState& (0+255),w,b
  1104  0016F0  A4D8               	btfss	status,2,c
  1105  0016F2  D03B               	goto	l6251
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 179: {;main.c: 181: if (unlock.autoMode)
  1109  0016F4  A3CB               	btfss	_unlock& (0+255),1,b
  1110  0016F6  D020               	goto	l6235
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;main.c: 182: {;main.c: 183: codapp = autoMode_job();
  1114  0016F8  EC89  F00E         	call	_autoMode_job	;wreg free
  1115  0016FC  6E43               	movwf	main@codapp,c
  1116                           
  1117                           ;main.c: 185: if (codapp == 1)
  1118  0016FE  0443               	decf	main@codapp,w,c
  1119  001700  A4D8               	btfss	status,2,c
  1120  001702  D007               	goto	l6223
  1121                           
  1122                           ;main.c: 186: {;main.c: 187: smain.focus.kb = FOCUS_KB_VISMODE;
  1123  001704  0E02               	movlw	2
  1124  001706  6E48               	movwf	_smain+1,c	;volatile
  1125                           
  1126                           ;main.c: 188: disp_owner = DISPOWNER_VISMODE;
  1127  001708  0E01               	movlw	1
  1128  00170A  6E50               	movwf	_disp_owner,c
  1129                           
  1130                           ;main.c: 189: unlock.visMode = 1;
  1131  00170C  0100               	movlb	0	; () banked
  1132  00170E  85CB               	bsf	_unlock& (0+255),2,b
  1133                           
  1134                           ;main.c: 190: }
  1135  001710  D013               	goto	l6235
  1136  001712                     l6223:
  1137                           
  1138                           ;main.c: 191: else if (codapp == 2)
  1139  001712  0E02               	movlw	2
  1140  001714  1843               	xorwf	main@codapp,w,c
  1141  001716  A4D8               	btfss	status,2,c
  1142  001718  D00F               	goto	l6235
  1143                           
  1144                           ;main.c: 192: {;main.c: 193: mpap.mode = MPAP_STALL_MODE;
  1145  00171A  0E01               	movlw	1
  1146  00171C  0100               	movlb	0	; () banked
  1147  00171E  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  1148                           
  1149                           ;main.c: 195: machState = MACHSTATE_CONFIG;
  1150  001720  0E02               	movlw	2
  1151  001722  6FCA               	movwf	_machState& (0+255),b
  1152                           
  1153                           ;main.c: 197: smain.focus.kb = FOCUS_KB_CONFIGMODE;
  1154  001724  0E03               	movlw	3
  1155  001726  6E48               	movwf	_smain+1,c	;volatile
  1156                           
  1157                           ;main.c: 198: disp_owner = DISPOWNER_CONFIGMODE;
  1158  001728  0E02               	movlw	2
  1159  00172A  6E50               	movwf	_disp_owner,c
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;main.c: 199: unlock.visMode = 0;
  1163  00172C  95CB               	bcf	_unlock& (0+255),2,b
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;main.c: 200: unlock.autoMode = 0;
  1167  00172E  93CB               	bcf	_unlock& (0+255),1,b
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;main.c: 201: configMode_init(0x0);
  1171  001730  0E00               	movlw	0
  1172  001732  EC8E  F015         	call	_configMode_init
  1173  001736  8A89               	bsf	3977,5,c	;volatile
  1174  001738                     l6235:
  1175                           
  1176                           ;main.c: 203: };main.c: 204: };main.c: 205: if (unlock.visMode)
  1177  001738  0100               	movlb	0	; () banked
  1178  00173A  A5CB               	btfss	_unlock& (0+255),2,b
  1179  00173C  D022               	goto	l6259
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;main.c: 206: {;main.c: 207: codapp = visMode_job();
  1183  00173E  EC66  F014         	call	_visMode_job	;wreg free
  1184  001742  6E43               	movwf	main@codapp,c
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;main.c: 209: if (codapp == 1)
  1188  001744  0443               	decf	main@codapp,w,c
  1189  001746  A4D8               	btfss	status,2,c
  1190  001748  D009               	goto	l6247
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;main.c: 210: {;main.c: 211: smain.focus.kb = FOCUS_KB_AUTOMODE;
  1194  00174A  0E01               	movlw	1
  1195  00174C  6E48               	movwf	_smain+1,c	;volatile
  1196                           
  1197                           ;main.c: 212: disp_owner = DISPOWNER_AUTOMODE;
  1198  00174E  0E00               	movlw	0
  1199  001750  6E50               	movwf	_disp_owner,c
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;main.c: 213: unlock.visMode = 0;
  1203  001752  95CB               	bcf	_unlock& (0+255),2,b
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main.c: 215: autoMode_init(AUTOMODE_INIT_CONTINUE);
  1207  001754  0E01               	movlw	1
  1208  001756  EC1E  F014         	call	_autoMode_init
  1209                           
  1210                           ;main.c: 216: }
  1211  00175A  D013               	goto	l6259
  1212  00175C                     l6247:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 217: else if (codapp == 2)
  1216  00175C  0E02               	movlw	2
  1217  00175E  1843               	xorwf	main@codapp,w,c
  1218  001760  A4D8               	btfss	status,2,c
  1219  001762  D00F               	goto	l6259
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;main.c: 218: {;main.c: 219: machState = MACHSTATE_CONFIG;
  1223  001764  0E02               	movlw	2
  1224  001766  6FCA               	movwf	_machState& (0+255),b
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;main.c: 220: };main.c: 221: };main.c: 222: }
  1228  001768  D00C               	goto	l6259
  1229  00176A                     l6251:
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;main.c: 223: else if (machState == MACHSTATE_CONFIG)
  1233  00176A  0E02               	movlw	2
  1234  00176C  19CA               	xorwf	_machState& (0+255),w,b
  1235  00176E  A4D8               	btfss	status,2,c
  1236  001770  D008               	goto	l6259
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;main.c: 224: {;main.c: 225: if (configMode_job())
  1240  001772  EC7D  F014         	call	_configMode_job	;wreg free
  1241  001776  0900               	iorlw	0
  1242  001778  B4D8               	btfsc	status,2,c
  1243  00177A  D003               	goto	l6259
  1244                           
  1245                           ;main.c: 226: {;main.c: 227: ps_autoMode_start();
  1246  00177C  ECEC  F014         	call	_ps_autoMode_start	;wreg free
  1247                           
  1248                           ; BSR set to: 0
  1249  001780  9A89               	bcf	3977,5,c	;volatile
  1250  001782                     l6259:
  1251                           
  1252                           ;main.c: 230: };main.c: 231: };main.c: 233: pump_job();
  1253  001782  EC4C  F011         	call	_pump_job	;wreg free
  1254                           
  1255                           ;main.c: 234: mpap_sych();
  1256  001786  EC6A  F00F         	call	_mpap_sych	;wreg free
  1257                           
  1258                           ;main.c: 237: smain.f.f1ms = 0;
  1259  00178A  9047               	bcf	_smain,0,c	;volatile
  1260                           
  1261                           ;main.c: 238: ikb_flush();
  1262  00178C  ECCC  F015         	call	_ikb_flush	;wreg free
  1263  001790  D78E               	goto	l6187
  1264  001792                     __end_of_main:
  1265                           	opt callstack 0
  1266                           
  1267 ;; *************** function _visMode_job *****************
  1268 ;; Defined at:
  1269 ;;		line 26 in file "visualizerMode.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  cod_ret         1   63[COMRAM] char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      char 
  1276 ;; Registers used:
  1277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 3F/0
  1280 ;;		On exit  : 3F/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1286 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1287 ;;Total ram usage:        1 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:   11
  1290 ;; This function calls:
  1291 ;;		_visMode_disp
  1292 ;;		_visMode_kb
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text1
  1299  0028CC                     __ptext1:
  1300                           	opt callstack 0
  1301  0028CC                     _visMode_job:
  1302                           	opt callstack 19
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;visualizerMode.c: 28: int8_t cod_ret = 0;
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;incstack = 0
  1309  0028CC  0E00               	movlw	0
  1310  0028CE  6E40               	movwf	visMode_job@cod_ret,c
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;visualizerMode.c: 30: if (smain.focus.kb == FOCUS_KB_VISMODE)
  1314  0028D0  0E02               	movlw	2
  1315  0028D2  1848               	xorwf	_smain+1,w,c	;volatile
  1316  0028D4  A4D8               	btfss	status,2,c
  1317  0028D6  D003               	goto	l6031
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;visualizerMode.c: 31: {;visualizerMode.c: 32: cod_ret = visMode_kb();
  1321  0028D8  EC22  F00F         	call	_visMode_kb	;wreg free
  1322  0028DC  6E40               	movwf	visMode_job@cod_ret,c
  1323  0028DE                     l6031:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;visualizerMode.c: 33: };visualizerMode.c: 35: if ( visMode.disp7s_accessReq == 1)
  1327  0028DE  05BD               	decf	_visMode& (0+255),w,b
  1328  0028E0  A4D8               	btfss	status,2,c
  1329  0028E2  D009               	goto	l6039
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;visualizerMode.c: 36: {;visualizerMode.c: 37: if (disp_owner == DISPOWNER_VISMODE)
  1333  0028E4  0450               	decf	_disp_owner,w,c
  1334  0028E6  A4D8               	btfss	status,2,c
  1335  0028E8  D003               	goto	l6037
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;visualizerMode.c: 38: {;visualizerMode.c: 39: visMode_disp(visMode.numVista);
  1339  0028EA  51BE               	movf	(_visMode+1)& (0+255),w,b
  1340  0028EC  EC69  F010         	call	_visMode_disp
  1341  0028F0                     l6037:
  1342                           
  1343                           ;visualizerMode.c: 40: };visualizerMode.c: 41: visMode.disp7s_accessReq = 0;
  1344  0028F0  0E00               	movlw	0
  1345  0028F2  0100               	movlb	0	; () banked
  1346  0028F4  6FBD               	movwf	_visMode& (0+255),b
  1347  0028F6                     l6039:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;visualizerMode.c: 42: };visualizerMode.c: 44: return cod_ret;
  1351  0028F6  5040               	movf	visMode_job@cod_ret,w,c
  1352                           
  1353                           ; BSR set to: 0
  1354  0028F8  0012               	return		;funcret
  1355  0028FA                     __end_of_visMode_job:
  1356                           	opt callstack 0
  1357                           
  1358 ;; *************** function _visMode_kb *****************
  1359 ;; Defined at:
  1360 ;;		line 46 in file "visualizerMode.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  cod_ret         1   11[COMRAM] char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      char 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 3F/0
  1371 ;;		On exit  : 3F/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0
  1375 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1377 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1378 ;;Total ram usage:        1 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    6
  1381 ;; This function calls:
  1382 ;;		_ikb_key_is_ready2read
  1383 ;;		_ikb_key_was_read
  1384 ;; This function is called by:
  1385 ;;		_visMode_job
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text2
  1390  001E44                     __ptext2:
  1391                           	opt callstack 0
  1392  001E44                     _visMode_kb:
  1393                           	opt callstack 23
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;visualizerMode.c: 48: int8_t cod_ret = 0;
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;incstack = 0
  1400  001E44  0E00               	movlw	0
  1401  001E46  6E0C               	movwf	visMode_kb@cod_ret,c
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;visualizerMode.c: 50: if (ikb_key_is_ready2read(0))
  1405  001E48  0E00               	movlw	0
  1406  001E4A  EC1A  F015         	call	_ikb_key_is_ready2read
  1407  001E4E  0900               	iorlw	0
  1408  001E50  B4D8               	btfsc	status,2,c
  1409  001E52  D010               	goto	l5657
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;visualizerMode.c: 51: {;visualizerMode.c: 52: ikb_key_was_read(0);
  1413  001E54  0E00               	movlw	0
  1414  001E56  EC4E  F015         	call	_ikb_key_was_read
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;visualizerMode.c: 54: if (++visMode.numVista >= (8+1))
  1418  001E5A  2BBE               	incf	(_visMode+1)& (0+255),f,b
  1419  001E5C  51BE               	movf	(_visMode+1)& (0+255),w,b
  1420  001E5E  0A80               	xorlw	128
  1421  001E60  0F77               	addlw	-137
  1422  001E62  A0D8               	btfss	status,0,c
  1423  001E64  D005               	goto	l5655
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;visualizerMode.c: 55: {;visualizerMode.c: 56: visMode.numVista = 0x00;
  1427  001E66  0E00               	movlw	0
  1428  001E68  6FBE               	movwf	(_visMode+1)& (0+255),b
  1429                           
  1430                           ;visualizerMode.c: 57: cod_ret = 1;
  1431  001E6A  0E01               	movlw	1
  1432  001E6C  6E0C               	movwf	visMode_kb@cod_ret,c
  1433                           
  1434                           ;visualizerMode.c: 58: }
  1435  001E6E  D002               	goto	l5657
  1436  001E70                     l5655:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;visualizerMode.c: 59: else;visualizerMode.c: 60: {;visualizerMode.c: 61: visMode.disp7s
      +                          _accessReq = 1;
  1440  001E70  0E01               	movlw	1
  1441  001E72  6FBD               	movwf	_visMode& (0+255),b
  1442  001E74                     l5657:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;visualizerMode.c: 62: };visualizerMode.c: 63: };visualizerMode.c: 65: if (ikb_key_is_re
      +                          ady2read(1))
  1446  001E74  0E01               	movlw	1
  1447  001E76  EC1A  F015         	call	_ikb_key_is_ready2read
  1448  001E7A  0900               	iorlw	0
  1449  001E7C  B4D8               	btfsc	status,2,c
  1450  001E7E  D00D               	goto	l5667
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;visualizerMode.c: 66: {;visualizerMode.c: 67: ikb_key_was_read(1);
  1454  001E80  0E01               	movlw	1
  1455  001E82  EC4E  F015         	call	_ikb_key_was_read
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;visualizerMode.c: 69: if (--visMode.numVista < 0)
  1459  001E86  07BE               	decf	(_visMode+1)& (0+255),f,b
  1460  001E88  AFBE               	btfss	(_visMode+1)& (0+255),7,b
  1461  001E8A  D005               	goto	l5665
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;visualizerMode.c: 70: {;visualizerMode.c: 71: visMode.numVista = (8+1)-1;
  1465  001E8C  0E08               	movlw	8
  1466  001E8E  6FBE               	movwf	(_visMode+1)& (0+255),b
  1467                           
  1468                           ;visualizerMode.c: 72: cod_ret = 1;
  1469  001E90  0E01               	movlw	1
  1470  001E92  6E0C               	movwf	visMode_kb@cod_ret,c
  1471                           
  1472                           ;visualizerMode.c: 73: }
  1473  001E94  D002               	goto	l5667
  1474  001E96                     l5665:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;visualizerMode.c: 74: else;visualizerMode.c: 75: {;visualizerMode.c: 76: visMode.disp7s
      +                          _accessReq = 1;
  1478  001E96  0E01               	movlw	1
  1479  001E98  6FBD               	movwf	_visMode& (0+255),b
  1480  001E9A                     l5667:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;visualizerMode.c: 77: };visualizerMode.c: 78: };visualizerMode.c: 79: if (ikb_key_is_re
      +                          ady2read(2))
  1484  001E9A  0E02               	movlw	2
  1485  001E9C  EC1A  F015         	call	_ikb_key_is_ready2read
  1486  001EA0  0900               	iorlw	0
  1487  001EA2  B4D8               	btfsc	status,2,c
  1488  001EA4  D003               	goto	l890
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;visualizerMode.c: 80: {;visualizerMode.c: 81: ikb_key_was_read(2);
  1492  001EA6  0E02               	movlw	2
  1493  001EA8  EC4E  F015         	call	_ikb_key_was_read
  1494  001EAC                     l890:
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;visualizerMode.c: 83: };visualizerMode.c: 84: if (ikb_key_is_ready2read(3))
  1498  001EAC  0E03               	movlw	3
  1499  001EAE  EC1A  F015         	call	_ikb_key_is_ready2read
  1500  001EB2  0900               	iorlw	0
  1501  001EB4  B4D8               	btfsc	status,2,c
  1502  001EB6  D003               	goto	l891
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;visualizerMode.c: 85: {;visualizerMode.c: 86: ikb_key_was_read(3);
  1506  001EB8  0E03               	movlw	3
  1507  001EBA  EC4E  F015         	call	_ikb_key_was_read
  1508  001EBE                     l891:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;visualizerMode.c: 88: };visualizerMode.c: 89: if (ikb_key_is_ready2read(4))
  1512  001EBE  0E04               	movlw	4
  1513  001EC0  EC1A  F015         	call	_ikb_key_is_ready2read
  1514  001EC4  0900               	iorlw	0
  1515  001EC6  B4D8               	btfsc	status,2,c
  1516  001EC8  D003               	goto	l5675
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;visualizerMode.c: 90: {;visualizerMode.c: 91: ikb_key_was_read(4);
  1520  001ECA  0E04               	movlw	4
  1521  001ECC  EC4E  F015         	call	_ikb_key_was_read
  1522  001ED0                     l5675:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;visualizerMode.c: 93: };visualizerMode.c: 94: return cod_ret;
  1526  001ED0  500C               	movf	visMode_kb@cod_ret,w,c
  1527                           
  1528                           ; BSR set to: 0
  1529  001ED2  0012               	return		;funcret
  1530  001ED4                     __end_of_visMode_kb:
  1531                           	opt callstack 0
  1532                           
  1533 ;; *************** function _visMode_disp *****************
  1534 ;; Defined at:
  1535 ;;		line 96 in file "visualizerMode.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  numVista        1    wreg     char 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  numVista        1   62[COMRAM] char 
  1540 ;;  qty             3   59[COMRAM] char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 3F/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1554 ;;Total ram usage:        4 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:   10
  1557 ;; This function calls:
  1558 ;;		_disp7s_modeDisp_writeInt
  1559 ;;		_disp7s_modeDisp_writeText_oil
  1560 ;;		_disp7s_qtyDisp_writeFloat
  1561 ;;		_disp7s_qtyDisp_writeInt
  1562 ;;		_disp7s_qtyDisp_writeText_OFF
  1563 ;; This function is called by:
  1564 ;;		_visMode_job
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text3
  1569  0020D2                     __ptext3:
  1570                           	opt callstack 0
  1571  0020D2                     _visMode_disp:
  1572                           	opt callstack 19
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;incstack = 0
  1576                           ;visMode_disp@numVista stored from wreg
  1577  0020D2  6E3F               	movwf	visMode_disp@numVista,c
  1578                           
  1579                           ;visualizerMode.c: 98: double qty;;visualizerMode.c: 100: if (numVista < 8)
  1580  0020D4  503F               	movf	visMode_disp@numVista,w,c
  1581  0020D6  0A80               	xorlw	128
  1582  0020D8  0F78               	addlw	-136
  1583  0020DA  B0D8               	btfsc	status,0,c
  1584  0020DC  D02A               	goto	l5691
  1585                           
  1586                           ;visualizerMode.c: 101: {;visualizerMode.c: 102: disp7s_modeDisp_writeInt(numVista+1);
  1587  0020DE  0E01               	movlw	1
  1588  0020E0  243F               	addwf	visMode_disp@numVista,w,c
  1589  0020E2  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  1590  0020E4  6AE8               	clrf	wreg,c
  1591  0020E6  B0D8               	btfsc	status,0,c
  1592  0020E8  2AE8               	incf	wreg,f,c
  1593  0020EA  BE3F               	btfsc	visMode_disp@numVista,7,c
  1594  0020EC  06E8               	decf	wreg,f,c
  1595  0020EE  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  1596  0020F0  EC35  F015         	call	_disp7s_modeDisp_writeInt	;wreg free
  1597                           
  1598                           ;visualizerMode.c: 104: qty = pulsonic.nozzle[numVista].Q_mlh;
  1599  0020F4  503F               	movf	visMode_disp@numVista,w,c
  1600  0020F6  0D06               	mullw	6
  1601  0020F8  0E06               	movlw	low (_pulsonic+6)
  1602  0020FA  24F3               	addwf	prodl,w,c
  1603  0020FC  6ED9               	movwf	fsr2l,c
  1604  0020FE  0E01               	movlw	high (_pulsonic+6)
  1605  002100  20F4               	addwfc	prodh,w,c
  1606  002102  6EDA               	movwf	fsr2h,c
  1607  002104  CFDE F03C          	movff	postinc2,visMode_disp@qty
  1608  002108  CFDE F03D          	movff	postinc2,visMode_disp@qty+1
  1609  00210C  CFDD F03E          	movff	postdec2,visMode_disp@qty+2
  1610                           
  1611                           ;visualizerMode.c: 105: if (qty == 0)
  1612  002110  503C               	movf	visMode_disp@qty,w,c
  1613  002112  103D               	iorwf	visMode_disp@qty+1,w,c
  1614  002114  103E               	iorwf	visMode_disp@qty+2,w,c
  1615  002116  A4D8               	btfss	status,2,c
  1616  002118  D003               	goto	l5689
  1617                           
  1618                           ;visualizerMode.c: 106: {;visualizerMode.c: 107: disp7s_qtyDisp_writeText_OFF();
  1619  00211A  EC6A  F015         	call	_disp7s_qtyDisp_writeText_OFF	;wreg free
  1620                           
  1621                           ;visualizerMode.c: 108: }
  1622  00211E  0012               	return	
  1623  002120                     l5689:
  1624                           
  1625                           ;visualizerMode.c: 109: else;visualizerMode.c: 110: {;visualizerMode.c: 111: disp7s_qtyD
      +                          isp_writeFloat( qty );
  1626  002120  C03C  F141         	movff	visMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  1627  002124  C03D  F142         	movff	visMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  1628  002128  C03E  F143         	movff	visMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  1629  00212C  EC0B  F015         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  1630  002130  0012               	return	
  1631  002132                     l5691:
  1632                           
  1633                           ;visualizerMode.c: 114: else;visualizerMode.c: 115: {;visualizerMode.c: 116: disp7s_mode
      +                          Disp_writeText_oil();
  1634  002132  EC88  F015         	call	_disp7s_modeDisp_writeText_oil	;wreg free
  1635                           
  1636                           ; BSR set to: 1
  1637                           ;visualizerMode.c: 117: disp7s_qtyDisp_writeInt( pulsonic.oil.viscosity );
  1638  002136  5137               	movf	(_pulsonic+55)& (0+255),w,b
  1639  002138  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  1640  00213A  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  1641  00213C  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  1642  00213E  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  1643  002140  EC28  F015         	call	_disp7s_qtyDisp_writeInt	;wreg free
  1644  002144  0012               	return		;funcret
  1645  002146                     __end_of_visMode_disp:
  1646                           	opt callstack 0
  1647                           
  1648 ;; *************** function _pump_job *****************
  1649 ;; Defined at:
  1650 ;;		line 22 in file "pump.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  cod_ret         1    0        char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      char 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1668 ;;Total ram usage:        1 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    5
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text4
  1679  002298                     __ptext4:
  1680                           	opt callstack 0
  1681  002298                     _pump_job:
  1682                           	opt callstack 25
  1683                           
  1684                           ;pump.c: 25: static int8_t c;;pump.c: 27: if (pump.ticks > 0)
  1685                           
  1686                           ;incstack = 0
  1687  002298  5044               	movf	_pump,w,c
  1688  00229A  1045               	iorwf	_pump+1,w,c
  1689  00229C  B4D8               	btfsc	status,2,c
  1690  00229E  0012               	return	
  1691                           
  1692                           ;pump.c: 28: {;pump.c: 29: if (pump.sm0 == 0)
  1693  0022A0  5046               	movf	_pump+2,w,c
  1694  0022A2  A4D8               	btfss	status,2,c
  1695  0022A4  D006               	goto	l6073
  1696  0022A6  908D               	bcf	3981,0,c	;volatile
  1697                           
  1698                           ;pump.c: 32: c = 0x0;
  1699  0022A8  0E00               	movlw	0
  1700  0022AA  0100               	movlb	0	; () banked
  1701  0022AC  6FC1               	movwf	pump_job@c& (0+255),b
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;pump.c: 33: pump.sm0++;
  1705  0022AE  2A46               	incf	_pump+2,f,c
  1706                           
  1707                           ;pump.c: 34: }
  1708  0022B0  0012               	return	
  1709  0022B2                     l6073:
  1710                           
  1711                           ;pump.c: 35: else if (pump.sm0 == 1)
  1712  0022B2  0446               	decf	_pump+2,w,c
  1713  0022B4  A4D8               	btfss	status,2,c
  1714  0022B6  D00D               	goto	l6085
  1715                           
  1716                           ;pump.c: 36: {;pump.c: 37: if (smain.f.f1ms)
  1717  0022B8  A047               	btfss	_smain,0,c	;volatile
  1718  0022BA  0012               	return	
  1719                           
  1720                           ;pump.c: 38: {;pump.c: 39: if (++c == 50)
  1721  0022BC  0100               	movlb	0	; () banked
  1722  0022BE  2BC1               	incf	pump_job@c& (0+255),f,b
  1723  0022C0  0E32               	movlw	50
  1724  0022C2  19C1               	xorwf	pump_job@c& (0+255),w,b
  1725  0022C4  A4D8               	btfss	status,2,c
  1726  0022C6  0012               	return	
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;pump.c: 40: {;pump.c: 41: c=0x00;
  1730  0022C8  0E00               	movlw	0
  1731  0022CA  6FC1               	movwf	pump_job@c& (0+255),b
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;pump.c: 42: pump.sm0++;
  1735  0022CC  2A46               	incf	_pump+2,f,c
  1736                           
  1737                           ; BSR set to: 0
  1738  0022CE  808D               	bsf	3981,0,c	;volatile
  1739                           
  1740                           ;pump.c: 44: };pump.c: 45: };pump.c: 46: }
  1741  0022D0  0012               	return	
  1742  0022D2                     l6085:
  1743                           
  1744                           ;pump.c: 47: else if (pump.sm0 == 2)
  1745  0022D2  0E02               	movlw	2
  1746  0022D4  1846               	xorwf	_pump+2,w,c
  1747  0022D6  A4D8               	btfss	status,2,c
  1748  0022D8  0012               	return	
  1749                           
  1750                           ;pump.c: 48: {;pump.c: 49: if (smain.f.f1ms)
  1751  0022DA  A047               	btfss	_smain,0,c	;volatile
  1752  0022DC  0012               	return	
  1753                           
  1754                           ;pump.c: 50: {;pump.c: 51: if (++c == 50)
  1755  0022DE  0100               	movlb	0	; () banked
  1756  0022E0  2BC1               	incf	pump_job@c& (0+255),f,b
  1757  0022E2  0E32               	movlw	50
  1758  0022E4  19C1               	xorwf	pump_job@c& (0+255),w,b
  1759  0022E6  A4D8               	btfss	status,2,c
  1760  0022E8  0012               	return	
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;pump.c: 52: {;pump.c: 53: c=0x00;
  1764  0022EA  0E00               	movlw	0
  1765  0022EC  6FC1               	movwf	pump_job@c& (0+255),b
  1766                           
  1767                           ;pump.c: 54: pump.sm0 = 0x00;
  1768  0022EE  0E00               	movlw	0
  1769  0022F0  6E46               	movwf	_pump+2,c
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;pump.c: 56: if (--pump.ticks == 0)
  1773  0022F2  0644               	decf	_pump,f,c
  1774  0022F4  A0D8               	btfss	status,0,c
  1775  0022F6  0645               	decf	_pump+1,f,c
  1776  0022F8  5044               	movf	_pump,w,c
  1777  0022FA  1045               	iorwf	_pump+1,w,c
  1778  0022FC  B4D8               	btfsc	status,2,c
  1779  0022FE  0012               	return	
  1780  002300  0012               	return	
  1781  002302                     __end_of_pump_job:
  1782                           	opt callstack 0
  1783                           
  1784 ;; *************** function _pulsonic_init *****************
  1785 ;; Defined at:
  1786 ;;		line 7 in file "pulsonic.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  i               1   10[COMRAM] char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 3F/1
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1800 ;;      Params:         0       0       0       0       0       0       0       0       0
  1801 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1803 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1804 ;;Total ram usage:        1 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    5
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text5
  1815  002364                     __ptext5:
  1816                           	opt callstack 0
  1817  002364                     _pulsonic_init:
  1818                           	opt callstack 25
  1819                           
  1820                           ;pulsonic.c: 9: int8_t i;;pulsonic.c: 10: pulsonic.dist_total_time = 60;
  1821                           
  1822                           ;incstack = 0
  1823  002364  0E00               	movlw	0
  1824  002366  0101               	movlb	1	; () banked
  1825  002368  6F03               	movwf	(_pulsonic+3)& (0+255),b
  1826  00236A  0E3C               	movlw	60
  1827  00236C  6F02               	movwf	(_pulsonic+2)& (0+255),b
  1828                           
  1829                           ;pulsonic.c: 14: for (i=0; i< 8; i++)
  1830  00236E  0E00               	movlw	0
  1831  002370  6E0B               	movwf	pulsonic_init@i,c
  1832  002372                     l5845:
  1833                           
  1834                           ;pulsonic.c: 15: {;pulsonic.c: 16: pulsonic.nozzle[i].Q_mlh = 2.4f;
  1835  002372  500B               	movf	pulsonic_init@i,w,c
  1836  002374  0D06               	mullw	6
  1837  002376  0E06               	movlw	low (_pulsonic+6)
  1838  002378  24F3               	addwf	prodl,w,c
  1839  00237A  6ED9               	movwf	fsr2l,c
  1840  00237C  0E01               	movlw	high (_pulsonic+6)
  1841  00237E  20F4               	addwfc	prodh,w,c
  1842  002380  6EDA               	movwf	fsr2h,c
  1843  002382  0E9A               	movlw	154
  1844  002384  6EDE               	movwf	postinc2,c
  1845  002386  0E19               	movlw	25
  1846  002388  6EDE               	movwf	postinc2,c
  1847  00238A  0E40               	movlw	64
  1848  00238C  6EDE               	movwf	postinc2,c
  1849  00238E  2A0B               	incf	pulsonic_init@i,f,c
  1850  002390  500B               	movf	pulsonic_init@i,w,c
  1851  002392  0A80               	xorlw	128
  1852  002394  0F78               	addlw	-136
  1853  002396  A0D8               	btfss	status,0,c
  1854  002398  D7EC               	goto	l5845
  1855                           
  1856                           ;pulsonic.c: 17: };pulsonic.c: 18: pulsonic.oil.viscosity = OIL_VISCOSITY[0];
  1857  00239A  0E0B               	movlw	low _OIL_VISCOSITY
  1858  00239C  6EF6               	movwf	tblptrl,c
  1859  00239E                     	if	1	;There is more than 1 active tblptr byte
  1860  00239E  0E08               	movlw	high _OIL_VISCOSITY
  1861  0023A0  6EF7               	movwf	tblptrh,c
  1862  0023A2                     	endif
  1863  0023A2                     	if	0	;There are less than 3 active tblptr bytes
  1864  0023A2                     	endif
  1865  0023A2  0008               	tblrd		*
  1866  0023A4  CFF5 F137          	movff	tablat,_pulsonic+55
  1867                           
  1868                           ;pulsonic.c: 20: pulsonic.nozzle[3].Q_mlh = 0;
  1869  0023A8  0E00               	movlw	0
  1870  0023AA  0101               	movlb	1	; () banked
  1871  0023AC  6F18               	movwf	(_pulsonic+24)& (0+255),b
  1872  0023AE  0E00               	movlw	0
  1873  0023B0  6F19               	movwf	(_pulsonic+25)& (0+255),b
  1874  0023B2  0E00               	movlw	0
  1875  0023B4  6F1A               	movwf	(_pulsonic+26)& (0+255),b
  1876                           
  1877                           ; BSR set to: 1
  1878                           ;pulsonic.c: 21: pulsonic.nozzle[5].Q_mlh = 0;
  1879  0023B6  0E00               	movlw	0
  1880  0023B8  6F24               	movwf	(_pulsonic+36)& (0+255),b
  1881  0023BA  0E00               	movlw	0
  1882  0023BC  6F25               	movwf	(_pulsonic+37)& (0+255),b
  1883  0023BE  0E00               	movlw	0
  1884  0023C0  6F26               	movwf	(_pulsonic+38)& (0+255),b
  1885                           
  1886                           ; BSR set to: 1
  1887  0023C2  0012               	return		;funcret
  1888  0023C4                     __end_of_pulsonic_init:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _mpap_sych *****************
  1892 ;; Defined at:
  1893 ;;		line 159 in file "mpap.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    5
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text6
  1922  001ED4                     __ptext6:
  1923                           	opt callstack 0
  1924  001ED4                     _mpap_sych:
  1925                           	opt callstack 25
  1926                           
  1927                           ;mpap.c: 161: static int8_t sm0;;mpap.c: 162: static int8_t c;;mpap.c: 163: if (sm0 == 0
      +                          )
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;incstack = 0
  1931  001ED4  504F               	movf	mpap_sych@sm0,w,c
  1932  001ED6  A4D8               	btfss	status,2,c
  1933  001ED8  D011               	goto	l6111
  1934                           
  1935                           ;mpap.c: 164: {;mpap.c: 165: if ((mpap.mode == MPAP_NORMAL_MODE) || (mpap.mode == MPAP_H
      +                          OMMING_MODE))
  1936  001EDA  0E03               	movlw	3
  1937  001EDC  0100               	movlb	0	; () banked
  1938  001EDE  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  1939  001EE0  B4D8               	btfsc	status,2,c
  1940  001EE2  D004               	goto	u7780
  1941                           
  1942                           ; BSR set to: 0
  1943  001EE4  0E02               	movlw	2
  1944  001EE6  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  1945  001EE8  A4D8               	btfss	status,2,c
  1946  001EEA  D002               	goto	l6107
  1947  001EEC                     u7780:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;mpap.c: 166: {;mpap.c: 167: sm0++;
  1951  001EEC  2A4F               	incf	mpap_sych@sm0,f,c
  1952                           
  1953                           ;mpap.c: 168: }
  1954  001EEE  0012               	return	
  1955  001EF0                     l6107:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;mpap.c: 169: else if (mpap.mode == MPAP_STALL_MODE)
  1959  001EF0  05B7               	decf	(_mpap+7)& (0+255),w,b	;volatile
  1960  001EF2  A4D8               	btfss	status,2,c
  1961  001EF4  0012               	return	
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;mpap.c: 170: {;mpap.c: 171: sm0 = 3;
  1965  001EF6  0E03               	movlw	3
  1966  001EF8  6E4F               	movwf	mpap_sych@sm0,c
  1967  001EFA  0012               	return	
  1968  001EFC                     l6111:
  1969                           
  1970                           ;mpap.c: 174: else if (sm0 == 1)
  1971  001EFC  044F               	decf	mpap_sych@sm0,w,c
  1972  001EFE  A4D8               	btfss	status,2,c
  1973  001F00  D014               	goto	l6127
  1974                           
  1975                           ;mpap.c: 175: {;mpap.c: 176: if (mpap.numSteps_tomove == 0)
  1976  001F02  0100               	movlb	0	; () banked
  1977  001F04  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  1978  001F06  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
  1979  001F08  A4D8               	btfss	status,2,c
  1980  001F0A  0012               	return	
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;mpap.c: 177: {;mpap.c: 178: if (mpap.mode == MPAP_HOMMING_MODE)
  1984  001F0C  0E02               	movlw	2
  1985  001F0E  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  1986  001F10  A4D8               	btfss	status,2,c
  1987  001F12  D005               	goto	l6121
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;mpap.c: 179: {;mpap.c: 180: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  1991  001F14  0101               	movlb	1	; () banked
  1992  001F16  A13B               	btfss	(_pulsonic+59)& (0+255),0,b
  1993  001F18  D003               	goto	l6123
  1994                           
  1995                           ; BSR set to: 1
  1996                           ;mpap.c: 181: {;mpap.c: 182: pulsonic.errors.flag.mpap_home_sensor = 0;
  1997  001F1A  913B               	bcf	(_pulsonic+59)& (0+255),0,b
  1998  001F1C  D001               	goto	l6123
  1999  001F1E                     l6121:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;mpap.c: 186: else if (mpap.mode == MPAP_NORMAL_MODE)
  2003  001F1E  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  2004  001F20                     l6123:
  2005                           
  2006                           ;mpap.c: 188: };mpap.c: 189: sm0++;
  2007  001F20  2A4F               	incf	mpap_sych@sm0,f,c
  2008                           
  2009                           ;mpap.c: 190: c = 0;
  2010  001F22  0E00               	movlw	0
  2011  001F24  0100               	movlb	0	; () banked
  2012  001F26  6FC2               	movwf	mpap_sych@c& (0+255),b
  2013  001F28  0012               	return	
  2014  001F2A                     l6127:
  2015                           
  2016                           ;mpap.c: 193: else if (sm0 == 2)
  2017  001F2A  0E02               	movlw	2
  2018  001F2C  184F               	xorwf	mpap_sych@sm0,w,c
  2019  001F2E  A4D8               	btfss	status,2,c
  2020  001F30  D00D               	goto	l6137
  2021                           
  2022                           ;mpap.c: 194: {;mpap.c: 195: if (smain.f.f1ms)
  2023  001F32  A047               	btfss	_smain,0,c	;volatile
  2024  001F34  0012               	return	
  2025                           
  2026                           ;mpap.c: 196: {;mpap.c: 197: if (++c == 10)
  2027  001F36  0100               	movlb	0	; () banked
  2028  001F38  2BC2               	incf	mpap_sych@c& (0+255),f,b
  2029  001F3A  0E0A               	movlw	10
  2030  001F3C  19C2               	xorwf	mpap_sych@c& (0+255),w,b
  2031  001F3E  A4D8               	btfss	status,2,c
  2032  001F40  0012               	return	
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;mpap.c: 198: {;mpap.c: 199: c = 0;
  2036  001F42  0E00               	movlw	0
  2037  001F44  6FC2               	movwf	mpap_sych@c& (0+255),b
  2038                           
  2039                           ;mpap.c: 200: mpap.mode = MPAP_STALL_MODE;
  2040  001F46  0E01               	movlw	1
  2041  001F48  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  2042  001F4A  D7D0               	goto	u7780
  2043  001F4C                     l6137:
  2044                           
  2045                           ;mpap.c: 205: else if (sm0 == 3)
  2046  001F4C  0E03               	movlw	3
  2047  001F4E  184F               	xorwf	mpap_sych@sm0,w,c
  2048  001F50  A4D8               	btfss	status,2,c
  2049  001F52  0012               	return	
  2050                           
  2051                           ;mpap.c: 206: {;mpap.c: 207: if (mpap.mode == MPAP_IDLE_MODE)
  2052  001F54  0100               	movlb	0	; () banked
  2053  001F56  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  2054  001F58  A4D8               	btfss	status,2,c
  2055  001F5A  0012               	return	
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;mpap.c: 208: {;mpap.c: 209: sm0 = 0;
  2059  001F5C  0E00               	movlw	0
  2060  001F5E  6E4F               	movwf	mpap_sych@sm0,c
  2061  001F60  0012               	return		;funcret
  2062  001F62                     __end_of_mpap_sych:
  2063                           	opt callstack 0
  2064                           
  2065 ;; *************** function _ikb_job *****************
  2066 ;; Defined at:
  2067 ;;		line 413 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 3F/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    8
  2088 ;; This function calls:
  2089 ;;		_ikey_parsing
  2090 ;;		_ikey_scan
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text7
  2097  002B28                     __ptext7:
  2098                           	opt callstack 0
  2099  002B28                     _ikb_job:
  2100                           	opt callstack 22
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;ikb.c: 415: ikey_scan();
  2104                           
  2105                           ;incstack = 0
  2106  002B28  EC53  F00A         	call	_ikey_scan	;wreg free
  2107                           
  2108                           ;ikb.c: 416: ikey_parsing();
  2109  002B2C  EC09  F004         	call	_ikey_parsing	;wreg free
  2110  002B30  0012               	return		;funcret
  2111  002B32                     __end_of_ikb_job:
  2112                           	opt callstack 0
  2113                           
  2114 ;; *************** function _ikey_scan *****************
  2115 ;; Defined at:
  2116 ;;		line 448 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  k               1   11[COMRAM] char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 3F/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0
  2131 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2132 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2133 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2134 ;;Total ram usage:        2 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    6
  2137 ;; This function calls:
  2138 ;;		_keyRead_pin_key0
  2139 ;;		_keyRead_pin_key1
  2140 ;;		_keyRead_pin_key2
  2141 ;;		_keyRead_pin_key3
  2142 ;;		_keyRead_pin_key4
  2143 ;; This function is called by:
  2144 ;;		_ikb_job
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text8
  2149  0014A6                     __ptext8:
  2150                           	opt callstack 0
  2151  0014A6                     _ikey_scan:
  2152                           	opt callstack 23
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;ikb.c: 450: int8_t k = 5-1;
  2156                           
  2157                           ;incstack = 0
  2158  0014A6  0E04               	movlw	4
  2159  0014A8  6E0C               	movwf	ikey_scan@k,c
  2160  0014AA                     l5409:
  2161                           
  2162                           ;ikb.c: 452: {;ikb.c: 453: if (key[k].sm0 == 0)
  2163  0014AA  500C               	movf	ikey_scan@k,w,c
  2164  0014AC  0D10               	mullw	16
  2165  0014AE  50F3               	movf	prodl,w,c
  2166  0014B0  0F64               	addlw	low (_key+4)
  2167  0014B2  6ED9               	movwf	fsr2l,c
  2168  0014B4  6ADA               	clrf	fsr2h,c
  2169  0014B6  50DF               	movf	indf2,w,c
  2170  0014B8  A4D8               	btfss	status,2,c
  2171  0014BA  D016               	goto	l5415
  2172                           
  2173                           ;ikb.c: 454: {;ikb.c: 455: if (key[k].keyRead() == 0)
  2174  0014BC  500C               	movf	ikey_scan@k,w,c
  2175  0014BE  0D10               	mullw	16
  2176  0014C0  50F3               	movf	prodl,w,c
  2177  0014C2  0F60               	addlw	low _key
  2178  0014C4  6ED9               	movwf	fsr2l,c
  2179  0014C6  6ADA               	clrf	fsr2h,c
  2180  0014C8  D801               	call	u6278
  2181  0014CA  D00A               	goto	u6279
  2182  0014CC                     u6278:
  2183  0014CC  0005               	push	
  2184  0014CE  6EFA               	movwf	pclath,c
  2185  0014D0  50DE               	movf	postinc2,w,c
  2186  0014D2  6EFD               	movwf	tosl,c
  2187  0014D4  50DE               	movf	postinc2,w,c
  2188  0014D6  6EFE               	movwf	tosh,c
  2189  0014D8  50F8               	movf	tblptru,w,c
  2190  0014DA  6EFF               	movwf	tosu,c
  2191  0014DC  50FA               	movf	pclath,w,c
  2192  0014DE  0012               	return		;indir
  2193  0014E0                     u6279:
  2194  0014E0  0900               	iorlw	0
  2195  0014E2  A4D8               	btfss	status,2,c
  2196  0014E4  D0AC               	goto	l5445
  2197  0014E6  D041               	goto	L1
  2198  0014E8                     l5415:
  2199                           
  2200                           ;ikb.c: 460: else if (key[k].sm0 == 1)
  2201  0014E8  500C               	movf	ikey_scan@k,w,c
  2202  0014EA  0D10               	mullw	16
  2203  0014EC  50F3               	movf	prodl,w,c
  2204  0014EE  0F64               	addlw	low (_key+4)
  2205  0014F0  6ED9               	movwf	fsr2l,c
  2206  0014F2  6ADA               	clrf	fsr2h,c
  2207  0014F4  04DE               	decf	postinc2,w,c
  2208  0014F6  A4D8               	btfss	status,2,c
  2209  0014F8  D040               	goto	l5427
  2210                           
  2211                           ;ikb.c: 461: {;ikb.c: 462: if (++key[k].counter0 == 4)
  2212  0014FA  500C               	movf	ikey_scan@k,w,c
  2213  0014FC  0D10               	mullw	16
  2214  0014FE  50F3               	movf	prodl,w,c
  2215  001500  0F65               	addlw	low (_key+5)
  2216  001502  6ED9               	movwf	fsr2l,c
  2217  001504  6ADA               	clrf	fsr2h,c
  2218  001506  2ADF               	incf	indf2,f,c
  2219  001508  0E04               	movlw	4
  2220  00150A  18DE               	xorwf	postinc2,w,c
  2221  00150C  A4D8               	btfss	status,2,c
  2222  00150E  D097               	goto	l5445
  2223                           
  2224                           ;ikb.c: 463: {;ikb.c: 464: key[k].counter0 = 0x00;
  2225  001510  500C               	movf	ikey_scan@k,w,c
  2226  001512  0D10               	mullw	16
  2227  001514  50F3               	movf	prodl,w,c
  2228  001516  0F65               	addlw	low (_key+5)
  2229  001518  6ED9               	movwf	fsr2l,c
  2230  00151A  6ADA               	clrf	fsr2h,c
  2231  00151C  0E00               	movlw	0
  2232  00151E  6EDF               	movwf	indf2,c
  2233                           
  2234                           ;ikb.c: 466: if (key[k].keyRead() != 0)
  2235  001520  500C               	movf	ikey_scan@k,w,c
  2236  001522  0D10               	mullw	16
  2237  001524  50F3               	movf	prodl,w,c
  2238  001526  0F60               	addlw	low _key
  2239  001528  6ED9               	movwf	fsr2l,c
  2240  00152A  6ADA               	clrf	fsr2h,c
  2241  00152C  D801               	call	u6318
  2242  00152E  D00A               	goto	u6319
  2243  001530                     u6318:
  2244  001530  0005               	push	
  2245  001532  6EFA               	movwf	pclath,c
  2246  001534  50DE               	movf	postinc2,w,c
  2247  001536  6EFD               	movwf	tosl,c
  2248  001538  50DE               	movf	postinc2,w,c
  2249  00153A  6EFE               	movwf	tosh,c
  2250  00153C  50F8               	movf	tblptru,w,c
  2251  00153E  6EFF               	movwf	tosu,c
  2252  001540  50FA               	movf	pclath,w,c
  2253  001542  0012               	return		;indir
  2254  001544                     u6319:
  2255  001544  0900               	iorlw	0
  2256  001546  B4D8               	btfsc	status,2,c
  2257  001548  D008               	goto	l5425
  2258  00154A                     u6320:
  2259                           
  2260                           ;ikb.c: 467: {;ikb.c: 468: key[k].sm0--;
  2261  00154A  500C               	movf	ikey_scan@k,w,c
  2262  00154C  0D10               	mullw	16
  2263  00154E  50F3               	movf	prodl,w,c
  2264  001550  0F64               	addlw	low (_key+4)
  2265  001552  6ED9               	movwf	fsr2l,c
  2266  001554  6ADA               	clrf	fsr2h,c
  2267  001556  06DF               	decf	indf2,f,c
  2268                           
  2269                           ;ikb.c: 469: }
  2270  001558  D072               	goto	l5445
  2271  00155A                     l5425:
  2272                           
  2273                           ;ikb.c: 470: else;ikb.c: 471: {;ikb.c: 472: key[k].bf.state = 1;
  2274  00155A  500C               	movf	ikey_scan@k,w,c
  2275  00155C  0D10               	mullw	16
  2276  00155E  50F3               	movf	prodl,w,c
  2277  001560  0F6A               	addlw	low (_key+10)
  2278  001562  6ED9               	movwf	fsr2l,c
  2279  001564  6ADA               	clrf	fsr2h,c
  2280  001566  0100               	movlb	0	; () banked
  2281  001568  80DF               	bsf	indf2,0,c
  2282  00156A                     L1:
  2283                           
  2284                           ;ikb.c: 473: key[k].sm0++;
  2285  00156A  500C               	movf	ikey_scan@k,w,c
  2286  00156C  0D10               	mullw	16
  2287  00156E  50F3               	movf	prodl,w,c
  2288  001570  0F64               	addlw	low (_key+4)
  2289  001572  6ED9               	movwf	fsr2l,c
  2290  001574  6ADA               	clrf	fsr2h,c
  2291  001576  2ADF               	incf	indf2,f,c
  2292  001578  D062               	goto	l5445
  2293  00157A                     l5427:
  2294                           
  2295                           ;ikb.c: 477: else if (key[k].sm0 == 2)
  2296  00157A  500C               	movf	ikey_scan@k,w,c
  2297  00157C  0D10               	mullw	16
  2298  00157E  50F3               	movf	prodl,w,c
  2299  001580  0F64               	addlw	low (_key+4)
  2300  001582  6ED9               	movwf	fsr2l,c
  2301  001584  6ADA               	clrf	fsr2h,c
  2302  001586  0E02               	movlw	2
  2303  001588  18DE               	xorwf	postinc2,w,c
  2304  00158A  A4D8               	btfss	status,2,c
  2305  00158C  D016               	goto	l5433
  2306                           
  2307                           ;ikb.c: 478: {;ikb.c: 479: if (key[k].keyRead() == 1)
  2308  00158E  500C               	movf	ikey_scan@k,w,c
  2309  001590  0D10               	mullw	16
  2310  001592  50F3               	movf	prodl,w,c
  2311  001594  0F60               	addlw	low _key
  2312  001596  6ED9               	movwf	fsr2l,c
  2313  001598  6ADA               	clrf	fsr2h,c
  2314  00159A  D801               	call	u6348
  2315  00159C  D00A               	goto	u6349
  2316  00159E                     u6348:
  2317  00159E  0005               	push	
  2318  0015A0  6EFA               	movwf	pclath,c
  2319  0015A2  50DE               	movf	postinc2,w,c
  2320  0015A4  6EFD               	movwf	tosl,c
  2321  0015A6  50DE               	movf	postinc2,w,c
  2322  0015A8  6EFE               	movwf	tosh,c
  2323  0015AA  50F8               	movf	tblptru,w,c
  2324  0015AC  6EFF               	movwf	tosu,c
  2325  0015AE  50FA               	movf	pclath,w,c
  2326  0015B0  0012               	return		;indir
  2327  0015B2                     u6349:
  2328  0015B2  06E8               	decf	wreg,f,c
  2329  0015B4  B4D8               	btfsc	status,2,c
  2330  0015B6  D7D9               	goto	L1
  2331  0015B8  D042               	goto	l5445
  2332  0015BA                     l5433:
  2333                           
  2334                           ;ikb.c: 482: else if (key[k].sm0 == 3)
  2335  0015BA  500C               	movf	ikey_scan@k,w,c
  2336  0015BC  0D10               	mullw	16
  2337  0015BE  50F3               	movf	prodl,w,c
  2338  0015C0  0F64               	addlw	low (_key+4)
  2339  0015C2  6ED9               	movwf	fsr2l,c
  2340  0015C4  6ADA               	clrf	fsr2h,c
  2341  0015C6  0E03               	movlw	3
  2342  0015C8  18DE               	xorwf	postinc2,w,c
  2343  0015CA  A4D8               	btfss	status,2,c
  2344  0015CC  D038               	goto	l5445
  2345                           
  2346                           ;ikb.c: 483: {;ikb.c: 484: if (++key[k].counter0 == 4)
  2347  0015CE  500C               	movf	ikey_scan@k,w,c
  2348  0015D0  0D10               	mullw	16
  2349  0015D2  50F3               	movf	prodl,w,c
  2350  0015D4  0F65               	addlw	low (_key+5)
  2351  0015D6  6ED9               	movwf	fsr2l,c
  2352  0015D8  6ADA               	clrf	fsr2h,c
  2353  0015DA  2ADF               	incf	indf2,f,c
  2354  0015DC  0E04               	movlw	4
  2355  0015DE  18DE               	xorwf	postinc2,w,c
  2356  0015E0  A4D8               	btfss	status,2,c
  2357  0015E2  D02D               	goto	l5445
  2358                           
  2359                           ;ikb.c: 485: {;ikb.c: 486: key[k].counter0 = 0x00;
  2360  0015E4  500C               	movf	ikey_scan@k,w,c
  2361  0015E6  0D10               	mullw	16
  2362  0015E8  50F3               	movf	prodl,w,c
  2363  0015EA  0F65               	addlw	low (_key+5)
  2364  0015EC  6ED9               	movwf	fsr2l,c
  2365  0015EE  6ADA               	clrf	fsr2h,c
  2366  0015F0  0E00               	movlw	0
  2367  0015F2  6EDF               	movwf	indf2,c
  2368                           
  2369                           ;ikb.c: 488: if (key[k].keyRead() != 1)
  2370  0015F4  500C               	movf	ikey_scan@k,w,c
  2371  0015F6  0D10               	mullw	16
  2372  0015F8  50F3               	movf	prodl,w,c
  2373  0015FA  0F60               	addlw	low _key
  2374  0015FC  6ED9               	movwf	fsr2l,c
  2375  0015FE  6ADA               	clrf	fsr2h,c
  2376  001600  D801               	call	u6388
  2377  001602  D00A               	goto	u6389
  2378  001604                     u6388:
  2379  001604  0005               	push	
  2380  001606  6EFA               	movwf	pclath,c
  2381  001608  50DE               	movf	postinc2,w,c
  2382  00160A  6EFD               	movwf	tosl,c
  2383  00160C  50DE               	movf	postinc2,w,c
  2384  00160E  6EFE               	movwf	tosh,c
  2385  001610  50F8               	movf	tblptru,w,c
  2386  001612  6EFF               	movwf	tosu,c
  2387  001614  50FA               	movf	pclath,w,c
  2388  001616  0012               	return		;indir
  2389  001618                     u6389:
  2390  001618  06E8               	decf	wreg,f,c
  2391  00161A  A4D8               	btfss	status,2,c
  2392  00161C  D796               	goto	u6320
  2393                           
  2394                           ;ikb.c: 492: else;ikb.c: 493: {;ikb.c: 494: key[k].bf.state = 0;
  2395  00161E  500C               	movf	ikey_scan@k,w,c
  2396  001620  0D10               	mullw	16
  2397  001622  50F3               	movf	prodl,w,c
  2398  001624  0F6A               	addlw	low (_key+10)
  2399  001626  6ED9               	movwf	fsr2l,c
  2400  001628  6ADA               	clrf	fsr2h,c
  2401  00162A  0100               	movlb	0	; () banked
  2402  00162C  90DF               	bcf	indf2,0,c
  2403                           
  2404                           ;ikb.c: 495: key[k].sm0 = 0x00;
  2405  00162E  500C               	movf	ikey_scan@k,w,c
  2406  001630  0D10               	mullw	16
  2407  001632  50F3               	movf	prodl,w,c
  2408  001634  0F64               	addlw	low (_key+4)
  2409  001636  6ED9               	movwf	fsr2l,c
  2410  001638  6ADA               	clrf	fsr2h,c
  2411  00163A  0E00               	movlw	0
  2412  00163C  6EDF               	movwf	indf2,c
  2413  00163E                     l5445:
  2414                           
  2415                           ;ikb.c: 496: };ikb.c: 497: };ikb.c: 498: };ikb.c: 499: }while (--k >= 0);
  2416  00163E  060C               	decf	ikey_scan@k,f,c
  2417  001640  BE0C               	btfsc	ikey_scan@k,7,c
  2418  001642  0012               	return	
  2419  001644  D732               	goto	l5409
  2420  001646                     __end_of_ikey_scan:
  2421                           	opt callstack 0
  2422                           
  2423 ;; *************** function _keyRead_pin_key3 *****************
  2424 ;; Defined at:
  2425 ;;		line 205 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      unsigned char 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2442 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2443 ;;Total ram usage:        0 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    5
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_ikb_init
  2450 ;;		_ikey_scan
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text9
  2455  002B92                     __ptext9:
  2456                           	opt callstack 0
  2457  002B92                     _keyRead_pin_key3:
  2458                           	opt callstack 23
  2459                           
  2460                           ;ikb.c: 207: return ((PORTC & (1<<7))>>7);
  2461                           
  2462                           ;incstack = 0
  2463  002B92  4482               	rlncf	3970,w,c	;volatile
  2464  002B94  0B01               	andlw	1
  2465  002B96  0012               	return		;funcret
  2466  002B98                     __end_of_keyRead_pin_key3:
  2467                           	opt callstack 0
  2468                           
  2469 ;; *************** function _keyRead_pin_key2 *****************
  2470 ;; Defined at:
  2471 ;;		line 201 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      unsigned char 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    5
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_ikb_init
  2496 ;;		_ikey_scan
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text10
  2501  002B32                     __ptext10:
  2502                           	opt callstack 0
  2503  002B32                     _keyRead_pin_key2:
  2504                           	opt callstack 23
  2505                           
  2506                           ;ikb.c: 203: return ((PORTC & (1<<6))>>6);
  2507                           
  2508                           ;incstack = 0
  2509  002B32  4482               	rlncf	3970,w,c	;volatile
  2510  002B34  46E8               	rlncf	wreg,f,c
  2511  002B36  0B03               	andlw	3
  2512  002B38  0B01               	andlw	1
  2513  002B3A  0012               	return		;funcret
  2514  002B3C                     __end_of_keyRead_pin_key2:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _keyRead_pin_key1 *****************
  2518 ;; Defined at:
  2519 ;;		line 197 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      unsigned char 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    5
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_ikb_init
  2544 ;;		_ikey_scan
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text11
  2549  002B3C                     __ptext11:
  2550                           	opt callstack 0
  2551  002B3C                     _keyRead_pin_key1:
  2552                           	opt callstack 23
  2553                           
  2554                           ;ikb.c: 199: return ((PORTC & (1<<5))>>5);
  2555                           
  2556                           ;incstack = 0
  2557  002B3C  3882               	swapf	3970,w,c	;volatile
  2558  002B3E  42E8               	rrncf	wreg,f,c
  2559  002B40  0B07               	andlw	7
  2560  002B42  0B01               	andlw	1
  2561  002B44  0012               	return		;funcret
  2562  002B46                     __end_of_keyRead_pin_key1:
  2563                           	opt callstack 0
  2564                           
  2565 ;; *************** function _keyRead_pin_key0 *****************
  2566 ;; Defined at:
  2567 ;;		line 193 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      unsigned char 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2581 ;;      Params:         0       0       0       0       0       0       0       0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2585 ;;Total ram usage:        0 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    5
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_ikb_init
  2592 ;;		_ikey_scan
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text12
  2597  002B82                     __ptext12:
  2598                           	opt callstack 0
  2599  002B82                     _keyRead_pin_key0:
  2600                           	opt callstack 23
  2601                           
  2602                           ;ikb.c: 195: return ((PORTC & (1<<4))>>4);
  2603                           
  2604                           ;incstack = 0
  2605  002B82  3882               	swapf	3970,w,c	;volatile
  2606  002B84  0B0F               	andlw	15
  2607  002B86  0B01               	andlw	1
  2608  002B88  0012               	return		;funcret
  2609  002B8A                     __end_of_keyRead_pin_key0:
  2610                           	opt callstack 0
  2611                           
  2612 ;; *************** function _keyRead_pin_key4 *****************
  2613 ;; Defined at:
  2614 ;;		line 209 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      unsigned char 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    5
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_ikb_init
  2639 ;;		_ikey_scan
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text13
  2644  002B8A                     __ptext13:
  2645                           	opt callstack 0
  2646  002B8A                     _keyRead_pin_key4:
  2647                           	opt callstack 23
  2648                           
  2649                           ;ikb.c: 211: return ((PORTD & (1<<4))>>4);
  2650                           
  2651                           ;incstack = 0
  2652  002B8A  3883               	swapf	3971,w,c	;volatile
  2653  002B8C  0B0F               	andlw	15
  2654  002B8E  0B01               	andlw	1
  2655  002B90  0012               	return		;funcret
  2656  002B92                     __end_of_keyRead_pin_key4:
  2657                           	opt callstack 0
  2658                           
  2659 ;; *************** function _ikey_parsing *****************
  2660 ;; Defined at:
  2661 ;;		line 544 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  k               1   34[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0
  2676 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2677 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2678 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        5 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    7
  2682 ;; This function calls:
  2683 ;;		___ftge
  2684 ;;		___lwtoft
  2685 ;;		_ikey_is_accessible
  2686 ;; This function is called by:
  2687 ;;		_ikb_job
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text14
  2692  000812                     __ptext14:
  2693                           	opt callstack 0
  2694  000812                     _ikey_parsing:
  2695                           	opt callstack 22
  2696                           
  2697                           ;ikb.c: 546: uint8_t k;;ikb.c: 548: for (k=0; k < 5; k++)
  2698                           
  2699                           ;incstack = 0
  2700  000812  0E00               	movlw	0
  2701  000814  6E23               	movwf	ikey_parsing@k,c
  2702  000816                     l5453:
  2703                           
  2704                           ;ikb.c: 549: {;ikb.c: 550: if ( key[k].sm1 == (0) )
  2705  000816  5023               	movf	ikey_parsing@k,w,c
  2706  000818  0D10               	mullw	16
  2707  00081A  50F3               	movf	prodl,w,c
  2708  00081C  0F66               	addlw	low (_key+6)
  2709  00081E  6ED9               	movwf	fsr2l,c
  2710  000820  6ADA               	clrf	fsr2h,c
  2711  000822  50DF               	movf	indf2,w,c
  2712  000824  A4D8               	btfss	status,2,c
  2713  000826  D08B               	goto	l318
  2714                           
  2715                           ;ikb.c: 551: {;ikb.c: 552: if ( ikey_is_accessible(k) )
  2716  000828  5023               	movf	ikey_parsing@k,w,c
  2717  00082A  EC90  F012         	call	_ikey_is_accessible
  2718  00082E  0900               	iorlw	0
  2719  000830  B4D8               	btfsc	status,2,c
  2720  000832  D085               	goto	l318
  2721                           
  2722                           ;ikb.c: 553: {;ikb.c: 554: if (key[k].bf.state == 1)
  2723  000834  5023               	movf	ikey_parsing@k,w,c
  2724  000836  0D10               	mullw	16
  2725  000838  50F3               	movf	prodl,w,c
  2726  00083A  0F6A               	addlw	low (_key+10)
  2727  00083C  6ED9               	movwf	fsr2l,c
  2728  00083E  6ADA               	clrf	fsr2h,c
  2729  000840  0100               	movlb	0	; () banked
  2730  000842  A0DF               	btfss	indf2,0,c
  2731  000844  D07C               	goto	l318
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;ikb.c: 555: {;ikb.c: 557: if (key[k].bf.OnKeyPressed)
  2735  000846  5023               	movf	ikey_parsing@k,w,c
  2736  000848  0D10               	mullw	16
  2737  00084A  50F3               	movf	prodl,w,c
  2738  00084C  0F6A               	addlw	low (_key+10)
  2739  00084E  6ED9               	movwf	fsr2l,c
  2740  000850  6ADA               	clrf	fsr2h,c
  2741  000852  A2DF               	btfss	indf2,1,c
  2742  000854  D01F               	goto	l5467
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;ikb.c: 558: {;ikb.c: 559: key[k].bf.ReadyToRead = 1;
  2746  000856  5023               	movf	ikey_parsing@k,w,c
  2747  000858  0D10               	mullw	16
  2748  00085A  50F3               	movf	prodl,w,c
  2749  00085C  0F6A               	addlw	low (_key+10)
  2750  00085E  6ED9               	movwf	fsr2l,c
  2751  000860  6ADA               	clrf	fsr2h,c
  2752  000862  8CDF               	bsf	indf2,6,c
  2753                           
  2754                           ;ikb.c: 561: if (key[k].bf.Reptt)
  2755  000864  5023               	movf	ikey_parsing@k,w,c
  2756  000866  0D10               	mullw	16
  2757  000868  50F3               	movf	prodl,w,c
  2758  00086A  0F6A               	addlw	low (_key+10)
  2759  00086C  6ED9               	movwf	fsr2l,c
  2760  00086E  6ADA               	clrf	fsr2h,c
  2761  000870  AADF               	btfss	indf2,5,c
  2762  000872  D008               	goto	l5465
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;ikb.c: 562: {;ikb.c: 563: key[k].sm1 = (6);
  2766  000874  5023               	movf	ikey_parsing@k,w,c
  2767  000876  0D10               	mullw	16
  2768  000878  50F3               	movf	prodl,w,c
  2769  00087A  0F66               	addlw	low (_key+6)
  2770  00087C  6ED9               	movwf	fsr2l,c
  2771  00087E  6ADA               	clrf	fsr2h,c
  2772  000880  0E06               	movlw	6
  2773  000882  D037               	goto	L2
  2774  000884                     l5465:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;ikb.c: 565: else;ikb.c: 566: {;ikb.c: 567: key[k].sm1 = (1);
  2778  000884  5023               	movf	ikey_parsing@k,w,c
  2779  000886  0D10               	mullw	16
  2780  000888  50F3               	movf	prodl,w,c
  2781  00088A  0F66               	addlw	low (_key+6)
  2782  00088C  6ED9               	movwf	fsr2l,c
  2783  00088E  6ADA               	clrf	fsr2h,c
  2784  000890  0E01               	movlw	1
  2785  000892  D02F               	goto	L2
  2786  000894                     l5467:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;ikb.c: 570: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2790  000894  5023               	movf	ikey_parsing@k,w,c
  2791  000896  0D10               	mullw	16
  2792  000898  50F3               	movf	prodl,w,c
  2793  00089A  0F6A               	addlw	low (_key+10)
  2794  00089C  6ED9               	movwf	fsr2l,c
  2795  00089E  6ADA               	clrf	fsr2h,c
  2796  0008A0  A4DF               	btfss	indf2,2,c
  2797  0008A2  D008               	goto	l5471
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;ikb.c: 571: {;ikb.c: 572: key[k].sm1 = (5);
  2801  0008A4  5023               	movf	ikey_parsing@k,w,c
  2802  0008A6  0D10               	mullw	16
  2803  0008A8  50F3               	movf	prodl,w,c
  2804  0008AA  0F66               	addlw	low (_key+6)
  2805  0008AC  6ED9               	movwf	fsr2l,c
  2806  0008AE  6ADA               	clrf	fsr2h,c
  2807  0008B0  0E05               	movlw	5
  2808  0008B2  D01F               	goto	L2
  2809  0008B4                     l5471:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;ikb.c: 575: else if (key[k].bf.AtTimeExpired)
  2813  0008B4  5023               	movf	ikey_parsing@k,w,c
  2814  0008B6  0D10               	mullw	16
  2815  0008B8  50F3               	movf	prodl,w,c
  2816  0008BA  0F6A               	addlw	low (_key+10)
  2817  0008BC  6ED9               	movwf	fsr2l,c
  2818  0008BE  6ADA               	clrf	fsr2h,c
  2819  0008C0  A6DF               	btfss	indf2,3,c
  2820  0008C2  D008               	goto	l5475
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;ikb.c: 576: {;ikb.c: 577: key[k].sm1 = (3);
  2824  0008C4  5023               	movf	ikey_parsing@k,w,c
  2825  0008C6  0D10               	mullw	16
  2826  0008C8  50F3               	movf	prodl,w,c
  2827  0008CA  0F66               	addlw	low (_key+6)
  2828  0008CC  6ED9               	movwf	fsr2l,c
  2829  0008CE  6ADA               	clrf	fsr2h,c
  2830  0008D0  0E03               	movlw	3
  2831  0008D2  D00F               	goto	L2
  2832  0008D4                     l5475:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;ikb.c: 579: else if (key[k].bf.AtTimeExpired2)
  2836  0008D4  5023               	movf	ikey_parsing@k,w,c
  2837  0008D6  0D10               	mullw	16
  2838  0008D8  50F3               	movf	prodl,w,c
  2839  0008DA  0F6A               	addlw	low (_key+10)
  2840  0008DC  6ED9               	movwf	fsr2l,c
  2841  0008DE  6ADA               	clrf	fsr2h,c
  2842  0008E0  A8DF               	btfss	indf2,4,c
  2843  0008E2  D008               	goto	l324
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;ikb.c: 580: {;ikb.c: 581: key[k].sm1 = (4);
  2847  0008E4  5023               	movf	ikey_parsing@k,w,c
  2848  0008E6  0D10               	mullw	16
  2849  0008E8  50F3               	movf	prodl,w,c
  2850  0008EA  0F66               	addlw	low (_key+6)
  2851  0008EC  6ED9               	movwf	fsr2l,c
  2852  0008EE  6ADA               	clrf	fsr2h,c
  2853  0008F0  0E04               	movlw	4
  2854  0008F2                     L2:
  2855  0008F2  6EDF               	movwf	indf2,c
  2856  0008F4                     l324:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;ikb.c: 582: };ikb.c: 585: key[k].bf.InProcessing = 1;
  2860  0008F4  5023               	movf	ikey_parsing@k,w,c
  2861  0008F6  0D10               	mullw	16
  2862  0008F8  50F3               	movf	prodl,w,c
  2863  0008FA  0F6B               	addlw	low (_key+11)
  2864  0008FC  6ED9               	movwf	fsr2l,c
  2865  0008FE  6ADA               	clrf	fsr2h,c
  2866  000900  82DF               	bsf	indf2,1,c
  2867                           
  2868                           ;ikb.c: 590: if (key[k].num_group_x != 0)
  2869  000902  5023               	movf	ikey_parsing@k,w,c
  2870  000904  0D10               	mullw	16
  2871  000906  50F3               	movf	prodl,w,c
  2872  000908  0F69               	addlw	low (_key+9)
  2873  00090A  6ED9               	movwf	fsr2l,c
  2874  00090C  6ADA               	clrf	fsr2h,c
  2875  00090E  50DF               	movf	indf2,w,c
  2876  000910  B4D8               	btfsc	status,2,c
  2877  000912  D015               	goto	l318
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;ikb.c: 591: {;ikb.c: 592: group_x[ key[k].num_group_x ] = 1;
  2881  000914  5023               	movf	ikey_parsing@k,w,c
  2882  000916  0D10               	mullw	16
  2883  000918  50F3               	movf	prodl,w,c
  2884  00091A  0F69               	addlw	low (_key+9)
  2885  00091C  6ED9               	movwf	fsr2l,c
  2886  00091E  6ADA               	clrf	fsr2h,c
  2887  000920  50DF               	movf	indf2,w,c
  2888  000922  6E1F               	movwf	??_ikey_parsing& (0+255),c
  2889  000924  501F               	movf	??_ikey_parsing,w,c
  2890  000926  0FB8               	addlw	low _group_x
  2891  000928  6ED9               	movwf	fsr2l,c
  2892  00092A  6ADA               	clrf	fsr2h,c
  2893  00092C  0E01               	movlw	1
  2894  00092E  6EDF               	movwf	indf2,c
  2895                           
  2896                           ;ikb.c: 593: key[k].bf.OwnerOfGroup = 1;
  2897  000930  5023               	movf	ikey_parsing@k,w,c
  2898  000932  0D10               	mullw	16
  2899  000934  50F3               	movf	prodl,w,c
  2900  000936  0F6B               	addlw	low (_key+11)
  2901  000938  6ED9               	movwf	fsr2l,c
  2902  00093A  6ADA               	clrf	fsr2h,c
  2903  00093C  80DF               	bsf	indf2,0,c
  2904  00093E                     l318:
  2905                           
  2906                           ;ikb.c: 594: };ikb.c: 596: };ikb.c: 597: };ikb.c: 598: };ikb.c: 602: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2907  00093E  5023               	movf	ikey_parsing@k,w,c
  2908  000940  0D10               	mullw	16
  2909  000942  50F3               	movf	prodl,w,c
  2910  000944  0F66               	addlw	low (_key+6)
  2911  000946  6ED9               	movwf	fsr2l,c
  2912  000948  6ADA               	clrf	fsr2h,c
  2913  00094A  0E05               	movlw	5
  2914  00094C  64DF               	cpfsgt	indf2,c
  2915  00094E  D024               	goto	l331
  2916  000950  5023               	movf	ikey_parsing@k,w,c
  2917  000952  0D10               	mullw	16
  2918  000954  50F3               	movf	prodl,w,c
  2919  000956  0F66               	addlw	low (_key+6)
  2920  000958  6ED9               	movwf	fsr2l,c
  2921  00095A  6ADA               	clrf	fsr2h,c
  2922  00095C  0E09               	movlw	9
  2923  00095E  60DF               	cpfslt	indf2,c
  2924  000960  D01B               	goto	l331
  2925                           
  2926                           ;ikb.c: 603: {;ikb.c: 604: if (key[k].bf.state == 0)
  2927  000962  5023               	movf	ikey_parsing@k,w,c
  2928  000964  0D10               	mullw	16
  2929  000966  50F3               	movf	prodl,w,c
  2930  000968  0F6A               	addlw	low (_key+10)
  2931  00096A  6ED9               	movwf	fsr2l,c
  2932  00096C  6ADA               	clrf	fsr2h,c
  2933  00096E  0100               	movlb	0	; () banked
  2934  000970  B0DF               	btfsc	indf2,0,c
  2935  000972  D012               	goto	l331
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;ikb.c: 605: {;ikb.c: 606: key[k].counter1 = 0;
  2939  000974  5023               	movf	ikey_parsing@k,w,c
  2940  000976  0D10               	mullw	16
  2941  000978  50F3               	movf	prodl,w,c
  2942  00097A  0F67               	addlw	low (_key+7)
  2943  00097C  6ED9               	movwf	fsr2l,c
  2944  00097E  6ADA               	clrf	fsr2h,c
  2945  000980  0E00               	movlw	0
  2946  000982  6EDE               	movwf	postinc2,c
  2947  000984  0E00               	movlw	0
  2948  000986  6EDD               	movwf	postdec2,c
  2949                           
  2950                           ;ikb.c: 607: key[k].sm1 = (2);
  2951  000988  5023               	movf	ikey_parsing@k,w,c
  2952  00098A  0D10               	mullw	16
  2953  00098C  50F3               	movf	prodl,w,c
  2954  00098E  0F66               	addlw	low (_key+6)
  2955  000990  6ED9               	movwf	fsr2l,c
  2956  000992  6ADA               	clrf	fsr2h,c
  2957  000994  0E02               	movlw	2
  2958  000996  6EDF               	movwf	indf2,c
  2959  000998                     l331:
  2960                           
  2961                           ;ikb.c: 608: };ikb.c: 609: };ikb.c: 611: if (key[k].sm1 == (6) )
  2962  000998  5023               	movf	ikey_parsing@k,w,c
  2963  00099A  0D10               	mullw	16
  2964  00099C  50F3               	movf	prodl,w,c
  2965  00099E  0F66               	addlw	low (_key+6)
  2966  0009A0  6ED9               	movwf	fsr2l,c
  2967  0009A2  6ADA               	clrf	fsr2h,c
  2968  0009A4  0E06               	movlw	6
  2969  0009A6  18DE               	xorwf	postinc2,w,c
  2970  0009A8  A4D8               	btfss	status,2,c
  2971  0009AA  D027               	goto	l333
  2972                           
  2973                           ;ikb.c: 612: {;ikb.c: 613: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2974  0009AC  5023               	movf	ikey_parsing@k,w,c
  2975  0009AE  0D10               	mullw	16
  2976  0009B0  50F3               	movf	prodl,w,c
  2977  0009B2  0F6C               	addlw	low (_key+12)
  2978  0009B4  6ED9               	movwf	fsr2l,c
  2979  0009B6  6ADA               	clrf	fsr2h,c
  2980  0009B8  5023               	movf	ikey_parsing@k,w,c
  2981  0009BA  0D10               	mullw	16
  2982  0009BC  50F3               	movf	prodl,w,c
  2983  0009BE  0F67               	addlw	low (_key+7)
  2984  0009C0  6EE1               	movwf	fsr1l,c
  2985  0009C2  6AE2               	clrf	fsr1h,c
  2986  0009C4  2AE6               	incf	postinc1,f,c
  2987  0009C6  0E00               	movlw	0
  2988  0009C8  22E5               	addwfc	postdec1,f,c
  2989  0009CA  50DE               	movf	postinc2,w,c
  2990  0009CC  5CE6               	subwf	postinc1,w,c
  2991  0009CE  50DE               	movf	postinc2,w,c
  2992  0009D0  58E6               	subwfb	postinc1,w,c
  2993  0009D2  A0D8               	btfss	status,0,c
  2994  0009D4  D012               	goto	l333
  2995                           
  2996                           ;ikb.c: 614: {;ikb.c: 615: key[k].counter1 =0;
  2997  0009D6  5023               	movf	ikey_parsing@k,w,c
  2998  0009D8  0D10               	mullw	16
  2999  0009DA  50F3               	movf	prodl,w,c
  3000  0009DC  0F67               	addlw	low (_key+7)
  3001  0009DE  6ED9               	movwf	fsr2l,c
  3002  0009E0  6ADA               	clrf	fsr2h,c
  3003  0009E2  0E00               	movlw	0
  3004  0009E4  6EDE               	movwf	postinc2,c
  3005  0009E6  0E00               	movlw	0
  3006  0009E8  6EDD               	movwf	postdec2,c
  3007                           
  3008                           ;ikb.c: 616: key[k].sm1 = (7);
  3009  0009EA  5023               	movf	ikey_parsing@k,w,c
  3010  0009EC  0D10               	mullw	16
  3011  0009EE  50F3               	movf	prodl,w,c
  3012  0009F0  0F66               	addlw	low (_key+6)
  3013  0009F2  6ED9               	movwf	fsr2l,c
  3014  0009F4  6ADA               	clrf	fsr2h,c
  3015  0009F6  0E07               	movlw	7
  3016  0009F8  6EDF               	movwf	indf2,c
  3017  0009FA                     l333:
  3018                           
  3019                           ;ikb.c: 617: };ikb.c: 618: };ikb.c: 619: if (key[k].sm1 == (7))
  3020  0009FA  5023               	movf	ikey_parsing@k,w,c
  3021  0009FC  0D10               	mullw	16
  3022  0009FE  50F3               	movf	prodl,w,c
  3023  000A00  0F66               	addlw	low (_key+6)
  3024  000A02  6ED9               	movwf	fsr2l,c
  3025  000A04  6ADA               	clrf	fsr2h,c
  3026  000A06  0E07               	movlw	7
  3027  000A08  18DE               	xorwf	postinc2,w,c
  3028  000A0A  A4D8               	btfss	status,2,c
  3029  000A0C  D018               	goto	l335
  3030                           
  3031                           ;ikb.c: 620: {;ikb.c: 621: if (key[k].bf.ReadyToRead == 0)
  3032  000A0E  5023               	movf	ikey_parsing@k,w,c
  3033  000A10  0D10               	mullw	16
  3034  000A12  50F3               	movf	prodl,w,c
  3035  000A14  0F6A               	addlw	low (_key+10)
  3036  000A16  6ED9               	movwf	fsr2l,c
  3037  000A18  6ADA               	clrf	fsr2h,c
  3038  000A1A  0100               	movlb	0	; () banked
  3039  000A1C  BCDF               	btfsc	indf2,6,c
  3040  000A1E  D00F               	goto	l335
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;ikb.c: 622: {;ikb.c: 623: key[k].bf.ReadyToRead = 1;
  3044  000A20  5023               	movf	ikey_parsing@k,w,c
  3045  000A22  0D10               	mullw	16
  3046  000A24  50F3               	movf	prodl,w,c
  3047  000A26  0F6A               	addlw	low (_key+10)
  3048  000A28  6ED9               	movwf	fsr2l,c
  3049  000A2A  6ADA               	clrf	fsr2h,c
  3050  000A2C  8CDF               	bsf	indf2,6,c
  3051                           
  3052                           ;ikb.c: 624: key[k].sm1 = (8);
  3053  000A2E  5023               	movf	ikey_parsing@k,w,c
  3054  000A30  0D10               	mullw	16
  3055  000A32  50F3               	movf	prodl,w,c
  3056  000A34  0F66               	addlw	low (_key+6)
  3057  000A36  6ED9               	movwf	fsr2l,c
  3058  000A38  6ADA               	clrf	fsr2h,c
  3059  000A3A  0E08               	movlw	8
  3060  000A3C  6EDF               	movwf	indf2,c
  3061  000A3E                     l335:
  3062                           
  3063                           ;ikb.c: 625: };ikb.c: 626: };ikb.c: 627: if (key[k].sm1 == (8))
  3064  000A3E  5023               	movf	ikey_parsing@k,w,c
  3065  000A40  0D10               	mullw	16
  3066  000A42  50F3               	movf	prodl,w,c
  3067  000A44  0F66               	addlw	low (_key+6)
  3068  000A46  6ED9               	movwf	fsr2l,c
  3069  000A48  6ADA               	clrf	fsr2h,c
  3070  000A4A  0E08               	movlw	8
  3071  000A4C  18DE               	xorwf	postinc2,w,c
  3072  000A4E  A4D8               	btfss	status,2,c
  3073  000A50  D027               	goto	l337
  3074                           
  3075                           ;ikb.c: 628: {;ikb.c: 629: if ( ++key[k].counter1 >= key[k].repp.after_start)
  3076  000A52  5023               	movf	ikey_parsing@k,w,c
  3077  000A54  0D10               	mullw	16
  3078  000A56  50F3               	movf	prodl,w,c
  3079  000A58  0F6E               	addlw	low (_key+14)
  3080  000A5A  6ED9               	movwf	fsr2l,c
  3081  000A5C  6ADA               	clrf	fsr2h,c
  3082  000A5E  5023               	movf	ikey_parsing@k,w,c
  3083  000A60  0D10               	mullw	16
  3084  000A62  50F3               	movf	prodl,w,c
  3085  000A64  0F67               	addlw	low (_key+7)
  3086  000A66  6EE1               	movwf	fsr1l,c
  3087  000A68  6AE2               	clrf	fsr1h,c
  3088  000A6A  2AE6               	incf	postinc1,f,c
  3089  000A6C  0E00               	movlw	0
  3090  000A6E  22E5               	addwfc	postdec1,f,c
  3091  000A70  50DE               	movf	postinc2,w,c
  3092  000A72  5CE6               	subwf	postinc1,w,c
  3093  000A74  50DE               	movf	postinc2,w,c
  3094  000A76  58E6               	subwfb	postinc1,w,c
  3095  000A78  A0D8               	btfss	status,0,c
  3096  000A7A  D012               	goto	l337
  3097                           
  3098                           ;ikb.c: 630: {;ikb.c: 631: key[k].counter1 = 0;
  3099  000A7C  5023               	movf	ikey_parsing@k,w,c
  3100  000A7E  0D10               	mullw	16
  3101  000A80  50F3               	movf	prodl,w,c
  3102  000A82  0F67               	addlw	low (_key+7)
  3103  000A84  6ED9               	movwf	fsr2l,c
  3104  000A86  6ADA               	clrf	fsr2h,c
  3105  000A88  0E00               	movlw	0
  3106  000A8A  6EDE               	movwf	postinc2,c
  3107  000A8C  0E00               	movlw	0
  3108  000A8E  6EDD               	movwf	postdec2,c
  3109                           
  3110                           ;ikb.c: 632: key[k].sm1 = (7);
  3111  000A90  5023               	movf	ikey_parsing@k,w,c
  3112  000A92  0D10               	mullw	16
  3113  000A94  50F3               	movf	prodl,w,c
  3114  000A96  0F66               	addlw	low (_key+6)
  3115  000A98  6ED9               	movwf	fsr2l,c
  3116  000A9A  6ADA               	clrf	fsr2h,c
  3117  000A9C  0E07               	movlw	7
  3118  000A9E  6EDF               	movwf	indf2,c
  3119  000AA0                     l337:
  3120                           
  3121                           ;ikb.c: 633: };ikb.c: 634: };ikb.c: 636: if (key[k].sm1 == (5) )
  3122  000AA0  5023               	movf	ikey_parsing@k,w,c
  3123  000AA2  0D10               	mullw	16
  3124  000AA4  50F3               	movf	prodl,w,c
  3125  000AA6  0F66               	addlw	low (_key+6)
  3126  000AA8  6ED9               	movwf	fsr2l,c
  3127  000AAA  6ADA               	clrf	fsr2h,c
  3128  000AAC  0E05               	movlw	5
  3129  000AAE  18DE               	xorwf	postinc2,w,c
  3130  000AB0  A4D8               	btfss	status,2,c
  3131  000AB2  D018               	goto	l339
  3132                           
  3133                           ;ikb.c: 637: {;ikb.c: 638: if (key[k].bf.state == 0)
  3134  000AB4  5023               	movf	ikey_parsing@k,w,c
  3135  000AB6  0D10               	mullw	16
  3136  000AB8  50F3               	movf	prodl,w,c
  3137  000ABA  0F6A               	addlw	low (_key+10)
  3138  000ABC  6ED9               	movwf	fsr2l,c
  3139  000ABE  6ADA               	clrf	fsr2h,c
  3140  000AC0  0100               	movlb	0	; () banked
  3141  000AC2  B0DF               	btfsc	indf2,0,c
  3142  000AC4  D00F               	goto	l339
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;ikb.c: 639: {;ikb.c: 640: key[k].bf.ReadyToRead = 1;
  3146  000AC6  5023               	movf	ikey_parsing@k,w,c
  3147  000AC8  0D10               	mullw	16
  3148  000ACA  50F3               	movf	prodl,w,c
  3149  000ACC  0F6A               	addlw	low (_key+10)
  3150  000ACE  6ED9               	movwf	fsr2l,c
  3151  000AD0  6ADA               	clrf	fsr2h,c
  3152  000AD2  8CDF               	bsf	indf2,6,c
  3153                           
  3154                           ;ikb.c: 641: key[k].sm1 = (2);
  3155  000AD4  5023               	movf	ikey_parsing@k,w,c
  3156  000AD6  0D10               	mullw	16
  3157  000AD8  50F3               	movf	prodl,w,c
  3158  000ADA  0F66               	addlw	low (_key+6)
  3159  000ADC  6ED9               	movwf	fsr2l,c
  3160  000ADE  6ADA               	clrf	fsr2h,c
  3161  000AE0  0E02               	movlw	2
  3162  000AE2  6EDF               	movwf	indf2,c
  3163  000AE4                     l339:
  3164                           
  3165                           ;ikb.c: 642: };ikb.c: 643: };ikb.c: 645: if (key[k].sm1 == (3) )
  3166  000AE4  5023               	movf	ikey_parsing@k,w,c
  3167  000AE6  0D10               	mullw	16
  3168  000AE8  50F3               	movf	prodl,w,c
  3169  000AEA  0F66               	addlw	low (_key+6)
  3170  000AEC  6ED9               	movwf	fsr2l,c
  3171  000AEE  6ADA               	clrf	fsr2h,c
  3172  000AF0  0E03               	movlw	3
  3173  000AF2  18DE               	xorwf	postinc2,w,c
  3174  000AF4  A4D8               	btfss	status,2,c
  3175  000AF6  D09C               	goto	l341
  3176                           
  3177                           ;ikb.c: 646: {;ikb.c: 647: key[k].counter1++;
  3178  000AF8  5023               	movf	ikey_parsing@k,w,c
  3179  000AFA  0D10               	mullw	16
  3180  000AFC  50F3               	movf	prodl,w,c
  3181  000AFE  0F67               	addlw	low (_key+7)
  3182  000B00  6ED9               	movwf	fsr2l,c
  3183  000B02  6ADA               	clrf	fsr2h,c
  3184  000B04  2ADE               	incf	postinc2,f,c
  3185  000B06  0E00               	movlw	0
  3186  000B08  22DD               	addwfc	postdec2,f,c
  3187                           
  3188                           ;ikb.c: 649: if (key[k].bf.state == 0)
  3189  000B0A  5023               	movf	ikey_parsing@k,w,c
  3190  000B0C  0D10               	mullw	16
  3191  000B0E  50F3               	movf	prodl,w,c
  3192  000B10  0F6A               	addlw	low (_key+10)
  3193  000B12  6ED9               	movwf	fsr2l,c
  3194  000B14  6ADA               	clrf	fsr2h,c
  3195  000B16  0100               	movlb	0	; () banked
  3196  000B18  B0DF               	btfsc	indf2,0,c
  3197  000B1A  D03D               	goto	l5509
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;ikb.c: 650: {;ikb.c: 651: if (key[k].counter1 <= ((1000E-3/5E-3)) )
  3201  000B1C  0E00               	movlw	0
  3202  000B1E  6E16               	movwf	___ftge@ff1,c
  3203  000B20  0E48               	movlw	72
  3204  000B22  6E17               	movwf	___ftge@ff1+1,c
  3205  000B24  0E43               	movlw	67
  3206  000B26  6E18               	movwf	___ftge@ff1+2,c
  3207  000B28  5023               	movf	ikey_parsing@k,w,c
  3208  000B2A  0D10               	mullw	16
  3209  000B2C  50F3               	movf	prodl,w,c
  3210  000B2E  0F67               	addlw	low (_key+7)
  3211  000B30  6ED9               	movwf	fsr2l,c
  3212  000B32  6ADA               	clrf	fsr2h,c
  3213  000B34  CFDE F013          	movff	postinc2,___lwtoft@c
  3214  000B38  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3215  000B3C  ECA7  F014         	call	___lwtoft	;wreg free
  3216  000B40  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3217  000B44  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3218  000B48  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3219  000B4C  ECDD  F010         	call	___ftge	;wreg free
  3220  000B50  A0D8               	btfss	status,0,c
  3221  000B52  D021               	goto	l5509
  3222                           
  3223                           ;ikb.c: 652: {;ikb.c: 653: key[k].counter1 = 0;
  3224  000B54  5023               	movf	ikey_parsing@k,w,c
  3225  000B56  0D10               	mullw	16
  3226  000B58  50F3               	movf	prodl,w,c
  3227  000B5A  0F67               	addlw	low (_key+7)
  3228  000B5C  6ED9               	movwf	fsr2l,c
  3229  000B5E  6ADA               	clrf	fsr2h,c
  3230  000B60  0E00               	movlw	0
  3231  000B62  6EDE               	movwf	postinc2,c
  3232  000B64  0E00               	movlw	0
  3233  000B66  6EDD               	movwf	postdec2,c
  3234                           
  3235                           ;ikb.c: 655: key[k].bf.ReadyToRead = 1;
  3236  000B68  5023               	movf	ikey_parsing@k,w,c
  3237  000B6A  0D10               	mullw	16
  3238  000B6C  50F3               	movf	prodl,w,c
  3239  000B6E  0F6A               	addlw	low (_key+10)
  3240  000B70  6ED9               	movwf	fsr2l,c
  3241  000B72  6ADA               	clrf	fsr2h,c
  3242  000B74  0100               	movlb	0	; () banked
  3243  000B76  8CDF               	bsf	indf2,6,c
  3244                           
  3245                           ;ikb.c: 656: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3246  000B78  5023               	movf	ikey_parsing@k,w,c
  3247  000B7A  0D10               	mullw	16
  3248  000B7C  50F3               	movf	prodl,w,c
  3249  000B7E  0F6A               	addlw	low (_key+10)
  3250  000B80  6ED9               	movwf	fsr2l,c
  3251  000B82  6ADA               	clrf	fsr2h,c
  3252  000B84  9EDF               	bcf	indf2,7,c
  3253                           
  3254                           ;ikb.c: 658: key[k].sm1 = (2);
  3255  000B86  5023               	movf	ikey_parsing@k,w,c
  3256  000B88  0D10               	mullw	16
  3257  000B8A  50F3               	movf	prodl,w,c
  3258  000B8C  0F66               	addlw	low (_key+6)
  3259  000B8E  6ED9               	movwf	fsr2l,c
  3260  000B90  6ADA               	clrf	fsr2h,c
  3261  000B92  0E02               	movlw	2
  3262  000B94  6EDF               	movwf	indf2,c
  3263  000B96                     l5509:
  3264                           
  3265                           ;ikb.c: 659: };ikb.c: 660: };ikb.c: 662: if (key[k].counter1 > ((1000E-3/5E-3)) )
  3266  000B96  0E00               	movlw	0
  3267  000B98  6E16               	movwf	___ftge@ff1,c
  3268  000B9A  0E48               	movlw	72
  3269  000B9C  6E17               	movwf	___ftge@ff1+1,c
  3270  000B9E  0E43               	movlw	67
  3271  000BA0  6E18               	movwf	___ftge@ff1+2,c
  3272  000BA2  5023               	movf	ikey_parsing@k,w,c
  3273  000BA4  0D10               	mullw	16
  3274  000BA6  50F3               	movf	prodl,w,c
  3275  000BA8  0F67               	addlw	low (_key+7)
  3276  000BAA  6ED9               	movwf	fsr2l,c
  3277  000BAC  6ADA               	clrf	fsr2h,c
  3278  000BAE  CFDE F013          	movff	postinc2,___lwtoft@c
  3279  000BB2  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3280  000BB6  ECA7  F014         	call	___lwtoft	;wreg free
  3281  000BBA  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3282  000BBE  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3283  000BC2  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3284  000BC6  ECDD  F010         	call	___ftge	;wreg free
  3285  000BCA  B0D8               	btfsc	status,0,c
  3286  000BCC  D031               	goto	l341
  3287                           
  3288                           ;ikb.c: 663: {;ikb.c: 664: key[k].counter1 = 0x0000;
  3289  000BCE  5023               	movf	ikey_parsing@k,w,c
  3290  000BD0  0D10               	mullw	16
  3291  000BD2  50F3               	movf	prodl,w,c
  3292  000BD4  0F67               	addlw	low (_key+7)
  3293  000BD6  6ED9               	movwf	fsr2l,c
  3294  000BD8  6ADA               	clrf	fsr2h,c
  3295  000BDA  0E00               	movlw	0
  3296  000BDC  6EDE               	movwf	postinc2,c
  3297  000BDE  0E00               	movlw	0
  3298  000BE0  6EDD               	movwf	postdec2,c
  3299                           
  3300                           ;ikb.c: 666: key[k].bf.ReadyToRead = 1;
  3301  000BE2  5023               	movf	ikey_parsing@k,w,c
  3302  000BE4  0D10               	mullw	16
  3303  000BE6  50F3               	movf	prodl,w,c
  3304  000BE8  0F6A               	addlw	low (_key+10)
  3305  000BEA  6ED9               	movwf	fsr2l,c
  3306  000BEC  6ADA               	clrf	fsr2h,c
  3307  000BEE  0100               	movlb	0	; () banked
  3308  000BF0  8CDF               	bsf	indf2,6,c
  3309                           
  3310                           ;ikb.c: 667: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3311  000BF2  5023               	movf	ikey_parsing@k,w,c
  3312  000BF4  0D10               	mullw	16
  3313  000BF6  50F3               	movf	prodl,w,c
  3314  000BF8  0F6A               	addlw	low (_key+10)
  3315  000BFA  6ED9               	movwf	fsr2l,c
  3316  000BFC  6ADA               	clrf	fsr2h,c
  3317  000BFE  8EDF               	bsf	indf2,7,c
  3318                           
  3319                           ;ikb.c: 669: if (!key[k].bf.Reptt)
  3320  000C00  5023               	movf	ikey_parsing@k,w,c
  3321  000C02  0D10               	mullw	16
  3322  000C04  50F3               	movf	prodl,w,c
  3323  000C06  0F6A               	addlw	low (_key+10)
  3324  000C08  6ED9               	movwf	fsr2l,c
  3325  000C0A  6ADA               	clrf	fsr2h,c
  3326  000C0C  BADF               	btfsc	indf2,5,c
  3327  000C0E  D008               	goto	l5515
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;ikb.c: 670: {;ikb.c: 671: key[k].sm1 = (1);
  3331  000C10  5023               	movf	ikey_parsing@k,w,c
  3332  000C12  0D10               	mullw	16
  3333  000C14  50F3               	movf	prodl,w,c
  3334  000C16  0F66               	addlw	low (_key+6)
  3335  000C18  6ED9               	movwf	fsr2l,c
  3336  000C1A  6ADA               	clrf	fsr2h,c
  3337  000C1C  0E01               	movlw	1
  3338  000C1E  D007               	goto	L3
  3339  000C20                     l5515:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;ikb.c: 673: else;ikb.c: 674: {;ikb.c: 675: key[k].sm1 = (8);
  3343  000C20  5023               	movf	ikey_parsing@k,w,c
  3344  000C22  0D10               	mullw	16
  3345  000C24  50F3               	movf	prodl,w,c
  3346  000C26  0F66               	addlw	low (_key+6)
  3347  000C28  6ED9               	movwf	fsr2l,c
  3348  000C2A  6ADA               	clrf	fsr2h,c
  3349  000C2C  0E08               	movlw	8
  3350  000C2E                     L3:
  3351  000C2E  6EDF               	movwf	indf2,c
  3352  000C30                     l341:
  3353                           
  3354                           ;ikb.c: 676: };ikb.c: 677: };ikb.c: 678: };ikb.c: 683: if (key[k].sm1 == (4))
  3355  000C30  5023               	movf	ikey_parsing@k,w,c
  3356  000C32  0D10               	mullw	16
  3357  000C34  50F3               	movf	prodl,w,c
  3358  000C36  0F66               	addlw	low (_key+6)
  3359  000C38  6ED9               	movwf	fsr2l,c
  3360  000C3A  6ADA               	clrf	fsr2h,c
  3361  000C3C  0E04               	movlw	4
  3362  000C3E  18DE               	xorwf	postinc2,w,c
  3363  000C40  A4D8               	btfss	status,2,c
  3364  000C42  D08C               	goto	l347
  3365                           
  3366                           ;ikb.c: 684: {;ikb.c: 685: key[k].counter1++;
  3367  000C44  5023               	movf	ikey_parsing@k,w,c
  3368  000C46  0D10               	mullw	16
  3369  000C48  50F3               	movf	prodl,w,c
  3370  000C4A  0F67               	addlw	low (_key+7)
  3371  000C4C  6ED9               	movwf	fsr2l,c
  3372  000C4E  6ADA               	clrf	fsr2h,c
  3373  000C50  2ADE               	incf	postinc2,f,c
  3374  000C52  0E00               	movlw	0
  3375  000C54  22DD               	addwfc	postdec2,f,c
  3376                           
  3377                           ;ikb.c: 687: if (key[k].bf.state == 0)
  3378  000C56  5023               	movf	ikey_parsing@k,w,c
  3379  000C58  0D10               	mullw	16
  3380  000C5A  50F3               	movf	prodl,w,c
  3381  000C5C  0F6A               	addlw	low (_key+10)
  3382  000C5E  6ED9               	movwf	fsr2l,c
  3383  000C60  6ADA               	clrf	fsr2h,c
  3384  000C62  0100               	movlb	0	; () banked
  3385  000C64  B0DF               	btfsc	indf2,0,c
  3386  000C66  D03D               	goto	l5523
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;ikb.c: 688: {;ikb.c: 689: if (key[k].counter1 <= ((1000E-3/5E-3)))
  3390  000C68  0E00               	movlw	0
  3391  000C6A  6E16               	movwf	___ftge@ff1,c
  3392  000C6C  0E48               	movlw	72
  3393  000C6E  6E17               	movwf	___ftge@ff1+1,c
  3394  000C70  0E43               	movlw	67
  3395  000C72  6E18               	movwf	___ftge@ff1+2,c
  3396  000C74  5023               	movf	ikey_parsing@k,w,c
  3397  000C76  0D10               	mullw	16
  3398  000C78  50F3               	movf	prodl,w,c
  3399  000C7A  0F67               	addlw	low (_key+7)
  3400  000C7C  6ED9               	movwf	fsr2l,c
  3401  000C7E  6ADA               	clrf	fsr2h,c
  3402  000C80  CFDE F013          	movff	postinc2,___lwtoft@c
  3403  000C84  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3404  000C88  ECA7  F014         	call	___lwtoft	;wreg free
  3405  000C8C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3406  000C90  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3407  000C94  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3408  000C98  ECDD  F010         	call	___ftge	;wreg free
  3409  000C9C  A0D8               	btfss	status,0,c
  3410  000C9E  D021               	goto	l5523
  3411                           
  3412                           ;ikb.c: 690: {;ikb.c: 691: key[k].counter1 = 0;
  3413  000CA0  5023               	movf	ikey_parsing@k,w,c
  3414  000CA2  0D10               	mullw	16
  3415  000CA4  50F3               	movf	prodl,w,c
  3416  000CA6  0F67               	addlw	low (_key+7)
  3417  000CA8  6ED9               	movwf	fsr2l,c
  3418  000CAA  6ADA               	clrf	fsr2h,c
  3419  000CAC  0E00               	movlw	0
  3420  000CAE  6EDE               	movwf	postinc2,c
  3421  000CB0  0E00               	movlw	0
  3422  000CB2  6EDD               	movwf	postdec2,c
  3423                           
  3424                           ;ikb.c: 693: key[k].bf.ReadyToRead = 1;
  3425  000CB4  5023               	movf	ikey_parsing@k,w,c
  3426  000CB6  0D10               	mullw	16
  3427  000CB8  50F3               	movf	prodl,w,c
  3428  000CBA  0F6A               	addlw	low (_key+10)
  3429  000CBC  6ED9               	movwf	fsr2l,c
  3430  000CBE  6ADA               	clrf	fsr2h,c
  3431  000CC0  0100               	movlb	0	; () banked
  3432  000CC2  8CDF               	bsf	indf2,6,c
  3433                           
  3434                           ;ikb.c: 694: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3435  000CC4  5023               	movf	ikey_parsing@k,w,c
  3436  000CC6  0D10               	mullw	16
  3437  000CC8  50F3               	movf	prodl,w,c
  3438  000CCA  0F6A               	addlw	low (_key+10)
  3439  000CCC  6ED9               	movwf	fsr2l,c
  3440  000CCE  6ADA               	clrf	fsr2h,c
  3441  000CD0  9EDF               	bcf	indf2,7,c
  3442                           
  3443                           ;ikb.c: 696: key[k].sm1 = (2);
  3444  000CD2  5023               	movf	ikey_parsing@k,w,c
  3445  000CD4  0D10               	mullw	16
  3446  000CD6  50F3               	movf	prodl,w,c
  3447  000CD8  0F66               	addlw	low (_key+6)
  3448  000CDA  6ED9               	movwf	fsr2l,c
  3449  000CDC  6ADA               	clrf	fsr2h,c
  3450  000CDE  0E02               	movlw	2
  3451  000CE0  6EDF               	movwf	indf2,c
  3452  000CE2                     l5523:
  3453                           
  3454                           ;ikb.c: 697: };ikb.c: 698: };ikb.c: 701: if (key[k].counter1 >= ((3000E-3/5E-3)))
  3455  000CE2  5023               	movf	ikey_parsing@k,w,c
  3456  000CE4  0D10               	mullw	16
  3457  000CE6  50F3               	movf	prodl,w,c
  3458  000CE8  0F67               	addlw	low (_key+7)
  3459  000CEA  6ED9               	movwf	fsr2l,c
  3460  000CEC  6ADA               	clrf	fsr2h,c
  3461  000CEE  CFDE F013          	movff	postinc2,___lwtoft@c
  3462  000CF2  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3463  000CF6  ECA7  F014         	call	___lwtoft	;wreg free
  3464  000CFA  C013  F016         	movff	?___lwtoft,___ftge@ff1
  3465  000CFE  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  3466  000D02  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  3467  000D06  0E00               	movlw	0
  3468  000D08  6E19               	movwf	___ftge@ff2,c
  3469  000D0A  0E16               	movlw	22
  3470  000D0C  6E1A               	movwf	___ftge@ff2+1,c
  3471  000D0E  0E44               	movlw	68
  3472  000D10  6E1B               	movwf	___ftge@ff2+2,c
  3473  000D12  ECDD  F010         	call	___ftge	;wreg free
  3474  000D16  A0D8               	btfss	status,0,c
  3475  000D18  D021               	goto	l347
  3476                           
  3477                           ;ikb.c: 702: {;ikb.c: 703: key[k].counter1 = 0x0000;
  3478  000D1A  5023               	movf	ikey_parsing@k,w,c
  3479  000D1C  0D10               	mullw	16
  3480  000D1E  50F3               	movf	prodl,w,c
  3481  000D20  0F67               	addlw	low (_key+7)
  3482  000D22  6ED9               	movwf	fsr2l,c
  3483  000D24  6ADA               	clrf	fsr2h,c
  3484  000D26  0E00               	movlw	0
  3485  000D28  6EDE               	movwf	postinc2,c
  3486  000D2A  0E00               	movlw	0
  3487  000D2C  6EDD               	movwf	postdec2,c
  3488                           
  3489                           ;ikb.c: 705: key[k].bf.ReadyToRead = 1;
  3490  000D2E  5023               	movf	ikey_parsing@k,w,c
  3491  000D30  0D10               	mullw	16
  3492  000D32  50F3               	movf	prodl,w,c
  3493  000D34  0F6A               	addlw	low (_key+10)
  3494  000D36  6ED9               	movwf	fsr2l,c
  3495  000D38  6ADA               	clrf	fsr2h,c
  3496  000D3A  0100               	movlb	0	; () banked
  3497  000D3C  8CDF               	bsf	indf2,6,c
  3498                           
  3499                           ;ikb.c: 706: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3500  000D3E  5023               	movf	ikey_parsing@k,w,c
  3501  000D40  0D10               	mullw	16
  3502  000D42  50F3               	movf	prodl,w,c
  3503  000D44  0F6A               	addlw	low (_key+10)
  3504  000D46  6ED9               	movwf	fsr2l,c
  3505  000D48  6ADA               	clrf	fsr2h,c
  3506  000D4A  8EDF               	bsf	indf2,7,c
  3507                           
  3508                           ;ikb.c: 709: key[k].sm1 = (1);
  3509  000D4C  5023               	movf	ikey_parsing@k,w,c
  3510  000D4E  0D10               	mullw	16
  3511  000D50  50F3               	movf	prodl,w,c
  3512  000D52  0F66               	addlw	low (_key+6)
  3513  000D54  6ED9               	movwf	fsr2l,c
  3514  000D56  6ADA               	clrf	fsr2h,c
  3515  000D58  0E01               	movlw	1
  3516  000D5A  6EDF               	movwf	indf2,c
  3517  000D5C                     l347:
  3518                           
  3519                           ;ikb.c: 710: };ikb.c: 711: };ikb.c: 714: if (key[k].sm1 == (1))
  3520  000D5C  5023               	movf	ikey_parsing@k,w,c
  3521  000D5E  0D10               	mullw	16
  3522  000D60  50F3               	movf	prodl,w,c
  3523  000D62  0F66               	addlw	low (_key+6)
  3524  000D64  6ED9               	movwf	fsr2l,c
  3525  000D66  6ADA               	clrf	fsr2h,c
  3526  000D68  04DE               	decf	postinc2,w,c
  3527  000D6A  A4D8               	btfss	status,2,c
  3528  000D6C  D011               	goto	l351
  3529                           
  3530                           ;ikb.c: 715: {;ikb.c: 716: if (key[k].bf.state == 0)
  3531  000D6E  5023               	movf	ikey_parsing@k,w,c
  3532  000D70  0D10               	mullw	16
  3533  000D72  50F3               	movf	prodl,w,c
  3534  000D74  0F6A               	addlw	low (_key+10)
  3535  000D76  6ED9               	movwf	fsr2l,c
  3536  000D78  6ADA               	clrf	fsr2h,c
  3537  000D7A  0100               	movlb	0	; () banked
  3538  000D7C  B0DF               	btfsc	indf2,0,c
  3539  000D7E  D008               	goto	l351
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;ikb.c: 717: {;ikb.c: 718: key[k].sm1 = (2);
  3543  000D80  5023               	movf	ikey_parsing@k,w,c
  3544  000D82  0D10               	mullw	16
  3545  000D84  50F3               	movf	prodl,w,c
  3546  000D86  0F66               	addlw	low (_key+6)
  3547  000D88  6ED9               	movwf	fsr2l,c
  3548  000D8A  6ADA               	clrf	fsr2h,c
  3549  000D8C  0E02               	movlw	2
  3550  000D8E  6EDF               	movwf	indf2,c
  3551  000D90                     l351:
  3552                           
  3553                           ;ikb.c: 719: };ikb.c: 720: };ikb.c: 722: if (key[k].sm1 == (2))
  3554  000D90  5023               	movf	ikey_parsing@k,w,c
  3555  000D92  0D10               	mullw	16
  3556  000D94  50F3               	movf	prodl,w,c
  3557  000D96  0F66               	addlw	low (_key+6)
  3558  000D98  6ED9               	movwf	fsr2l,c
  3559  000D9A  6ADA               	clrf	fsr2h,c
  3560  000D9C  0E02               	movlw	2
  3561  000D9E  18DE               	xorwf	postinc2,w,c
  3562  000DA0  A4D8               	btfss	status,2,c
  3563  000DA2  D011               	goto	l353
  3564                           
  3565                           ;ikb.c: 723: {;ikb.c: 724: if (key[k].bf.ReadyToRead == 0)
  3566  000DA4  5023               	movf	ikey_parsing@k,w,c
  3567  000DA6  0D10               	mullw	16
  3568  000DA8  50F3               	movf	prodl,w,c
  3569  000DAA  0F6A               	addlw	low (_key+10)
  3570  000DAC  6ED9               	movwf	fsr2l,c
  3571  000DAE  6ADA               	clrf	fsr2h,c
  3572  000DB0  0100               	movlb	0	; () banked
  3573  000DB2  BCDF               	btfsc	indf2,6,c
  3574  000DB4  D008               	goto	l353
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;ikb.c: 725: {;ikb.c: 726: key[k].sm1 = (9);
  3578  000DB6  5023               	movf	ikey_parsing@k,w,c
  3579  000DB8  0D10               	mullw	16
  3580  000DBA  50F3               	movf	prodl,w,c
  3581  000DBC  0F66               	addlw	low (_key+6)
  3582  000DBE  6ED9               	movwf	fsr2l,c
  3583  000DC0  6ADA               	clrf	fsr2h,c
  3584  000DC2  0E09               	movlw	9
  3585  000DC4  6EDF               	movwf	indf2,c
  3586  000DC6                     l353:
  3587                           
  3588                           ;ikb.c: 727: };ikb.c: 728: };ikb.c: 730: if (key[k].sm1 == (9))
  3589  000DC6  5023               	movf	ikey_parsing@k,w,c
  3590  000DC8  0D10               	mullw	16
  3591  000DCA  50F3               	movf	prodl,w,c
  3592  000DCC  0F66               	addlw	low (_key+6)
  3593  000DCE  6ED9               	movwf	fsr2l,c
  3594  000DD0  6ADA               	clrf	fsr2h,c
  3595  000DD2  0E09               	movlw	9
  3596  000DD4  18DE               	xorwf	postinc2,w,c
  3597  000DD6  A4D8               	btfss	status,2,c
  3598  000DD8  D02F               	goto	l5539
  3599                           
  3600                           ;ikb.c: 731: {;ikb.c: 732: if (key[k].num_group_x > 0)
  3601  000DDA  5023               	movf	ikey_parsing@k,w,c
  3602  000DDC  0D10               	mullw	16
  3603  000DDE  50F3               	movf	prodl,w,c
  3604  000DE0  0F69               	addlw	low (_key+9)
  3605  000DE2  6ED9               	movwf	fsr2l,c
  3606  000DE4  6ADA               	clrf	fsr2h,c
  3607  000DE6  50DF               	movf	indf2,w,c
  3608  000DE8  B4D8               	btfsc	status,2,c
  3609  000DEA  D016               	goto	l356
  3610                           
  3611                           ;ikb.c: 733: {;ikb.c: 734: group_x[key[k].num_group_x] = 0;
  3612  000DEC  5023               	movf	ikey_parsing@k,w,c
  3613  000DEE  0D10               	mullw	16
  3614  000DF0  50F3               	movf	prodl,w,c
  3615  000DF2  0F69               	addlw	low (_key+9)
  3616  000DF4  6ED9               	movwf	fsr2l,c
  3617  000DF6  6ADA               	clrf	fsr2h,c
  3618  000DF8  50DF               	movf	indf2,w,c
  3619  000DFA  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3620  000DFC  501F               	movf	??_ikey_parsing,w,c
  3621  000DFE  0FB8               	addlw	low _group_x
  3622  000E00  6ED9               	movwf	fsr2l,c
  3623  000E02  6ADA               	clrf	fsr2h,c
  3624  000E04  0E00               	movlw	0
  3625  000E06  6EDF               	movwf	indf2,c
  3626                           
  3627                           ;ikb.c: 735: key[k].bf.OwnerOfGroup = 0;
  3628  000E08  5023               	movf	ikey_parsing@k,w,c
  3629  000E0A  0D10               	mullw	16
  3630  000E0C  50F3               	movf	prodl,w,c
  3631  000E0E  0F6B               	addlw	low (_key+11)
  3632  000E10  6ED9               	movwf	fsr2l,c
  3633  000E12  6ADA               	clrf	fsr2h,c
  3634  000E14  0100               	movlb	0	; () banked
  3635  000E16  90DF               	bcf	indf2,0,c
  3636  000E18                     l356:
  3637                           
  3638                           ;ikb.c: 736: };ikb.c: 738: key[k].sm1 = (0);
  3639  000E18  5023               	movf	ikey_parsing@k,w,c
  3640  000E1A  0D10               	mullw	16
  3641  000E1C  50F3               	movf	prodl,w,c
  3642  000E1E  0F66               	addlw	low (_key+6)
  3643  000E20  6ED9               	movwf	fsr2l,c
  3644  000E22  6ADA               	clrf	fsr2h,c
  3645  000E24  0E00               	movlw	0
  3646  000E26  6EDF               	movwf	indf2,c
  3647                           
  3648                           ;ikb.c: 741: key[k].bf.InProcessing = 0;
  3649  000E28  5023               	movf	ikey_parsing@k,w,c
  3650  000E2A  0D10               	mullw	16
  3651  000E2C  50F3               	movf	prodl,w,c
  3652  000E2E  0F6B               	addlw	low (_key+11)
  3653  000E30  6ED9               	movwf	fsr2l,c
  3654  000E32  6ADA               	clrf	fsr2h,c
  3655  000E34  0100               	movlb	0	; () banked
  3656  000E36  92DF               	bcf	indf2,1,c
  3657  000E38                     l5539:
  3658  000E38  2A23               	incf	ikey_parsing@k,f,c
  3659  000E3A  0E04               	movlw	4
  3660  000E3C  6423               	cpfsgt	ikey_parsing@k,c
  3661  000E3E  D4EB               	goto	l5453
  3662  000E40  0012               	return	
  3663  000E42                     __end_of_ikey_parsing:
  3664                           	opt callstack 0
  3665                           
  3666 ;; *************** function _ikey_is_accessible *****************
  3667 ;; Defined at:
  3668 ;;		line 509 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  k               1    wreg     unsigned char 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  k               1   12[COMRAM] unsigned char 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      unsigned char 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0
  3683 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3684 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3685 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3686 ;;Total ram usage:        3 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    5
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_ikey_parsing
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text15
  3697  002520                     __ptext15:
  3698                           	opt callstack 0
  3699  002520                     _ikey_is_accessible:
  3700                           	opt callstack 23
  3701                           
  3702                           ;incstack = 0
  3703                           ;ikey_is_accessible@k stored from wreg
  3704  002520  6E0D               	movwf	ikey_is_accessible@k,c
  3705                           
  3706                           ;ikb.c: 511: if (key[k].num_group_x != 0)
  3707  002522  500D               	movf	ikey_is_accessible@k,w,c
  3708  002524  0D10               	mullw	16
  3709  002526  50F3               	movf	prodl,w,c
  3710  002528  0F69               	addlw	low (_key+9)
  3711  00252A  6ED9               	movwf	fsr2l,c
  3712  00252C  6ADA               	clrf	fsr2h,c
  3713  00252E  50DF               	movf	indf2,w,c
  3714  002530  B4D8               	btfsc	status,2,c
  3715  002532  D01A               	goto	l5313
  3716                           
  3717                           ;ikb.c: 512: {;ikb.c: 514: if (group_x[key[k].num_group_x] == 1)
  3718  002534  500D               	movf	ikey_is_accessible@k,w,c
  3719  002536  0D10               	mullw	16
  3720  002538  50F3               	movf	prodl,w,c
  3721  00253A  0F69               	addlw	low (_key+9)
  3722  00253C  6ED9               	movwf	fsr2l,c
  3723  00253E  6ADA               	clrf	fsr2h,c
  3724  002540  50DF               	movf	indf2,w,c
  3725  002542  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  3726  002544  500B               	movf	??_ikey_is_accessible,w,c
  3727  002546  0FB8               	addlw	low _group_x
  3728  002548  6ED9               	movwf	fsr2l,c
  3729  00254A  6ADA               	clrf	fsr2h,c
  3730  00254C  04DE               	decf	postinc2,w,c
  3731  00254E  A4D8               	btfss	status,2,c
  3732  002550  D00B               	goto	l5313
  3733                           
  3734                           ;ikb.c: 515: {;ikb.c: 517: if ( !key[k].bf.OwnerOfGroup)
  3735  002552  500D               	movf	ikey_is_accessible@k,w,c
  3736  002554  0D10               	mullw	16
  3737  002556  50F3               	movf	prodl,w,c
  3738  002558  0F6B               	addlw	low (_key+11)
  3739  00255A  6ED9               	movwf	fsr2l,c
  3740  00255C  6ADA               	clrf	fsr2h,c
  3741  00255E  0100               	movlb	0	; () banked
  3742  002560  B0DF               	btfsc	indf2,0,c
  3743  002562  D002               	goto	l5313
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;ikb.c: 518: {;ikb.c: 519: return 0;
  3747  002564  0E00               	movlw	0
  3748  002566  0012               	return	
  3749  002568                     l5313:
  3750                           
  3751                           ;ikb.c: 520: };ikb.c: 521: };ikb.c: 522: };ikb.c: 523: return 1;
  3752  002568  0E01               	movlw	1
  3753  00256A  0012               	return		;funcret
  3754  00256C                     __end_of_ikey_is_accessible:
  3755                           	opt callstack 0
  3756                           
  3757 ;; *************** function ___lwtoft *****************
  3758 ;; Defined at:
  3759 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  c               2   18[COMRAM] unsigned int 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  3   18[COMRAM] float 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3773 ;;      Params:         3       0       0       0       0       0       0       0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3776 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3777 ;;Total ram usage:        3 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    6
  3780 ;; This function calls:
  3781 ;;		___ftpack
  3782 ;; This function is called by:
  3783 ;;		_ikey_parsing
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text16
  3788  00294E                     __ptext16:
  3789                           	opt callstack 0
  3790  00294E                     ___lwtoft:
  3791                           	opt callstack 22
  3792                           
  3793                           ;incstack = 0
  3794  00294E  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  3795  002952  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  3796  002956  6A0D               	clrf	___ftpack@arg+2,c
  3797  002958  0E8E               	movlw	142
  3798  00295A  6E0E               	movwf	___ftpack@exp,c
  3799  00295C  0E00               	movlw	0
  3800  00295E  6E0F               	movwf	___ftpack@sign,c
  3801  002960  EC8C  F00D         	call	___ftpack	;wreg free
  3802  002964  C00B  F013         	movff	?___ftpack,?___lwtoft
  3803  002968  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  3804  00296C  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  3805  002970  0012               	return		;funcret
  3806  002972                     __end_of___lwtoft:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function _ikb_init *****************
  3810 ;; Defined at:
  3811 ;;		line 216 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  i               1   10[COMRAM] char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 3F/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0
  3826 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3828 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3829 ;;Total ram usage:        1 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    5
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text17
  3840  001A62                     __ptext17:
  3841                           	opt callstack 0
  3842  001A62                     _ikb_init:
  3843                           	opt callstack 25
  3844                           
  3845                           ;incstack = 0
  3846                           ;ikb.c: 218: int8_t i;;ikb.c: 388: do{TRISC |= 1<<4;}while(0);
  3847  001A62  8894               	bsf	3988,4,c	;volatile
  3848                           
  3849                           ;ikb.c: 389: do{TRISC |= 1<<5;}while(0);
  3850  001A64  8A94               	bsf	3988,5,c	;volatile
  3851                           
  3852                           ;ikb.c: 390: do{TRISC |= 1<<6;}while(0);
  3853  001A66  8C94               	bsf	3988,6,c	;volatile
  3854                           
  3855                           ;ikb.c: 391: do{TRISC |= 1<<7;}while(0);
  3856  001A68  8E94               	bsf	3988,7,c	;volatile
  3857                           
  3858                           ;ikb.c: 392: do{TRISD |= 1<<4;}while(0);
  3859  001A6A  8895               	bsf	3989,4,c	;volatile
  3860                           
  3861                           ;ikb.c: 393: key[0].keyRead = keyRead_pin_key0;
  3862  001A6C  0E82               	movlw	low _keyRead_pin_key0
  3863  001A6E  0100               	movlb	0	; () banked
  3864  001A70  6F60               	movwf	_key& (0+255),b	;volatile
  3865  001A72  0E2B               	movlw	high _keyRead_pin_key0
  3866  001A74  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;ikb.c: 394: key[1].keyRead = keyRead_pin_key1;
  3870  001A76  0E3C               	movlw	low _keyRead_pin_key1
  3871  001A78  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3872  001A7A  0E2B               	movlw	high _keyRead_pin_key1
  3873  001A7C  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;ikb.c: 395: key[2].keyRead = keyRead_pin_key2;
  3877  001A7E  0E32               	movlw	low _keyRead_pin_key2
  3878  001A80  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3879  001A82  0E2B               	movlw	high _keyRead_pin_key2
  3880  001A84  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;ikb.c: 396: key[3].keyRead = keyRead_pin_key3;
  3884  001A86  0E92               	movlw	low _keyRead_pin_key3
  3885  001A88  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3886  001A8A  0E2B               	movlw	high _keyRead_pin_key3
  3887  001A8C  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;ikb.c: 397: key[4].keyRead = keyRead_pin_key4;
  3891  001A8E  0E8A               	movlw	low _keyRead_pin_key4
  3892  001A90  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3893  001A92  0E2B               	movlw	high _keyRead_pin_key4
  3894  001A94  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;ikb.c: 400: for (i=0; i<5; i++)
  3898  001A96  0E00               	movlw	0
  3899  001A98  6E0B               	movwf	ikb_init@i,c
  3900  001A9A                     l5805:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;ikb.c: 401: {;ikb.c: 402: key[i].bf.OnKeyPressed = 1;
  3904  001A9A  500B               	movf	ikb_init@i,w,c
  3905  001A9C  0D10               	mullw	16
  3906  001A9E  50F3               	movf	prodl,w,c
  3907  001AA0  0F6A               	addlw	low (_key+10)
  3908  001AA2  6ED9               	movwf	fsr2l,c
  3909  001AA4  6ADA               	clrf	fsr2h,c
  3910  001AA6  82DF               	bsf	indf2,1,c
  3911                           
  3912                           ;ikb.c: 403: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3913  001AA8  500B               	movf	ikb_init@i,w,c
  3914  001AAA  0D10               	mullw	16
  3915  001AAC  50F3               	movf	prodl,w,c
  3916  001AAE  0F6A               	addlw	low (_key+10)
  3917  001AB0  6ED9               	movwf	fsr2l,c
  3918  001AB2  6ADA               	clrf	fsr2h,c
  3919  001AB4  94DF               	bcf	indf2,2,c
  3920                           
  3921                           ;ikb.c: 404: key[i].bf.AtTimeExpired = 0;
  3922  001AB6  500B               	movf	ikb_init@i,w,c
  3923  001AB8  0D10               	mullw	16
  3924  001ABA  50F3               	movf	prodl,w,c
  3925  001ABC  0F6A               	addlw	low (_key+10)
  3926  001ABE  6ED9               	movwf	fsr2l,c
  3927  001AC0  6ADA               	clrf	fsr2h,c
  3928  001AC2  96DF               	bcf	indf2,3,c
  3929                           
  3930                           ;ikb.c: 405: key[i].bf.Reptt = 0;
  3931  001AC4  500B               	movf	ikb_init@i,w,c
  3932  001AC6  0D10               	mullw	16
  3933  001AC8  50F3               	movf	prodl,w,c
  3934  001ACA  0F6A               	addlw	low (_key+10)
  3935  001ACC  6ED9               	movwf	fsr2l,c
  3936  001ACE  6ADA               	clrf	fsr2h,c
  3937  001AD0  9ADF               	bcf	indf2,5,c
  3938                           
  3939                           ;ikb.c: 406: key[i].num_group_x = 0;
  3940  001AD2  500B               	movf	ikb_init@i,w,c
  3941  001AD4  0D10               	mullw	16
  3942  001AD6  50F3               	movf	prodl,w,c
  3943  001AD8  0F69               	addlw	low (_key+9)
  3944  001ADA  6ED9               	movwf	fsr2l,c
  3945  001ADC  6ADA               	clrf	fsr2h,c
  3946  001ADE  0E00               	movlw	0
  3947  001AE0  6EDF               	movwf	indf2,c
  3948                           
  3949                           ;ikb.c: 407: key[i].repp.to_start= (uint16_t)500.0/5;
  3950  001AE2  500B               	movf	ikb_init@i,w,c
  3951  001AE4  0D10               	mullw	16
  3952  001AE6  50F3               	movf	prodl,w,c
  3953  001AE8  0F6C               	addlw	low (_key+12)
  3954  001AEA  6ED9               	movwf	fsr2l,c
  3955  001AEC  6ADA               	clrf	fsr2h,c
  3956  001AEE  0E64               	movlw	100
  3957  001AF0  6EDE               	movwf	postinc2,c
  3958  001AF2  0E00               	movlw	0
  3959  001AF4  6EDD               	movwf	postdec2,c
  3960                           
  3961                           ;ikb.c: 408: key[i].repp.after_start = (uint16_t)200.0/5;
  3962  001AF6  500B               	movf	ikb_init@i,w,c
  3963  001AF8  0D10               	mullw	16
  3964  001AFA  50F3               	movf	prodl,w,c
  3965  001AFC  0F6E               	addlw	low (_key+14)
  3966  001AFE  6ED9               	movwf	fsr2l,c
  3967  001B00  6ADA               	clrf	fsr2h,c
  3968  001B02  0E28               	movlw	40
  3969  001B04  6EDE               	movwf	postinc2,c
  3970  001B06  0E00               	movlw	0
  3971  001B08  6EDD               	movwf	postdec2,c
  3972                           
  3973                           ; BSR set to: 0
  3974  001B0A  2A0B               	incf	ikb_init@i,f,c
  3975                           
  3976                           ; BSR set to: 0
  3977  001B0C  500B               	movf	ikb_init@i,w,c
  3978  001B0E  0A80               	xorlw	128
  3979  001B10  0F7B               	addlw	-133
  3980  001B12  B0D8               	btfsc	status,0,c
  3981  001B14  0012               	return	
  3982  001B16  D7C1               	goto	l5805
  3983  001B18                     __end_of_ikb_init:
  3984                           	opt callstack 0
  3985                           
  3986 ;; *************** function _errorHandler_queue *****************
  3987 ;; Defined at:
  3988 ;;		line 344 in file "main.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  is_granted      1   15[COMRAM] char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 3F/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0
  4003 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4004 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4005 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4006 ;;Total ram usage:        6 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    5
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_main
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text18
  4017  001BC6                     __ptext18:
  4018                           	opt callstack 0
  4019  001BC6                     _errorHandler_queue:
  4020                           	opt callstack 25
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;main.c: 348: static int8_t i =-1;;main.c: 349: static int8_t sm0;;main.c: 350: static u
      +                          int16_t c;;main.c: 351: intNumMaxErr_t is_granted;;main.c: 353: if (sm0 == 0)
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;incstack = 0
  4027  001BC6  51C3               	movf	errorHandler_queue@sm0& (0+255),w,b
  4028  001BC8  A4D8               	btfss	status,2,c
  4029  001BCA  D020               	goto	l5963
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;main.c: 354: {;main.c: 355: if (++i == 8)
  4033  001BCC  2A52               	incf	errorHandler_queue@i,f,c
  4034  001BCE  0E08               	movlw	8
  4035  001BD0  1852               	xorwf	errorHandler_queue@i,w,c
  4036  001BD2  A4D8               	btfss	status,2,c
  4037  001BD4  D002               	goto	l5953
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;main.c: 356: {i = 0x00;}
  4041  001BD6  0E00               	movlw	0
  4042  001BD8  6E52               	movwf	errorHandler_queue@i,c
  4043  001BDA                     l5953:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;main.c: 358: is_granted = error_requestToWriteDisp.packed & (1<<i);
  4047  001BDA  C052  F00B         	movff	errorHandler_queue@i,??_errorHandler_queue
  4048  001BDE  0E01               	movlw	1
  4049  001BE0  6E0C               	movwf	(??_errorHandler_queue+1)& (0+255),c
  4050  001BE2  2A0B               	incf	??_errorHandler_queue,f,c
  4051  001BE4  D002               	goto	u7434
  4052  001BE6                     u7435:
  4053  001BE6  90D8               	bcf	status,0,c
  4054  001BE8  360C               	rlcf	??_errorHandler_queue+1,f,c
  4055  001BEA                     u7434:
  4056  001BEA  2E0B               	decfsz	??_errorHandler_queue,f,c
  4057  001BEC  D7FC               	goto	u7435
  4058  001BEE  500C               	movf	??_errorHandler_queue+1,w,c
  4059  001BF0  0100               	movlb	0	; () banked
  4060  001BF2  15C9               	andwf	_error_requestToWriteDisp& (0+255),w,b
  4061  001BF4  6E10               	movwf	errorHandler_queue@is_granted,c
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 359: if (is_granted)
  4065  001BF6  5010               	movf	errorHandler_queue@is_granted,w,c
  4066  001BF8  B4D8               	btfsc	status,2,c
  4067  001BFA  0012               	return	
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;main.c: 360: {;main.c: 361: error_grantedToWriteDisp.packed = is_granted;
  4071  001BFC  C010  F0C8         	movff	errorHandler_queue@is_granted,_error_grantedToWriteDisp
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;main.c: 362: c = 0x0;
  4075  001C00  0E00               	movlw	0
  4076  001C02  6FC0               	movwf	(errorHandler_queue@c+1)& (0+255),b
  4077  001C04  0E00               	movlw	0
  4078  001C06  6FBF               	movwf	errorHandler_queue@c& (0+255),b
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 363: sm0++;
  4082  001C08  2BC3               	incf	errorHandler_queue@sm0& (0+255),f,b
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;main.c: 364: };main.c: 366: }
  4086  001C0A  0012               	return	
  4087  001C0C                     l5963:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;main.c: 367: else if (sm0 == 1)
  4091  001C0C  05C3               	decf	errorHandler_queue@sm0& (0+255),w,b
  4092  001C0E  A4D8               	btfss	status,2,c
  4093  001C10  0012               	return	
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;main.c: 368: {;main.c: 369: if ( error_requestToWriteDisp.packed & (1<<i) )
  4097  001C12  C052  F00B         	movff	errorHandler_queue@i,??_errorHandler_queue
  4098  001C16  0E01               	movlw	1
  4099  001C18  6E0C               	movwf	(??_errorHandler_queue+1)& (0+255),c
  4100  001C1A  0E00               	movlw	0
  4101  001C1C  6E0D               	movwf	(??_errorHandler_queue+2)& (0+255),c
  4102  001C1E  2A0B               	incf	??_errorHandler_queue,f,c
  4103  001C20  D003               	goto	u7464
  4104  001C22                     u7465:
  4105  001C22  90D8               	bcf	status,0,c
  4106  001C24  360C               	rlcf	??_errorHandler_queue+1,f,c
  4107  001C26  360D               	rlcf	??_errorHandler_queue+2,f,c
  4108  001C28                     u7464:
  4109  001C28  2E0B               	decfsz	??_errorHandler_queue,f,c
  4110  001C2A  D7FB               	goto	u7465
  4111  001C2C  C0C9  F00E         	movff	_error_requestToWriteDisp,??_errorHandler_queue+3
  4112  001C30  6A0F               	clrf	(??_errorHandler_queue+4)& (0+255),c
  4113  001C32  BE0E               	btfsc	(??_errorHandler_queue+3)& (0+255),7,c
  4114  001C34  060F               	decf	(??_errorHandler_queue+4)& (0+255),f,c
  4115  001C36  500C               	movf	??_errorHandler_queue+1,w,c
  4116  001C38  160E               	andwf	??_errorHandler_queue+3,f,c
  4117  001C3A  500D               	movf	??_errorHandler_queue+2,w,c
  4118  001C3C  160F               	andwf	??_errorHandler_queue+4,f,c
  4119  001C3E  500E               	movf	??_errorHandler_queue+3,w,c
  4120  001C40  100F               	iorwf	??_errorHandler_queue+4,w,c
  4121  001C42  B4D8               	btfsc	status,2,c
  4122  001C44  D012               	goto	l5973
  4123                           
  4124                           ;main.c: 370: {;main.c: 371: if (smain.f.f1ms)
  4125  001C46  A047               	btfss	_smain,0,c	;volatile
  4126  001C48  0012               	return	
  4127                           
  4128                           ;main.c: 372: {;main.c: 373: if (++c >= 1000)
  4129  001C4A  0100               	movlb	0	; () banked
  4130  001C4C  4BBF               	infsnz	errorHandler_queue@c& (0+255),f,b
  4131  001C4E  2BC0               	incf	(errorHandler_queue@c+1)& (0+255),f,b
  4132  001C50  0EE8               	movlw	232
  4133  001C52  5DBF               	subwf	errorHandler_queue@c& (0+255),w,b
  4134  001C54  0E03               	movlw	3
  4135  001C56  59C0               	subwfb	(errorHandler_queue@c+1)& (0+255),w,b
  4136  001C58  A0D8               	btfss	status,0,c
  4137  001C5A  0012               	return	
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;main.c: 374: {;main.c: 375: c = 0;
  4141  001C5C  0E00               	movlw	0
  4142  001C5E  6FC0               	movwf	(errorHandler_queue@c+1)& (0+255),b
  4143  001C60  0E00               	movlw	0
  4144  001C62  6FBF               	movwf	errorHandler_queue@c& (0+255),b
  4145                           
  4146                           ;main.c: 376: sm0 = 0;
  4147  001C64  0E00               	movlw	0
  4148  001C66  6FC3               	movwf	errorHandler_queue@sm0& (0+255),b
  4149  001C68  0012               	return	
  4150  001C6A                     l5973:
  4151                           
  4152                           ;main.c: 380: else;main.c: 381: {;main.c: 382: sm0 = 0x00;
  4153  001C6A  0E00               	movlw	0
  4154  001C6C  0100               	movlb	0	; () banked
  4155  001C6E  6FC3               	movwf	errorHandler_queue@sm0& (0+255),b
  4156  001C70  0012               	return		;funcret
  4157  001C72                     __end_of_errorHandler_queue:
  4158                           	opt callstack 0
  4159                           
  4160 ;; *************** function _disp7s_job *****************
  4161 ;; Defined at:
  4162 ;;		line 128 in file "display.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  pq              1   20[COMRAM] char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4179 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:        3 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    7
  4183 ;; This function calls:
  4184 ;;		_disp7s_mux0_off
  4185 ;;		_disp7s_mux0_on
  4186 ;;		_disp7s_mux1_off
  4187 ;;		_disp7s_mux1_on
  4188 ;;		_disp7s_mux2_off
  4189 ;;		_disp7s_mux2_on
  4190 ;;		_disp7s_mux3_off
  4191 ;;		_disp7s_mux3_on
  4192 ;;		_disp7s_mux4_off
  4193 ;;		_disp7s_mux4_on
  4194 ;;		_disp7s_mux_Q
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text19
  4201  00205A                     __ptext19:
  4202                           	opt callstack 0
  4203  00205A                     _disp7s_job:
  4204                           	opt callstack 23
  4205                           
  4206                           ;display.c: 134: pq= q-1;
  4207                           
  4208                           ;incstack = 0
  4209  00205A  044E               	decf	disp7s_job@q,w,c
  4210  00205C  6E15               	movwf	disp7s_job@pq,c
  4211                           
  4212                           ;display.c: 135: if (pq<0)
  4213  00205E  AE15               	btfss	disp7s_job@pq,7,c
  4214  002060  D002               	goto	l5869
  4215                           
  4216                           ;display.c: 136: {pq=(2 + 3)-1;}
  4217  002062  0E04               	movlw	4
  4218  002064  6E15               	movwf	disp7s_job@pq,c
  4219  002066                     l5869:
  4220                           
  4221                           ;display.c: 137: disp7s_mux[pq].Qonoff[0]();
  4222  002066  5015               	movf	disp7s_job@pq,w,c
  4223  002068  0D04               	mullw	4
  4224  00206A  50F3               	movf	prodl,w,c
  4225  00206C  0FCD               	addlw	low _disp7s_mux
  4226  00206E  6ED9               	movwf	fsr2l,c
  4227  002070  6ADA               	clrf	fsr2h,c
  4228  002072  D801               	call	u7258
  4229  002074  D00A               	goto	u7259
  4230  002076                     u7258:
  4231  002076  0005               	push	
  4232  002078  6EFA               	movwf	pclath,c
  4233  00207A  50DE               	movf	postinc2,w,c
  4234  00207C  6EFD               	movwf	tosl,c
  4235  00207E  50DE               	movf	postinc2,w,c
  4236  002080  6EFE               	movwf	tosh,c
  4237  002082  50F8               	movf	tblptru,w,c
  4238  002084  6EFF               	movwf	tosu,c
  4239  002086  50FA               	movf	pclath,w,c
  4240  002088  0012               	return		;indir
  4241  00208A                     u7259:
  4242                           
  4243                           ;display.c: 139: if (q < 3)
  4244  00208A  504E               	movf	disp7s_job@q,w,c
  4245  00208C  0A80               	xorlw	128
  4246  00208E  0F7D               	addlw	-131
  4247  002090  B0D8               	btfsc	status,0,c
  4248  002092  D007               	goto	l5875
  4249                           
  4250                           ;display.c: 140: {LATB = pulsonic.disp7s.qty[q];}
  4251  002094  0E3C               	movlw	low (_pulsonic+60)
  4252  002096  244E               	addwf	disp7s_job@q,w,c
  4253  002098  6ED9               	movwf	fsr2l,c
  4254  00209A  6ADA               	clrf	fsr2h,c
  4255  00209C  0E01               	movlw	high (_pulsonic+60)
  4256  00209E  22DA               	addwfc	fsr2h,f,c
  4257  0020A0  D00B               	goto	L4
  4258  0020A2                     l5875:
  4259                           
  4260                           ;display.c: 141: else;display.c: 142: {LATB = pulsonic.disp7s.mode[q-3];}
  4261  0020A2  C04E  F013         	movff	disp7s_job@q,??_disp7s_job
  4262  0020A6  6A14               	clrf	(??_disp7s_job+1)& (0+255),c
  4263  0020A8  BE13               	btfsc	??_disp7s_job& (0+255),7,c
  4264  0020AA  0614               	decf	(??_disp7s_job+1)& (0+255),f,c
  4265  0020AC  0E3C               	movlw	low (_pulsonic+60)
  4266  0020AE  2413               	addwf	??_disp7s_job,w,c
  4267  0020B0  6ED9               	movwf	fsr2l,c
  4268  0020B2  0E01               	movlw	high (_pulsonic+60)
  4269  0020B4  2014               	addwfc	??_disp7s_job+1,w,c
  4270  0020B6  6EDA               	movwf	fsr2h,c
  4271  0020B8                     L4:
  4272  0020B8  50DF               	movf	indf2,w,c
  4273  0020BA  6E8A               	movwf	3978,c	;volatile
  4274                           
  4275                           ;display.c: 144: disp7s_mux_Q(q);
  4276  0020BC  504E               	movf	disp7s_job@q,w,c
  4277  0020BE  EC39  F00E         	call	_disp7s_mux_Q
  4278                           
  4279                           ;display.c: 146: if (++q == (2 + 3))
  4280  0020C2  2A4E               	incf	disp7s_job@q,f,c
  4281  0020C4  0E05               	movlw	5
  4282  0020C6  184E               	xorwf	disp7s_job@q,w,c
  4283  0020C8  A4D8               	btfss	status,2,c
  4284  0020CA  0012               	return	
  4285                           
  4286                           ;display.c: 147: {q=0x0;}
  4287  0020CC  0E00               	movlw	0
  4288  0020CE  6E4E               	movwf	disp7s_job@q,c
  4289  0020D0  0012               	return		;funcret
  4290  0020D2                     __end_of_disp7s_job:
  4291                           	opt callstack 0
  4292                           
  4293 ;; *************** function _disp7s_mux_Q *****************
  4294 ;; Defined at:
  4295 ;;		line 97 in file "display.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  q               1    wreg     char 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  q               1   16[COMRAM] char 
  4300 ;;  i               1   17[COMRAM] char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0
  4311 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4312 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4313 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4314 ;;Total ram usage:        8 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    6
  4317 ;; This function calls:
  4318 ;;		_disp7s_mux0_off
  4319 ;;		_disp7s_mux0_on
  4320 ;;		_disp7s_mux1_off
  4321 ;;		_disp7s_mux1_on
  4322 ;;		_disp7s_mux2_off
  4323 ;;		_disp7s_mux2_on
  4324 ;;		_disp7s_mux3_off
  4325 ;;		_disp7s_mux3_on
  4326 ;;		_disp7s_mux4_off
  4327 ;;		_disp7s_mux4_on
  4328 ;; This function is called by:
  4329 ;;		_disp7s_job
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text20
  4334  001C72                     __ptext20:
  4335                           	opt callstack 0
  4336  001C72                     _disp7s_mux_Q:
  4337                           	opt callstack 23
  4338                           
  4339                           ;incstack = 0
  4340                           ;disp7s_mux_Q@q stored from wreg
  4341  001C72  6E11               	movwf	disp7s_mux_Q@q,c
  4342                           
  4343                           ;display.c: 99: int8_t i;;display.c: 100: for (i=0; i< (2 + 3); i++)
  4344  001C74  0E00               	movlw	0
  4345  001C76  6E12               	movwf	disp7s_mux_Q@i,c
  4346  001C78                     l5593:
  4347                           
  4348                           ;display.c: 101: {;display.c: 102: if ( (1<<i) & (1<<q) )
  4349  001C78  C011  F00B         	movff	disp7s_mux_Q@q,??_disp7s_mux_Q
  4350  001C7C  0E01               	movlw	1
  4351  001C7E  6E0C               	movwf	(??_disp7s_mux_Q+1)& (0+255),c
  4352  001C80  0E00               	movlw	0
  4353  001C82  6E0D               	movwf	(??_disp7s_mux_Q+2)& (0+255),c
  4354  001C84  2A0B               	incf	??_disp7s_mux_Q,f,c
  4355  001C86  D003               	goto	u6814
  4356  001C88                     u6815:
  4357  001C88  90D8               	bcf	status,0,c
  4358  001C8A  360C               	rlcf	??_disp7s_mux_Q+1,f,c
  4359  001C8C  360D               	rlcf	??_disp7s_mux_Q+2,f,c
  4360  001C8E                     u6814:
  4361  001C8E  2E0B               	decfsz	??_disp7s_mux_Q,f,c
  4362  001C90  D7FB               	goto	u6815
  4363  001C92  C012  F00E         	movff	disp7s_mux_Q@i,??_disp7s_mux_Q+3
  4364  001C96  0E01               	movlw	1
  4365  001C98  6E0F               	movwf	(??_disp7s_mux_Q+4)& (0+255),c
  4366  001C9A  0E00               	movlw	0
  4367  001C9C  6E10               	movwf	(??_disp7s_mux_Q+5)& (0+255),c
  4368  001C9E  2A0E               	incf	??_disp7s_mux_Q+3,f,c
  4369  001CA0  D003               	goto	u6824
  4370  001CA2                     u6825:
  4371  001CA2  90D8               	bcf	status,0,c
  4372  001CA4  360F               	rlcf	??_disp7s_mux_Q+4,f,c
  4373  001CA6  3610               	rlcf	??_disp7s_mux_Q+5,f,c
  4374  001CA8                     u6824:
  4375  001CA8  2E0E               	decfsz	??_disp7s_mux_Q+3,f,c
  4376  001CAA  D7FB               	goto	u6825
  4377  001CAC  500C               	movf	??_disp7s_mux_Q+1,w,c
  4378  001CAE  160F               	andwf	??_disp7s_mux_Q+4,f,c
  4379  001CB0  500D               	movf	??_disp7s_mux_Q+2,w,c
  4380  001CB2  1610               	andwf	??_disp7s_mux_Q+5,f,c
  4381  001CB4  500F               	movf	??_disp7s_mux_Q+4,w,c
  4382  001CB6  1010               	iorwf	??_disp7s_mux_Q+5,w,c
  4383  001CB8  B4D8               	btfsc	status,2,c
  4384  001CBA  D012               	goto	l5597
  4385                           
  4386                           ;display.c: 103: disp7s_mux[i].Qonoff[1]();
  4387  001CBC  5012               	movf	disp7s_mux_Q@i,w,c
  4388  001CBE  0D04               	mullw	4
  4389  001CC0  50F3               	movf	prodl,w,c
  4390  001CC2  0FCF               	addlw	low (_disp7s_mux+2)
  4391  001CC4  6ED9               	movwf	fsr2l,c
  4392  001CC6  6ADA               	clrf	fsr2h,c
  4393  001CC8  D801               	call	u6848
  4394  001CCA  D01C               	goto	u6859
  4395  001CCC                     u6848:
  4396  001CCC  0005               	push	
  4397  001CCE  6EFA               	movwf	pclath,c
  4398  001CD0  50DE               	movf	postinc2,w,c
  4399  001CD2  6EFD               	movwf	tosl,c
  4400  001CD4  50DE               	movf	postinc2,w,c
  4401  001CD6  6EFE               	movwf	tosh,c
  4402  001CD8  50F8               	movf	tblptru,w,c
  4403  001CDA  6EFF               	movwf	tosu,c
  4404  001CDC  50FA               	movf	pclath,w,c
  4405  001CDE  0012               	return		;indir
  4406  001CE0                     l5597:
  4407                           
  4408                           ;display.c: 104: else;display.c: 105: disp7s_mux[i].Qonoff[0]();
  4409  001CE0  5012               	movf	disp7s_mux_Q@i,w,c
  4410  001CE2  0D04               	mullw	4
  4411  001CE4  50F3               	movf	prodl,w,c
  4412  001CE6  0FCD               	addlw	low _disp7s_mux
  4413  001CE8  6ED9               	movwf	fsr2l,c
  4414  001CEA  6ADA               	clrf	fsr2h,c
  4415  001CEC  D801               	call	u6858
  4416  001CEE  D00A               	goto	u6859
  4417  001CF0                     u6858:
  4418  001CF0  0005               	push	
  4419  001CF2  6EFA               	movwf	pclath,c
  4420  001CF4  50DE               	movf	postinc2,w,c
  4421  001CF6  6EFD               	movwf	tosl,c
  4422  001CF8  50DE               	movf	postinc2,w,c
  4423  001CFA  6EFE               	movwf	tosh,c
  4424  001CFC  50F8               	movf	tblptru,w,c
  4425  001CFE  6EFF               	movwf	tosu,c
  4426  001D00  50FA               	movf	pclath,w,c
  4427  001D02  0012               	return		;indir
  4428  001D04                     u6859:
  4429  001D04  2A12               	incf	disp7s_mux_Q@i,f,c
  4430  001D06  5012               	movf	disp7s_mux_Q@i,w,c
  4431  001D08  0A80               	xorlw	128
  4432  001D0A  0F7B               	addlw	-133
  4433  001D0C  B0D8               	btfsc	status,0,c
  4434  001D0E  0012               	return	
  4435  001D10  D7B3               	goto	l5593
  4436  001D12                     __end_of_disp7s_mux_Q:
  4437                           	opt callstack 0
  4438                           
  4439 ;; *************** function _disp7s_init *****************
  4440 ;; Defined at:
  4441 ;;		line 112 in file "display.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  i               1   11[COMRAM] char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 3F/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0
  4456 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4458 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4459 ;;Total ram usage:        1 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    7
  4462 ;; This function calls:
  4463 ;;		_disp7s_mux_init
  4464 ;; This function is called by:
  4465 ;;		_main
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text21
  4470  0023C4                     __ptext21:
  4471                           	opt callstack 0
  4472  0023C4                     _disp7s_init:
  4473                           	opt callstack 23
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;display.c: 114: int8_t i;;display.c: 115: for (i=0; i<2; i++)
  4477                           
  4478                           ;incstack = 0
  4479  0023C4  0E00               	movlw	0
  4480  0023C6  6E0C               	movwf	disp7s_init@i,c
  4481  0023C8                     l5817:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;display.c: 116: {pulsonic.disp7s.mode[i] = DISP7S_CHARS[OFF];}
  4485  0023C8  0E0F               	movlw	low _DISP7S_CHARS
  4486  0023CA  6EF6               	movwf	tblptrl,c
  4487  0023CC                     	if	1	;There is more than 1 active tblptr byte
  4488  0023CC  0E08               	movlw	high _DISP7S_CHARS
  4489  0023CE  6EF7               	movwf	tblptrh,c
  4490  0023D0                     	endif
  4491  0023D0                     	if	0	;There are less than 3 active tblptr bytes
  4492  0023D0                     	endif
  4493  0023D0  0E3F               	movlw	low (_pulsonic+63)
  4494  0023D2  240C               	addwf	disp7s_init@i,w,c
  4495  0023D4  6ED9               	movwf	fsr2l,c
  4496  0023D6  6ADA               	clrf	fsr2h,c
  4497  0023D8  0E01               	movlw	high (_pulsonic+63)
  4498  0023DA  22DA               	addwfc	fsr2h,f,c
  4499  0023DC  0008               	tblrd		*
  4500  0023DE  CFF5 FFDF          	movff	tablat,indf2
  4501                           
  4502                           ; BSR set to: 0
  4503  0023E2  2A0C               	incf	disp7s_init@i,f,c
  4504                           
  4505                           ; BSR set to: 0
  4506  0023E4  500C               	movf	disp7s_init@i,w,c
  4507  0023E6  0A80               	xorlw	128
  4508  0023E8  0F7E               	addlw	-130
  4509  0023EA  A0D8               	btfss	status,0,c
  4510  0023EC  D7ED               	goto	l5817
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;display.c: 118: for (i=0; i<3; i++)
  4514  0023EE  0E00               	movlw	0
  4515  0023F0  6E0C               	movwf	disp7s_init@i,c
  4516  0023F2                     l5829:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;display.c: 119: {pulsonic.disp7s.qty[i] = DISP7S_CHARS[OFF];}
  4520  0023F2  0E0F               	movlw	low _DISP7S_CHARS
  4521  0023F4  6EF6               	movwf	tblptrl,c
  4522  0023F6                     	if	1	;There is more than 1 active tblptr byte
  4523  0023F6  0E08               	movlw	high _DISP7S_CHARS
  4524  0023F8  6EF7               	movwf	tblptrh,c
  4525  0023FA                     	endif
  4526  0023FA                     	if	0	;There are less than 3 active tblptr bytes
  4527  0023FA                     	endif
  4528  0023FA  0E3C               	movlw	low (_pulsonic+60)
  4529  0023FC  240C               	addwf	disp7s_init@i,w,c
  4530  0023FE  6ED9               	movwf	fsr2l,c
  4531  002400  6ADA               	clrf	fsr2h,c
  4532  002402  0E01               	movlw	high (_pulsonic+60)
  4533  002404  22DA               	addwfc	fsr2h,f,c
  4534  002406  0008               	tblrd		*
  4535  002408  CFF5 FFDF          	movff	tablat,indf2
  4536                           
  4537                           ; BSR set to: 0
  4538  00240C  2A0C               	incf	disp7s_init@i,f,c
  4539                           
  4540                           ; BSR set to: 0
  4541  00240E  500C               	movf	disp7s_init@i,w,c
  4542  002410  0A80               	xorlw	128
  4543  002412  0F7D               	addlw	-131
  4544  002414  A0D8               	btfss	status,0,c
  4545  002416  D7ED               	goto	l5829
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;display.c: 121: TRISB = 0x00;
  4549  002418  0E00               	movlw	0
  4550  00241A  6E93               	movwf	3987,c	;volatile
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;display.c: 122: disp7s_mux_init();
  4554  00241C  EC8A  F013         	call	_disp7s_mux_init	;wreg free
  4555  002420  0012               	return		;funcret
  4556  002422                     __end_of_disp7s_init:
  4557                           	opt callstack 0
  4558                           
  4559 ;; *************** function _disp7s_mux_init *****************
  4560 ;; Defined at:
  4561 ;;		line 83 in file "display.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  i               1   10[COMRAM] char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 3F/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0
  4576 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4578 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4579 ;;Total ram usage:        1 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    6
  4582 ;; This function calls:
  4583 ;;		_disp7s_mux0_off
  4584 ;;		_disp7s_mux0_on
  4585 ;;		_disp7s_mux1_off
  4586 ;;		_disp7s_mux1_on
  4587 ;;		_disp7s_mux2_off
  4588 ;;		_disp7s_mux2_on
  4589 ;;		_disp7s_mux3_off
  4590 ;;		_disp7s_mux3_on
  4591 ;;		_disp7s_mux4_off
  4592 ;;		_disp7s_mux4_on
  4593 ;; This function is called by:
  4594 ;;		_disp7s_init
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text22
  4599  002714                     __ptext22:
  4600                           	opt callstack 0
  4601  002714                     _disp7s_mux_init:
  4602                           	opt callstack 23
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;display.c: 85: int8_t i;;display.c: 86: for (i=0; i< (2 + 3); i++)
  4606                           
  4607                           ;incstack = 0
  4608  002714  0E00               	movlw	0
  4609  002716  6E0B               	movwf	disp7s_mux_init@i,c
  4610  002718                     l5579:
  4611                           
  4612                           ;display.c: 87: {;display.c: 88: disp7s_mux[i].Qonoff[0]();
  4613  002718  500B               	movf	disp7s_mux_init@i,w,c
  4614  00271A  0D04               	mullw	4
  4615  00271C  50F3               	movf	prodl,w,c
  4616  00271E  0FCD               	addlw	low _disp7s_mux
  4617  002720  6ED9               	movwf	fsr2l,c
  4618  002722  6ADA               	clrf	fsr2h,c
  4619  002724  D801               	call	u6798
  4620  002726  D00A               	goto	u6799
  4621  002728                     u6798:
  4622  002728  0005               	push	
  4623  00272A  6EFA               	movwf	pclath,c
  4624  00272C  50DE               	movf	postinc2,w,c
  4625  00272E  6EFD               	movwf	tosl,c
  4626  002730  50DE               	movf	postinc2,w,c
  4627  002732  6EFE               	movwf	tosh,c
  4628  002734  50F8               	movf	tblptru,w,c
  4629  002736  6EFF               	movwf	tosu,c
  4630  002738  50FA               	movf	pclath,w,c
  4631  00273A  0012               	return		;indir
  4632  00273C                     u6799:
  4633  00273C  2A0B               	incf	disp7s_mux_init@i,f,c
  4634  00273E  500B               	movf	disp7s_mux_init@i,w,c
  4635  002740  0A80               	xorlw	128
  4636  002742  0F7B               	addlw	-133
  4637  002744  A0D8               	btfss	status,0,c
  4638  002746  D7E8               	goto	l5579
  4639  002748  9892               	bcf	3986,4,c	;volatile
  4640                           
  4641                           ;display.c: 91: do{TRISA &= ~(1<<3);}while(0);
  4642  00274A  9692               	bcf	3986,3,c	;volatile
  4643                           
  4644                           ;display.c: 92: do{TRISA &= ~(1<<2);}while(0);
  4645  00274C  9492               	bcf	3986,2,c	;volatile
  4646                           
  4647                           ;display.c: 93: do{TRISA &= ~(1<<1);}while(0);
  4648  00274E  9292               	bcf	3986,1,c	;volatile
  4649                           
  4650                           ;display.c: 94: do{TRISA &= ~(1<<0);}while(0);
  4651  002750  9092               	bcf	3986,0,c	;volatile
  4652  002752  0012               	return		;funcret
  4653  002754                     __end_of_disp7s_mux_init:
  4654                           	opt callstack 0
  4655                           
  4656 ;; *************** function _disp7s_mux4_off *****************
  4657 ;; Defined at:
  4658 ;;		line 41 in file "display.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    5
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_disp7s_mux_init
  4683 ;;		_disp7s_mux_Q
  4684 ;;		_disp7s_job
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text23
  4689  002BA4                     __ptext23:
  4690                           	opt callstack 0
  4691  002BA4                     _disp7s_mux4_off:
  4692                           	opt callstack 23
  4693                           
  4694                           ;incstack = 0
  4695                           ;display.c: 43: do{LATA |= 1<<0;}while(0);
  4696  002BA4  8089               	bsf	3977,0,c	;volatile
  4697  002BA6  0012               	return		;funcret
  4698  002BA8                     __end_of_disp7s_mux4_off:
  4699                           	opt callstack 0
  4700                           
  4701 ;; *************** function _disp7s_mux3_on *****************
  4702 ;; Defined at:
  4703 ;;		line 36 in file "display.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4717 ;;      Params:         0       0       0       0       0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    5
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_disp7s_mux_init
  4728 ;;		_disp7s_mux_Q
  4729 ;;		_disp7s_job
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text24
  4734  002BA8                     __ptext24:
  4735                           	opt callstack 0
  4736  002BA8                     _disp7s_mux3_on:
  4737                           	opt callstack 23
  4738                           
  4739                           ;incstack = 0
  4740                           ;display.c: 38: do{LATA &= ~(1<<1);}while(0);
  4741  002BA8  9289               	bcf	3977,1,c	;volatile
  4742  002BAA  0012               	return		;funcret
  4743  002BAC                     __end_of_disp7s_mux3_on:
  4744                           	opt callstack 0
  4745                           
  4746 ;; *************** function _disp7s_mux3_off *****************
  4747 ;; Defined at:
  4748 ;;		line 32 in file "display.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4762 ;;      Params:         0       0       0       0       0       0       0       0       0
  4763 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4765 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4766 ;;Total ram usage:        0 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    5
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_disp7s_mux_init
  4773 ;;		_disp7s_mux_Q
  4774 ;;		_disp7s_job
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text25
  4779  002BAC                     __ptext25:
  4780                           	opt callstack 0
  4781  002BAC                     _disp7s_mux3_off:
  4782                           	opt callstack 23
  4783                           
  4784                           ;incstack = 0
  4785                           ;display.c: 34: do{LATA |= 1<<1;}while(0);
  4786  002BAC  8289               	bsf	3977,1,c	;volatile
  4787  002BAE  0012               	return		;funcret
  4788  002BB0                     __end_of_disp7s_mux3_off:
  4789                           	opt callstack 0
  4790                           
  4791 ;; *************** function _disp7s_mux2_on *****************
  4792 ;; Defined at:
  4793 ;;		line 27 in file "display.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    5
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_disp7s_mux_init
  4818 ;;		_disp7s_mux_Q
  4819 ;;		_disp7s_job
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text26
  4824  002BB0                     __ptext26:
  4825                           	opt callstack 0
  4826  002BB0                     _disp7s_mux2_on:
  4827                           	opt callstack 23
  4828                           
  4829                           ;incstack = 0
  4830                           ;display.c: 29: do{LATA &= ~(1<<2);}while(0);
  4831  002BB0  9489               	bcf	3977,2,c	;volatile
  4832  002BB2  0012               	return		;funcret
  4833  002BB4                     __end_of_disp7s_mux2_on:
  4834                           	opt callstack 0
  4835                           
  4836 ;; *************** function _disp7s_mux2_off *****************
  4837 ;; Defined at:
  4838 ;;		line 23 in file "display.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4855 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4856 ;;Total ram usage:        0 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    5
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_disp7s_mux_init
  4863 ;;		_disp7s_mux_Q
  4864 ;;		_disp7s_job
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text27
  4869  002BB4                     __ptext27:
  4870                           	opt callstack 0
  4871  002BB4                     _disp7s_mux2_off:
  4872                           	opt callstack 23
  4873                           
  4874                           ;incstack = 0
  4875                           ;display.c: 25: do{LATA |= 1<<2;}while(0);
  4876  002BB4  8489               	bsf	3977,2,c	;volatile
  4877  002BB6  0012               	return		;funcret
  4878  002BB8                     __end_of_disp7s_mux2_off:
  4879                           	opt callstack 0
  4880                           
  4881 ;; *************** function _disp7s_mux1_on *****************
  4882 ;; Defined at:
  4883 ;;		line 18 in file "display.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;		None
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4900 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    5
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_disp7s_mux_init
  4908 ;;		_disp7s_mux_Q
  4909 ;;		_disp7s_job
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text28
  4914  002BB8                     __ptext28:
  4915                           	opt callstack 0
  4916  002BB8                     _disp7s_mux1_on:
  4917                           	opt callstack 23
  4918                           
  4919                           ;incstack = 0
  4920                           ;display.c: 20: do{LATA &= ~(1<<3);}while(0);
  4921  002BB8  9689               	bcf	3977,3,c	;volatile
  4922  002BBA  0012               	return		;funcret
  4923  002BBC                     __end_of_disp7s_mux1_on:
  4924                           	opt callstack 0
  4925                           
  4926 ;; *************** function _disp7s_mux1_off *****************
  4927 ;; Defined at:
  4928 ;;		line 14 in file "display.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		status,2, status,0
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4942 ;;      Params:         0       0       0       0       0       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4945 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4946 ;;Total ram usage:        0 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    5
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_disp7s_mux_init
  4953 ;;		_disp7s_mux_Q
  4954 ;;		_disp7s_job
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text29
  4959  002BBC                     __ptext29:
  4960                           	opt callstack 0
  4961  002BBC                     _disp7s_mux1_off:
  4962                           	opt callstack 23
  4963                           
  4964                           ;incstack = 0
  4965                           ;display.c: 16: do{LATA |= 1<<3;}while(0);
  4966  002BBC  8689               	bsf	3977,3,c	;volatile
  4967  002BBE  0012               	return		;funcret
  4968  002BC0                     __end_of_disp7s_mux1_off:
  4969                           	opt callstack 0
  4970                           
  4971 ;; *************** function _disp7s_mux0_on *****************
  4972 ;; Defined at:
  4973 ;;		line 9 in file "display.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		status,2, status,0
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    5
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_disp7s_mux_init
  4998 ;;		_disp7s_mux_Q
  4999 ;;		_disp7s_job
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text30
  5004  002BC0                     __ptext30:
  5005                           	opt callstack 0
  5006  002BC0                     _disp7s_mux0_on:
  5007                           	opt callstack 23
  5008                           
  5009                           ;incstack = 0
  5010                           ;display.c: 11: do{LATA &= ~(1<<4);}while(0);
  5011  002BC0  9889               	bcf	3977,4,c	;volatile
  5012  002BC2  0012               	return		;funcret
  5013  002BC4                     __end_of_disp7s_mux0_on:
  5014                           	opt callstack 0
  5015                           
  5016 ;; *************** function _disp7s_mux0_off *****************
  5017 ;; Defined at:
  5018 ;;		line 5 in file "display.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		status,2, status,0
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    5
  5039 ;; This function calls:
  5040 ;;		Nothing
  5041 ;; This function is called by:
  5042 ;;		_disp7s_mux_init
  5043 ;;		_disp7s_mux_Q
  5044 ;;		_disp7s_job
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text31
  5049  002BC4                     __ptext31:
  5050                           	opt callstack 0
  5051  002BC4                     _disp7s_mux0_off:
  5052                           	opt callstack 23
  5053                           
  5054                           ;incstack = 0
  5055                           ;display.c: 7: do{LATA |= 1<<4;}while(0);
  5056  002BC4  8889               	bsf	3977,4,c	;volatile
  5057  002BC6  0012               	return		;funcret
  5058  002BC8                     __end_of_disp7s_mux0_off:
  5059                           	opt callstack 0
  5060                           
  5061 ;; *************** function _disp7s_mux4_on *****************
  5062 ;; Defined at:
  5063 ;;		line 45 in file "display.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;		None
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		status,2, status,0
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5077 ;;      Params:         0       0       0       0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    5
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		_disp7s_mux_init
  5088 ;;		_disp7s_mux_Q
  5089 ;;		_disp7s_job
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text32
  5094  002BC8                     __ptext32:
  5095                           	opt callstack 0
  5096  002BC8                     _disp7s_mux4_on:
  5097                           	opt callstack 23
  5098                           
  5099                           ;incstack = 0
  5100                           ;display.c: 47: do{LATA &= ~(1<<0);}while(0);
  5101  002BC8  9089               	bcf	3977,0,c	;volatile
  5102  002BCA  0012               	return		;funcret
  5103  002BCC                     __end_of_disp7s_mux4_on:
  5104                           	opt callstack 0
  5105                           
  5106 ;; *************** function _configMode_job *****************
  5107 ;; Defined at:
  5108 ;;		line 26 in file "configMode.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  cod_ret         1   63[COMRAM] char 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      char 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 3F/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0
  5123 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5125 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5126 ;;Total ram usage:        1 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:   11
  5129 ;; This function calls:
  5130 ;;		_configMode_disp
  5131 ;;		_configMode_kb
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text33
  5138  0028FA                     __ptext33:
  5139                           	opt callstack 0
  5140  0028FA                     _configMode_job:
  5141                           	opt callstack 19
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;configMode.c: 28: int8_t cod_ret = 0;
  5145                           
  5146                           ;incstack = 0
  5147  0028FA  0E00               	movlw	0
  5148  0028FC  6E40               	movwf	configMode_job@cod_ret,c
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;configMode.c: 30: if (smain.focus.kb == FOCUS_KB_CONFIGMODE)
  5152  0028FE  0E03               	movlw	3
  5153  002900  1848               	xorwf	_smain+1,w,c	;volatile
  5154  002902  A4D8               	btfss	status,2,c
  5155  002904  D003               	goto	l6049
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;configMode.c: 31: {;configMode.c: 32: cod_ret = configMode_kb();
  5159  002906  EC21  F007         	call	_configMode_kb	;wreg free
  5160  00290A  6E40               	movwf	configMode_job@cod_ret,c
  5161  00290C                     l6049:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;configMode.c: 33: };configMode.c: 35: if ( configMode.disp7s_accessReq == 1)
  5165  00290C  044A               	decf	_configMode,w,c
  5166  00290E  A4D8               	btfss	status,2,c
  5167  002910  D009               	goto	l6057
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;configMode.c: 36: {;configMode.c: 37: if (disp_owner == DISPOWNER_CONFIGMODE)
  5171  002912  0E02               	movlw	2
  5172  002914  1850               	xorwf	_disp_owner,w,c
  5173  002916  A4D8               	btfss	status,2,c
  5174  002918  D003               	goto	l6055
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;configMode.c: 38: {;configMode.c: 39: configMode_disp(configMode.numRegistro);
  5178  00291A  504B               	movf	_configMode+1,w,c
  5179  00291C  ECA3  F010         	call	_configMode_disp
  5180  002920                     l6055:
  5181                           
  5182                           ;configMode.c: 40: };configMode.c: 41: configMode.disp7s_accessReq = 0;
  5183  002920  0E00               	movlw	0
  5184  002922  6E4A               	movwf	_configMode,c
  5185  002924                     l6057:
  5186                           
  5187                           ;configMode.c: 42: };configMode.c: 44: return cod_ret;
  5188  002924  5040               	movf	configMode_job@cod_ret,w,c
  5189  002926  0012               	return		;funcret
  5190  002928                     __end_of_configMode_job:
  5191                           	opt callstack 0
  5192                           
  5193 ;; *************** function _configMode_kb *****************
  5194 ;; Defined at:
  5195 ;;		line 46 in file "configMode.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  cod_ret         1   39[COMRAM] char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      char 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 3F/0
  5206 ;;		On exit  : 3F/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5209 ;;      Params:         0       0       0       0       0       0       0       0       0
  5210 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5211 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5212 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5213 ;;Total ram usage:        4 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    8
  5216 ;; This function calls:
  5217 ;;		___ftadd
  5218 ;;		___ftge
  5219 ;;		___ftsub
  5220 ;;		_ikb_key_is_ready2read
  5221 ;;		_ikb_key_was_read
  5222 ;; This function is called by:
  5223 ;;		_configMode_job
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text34
  5228  000E42                     __ptext34:
  5229                           	opt callstack 0
  5230  000E42                     _configMode_kb:
  5231                           	opt callstack 21
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;configMode.c: 48: int8_t cod_ret = 0;
  5235                           
  5236                           ;incstack = 0
  5237  000E42  0E00               	movlw	0
  5238  000E44  6E28               	movwf	configMode_kb@cod_ret,c
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;configMode.c: 50: if (ikb_key_is_ready2read(0))
  5242  000E46  0E00               	movlw	0
  5243  000E48  EC1A  F015         	call	_ikb_key_is_ready2read
  5244  000E4C  0900               	iorlw	0
  5245  000E4E  B4D8               	btfsc	status,2,c
  5246  000E50  D00D               	goto	l5705
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;configMode.c: 51: {;configMode.c: 52: ikb_key_was_read(0);
  5250  000E52  0E00               	movlw	0
  5251  000E54  EC4E  F015         	call	_ikb_key_was_read
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;configMode.c: 54: if (++configMode.numRegistro >= (8+1))
  5255  000E58  2A4B               	incf	_configMode+1,f,c
  5256  000E5A  504B               	movf	_configMode+1,w,c
  5257  000E5C  0A80               	xorlw	128
  5258  000E5E  0F77               	addlw	-137
  5259  000E60  A0D8               	btfss	status,0,c
  5260  000E62  D002               	goto	l943
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;configMode.c: 55: {;configMode.c: 56: configMode.numRegistro = 0x00;
  5264  000E64  0E00               	movlw	0
  5265  000E66  6E4B               	movwf	_configMode+1,c
  5266  000E68                     l943:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;configMode.c: 57: };configMode.c: 58: configMode.disp7s_accessReq = 1;
  5270  000E68  0E01               	movlw	1
  5271  000E6A  6E4A               	movwf	_configMode,c
  5272  000E6C                     l5705:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;configMode.c: 60: };configMode.c: 62: if (ikb_key_is_ready2read(1))
  5276  000E6C  0E01               	movlw	1
  5277  000E6E  EC1A  F015         	call	_ikb_key_is_ready2read
  5278  000E72  0900               	iorlw	0
  5279  000E74  B4D8               	btfsc	status,2,c
  5280  000E76  D00A               	goto	l5713
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;configMode.c: 63: {;configMode.c: 64: ikb_key_was_read(1);
  5284  000E78  0E01               	movlw	1
  5285  000E7A  EC4E  F015         	call	_ikb_key_was_read
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;configMode.c: 66: if (--configMode.numRegistro < 0)
  5289  000E7E  064B               	decf	_configMode+1,f,c
  5290  000E80  AE4B               	btfss	_configMode+1,7,c
  5291  000E82  D002               	goto	l945
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;configMode.c: 67: {;configMode.c: 68: configMode.numRegistro = (8+1)-1;
  5295  000E84  0E08               	movlw	8
  5296  000E86  6E4B               	movwf	_configMode+1,c
  5297  000E88                     l945:
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;configMode.c: 69: };configMode.c: 70: configMode.disp7s_accessReq = 1;
  5301  000E88  0E01               	movlw	1
  5302  000E8A  6E4A               	movwf	_configMode,c
  5303  000E8C                     l5713:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;configMode.c: 71: };configMode.c: 73: if (ikb_key_is_ready2read(2))
  5307  000E8C  0E02               	movlw	2
  5308  000E8E  EC1A  F015         	call	_ikb_key_is_ready2read
  5309  000E92  0900               	iorlw	0
  5310  000E94  B4D8               	btfsc	status,2,c
  5311  000E96  D084               	goto	l5735
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;configMode.c: 74: {;configMode.c: 75: if (configMode.numRegistro < 8)
  5315  000E98  504B               	movf	_configMode+1,w,c
  5316  000E9A  0A80               	xorlw	128
  5317  000E9C  0F78               	addlw	-136
  5318  000E9E  B0D8               	btfsc	status,0,c
  5319  000EA0  D067               	goto	l5725
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;configMode.c: 76: {;configMode.c: 77: if (pulsonic.nozzle[configMode.numRegistro].Q_mlh
      +                           == 0)
  5323  000EA2  504B               	movf	_configMode+1,w,c
  5324  000EA4  0D06               	mullw	6
  5325  000EA6  0E06               	movlw	low (_pulsonic+6)
  5326  000EA8  24F3               	addwf	prodl,w,c
  5327  000EAA  6ED9               	movwf	fsr2l,c
  5328  000EAC  0E01               	movlw	high (_pulsonic+6)
  5329  000EAE  20F4               	addwfc	prodh,w,c
  5330  000EB0  6EDA               	movwf	fsr2h,c
  5331  000EB2  50DE               	movf	postinc2,w,c
  5332  000EB4  10DE               	iorwf	postinc2,w,c
  5333  000EB6  10DE               	iorwf	postinc2,w,c
  5334  000EB8  A4D8               	btfss	status,2,c
  5335  000EBA  D00F               	goto	l5721
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;configMode.c: 78: {;configMode.c: 79: pulsonic.nozzle[configMode.numRegistro].Q_mlh = 0
      +                          .3;
  5339  000EBC  504B               	movf	_configMode+1,w,c
  5340  000EBE  0D06               	mullw	6
  5341  000EC0  0E06               	movlw	low (_pulsonic+6)
  5342  000EC2  24F3               	addwf	prodl,w,c
  5343  000EC4  6ED9               	movwf	fsr2l,c
  5344  000EC6  0E01               	movlw	high (_pulsonic+6)
  5345  000EC8  20F4               	addwfc	prodh,w,c
  5346  000ECA  6EDA               	movwf	fsr2h,c
  5347  000ECC  0E9A               	movlw	154
  5348  000ECE  6EDE               	movwf	postinc2,c
  5349  000ED0  0E99               	movlw	153
  5350  000ED2  6EDE               	movwf	postinc2,c
  5351  000ED4  0E3E               	movlw	62
  5352  000ED6  6EDE               	movwf	postinc2,c
  5353                           
  5354                           ;configMode.c: 80: }
  5355  000ED8  D024               	goto	l949
  5356  000EDA                     l5721:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;configMode.c: 81: else;configMode.c: 82: {;configMode.c: 83: pulsonic.nozzle[configMode
      +                          .numRegistro].Q_mlh += NOZZLE_QTY_DIFF;
  5360  000EDA  504B               	movf	_configMode+1,w,c
  5361  000EDC  0D06               	mullw	6
  5362  000EDE  0E06               	movlw	low (_pulsonic+6)
  5363  000EE0  24F3               	addwf	prodl,w,c
  5364  000EE2  6ED9               	movwf	fsr2l,c
  5365  000EE4  0E01               	movlw	high (_pulsonic+6)
  5366  000EE6  20F4               	addwfc	prodh,w,c
  5367  000EE8  6EDA               	movwf	fsr2h,c
  5368  000EEA  CFDE F013          	movff	postinc2,___ftadd@f1
  5369  000EEE  CFDE F014          	movff	postinc2,___ftadd@f1+1
  5370  000EF2  CFDD F015          	movff	postdec2,___ftadd@f1+2
  5371  000EF6  0ECD               	movlw	205
  5372  000EF8  6E16               	movwf	___ftadd@f2,c
  5373  000EFA  0ECC               	movlw	204
  5374  000EFC  6E17               	movwf	___ftadd@f2+1,c
  5375  000EFE  0E3D               	movlw	61
  5376  000F00  6E18               	movwf	___ftadd@f2+2,c
  5377  000F02  EC7F  F009         	call	___ftadd	;wreg free
  5378  000F06  504B               	movf	_configMode+1,w,c
  5379  000F08  0D06               	mullw	6
  5380  000F0A  0E06               	movlw	low (_pulsonic+6)
  5381  000F0C  24F3               	addwf	prodl,w,c
  5382  000F0E  6ED9               	movwf	fsr2l,c
  5383  000F10  0E01               	movlw	high (_pulsonic+6)
  5384  000F12  20F4               	addwfc	prodh,w,c
  5385  000F14  6EDA               	movwf	fsr2h,c
  5386  000F16  C013  FFDE         	movff	?___ftadd,postinc2
  5387  000F1A  C014  FFDE         	movff	?___ftadd+1,postinc2
  5388  000F1E  C015  FFDE         	movff	?___ftadd+2,postinc2
  5389  000F22                     l949:
  5390                           
  5391                           ;configMode.c: 84: };configMode.c: 86: if ( pulsonic.nozzle[configMode.numRegistro].Q_ml
      +                          h >= 12.0)
  5392  000F22  504B               	movf	_configMode+1,w,c
  5393  000F24  0D06               	mullw	6
  5394  000F26  0E06               	movlw	low (_pulsonic+6)
  5395  000F28  24F3               	addwf	prodl,w,c
  5396  000F2A  6ED9               	movwf	fsr2l,c
  5397  000F2C  0E01               	movlw	high (_pulsonic+6)
  5398  000F2E  20F4               	addwfc	prodh,w,c
  5399  000F30  6EDA               	movwf	fsr2h,c
  5400  000F32  CFDE F016          	movff	postinc2,___ftge@ff1
  5401  000F36  CFDE F017          	movff	postinc2,___ftge@ff1+1
  5402  000F3A  CFDD F018          	movff	postdec2,___ftge@ff1+2
  5403  000F3E  0E00               	movlw	0
  5404  000F40  6E19               	movwf	___ftge@ff2,c
  5405  000F42  0E40               	movlw	64
  5406  000F44  6E1A               	movwf	___ftge@ff2+1,c
  5407  000F46  0E41               	movlw	65
  5408  000F48  6E1B               	movwf	___ftge@ff2+2,c
  5409  000F4A  ECDD  F010         	call	___ftge	;wreg free
  5410  000F4E  A0D8               	btfss	status,0,c
  5411  000F50  D022               	goto	l5731
  5412                           
  5413                           ;configMode.c: 87: {;configMode.c: 88: pulsonic.nozzle[configMode.numRegistro].Q_mlh = 1
      +                          2.0;
  5414  000F52  504B               	movf	_configMode+1,w,c
  5415  000F54  0D06               	mullw	6
  5416  000F56  0E06               	movlw	low (_pulsonic+6)
  5417  000F58  24F3               	addwf	prodl,w,c
  5418  000F5A  6ED9               	movwf	fsr2l,c
  5419  000F5C  0E01               	movlw	high (_pulsonic+6)
  5420  000F5E  20F4               	addwfc	prodh,w,c
  5421  000F60  6EDA               	movwf	fsr2h,c
  5422  000F62  0E00               	movlw	0
  5423  000F64  6EDE               	movwf	postinc2,c
  5424  000F66  0E40               	movlw	64
  5425  000F68  6EDE               	movwf	postinc2,c
  5426  000F6A  0E41               	movlw	65
  5427  000F6C  6EDE               	movwf	postinc2,c
  5428  000F6E  D013               	goto	l5731
  5429  000F70                     l5725:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;configMode.c: 92: else;configMode.c: 93: {;configMode.c: 94: if (++pulsonic.oil.i>=4)
  5433  000F70  0101               	movlb	1	; () banked
  5434  000F72  2B36               	incf	(_pulsonic+54)& (0+255),f,b
  5435  000F74  5136               	movf	(_pulsonic+54)& (0+255),w,b
  5436  000F76  0A80               	xorlw	128
  5437  000F78  0F7C               	addlw	-132
  5438  000F7A  A0D8               	btfss	status,0,c
  5439  000F7C  D002               	goto	l5729
  5440                           
  5441                           ; BSR set to: 1
  5442                           ;configMode.c: 95: {;configMode.c: 96: pulsonic.oil.i=0;
  5443  000F7E  0E00               	movlw	0
  5444  000F80  6F36               	movwf	(_pulsonic+54)& (0+255),b
  5445  000F82                     l5729:
  5446                           
  5447                           ; BSR set to: 1
  5448                           ;configMode.c: 97: };configMode.c: 98: pulsonic.oil.viscosity = OIL_VISCOSITY[pulsonic.o
      +                          il.i];
  5449  000F82  5136               	movf	(_pulsonic+54)& (0+255),w,b
  5450  000F84  0F0B               	addlw	low _OIL_VISCOSITY
  5451  000F86  6E25               	movwf	??_configMode_kb& (0+255),c
  5452  000F88  C025  FFF6         	movff	??_configMode_kb,tblptrl
  5453  000F8C                     	if	1	;There is more than 1 active tblptr byte
  5454  000F8C  0E08               	movlw	high __smallconst
  5455  000F8E  6EF7               	movwf	tblptrh,c
  5456  000F90                     	endif
  5457  000F90                     	if	0	;tblptru may be non-zero
  5458  000F90                     	endif
  5459  000F90                     	if	0	;tblptru may be non-zero
  5460  000F90                     	endif
  5461  000F90  0008               	tblrd		*
  5462  000F92  CFF5 F137          	movff	tablat,_pulsonic+55
  5463  000F96                     l5731:
  5464                           
  5465                           ;configMode.c: 99: };configMode.c: 100: configMode.disp7s_accessReq = 1;
  5466  000F96  0E01               	movlw	1
  5467  000F98  6E4A               	movwf	_configMode,c
  5468                           
  5469                           ;configMode.c: 102: ikb_key_was_read(2);
  5470  000F9A  0E02               	movlw	2
  5471  000F9C  EC4E  F015         	call	_ikb_key_was_read
  5472  000FA0                     l5735:
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;configMode.c: 104: };configMode.c: 105: if (ikb_key_is_ready2read(3))
  5476  000FA0  0E03               	movlw	3
  5477  000FA2  EC1A  F015         	call	_ikb_key_is_ready2read
  5478  000FA6  0900               	iorlw	0
  5479  000FA8  B4D8               	btfsc	status,2,c
  5480  000FAA  D08E               	goto	l5761
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;configMode.c: 106: {;configMode.c: 107: if (configMode.numRegistro < 8)
  5484  000FAC  504B               	movf	_configMode+1,w,c
  5485  000FAE  0A80               	xorlw	128
  5486  000FB0  0F78               	addlw	-136
  5487  000FB2  B0D8               	btfsc	status,0,c
  5488  000FB4  D074               	goto	l5751
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;configMode.c: 108: {;configMode.c: 109: pulsonic.nozzle[configMode.numRegistro].Q_mlh -
      +                          = NOZZLE_QTY_DIFF;
  5492  000FB6  504B               	movf	_configMode+1,w,c
  5493  000FB8  0D06               	mullw	6
  5494  000FBA  0E06               	movlw	low (_pulsonic+6)
  5495  000FBC  24F3               	addwf	prodl,w,c
  5496  000FBE  6ED9               	movwf	fsr2l,c
  5497  000FC0  0E01               	movlw	high (_pulsonic+6)
  5498  000FC2  20F4               	addwfc	prodh,w,c
  5499  000FC4  6EDA               	movwf	fsr2h,c
  5500  000FC6  CFDE F01F          	movff	postinc2,___ftsub@f1
  5501  000FCA  CFDE F020          	movff	postinc2,___ftsub@f1+1
  5502  000FCE  CFDD F021          	movff	postdec2,___ftsub@f1+2
  5503  000FD2  0ECD               	movlw	205
  5504  000FD4  6E22               	movwf	___ftsub@f2,c
  5505  000FD6  0ECC               	movlw	204
  5506  000FD8  6E23               	movwf	___ftsub@f2+1,c
  5507  000FDA  0E3D               	movlw	61
  5508  000FDC  6E24               	movwf	___ftsub@f2+2,c
  5509  000FDE  ECAA  F013         	call	___ftsub	;wreg free
  5510  000FE2  504B               	movf	_configMode+1,w,c
  5511  000FE4  0D06               	mullw	6
  5512  000FE6  0E06               	movlw	low (_pulsonic+6)
  5513  000FE8  24F3               	addwf	prodl,w,c
  5514  000FEA  6ED9               	movwf	fsr2l,c
  5515  000FEC  0E01               	movlw	high (_pulsonic+6)
  5516  000FEE  20F4               	addwfc	prodh,w,c
  5517  000FF0  6EDA               	movwf	fsr2h,c
  5518  000FF2  C01F  FFDE         	movff	?___ftsub,postinc2
  5519  000FF6  C020  FFDE         	movff	?___ftsub+1,postinc2
  5520  000FFA  C021  FFDE         	movff	?___ftsub+2,postinc2
  5521                           
  5522                           ;configMode.c: 111: if (configMode.numRegistro == 0)
  5523  000FFE  504B               	movf	_configMode+1,w,c
  5524  001000  A4D8               	btfss	status,2,c
  5525  001002  D026               	goto	l5747
  5526                           
  5527                           ;configMode.c: 112: {;configMode.c: 113: if ( pulsonic.nozzle[configMode.numRegistro].Q_
      +                          mlh < 0.3)
  5528  001004  504B               	movf	_configMode+1,w,c
  5529  001006  0D06               	mullw	6
  5530  001008  0E06               	movlw	low (_pulsonic+6)
  5531  00100A  24F3               	addwf	prodl,w,c
  5532  00100C  6ED9               	movwf	fsr2l,c
  5533  00100E  0E01               	movlw	high (_pulsonic+6)
  5534  001010  20F4               	addwfc	prodh,w,c
  5535  001012  6EDA               	movwf	fsr2h,c
  5536  001014  CFDE F016          	movff	postinc2,___ftge@ff1
  5537  001018  CFDE F017          	movff	postinc2,___ftge@ff1+1
  5538  00101C  CFDD F018          	movff	postdec2,___ftge@ff1+2
  5539  001020  0E9A               	movlw	154
  5540  001022  6E19               	movwf	___ftge@ff2,c
  5541  001024  0E99               	movlw	153
  5542  001026  6E1A               	movwf	___ftge@ff2+1,c
  5543  001028  0E3E               	movlw	62
  5544  00102A  6E1B               	movwf	___ftge@ff2+2,c
  5545  00102C  ECDD  F010         	call	___ftge	;wreg free
  5546  001030  B0D8               	btfsc	status,0,c
  5547  001032  D045               	goto	l5757
  5548                           
  5549                           ;configMode.c: 114: {;configMode.c: 115: pulsonic.nozzle[configMode.numRegistro].Q_mlh =
      +                           0.3;
  5550  001034  504B               	movf	_configMode+1,w,c
  5551  001036  0D06               	mullw	6
  5552  001038  0E06               	movlw	low (_pulsonic+6)
  5553  00103A  24F3               	addwf	prodl,w,c
  5554  00103C  6ED9               	movwf	fsr2l,c
  5555  00103E  0E01               	movlw	high (_pulsonic+6)
  5556  001040  20F4               	addwfc	prodh,w,c
  5557  001042  6EDA               	movwf	fsr2h,c
  5558  001044  0E9A               	movlw	154
  5559  001046  6EDE               	movwf	postinc2,c
  5560  001048  0E99               	movlw	153
  5561  00104A  6EDE               	movwf	postinc2,c
  5562  00104C  0E3E               	movlw	62
  5563  00104E  D025               	goto	L5
  5564  001050                     l5747:
  5565                           
  5566                           ;configMode.c: 118: else;configMode.c: 119: {;configMode.c: 120: if ( pulsonic.nozzle[co
      +                          nfigMode.numRegistro].Q_mlh < 0.3)
  5567  001050  504B               	movf	_configMode+1,w,c
  5568  001052  0D06               	mullw	6
  5569  001054  0E06               	movlw	low (_pulsonic+6)
  5570  001056  24F3               	addwf	prodl,w,c
  5571  001058  6ED9               	movwf	fsr2l,c
  5572  00105A  0E01               	movlw	high (_pulsonic+6)
  5573  00105C  20F4               	addwfc	prodh,w,c
  5574  00105E  6EDA               	movwf	fsr2h,c
  5575  001060  CFDE F016          	movff	postinc2,___ftge@ff1
  5576  001064  CFDE F017          	movff	postinc2,___ftge@ff1+1
  5577  001068  CFDD F018          	movff	postdec2,___ftge@ff1+2
  5578  00106C  0E9A               	movlw	154
  5579  00106E  6E19               	movwf	___ftge@ff2,c
  5580  001070  0E99               	movlw	153
  5581  001072  6E1A               	movwf	___ftge@ff2+1,c
  5582  001074  0E3E               	movlw	62
  5583  001076  6E1B               	movwf	___ftge@ff2+2,c
  5584  001078  ECDD  F010         	call	___ftge	;wreg free
  5585  00107C  B0D8               	btfsc	status,0,c
  5586  00107E  D01F               	goto	l5757
  5587                           
  5588                           ;configMode.c: 121: {;configMode.c: 122: pulsonic.nozzle[configMode.numRegistro].Q_mlh =
      +                           0;
  5589  001080  504B               	movf	_configMode+1,w,c
  5590  001082  0D06               	mullw	6
  5591  001084  0E06               	movlw	low (_pulsonic+6)
  5592  001086  24F3               	addwf	prodl,w,c
  5593  001088  6ED9               	movwf	fsr2l,c
  5594  00108A  0E01               	movlw	high (_pulsonic+6)
  5595  00108C  20F4               	addwfc	prodh,w,c
  5596  00108E  6EDA               	movwf	fsr2h,c
  5597  001090  0E00               	movlw	0
  5598  001092  6EDE               	movwf	postinc2,c
  5599  001094  0E00               	movlw	0
  5600  001096  6EDE               	movwf	postinc2,c
  5601  001098  0E00               	movlw	0
  5602  00109A                     L5:
  5603  00109A  6EDE               	movwf	postinc2,c
  5604  00109C  D010               	goto	l5757
  5605  00109E                     l5751:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;configMode.c: 126: else;configMode.c: 127: {;configMode.c: 128: if (--pulsonic.oil.i < 
      +                          0)
  5609  00109E  0101               	movlb	1	; () banked
  5610  0010A0  0736               	decf	(_pulsonic+54)& (0+255),f,b
  5611  0010A2  AF36               	btfss	(_pulsonic+54)& (0+255),7,b
  5612  0010A4  D002               	goto	l5755
  5613                           
  5614                           ; BSR set to: 1
  5615                           ;configMode.c: 129: {;configMode.c: 130: pulsonic.oil.i= 4-1;
  5616  0010A6  0E03               	movlw	3
  5617  0010A8  6F36               	movwf	(_pulsonic+54)& (0+255),b
  5618  0010AA                     l5755:
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;configMode.c: 131: };configMode.c: 132: pulsonic.oil.viscosity = OIL_VISCOSITY[pulsonic
      +                          .oil.i];
  5622  0010AA  5136               	movf	(_pulsonic+54)& (0+255),w,b
  5623  0010AC  0F0B               	addlw	low _OIL_VISCOSITY
  5624  0010AE  6E25               	movwf	??_configMode_kb& (0+255),c
  5625  0010B0  C025  FFF6         	movff	??_configMode_kb,tblptrl
  5626  0010B4                     	if	1	;There is more than 1 active tblptr byte
  5627  0010B4  0E08               	movlw	high __smallconst
  5628  0010B6  6EF7               	movwf	tblptrh,c
  5629  0010B8                     	endif
  5630  0010B8                     	if	0	;tblptru may be non-zero
  5631  0010B8                     	endif
  5632  0010B8                     	if	0	;tblptru may be non-zero
  5633  0010B8                     	endif
  5634  0010B8  0008               	tblrd		*
  5635  0010BA  CFF5 F137          	movff	tablat,_pulsonic+55
  5636  0010BE                     l5757:
  5637                           
  5638                           ;configMode.c: 133: };configMode.c: 134: configMode.disp7s_accessReq = 1;
  5639  0010BE  0E01               	movlw	1
  5640  0010C0  6E4A               	movwf	_configMode,c
  5641                           
  5642                           ;configMode.c: 136: ikb_key_was_read(3);
  5643  0010C2  0E03               	movlw	3
  5644  0010C4  EC4E  F015         	call	_ikb_key_was_read
  5645  0010C8                     l5761:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;configMode.c: 138: };configMode.c: 139: if (ikb_key_is_ready2read(4))
  5649  0010C8  0E04               	movlw	4
  5650  0010CA  EC1A  F015         	call	_ikb_key_is_ready2read
  5651  0010CE  0900               	iorlw	0
  5652  0010D0  B4D8               	btfsc	status,2,c
  5653  0010D2  D005               	goto	l5767
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;configMode.c: 140: {;configMode.c: 141: cod_ret = 1;
  5657  0010D4  0E01               	movlw	1
  5658  0010D6  6E28               	movwf	configMode_kb@cod_ret,c
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;configMode.c: 142: ikb_key_was_read(4);
  5662  0010D8  0E04               	movlw	4
  5663  0010DA  EC4E  F015         	call	_ikb_key_was_read
  5664  0010DE                     l5767:
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;configMode.c: 144: };configMode.c: 145: return cod_ret;
  5668  0010DE  5028               	movf	configMode_kb@cod_ret,w,c
  5669                           
  5670                           ; BSR set to: 0
  5671  0010E0  0012               	return		;funcret
  5672  0010E2                     __end_of_configMode_kb:
  5673                           	opt callstack 0
  5674                           
  5675 ;; *************** function ___ftsub *****************
  5676 ;; Defined at:
  5677 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  f1              3   30[COMRAM] float 
  5680 ;;  f2              3   33[COMRAM] float 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  3   30[COMRAM] float 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 3F/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5692 ;;      Params:         6       0       0       0       0       0       0       0       0
  5693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5695 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5696 ;;Total ram usage:        6 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    7
  5699 ;; This function calls:
  5700 ;;		___ftadd
  5701 ;; This function is called by:
  5702 ;;		_configMode_kb
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text35
  5707  002754                     __ptext35:
  5708                           	opt callstack 0
  5709  002754                     ___ftsub:
  5710                           	opt callstack 21
  5711                           
  5712                           ; BSR set to: 0
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;incstack = 0
  5716  002754  5022               	movf	___ftsub@f2,w,c
  5717  002756  1023               	iorwf	___ftsub@f2+1,w,c
  5718  002758  1024               	iorwf	___ftsub@f2+2,w,c
  5719  00275A  B4D8               	btfsc	status,2,c
  5720  00275C  D006               	goto	l5363
  5721                           
  5722                           ; BSR set to: 0
  5723  00275E  0E00               	movlw	0
  5724  002760  1A22               	xorwf	___ftsub@f2,f,c
  5725  002762  0E00               	movlw	0
  5726  002764  1A23               	xorwf	___ftsub@f2+1,f,c
  5727  002766  0E80               	movlw	128
  5728  002768  1A24               	xorwf	___ftsub@f2+2,f,c
  5729  00276A                     l5363:
  5730                           
  5731                           ; BSR set to: 0
  5732  00276A  C01F  F013         	movff	___ftsub@f1,___ftadd@f1
  5733  00276E  C020  F014         	movff	___ftsub@f1+1,___ftadd@f1+1
  5734  002772  C021  F015         	movff	___ftsub@f1+2,___ftadd@f1+2
  5735  002776  C022  F016         	movff	___ftsub@f2,___ftadd@f2
  5736  00277A  C023  F017         	movff	___ftsub@f2+1,___ftadd@f2+1
  5737  00277E  C024  F018         	movff	___ftsub@f2+2,___ftadd@f2+2
  5738  002782  EC7F  F009         	call	___ftadd	;wreg free
  5739  002786  C013  F01F         	movff	?___ftadd,?___ftsub
  5740  00278A  C014  F020         	movff	?___ftadd+1,?___ftsub+1
  5741  00278E  C015  F021         	movff	?___ftadd+2,?___ftsub+2
  5742  002792  0012               	return		;funcret
  5743  002794                     __end_of___ftsub:
  5744                           	opt callstack 0
  5745                           
  5746 ;; *************** function _configMode_disp *****************
  5747 ;; Defined at:
  5748 ;;		line 147 in file "configMode.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  numRegistro     1    wreg     char 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  numRegistro     1   62[COMRAM] char 
  5753 ;;  qty             3   59[COMRAM] char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 3F/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0
  5764 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5766 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5767 ;;Total ram usage:        4 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:   10
  5770 ;; This function calls:
  5771 ;;		_disp7s_modeDisp_writeInt
  5772 ;;		_disp7s_modeDisp_writeText_oil
  5773 ;;		_disp7s_qtyDisp_writeFloat
  5774 ;;		_disp7s_qtyDisp_writeInt
  5775 ;;		_disp7s_qtyDisp_writeText_OFF
  5776 ;; This function is called by:
  5777 ;;		_configMode_job
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text36
  5782  002146                     __ptext36:
  5783                           	opt callstack 0
  5784  002146                     _configMode_disp:
  5785                           	opt callstack 19
  5786                           
  5787                           ;incstack = 0
  5788                           ;configMode_disp@numRegistro stored from wreg
  5789  002146  6E3F               	movwf	configMode_disp@numRegistro,c
  5790                           
  5791                           ;configMode.c: 149: double qty;;configMode.c: 151: if (numRegistro < 8)
  5792  002148  503F               	movf	configMode_disp@numRegistro,w,c
  5793  00214A  0A80               	xorlw	128
  5794  00214C  0F78               	addlw	-136
  5795  00214E  B0D8               	btfsc	status,0,c
  5796  002150  D02A               	goto	l5783
  5797                           
  5798                           ;configMode.c: 152: {;configMode.c: 153: disp7s_modeDisp_writeInt(numRegistro+1);
  5799  002152  0E01               	movlw	1
  5800  002154  243F               	addwf	configMode_disp@numRegistro,w,c
  5801  002156  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  5802  002158  6AE8               	clrf	wreg,c
  5803  00215A  B0D8               	btfsc	status,0,c
  5804  00215C  2AE8               	incf	wreg,f,c
  5805  00215E  BE3F               	btfsc	configMode_disp@numRegistro,7,c
  5806  002160  06E8               	decf	wreg,f,c
  5807  002162  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  5808  002164  EC35  F015         	call	_disp7s_modeDisp_writeInt	;wreg free
  5809                           
  5810                           ;configMode.c: 155: qty = pulsonic.nozzle[numRegistro].Q_mlh;
  5811  002168  503F               	movf	configMode_disp@numRegistro,w,c
  5812  00216A  0D06               	mullw	6
  5813  00216C  0E06               	movlw	low (_pulsonic+6)
  5814  00216E  24F3               	addwf	prodl,w,c
  5815  002170  6ED9               	movwf	fsr2l,c
  5816  002172  0E01               	movlw	high (_pulsonic+6)
  5817  002174  20F4               	addwfc	prodh,w,c
  5818  002176  6EDA               	movwf	fsr2h,c
  5819  002178  CFDE F03C          	movff	postinc2,configMode_disp@qty
  5820  00217C  CFDE F03D          	movff	postinc2,configMode_disp@qty+1
  5821  002180  CFDD F03E          	movff	postdec2,configMode_disp@qty+2
  5822                           
  5823                           ;configMode.c: 156: if (qty == 0)
  5824  002184  503C               	movf	configMode_disp@qty,w,c
  5825  002186  103D               	iorwf	configMode_disp@qty+1,w,c
  5826  002188  103E               	iorwf	configMode_disp@qty+2,w,c
  5827  00218A  A4D8               	btfss	status,2,c
  5828  00218C  D003               	goto	l5781
  5829                           
  5830                           ;configMode.c: 157: {;configMode.c: 158: disp7s_qtyDisp_writeText_OFF();
  5831  00218E  EC6A  F015         	call	_disp7s_qtyDisp_writeText_OFF	;wreg free
  5832                           
  5833                           ;configMode.c: 159: }
  5834  002192  0012               	return	
  5835  002194                     l5781:
  5836                           
  5837                           ;configMode.c: 160: else;configMode.c: 161: {;configMode.c: 162: disp7s_qtyDisp_writeFlo
      +                          at( qty );
  5838  002194  C03C  F141         	movff	configMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  5839  002198  C03D  F142         	movff	configMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  5840  00219C  C03E  F143         	movff	configMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  5841  0021A0  EC0B  F015         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  5842  0021A4  0012               	return	
  5843  0021A6                     l5783:
  5844                           
  5845                           ;configMode.c: 165: else;configMode.c: 166: {;configMode.c: 167: disp7s_modeDisp_writeTe
      +                          xt_oil();
  5846  0021A6  EC88  F015         	call	_disp7s_modeDisp_writeText_oil	;wreg free
  5847                           
  5848                           ; BSR set to: 1
  5849                           ;configMode.c: 168: disp7s_qtyDisp_writeInt( pulsonic.oil.viscosity );
  5850  0021AA  5137               	movf	(_pulsonic+55)& (0+255),w,b
  5851  0021AC  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  5852  0021AE  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  5853  0021B0  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  5854  0021B2  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  5855  0021B4  EC28  F015         	call	_disp7s_qtyDisp_writeInt	;wreg free
  5856  0021B8  0012               	return		;funcret
  5857  0021BA                     __end_of_configMode_disp:
  5858                           	opt callstack 0
  5859                           
  5860 ;; *************** function _disp7s_qtyDisp_writeText_OFF *****************
  5861 ;; Defined at:
  5862 ;;		line 169 in file "display.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 3F/1
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5879 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5880 ;;Total ram usage:        0 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    5
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_visMode_disp
  5887 ;;		_configMode_disp
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text37
  5892  002AD4                     __ptext37:
  5893                           	opt callstack 0
  5894  002AD4                     _disp7s_qtyDisp_writeText_OFF:
  5895                           	opt callstack 23
  5896                           
  5897                           ;display.c: 171: pulsonic.disp7s.qty[2] =0x3F;
  5898                           
  5899                           ;incstack = 0
  5900  002AD4  0E3F               	movlw	63
  5901  002AD6  0101               	movlb	1	; () banked
  5902  002AD8  6F3E               	movwf	(_pulsonic+62)& (0+255),b
  5903                           
  5904                           ;display.c: 172: pulsonic.disp7s.qty[1] =0x71;
  5905  002ADA  0E71               	movlw	113
  5906  002ADC  6F3D               	movwf	(_pulsonic+61)& (0+255),b
  5907                           
  5908                           ;display.c: 173: pulsonic.disp7s.qty[0] =0x71;
  5909  002ADE  0E71               	movlw	113
  5910  002AE0  6F3C               	movwf	(_pulsonic+60)& (0+255),b
  5911                           
  5912                           ; BSR set to: 1
  5913  002AE2  0012               	return		;funcret
  5914  002AE4                     __end_of_disp7s_qtyDisp_writeText_OFF:
  5915                           	opt callstack 0
  5916                           
  5917 ;; *************** function _disp7s_qtyDisp_writeInt *****************
  5918 ;; Defined at:
  5919 ;;		line 300 in file "display.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  num             2   55[COMRAM] int 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 3F/1
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5933 ;;      Params:         2       0       0       0       0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5936 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5937 ;;Total ram usage:        2 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    9
  5940 ;; This function calls:
  5941 ;;		_disp7s_write_i
  5942 ;; This function is called by:
  5943 ;;		_visMode_disp
  5944 ;;		_configMode_disp
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text38
  5949  002A50                     __ptext38:
  5950                           	opt callstack 0
  5951  002A50                     _disp7s_qtyDisp_writeInt:
  5952                           	opt callstack 19
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;display.c: 302: disp7s_write_i(pulsonic.disp7s.qty, 3, num);
  5956                           
  5957                           ; BSR set to: 1
  5958                           ;incstack = 0
  5959  002A50  0E3C               	movlw	low (_pulsonic+60)
  5960  002A52  6E20               	movwf	disp7s_write_i@pDisp,c
  5961  002A54  0E01               	movlw	high (_pulsonic+60)
  5962  002A56  6E21               	movwf	disp7s_write_i@pDisp+1,c
  5963  002A58  0E03               	movlw	3
  5964  002A5A  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  5965  002A5C  C038  F023         	movff	disp7s_qtyDisp_writeInt@num,disp7s_write_i@num
  5966  002A60  C039  F024         	movff	disp7s_qtyDisp_writeInt@num+1,disp7s_write_i@num+1
  5967  002A64  ECC9  F00B         	call	_disp7s_write_i	;wreg free
  5968  002A68  0012               	return		;funcret
  5969  002A6A                     __end_of_disp7s_qtyDisp_writeInt:
  5970                           	opt callstack 0
  5971                           
  5972 ;; *************** function _disp7s_modeDisp_writeText_oil *****************
  5973 ;; Defined at:
  5974 ;;		line 164 in file "display.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;		None
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      void 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 3F/1
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5988 ;;      Params:         0       0       0       0       0       0       0       0       0
  5989 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5991 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5992 ;;Total ram usage:        0 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    5
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_visMode_disp
  5999 ;;		_configMode_disp
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text39
  6004  002B10                     __ptext39:
  6005                           	opt callstack 0
  6006  002B10                     _disp7s_modeDisp_writeText_oil:
  6007                           	opt callstack 23
  6008                           
  6009                           ;display.c: 166: pulsonic.disp7s.mode[1] =0x5C;
  6010                           
  6011                           ;incstack = 0
  6012  002B10  0E5C               	movlw	92
  6013  002B12  0101               	movlb	1	; () banked
  6014  002B14  6F40               	movwf	(_pulsonic+64)& (0+255),b
  6015                           
  6016                           ;display.c: 167: pulsonic.disp7s.mode[0] =0x16;
  6017  002B16  0E16               	movlw	22
  6018  002B18  6F3F               	movwf	(_pulsonic+63)& (0+255),b
  6019                           
  6020                           ; BSR set to: 1
  6021  002B1A  0012               	return		;funcret
  6022  002B1C                     __end_of_disp7s_modeDisp_writeText_oil:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function _configMode_init *****************
  6026 ;; Defined at:
  6027 ;;		line 14 in file "configMode.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  numRegistro     1    wreg     char 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  numRegistro     1   10[COMRAM] char 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg, status,2
  6036 ;; Tracked objects:
  6037 ;;		On entry : 3F/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0
  6042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6045 ;;Total ram usage:        1 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    5
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_main
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text40
  6056  002B1C                     __ptext40:
  6057                           	opt callstack 0
  6058  002B1C                     _configMode_init:
  6059                           	opt callstack 25
  6060                           
  6061                           ; BSR set to: 1
  6062                           ;incstack = 0
  6063                           ;configMode_init@numRegistro stored from wreg
  6064  002B1C  6E0B               	movwf	configMode_init@numRegistro,c
  6065                           
  6066                           ;configMode.c: 16: configMode.numRegistro = numRegistro;
  6067  002B1E  C00B  F04B         	movff	configMode_init@numRegistro,_configMode+1
  6068                           
  6069                           ;configMode.c: 17: configMode.disp7s_accessReq = 1;
  6070  002B22  0E01               	movlw	1
  6071  002B24  6E4A               	movwf	_configMode,c
  6072  002B26  0012               	return		;funcret
  6073  002B28                     __end_of_configMode_init:
  6074                           	opt callstack 0
  6075                           
  6076 ;; *************** function _check_startSignal *****************
  6077 ;; Defined at:
  6078 ;;		line 255 in file "main.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;		None
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  1    wreg      void 
  6085 ;; Registers used:
  6086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 3F/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6092 ;;      Params:         0       0       0       0       0       0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6095 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6096 ;;Total ram usage:        0 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:   12
  6099 ;; This function calls:
  6100 ;;		_disp7s_qtyDisp_writeText_20_3RAYAS
  6101 ;;		_is_startSignal
  6102 ;;		_ps_autoMode_start
  6103 ;; This function is called by:
  6104 ;;		_main
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text41
  6109  002422                     __ptext41:
  6110                           	opt callstack 0
  6111  002422                     _check_startSignal:
  6112                           	opt callstack 18
  6113                           
  6114                           ;main.c: 257: static int8_t sm0, sm1;;main.c: 258: if (sm0 == 0)
  6115                           
  6116                           ;incstack = 0
  6117  002422  0100               	movlb	0	; () banked
  6118  002424  51C7               	movf	check_startSignal@sm0& (0+255),w,b
  6119  002426  A4D8               	btfss	status,2,c
  6120  002428  D00B               	goto	l5893
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;main.c: 259: {;main.c: 260: if ( (machState == MACHSTATE_RUNNING) && (!is_startSignal()
      +                          ) )
  6124  00242A  05CA               	decf	_machState& (0+255),w,b
  6125  00242C  A4D8               	btfss	status,2,c
  6126  00242E  0012               	return	
  6127                           
  6128                           ; BSR set to: 0
  6129  002430  EC42  F015         	call	_is_startSignal	;wreg free
  6130  002434  0900               	iorlw	0
  6131  002436  A4D8               	btfss	status,2,c
  6132  002438  0012               	return	
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;main.c: 261: {;main.c: 262: error_requestToWriteDisp.f.startSignal = 1;
  6136  00243A  81C9               	bsf	_error_requestToWriteDisp& (0+255),0,b
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;main.c: 265: sm0++;
  6140  00243C  2BC7               	incf	check_startSignal@sm0& (0+255),f,b
  6141  00243E  0012               	return	
  6142  002440                     l5893:
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;main.c: 268: else if (sm0 == 1)
  6146  002440  05C7               	decf	check_startSignal@sm0& (0+255),w,b
  6147  002442  A4D8               	btfss	status,2,c
  6148  002444  0012               	return	
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;main.c: 269: {;main.c: 271: if ( is_startSignal() )
  6152  002446  EC42  F015         	call	_is_startSignal	;wreg free
  6153  00244A  0900               	iorlw	0
  6154  00244C  B4D8               	btfsc	status,2,c
  6155  00244E  D007               	goto	l5903
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;main.c: 272: {;main.c: 273: error_requestToWriteDisp.f.startSignal = 0;
  6159  002450  91C9               	bcf	_error_requestToWriteDisp& (0+255),0,b
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;main.c: 274: sm0 = 0x00;
  6163  002452  0E00               	movlw	0
  6164  002454  6FC7               	movwf	check_startSignal@sm0& (0+255),b
  6165                           
  6166                           ;main.c: 275: sm1 = 0x00;
  6167  002456  0E00               	movlw	0
  6168  002458  6FC6               	movwf	check_startSignal@sm1& (0+255),b
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;main.c: 277: ps_autoMode_start();
  6172  00245A  ECEC  F014         	call	_ps_autoMode_start	;wreg free
  6173  00245E                     l5903:
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;main.c: 279: };main.c: 283: if (error_grantedToWriteDisp.f.startSignal == 1)
  6177  00245E  A1C8               	btfss	_error_grantedToWriteDisp& (0+255),0,b
  6178  002460  D008               	goto	l5911
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;main.c: 284: {;main.c: 285: if (sm1 == 0)
  6182  002462  51C6               	movf	check_startSignal@sm1& (0+255),w,b
  6183  002464  A4D8               	btfss	status,2,c
  6184  002466  0012               	return	
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;main.c: 286: {;main.c: 287: disp7s_qtyDisp_writeText_20_3RAYAS();
  6188  002468  ECE9  F013         	call	_disp7s_qtyDisp_writeText_20_3RAYAS	;wreg free
  6189                           
  6190                           ;main.c: 289: sm1++;
  6191  00246C  0100               	movlb	0	; () banked
  6192  00246E  2BC6               	incf	check_startSignal@sm1& (0+255),f,b
  6193  002470  0012               	return	
  6194  002472                     l5911:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;main.c: 292: else;main.c: 293: {;main.c: 294: sm1 = 0x0;
  6198  002472  0E00               	movlw	0
  6199  002474  6FC6               	movwf	check_startSignal@sm1& (0+255),b
  6200                           
  6201                           ; BSR set to: 0
  6202  002476  0012               	return		;funcret
  6203  002478                     __end_of_check_startSignal:
  6204                           	opt callstack 0
  6205                           
  6206 ;; *************** function _is_startSignal *****************
  6207 ;; Defined at:
  6208 ;;		line 3 in file "inputs.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;		None
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      char 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0
  6217 ;; Tracked objects:
  6218 ;;		On entry : 3F/0
  6219 ;;		On exit  : 3F/0
  6220 ;;		Unchanged: 3F/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6222 ;;      Params:         0       0       0       0       0       0       0       0       0
  6223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6224 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6225 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6226 ;;Total ram usage:        1 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:    5
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_check_startSignal
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text42
  6237  002A84                     __ptext42:
  6238                           	opt callstack 0
  6239  002A84                     _is_startSignal:
  6240                           	opt callstack 24
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;inputs.c: 6: return !((PORTE & (1<<2))>>2);
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;incstack = 0
  6247  002A84  CF84 F00B          	movff	3972,??_is_startSignal	;volatile
  6248  002A88  90D8               	bcf	status,0,c
  6249  002A8A  320B               	rrcf	??_is_startSignal,f,c
  6250  002A8C  90D8               	bcf	status,0,c
  6251  002A8E  320B               	rrcf	??_is_startSignal,f,c
  6252  002A90  B00B               	btfsc	??_is_startSignal,0,c
  6253  002A92  D002               	goto	u6240
  6254  002A94  0E01               	movlw	1
  6255  002A96  0012               	return	
  6256  002A98                     u6240:
  6257  002A98  0E00               	movlw	0
  6258                           
  6259                           ; BSR set to: 0
  6260  002A9A  0012               	return		;funcret
  6261  002A9C                     __end_of_is_startSignal:
  6262                           	opt callstack 0
  6263                           
  6264 ;; *************** function _disp7s_qtyDisp_writeText_20_3RAYAS *****************
  6265 ;; Defined at:
  6266 ;;		line 175 in file "display.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 3F/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:   10
  6287 ;; This function calls:
  6288 ;;		_disp7s_modeDisp_writeInt
  6289 ;; This function is called by:
  6290 ;;		_check_startSignal
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text43
  6295  0027D2                     __ptext43:
  6296                           	opt callstack 0
  6297  0027D2                     _disp7s_qtyDisp_writeText_20_3RAYAS:
  6298                           	opt callstack 19
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;display.c: 177: disp7s_modeDisp_writeInt(20);
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;incstack = 0
  6305  0027D2  0E00               	movlw	0
  6306  0027D4  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  6307  0027D6  0E14               	movlw	20
  6308  0027D8  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  6309  0027DA  EC35  F015         	call	_disp7s_modeDisp_writeInt	;wreg free
  6310                           
  6311                           ;display.c: 179: pulsonic.disp7s.qty[2] =DISP7S_CHARS[RAYA];
  6312  0027DE  0E10               	movlw	low (_DISP7S_CHARS+1)
  6313  0027E0  6EF6               	movwf	tblptrl,c
  6314  0027E2                     	if	1	;There is more than 1 active tblptr byte
  6315  0027E2  0E08               	movlw	high __smallconst
  6316  0027E4  6EF7               	movwf	tblptrh,c
  6317  0027E6                     	endif
  6318  0027E6                     	if	0	;tblptru may be non-zero
  6319  0027E6                     	endif
  6320  0027E6                     	if	0	;tblptru may be non-zero
  6321  0027E6                     	endif
  6322  0027E6  0008               	tblrd		*
  6323  0027E8  CFF5 F13E          	movff	tablat,_pulsonic+62
  6324                           
  6325                           ;display.c: 180: pulsonic.disp7s.qty[1] =DISP7S_CHARS[RAYA];
  6326  0027EC  0E10               	movlw	low (_DISP7S_CHARS+1)
  6327  0027EE  6EF6               	movwf	tblptrl,c
  6328  0027F0                     	if	1	;There is more than 1 active tblptr byte
  6329  0027F0  0E08               	movlw	high __smallconst
  6330  0027F2  6EF7               	movwf	tblptrh,c
  6331  0027F4                     	endif
  6332  0027F4                     	if	0	;tblptru may be non-zero
  6333  0027F4                     	endif
  6334  0027F4                     	if	0	;tblptru may be non-zero
  6335  0027F4                     	endif
  6336  0027F4  0008               	tblrd		*
  6337  0027F6  CFF5 F13D          	movff	tablat,_pulsonic+61
  6338                           
  6339                           ;display.c: 181: pulsonic.disp7s.qty[0] =DISP7S_CHARS[RAYA];
  6340  0027FA  0E10               	movlw	low (_DISP7S_CHARS+1)
  6341  0027FC  6EF6               	movwf	tblptrl,c
  6342  0027FE                     	if	1	;There is more than 1 active tblptr byte
  6343  0027FE  0E08               	movlw	high __smallconst
  6344  002800  6EF7               	movwf	tblptrh,c
  6345  002802                     	endif
  6346  002802                     	if	0	;tblptru may be non-zero
  6347  002802                     	endif
  6348  002802                     	if	0	;tblptru may be non-zero
  6349  002802                     	endif
  6350  002802  0008               	tblrd		*
  6351  002804  CFF5 F13C          	movff	tablat,_pulsonic+60
  6352  002808  0012               	return		;funcret
  6353  00280A                     __end_of_disp7s_qtyDisp_writeText_20_3RAYAS:
  6354                           	opt callstack 0
  6355                           
  6356 ;; *************** function _disp7s_modeDisp_writeInt *****************
  6357 ;; Defined at:
  6358 ;;		line 304 in file "display.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  num             2   55[COMRAM] int 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6372 ;;      Params:         2       0       0       0       0       0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6375 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6376 ;;Total ram usage:        2 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    9
  6379 ;; This function calls:
  6380 ;;		_disp7s_write_i
  6381 ;; This function is called by:
  6382 ;;		_disp7s_qtyDisp_writeText_20_3RAYAS
  6383 ;;		_visMode_disp
  6384 ;;		_configMode_disp
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text44
  6389  002A6A                     __ptext44:
  6390                           	opt callstack 0
  6391  002A6A                     _disp7s_modeDisp_writeInt:
  6392                           	opt callstack 19
  6393                           
  6394                           ;display.c: 306: disp7s_write_i(pulsonic.disp7s.mode, 2, num);
  6395                           
  6396                           ;incstack = 0
  6397  002A6A  0E3F               	movlw	low (_pulsonic+63)
  6398  002A6C  6E20               	movwf	disp7s_write_i@pDisp,c
  6399  002A6E  0E01               	movlw	high (_pulsonic+63)
  6400  002A70  6E21               	movwf	disp7s_write_i@pDisp+1,c
  6401  002A72  0E02               	movlw	2
  6402  002A74  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  6403  002A76  C038  F023         	movff	disp7s_modeDisp_writeInt@num,disp7s_write_i@num
  6404  002A7A  C039  F024         	movff	disp7s_modeDisp_writeInt@num+1,disp7s_write_i@num+1
  6405  002A7E  ECC9  F00B         	call	_disp7s_write_i	;wreg free
  6406  002A82  0012               	return		;funcret
  6407  002A84                     __end_of_disp7s_modeDisp_writeInt:
  6408                           	opt callstack 0
  6409                           
  6410 ;; *************** function _disp7s_write_i *****************
  6411 ;; Defined at:
  6412 ;;		line 270 in file "display.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  pDisp           2   31[COMRAM] PTR unsigned char 
  6415 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  6416 ;;  NUM_OF_DISP     1   33[COMRAM] char 
  6417 ;;  num             2   34[COMRAM] int 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  buff           10   41[COMRAM] unsigned char [10]
  6420 ;;  K10MULT         2   52[COMRAM] int 
  6421 ;;  i               1   54[COMRAM] char 
  6422 ;;  pi              1   51[COMRAM] char 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/1
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6432 ;;      Params:         5       0       0       0       0       0       0       0       0
  6433 ;;      Locals:        14       0       0       0       0       0       0       0       0
  6434 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6435 ;;      Totals:        24       0       0       0       0       0       0       0       0
  6436 ;;Total ram usage:       24 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    8
  6439 ;; This function calls:
  6440 ;;		___wmul
  6441 ;;		_itoa
  6442 ;;		_strlen
  6443 ;; This function is called by:
  6444 ;;		_disp7s_qtyDisp_writeInt
  6445 ;;		_disp7s_modeDisp_writeInt
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text45
  6450  001792                     __ptext45:
  6451                           	opt callstack 0
  6452  001792                     _disp7s_write_i:
  6453                           	opt callstack 19
  6454                           
  6455                           ;display.c: 272: int16_t K10MULT;;display.c: 273: char buff[10];;display.c: 274: int8_t 
      +                          i;;display.c: 275: int8_t pi;;display.c: 277: K10MULT = 1;
  6456                           
  6457                           ;incstack = 0
  6458  001792  0E00               	movlw	0
  6459  001794  6E36               	movwf	disp7s_write_i@K10MULT+1,c
  6460  001796  0E01               	movlw	1
  6461  001798  6E35               	movwf	disp7s_write_i@K10MULT,c
  6462                           
  6463                           ;display.c: 278: i = NUM_OF_DISP;
  6464  00179A  C022  F037         	movff	disp7s_write_i@NUM_OF_DISP,disp7s_write_i@i
  6465                           
  6466                           ;display.c: 279: while (i--)
  6467  00179E  D00E               	goto	l5237
  6468  0017A0                     l5235:
  6469                           
  6470                           ;display.c: 280: {K10MULT *=10;}
  6471  0017A0  C035  F00B         	movff	disp7s_write_i@K10MULT,___wmul@multiplier
  6472  0017A4  C036  F00C         	movff	disp7s_write_i@K10MULT+1,___wmul@multiplier+1
  6473  0017A8  0E00               	movlw	0
  6474  0017AA  6E0E               	movwf	___wmul@multiplicand+1,c
  6475  0017AC  0E0A               	movlw	10
  6476  0017AE  6E0D               	movwf	___wmul@multiplicand,c
  6477  0017B0  EC94  F014         	call	___wmul	;wreg free
  6478  0017B4  C00B  F035         	movff	?___wmul,disp7s_write_i@K10MULT
  6479  0017B8  C00C  F036         	movff	?___wmul+1,disp7s_write_i@K10MULT+1
  6480  0017BC                     l5237:
  6481  0017BC  0637               	decf	disp7s_write_i@i,f,c
  6482  0017BE  2837               	incf	disp7s_write_i@i,w,c
  6483  0017C0  A4D8               	btfss	status,2,c
  6484  0017C2  D7EE               	goto	l5235
  6485                           
  6486                           ;display.c: 282: if (num >= K10MULT)
  6487  0017C4  5035               	movf	disp7s_write_i@K10MULT,w,c
  6488  0017C6  5C23               	subwf	disp7s_write_i@num,w,c
  6489  0017C8  5024               	movf	disp7s_write_i@num+1,w,c
  6490  0017CA  0A80               	xorlw	128
  6491  0017CC  6E25               	movwf	??_disp7s_write_i& (0+255),c
  6492  0017CE  5036               	movf	disp7s_write_i@K10MULT+1,w,c
  6493  0017D0  0A80               	xorlw	128
  6494  0017D2  5825               	subwfb	??_disp7s_write_i& (0+255),w,c
  6495  0017D4  A0D8               	btfss	status,0,c
  6496  0017D6  D006               	goto	l5243
  6497                           
  6498                           ;display.c: 283: {num= K10MULT-1;}
  6499  0017D8  0EFF               	movlw	255
  6500  0017DA  2435               	addwf	disp7s_write_i@K10MULT,w,c
  6501  0017DC  6E23               	movwf	disp7s_write_i@num,c
  6502  0017DE  0EFF               	movlw	255
  6503  0017E0  2036               	addwfc	disp7s_write_i@K10MULT+1,w,c
  6504  0017E2  6E24               	movwf	disp7s_write_i@num+1,c
  6505  0017E4                     l5243:
  6506                           
  6507                           ;display.c: 285: itoa(buff, num, 10);
  6508  0017E4  0E2A               	movlw	low disp7s_write_i@buff
  6509  0017E6  6E1A               	movwf	itoa@buf,c
  6510  0017E8  C023  F01B         	movff	disp7s_write_i@num,itoa@val
  6511  0017EC  C024  F01C         	movff	disp7s_write_i@num+1,itoa@val+1
  6512  0017F0  0E00               	movlw	0
  6513  0017F2  6E1E               	movwf	itoa@base+1,c
  6514  0017F4  0E0A               	movlw	10
  6515  0017F6  6E1D               	movwf	itoa@base,c
  6516  0017F8  EC05  F014         	call	_itoa	;wreg free
  6517                           
  6518                           ;display.c: 288: for (i=0; i<NUM_OF_DISP; i++)
  6519  0017FC  0E00               	movlw	0
  6520  0017FE  6E37               	movwf	disp7s_write_i@i,c
  6521  001800  D013               	goto	l5251
  6522  001802                     l5247:
  6523                           
  6524                           ;display.c: 289: {pDisp[i] = DISP7S_CHARS[OFF];}
  6525  001802  0E0F               	movlw	low _DISP7S_CHARS
  6526  001804  6EF6               	movwf	tblptrl,c
  6527  001806                     	if	1	;There is more than 1 active tblptr byte
  6528  001806  0E08               	movlw	high _DISP7S_CHARS
  6529  001808  6EF7               	movwf	tblptrh,c
  6530  00180A                     	endif
  6531  00180A                     	if	0	;There are less than 3 active tblptr bytes
  6532  00180A                     	endif
  6533  00180A  C037  F025         	movff	disp7s_write_i@i,??_disp7s_write_i
  6534  00180E  6A26               	clrf	(??_disp7s_write_i+1)& (0+255),c
  6535  001810  BE25               	btfsc	??_disp7s_write_i& (0+255),7,c
  6536  001812  0626               	decf	(??_disp7s_write_i+1)& (0+255),f,c
  6537  001814  5025               	movf	??_disp7s_write_i,w,c
  6538  001816  2420               	addwf	disp7s_write_i@pDisp,w,c
  6539  001818  6ED9               	movwf	fsr2l,c
  6540  00181A  5026               	movf	??_disp7s_write_i+1,w,c
  6541  00181C  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  6542  00181E  6EDA               	movwf	fsr2h,c
  6543  001820  0008               	tblrd		*
  6544  001822  CFF5 FFDF          	movff	tablat,indf2
  6545  001826  2A37               	incf	disp7s_write_i@i,f,c
  6546  001828                     l5251:
  6547  001828  5037               	movf	disp7s_write_i@i,w,c
  6548  00182A  0A80               	xorlw	128
  6549  00182C  6E25               	movwf	??_disp7s_write_i& (0+255),c
  6550  00182E  5022               	movf	disp7s_write_i@NUM_OF_DISP,w,c
  6551  001830  0A80               	xorlw	128
  6552  001832  5C25               	subwf	??_disp7s_write_i& (0+255),w,c
  6553  001834  A0D8               	btfss	status,0,c
  6554  001836  D7E5               	goto	l5247
  6555                           
  6556                           ;display.c: 291: i=0;
  6557  001838  0E00               	movlw	0
  6558  00183A  6E37               	movwf	disp7s_write_i@i,c
  6559                           
  6560                           ;display.c: 292: pi = strlen(buff)-1;
  6561  00183C  0E2A               	movlw	low disp7s_write_i@buff
  6562  00183E  6E0B               	movwf	strlen@s,c
  6563  001840  ECB9  F014         	call	_strlen	;wreg free
  6564  001844  040B               	decf	?_strlen,w,c
  6565  001846  6E34               	movwf	disp7s_write_i@pi,c
  6566                           
  6567                           ;display.c: 293: while (buff[i] != '\0')
  6568  001848  D021               	goto	l5263
  6569  00184A                     l5257:
  6570                           
  6571                           ;display.c: 294: {;display.c: 295: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  6572  00184A  5037               	movf	disp7s_write_i@i,w,c
  6573  00184C  0F2A               	addlw	low disp7s_write_i@buff
  6574  00184E  6ED9               	movwf	fsr2l,c
  6575  001850  6ADA               	clrf	fsr2h,c
  6576  001852  50DF               	movf	indf2,w,c
  6577  001854  6E25               	movwf	??_disp7s_write_i& (0+255),c
  6578  001856  0ED0               	movlw	208
  6579  001858  2625               	addwf	??_disp7s_write_i,f,c
  6580  00185A  5025               	movf	??_disp7s_write_i,w,c
  6581  00185C  0F01               	addlw	low _DISP7S_NUMS
  6582  00185E  6E26               	movwf	(??_disp7s_write_i+1)& (0+255),c
  6583  001860  C026  FFF6         	movff	??_disp7s_write_i+1,tblptrl
  6584  001864                     	if	1	;There is more than 1 active tblptr byte
  6585  001864  0E08               	movlw	high __smallconst
  6586  001866  6EF7               	movwf	tblptrh,c
  6587  001868                     	endif
  6588  001868                     	if	0	;tblptru may be non-zero
  6589  001868                     	endif
  6590  001868                     	if	0	;tblptru may be non-zero
  6591  001868                     	endif
  6592  001868  0008               	tblrd		*
  6593  00186A  CFF5 F027          	movff	tablat,??_disp7s_write_i+2
  6594  00186E  C034  F028         	movff	disp7s_write_i@pi,??_disp7s_write_i+3
  6595  001872  6A29               	clrf	(??_disp7s_write_i+4)& (0+255),c
  6596  001874  BE28               	btfsc	(??_disp7s_write_i+3)& (0+255),7,c
  6597  001876  0629               	decf	(??_disp7s_write_i+4)& (0+255),f,c
  6598  001878  5028               	movf	??_disp7s_write_i+3,w,c
  6599  00187A  2420               	addwf	disp7s_write_i@pDisp,w,c
  6600  00187C  6ED9               	movwf	fsr2l,c
  6601  00187E  5029               	movf	??_disp7s_write_i+4,w,c
  6602  001880  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  6603  001882  6EDA               	movwf	fsr2h,c
  6604  001884  5027               	movf	??_disp7s_write_i+2,w,c
  6605  001886  12DF               	iorwf	indf2,f,c
  6606  001888  0634               	decf	disp7s_write_i@pi,f,c
  6607                           
  6608                           ;display.c: 296: i++;
  6609  00188A  2A37               	incf	disp7s_write_i@i,f,c
  6610  00188C                     l5263:
  6611  00188C  5037               	movf	disp7s_write_i@i,w,c
  6612  00188E  0F2A               	addlw	low disp7s_write_i@buff
  6613  001890  6ED9               	movwf	fsr2l,c
  6614  001892  6ADA               	clrf	fsr2h,c
  6615  001894  50DF               	movf	indf2,w,c
  6616  001896  B4D8               	btfsc	status,2,c
  6617  001898  0012               	return	
  6618  00189A  D7D7               	goto	l5257
  6619  00189C                     __end_of_disp7s_write_i:
  6620                           	opt callstack 0
  6621                           
  6622 ;; *************** function _strlen *****************
  6623 ;; Defined at:
  6624 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/strlen.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;  s               1   10[COMRAM] PTR const unsigned char 
  6627 ;;		 -> disp7s_write_i@buff(10), 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  cp              1   12[COMRAM] PTR const unsigned char 
  6630 ;;		 -> disp7s_write_i@buff(10), 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  2   10[COMRAM] unsigned int 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/1
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6640 ;;      Params:         2       0       0       0       0       0       0       0       0
  6641 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6643 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6644 ;;Total ram usage:        3 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    5
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_disp7s_write_i
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text46
  6655  002972                     __ptext46:
  6656                           	opt callstack 0
  6657  002972                     _strlen:
  6658                           	opt callstack 21
  6659                           
  6660                           ;incstack = 0
  6661  002972  C00B  F00D         	movff	strlen@s,strlen@cp
  6662  002976  D001               	goto	l5191
  6663  002978                     l5189:
  6664  002978  2A0D               	incf	strlen@cp,f,c
  6665  00297A                     l5191:
  6666  00297A  500D               	movf	strlen@cp,w,c
  6667  00297C  6ED9               	movwf	fsr2l,c
  6668  00297E  6ADA               	clrf	fsr2h,c
  6669  002980  50DF               	movf	indf2,w,c
  6670  002982  A4D8               	btfss	status,2,c
  6671  002984  D7F9               	goto	l5189
  6672  002986  500B               	movf	strlen@s,w,c
  6673  002988  5C0D               	subwf	strlen@cp,w,c
  6674  00298A  6E0B               	movwf	?_strlen,c
  6675  00298C  6A0C               	clrf	?_strlen+1,c
  6676  00298E  BE0B               	btfsc	?_strlen,7,c
  6677  002990  060C               	decf	?_strlen+1,f,c
  6678  002992  0012               	return		;funcret
  6679  002994                     __end_of_strlen:
  6680                           	opt callstack 0
  6681                           
  6682 ;; *************** function _check_oilLevel *****************
  6683 ;; Defined at:
  6684 ;;		line 299 in file "main.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 3F/0
  6695 ;;		On exit  : 3F/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:   12
  6705 ;; This function calls:
  6706 ;;		_disp7s_qtyDisp_writeText_NO_OIL
  6707 ;;		_is_oilLevel
  6708 ;;		_ps_autoMode_start
  6709 ;; This function is called by:
  6710 ;;		_main
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text47
  6715  002478                     __ptext47:
  6716                           	opt callstack 0
  6717  002478                     _check_oilLevel:
  6718                           	opt callstack 18
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;main.c: 301: static int8_t sm0, sm1;;main.c: 302: if (sm0 == 0)
  6722                           
  6723                           ;incstack = 0
  6724  002478  51C5               	movf	check_oilLevel@sm0& (0+255),w,b
  6725  00247A  A4D8               	btfss	status,2,c
  6726  00247C  D00B               	goto	l5925
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;main.c: 303: {;main.c: 304: if ( !is_oilLevel() )
  6730  00247E  ECCF  F015         	call	_is_oilLevel	;wreg free
  6731  002482  0900               	iorlw	0
  6732  002484  A4D8               	btfss	status,2,c
  6733  002486  0012               	return	
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;main.c: 305: {;main.c: 306: error_requestToWriteDisp.f.oilLevel = 1;
  6737  002488  83C9               	bsf	_error_requestToWriteDisp& (0+255),1,b
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;main.c: 308: machState = MACHSTATE_STALL;
  6741  00248A  0E00               	movlw	0
  6742  00248C  6FCA               	movwf	_machState& (0+255),b
  6743                           
  6744                           ; BSR set to: 0
  6745  00248E  8A89               	bsf	3977,5,c	;volatile
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;main.c: 310: sm0++;
  6749  002490  2BC5               	incf	check_oilLevel@sm0& (0+255),f,b
  6750  002492  0012               	return	
  6751  002494                     l5925:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;main.c: 313: else if (sm0 == 1)
  6755  002494  05C5               	decf	check_oilLevel@sm0& (0+255),w,b
  6756  002496  A4D8               	btfss	status,2,c
  6757  002498  0012               	return	
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;main.c: 314: {;main.c: 316: if ( is_oilLevel() )
  6761  00249A  ECCF  F015         	call	_is_oilLevel	;wreg free
  6762  00249E  0900               	iorlw	0
  6763  0024A0  B4D8               	btfsc	status,2,c
  6764  0024A2  D008               	goto	l5937
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;main.c: 317: {;main.c: 318: error_requestToWriteDisp.f.oilLevel = 0;
  6768  0024A4  93C9               	bcf	_error_requestToWriteDisp& (0+255),1,b
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;main.c: 319: sm0 = 0x00;
  6772  0024A6  0E00               	movlw	0
  6773  0024A8  6FC5               	movwf	check_oilLevel@sm0& (0+255),b
  6774                           
  6775                           ;main.c: 320: sm1 = 0x00;
  6776  0024AA  0E00               	movlw	0
  6777  0024AC  6FC4               	movwf	check_oilLevel@sm1& (0+255),b
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;main.c: 322: ps_autoMode_start();
  6781  0024AE  ECEC  F014         	call	_ps_autoMode_start	;wreg free
  6782                           
  6783                           ; BSR set to: 0
  6784  0024B2  9A89               	bcf	3977,5,c	;volatile
  6785  0024B4                     l5937:
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;main.c: 324: };main.c: 328: if (error_grantedToWriteDisp.f.oilLevel == 1)
  6789  0024B4  A3C8               	btfss	_error_grantedToWriteDisp& (0+255),1,b
  6790  0024B6  D008               	goto	l5945
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;main.c: 329: {;main.c: 330: if (sm1 == 0)
  6794  0024B8  51C4               	movf	check_oilLevel@sm1& (0+255),w,b
  6795  0024BA  A4D8               	btfss	status,2,c
  6796  0024BC  0012               	return	
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;main.c: 331: {;main.c: 332: disp7s_qtyDisp_writeText_NO_OIL();
  6800  0024BE  ECCA  F014         	call	_disp7s_qtyDisp_writeText_NO_OIL	;wreg free
  6801                           
  6802                           ; BSR set to: 1
  6803                           ;main.c: 334: sm1++;
  6804  0024C2  0100               	movlb	0	; () banked
  6805  0024C4  2BC4               	incf	check_oilLevel@sm1& (0+255),f,b
  6806  0024C6  0012               	return	
  6807  0024C8                     l5945:
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;main.c: 337: else;main.c: 338: {;main.c: 339: sm1 = 0x0;
  6811  0024C8  0E00               	movlw	0
  6812  0024CA  6FC4               	movwf	check_oilLevel@sm1& (0+255),b
  6813                           
  6814                           ; BSR set to: 0
  6815  0024CC  0012               	return		;funcret
  6816  0024CE                     __end_of_check_oilLevel:
  6817                           	opt callstack 0
  6818                           
  6819 ;; *************** function _ps_autoMode_start *****************
  6820 ;; Defined at:
  6821 ;;		line 83 in file "main.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;		None
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;		None
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 3F/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6835 ;;      Params:         0       0       0       0       0       0       0       0       0
  6836 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6838 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6839 ;;Total ram usage:        0 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; Hardware stack levels required when called:   11
  6842 ;; This function calls:
  6843 ;;		_autoMode_init
  6844 ;;		_ikb_flush
  6845 ;; This function is called by:
  6846 ;;		_main
  6847 ;;		_check_startSignal
  6848 ;;		_check_oilLevel
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text48
  6853  0029D8                     __ptext48:
  6854                           	opt callstack 0
  6855  0029D8                     _ps_autoMode_start:
  6856                           	opt callstack 19
  6857                           
  6858                           ;main.c: 85: unlock.autoMode = 1;
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;incstack = 0
  6862  0029D8  0100               	movlb	0	; () banked
  6863  0029DA  83CB               	bsf	_unlock& (0+255),1,b
  6864                           
  6865                           ;main.c: 86: unlock.visMode = 0;
  6866  0029DC  95CB               	bcf	_unlock& (0+255),2,b
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;main.c: 87: autoMode_init(AUTOMODE_INIT_RESTART);
  6870  0029DE  0E00               	movlw	0
  6871  0029E0  EC1E  F014         	call	_autoMode_init
  6872                           
  6873                           ;main.c: 88: smain.focus.kb = FOCUS_KB_AUTOMODE;
  6874  0029E4  0E01               	movlw	1
  6875  0029E6  6E48               	movwf	_smain+1,c	;volatile
  6876                           
  6877                           ;main.c: 89: disp_owner = DISPOWNER_AUTOMODE;
  6878  0029E8  0E00               	movlw	0
  6879  0029EA  6E50               	movwf	_disp_owner,c
  6880                           
  6881                           ;main.c: 90: machState = MACHSTATE_RUNNING;
  6882  0029EC  0E01               	movlw	1
  6883  0029EE  0100               	movlb	0	; () banked
  6884  0029F0  6FCA               	movwf	_machState& (0+255),b
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;main.c: 92: ikb_flush();
  6888  0029F2  ECCC  F015         	call	_ikb_flush	;wreg free
  6889                           
  6890                           ; BSR set to: 0
  6891  0029F6  0012               	return		;funcret
  6892  0029F8                     __end_of_ps_autoMode_start:
  6893                           	opt callstack 0
  6894                           
  6895 ;; *************** function _ikb_flush *****************
  6896 ;; Defined at:
  6897 ;;		line 418 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 3F/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6911 ;;      Params:         0       0       0       0       0       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6914 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6915 ;;Total ram usage:        0 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    6
  6918 ;; This function calls:
  6919 ;;		_ikey_clear_all_flag
  6920 ;; This function is called by:
  6921 ;;		_ps_autoMode_start
  6922 ;;		_main
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text49
  6927  002B98                     __ptext49:
  6928                           	opt callstack 0
  6929  002B98                     _ikb_flush:
  6930                           	opt callstack 23
  6931                           
  6932                           ;ikb.c: 420: ikey_clear_all_flag();
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;incstack = 0
  6936  002B98  ECFC  F014         	call	_ikey_clear_all_flag	;wreg free
  6937                           
  6938                           ; BSR set to: 0
  6939  002B9C  0012               	return		;funcret
  6940  002B9E                     __end_of_ikb_flush:
  6941                           	opt callstack 0
  6942                           
  6943 ;; *************** function _ikey_clear_all_flag *****************
  6944 ;; Defined at:
  6945 ;;		line 760 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;		None
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  i               1   10[COMRAM] unsigned char 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  1    wreg      void 
  6952 ;; Registers used:
  6953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 3F/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6959 ;;      Params:         0       0       0       0       0       0       0       0       0
  6960 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6962 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6963 ;;Total ram usage:        1 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    5
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_ikb_flush
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text50
  6974  0029F8                     __ptext50:
  6975                           	opt callstack 0
  6976  0029F8                     _ikey_clear_all_flag:
  6977                           	opt callstack 23
  6978                           
  6979                           ;ikb.c: 762: uint8_t i;;ikb.c: 763: for (i=0; i<5; i++)
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;incstack = 0
  6983  0029F8  0E00               	movlw	0
  6984  0029FA  6E0B               	movwf	ikey_clear_all_flag@i,c
  6985  0029FC                     l5209:
  6986                           
  6987                           ;ikb.c: 764: {;ikb.c: 766: key[i].bf.ReadyToRead = 0;
  6988  0029FC  500B               	movf	ikey_clear_all_flag@i,w,c
  6989  0029FE  0D10               	mullw	16
  6990  002A00  50F3               	movf	prodl,w,c
  6991  002A02  0F6A               	addlw	low (_key+10)
  6992  002A04  6ED9               	movwf	fsr2l,c
  6993  002A06  6ADA               	clrf	fsr2h,c
  6994  002A08  0100               	movlb	0	; () banked
  6995  002A0A  9CDF               	bcf	indf2,6,c
  6996                           
  6997                           ; BSR set to: 0
  6998  002A0C  2A0B               	incf	ikey_clear_all_flag@i,f,c
  6999                           
  7000                           ; BSR set to: 0
  7001  002A0E  0E04               	movlw	4
  7002  002A10  640B               	cpfsgt	ikey_clear_all_flag@i,c
  7003  002A12  D7F4               	goto	l5209
  7004  002A14  0012               	return	
  7005  002A16                     __end_of_ikey_clear_all_flag:
  7006                           	opt callstack 0
  7007                           
  7008 ;; *************** function _autoMode_init *****************
  7009 ;; Defined at:
  7010 ;;		line 16 in file "automode.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  init            1    wreg     char 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  init            1   59[COMRAM] char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7019 ;; Tracked objects:
  7020 ;;		On entry : 3F/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7024 ;;      Params:         0       0       0       0       0       0       0       0       0
  7025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7027 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7028 ;;Total ram usage:        1 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:   10
  7031 ;; This function calls:
  7032 ;;		_disp7s_modeDisp_off
  7033 ;;		_disp7s_qtyDisp_writeFloat
  7034 ;;		_pulsonic_getTotalSum_mlh
  7035 ;; This function is called by:
  7036 ;;		_ps_autoMode_start
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text51
  7042  00283C                     __ptext51:
  7043                           	opt callstack 0
  7044  00283C                     _autoMode_init:
  7045                           	opt callstack 19
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;incstack = 0
  7049                           ;autoMode_init@init stored from wreg
  7050  00283C  6E3C               	movwf	autoMode_init@init,c
  7051                           
  7052                           ;automode.c: 18: if (disp_owner == DISPOWNER_AUTOMODE)
  7053  00283E  5050               	movf	_disp_owner,w,c
  7054  002840  A4D8               	btfss	status,2,c
  7055  002842  D00C               	goto	l5271
  7056                           
  7057                           ;automode.c: 19: {;automode.c: 20: disp7s_modeDisp_off();
  7058  002844  EC58  F015         	call	_disp7s_modeDisp_off	;wreg free
  7059                           
  7060                           ;automode.c: 21: disp7s_qtyDisp_writeFloat( pulsonic_getTotalSum_mlh() );
  7061  002848  ECB1  F00F         	call	_pulsonic_getTotalSum_mlh	;wreg free
  7062  00284C  C01F  F141         	movff	?_pulsonic_getTotalSum_mlh,disp7s_qtyDisp_writeFloat@num
  7063  002850  C020  F142         	movff	?_pulsonic_getTotalSum_mlh+1,disp7s_qtyDisp_writeFloat@num+1
  7064  002854  C021  F143         	movff	?_pulsonic_getTotalSum_mlh+2,disp7s_qtyDisp_writeFloat@num+2
  7065  002858  EC0B  F015         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  7066  00285C                     l5271:
  7067                           
  7068                           ;automode.c: 22: };automode.c: 23: if (init == AUTOMODE_INIT_RESTART)
  7069  00285C  503C               	movf	autoMode_init@init,w,c
  7070  00285E  A4D8               	btfss	status,2,c
  7071  002860  0012               	return	
  7072                           
  7073                           ;automode.c: 24: {;automode.c: 25: autoMode.numNozzle = 0x0;
  7074  002862  0E00               	movlw	0
  7075  002864  6E4C               	movwf	_autoMode,c
  7076                           
  7077                           ;automode.c: 26: autoMode.sm0 = 0x0;
  7078  002866  0E00               	movlw	0
  7079  002868  6E4D               	movwf	_autoMode+1,c
  7080  00286A  0012               	return		;funcret
  7081  00286C                     __end_of_autoMode_init:
  7082                           	opt callstack 0
  7083                           
  7084 ;; *************** function _pulsonic_getTotalSum_mlh *****************
  7085 ;; Defined at:
  7086 ;;		line 24 in file "pulsonic.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;  acc             3   33[COMRAM] void 
  7091 ;;  i               2   36[COMRAM] int 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  3   30[COMRAM] int 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7101 ;;      Params:         3       0       0       0       0       0       0       0       0
  7102 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7104 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7105 ;;Total ram usage:        8 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    7
  7108 ;; This function calls:
  7109 ;;		___ftadd
  7110 ;;		___wmul
  7111 ;; This function is called by:
  7112 ;;		_autoMode_init
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text52
  7117  001F62                     __ptext52:
  7118                           	opt callstack 0
  7119  001F62                     _pulsonic_getTotalSum_mlh:
  7120                           	opt callstack 21
  7121                           
  7122                           ;pulsonic.c: 26: int i;;pulsonic.c: 27: double acc = 0;
  7123                           
  7124                           ;incstack = 0
  7125  001F62  0E00               	movlw	0
  7126  001F64  6E22               	movwf	pulsonic_getTotalSum_mlh@acc,c
  7127  001F66  0E00               	movlw	0
  7128  001F68  6E23               	movwf	pulsonic_getTotalSum_mlh@acc+1,c
  7129  001F6A  0E00               	movlw	0
  7130  001F6C  6E24               	movwf	pulsonic_getTotalSum_mlh@acc+2,c
  7131                           
  7132                           ;pulsonic.c: 29: for (i=0; i<8; i++)
  7133  001F6E  0E00               	movlw	0
  7134  001F70  6E26               	movwf	pulsonic_getTotalSum_mlh@i+1,c
  7135  001F72  0E00               	movlw	0
  7136  001F74  6E25               	movwf	pulsonic_getTotalSum_mlh@i,c
  7137  001F76                     l5221:
  7138                           
  7139                           ;pulsonic.c: 30: {;pulsonic.c: 31: acc += pulsonic.nozzle[i].Q_mlh;
  7140  001F76  C022  F013         	movff	pulsonic_getTotalSum_mlh@acc,___ftadd@f1
  7141  001F7A  C023  F014         	movff	pulsonic_getTotalSum_mlh@acc+1,___ftadd@f1+1
  7142  001F7E  C024  F015         	movff	pulsonic_getTotalSum_mlh@acc+2,___ftadd@f1+2
  7143  001F82  C025  F00B         	movff	pulsonic_getTotalSum_mlh@i,___wmul@multiplier
  7144  001F86  C026  F00C         	movff	pulsonic_getTotalSum_mlh@i+1,___wmul@multiplier+1
  7145  001F8A  0E00               	movlw	0
  7146  001F8C  6E0E               	movwf	___wmul@multiplicand+1,c
  7147  001F8E  0E06               	movlw	6
  7148  001F90  6E0D               	movwf	___wmul@multiplicand,c
  7149  001F92  EC94  F014         	call	___wmul	;wreg free
  7150  001F96  0E06               	movlw	low (_pulsonic+6)
  7151  001F98  240B               	addwf	?___wmul,w,c
  7152  001F9A  6ED9               	movwf	fsr2l,c
  7153  001F9C  0E01               	movlw	high (_pulsonic+6)
  7154  001F9E  200C               	addwfc	?___wmul+1,w,c
  7155  001FA0  6EDA               	movwf	fsr2h,c
  7156  001FA2  CFDE F016          	movff	postinc2,___ftadd@f2
  7157  001FA6  CFDE F017          	movff	postinc2,___ftadd@f2+1
  7158  001FAA  CFDD F018          	movff	postdec2,___ftadd@f2+2
  7159  001FAE  EC7F  F009         	call	___ftadd	;wreg free
  7160  001FB2  C013  F022         	movff	?___ftadd,pulsonic_getTotalSum_mlh@acc
  7161  001FB6  C014  F023         	movff	?___ftadd+1,pulsonic_getTotalSum_mlh@acc+1
  7162  001FBA  C015  F024         	movff	?___ftadd+2,pulsonic_getTotalSum_mlh@acc+2
  7163  001FBE  4A25               	infsnz	pulsonic_getTotalSum_mlh@i,f,c
  7164  001FC0  2A26               	incf	pulsonic_getTotalSum_mlh@i+1,f,c
  7165  001FC2  BE26               	btfsc	pulsonic_getTotalSum_mlh@i+1,7,c
  7166  001FC4  D7D8               	goto	l5221
  7167  001FC6  5026               	movf	pulsonic_getTotalSum_mlh@i+1,w,c
  7168  001FC8  E104               	bnz	u6100
  7169  001FCA  0E08               	movlw	8
  7170  001FCC  5C25               	subwf	pulsonic_getTotalSum_mlh@i,w,c
  7171  001FCE  A0D8               	btfss	status,0,c
  7172  001FD0  D7D2               	goto	l5221
  7173  001FD2                     u6100:
  7174                           
  7175                           ;pulsonic.c: 32: };pulsonic.c: 33: return acc;
  7176  001FD2  C022  F01F         	movff	pulsonic_getTotalSum_mlh@acc,?_pulsonic_getTotalSum_mlh
  7177  001FD6  C023  F020         	movff	pulsonic_getTotalSum_mlh@acc+1,?_pulsonic_getTotalSum_mlh+1
  7178  001FDA  C024  F021         	movff	pulsonic_getTotalSum_mlh@acc+2,?_pulsonic_getTotalSum_mlh+2
  7179  001FDE  0012               	return		;funcret
  7180  001FE0                     __end_of_pulsonic_getTotalSum_mlh:
  7181                           	opt callstack 0
  7182                           
  7183 ;; *************** function _disp7s_qtyDisp_writeFloat *****************
  7184 ;; Defined at:
  7185 ;;		line 261 in file "display.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;  num             3    0[BANK1 ] float 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;		None
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  1    wreg      void 
  7192 ;; Registers used:
  7193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 3F/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7199 ;;      Params:         0       0       3       0       0       0       0       0       0
  7200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7202 ;;      Totals:         0       0       3       0       0       0       0       0       0
  7203 ;;Total ram usage:        3 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:    9
  7206 ;; This function calls:
  7207 ;;		_disp7s_write_f
  7208 ;; This function is called by:
  7209 ;;		_autoMode_init
  7210 ;;		_visMode_disp
  7211 ;;		_configMode_disp
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text53
  7216  002A16                     __ptext53:
  7217                           	opt callstack 0
  7218  002A16                     _disp7s_qtyDisp_writeFloat:
  7219                           	opt callstack 19
  7220                           
  7221                           ;display.c: 263: disp7s_write_f(pulsonic.disp7s.qty, 3, num);
  7222                           
  7223                           ;incstack = 0
  7224  002A16  0E3C               	movlw	low (_pulsonic+60)
  7225  002A18  6E31               	movwf	disp7s_write_f@pDisp,c
  7226  002A1A  0E01               	movlw	high (_pulsonic+60)
  7227  002A1C  6E32               	movwf	disp7s_write_f@pDisp+1,c
  7228  002A1E  0E03               	movlw	3
  7229  002A20  6E33               	movwf	disp7s_write_f@NUM_OF_DISP,c
  7230  002A22  C141  F034         	movff	disp7s_qtyDisp_writeFloat@num,disp7s_write_f@num
  7231  002A26  C142  F035         	movff	disp7s_qtyDisp_writeFloat@num+1,disp7s_write_f@num+1
  7232  002A2A  C143  F036         	movff	disp7s_qtyDisp_writeFloat@num+2,disp7s_write_f@num+2
  7233  002A2E  EC71  F008         	call	_disp7s_write_f	;wreg free
  7234                           
  7235                           ; BSR set to: 0
  7236  002A32  0012               	return		;funcret
  7237  002A34                     __end_of_disp7s_qtyDisp_writeFloat:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _disp7s_write_f *****************
  7241 ;; Defined at:
  7242 ;;		line 206 in file "display.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  pDisp           2   48[COMRAM] PTR unsigned char 
  7245 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  7246 ;;  NUM_OF_DISP     1   50[COMRAM] char 
  7247 ;;  num             3   51[COMRAM] char 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  buff           10    0[BANK0 ] unsigned char [10]
  7250 ;;  K10MULT         3   13[BANK0 ] unsigned char [10]
  7251 ;;  I               2   10[BANK0 ] int 
  7252 ;;  i               1   16[BANK0 ] char 
  7253 ;;  pi              1   12[BANK0 ] char 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      void 
  7256 ;; Registers used:
  7257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 3F/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7263 ;;      Params:         6       0       0       0       0       0       0       0       0
  7264 ;;      Locals:         0      17       0       0       0       0       0       0       0
  7265 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7266 ;;      Totals:        11      17       0       0       0       0       0       0       0
  7267 ;;Total ram usage:       28 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    8
  7270 ;; This function calls:
  7271 ;;		___ftadd
  7272 ;;		___ftge
  7273 ;;		___ftmul
  7274 ;;		___fttol
  7275 ;;		_disp7s_off
  7276 ;;		_itoa
  7277 ;; This function is called by:
  7278 ;;		_disp7s_qtyDisp_writeFloat
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text54
  7283  0010E2                     __ptext54:
  7284                           	opt callstack 0
  7285  0010E2                     _disp7s_write_f:
  7286                           	opt callstack 19
  7287                           
  7288                           ;display.c: 208: double K10MULT;;display.c: 209: int16_t I;;display.c: 210: char buff[10
      +                          ];;display.c: 211: int8_t i;;display.c: 212: int8_t pi;;display.c: 214: K10MULT = 1;
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;incstack = 0
  7292  0010E2  0E00               	movlw	0
  7293  0010E4  0100               	movlb	0	; () banked
  7294  0010E6  6FFB               	movwf	disp7s_write_f@K10MULT& (0+255),b
  7295  0010E8  0E80               	movlw	128
  7296  0010EA  6FFC               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  7297  0010EC  0E3F               	movlw	63
  7298  0010EE  6FFD               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;display.c: 215: i = NUM_OF_DISP;
  7302  0010F0  C033  F0FE         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_write_f@i
  7303                           
  7304                           ;display.c: 216: while (i--)
  7305  0010F4  D014               	goto	l5137
  7306  0010F6                     l5135:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;display.c: 217: {K10MULT *=10;}
  7310  0010F6  C0FB  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  7311  0010FA  C0FC  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  7312  0010FE  C0FD  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  7313  001102  0E00               	movlw	0
  7314  001104  6E16               	movwf	___ftmul@f2,c
  7315  001106  0E20               	movlw	32
  7316  001108  6E17               	movwf	___ftmul@f2+1,c
  7317  00110A  0E41               	movlw	65
  7318  00110C  6E18               	movwf	___ftmul@f2+2,c
  7319  00110E  EC4E  F00C         	call	___ftmul	;wreg free
  7320  001112  C013  F0FB         	movff	?___ftmul,disp7s_write_f@K10MULT
  7321  001116  C014  F0FC         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  7322  00111A  C015  F0FD         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  7323  00111E                     l5137:
  7324  00111E  0100               	movlb	0	; () banked
  7325  001120  07FE               	decf	disp7s_write_f@i& (0+255),f,b
  7326  001122  29FE               	incf	disp7s_write_f@i& (0+255),w,b
  7327  001124  A4D8               	btfss	status,2,c
  7328  001126  D7E7               	goto	l5135
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;display.c: 218: if (num >= K10MULT)
  7332  001128  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  7333  00112C  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  7334  001130  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  7335  001134  C0FB  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  7336  001138  C0FC  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  7337  00113C  C0FD  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  7338  001140  ECDD  F010         	call	___ftge	;wreg free
  7339  001144  A0D8               	btfss	status,0,c
  7340  001146  D014               	goto	l5143
  7341                           
  7342                           ;display.c: 219: {num= K10MULT-1;}
  7343  001148  C0FB  F013         	movff	disp7s_write_f@K10MULT,___ftadd@f1
  7344  00114C  C0FC  F014         	movff	disp7s_write_f@K10MULT+1,___ftadd@f1+1
  7345  001150  C0FD  F015         	movff	disp7s_write_f@K10MULT+2,___ftadd@f1+2
  7346  001154  0E00               	movlw	0
  7347  001156  6E16               	movwf	___ftadd@f2,c
  7348  001158  0E80               	movlw	128
  7349  00115A  6E17               	movwf	___ftadd@f2+1,c
  7350  00115C  0EBF               	movlw	191
  7351  00115E  6E18               	movwf	___ftadd@f2+2,c
  7352  001160  EC7F  F009         	call	___ftadd	;wreg free
  7353  001164  C013  F034         	movff	?___ftadd,disp7s_write_f@num
  7354  001168  C014  F035         	movff	?___ftadd+1,disp7s_write_f@num+1
  7355  00116C  C015  F036         	movff	?___ftadd+2,disp7s_write_f@num+2
  7356  001170                     l5143:
  7357                           
  7358                           ;display.c: 221: disp7s_off(pDisp, NUM_OF_DISP);
  7359  001170  C031  F00B         	movff	disp7s_write_f@pDisp,disp7s_off@pDisp
  7360  001174  C032  F00C         	movff	disp7s_write_f@pDisp+1,disp7s_off@pDisp+1
  7361  001178  C033  F00D         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_off@NUM_OF_DISP
  7362  00117C  ECCA  F013         	call	_disp7s_off	;wreg free
  7363                           
  7364                           ;display.c: 225: K10MULT = 1;
  7365  001180  0E00               	movlw	0
  7366  001182  0100               	movlb	0	; () banked
  7367  001184  6FFB               	movwf	disp7s_write_f@K10MULT& (0+255),b
  7368  001186  0E80               	movlw	128
  7369  001188  6FFC               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  7370  00118A  0E3F               	movlw	63
  7371  00118C  6FFD               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;display.c: 226: for (i=0; i<=NUM_OF_DISP; i++)
  7375  00118E  0E00               	movlw	0
  7376  001190  6FFE               	movwf	disp7s_write_f@i& (0+255),b
  7377  001192  D074               	goto	l5173
  7378  001194                     l5149:
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;display.c: 227: {;display.c: 228: if (num< K10MULT)
  7382  001194  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  7383  001198  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  7384  00119C  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  7385  0011A0  C0FB  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  7386  0011A4  C0FC  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  7387  0011A8  C0FD  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  7388  0011AC  ECDD  F010         	call	___ftge	;wreg free
  7389  0011B0  B0D8               	btfsc	status,0,c
  7390  0011B2  D04E               	goto	l5169
  7391                           
  7392                           ;display.c: 229: {;display.c: 230: if (i<NUM_OF_DISP)
  7393  0011B4  0100               	movlb	0	; () banked
  7394  0011B6  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7395  0011B8  0A80               	xorlw	128
  7396  0011BA  6E37               	movwf	??_disp7s_write_f& (0+255),c
  7397  0011BC  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  7398  0011BE  0A80               	xorlw	128
  7399  0011C0  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  7400  0011C2  B0D8               	btfsc	status,0,c
  7401  0011C4  D036               	goto	l5165
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;display.c: 231: {;display.c: 232: I = (int16_t)(num*10);
  7405  0011C6  0E00               	movlw	0
  7406  0011C8  6E16               	movwf	___ftmul@f2,c
  7407  0011CA  0E20               	movlw	32
  7408  0011CC  6E17               	movwf	___ftmul@f2+1,c
  7409  0011CE  0E41               	movlw	65
  7410  0011D0  6E18               	movwf	___ftmul@f2+2,c
  7411  0011D2  C034  F013         	movff	disp7s_write_f@num,___ftmul@f1
  7412  0011D6  C035  F014         	movff	disp7s_write_f@num+1,___ftmul@f1+1
  7413  0011DA  C036  F015         	movff	disp7s_write_f@num+2,___ftmul@f1+2
  7414  0011DE  EC4E  F00C         	call	___ftmul	;wreg free
  7415  0011E2  C013  F022         	movff	?___ftmul,___fttol@f1
  7416  0011E6  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  7417  0011EA  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  7418  0011EE  ECC8  F00C         	call	___fttol	;wreg free
  7419  0011F2  C022  F0F8         	movff	?___fttol,disp7s_write_f@I
  7420  0011F6  C023  F0F9         	movff	?___fttol+1,disp7s_write_f@I+1
  7421                           
  7422                           ;display.c: 235: if (i==0)
  7423  0011FA  0100               	movlb	0	; () banked
  7424  0011FC  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7425  0011FE  A4D8               	btfss	status,2,c
  7426  001200  D00D               	goto	l5159
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;display.c: 236: {pDisp[1]= DISP7S_NUMS[0];}
  7430  001202  0E01               	movlw	low _DISP7S_NUMS
  7431  001204  6EF6               	movwf	tblptrl,c
  7432  001206                     	if	1	;There is more than 1 active tblptr byte
  7433  001206  0E08               	movlw	high _DISP7S_NUMS
  7434  001208  6EF7               	movwf	tblptrh,c
  7435  00120A                     	endif
  7436  00120A                     	if	0	;There are less than 3 active tblptr bytes
  7437  00120A                     	endif
  7438  00120A  EE20 F001          	lfsr	2,1
  7439  00120E  5031               	movf	disp7s_write_f@pDisp,w,c
  7440  001210  26D9               	addwf	fsr2l,f,c
  7441  001212  5032               	movf	disp7s_write_f@pDisp+1,w,c
  7442  001214  22DA               	addwfc	fsr2h,f,c
  7443  001216  0008               	tblrd		*
  7444  001218  CFF5 FFDF          	movff	tablat,indf2
  7445  00121C                     l5159:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;display.c: 238: pDisp[1] |= 0x80;
  7449  00121C  EE20 F001          	lfsr	2,1
  7450  001220  5031               	movf	disp7s_write_f@pDisp,w,c
  7451  001222  26D9               	addwf	fsr2l,f,c
  7452  001224  5032               	movf	disp7s_write_f@pDisp+1,w,c
  7453  001226  22DA               	addwfc	fsr2h,f,c
  7454  001228  0E00               	movlw	0
  7455  00122A  8EDB               	bsf	plusw2,7,c
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;display.c: 239: pi = i;
  7459  00122C  C0FE  F0FA         	movff	disp7s_write_f@i,disp7s_write_f@pi
  7460                           
  7461                           ;display.c: 240: break;
  7462  001230  D02D               	goto	u6060
  7463  001232                     l5165:
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;display.c: 242: else;display.c: 243: {;display.c: 244: I = (int16_t)(num);
  7467  001232  C034  F022         	movff	disp7s_write_f@num,___fttol@f1
  7468  001236  C035  F023         	movff	disp7s_write_f@num+1,___fttol@f1+1
  7469  00123A  C036  F024         	movff	disp7s_write_f@num+2,___fttol@f1+2
  7470  00123E  ECC8  F00C         	call	___fttol	;wreg free
  7471  001242  C022  F0F8         	movff	?___fttol,disp7s_write_f@I
  7472  001246  C023  F0F9         	movff	?___fttol+1,disp7s_write_f@I+1
  7473                           
  7474                           ;display.c: 245: pi = i-1;
  7475  00124A  0100               	movlb	0	; () banked
  7476  00124C  05FE               	decf	disp7s_write_f@i& (0+255),w,b
  7477  00124E  6FFA               	movwf	disp7s_write_f@pi& (0+255),b
  7478  001250                     l5169:
  7479                           
  7480                           ;display.c: 246: };display.c: 247: };display.c: 248: K10MULT *= 10;
  7481  001250  C0FB  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  7482  001254  C0FC  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  7483  001258  C0FD  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  7484  00125C  0E00               	movlw	0
  7485  00125E  6E16               	movwf	___ftmul@f2,c
  7486  001260  0E20               	movlw	32
  7487  001262  6E17               	movwf	___ftmul@f2+1,c
  7488  001264  0E41               	movlw	65
  7489  001266  6E18               	movwf	___ftmul@f2+2,c
  7490  001268  EC4E  F00C         	call	___ftmul	;wreg free
  7491  00126C  C013  F0FB         	movff	?___ftmul,disp7s_write_f@K10MULT
  7492  001270  C014  F0FC         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  7493  001274  C015  F0FD         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  7494  001278  0100               	movlb	0	; () banked
  7495  00127A  2BFE               	incf	disp7s_write_f@i& (0+255),f,b
  7496  00127C                     l5173:
  7497                           
  7498                           ; BSR set to: 0
  7499  00127C  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  7500  00127E  0A80               	xorlw	128
  7501  001280  6E37               	movwf	??_disp7s_write_f& (0+255),c
  7502  001282  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7503  001284  0A80               	xorlw	128
  7504  001286  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  7505  001288  B0D8               	btfsc	status,0,c
  7506  00128A  D784               	goto	l5149
  7507  00128C                     u6060:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;display.c: 249: };display.c: 251: itoa(buff, I, 10);
  7511  00128C  0EEE               	movlw	low disp7s_write_f@buff
  7512  00128E  6E1A               	movwf	itoa@buf,c
  7513  001290  C0F8  F01B         	movff	disp7s_write_f@I,itoa@val
  7514  001294  C0F9  F01C         	movff	disp7s_write_f@I+1,itoa@val+1
  7515  001298  0E00               	movlw	0
  7516  00129A  6E1E               	movwf	itoa@base+1,c
  7517  00129C  0E0A               	movlw	10
  7518  00129E  6E1D               	movwf	itoa@base,c
  7519  0012A0  EC05  F014         	call	_itoa	;wreg free
  7520                           
  7521                           ;display.c: 253: i=0;
  7522  0012A4  0E00               	movlw	0
  7523  0012A6  0100               	movlb	0	; () banked
  7524  0012A8  6FFE               	movwf	disp7s_write_f@i& (0+255),b
  7525                           
  7526                           ;display.c: 254: while (buff[i] != '\0')
  7527  0012AA  D021               	goto	l5185
  7528  0012AC                     l5179:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;display.c: 255: {;display.c: 256: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  7532  0012AC  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7533  0012AE  0FEE               	addlw	low disp7s_write_f@buff
  7534  0012B0  6ED9               	movwf	fsr2l,c
  7535  0012B2  6ADA               	clrf	fsr2h,c
  7536  0012B4  50DF               	movf	indf2,w,c
  7537  0012B6  6E37               	movwf	??_disp7s_write_f& (0+255),c
  7538  0012B8  0ED0               	movlw	208
  7539  0012BA  2637               	addwf	??_disp7s_write_f,f,c
  7540  0012BC  5037               	movf	??_disp7s_write_f,w,c
  7541  0012BE  0F01               	addlw	low _DISP7S_NUMS
  7542  0012C0  6E38               	movwf	(??_disp7s_write_f+1)& (0+255),c
  7543  0012C2  C038  FFF6         	movff	??_disp7s_write_f+1,tblptrl
  7544  0012C6                     	if	1	;There is more than 1 active tblptr byte
  7545  0012C6  0E08               	movlw	high __smallconst
  7546  0012C8  6EF7               	movwf	tblptrh,c
  7547  0012CA                     	endif
  7548  0012CA                     	if	0	;tblptru may be non-zero
  7549  0012CA                     	endif
  7550  0012CA                     	if	0	;tblptru may be non-zero
  7551  0012CA                     	endif
  7552  0012CA  0008               	tblrd		*
  7553  0012CC  CFF5 F039          	movff	tablat,??_disp7s_write_f+2
  7554  0012D0  C0FA  F03A         	movff	disp7s_write_f@pi,??_disp7s_write_f+3
  7555  0012D4  6A3B               	clrf	(??_disp7s_write_f+4)& (0+255),c
  7556  0012D6  BE3A               	btfsc	(??_disp7s_write_f+3)& (0+255),7,c
  7557  0012D8  063B               	decf	(??_disp7s_write_f+4)& (0+255),f,c
  7558  0012DA  503A               	movf	??_disp7s_write_f+3,w,c
  7559  0012DC  2431               	addwf	disp7s_write_f@pDisp,w,c
  7560  0012DE  6ED9               	movwf	fsr2l,c
  7561  0012E0  503B               	movf	??_disp7s_write_f+4,w,c
  7562  0012E2  2032               	addwfc	disp7s_write_f@pDisp+1,w,c
  7563  0012E4  6EDA               	movwf	fsr2h,c
  7564  0012E6  5039               	movf	??_disp7s_write_f+2,w,c
  7565  0012E8  12DF               	iorwf	indf2,f,c
  7566                           
  7567                           ; BSR set to: 0
  7568  0012EA  07FA               	decf	disp7s_write_f@pi& (0+255),f,b
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;display.c: 257: i++;
  7572  0012EC  2BFE               	incf	disp7s_write_f@i& (0+255),f,b
  7573  0012EE                     l5185:
  7574                           
  7575                           ; BSR set to: 0
  7576  0012EE  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7577  0012F0  0FEE               	addlw	low disp7s_write_f@buff
  7578  0012F2  6ED9               	movwf	fsr2l,c
  7579  0012F4  6ADA               	clrf	fsr2h,c
  7580  0012F6  50DF               	movf	indf2,w,c
  7581  0012F8  B4D8               	btfsc	status,2,c
  7582  0012FA  0012               	return	
  7583  0012FC  D7D7               	goto	l5179
  7584  0012FE                     __end_of_disp7s_write_f:
  7585                           	opt callstack 0
  7586                           
  7587 ;; *************** function _itoa *****************
  7588 ;; Defined at:
  7589 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  buf             1   25[COMRAM] PTR unsigned char 
  7592 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  7593 ;;  val             2   26[COMRAM] int 
  7594 ;;  base            2   28[COMRAM] int 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  cp              1    0        PTR unsigned char 
  7597 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      PTR unsigned char 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/1
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7607 ;;      Params:         5       0       0       0       0       0       0       0       0
  7608 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7610 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7611 ;;Total ram usage:        6 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    7
  7614 ;; This function calls:
  7615 ;;		_utoa
  7616 ;; This function is called by:
  7617 ;;		_disp7s_write_f
  7618 ;;		_disp7s_write_i
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text55
  7623  00280A                     __ptext55:
  7624                           	opt callstack 0
  7625  00280A                     _itoa:
  7626                           	opt callstack 19
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;incstack = 0
  7630  00280A  AE1C               	btfss	itoa@val+1,7,c
  7631  00280C  D00A               	goto	l4945
  7632  00280E  501A               	movf	itoa@buf,w,c
  7633  002810  6ED9               	movwf	fsr2l,c
  7634  002812  6ADA               	clrf	fsr2h,c
  7635  002814  0E2D               	movlw	45
  7636  002816  6EDF               	movwf	indf2,c
  7637  002818  2A1A               	incf	itoa@buf,f,c
  7638  00281A  6C1B               	negf	itoa@val,c
  7639  00281C  1E1C               	comf	itoa@val+1,f,c
  7640  00281E  B0D8               	btfsc	status,0,c
  7641  002820  2A1C               	incf	itoa@val+1,f,c
  7642  002822                     l4945:
  7643  002822  C01A  F012         	movff	itoa@buf,utoa@buf
  7644  002826  C01B  F013         	movff	itoa@val,utoa@val
  7645  00282A  C01C  F014         	movff	itoa@val+1,utoa@val+1
  7646  00282E  C01D  F015         	movff	itoa@base,utoa@base
  7647  002832  C01E  F016         	movff	itoa@base+1,utoa@base+1
  7648  002836  ECD8  F00E         	call	_utoa	;wreg free
  7649  00283A  0012               	return		;funcret
  7650  00283C                     __end_of_itoa:
  7651                           	opt callstack 0
  7652                           
  7653 ;; *************** function _utoa *****************
  7654 ;; Defined at:
  7655 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;  buf             1   17[COMRAM] PTR unsigned char 
  7658 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  7659 ;;  val             2   18[COMRAM] unsigned int 
  7660 ;;  base            2   20[COMRAM] int 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  v               2   22[COMRAM] unsigned int 
  7663 ;;  c               1   24[COMRAM] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      PTR unsigned char 
  7666 ;; Registers used:
  7667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/1
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7673 ;;      Params:         5       0       0       0       0       0       0       0       0
  7674 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7676 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7677 ;;Total ram usage:        8 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:    6
  7680 ;; This function calls:
  7681 ;;		___lwdiv
  7682 ;;		___lwmod
  7683 ;; This function is called by:
  7684 ;;		_itoa
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text56
  7689  001DB0                     __ptext56:
  7690                           	opt callstack 0
  7691  001DB0                     _utoa:
  7692                           	opt callstack 19
  7693                           
  7694                           ;incstack = 0
  7695  001DB0  C013  F017         	movff	utoa@val,utoa@v
  7696  001DB4  C014  F018         	movff	utoa@val+1,utoa@v+1
  7697  001DB8                     l4901:
  7698  001DB8  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  7699  001DBC  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  7700  001DC0  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  7701  001DC4  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  7702  001DC8  EC67  F012         	call	___lwdiv	;wreg free
  7703  001DCC  C00B  F017         	movff	?___lwdiv,utoa@v
  7704  001DD0  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  7705  001DD4  2A12               	incf	utoa@buf,f,c
  7706  001DD6  5017               	movf	utoa@v,w,c
  7707  001DD8  1018               	iorwf	utoa@v+1,w,c
  7708  001DDA  A4D8               	btfss	status,2,c
  7709  001DDC  D7ED               	goto	l4901
  7710  001DDE  5012               	movf	utoa@buf,w,c
  7711  001DE0  6ED9               	movwf	fsr2l,c
  7712  001DE2  6ADA               	clrf	fsr2h,c
  7713  001DE4  0E00               	movlw	0
  7714  001DE6  6EDF               	movwf	indf2,c
  7715  001DE8  0612               	decf	utoa@buf,f,c
  7716  001DEA                     l4911:
  7717  001DEA  C013  F00B         	movff	utoa@val,___lwmod@dividend
  7718  001DEE  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  7719  001DF2  C015  F00D         	movff	utoa@base,___lwmod@divisor
  7720  001DF6  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  7721  001DFA  EC48  F013         	call	___lwmod	;wreg free
  7722  001DFE  500B               	movf	?___lwmod,w,c
  7723  001E00  6E19               	movwf	utoa@c,c
  7724  001E02  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  7725  001E06  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  7726  001E0A  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  7727  001E0E  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  7728  001E12  EC67  F012         	call	___lwdiv	;wreg free
  7729  001E16  C00B  F013         	movff	?___lwdiv,utoa@val
  7730  001E1A  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  7731  001E1E  0E09               	movlw	9
  7732  001E20  6419               	cpfsgt	utoa@c,c
  7733  001E22  D002               	goto	l1643
  7734  001E24  0E07               	movlw	7
  7735  001E26  2619               	addwf	utoa@c,f,c
  7736  001E28                     l1643:
  7737  001E28  0E30               	movlw	48
  7738  001E2A  2619               	addwf	utoa@c,f,c
  7739  001E2C  5012               	movf	utoa@buf,w,c
  7740  001E2E  6ED9               	movwf	fsr2l,c
  7741  001E30  6ADA               	clrf	fsr2h,c
  7742  001E32  C019  FFDF         	movff	utoa@c,indf2
  7743  001E36  0612               	decf	utoa@buf,f,c
  7744  001E38  5013               	movf	utoa@val,w,c
  7745  001E3A  1014               	iorwf	utoa@val+1,w,c
  7746  001E3C  A4D8               	btfss	status,2,c
  7747  001E3E  D7D5               	goto	l4911
  7748                           
  7749                           ;	Return value of _utoa is never used
  7750  001E40  2A12               	incf	utoa@buf,f,c
  7751  001E42  0012               	return		;funcret
  7752  001E44                     __end_of_utoa:
  7753                           	opt callstack 0
  7754                           
  7755 ;; *************** function ___lwmod *****************
  7756 ;; Defined at:
  7757 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  dividend        2   10[COMRAM] unsigned int 
  7760 ;;  divisor         2   12[COMRAM] unsigned int 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  counter         1   14[COMRAM] unsigned char 
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  2   10[COMRAM] unsigned int 
  7765 ;; Registers used:
  7766 ;;		wreg, status,2, status,0
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/1
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7772 ;;      Params:         4       0       0       0       0       0       0       0       0
  7773 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7775 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7776 ;;Total ram usage:        5 bytes
  7777 ;; Hardware stack levels used:    1
  7778 ;; Hardware stack levels required when called:    5
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		_utoa
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text57
  7787  002690                     __ptext57:
  7788                           	opt callstack 0
  7789  002690                     ___lwmod:
  7790                           	opt callstack 19
  7791                           
  7792                           ;incstack = 0
  7793  002690  500D               	movf	___lwmod@divisor,w,c
  7794  002692  100E               	iorwf	___lwmod@divisor+1,w,c
  7795  002694  B4D8               	btfsc	status,2,c
  7796  002696  D018               	goto	l1461
  7797  002698  0E01               	movlw	1
  7798  00269A  6E0F               	movwf	___lwmod@counter,c
  7799  00269C  D004               	goto	l4853
  7800  00269E                     l4851:
  7801  00269E  90D8               	bcf	status,0,c
  7802  0026A0  360D               	rlcf	___lwmod@divisor,f,c
  7803  0026A2  360E               	rlcf	___lwmod@divisor+1,f,c
  7804  0026A4  2A0F               	incf	___lwmod@counter,f,c
  7805  0026A6                     l4853:
  7806  0026A6  AE0E               	btfss	___lwmod@divisor+1,7,c
  7807  0026A8  D7FA               	goto	l4851
  7808  0026AA                     u5480:
  7809  0026AA  500D               	movf	___lwmod@divisor,w,c
  7810  0026AC  5C0B               	subwf	___lwmod@dividend,w,c
  7811  0026AE  500E               	movf	___lwmod@divisor+1,w,c
  7812  0026B0  580C               	subwfb	___lwmod@dividend+1,w,c
  7813  0026B2  A0D8               	btfss	status,0,c
  7814  0026B4  D004               	goto	l4859
  7815  0026B6  500D               	movf	___lwmod@divisor,w,c
  7816  0026B8  5E0B               	subwf	___lwmod@dividend,f,c
  7817  0026BA  500E               	movf	___lwmod@divisor+1,w,c
  7818  0026BC  5A0C               	subwfb	___lwmod@dividend+1,f,c
  7819  0026BE                     l4859:
  7820  0026BE  90D8               	bcf	status,0,c
  7821  0026C0  320E               	rrcf	___lwmod@divisor+1,f,c
  7822  0026C2  320D               	rrcf	___lwmod@divisor,f,c
  7823  0026C4  2E0F               	decfsz	___lwmod@counter,f,c
  7824  0026C6  D7F1               	goto	u5480
  7825  0026C8                     l1461:
  7826  0026C8  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  7827  0026CC  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  7828  0026D0  0012               	return		;funcret
  7829  0026D2                     __end_of___lwmod:
  7830                           	opt callstack 0
  7831                           
  7832 ;; *************** function ___lwdiv *****************
  7833 ;; Defined at:
  7834 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  dividend        2   10[COMRAM] unsigned int 
  7837 ;;  divisor         2   12[COMRAM] unsigned int 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  quotient        2   15[COMRAM] unsigned int 
  7840 ;;  counter         1   14[COMRAM] unsigned char 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  2   10[COMRAM] unsigned int 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/1
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7850 ;;      Params:         4       0       0       0       0       0       0       0       0
  7851 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7853 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7854 ;;Total ram usage:        7 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    5
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_utoa
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text58
  7865  0024CE                     __ptext58:
  7866                           	opt callstack 0
  7867  0024CE                     ___lwdiv:
  7868                           	opt callstack 19
  7869                           
  7870                           ;incstack = 0
  7871  0024CE  0E00               	movlw	0
  7872  0024D0  6E11               	movwf	___lwdiv@quotient+1,c
  7873  0024D2  0E00               	movlw	0
  7874  0024D4  6E10               	movwf	___lwdiv@quotient,c
  7875  0024D6  500D               	movf	___lwdiv@divisor,w,c
  7876  0024D8  100E               	iorwf	___lwdiv@divisor+1,w,c
  7877  0024DA  B4D8               	btfsc	status,2,c
  7878  0024DC  D01C               	goto	l1451
  7879  0024DE  0E01               	movlw	1
  7880  0024E0  6E0F               	movwf	___lwdiv@counter,c
  7881  0024E2  D004               	goto	l4833
  7882  0024E4                     l4831:
  7883  0024E4  90D8               	bcf	status,0,c
  7884  0024E6  360D               	rlcf	___lwdiv@divisor,f,c
  7885  0024E8  360E               	rlcf	___lwdiv@divisor+1,f,c
  7886  0024EA  2A0F               	incf	___lwdiv@counter,f,c
  7887  0024EC                     l4833:
  7888  0024EC  AE0E               	btfss	___lwdiv@divisor+1,7,c
  7889  0024EE  D7FA               	goto	l4831
  7890  0024F0                     u5450:
  7891  0024F0  90D8               	bcf	status,0,c
  7892  0024F2  3610               	rlcf	___lwdiv@quotient,f,c
  7893  0024F4  3611               	rlcf	___lwdiv@quotient+1,f,c
  7894  0024F6  500D               	movf	___lwdiv@divisor,w,c
  7895  0024F8  5C0B               	subwf	___lwdiv@dividend,w,c
  7896  0024FA  500E               	movf	___lwdiv@divisor+1,w,c
  7897  0024FC  580C               	subwfb	___lwdiv@dividend+1,w,c
  7898  0024FE  A0D8               	btfss	status,0,c
  7899  002500  D005               	goto	l4843
  7900  002502  500D               	movf	___lwdiv@divisor,w,c
  7901  002504  5E0B               	subwf	___lwdiv@dividend,f,c
  7902  002506  500E               	movf	___lwdiv@divisor+1,w,c
  7903  002508  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  7904  00250A  8010               	bsf	___lwdiv@quotient,0,c
  7905  00250C                     l4843:
  7906  00250C  90D8               	bcf	status,0,c
  7907  00250E  320E               	rrcf	___lwdiv@divisor+1,f,c
  7908  002510  320D               	rrcf	___lwdiv@divisor,f,c
  7909  002512  2E0F               	decfsz	___lwdiv@counter,f,c
  7910  002514  D7ED               	goto	u5450
  7911  002516                     l1451:
  7912  002516  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  7913  00251A  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7914  00251E  0012               	return		;funcret
  7915  002520                     __end_of___lwdiv:
  7916                           	opt callstack 0
  7917                           
  7918 ;; *************** function ___fttol *****************
  7919 ;; Defined at:
  7920 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  f1              3   33[COMRAM] float 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  lval            4   43[COMRAM] unsigned long 
  7925 ;;  exp1            1   47[COMRAM] unsigned char 
  7926 ;;  sign1           1   42[COMRAM] unsigned char 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  4   33[COMRAM] long 
  7929 ;; Registers used:
  7930 ;;		wreg, status,2, status,0
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7936 ;;      Params:         4       0       0       0       0       0       0       0       0
  7937 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7938 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7939 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7940 ;;Total ram usage:       15 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    5
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_disp7s_write_f
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text59
  7951  001990                     __ptext59:
  7952                           	opt callstack 0
  7953  001990                     ___fttol:
  7954                           	opt callstack 21
  7955                           
  7956                           ;incstack = 0
  7957  001990  C024  F026         	movff	___fttol@f1+2,??___fttol
  7958  001994  6A27               	clrf	(??___fttol+1)& (0+255),c
  7959  001996  6A28               	clrf	(??___fttol+2)& (0+255),c
  7960  001998  3423               	rlcf	___fttol@f1+1,w,c
  7961  00199A  3626               	rlcf	??___fttol& (0+255),f,c
  7962  00199C  E301               	bnc	u5931
  7963  00199E  8027               	bsf	(??___fttol+1)& (0+255),0,c
  7964  0019A0                     u5931:
  7965  0019A0  5026               	movf	??___fttol,w,c
  7966  0019A2  6E30               	movwf	___fttol@exp1,c
  7967  0019A4  5030               	movf	___fttol@exp1,w,c
  7968  0019A6  A4D8               	btfss	status,2,c
  7969  0019A8  D009               	goto	l5091
  7970  0019AA                     u5940:
  7971  0019AA  0E00               	movlw	0
  7972  0019AC  6E22               	movwf	?___fttol,c
  7973  0019AE  0E00               	movlw	0
  7974  0019B0  6E23               	movwf	?___fttol+1,c
  7975  0019B2  0E00               	movlw	0
  7976  0019B4  6E24               	movwf	?___fttol+2,c
  7977  0019B6  0E00               	movlw	0
  7978  0019B8  6E25               	movwf	?___fttol+3,c
  7979  0019BA  0012               	return	
  7980  0019BC                     l5091:
  7981  0019BC  0E17               	movlw	23
  7982  0019BE  6E26               	movwf	??___fttol& (0+255),c
  7983  0019C0  C022  F027         	movff	___fttol@f1,??___fttol+1
  7984  0019C4  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  7985  0019C8  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  7986  0019CC  2826               	incf	??___fttol,w,c
  7987  0019CE  6E2A               	movwf	(??___fttol+4)& (0+255),c
  7988  0019D0  D004               	goto	u5950
  7989  0019D2                     u5955:
  7990  0019D2  90D8               	bcf	status,0,c
  7991  0019D4  3229               	rrcf	??___fttol+3,f,c
  7992  0019D6  3228               	rrcf	??___fttol+2,f,c
  7993  0019D8  3227               	rrcf	??___fttol+1,f,c
  7994  0019DA                     u5950:
  7995  0019DA  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  7996  0019DC  D7FA               	goto	u5955
  7997  0019DE  5027               	movf	??___fttol+1,w,c
  7998  0019E0  6E2B               	movwf	___fttol@sign1,c
  7999  0019E2  8E23               	bsf	___fttol@f1+1,7,c
  8000  0019E4  0EFF               	movlw	255
  8001  0019E6  1622               	andwf	___fttol@f1,f,c
  8002  0019E8  0EFF               	movlw	255
  8003  0019EA  1623               	andwf	___fttol@f1+1,f,c
  8004  0019EC  0E00               	movlw	0
  8005  0019EE  1624               	andwf	___fttol@f1+2,f,c
  8006  0019F0  5022               	movf	___fttol@f1,w,c
  8007  0019F2  6E2C               	movwf	___fttol@lval,c
  8008  0019F4  5023               	movf	___fttol@f1+1,w,c
  8009  0019F6  6E2D               	movwf	___fttol@lval+1,c
  8010  0019F8  5024               	movf	___fttol@f1+2,w,c
  8011  0019FA  6E2E               	movwf	___fttol@lval+2,c
  8012  0019FC  6A2F               	clrf	___fttol@lval+3,c
  8013  0019FE  0E8E               	movlw	142
  8014  001A00  5E30               	subwf	___fttol@exp1,f,c
  8015  001A02  AE30               	btfss	___fttol@exp1,7,c
  8016  001A04  D00D               	goto	l5113
  8017  001A06  5030               	movf	___fttol@exp1,w,c
  8018  001A08  0A80               	xorlw	128
  8019  001A0A  0F8F               	addlw	143
  8020  001A0C  A0D8               	btfss	status,0,c
  8021  001A0E  D7CD               	goto	u5940
  8022  001A10                     l5109:
  8023  001A10  90D8               	bcf	status,0,c
  8024  001A12  322F               	rrcf	___fttol@lval+3,f,c
  8025  001A14  322E               	rrcf	___fttol@lval+2,f,c
  8026  001A16  322D               	rrcf	___fttol@lval+1,f,c
  8027  001A18  322C               	rrcf	___fttol@lval,f,c
  8028  001A1A  3E30               	incfsz	___fttol@exp1,f,c
  8029  001A1C  D7F9               	goto	l5109
  8030  001A1E  D00D               	goto	u5990
  8031  001A20                     l5113:
  8032  001A20  0E17               	movlw	23
  8033  001A22  6430               	cpfsgt	___fttol@exp1,c
  8034  001A24  D007               	goto	l5121
  8035  001A26  D7C1               	goto	u5940
  8036  001A28                     l5119:
  8037  001A28  90D8               	bcf	status,0,c
  8038  001A2A  362C               	rlcf	___fttol@lval,f,c
  8039  001A2C  362D               	rlcf	___fttol@lval+1,f,c
  8040  001A2E  362E               	rlcf	___fttol@lval+2,f,c
  8041  001A30  362F               	rlcf	___fttol@lval+3,f,c
  8042  001A32  0630               	decf	___fttol@exp1,f,c
  8043  001A34                     l5121:
  8044  001A34  5030               	movf	___fttol@exp1,w,c
  8045  001A36  A4D8               	btfss	status,2,c
  8046  001A38  D7F7               	goto	l5119
  8047  001A3A                     u5990:
  8048  001A3A  502B               	movf	___fttol@sign1,w,c
  8049  001A3C  B4D8               	btfsc	status,2,c
  8050  001A3E  D008               	goto	l5127
  8051  001A40  1E2F               	comf	___fttol@lval+3,f,c
  8052  001A42  1E2E               	comf	___fttol@lval+2,f,c
  8053  001A44  1E2D               	comf	___fttol@lval+1,f,c
  8054  001A46  6C2C               	negf	___fttol@lval,c
  8055  001A48  0E00               	movlw	0
  8056  001A4A  222D               	addwfc	___fttol@lval+1,f,c
  8057  001A4C  222E               	addwfc	___fttol@lval+2,f,c
  8058  001A4E  222F               	addwfc	___fttol@lval+3,f,c
  8059  001A50                     l5127:
  8060  001A50  C02C  F022         	movff	___fttol@lval,?___fttol
  8061  001A54  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  8062  001A58  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  8063  001A5C  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  8064  001A60  0012               	return		;funcret
  8065  001A62                     __end_of___fttol:
  8066                           	opt callstack 0
  8067                           
  8068 ;; *************** function ___ftmul *****************
  8069 ;; Defined at:
  8070 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  f1              3   18[COMRAM] float 
  8073 ;;  f2              3   21[COMRAM] float 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  8076 ;;  sign            1   32[COMRAM] unsigned char 
  8077 ;;  cntr            1   31[COMRAM] unsigned char 
  8078 ;;  exp             1   27[COMRAM] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  3   18[COMRAM] float 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8088 ;;      Params:         6       0       0       0       0       0       0       0       0
  8089 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8090 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8091 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8092 ;;Total ram usage:       15 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    6
  8095 ;; This function calls:
  8096 ;;		___ftpack
  8097 ;; This function is called by:
  8098 ;;		_disp7s_write_f
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           	psect	text60
  8103  00189C                     __ptext60:
  8104                           	opt callstack 0
  8105  00189C                     ___ftmul:
  8106                           	opt callstack 20
  8107                           
  8108                           ;incstack = 0
  8109  00189C  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  8110  0018A0  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  8111  0018A2  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  8112  0018A4  3414               	rlcf	___ftmul@f1+1,w,c
  8113  0018A6  3619               	rlcf	??___ftmul& (0+255),f,c
  8114  0018A8  E301               	bnc	u5841
  8115  0018AA  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  8116  0018AC                     u5841:
  8117  0018AC  5019               	movf	??___ftmul,w,c
  8118  0018AE  6E1C               	movwf	___ftmul@exp,c
  8119  0018B0  501C               	movf	___ftmul@exp,w,c
  8120  0018B2  A4D8               	btfss	status,2,c
  8121  0018B4  D007               	goto	l5025
  8122  0018B6  0E00               	movlw	0
  8123  0018B8  6E13               	movwf	?___ftmul,c
  8124  0018BA  0E00               	movlw	0
  8125  0018BC  6E14               	movwf	?___ftmul+1,c
  8126  0018BE  0E00               	movlw	0
  8127  0018C0  6E15               	movwf	?___ftmul+2,c
  8128  0018C2  0012               	return	
  8129  0018C4                     l5025:
  8130  0018C4  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  8131  0018C8  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  8132  0018CA  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  8133  0018CC  3417               	rlcf	___ftmul@f2+1,w,c
  8134  0018CE  3619               	rlcf	??___ftmul& (0+255),f,c
  8135  0018D0  E301               	bnc	u5861
  8136  0018D2  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  8137  0018D4                     u5861:
  8138  0018D4  5019               	movf	??___ftmul,w,c
  8139  0018D6  6E21               	movwf	___ftmul@sign,c
  8140  0018D8  5021               	movf	___ftmul@sign,w,c
  8141  0018DA  A4D8               	btfss	status,2,c
  8142  0018DC  D007               	goto	l5031
  8143  0018DE  0E00               	movlw	0
  8144  0018E0  6E13               	movwf	?___ftmul,c
  8145  0018E2  0E00               	movlw	0
  8146  0018E4  6E14               	movwf	?___ftmul+1,c
  8147  0018E6  0E00               	movlw	0
  8148  0018E8  6E15               	movwf	?___ftmul+2,c
  8149  0018EA  0012               	return	
  8150  0018EC                     l5031:
  8151  0018EC  5021               	movf	___ftmul@sign,w,c
  8152  0018EE  0F7B               	addlw	123
  8153  0018F0  261C               	addwf	___ftmul@exp,f,c
  8154  0018F2  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  8155  0018F6  5018               	movf	___ftmul@f2+2,w,c
  8156  0018F8  1A21               	xorwf	___ftmul@sign,f,c
  8157  0018FA  0E80               	movlw	128
  8158  0018FC  1621               	andwf	___ftmul@sign,f,c
  8159  0018FE  8E14               	bsf	___ftmul@f1+1,7,c
  8160  001900  8E17               	bsf	___ftmul@f2+1,7,c
  8161  001902  0EFF               	movlw	255
  8162  001904  1616               	andwf	___ftmul@f2,f,c
  8163  001906  0EFF               	movlw	255
  8164  001908  1617               	andwf	___ftmul@f2+1,f,c
  8165  00190A  0E00               	movlw	0
  8166  00190C  1618               	andwf	___ftmul@f2+2,f,c
  8167  00190E  0E00               	movlw	0
  8168  001910  6E1D               	movwf	___ftmul@f3_as_product,c
  8169  001912  0E00               	movlw	0
  8170  001914  6E1E               	movwf	___ftmul@f3_as_product+1,c
  8171  001916  0E00               	movlw	0
  8172  001918  6E1F               	movwf	___ftmul@f3_as_product+2,c
  8173  00191A  0E07               	movlw	7
  8174  00191C  6E20               	movwf	___ftmul@cntr,c
  8175  00191E                     l5045:
  8176  00191E  A013               	btfss	___ftmul@f1,0,c
  8177  001920  D006               	goto	l5049
  8178  001922  5016               	movf	___ftmul@f2,w,c
  8179  001924  261D               	addwf	___ftmul@f3_as_product,f,c
  8180  001926  5017               	movf	___ftmul@f2+1,w,c
  8181  001928  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  8182  00192A  5018               	movf	___ftmul@f2+2,w,c
  8183  00192C  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  8184  00192E                     l5049:
  8185  00192E  90D8               	bcf	status,0,c
  8186  001930  3215               	rrcf	___ftmul@f1+2,f,c
  8187  001932  3214               	rrcf	___ftmul@f1+1,f,c
  8188  001934  3213               	rrcf	___ftmul@f1,f,c
  8189  001936  90D8               	bcf	status,0,c
  8190  001938  3616               	rlcf	___ftmul@f2,f,c
  8191  00193A  3617               	rlcf	___ftmul@f2+1,f,c
  8192  00193C  3618               	rlcf	___ftmul@f2+2,f,c
  8193  00193E  2E20               	decfsz	___ftmul@cntr,f,c
  8194  001940  D7EE               	goto	l5045
  8195  001942  0E09               	movlw	9
  8196  001944  6E20               	movwf	___ftmul@cntr,c
  8197  001946                     l5055:
  8198  001946  A013               	btfss	___ftmul@f1,0,c
  8199  001948  D006               	goto	l5059
  8200  00194A  5016               	movf	___ftmul@f2,w,c
  8201  00194C  261D               	addwf	___ftmul@f3_as_product,f,c
  8202  00194E  5017               	movf	___ftmul@f2+1,w,c
  8203  001950  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  8204  001952  5018               	movf	___ftmul@f2+2,w,c
  8205  001954  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  8206  001956                     l5059:
  8207  001956  90D8               	bcf	status,0,c
  8208  001958  3215               	rrcf	___ftmul@f1+2,f,c
  8209  00195A  3214               	rrcf	___ftmul@f1+1,f,c
  8210  00195C  3213               	rrcf	___ftmul@f1,f,c
  8211  00195E  90D8               	bcf	status,0,c
  8212  001960  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  8213  001962  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  8214  001964  321D               	rrcf	___ftmul@f3_as_product,f,c
  8215  001966  2E20               	decfsz	___ftmul@cntr,f,c
  8216  001968  D7EE               	goto	l5055
  8217  00196A  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  8218  00196E  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8219  001972  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8220  001976  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  8221  00197A  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  8222  00197E  EC8C  F00D         	call	___ftpack	;wreg free
  8223  001982  C00B  F013         	movff	?___ftpack,?___ftmul
  8224  001986  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  8225  00198A  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  8226  00198E  0012               	return		;funcret
  8227  001990                     __end_of___ftmul:
  8228                           	opt callstack 0
  8229                           
  8230 ;; *************** function ___ftadd *****************
  8231 ;; Defined at:
  8232 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;  f1              3   18[COMRAM] float 
  8235 ;;  f2              3   21[COMRAM] float 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  exp1            1   29[COMRAM] unsigned char 
  8238 ;;  exp2            1   28[COMRAM] unsigned char 
  8239 ;;  sign            1   27[COMRAM] unsigned char 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  3   18[COMRAM] float 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, status,0, cstack
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8249 ;;      Params:         6       0       0       0       0       0       0       0       0
  8250 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8251 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8252 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8253 ;;Total ram usage:       12 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    6
  8256 ;; This function calls:
  8257 ;;		___ftpack
  8258 ;; This function is called by:
  8259 ;;		_pulsonic_getTotalSum_mlh
  8260 ;;		_disp7s_write_f
  8261 ;;		_configMode_kb
  8262 ;;		___ftsub
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text61
  8267  0012FE                     __ptext61:
  8268                           	opt callstack 0
  8269  0012FE                     ___ftadd:
  8270                           	opt callstack 20
  8271                           
  8272                           ;incstack = 0
  8273  0012FE  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  8274  001302  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  8275  001304  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  8276  001306  3414               	rlcf	___ftadd@f1+1,w,c
  8277  001308  3619               	rlcf	??___ftadd& (0+255),f,c
  8278  00130A  E301               	bnc	u5631
  8279  00130C  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  8280  00130E                     u5631:
  8281  00130E  5019               	movf	??___ftadd,w,c
  8282  001310  6E1E               	movwf	___ftadd@exp1,c
  8283  001312  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  8284  001316  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  8285  001318  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  8286  00131A  3417               	rlcf	___ftadd@f2+1,w,c
  8287  00131C  3619               	rlcf	??___ftadd& (0+255),f,c
  8288  00131E  E301               	bnc	u5641
  8289  001320  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  8290  001322                     u5641:
  8291  001322  5019               	movf	??___ftadd,w,c
  8292  001324  6E1D               	movwf	___ftadd@exp2,c
  8293  001326  501E               	movf	___ftadd@exp1,w,c
  8294  001328  B4D8               	btfsc	status,2,c
  8295  00132A  D00A               	goto	u5670
  8296  00132C  501D               	movf	___ftadd@exp2,w,c
  8297  00132E  5C1E               	subwf	___ftadd@exp1,w,c
  8298  001330  B0D8               	btfsc	status,0,c
  8299  001332  D00D               	goto	l4957
  8300  001334  501E               	movf	___ftadd@exp1,w,c
  8301  001336  5C1D               	subwf	___ftadd@exp2,w,c
  8302  001338  6E19               	movwf	??___ftadd& (0+255),c
  8303  00133A  0E18               	movlw	24
  8304  00133C  6419               	cpfsgt	??___ftadd,c
  8305  00133E  D007               	goto	l4957
  8306  001340                     u5670:
  8307  001340  C016  F013         	movff	___ftadd@f2,?___ftadd
  8308  001344  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  8309  001348  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  8310  00134C  0012               	return	
  8311  00134E                     l4957:
  8312  00134E  501D               	movf	___ftadd@exp2,w,c
  8313  001350  B4D8               	btfsc	status,2,c
  8314  001352  D00A               	goto	u5700
  8315  001354  501E               	movf	___ftadd@exp1,w,c
  8316  001356  5C1D               	subwf	___ftadd@exp2,w,c
  8317  001358  B0D8               	btfsc	status,0,c
  8318  00135A  D00D               	goto	l4963
  8319  00135C  501D               	movf	___ftadd@exp2,w,c
  8320  00135E  5C1E               	subwf	___ftadd@exp1,w,c
  8321  001360  6E19               	movwf	??___ftadd& (0+255),c
  8322  001362  0E18               	movlw	24
  8323  001364  6419               	cpfsgt	??___ftadd,c
  8324  001366  D007               	goto	l4963
  8325  001368                     u5700:
  8326  001368  C013  F013         	movff	___ftadd@f1,?___ftadd
  8327  00136C  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  8328  001370  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  8329  001374  0012               	return	
  8330  001376                     l4963:
  8331  001376  0E06               	movlw	6
  8332  001378  6E1C               	movwf	___ftadd@sign,c
  8333  00137A  BE15               	btfsc	___ftadd@f1+2,7,c
  8334  00137C  8E1C               	bsf	___ftadd@sign,7,c
  8335  00137E  BE18               	btfsc	___ftadd@f2+2,7,c
  8336  001380  8C1C               	bsf	___ftadd@sign,6,c
  8337  001382  8E14               	bsf	___ftadd@f1+1,7,c
  8338  001384  0EFF               	movlw	255
  8339  001386  1613               	andwf	___ftadd@f1,f,c
  8340  001388  0EFF               	movlw	255
  8341  00138A  1614               	andwf	___ftadd@f1+1,f,c
  8342  00138C  0E00               	movlw	0
  8343  00138E  1615               	andwf	___ftadd@f1+2,f,c
  8344  001390  8E17               	bsf	___ftadd@f2+1,7,c
  8345  001392  0EFF               	movlw	255
  8346  001394  1616               	andwf	___ftadd@f2,f,c
  8347  001396  0EFF               	movlw	255
  8348  001398  1617               	andwf	___ftadd@f2+1,f,c
  8349  00139A  0E00               	movlw	0
  8350  00139C  1618               	andwf	___ftadd@f2+2,f,c
  8351  00139E  501D               	movf	___ftadd@exp2,w,c
  8352  0013A0  5C1E               	subwf	___ftadd@exp1,w,c
  8353  0013A2  B0D8               	btfsc	status,0,c
  8354  0013A4  D01B               	goto	l4989
  8355  0013A6                     u5730:
  8356  0013A6  90D8               	bcf	status,0,c
  8357  0013A8  3616               	rlcf	___ftadd@f2,f,c
  8358  0013AA  3617               	rlcf	___ftadd@f2+1,f,c
  8359  0013AC  3618               	rlcf	___ftadd@f2+2,f,c
  8360  0013AE  061D               	decf	___ftadd@exp2,f,c
  8361  0013B0  501E               	movf	___ftadd@exp1,w,c
  8362  0013B2  181D               	xorwf	___ftadd@exp2,w,c
  8363  0013B4  B4D8               	btfsc	status,2,c
  8364  0013B6  D00D               	goto	l4987
  8365  0013B8  061C               	decf	___ftadd@sign,f,c
  8366  0013BA  C01C  F019         	movff	___ftadd@sign,??___ftadd
  8367  0013BE  0E07               	movlw	7
  8368  0013C0  1619               	andwf	??___ftadd,f,c
  8369  0013C2  B4D8               	btfsc	status,2,c
  8370  0013C4  D006               	goto	l4987
  8371  0013C6  D7EF               	goto	u5730
  8372  0013C8                     l4985:
  8373  0013C8  90D8               	bcf	status,0,c
  8374  0013CA  3215               	rrcf	___ftadd@f1+2,f,c
  8375  0013CC  3214               	rrcf	___ftadd@f1+1,f,c
  8376  0013CE  3213               	rrcf	___ftadd@f1,f,c
  8377  0013D0  2A1E               	incf	___ftadd@exp1,f,c
  8378  0013D2                     l4987:
  8379  0013D2  501D               	movf	___ftadd@exp2,w,c
  8380  0013D4  181E               	xorwf	___ftadd@exp1,w,c
  8381  0013D6  B4D8               	btfsc	status,2,c
  8382  0013D8  D01F               	goto	u5800
  8383  0013DA  D7F6               	goto	l4985
  8384  0013DC                     l4989:
  8385  0013DC  501E               	movf	___ftadd@exp1,w,c
  8386  0013DE  5C1D               	subwf	___ftadd@exp2,w,c
  8387  0013E0  B0D8               	btfsc	status,0,c
  8388  0013E2  D01A               	goto	u5800
  8389  0013E4                     u5770:
  8390  0013E4  90D8               	bcf	status,0,c
  8391  0013E6  3613               	rlcf	___ftadd@f1,f,c
  8392  0013E8  3614               	rlcf	___ftadd@f1+1,f,c
  8393  0013EA  3615               	rlcf	___ftadd@f1+2,f,c
  8394  0013EC  061E               	decf	___ftadd@exp1,f,c
  8395  0013EE  501E               	movf	___ftadd@exp1,w,c
  8396  0013F0  181D               	xorwf	___ftadd@exp2,w,c
  8397  0013F2  B4D8               	btfsc	status,2,c
  8398  0013F4  D00D               	goto	l4999
  8399  0013F6  061C               	decf	___ftadd@sign,f,c
  8400  0013F8  C01C  F019         	movff	___ftadd@sign,??___ftadd
  8401  0013FC  0E07               	movlw	7
  8402  0013FE  1619               	andwf	??___ftadd,f,c
  8403  001400  B4D8               	btfsc	status,2,c
  8404  001402  D006               	goto	l4999
  8405  001404  D7EF               	goto	u5770
  8406  001406                     l4997:
  8407  001406  90D8               	bcf	status,0,c
  8408  001408  3218               	rrcf	___ftadd@f2+2,f,c
  8409  00140A  3217               	rrcf	___ftadd@f2+1,f,c
  8410  00140C  3216               	rrcf	___ftadd@f2,f,c
  8411  00140E  2A1D               	incf	___ftadd@exp2,f,c
  8412  001410                     l4999:
  8413  001410  501D               	movf	___ftadd@exp2,w,c
  8414  001412  181E               	xorwf	___ftadd@exp1,w,c
  8415  001414  A4D8               	btfss	status,2,c
  8416  001416  D7F7               	goto	l4997
  8417  001418                     u5800:
  8418  001418  AE1C               	btfss	___ftadd@sign,7,c
  8419  00141A  D00C               	goto	l1302
  8420  00141C  0EFF               	movlw	255
  8421  00141E  1A13               	xorwf	___ftadd@f1,f,c
  8422  001420  0EFF               	movlw	255
  8423  001422  1A14               	xorwf	___ftadd@f1+1,f,c
  8424  001424  0EFF               	movlw	255
  8425  001426  1A15               	xorwf	___ftadd@f1+2,f,c
  8426  001428  0E01               	movlw	1
  8427  00142A  2613               	addwf	___ftadd@f1,f,c
  8428  00142C  0E00               	movlw	0
  8429  00142E  2214               	addwfc	___ftadd@f1+1,f,c
  8430  001430  0E00               	movlw	0
  8431  001432  2215               	addwfc	___ftadd@f1+2,f,c
  8432  001434                     l1302:
  8433  001434  AC1C               	btfss	___ftadd@sign,6,c
  8434  001436  D00C               	goto	l5005
  8435  001438  0EFF               	movlw	255
  8436  00143A  1A16               	xorwf	___ftadd@f2,f,c
  8437  00143C  0EFF               	movlw	255
  8438  00143E  1A17               	xorwf	___ftadd@f2+1,f,c
  8439  001440  0EFF               	movlw	255
  8440  001442  1A18               	xorwf	___ftadd@f2+2,f,c
  8441  001444  0E01               	movlw	1
  8442  001446  2616               	addwf	___ftadd@f2,f,c
  8443  001448  0E00               	movlw	0
  8444  00144A  2217               	addwfc	___ftadd@f2+1,f,c
  8445  00144C  0E00               	movlw	0
  8446  00144E  2218               	addwfc	___ftadd@f2+2,f,c
  8447  001450                     l5005:
  8448  001450  0E00               	movlw	0
  8449  001452  6E1C               	movwf	___ftadd@sign,c
  8450  001454  5013               	movf	___ftadd@f1,w,c
  8451  001456  2616               	addwf	___ftadd@f2,f,c
  8452  001458  5014               	movf	___ftadd@f1+1,w,c
  8453  00145A  2217               	addwfc	___ftadd@f2+1,f,c
  8454  00145C  5015               	movf	___ftadd@f1+2,w,c
  8455  00145E  2218               	addwfc	___ftadd@f2+2,f,c
  8456  001460  AE18               	btfss	___ftadd@f2+2,7,c
  8457  001462  D00E               	goto	l5015
  8458  001464  0EFF               	movlw	255
  8459  001466  1A16               	xorwf	___ftadd@f2,f,c
  8460  001468  0EFF               	movlw	255
  8461  00146A  1A17               	xorwf	___ftadd@f2+1,f,c
  8462  00146C  0EFF               	movlw	255
  8463  00146E  1A18               	xorwf	___ftadd@f2+2,f,c
  8464  001470  0E01               	movlw	1
  8465  001472  2616               	addwf	___ftadd@f2,f,c
  8466  001474  0E00               	movlw	0
  8467  001476  2217               	addwfc	___ftadd@f2+1,f,c
  8468  001478  0E00               	movlw	0
  8469  00147A  2218               	addwfc	___ftadd@f2+2,f,c
  8470  00147C  0E01               	movlw	1
  8471  00147E  6E1C               	movwf	___ftadd@sign,c
  8472  001480                     l5015:
  8473  001480  C016  F00B         	movff	___ftadd@f2,___ftpack@arg
  8474  001484  C017  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  8475  001488  C018  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  8476  00148C  C01E  F00E         	movff	___ftadd@exp1,___ftpack@exp
  8477  001490  C01C  F00F         	movff	___ftadd@sign,___ftpack@sign
  8478  001494  EC8C  F00D         	call	___ftpack	;wreg free
  8479  001498  C00B  F013         	movff	?___ftpack,?___ftadd
  8480  00149C  C00C  F014         	movff	?___ftpack+1,?___ftadd+1
  8481  0014A0  C00D  F015         	movff	?___ftpack+2,?___ftadd+2
  8482  0014A4  0012               	return		;funcret
  8483  0014A6                     __end_of___ftadd:
  8484                           	opt callstack 0
  8485                           
  8486 ;; *************** function ___ftpack *****************
  8487 ;; Defined at:
  8488 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;  arg             3   10[COMRAM] unsigned um
  8491 ;;  exp             1   13[COMRAM] unsigned char 
  8492 ;;  sign            1   14[COMRAM] unsigned char 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  3   10[COMRAM] float 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8504 ;;      Params:         5       0       0       0       0       0       0       0       0
  8505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8506 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8507 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8508 ;;Total ram usage:        8 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    5
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		___ftadd
  8515 ;;		___ftmul
  8516 ;;		___lwtoft
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text62
  8521  001B18                     __ptext62:
  8522                           	opt callstack 0
  8523  001B18                     ___ftpack:
  8524                           	opt callstack 20
  8525                           
  8526                           ;incstack = 0
  8527  001B18  500E               	movf	___ftpack@exp,w,c
  8528  001B1A  B4D8               	btfsc	status,2,c
  8529  001B1C  D005               	goto	u5510
  8530  001B1E  500B               	movf	___ftpack@arg,w,c
  8531  001B20  100C               	iorwf	___ftpack@arg+1,w,c
  8532  001B22  100D               	iorwf	___ftpack@arg+2,w,c
  8533  001B24  A4D8               	btfss	status,2,c
  8534  001B26  D00C               	goto	l4873
  8535  001B28                     u5510:
  8536  001B28  0E00               	movlw	0
  8537  001B2A  6E0B               	movwf	?___ftpack,c
  8538  001B2C  0E00               	movlw	0
  8539  001B2E  6E0C               	movwf	?___ftpack+1,c
  8540  001B30  0E00               	movlw	0
  8541  001B32  6E0D               	movwf	?___ftpack+2,c
  8542  001B34  0012               	return	
  8543  001B36                     l4871:
  8544  001B36  2A0E               	incf	___ftpack@exp,f,c
  8545  001B38  90D8               	bcf	status,0,c
  8546  001B3A  320D               	rrcf	___ftpack@arg+2,f,c
  8547  001B3C  320C               	rrcf	___ftpack@arg+1,f,c
  8548  001B3E  320B               	rrcf	___ftpack@arg,f,c
  8549  001B40                     l4873:
  8550  001B40  0E00               	movlw	0
  8551  001B42  140B               	andwf	___ftpack@arg,w,c
  8552  001B44  6E10               	movwf	??___ftpack& (0+255),c
  8553  001B46  0E00               	movlw	0
  8554  001B48  140C               	andwf	___ftpack@arg+1,w,c
  8555  001B4A  6E11               	movwf	(??___ftpack+1)& (0+255),c
  8556  001B4C  0EFE               	movlw	254
  8557  001B4E  140D               	andwf	___ftpack@arg+2,w,c
  8558  001B50  6E12               	movwf	(??___ftpack+2)& (0+255),c
  8559  001B52  5010               	movf	??___ftpack,w,c
  8560  001B54  1011               	iorwf	??___ftpack+1,w,c
  8561  001B56  1012               	iorwf	??___ftpack+2,w,c
  8562  001B58  B4D8               	btfsc	status,2,c
  8563  001B5A  D00C               	goto	l4879
  8564  001B5C  D7EC               	goto	l4871
  8565  001B5E                     l4875:
  8566  001B5E  2A0E               	incf	___ftpack@exp,f,c
  8567  001B60  0E01               	movlw	1
  8568  001B62  260B               	addwf	___ftpack@arg,f,c
  8569  001B64  0E00               	movlw	0
  8570  001B66  220C               	addwfc	___ftpack@arg+1,f,c
  8571  001B68  0E00               	movlw	0
  8572  001B6A  220D               	addwfc	___ftpack@arg+2,f,c
  8573  001B6C  90D8               	bcf	status,0,c
  8574  001B6E  320D               	rrcf	___ftpack@arg+2,f,c
  8575  001B70  320C               	rrcf	___ftpack@arg+1,f,c
  8576  001B72  320B               	rrcf	___ftpack@arg,f,c
  8577  001B74                     l4879:
  8578  001B74  0E00               	movlw	0
  8579  001B76  140B               	andwf	___ftpack@arg,w,c
  8580  001B78  6E10               	movwf	??___ftpack& (0+255),c
  8581  001B7A  0E00               	movlw	0
  8582  001B7C  140C               	andwf	___ftpack@arg+1,w,c
  8583  001B7E  6E11               	movwf	(??___ftpack+1)& (0+255),c
  8584  001B80  0EFF               	movlw	255
  8585  001B82  140D               	andwf	___ftpack@arg+2,w,c
  8586  001B84  6E12               	movwf	(??___ftpack+2)& (0+255),c
  8587  001B86  5010               	movf	??___ftpack,w,c
  8588  001B88  1011               	iorwf	??___ftpack+1,w,c
  8589  001B8A  1012               	iorwf	??___ftpack+2,w,c
  8590  001B8C  B4D8               	btfsc	status,2,c
  8591  001B8E  D006               	goto	l4883
  8592  001B90  D7E6               	goto	l4875
  8593  001B92                     l4881:
  8594  001B92  060E               	decf	___ftpack@exp,f,c
  8595  001B94  90D8               	bcf	status,0,c
  8596  001B96  360B               	rlcf	___ftpack@arg,f,c
  8597  001B98  360C               	rlcf	___ftpack@arg+1,f,c
  8598  001B9A  360D               	rlcf	___ftpack@arg+2,f,c
  8599  001B9C                     l4883:
  8600  001B9C  BE0C               	btfsc	___ftpack@arg+1,7,c
  8601  001B9E  D003               	goto	u5550
  8602  001BA0  0E02               	movlw	2
  8603  001BA2  600E               	cpfslt	___ftpack@exp,c
  8604  001BA4  D7F6               	goto	l4881
  8605  001BA6                     u5550:
  8606  001BA6  A00E               	btfss	___ftpack@exp,0,c
  8607  001BA8  9E0C               	bcf	___ftpack@arg+1,7,c
  8608  001BAA  90D8               	bcf	status,0,c
  8609  001BAC  320E               	rrcf	___ftpack@exp,f,c
  8610  001BAE  500E               	movf	___ftpack@exp,w,c
  8611  001BB0  120D               	iorwf	___ftpack@arg+2,f,c
  8612  001BB2  500F               	movf	___ftpack@sign,w,c
  8613  001BB4  A4D8               	btfss	status,2,c
  8614  001BB6  8E0D               	bsf	___ftpack@arg+2,7,c
  8615  001BB8  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  8616  001BBC  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  8617  001BC0  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  8618  001BC4  0012               	return		;funcret
  8619  001BC6                     __end_of___ftpack:
  8620                           	opt callstack 0
  8621                           
  8622 ;; *************** function _disp7s_modeDisp_off *****************
  8623 ;; Defined at:
  8624 ;;		line 156 in file "display.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8638 ;;      Params:         0       0       0       0       0       0       0       0       0
  8639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8641 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8642 ;;Total ram usage:        0 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    6
  8645 ;; This function calls:
  8646 ;;		_disp7s_off
  8647 ;; This function is called by:
  8648 ;;		_autoMode_init
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text63
  8653  002AB0                     __ptext63:
  8654                           	opt callstack 0
  8655  002AB0                     _disp7s_modeDisp_off:
  8656                           	opt callstack 22
  8657                           
  8658                           ;display.c: 158: disp7s_off(pulsonic.disp7s.mode, 2);
  8659                           
  8660                           ;incstack = 0
  8661  002AB0  0E3F               	movlw	low (_pulsonic+63)
  8662  002AB2  6E0B               	movwf	disp7s_off@pDisp,c
  8663  002AB4  0E01               	movlw	high (_pulsonic+63)
  8664  002AB6  6E0C               	movwf	disp7s_off@pDisp+1,c
  8665  002AB8  0E02               	movlw	2
  8666  002ABA  6E0D               	movwf	disp7s_off@NUM_OF_DISP,c
  8667  002ABC  ECCA  F013         	call	_disp7s_off	;wreg free
  8668  002AC0  0012               	return		;funcret
  8669  002AC2                     __end_of_disp7s_modeDisp_off:
  8670                           	opt callstack 0
  8671                           
  8672 ;; *************** function _disp7s_off *****************
  8673 ;; Defined at:
  8674 ;;		line 150 in file "display.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  pDisp           2   10[COMRAM] PTR unsigned char 
  8677 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  8678 ;;  NUM_OF_DISP     1   12[COMRAM] char 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  i               1   15[COMRAM] char 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8690 ;;      Params:         3       0       0       0       0       0       0       0       0
  8691 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8692 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8693 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8694 ;;Total ram usage:        6 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:    5
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_disp7s_modeDisp_off
  8701 ;;		_disp7s_write_f
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text64
  8706  002794                     __ptext64:
  8707                           	opt callstack 0
  8708  002794                     _disp7s_off:
  8709                           	opt callstack 21
  8710                           
  8711                           ;display.c: 152: int8_t i;;display.c: 153: for (i=0; i<NUM_OF_DISP; i++)
  8712                           
  8713                           ;incstack = 0
  8714  002794  0E00               	movlw	0
  8715  002796  6E10               	movwf	disp7s_off@i,c
  8716  002798  D013               	goto	l4935
  8717  00279A                     l4931:
  8718                           
  8719                           ;display.c: 154: {pDisp[i] = DISP7S_CHARS[OFF];}
  8720  00279A  0E0F               	movlw	low _DISP7S_CHARS
  8721  00279C  6EF6               	movwf	tblptrl,c
  8722  00279E                     	if	1	;There is more than 1 active tblptr byte
  8723  00279E  0E08               	movlw	high _DISP7S_CHARS
  8724  0027A0  6EF7               	movwf	tblptrh,c
  8725  0027A2                     	endif
  8726  0027A2                     	if	0	;There are less than 3 active tblptr bytes
  8727  0027A2                     	endif
  8728  0027A2  C010  F00E         	movff	disp7s_off@i,??_disp7s_off
  8729  0027A6  6A0F               	clrf	(??_disp7s_off+1)& (0+255),c
  8730  0027A8  BE0E               	btfsc	??_disp7s_off& (0+255),7,c
  8731  0027AA  060F               	decf	(??_disp7s_off+1)& (0+255),f,c
  8732  0027AC  500E               	movf	??_disp7s_off,w,c
  8733  0027AE  240B               	addwf	disp7s_off@pDisp,w,c
  8734  0027B0  6ED9               	movwf	fsr2l,c
  8735  0027B2  500F               	movf	??_disp7s_off+1,w,c
  8736  0027B4  200C               	addwfc	disp7s_off@pDisp+1,w,c
  8737  0027B6  6EDA               	movwf	fsr2h,c
  8738  0027B8  0008               	tblrd		*
  8739  0027BA  CFF5 FFDF          	movff	tablat,indf2
  8740  0027BE  2A10               	incf	disp7s_off@i,f,c
  8741  0027C0                     l4935:
  8742  0027C0  5010               	movf	disp7s_off@i,w,c
  8743  0027C2  0A80               	xorlw	128
  8744  0027C4  6E0E               	movwf	??_disp7s_off& (0+255),c
  8745  0027C6  500D               	movf	disp7s_off@NUM_OF_DISP,w,c
  8746  0027C8  0A80               	xorlw	128
  8747  0027CA  5C0E               	subwf	??_disp7s_off& (0+255),w,c
  8748  0027CC  B0D8               	btfsc	status,0,c
  8749  0027CE  0012               	return	
  8750  0027D0  D7E4               	goto	l4931
  8751  0027D2                     __end_of_disp7s_off:
  8752                           	opt callstack 0
  8753                           
  8754 ;; *************** function _is_oilLevel *****************
  8755 ;; Defined at:
  8756 ;;		line 8 in file "inputs.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;		None
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;		None
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      char 
  8763 ;; Registers used:
  8764 ;;		wreg, status,2, status,0
  8765 ;; Tracked objects:
  8766 ;;		On entry : 3F/0
  8767 ;;		On exit  : 3F/0
  8768 ;;		Unchanged: 3F/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8770 ;;      Params:         0       0       0       0       0       0       0       0       0
  8771 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8773 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8774 ;;Total ram usage:        0 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:    5
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_check_oilLevel
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text65
  8785  002B9E                     __ptext65:
  8786                           	opt callstack 0
  8787  002B9E                     _is_oilLevel:
  8788                           	opt callstack 24
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;inputs.c: 11: return ((PORTC & (1<<0))>>0);
  8792                           
  8793                           ;incstack = 0
  8794  002B9E  5082               	movf	3970,w,c	;volatile
  8795  002BA0  0B01               	andlw	1
  8796                           
  8797                           ; BSR set to: 0
  8798  002BA2  0012               	return		;funcret
  8799  002BA4                     __end_of_is_oilLevel:
  8800                           	opt callstack 0
  8801                           
  8802 ;; *************** function _disp7s_qtyDisp_writeText_NO_OIL *****************
  8803 ;; Defined at:
  8804 ;;		line 183 in file "display.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;		None
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  8813 ;; Tracked objects:
  8814 ;;		On entry : 3F/0
  8815 ;;		On exit  : 3F/1
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8818 ;;      Params:         0       0       0       0       0       0       0       0       0
  8819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8822 ;;Total ram usage:        0 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; Hardware stack levels required when called:    5
  8825 ;; This function calls:
  8826 ;;		Nothing
  8827 ;; This function is called by:
  8828 ;;		_check_oilLevel
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text66
  8833  002994                     __ptext66:
  8834                           	opt callstack 0
  8835  002994                     _disp7s_qtyDisp_writeText_NO_OIL:
  8836                           	opt callstack 24
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;display.c: 185: pulsonic.disp7s.mode[1] = 0x54;
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;incstack = 0
  8843  002994  0E54               	movlw	84
  8844  002996  0101               	movlb	1	; () banked
  8845  002998  6F40               	movwf	(_pulsonic+64)& (0+255),b
  8846                           
  8847                           ;display.c: 186: pulsonic.disp7s.mode[0] = 0x5C;
  8848  00299A  0E5C               	movlw	92
  8849  00299C  6F3F               	movwf	(_pulsonic+63)& (0+255),b
  8850                           
  8851                           ; BSR set to: 1
  8852                           ;display.c: 188: pulsonic.disp7s.qty[2] = DISP7S_NUMS[0];
  8853  00299E  0E01               	movlw	low _DISP7S_NUMS
  8854  0029A0  6EF6               	movwf	tblptrl,c
  8855  0029A2                     	if	1	;There is more than 1 active tblptr byte
  8856  0029A2  0E08               	movlw	high _DISP7S_NUMS
  8857  0029A4  6EF7               	movwf	tblptrh,c
  8858  0029A6                     	endif
  8859  0029A6                     	if	0	;There are less than 3 active tblptr bytes
  8860  0029A6                     	endif
  8861  0029A6  0008               	tblrd		*
  8862  0029A8  CFF5 F13E          	movff	tablat,_pulsonic+62
  8863                           
  8864                           ; BSR set to: 1
  8865                           ;display.c: 189: pulsonic.disp7s.qty[1] = 0x30;
  8866  0029AC  0E30               	movlw	48
  8867  0029AE  6F3D               	movwf	(_pulsonic+61)& (0+255),b
  8868                           
  8869                           ; BSR set to: 1
  8870                           ;display.c: 190: pulsonic.disp7s.qty[0] = 0x38;
  8871  0029B0  0E38               	movlw	56
  8872  0029B2  6F3C               	movwf	(_pulsonic+60)& (0+255),b
  8873                           
  8874                           ; BSR set to: 1
  8875  0029B4  0012               	return		;funcret
  8876  0029B6                     __end_of_disp7s_qtyDisp_writeText_NO_OIL:
  8877                           	opt callstack 0
  8878                           
  8879 ;; *************** function _autoMode_job *****************
  8880 ;; Defined at:
  8881 ;;		line 30 in file "automode.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  cod_ret         1   32[COMRAM] char 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      char 
  8888 ;; Registers used:
  8889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 3F/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8895 ;;      Params:         0       0       0       0       0       0       0       0       0
  8896 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8898 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8899 ;;Total ram usage:        1 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    7
  8902 ;; This function calls:
  8903 ;;		_autoMode_kb
  8904 ;;		_mpap_isIdle
  8905 ;;		_mpap_movetoNozzle
  8906 ;;		_mpap_setupToHomming
  8907 ;;		_nozzle_isEnabled
  8908 ;;		_pump_isIdle
  8909 ;;		_pump_setTick
  8910 ;; This function is called by:
  8911 ;;		_main
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text67
  8916  001D12                     __ptext67:
  8917                           	opt callstack 0
  8918  001D12                     _autoMode_job:
  8919                           	opt callstack 23
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;automode.c: 32: int8_t cod_ret = 0;
  8923                           
  8924                           ; BSR set to: 1
  8925                           ;incstack = 0
  8926  001D12  0E00               	movlw	0
  8927  001D14  6E21               	movwf	autoMode_job@cod_ret,c
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;automode.c: 34: if (smain.focus.kb == FOCUS_KB_AUTOMODE)
  8931  001D16  0448               	decf	_smain+1,w,c	;volatile
  8932  001D18  A4D8               	btfss	status,2,c
  8933  001D1A  D003               	goto	l5981
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;automode.c: 35: {;automode.c: 36: cod_ret = autoMode_kb();
  8937  001D1C  ECF0  F00F         	call	_autoMode_kb	;wreg free
  8938  001D20  6E21               	movwf	autoMode_job@cod_ret,c
  8939  001D22                     l5981:
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;automode.c: 37: };automode.c: 40: if (autoMode.sm0 == 0)
  8943  001D22  504D               	movf	_autoMode+1,w,c
  8944  001D24  A4D8               	btfss	status,2,c
  8945  001D26  D004               	goto	l5987
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;automode.c: 41: {;automode.c: 42: mpap_setupToHomming();
  8949  001D28  EC61  F015         	call	_mpap_setupToHomming	;wreg free
  8950  001D2C                     l5985:
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;automode.c: 43: autoMode.sm0++;
  8954  001D2C  2A4D               	incf	_autoMode+1,f,c
  8955                           
  8956                           ;automode.c: 44: }
  8957  001D2E  D03E               	goto	l793
  8958  001D30                     l5987:
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;automode.c: 45: else if (autoMode.sm0 == 1)
  8962  001D30  044D               	decf	_autoMode+1,w,c
  8963  001D32  A4D8               	btfss	status,2,c
  8964  001D34  D006               	goto	l5993
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;automode.c: 46: {;automode.c: 47: if (mpap_isIdle())
  8968  001D36  EC7A  F015         	call	_mpap_isIdle	;wreg free
  8969  001D3A  0900               	iorlw	0
  8970  001D3C  A4D8               	btfss	status,2,c
  8971  001D3E  D7F6               	goto	l5985
  8972  001D40  D035               	goto	l793
  8973  001D42                     l5993:
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;automode.c: 53: else if (autoMode.sm0 == 2)
  8977  001D42  0E02               	movlw	2
  8978  001D44  184D               	xorwf	_autoMode+1,w,c
  8979  001D46  A4D8               	btfss	status,2,c
  8980  001D48  D016               	goto	l6005
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;automode.c: 54: {;automode.c: 55: if (nozzle_isEnabled(autoMode.numNozzle))
  8984  001D4A  504C               	movf	_autoMode,w,c
  8985  001D4C  6E1F               	movwf	nozzle_isEnabled@n,c
  8986  001D4E  6A20               	clrf	nozzle_isEnabled@n+1,c
  8987  001D50  BE1F               	btfsc	nozzle_isEnabled@n,7,c
  8988  001D52  0620               	decf	nozzle_isEnabled@n+1,f,c
  8989  001D54  EC00  F013         	call	_nozzle_isEnabled	;wreg free
  8990  001D58  0900               	iorlw	0
  8991  001D5A  B4D8               	btfsc	status,2,c
  8992  001D5C  D004               	goto	l6001
  8993                           
  8994                           ;automode.c: 56: {;automode.c: 57: mpap_movetoNozzle(autoMode.numNozzle);
  8995  001D5E  504C               	movf	_autoMode,w,c
  8996  001D60  EC36  F014         	call	_mpap_movetoNozzle
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;automode.c: 58: autoMode.sm0++;
  9000  001D64  2A4D               	incf	_autoMode+1,f,c
  9001  001D66                     l6001:
  9002                           
  9003                           ;automode.c: 59: };automode.c: 61: if (++autoMode.numNozzle == 8)
  9004  001D66  2A4C               	incf	_autoMode,f,c
  9005  001D68  0E08               	movlw	8
  9006  001D6A  184C               	xorwf	_autoMode,w,c
  9007  001D6C  A4D8               	btfss	status,2,c
  9008  001D6E  D01E               	goto	l793
  9009                           
  9010                           ;automode.c: 62: {autoMode.numNozzle = 0x00;}
  9011  001D70  0E00               	movlw	0
  9012  001D72  6E4C               	movwf	_autoMode,c
  9013  001D74  D01B               	goto	l793
  9014  001D76                     l6005:
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;automode.c: 64: else if (autoMode.sm0 == 3)
  9018  001D76  0E03               	movlw	3
  9019  001D78  184D               	xorwf	_autoMode+1,w,c
  9020  001D7A  A4D8               	btfss	status,2,c
  9021  001D7C  D00C               	goto	l6013
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;automode.c: 65: {;automode.c: 66: if (mpap_isIdle())
  9025  001D7E  EC7A  F015         	call	_mpap_isIdle	;wreg free
  9026  001D82  0900               	iorlw	0
  9027  001D84  B4D8               	btfsc	status,2,c
  9028  001D86  D012               	goto	l793
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;automode.c: 67: {;automode.c: 68: pump_setTick(1);
  9032  001D88  0E00               	movlw	0
  9033  001D8A  6E0C               	movwf	pump_setTick@ticks+1,c
  9034  001D8C  0E01               	movlw	1
  9035  001D8E  6E0B               	movwf	pump_setTick@ticks,c
  9036  001D90  ECA3  F015         	call	_pump_setTick	;wreg free
  9037  001D94  D7CB               	goto	l5985
  9038  001D96                     l6013:
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;automode.c: 72: else if (autoMode.sm0 == 4)
  9042  001D96  0E04               	movlw	4
  9043  001D98  184D               	xorwf	_autoMode+1,w,c
  9044  001D9A  A4D8               	btfss	status,2,c
  9045  001D9C  D007               	goto	l793
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;automode.c: 73: {;automode.c: 74: if (pump_isIdle())
  9049  001D9E  EC72  F015         	call	_pump_isIdle	;wreg free
  9050  001DA2  0900               	iorlw	0
  9051  001DA4  B4D8               	btfsc	status,2,c
  9052  001DA6  D002               	goto	l793
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;automode.c: 75: {;automode.c: 76: autoMode.sm0 = 0x2;
  9056  001DA8  0E02               	movlw	2
  9057  001DAA  6E4D               	movwf	_autoMode+1,c
  9058  001DAC                     l793:
  9059                           
  9060                           ;automode.c: 77: };automode.c: 78: };automode.c: 79: return cod_ret;
  9061  001DAC  5021               	movf	autoMode_job@cod_ret,w,c
  9062  001DAE  0012               	return		;funcret
  9063  001DB0                     __end_of_autoMode_job:
  9064                           	opt callstack 0
  9065                           
  9066 ;; *************** function _pump_setTick *****************
  9067 ;; Defined at:
  9068 ;;		line 8 in file "pump.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  ticks           2   10[COMRAM] unsigned int 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;		None
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  1    wreg      void 
  9075 ;; Registers used:
  9076 ;;		None
  9077 ;; Tracked objects:
  9078 ;;		On entry : 3F/0
  9079 ;;		On exit  : 3F/0
  9080 ;;		Unchanged: 3F/0
  9081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9082 ;;      Params:         2       0       0       0       0       0       0       0       0
  9083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9085 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9086 ;;Total ram usage:        2 bytes
  9087 ;; Hardware stack levels used:    1
  9088 ;; Hardware stack levels required when called:    5
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_autoMode_job
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text68
  9097  002B46                     __ptext68:
  9098                           	opt callstack 0
  9099  002B46                     _pump_setTick:
  9100                           	opt callstack 24
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;pump.c: 10: pump.ticks = ticks;
  9104                           
  9105                           ;incstack = 0
  9106  002B46  C00B  F044         	movff	pump_setTick@ticks,_pump
  9107  002B4A  C00C  F045         	movff	pump_setTick@ticks+1,_pump+1
  9108                           
  9109                           ; BSR set to: 0
  9110  002B4E  0012               	return		;funcret
  9111  002B50                     __end_of_pump_setTick:
  9112                           	opt callstack 0
  9113                           
  9114 ;; *************** function _pump_isIdle *****************
  9115 ;; Defined at:
  9116 ;;		line 66 in file "pump.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;		None
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;		None
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      char 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, status,0
  9125 ;; Tracked objects:
  9126 ;;		On entry : 3F/0
  9127 ;;		On exit  : 3F/0
  9128 ;;		Unchanged: 3F/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9130 ;;      Params:         0       0       0       0       0       0       0       0       0
  9131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9134 ;;Total ram usage:        0 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    5
  9137 ;; This function calls:
  9138 ;;		Nothing
  9139 ;; This function is called by:
  9140 ;;		_autoMode_job
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text69
  9145  002AE4                     __ptext69:
  9146                           	opt callstack 0
  9147  002AE4                     _pump_isIdle:
  9148                           	opt callstack 24
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;pump.c: 68: if (pump.ticks == 0)
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;incstack = 0
  9155  002AE4  5044               	movf	_pump,w,c
  9156  002AE6  1045               	iorwf	_pump+1,w,c
  9157  002AE8  A4D8               	btfss	status,2,c
  9158  002AEA  D002               	goto	l5569
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;pump.c: 69: {return 1;}
  9162  002AEC  0E01               	movlw	1
  9163  002AEE  0012               	return	
  9164  002AF0                     l5569:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;pump.c: 70: return 0;
  9168  002AF0  0E00               	movlw	0
  9169                           
  9170                           ; BSR set to: 0
  9171  002AF2  0012               	return		;funcret
  9172  002AF4                     __end_of_pump_isIdle:
  9173                           	opt callstack 0
  9174                           
  9175 ;; *************** function _nozzle_isEnabled *****************
  9176 ;; Defined at:
  9177 ;;		line 7 in file "nozzle.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  n               2   30[COMRAM] int 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      char 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9186 ;; Tracked objects:
  9187 ;;		On entry : 3F/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9191 ;;      Params:         2       0       0       0       0       0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9194 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9195 ;;Total ram usage:        2 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:    6
  9198 ;; This function calls:
  9199 ;;		___ftge
  9200 ;;		___wmul
  9201 ;; This function is called by:
  9202 ;;		_autoMode_job
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text70
  9207  002600                     __ptext70:
  9208                           	opt callstack 0
  9209  002600                     _nozzle_isEnabled:
  9210                           	opt callstack 23
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;nozzle.c: 9: if (pulsonic.nozzle[n].Q_mlh > 0.0)
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;incstack = 0
  9217  002600  0E00               	movlw	0
  9218  002602  6E16               	movwf	___ftge@ff1,c
  9219  002604  0E00               	movlw	0
  9220  002606  6E17               	movwf	___ftge@ff1+1,c
  9221  002608  0E00               	movlw	0
  9222  00260A  6E18               	movwf	___ftge@ff1+2,c
  9223  00260C  C01F  F00B         	movff	nozzle_isEnabled@n,___wmul@multiplier
  9224  002610  C020  F00C         	movff	nozzle_isEnabled@n+1,___wmul@multiplier+1
  9225  002614  0E00               	movlw	0
  9226  002616  6E0E               	movwf	___wmul@multiplicand+1,c
  9227  002618  0E06               	movlw	6
  9228  00261A  6E0D               	movwf	___wmul@multiplicand,c
  9229  00261C  EC94  F014         	call	___wmul	;wreg free
  9230  002620  0E06               	movlw	low (_pulsonic+6)
  9231  002622  240B               	addwf	?___wmul,w,c
  9232  002624  6ED9               	movwf	fsr2l,c
  9233  002626  0E01               	movlw	high (_pulsonic+6)
  9234  002628  200C               	addwfc	?___wmul+1,w,c
  9235  00262A  6EDA               	movwf	fsr2h,c
  9236  00262C  CFDE F019          	movff	postinc2,___ftge@ff2
  9237  002630  CFDE F01A          	movff	postinc2,___ftge@ff2+1
  9238  002634  CFDD F01B          	movff	postdec2,___ftge@ff2+2
  9239  002638  ECDD  F010         	call	___ftge	;wreg free
  9240  00263C  B0D8               	btfsc	status,0,c
  9241  00263E  D002               	goto	l5641
  9242                           
  9243                           ;nozzle.c: 10: return 1;
  9244  002640  0E01               	movlw	1
  9245  002642  0012               	return	
  9246  002644                     l5641:
  9247                           
  9248                           ;nozzle.c: 11: return 0;
  9249  002644  0E00               	movlw	0
  9250  002646  0012               	return		;funcret
  9251  002648                     __end_of_nozzle_isEnabled:
  9252                           	opt callstack 0
  9253                           
  9254 ;; *************** function ___ftge *****************
  9255 ;; Defined at:
  9256 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  ff1             3   21[COMRAM] float 
  9259 ;;  ff2             3   24[COMRAM] float 
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;		None               void
  9264 ;; Registers used:
  9265 ;;		wreg, status,2, status,0
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9271 ;;      Params:         6       0       0       0       0       0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9273 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9274 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9275 ;;Total ram usage:        9 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:    5
  9278 ;; This function calls:
  9279 ;;		Nothing
  9280 ;; This function is called by:
  9281 ;;		_ikey_parsing
  9282 ;;		_disp7s_write_f
  9283 ;;		_nozzle_isEnabled
  9284 ;;		_configMode_kb
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text71
  9289  0021BA                     __ptext71:
  9290                           	opt callstack 0
  9291  0021BA                     ___ftge:
  9292                           	opt callstack 21
  9293                           
  9294                           ;incstack = 0
  9295  0021BA  AE18               	btfss	___ftge@ff1+2,7,c
  9296  0021BC  D00F               	goto	l5071
  9297  0021BE  0E00               	movlw	0
  9298  0021C0  6E1C               	movwf	??___ftge& (0+255),c
  9299  0021C2  0E00               	movlw	0
  9300  0021C4  6E1D               	movwf	(??___ftge+1)& (0+255),c
  9301  0021C6  0E80               	movlw	128
  9302  0021C8  6E1E               	movwf	(??___ftge+2)& (0+255),c
  9303  0021CA  5016               	movf	___ftge@ff1,w,c
  9304  0021CC  5C1C               	subwf	??___ftge,w,c
  9305  0021CE  6E16               	movwf	___ftge@ff1,c
  9306  0021D0  5017               	movf	___ftge@ff1+1,w,c
  9307  0021D2  581D               	subwfb	??___ftge+1,w,c
  9308  0021D4  6E17               	movwf	___ftge@ff1+1,c
  9309  0021D6  5018               	movf	___ftge@ff1+2,w,c
  9310  0021D8  581E               	subwfb	??___ftge+2,w,c
  9311  0021DA  6E18               	movwf	___ftge@ff1+2,c
  9312  0021DC                     l5071:
  9313  0021DC  AE1B               	btfss	___ftge@ff2+2,7,c
  9314  0021DE  D00F               	goto	l5075
  9315  0021E0  0E00               	movlw	0
  9316  0021E2  6E1C               	movwf	??___ftge& (0+255),c
  9317  0021E4  0E00               	movlw	0
  9318  0021E6  6E1D               	movwf	(??___ftge+1)& (0+255),c
  9319  0021E8  0E80               	movlw	128
  9320  0021EA  6E1E               	movwf	(??___ftge+2)& (0+255),c
  9321  0021EC  5019               	movf	___ftge@ff2,w,c
  9322  0021EE  5C1C               	subwf	??___ftge,w,c
  9323  0021F0  6E19               	movwf	___ftge@ff2,c
  9324  0021F2  501A               	movf	___ftge@ff2+1,w,c
  9325  0021F4  581D               	subwfb	??___ftge+1,w,c
  9326  0021F6  6E1A               	movwf	___ftge@ff2+1,c
  9327  0021F8  501B               	movf	___ftge@ff2+2,w,c
  9328  0021FA  581E               	subwfb	??___ftge+2,w,c
  9329  0021FC  6E1B               	movwf	___ftge@ff2+2,c
  9330  0021FE                     l5075:
  9331  0021FE  0E00               	movlw	0
  9332  002200  1A16               	xorwf	___ftge@ff1,f,c
  9333  002202  0E00               	movlw	0
  9334  002204  1A17               	xorwf	___ftge@ff1+1,f,c
  9335  002206  0E80               	movlw	128
  9336  002208  1A18               	xorwf	___ftge@ff1+2,f,c
  9337  00220A  0E00               	movlw	0
  9338  00220C  1A19               	xorwf	___ftge@ff2,f,c
  9339  00220E  0E00               	movlw	0
  9340  002210  1A1A               	xorwf	___ftge@ff2+1,f,c
  9341  002212  0E80               	movlw	128
  9342  002214  1A1B               	xorwf	___ftge@ff2+2,f,c
  9343  002216  5019               	movf	___ftge@ff2,w,c
  9344  002218  5C16               	subwf	___ftge@ff1,w,c
  9345  00221A  501A               	movf	___ftge@ff2+1,w,c
  9346  00221C  5817               	subwfb	___ftge@ff1+1,w,c
  9347  00221E  501B               	movf	___ftge@ff2+2,w,c
  9348  002220  5818               	subwfb	___ftge@ff1+2,w,c
  9349  002222  B0D8               	btfsc	status,0,c
  9350  002224  D002               	goto	l5081
  9351  002226  90D8               	bcf	status,0,c
  9352  002228  0012               	return	
  9353  00222A                     l5081:
  9354  00222A  80D8               	bsf	status,0,c
  9355  00222C  0012               	return		;funcret
  9356  00222E                     __end_of___ftge:
  9357                           	opt callstack 0
  9358                           
  9359 ;; *************** function _mpap_setupToHomming *****************
  9360 ;; Defined at:
  9361 ;;		line 64 in file "mpap.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;		None
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;		None
  9366 ;; Return value:  Size  Location     Type
  9367 ;;                  1    wreg      void 
  9368 ;; Registers used:
  9369 ;;		wreg, status,2, status,0, cstack
  9370 ;; Tracked objects:
  9371 ;;		On entry : 3F/0
  9372 ;;		On exit  : 3F/0
  9373 ;;		Unchanged: 0/0
  9374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9375 ;;      Params:         0       0       0       0       0       0       0       0       0
  9376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9378 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9379 ;;Total ram usage:        0 bytes
  9380 ;; Hardware stack levels used:    1
  9381 ;; Hardware stack levels required when called:    6
  9382 ;; This function calls:
  9383 ;;		_mpap_setupToTurn
  9384 ;; This function is called by:
  9385 ;;		_autoMode_job
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text72
  9390  002AC2                     __ptext72:
  9391                           	opt callstack 0
  9392  002AC2                     _mpap_setupToHomming:
  9393                           	opt callstack 23
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;mpap.c: 67: mpap_setupToTurn( -1 *( (18*200) +20));
  9397                           
  9398                           ;incstack = 0
  9399  002AC2  0EF1               	movlw	241
  9400  002AC4  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  9401  002AC6  0EDC               	movlw	220
  9402  002AC8  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  9403  002ACA  EC4E  F014         	call	_mpap_setupToTurn	;wreg free
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;mpap.c: 69: mpap.mode = MPAP_HOMMING_MODE;
  9407  002ACE  0E02               	movlw	2
  9408  002AD0  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  9409                           
  9410                           ; BSR set to: 0
  9411  002AD2  0012               	return		;funcret
  9412  002AD4                     __end_of_mpap_setupToHomming:
  9413                           	opt callstack 0
  9414                           
  9415 ;; *************** function _mpap_movetoNozzle *****************
  9416 ;; Defined at:
  9417 ;;		line 213 in file "mpap.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  numNozzle       1    wreg     char 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;  numNozzle       1   20[COMRAM] char 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1    wreg      void 
  9424 ;; Registers used:
  9425 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 3F/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9431 ;;      Params:         0       0       0       0       0       0       0       0       0
  9432 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9434 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9435 ;;Total ram usage:        1 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    6
  9438 ;; This function calls:
  9439 ;;		___wmul
  9440 ;;		_mpap_setupToTurn
  9441 ;; This function is called by:
  9442 ;;		_autoMode_job
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text73
  9447  00286C                     __ptext73:
  9448                           	opt callstack 0
  9449  00286C                     _mpap_movetoNozzle:
  9450                           	opt callstack 23
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;incstack = 0
  9454                           ;mpap_movetoNozzle@numNozzle stored from wreg
  9455  00286C  6E15               	movwf	mpap_movetoNozzle@numNozzle,c
  9456                           
  9457                           ;mpap.c: 216: mpap_setupToTurn( (numNozzle*200) - mpap.numSteps_current);
  9458  00286E  5015               	movf	mpap_movetoNozzle@numNozzle,w,c
  9459  002870  6E0B               	movwf	___wmul@multiplier,c
  9460  002872  6A0C               	clrf	___wmul@multiplier+1,c
  9461  002874  BE0B               	btfsc	___wmul@multiplier,7,c
  9462  002876  060C               	decf	___wmul@multiplier+1,f,c
  9463  002878  0E00               	movlw	0
  9464  00287A  6E0E               	movwf	___wmul@multiplicand+1,c
  9465  00287C  0EC8               	movlw	200
  9466  00287E  6E0D               	movwf	___wmul@multiplicand,c
  9467  002880  EC94  F014         	call	___wmul	;wreg free
  9468  002884  0100               	movlb	0	; () banked
  9469  002886  51B0               	movf	_mpap& (0+255),w,b	;volatile
  9470  002888  5C0B               	subwf	?___wmul,w,c
  9471  00288A  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  9472  00288C  51B1               	movf	(_mpap+1)& (0+255),w,b	;volatile
  9473  00288E  580C               	subwfb	?___wmul+1,w,c
  9474  002890  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  9475  002892  EC4E  F014         	call	_mpap_setupToTurn	;wreg free
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;mpap.c: 218: mpap.mode = MPAP_NORMAL_MODE;
  9479  002896  0E03               	movlw	3
  9480  002898  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  9481                           
  9482                           ; BSR set to: 0
  9483  00289A  0012               	return		;funcret
  9484  00289C                     __end_of_mpap_movetoNozzle:
  9485                           	opt callstack 0
  9486                           
  9487 ;; *************** function _mpap_setupToTurn *****************
  9488 ;; Defined at:
  9489 ;;		line 55 in file "mpap.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  numSteps_tom    2   16[COMRAM] int 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0
  9498 ;; Tracked objects:
  9499 ;;		On entry : 3F/0
  9500 ;;		On exit  : 3F/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9503 ;;      Params:         2       0       0       0       0       0       0       0       0
  9504 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9506 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9507 ;;Total ram usage:        4 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    5
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_mpap_setupToHomming
  9514 ;;		_mpap_movetoNozzle
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text74
  9519  00289C                     __ptext74:
  9520                           	opt callstack 0
  9521  00289C                     _mpap_setupToTurn:
  9522                           	opt callstack 23
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;mpap.c: 57: if (numSteps_tomove !=0)
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;incstack = 0
  9529  00289C  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  9530  00289E  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  9531  0028A0  B4D8               	btfsc	status,2,c
  9532  0028A2  0012               	return	
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;mpap.c: 58: {;mpap.c: 59: mpap.KI = (numSteps_tomove<0)? -1: 1;
  9536  0028A4  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  9537  0028A6  D005               	goto	l462
  9538                           
  9539                           ; BSR set to: 0
  9540  0028A8  0E00               	movlw	0
  9541  0028AA  6E14               	movwf	_mpap_setupToTurn$500+1,c
  9542  0028AC  0E01               	movlw	1
  9543  0028AE  6E13               	movwf	_mpap_setupToTurn$500,c
  9544  0028B0  D002               	goto	l464
  9545  0028B2                     l462:
  9546                           
  9547                           ; BSR set to: 0
  9548  0028B2  6813               	setf	_mpap_setupToTurn$500,c
  9549  0028B4  6814               	setf	_mpap_setupToTurn$500+1,c
  9550  0028B6                     l464:
  9551                           
  9552                           ; BSR set to: 0
  9553  0028B6  C013  F0B6         	movff	_mpap_setupToTurn$500,_mpap+6	;volatile
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;mpap.c: 60: mpap.counter_steps = 0;
  9557  0028BA  0E00               	movlw	0
  9558  0028BC  6FB3               	movwf	(_mpap+3)& (0+255),b	;volatile
  9559  0028BE  0E00               	movlw	0
  9560  0028C0  6FB2               	movwf	(_mpap+2)& (0+255),b	;volatile
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;mpap.c: 61: mpap.numSteps_tomove = numSteps_tomove;
  9564  0028C2  C011  F0B4         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  9565  0028C6  C012  F0B5         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  9566                           
  9567                           ; BSR set to: 0
  9568  0028CA  0012               	return		;funcret
  9569  0028CC                     __end_of_mpap_setupToTurn:
  9570                           	opt callstack 0
  9571                           
  9572 ;; *************** function ___wmul *****************
  9573 ;; Defined at:
  9574 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  multiplier      2   10[COMRAM] unsigned int 
  9577 ;;  multiplicand    2   12[COMRAM] unsigned int 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  product         2   14[COMRAM] unsigned int 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  2   10[COMRAM] unsigned int 
  9582 ;; Registers used:
  9583 ;;		wreg, status,2, status,0, prodl, prodh
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/1
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9589 ;;      Params:         4       0       0       0       0       0       0       0       0
  9590 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9592 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9593 ;;Total ram usage:        6 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    5
  9596 ;; This function calls:
  9597 ;;		Nothing
  9598 ;; This function is called by:
  9599 ;;		_mpap_movetoNozzle
  9600 ;;		_disp7s_write_i
  9601 ;;		_nozzle_isEnabled
  9602 ;;		_pulsonic_getTotalSum_mlh
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text75
  9607  002928                     __ptext75:
  9608                           	opt callstack 0
  9609  002928                     ___wmul:
  9610                           	opt callstack 21
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;incstack = 0
  9614  002928  500B               	movf	___wmul@multiplier,w,c
  9615  00292A  020D               	mulwf	___wmul@multiplicand,c
  9616  00292C  CFF3 F00F          	movff	prodl,___wmul@product
  9617  002930  CFF4 F010          	movff	prodh,___wmul@product+1
  9618  002934  500B               	movf	___wmul@multiplier,w,c
  9619  002936  020E               	mulwf	___wmul@multiplicand+1,c
  9620  002938  50F3               	movf	prodl,w,c
  9621  00293A  2610               	addwf	___wmul@product+1,f,c
  9622  00293C  500C               	movf	___wmul@multiplier+1,w,c
  9623  00293E  020D               	mulwf	___wmul@multiplicand,c
  9624  002940  50F3               	movf	prodl,w,c
  9625  002942  2610               	addwf	___wmul@product+1,f,c
  9626  002944  C00F  F00B         	movff	___wmul@product,?___wmul
  9627  002948  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  9628  00294C  0012               	return		;funcret
  9629  00294E                     __end_of___wmul:
  9630                           	opt callstack 0
  9631                           
  9632 ;; *************** function _mpap_isIdle *****************
  9633 ;; Defined at:
  9634 ;;		line 220 in file "mpap.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;		None
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      char 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2
  9643 ;; Tracked objects:
  9644 ;;		On entry : 3F/0
  9645 ;;		On exit  : 3F/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9648 ;;      Params:         0       0       0       0       0       0       0       0       0
  9649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9651 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9652 ;;Total ram usage:        0 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    5
  9655 ;; This function calls:
  9656 ;;		Nothing
  9657 ;; This function is called by:
  9658 ;;		_autoMode_job
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text76
  9663  002AF4                     __ptext76:
  9664                           	opt callstack 0
  9665  002AF4                     _mpap_isIdle:
  9666                           	opt callstack 24
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;mpap.c: 222: if (mpap.mode == MPAP_IDLE_MODE)
  9670                           
  9671                           ;incstack = 0
  9672  002AF4  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  9673  002AF6  A4D8               	btfss	status,2,c
  9674  002AF8  D002               	goto	l5557
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;mpap.c: 223: {return 1;}
  9678  002AFA  0E01               	movlw	1
  9679  002AFC  0012               	return	
  9680  002AFE                     l5557:
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;mpap.c: 224: return 0;
  9684  002AFE  0E00               	movlw	0
  9685                           
  9686                           ; BSR set to: 0
  9687  002B00  0012               	return		;funcret
  9688  002B02                     __end_of_mpap_isIdle:
  9689                           	opt callstack 0
  9690                           
  9691 ;; *************** function _autoMode_kb *****************
  9692 ;; Defined at:
  9693 ;;		line 84 in file "automode.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;		None
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  cod_ret         1   11[COMRAM] char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      char 
  9700 ;; Registers used:
  9701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9702 ;; Tracked objects:
  9703 ;;		On entry : 3F/0
  9704 ;;		On exit  : 3F/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9707 ;;      Params:         0       0       0       0       0       0       0       0       0
  9708 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9710 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9711 ;;Total ram usage:        1 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:    6
  9714 ;; This function calls:
  9715 ;;		_ikb_key_is_ready2read
  9716 ;;		_ikb_key_was_read
  9717 ;;		_visMode_init
  9718 ;; This function is called by:
  9719 ;;		_autoMode_job
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           	psect	text77
  9724  001FE0                     __ptext77:
  9725                           	opt callstack 0
  9726  001FE0                     _autoMode_kb:
  9727                           	opt callstack 23
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;automode.c: 86: int8_t cod_ret = 0;
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;incstack = 0
  9734  001FE0  0E00               	movlw	0
  9735  001FE2  6E0C               	movwf	autoMode_kb@cod_ret,c
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;automode.c: 88: if (ikb_key_is_ready2read(0))
  9739  001FE4  0E00               	movlw	0
  9740  001FE6  EC1A  F015         	call	_ikb_key_is_ready2read
  9741  001FEA  0900               	iorlw	0
  9742  001FEC  B4D8               	btfsc	status,2,c
  9743  001FEE  D008               	goto	l5613
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;automode.c: 89: {;automode.c: 90: ikb_key_was_read(0);
  9747  001FF0  0E00               	movlw	0
  9748  001FF2  EC4E  F015         	call	_ikb_key_was_read
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;automode.c: 92: visMode_init(0x00);
  9752  001FF6  0E00               	movlw	0
  9753  001FF8  EC81  F015         	call	_visMode_init
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;automode.c: 93: cod_ret = 1;
  9757  001FFC  0E01               	movlw	1
  9758  001FFE  6E0C               	movwf	autoMode_kb@cod_ret,c
  9759  002000                     l5613:
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;automode.c: 94: };automode.c: 95: if (ikb_key_is_ready2read(1))
  9763  002000  0E01               	movlw	1
  9764  002002  EC1A  F015         	call	_ikb_key_is_ready2read
  9765  002006  0900               	iorlw	0
  9766  002008  B4D8               	btfsc	status,2,c
  9767  00200A  D008               	goto	l5621
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;automode.c: 96: {;automode.c: 97: ikb_key_was_read(1);
  9771  00200C  0E01               	movlw	1
  9772  00200E  EC4E  F015         	call	_ikb_key_was_read
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;automode.c: 99: visMode_init((8+1)-1);
  9776  002012  0E08               	movlw	8
  9777  002014  EC81  F015         	call	_visMode_init
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;automode.c: 100: cod_ret = 1;
  9781  002018  0E01               	movlw	1
  9782  00201A  6E0C               	movwf	autoMode_kb@cod_ret,c
  9783  00201C                     l5621:
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;automode.c: 101: };automode.c: 102: if (ikb_key_is_ready2read(2))
  9787  00201C  0E02               	movlw	2
  9788  00201E  EC1A  F015         	call	_ikb_key_is_ready2read
  9789  002022  0900               	iorlw	0
  9790  002024  B4D8               	btfsc	status,2,c
  9791  002026  D003               	goto	l811
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;automode.c: 103: {;automode.c: 104: ikb_key_was_read(2);
  9795  002028  0E02               	movlw	2
  9796  00202A  EC4E  F015         	call	_ikb_key_was_read
  9797  00202E                     l811:
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;automode.c: 106: };automode.c: 107: if (ikb_key_is_ready2read(3))
  9801  00202E  0E03               	movlw	3
  9802  002030  EC1A  F015         	call	_ikb_key_is_ready2read
  9803  002034  0900               	iorlw	0
  9804  002036  B4D8               	btfsc	status,2,c
  9805  002038  D003               	goto	l812
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;automode.c: 108: {;automode.c: 109: ikb_key_was_read(3);
  9809  00203A  0E03               	movlw	3
  9810  00203C  EC4E  F015         	call	_ikb_key_was_read
  9811  002040                     l812:
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;automode.c: 111: };automode.c: 112: if (ikb_key_is_ready2read(4))
  9815  002040  0E04               	movlw	4
  9816  002042  EC1A  F015         	call	_ikb_key_is_ready2read
  9817  002046  0900               	iorlw	0
  9818  002048  B4D8               	btfsc	status,2,c
  9819  00204A  D005               	goto	l5631
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;automode.c: 113: {;automode.c: 114: cod_ret = 2;
  9823  00204C  0E02               	movlw	2
  9824  00204E  6E0C               	movwf	autoMode_kb@cod_ret,c
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;automode.c: 115: ikb_key_was_read(4);
  9828  002050  0E04               	movlw	4
  9829  002052  EC4E  F015         	call	_ikb_key_was_read
  9830  002056                     l5631:
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;automode.c: 117: };automode.c: 118: return cod_ret;
  9834  002056  500C               	movf	autoMode_kb@cod_ret,w,c
  9835                           
  9836                           ; BSR set to: 0
  9837  002058  0012               	return		;funcret
  9838  00205A                     __end_of_autoMode_kb:
  9839                           	opt callstack 0
  9840                           
  9841 ;; *************** function _visMode_init *****************
  9842 ;; Defined at:
  9843 ;;		line 14 in file "visualizerMode.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  numVista        1    wreg     char 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;  numVista        1   10[COMRAM] char 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      void 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2
  9852 ;; Tracked objects:
  9853 ;;		On entry : 3F/0
  9854 ;;		On exit  : 3F/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9857 ;;      Params:         0       0       0       0       0       0       0       0       0
  9858 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9860 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9861 ;;Total ram usage:        1 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    5
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_autoMode_kb
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text78
  9872  002B02                     __ptext78:
  9873                           	opt callstack 0
  9874  002B02                     _visMode_init:
  9875                           	opt callstack 23
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;incstack = 0
  9879                           ;visMode_init@numVista stored from wreg
  9880  002B02  6E0B               	movwf	visMode_init@numVista,c
  9881                           
  9882                           ;visualizerMode.c: 16: visMode.numVista = numVista;
  9883  002B04  C00B  F0BE         	movff	visMode_init@numVista,_visMode+1
  9884                           
  9885                           ;visualizerMode.c: 17: visMode.disp7s_accessReq = 1;
  9886  002B08  0E01               	movlw	1
  9887  002B0A  0100               	movlb	0	; () banked
  9888  002B0C  6FBD               	movwf	_visMode& (0+255),b
  9889                           
  9890                           ; BSR set to: 0
  9891  002B0E  0012               	return		;funcret
  9892  002B10                     __end_of_visMode_init:
  9893                           	opt callstack 0
  9894                           
  9895 ;; *************** function _ikb_key_was_read *****************
  9896 ;; Defined at:
  9897 ;;		line 434 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;  k               1    wreg     unsigned char 
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;  k               1   10[COMRAM] unsigned char 
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      void 
  9904 ;; Registers used:
  9905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 3F/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9911 ;;      Params:         0       0       0       0       0       0       0       0       0
  9912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9914 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9915 ;;Total ram usage:        1 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; Hardware stack levels required when called:    5
  9918 ;; This function calls:
  9919 ;;		Nothing
  9920 ;; This function is called by:
  9921 ;;		_autoMode_kb
  9922 ;;		_visMode_kb
  9923 ;;		_configMode_kb
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text79
  9928  002A9C                     __ptext79:
  9929                           	opt callstack 0
  9930  002A9C                     _ikb_key_was_read:
  9931                           	opt callstack 23
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;incstack = 0
  9935                           ;ikb_key_was_read@k stored from wreg
  9936  002A9C  6E0B               	movwf	ikb_key_was_read@k,c
  9937                           
  9938                           ;ikb.c: 436: key[k].bf.ReadyToRead = 0;
  9939  002A9E  500B               	movf	ikb_key_was_read@k,w,c
  9940  002AA0  0D10               	mullw	16
  9941  002AA2  50F3               	movf	prodl,w,c
  9942  002AA4  0F6A               	addlw	low (_key+10)
  9943  002AA6  6ED9               	movwf	fsr2l,c
  9944  002AA8  6ADA               	clrf	fsr2h,c
  9945  002AAA  0100               	movlb	0	; () banked
  9946  002AAC  9CDF               	bcf	indf2,6,c
  9947                           
  9948                           ; BSR set to: 0
  9949  002AAE  0012               	return		;funcret
  9950  002AB0                     __end_of_ikb_key_was_read:
  9951                           	opt callstack 0
  9952                           
  9953 ;; *************** function _ikb_key_is_ready2read *****************
  9954 ;; Defined at:
  9955 ;;		line 426 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  k               1    wreg     unsigned char 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  k               1   10[COMRAM] unsigned char 
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      unsigned char 
  9962 ;; Registers used:
  9963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9964 ;; Tracked objects:
  9965 ;;		On entry : 3F/0
  9966 ;;		On exit  : 3F/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9969 ;;      Params:         0       0       0       0       0       0       0       0       0
  9970 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9972 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9973 ;;Total ram usage:        1 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    5
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_autoMode_kb
  9980 ;;		_visMode_kb
  9981 ;;		_configMode_kb
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text80
  9986  002A34                     __ptext80:
  9987                           	opt callstack 0
  9988  002A34                     _ikb_key_is_ready2read:
  9989                           	opt callstack 23
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;incstack = 0
  9993                           ;ikb_key_is_ready2read@k stored from wreg
  9994  002A34  6E0B               	movwf	ikb_key_is_ready2read@k,c
  9995                           
  9996                           ;ikb.c: 428: return key[k].bf.ReadyToRead;
  9997  002A36  500B               	movf	ikb_key_is_ready2read@k,w,c
  9998  002A38  0D10               	mullw	16
  9999  002A3A  50F3               	movf	prodl,w,c
 10000  002A3C  0F6A               	addlw	low (_key+10)
 10001  002A3E  6ED9               	movwf	fsr2l,c
 10002  002A40  6ADA               	clrf	fsr2h,c
 10003  002A42  0100               	movlb	0	; () banked
 10004  002A44  ACDF               	btfss	indf2,6,c
 10005  002A46  D002               	goto	u6170
 10006  002A48  0E01               	movlw	1
 10007  002A4A  0012               	return	
 10008  002A4C                     u6170:
 10009  002A4C  0E00               	movlw	0
 10010                           
 10011                           ; BSR set to: 0
 10012  002A4E  0012               	return		;funcret
 10013  002A50                     __end_of_ikb_key_is_ready2read:
 10014                           	opt callstack 0
 10015                           
 10016 ;; *************** function _INTERRUPCION *****************
 10017 ;; Defined at:
 10018 ;;		line 242 in file "main.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;		None
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;		None
 10023 ;; Return value:  Size  Location     Type
 10024 ;;                  1    wreg      void 
 10025 ;; Registers used:
 10026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10027 ;; Tracked objects:
 10028 ;;		On entry : 0/0
 10029 ;;		On exit  : 0/0
 10030 ;;		Unchanged: 0/0
 10031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10032 ;;      Params:         0       0       0       0       0       0       0       0       0
 10033 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10034 ;;      Temps:          6       0       0       0       0       0       0       0       0
 10035 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10036 ;;Total ram usage:        6 bytes
 10037 ;; Hardware stack levels used:    1
 10038 ;; Hardware stack levels required when called:    4
 10039 ;; This function calls:
 10040 ;;		_mpap_job
 10041 ;; This function is called by:
 10042 ;;		Interrupt level 2
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           	psect	intcode
 10047  000008                     __pintcode:
 10048                           	opt callstack 0
 10049  000008                     _INTERRUPCION:
 10050                           	opt callstack 18
 10051                           
 10052                           ; BSR set to: 0
 10053                           ;incstack = 0
 10054  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10055  00000A  EDB6  F012         	call	int_func,f	;refresh shadow registers
 10056                           
 10057                           	psect	intcode_body
 10058  00256C                     __pintcode_body:
 10059                           	opt callstack 18
 10060  00256C                     int_func:
 10061                           	opt callstack 18
 10062  00256C  0006               	pop		; remove dummy address from shadow register refresh
 10063  00256E  CFFA F005          	movff	pclath,??_INTERRUPCION
 10064  002572  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
 10065  002576  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
 10066  00257A  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
 10067  00257E  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
 10068  002582  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
 10069                           
 10070                           ;main.c: 244: if (TMR0IF)
 10071  002586  A4F2               	btfss	4082,2,c	;volatile
 10072  002588  D008               	goto	i2l162
 10073                           
 10074                           ;main.c: 245: {;main.c: 246: isr_flag.f1ms = 1;
 10075  00258A  0100               	movlb	0	; () banked
 10076  00258C  81CC               	bsf	_isr_flag& (0+255),0,b	;volatile
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;main.c: 247: mpap_job();
 10080  00258E  EC24  F013         	call	_mpap_job	;wreg free
 10081                           
 10082                           ;main.c: 249: TMR0IF = 0;
 10083  002592  94F2               	bcf	4082,2,c	;volatile
 10084                           
 10085                           ;main.c: 250: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
 10086  002594  68D7               	setf	4055,c	;volatile
 10087                           
 10088                           ;main.c: 251: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
 10089  002596  0ED1               	movlw	209
 10090  002598  6ED6               	movwf	4054,c	;volatile
 10091  00259A                     i2l162:
 10092  00259A  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
 10093  00259E  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
 10094  0025A2  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
 10095  0025A6  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
 10096  0025AA  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
 10097  0025AE  C005  FFFA         	movff	??_INTERRUPCION,pclath
 10098  0025B2  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10099  0025B4  0011               	retfie		f
 10100  0025B6                     __end_of_INTERRUPCION:
 10101                           	opt callstack 0
 10102                           
 10103 ;; *************** function _mpap_job *****************
 10104 ;; Defined at:
 10105 ;;		line 139 in file "mpap.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;		None
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  cod_ret         1    0        char 
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      char 
 10112 ;; Registers used:
 10113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10114 ;; Tracked objects:
 10115 ;;		On entry : 3F/0
 10116 ;;		On exit  : 3E/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10119 ;;      Params:         0       0       0       0       0       0       0       0       0
 10120 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10121 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10122 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10123 ;;Total ram usage:        1 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; Hardware stack levels required when called:    3
 10126 ;; This function calls:
 10127 ;;		__mpap_off
 10128 ;;		_mpap_homming
 10129 ;;		_mpap_normal_mode
 10130 ;; This function is called by:
 10131 ;;		_INTERRUPCION
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text82
 10136  002648                     __ptext82:
 10137                           	opt callstack 0
 10138  002648                     _mpap_job:
 10139                           	opt callstack 18
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;mpap.c: 141: int8_t cod_ret;;mpap.c: 143: if (mpap.mode == MPAP_HOMMING_MODE)
 10143                           
 10144                           ;incstack = 0
 10145  002648  0E02               	movlw	2
 10146  00264A  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
 10147  00264C  A4D8               	btfss	status,2,c
 10148  00264E  D003               	goto	i2l4671
 10149                           
 10150                           ; BSR set to: 0
 10151  002650  EC81  F011         	call	_mpap_homming	;wreg free
 10152  002654  0012               	return	
 10153  002656                     i2l4671:
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;mpap.c: 146: else if (mpap.mode == MPAP_NORMAL_MODE)
 10157  002656  0E03               	movlw	3
 10158  002658  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
 10159  00265A  A4D8               	btfss	status,2,c
 10160  00265C  D003               	goto	i2l4675
 10161                           
 10162                           ; BSR set to: 0
 10163  00265E  ECDB  F012         	call	_mpap_normal_mode	;wreg free
 10164  002662  0012               	return	
 10165  002664                     i2l4675:
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;mpap.c: 149: else if (mpap.mode == MPAP_STALL_MODE)
 10169  002664  05B7               	decf	(_mpap+7)& (0+255),w,b	;volatile
 10170  002666  A4D8               	btfss	status,2,c
 10171  002668  0012               	return	
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;mpap.c: 150: {;mpap.c: 151: mpap.numSteps_tomove = 0x00;
 10175  00266A  0E00               	movlw	0
 10176  00266C  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
 10177  00266E  0E00               	movlw	0
 10178  002670  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;mpap.c: 152: mpap_off();
 10182  002672  D801               	call	i2u528_48
 10183  002674  D00A               	goto	i2u528_49
 10184  002676                     i2u528_48:
 10185  002676  0005               	push	
 10186  002678  6EFA               	movwf	pclath,c
 10187  00267A  51EC               	movf	_mpap_off& (0+255),w,b
 10188  00267C  6EFD               	movwf	tosl,c
 10189  00267E  51ED               	movf	(_mpap_off+1)& (0+255),w,b
 10190  002680  6EFE               	movwf	tosh,c
 10191  002682  50F8               	movf	tblptru,w,c
 10192  002684  6EFF               	movwf	tosu,c
 10193  002686  50FA               	movf	pclath,w,c
 10194  002688  0012               	return		;indir
 10195  00268A                     i2u528_49:
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;mpap.c: 154: mpap.mode = MPAP_IDLE_MODE;
 10199  00268A  0E00               	movlw	0
 10200  00268C  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
 10201  00268E  0012               	return	
 10202  002690                     __end_of_mpap_job:
 10203                           	opt callstack 0
 10204                           
 10205 ;; *************** function _mpap_normal_mode *****************
 10206 ;; Defined at:
 10207 ;;		line 119 in file "mpap.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;		None
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;  cod_ret         1    1[COMRAM] char 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      char 
 10214 ;; Registers used:
 10215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 3F/0
 10218 ;;		On exit  : 3F/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10221 ;;      Params:         0       0       0       0       0       0       0       0       0
 10222 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10223 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10224 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10225 ;;Total ram usage:        1 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    2
 10228 ;; This function calls:
 10229 ;;		_mpap_do1step
 10230 ;; This function is called by:
 10231 ;;		_mpap_job
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text83
 10236  0025B6                     __ptext83:
 10237                           	opt callstack 0
 10238  0025B6                     _mpap_normal_mode:
 10239                           	opt callstack 18
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;mpap.c: 121: int8_t cod_ret = 0;
 10243                           
 10244                           ;incstack = 0
 10245  0025B6  0E00               	movlw	0
 10246  0025B8  6E02               	movwf	mpap_normal_mode@cod_ret,c
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;mpap.c: 122: if (mpap.numSteps_tomove!=0)
 10250  0025BA  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
 10251  0025BC  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
 10252  0025BE  B4D8               	btfsc	status,2,c
 10253  0025C0  D01D               	goto	i2l484
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;mpap.c: 123: {;mpap.c: 124: mpap_do1step(mpap.KI);
 10257  0025C2  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
 10258  0025C4  EC69  F013         	call	_mpap_do1step
 10259                           
 10260                           ;mpap.c: 126: mpap.counter_steps+= mpap.KI;
 10261  0025C8  0100               	movlb	0	; () banked
 10262  0025CA  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
 10263  0025CC  27B2               	addwf	(_mpap+2)& (0+255),f,b	;volatile
 10264  0025CE  0E00               	movlw	0
 10265  0025D0  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
 10266  0025D2  0EFF               	movlw	255
 10267  0025D4  23B3               	addwfc	(_mpap+3)& (0+255),f,b	;volatile
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;mpap.c: 128: mpap.numSteps_current+= mpap.KI;
 10271  0025D6  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
 10272  0025D8  27B0               	addwf	_mpap& (0+255),f,b	;volatile
 10273  0025DA  0E00               	movlw	0
 10274  0025DC  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
 10275  0025DE  0EFF               	movlw	255
 10276  0025E0  23B1               	addwfc	(_mpap+1)& (0+255),f,b	;volatile
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;mpap.c: 130: if ( mpap.counter_steps== mpap.numSteps_tomove)
 10280  0025E2  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
 10281  0025E4  19B2               	xorwf	(_mpap+2)& (0+255),w,b	;volatile
 10282  0025E6  E10A               	bnz	i2l484
 10283  0025E8  51B5               	movf	(_mpap+5)& (0+255),w,b	;volatile
 10284  0025EA  19B3               	xorwf	(_mpap+3)& (0+255),w,b	;volatile
 10285  0025EC  A4D8               	btfss	status,2,c
 10286  0025EE  D006               	goto	i2l484
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;mpap.c: 131: {;mpap.c: 132: mpap.numSteps_tomove = 0;
 10290  0025F0  0E00               	movlw	0
 10291  0025F2  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
 10292  0025F4  0E00               	movlw	0
 10293  0025F6  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
 10294                           
 10295                           ;mpap.c: 133: cod_ret = 1;
 10296  0025F8  0E01               	movlw	1
 10297  0025FA  6E02               	movwf	mpap_normal_mode@cod_ret,c
 10298  0025FC                     i2l484:
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;mpap.c: 134: };mpap.c: 135: };mpap.c: 136: return cod_ret;
 10302  0025FC  5002               	movf	mpap_normal_mode@cod_ret,w,c
 10303                           
 10304                           ; BSR set to: 0
 10305  0025FE  0012               	return		;funcret
 10306  002600                     __end_of_mpap_normal_mode:
 10307                           	opt callstack 0
 10308                           
 10309 ;; *************** function _mpap_homming *****************
 10310 ;; Defined at:
 10311 ;;		line 94 in file "mpap.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;  cod_ret         1    2[COMRAM] char 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      char 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 3F/0
 10322 ;;		On exit  : 3E/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0
 10326 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10327 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10328 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10329 ;;Total ram usage:        2 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:    2
 10332 ;; This function calls:
 10333 ;;		_mpap_do1step
 10334 ;; This function is called by:
 10335 ;;		_mpap_job
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text84
 10340  002302                     __ptext84:
 10341                           	opt callstack 0
 10342  002302                     _mpap_homming:
 10343                           	opt callstack 18
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;mpap.c: 96: int8_t cod_ret = 0;
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;incstack = 0
 10350  002302  0E00               	movlw	0
 10351  002304  6E03               	movwf	mpap_homming@cod_ret,c
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;mpap.c: 97: if (mpap.numSteps_tomove!=0)
 10355  002306  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
 10356  002308  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
 10357  00230A  B4D8               	btfsc	status,2,c
 10358  00230C  D029               	goto	i2l478
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;mpap.c: 98: {;mpap.c: 99: mpap_do1step(mpap.KI);
 10362  00230E  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
 10363  002310  EC69  F013         	call	_mpap_do1step
 10364                           
 10365                           ;mpap.c: 101: mpap.counter_steps+= mpap.KI;
 10366  002314  0100               	movlb	0	; () banked
 10367  002316  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
 10368  002318  27B2               	addwf	(_mpap+2)& (0+255),f,b	;volatile
 10369  00231A  0E00               	movlw	0
 10370  00231C  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
 10371  00231E  0EFF               	movlw	255
 10372  002320  23B3               	addwfc	(_mpap+3)& (0+255),f,b	;volatile
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;mpap.c: 103: if (((PORTE & (1<<1))>>1) == 0)
 10376  002322  CF84 F002          	movff	3972,??_mpap_homming	;volatile
 10377  002326  90D8               	bcf	status,0,c
 10378  002328  3202               	rrcf	??_mpap_homming,f,c
 10379  00232A  B002               	btfsc	??_mpap_homming,0,c
 10380  00232C  D00A               	goto	i2l4047
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;mpap.c: 104: {;mpap.c: 105: mpap.numSteps_tomove = 0x0000;
 10384  00232E  0E00               	movlw	0
 10385  002330  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
 10386  002332  0E00               	movlw	0
 10387  002334  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
 10388                           
 10389                           ;mpap.c: 106: mpap.numSteps_current = 0x0000;
 10390  002336  0E00               	movlw	0
 10391  002338  6FB1               	movwf	(_mpap+1)& (0+255),b	;volatile
 10392  00233A  0E00               	movlw	0
 10393  00233C  6FB0               	movwf	_mpap& (0+255),b	;volatile
 10394                           
 10395                           ;mpap.c: 107: cod_ret = 1;
 10396  00233E  0E01               	movlw	1
 10397  002340  6E03               	movwf	mpap_homming@cod_ret,c
 10398  002342                     i2l4047:
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;mpap.c: 108: };mpap.c: 109: if ( mpap.counter_steps == mpap.numSteps_tomove)
 10402  002342  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
 10403  002344  19B2               	xorwf	(_mpap+2)& (0+255),w,b	;volatile
 10404  002346  E10C               	bnz	i2l478
 10405  002348  51B5               	movf	(_mpap+5)& (0+255),w,b	;volatile
 10406  00234A  19B3               	xorwf	(_mpap+3)& (0+255),w,b	;volatile
 10407  00234C  A4D8               	btfss	status,2,c
 10408  00234E  D008               	goto	i2l478
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;mpap.c: 110: {;mpap.c: 111: mpap.numSteps_tomove = 0x0000;
 10412  002350  0E00               	movlw	0
 10413  002352  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
 10414  002354  0E00               	movlw	0
 10415  002356  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
 10416                           
 10417                           ;mpap.c: 112: cod_ret = 1;
 10418  002358  0E01               	movlw	1
 10419  00235A  6E03               	movwf	mpap_homming@cod_ret,c
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;mpap.c: 113: pulsonic.errors.flag.mpap_home_sensor = 1;
 10423  00235C  0101               	movlb	1	; () banked
 10424  00235E  813B               	bsf	(_pulsonic+59)& (0+255),0,b
 10425  002360                     i2l478:
 10426                           
 10427                           ;mpap.c: 114: };mpap.c: 115: };mpap.c: 116: return cod_ret;
 10428  002360  5003               	movf	mpap_homming@cod_ret,w,c
 10429  002362  0012               	return		;funcret
 10430  002364                     __end_of_mpap_homming:
 10431                           	opt callstack 0
 10432                           
 10433 ;; *************** function _mpap_do1step *****************
 10434 ;; Defined at:
 10435 ;;		line 75 in file "mpap.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  KI              1    wreg     char 
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;  KI              1    0[COMRAM] char 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  1    wreg      void 
 10442 ;; Registers used:
 10443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10444 ;; Tracked objects:
 10445 ;;		On entry : 3F/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10449 ;;      Params:         0       0       0       0       0       0       0       0       0
 10450 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10452 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10453 ;;Total ram usage:        1 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; Hardware stack levels required when called:    1
 10456 ;; This function calls:
 10457 ;;		__mpap_step1
 10458 ;;		__mpap_step2
 10459 ;;		__mpap_step3
 10460 ;;		__mpap_step4
 10461 ;; This function is called by:
 10462 ;;		_mpap_homming
 10463 ;;		_mpap_normal_mode
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text85
 10468  0026D2                     __ptext85:
 10469                           	opt callstack 0
 10470  0026D2                     _mpap_do1step:
 10471                           	opt callstack 18
 10472                           
 10473                           ;incstack = 0
 10474                           ;mpap_do1step@KI stored from wreg
 10475  0026D2  6E01               	movwf	mpap_do1step@KI,c
 10476                           
 10477                           ;mpap.c: 77: static int8_t i = -1;;mpap.c: 79: i= i + KI;
 10478  0026D4  5051               	movf	mpap_do1step@i,w,c
 10479  0026D6  2401               	addwf	mpap_do1step@KI,w,c
 10480  0026D8  6E51               	movwf	mpap_do1step@i,c
 10481                           
 10482                           ;mpap.c: 80: if (i>3){i=0;}
 10483  0026DA  5051               	movf	mpap_do1step@i,w,c
 10484  0026DC  0A80               	xorlw	128
 10485  0026DE  0F7C               	addlw	-132
 10486  0026E0  A0D8               	btfss	status,0,c
 10487  0026E2  D002               	goto	i2l3807
 10488  0026E4  0E00               	movlw	0
 10489  0026E6  6E51               	movwf	mpap_do1step@i,c
 10490  0026E8                     i2l3807:
 10491                           
 10492                           ;mpap.c: 81: if (i<0){i=3;}
 10493  0026E8  AE51               	btfss	mpap_do1step@i,7,c
 10494  0026EA  D002               	goto	i2l3811
 10495  0026EC  0E03               	movlw	3
 10496  0026EE  6E51               	movwf	mpap_do1step@i,c
 10497  0026F0                     i2l3811:
 10498                           
 10499                           ;mpap.c: 83: mpap_step[i]();
 10500  0026F0  5051               	movf	mpap_do1step@i,w,c
 10501  0026F2  0D02               	mullw	2
 10502  0026F4  50F3               	movf	prodl,w,c
 10503  0026F6  0FE1               	addlw	low _mpap_step
 10504  0026F8  6ED9               	movwf	fsr2l,c
 10505  0026FA  6ADA               	clrf	fsr2h,c
 10506  0026FC  D801               	call	i2u353_48
 10507  0026FE  0012               	return	
 10508  002700                     i2u353_48:
 10509  002700  0005               	push	
 10510  002702  6EFA               	movwf	pclath,c
 10511  002704  50DE               	movf	postinc2,w,c
 10512  002706  6EFD               	movwf	tosl,c
 10513  002708  50DE               	movf	postinc2,w,c
 10514  00270A  6EFE               	movwf	tosh,c
 10515  00270C  50F8               	movf	tblptru,w,c
 10516  00270E  6EFF               	movwf	tosu,c
 10517  002710  50FA               	movf	pclath,w,c
 10518  002712  0012               	return		;indir
 10519  002714                     __end_of_mpap_do1step:
 10520                           	opt callstack 0
 10521                           
 10522 ;; *************** function __mpap_step3 *****************
 10523 ;; Defined at:
 10524 ;;		line 21 in file "mpap.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;		None
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;		None
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		status,2, status,0
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10538 ;;      Params:         0       0       0       0       0       0       0       0       0
 10539 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10540 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10541 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10542 ;;Total ram usage:        0 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; This function calls:
 10545 ;;		Nothing
 10546 ;; This function is called by:
 10547 ;;		_mpap_do1step
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           	psect	text86
 10552  002B50                     __ptext86:
 10553                           	opt callstack 0
 10554  002B50                     __mpap_step3:
 10555                           	opt callstack 18
 10556                           
 10557                           ;incstack = 0
 10558                           ;mpap.c: 23: do{LATD &= ~(1<<0);}while(0);
 10559  002B50  908C               	bcf	3980,0,c	;volatile
 10560                           
 10561                           ;mpap.c: 24: do{LATD |= 1<<1;}while(0);
 10562  002B52  828C               	bsf	3980,1,c	;volatile
 10563                           
 10564                           ;mpap.c: 25: do{LATD &= ~(1<<2);}while(0);
 10565  002B54  948C               	bcf	3980,2,c	;volatile
 10566                           
 10567                           ;mpap.c: 26: do{LATD &= ~(1<<3);}while(0);
 10568  002B56  968C               	bcf	3980,3,c	;volatile
 10569  002B58  0012               	return		;funcret
 10570  002B5A                     __end_of__mpap_step3:
 10571                           	opt callstack 0
 10572                           
 10573 ;; *************** function __mpap_step2 *****************
 10574 ;; Defined at:
 10575 ;;		line 13 in file "mpap.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;		None
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;		None
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  1    wreg      void 
 10582 ;; Registers used:
 10583 ;;		status,2, status,0
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/0
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10589 ;;      Params:         0       0       0       0       0       0       0       0       0
 10590 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10592 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10593 ;;Total ram usage:        0 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; This function calls:
 10596 ;;		Nothing
 10597 ;; This function is called by:
 10598 ;;		_mpap_do1step
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text87
 10603  002B5A                     __ptext87:
 10604                           	opt callstack 0
 10605  002B5A                     __mpap_step2:
 10606                           	opt callstack 18
 10607                           
 10608                           ;incstack = 0
 10609                           ;mpap.c: 15: do{LATD &= ~(1<<0);}while(0);
 10610  002B5A  908C               	bcf	3980,0,c	;volatile
 10611                           
 10612                           ;mpap.c: 16: do{LATD &= ~(1<<1);}while(0);
 10613  002B5C  928C               	bcf	3980,1,c	;volatile
 10614                           
 10615                           ;mpap.c: 17: do{LATD |= 1<<2;}while(0);
 10616  002B5E  848C               	bsf	3980,2,c	;volatile
 10617                           
 10618                           ;mpap.c: 18: do{LATD &= ~(1<<3);}while(0);
 10619  002B60  968C               	bcf	3980,3,c	;volatile
 10620  002B62  0012               	return		;funcret
 10621  002B64                     __end_of__mpap_step2:
 10622                           	opt callstack 0
 10623                           
 10624 ;; *************** function __mpap_step1 *****************
 10625 ;; Defined at:
 10626 ;;		line 5 in file "mpap.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		status,2, status,0
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10643 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        0 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; This function calls:
 10647 ;;		Nothing
 10648 ;; This function is called by:
 10649 ;;		_mpap_do1step
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text88
 10654  002B64                     __ptext88:
 10655                           	opt callstack 0
 10656  002B64                     __mpap_step1:
 10657                           	opt callstack 18
 10658                           
 10659                           ;incstack = 0
 10660                           ;mpap.c: 7: do{LATD &= ~(1<<0);}while(0);
 10661  002B64  908C               	bcf	3980,0,c	;volatile
 10662                           
 10663                           ;mpap.c: 8: do{LATD &= ~(1<<1);}while(0);
 10664  002B66  928C               	bcf	3980,1,c	;volatile
 10665                           
 10666                           ;mpap.c: 9: do{LATD &= ~(1<<2);}while(0);
 10667  002B68  948C               	bcf	3980,2,c	;volatile
 10668                           
 10669                           ;mpap.c: 10: do{LATD |= 1<<3;}while(0);
 10670  002B6A  868C               	bsf	3980,3,c	;volatile
 10671  002B6C  0012               	return		;funcret
 10672  002B6E                     __end_of__mpap_step1:
 10673                           	opt callstack 0
 10674                           
 10675 ;; *************** function __mpap_step4 *****************
 10676 ;; Defined at:
 10677 ;;		line 29 in file "mpap.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;		None
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;		None
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      void 
 10684 ;; Registers used:
 10685 ;;		status,2, status,0
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10691 ;;      Params:         0       0       0       0       0       0       0       0       0
 10692 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10693 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10694 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10695 ;;Total ram usage:        0 bytes
 10696 ;; Hardware stack levels used:    1
 10697 ;; This function calls:
 10698 ;;		Nothing
 10699 ;; This function is called by:
 10700 ;;		_mpap_do1step
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text89
 10705  002B6E                     __ptext89:
 10706                           	opt callstack 0
 10707  002B6E                     __mpap_step4:
 10708                           	opt callstack 18
 10709                           
 10710                           ;incstack = 0
 10711                           ;mpap.c: 31: do{LATD |= 1<<0;}while(0);
 10712  002B6E  808C               	bsf	3980,0,c	;volatile
 10713                           
 10714                           ;mpap.c: 32: do{LATD &= ~(1<<1);}while(0);
 10715  002B70  928C               	bcf	3980,1,c	;volatile
 10716                           
 10717                           ;mpap.c: 33: do{LATD &= ~(1<<2);}while(0);
 10718  002B72  948C               	bcf	3980,2,c	;volatile
 10719                           
 10720                           ;mpap.c: 34: do{LATD &= ~(1<<3);}while(0);
 10721  002B74  968C               	bcf	3980,3,c	;volatile
 10722  002B76  0012               	return		;funcret
 10723  002B78                     __end_of__mpap_step4:
 10724                           	opt callstack 0
 10725                           
 10726 ;; *************** function __mpap_off *****************
 10727 ;; Defined at:
 10728 ;;		line 43 in file "mpap.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;		None
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;		None
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  1    wreg      void 
 10735 ;; Registers used:
 10736 ;;		status,2, status,0
 10737 ;; Tracked objects:
 10738 ;;		On entry : 3F/0
 10739 ;;		On exit  : 3F/0
 10740 ;;		Unchanged: 3F/0
 10741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10742 ;;      Params:         0       0       0       0       0       0       0       0       0
 10743 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10745 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10746 ;;Total ram usage:        0 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; This function calls:
 10749 ;;		Nothing
 10750 ;; This function is called by:
 10751 ;;		_mpap_job
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text90
 10756  002B78                     __ptext90:
 10757                           	opt callstack 0
 10758  002B78                     __mpap_off:
 10759                           	opt callstack 20
 10760                           
 10761                           ; BSR set to: 0
 10762                           
 10763                           ; BSR set to: 0
 10764                           
 10765                           ;incstack = 0
 10766                           ;mpap.c: 45: do{LATD &= ~(1<<0);}while(0);
 10767  002B78  908C               	bcf	3980,0,c	;volatile
 10768                           
 10769                           ; BSR set to: 0
 10770                           
 10771                           ;mpap.c: 46: do{LATD &= ~(1<<1);}while(0);
 10772  002B7A  928C               	bcf	3980,1,c	;volatile
 10773                           
 10774                           ; BSR set to: 0
 10775                           
 10776                           ;mpap.c: 47: do{LATD &= ~(1<<2);}while(0);
 10777  002B7C  948C               	bcf	3980,2,c	;volatile
 10778                           
 10779                           ; BSR set to: 0
 10780                           
 10781                           ;mpap.c: 48: do{LATD &= ~(1<<3);}while(0);
 10782  002B7E  968C               	bcf	3980,3,c	;volatile
 10783                           
 10784                           ; BSR set to: 0
 10785  002B80  0012               	return		;funcret
 10786  002B82                     __end_of__mpap_off:
 10787                           	opt callstack 0
 10788                           
 10789                           	psect	text91
 10790  000000                     __ptext91:
 10791                           	opt callstack 0
 10792                           
 10793                           	psect	rparam
 10794  0000                     
 10795                           	psect	temp
 10796  000053                     btemp:
 10797                           	opt callstack 0
 10798  000053                     	ds	1
 10799  0000                     int$flags	set	btemp
 10800  0000                     wtemp8	set	btemp+1
 10801  0000                     ttemp5	set	btemp+1
 10802  0000                     ttemp6	set	btemp+4
 10803  0000                     ttemp7	set	btemp+8
 10804                           tosu	equ	0xFFF
 10805                           tosh	equ	0xFFE
 10806                           tosl	equ	0xFFD
 10807                           stkptr	equ	0xFFC
 10808                           pclatu	equ	0xFFB
 10809                           pclath	equ	0xFFA
 10810                           pcl	equ	0xFF9
 10811                           tblptru	equ	0xFF8
 10812                           tblptrh	equ	0xFF7
 10813                           tblptrl	equ	0xFF6
 10814                           tablat	equ	0xFF5
 10815                           prodh	equ	0xFF4
 10816                           prodl	equ	0xFF3
 10817                           indf0	equ	0xFEF
 10818                           postinc0	equ	0xFEE
 10819                           postdec0	equ	0xFED
 10820                           preinc0	equ	0xFEC
 10821                           plusw0	equ	0xFEB
 10822                           fsr0h	equ	0xFEA
 10823                           fsr0l	equ	0xFE9
 10824                           wreg	equ	0xFE8
 10825                           indf1	equ	0xFE7
 10826                           postinc1	equ	0xFE6
 10827                           postdec1	equ	0xFE5
 10828                           preinc1	equ	0xFE4
 10829                           plusw1	equ	0xFE3
 10830                           fsr1h	equ	0xFE2
 10831                           fsr1l	equ	0xFE1
 10832                           bsr	equ	0xFE0
 10833                           indf2	equ	0xFDF
 10834                           postinc2	equ	0xFDE
 10835                           postdec2	equ	0xFDD
 10836                           preinc2	equ	0xFDC
 10837                           plusw2	equ	0xFDB
 10838                           fsr2h	equ	0xFDA
 10839                           fsr2l	equ	0xFD9
 10840                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        35
    BSS         187
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      82
    BANK0           160     17     159
    BANK1           256      3      68
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_i@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_f@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    disp7s_off@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    S552_disp7s_mux$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    disp7s_mux.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    S296_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S296_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 


Critical Paths under _main in COMRAM

    _main->_configMode_job
    _main->_visMode_job
    _visMode_job->_visMode_disp
    _visMode_kb->_ikb_key_is_ready2read
    _visMode_kb->_ikb_key_was_read
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _disp7s_job->_disp7s_mux_Q
    _disp7s_init->_disp7s_mux_init
    _configMode_job->_configMode_disp
    _configMode_kb->___ftsub
    ___ftsub->___ftadd
    _disp7s_qtyDisp_writeInt->_disp7s_write_i
    _disp7s_qtyDisp_writeText_20_3RAYAS->_disp7s_modeDisp_writeInt
    _disp7s_modeDisp_writeInt->_disp7s_write_i
    _disp7s_write_i->_itoa
    _ps_autoMode_start->_autoMode_init
    _ikb_flush->_ikey_clear_all_flag
    _pulsonic_getTotalSum_mlh->___ftadd
    _disp7s_qtyDisp_writeFloat->_disp7s_write_f
    _disp7s_write_f->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftmul->___ftpack
    ___ftadd->___ftpack
    _disp7s_modeDisp_off->_disp7s_off
    _autoMode_job->_nozzle_isEnabled
    _nozzle_isEnabled->___ftge
    ___ftge->___lwtoft
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_movetoNozzle->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _autoMode_kb->_ikb_key_is_ready2read
    _autoMode_kb->_ikb_key_was_read
    _autoMode_kb->_visMode_init

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _disp7s_qtyDisp_writeFloat->_disp7s_write_f

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    _visMode_disp->_disp7s_qtyDisp_writeFloat
    _configMode_disp->_disp7s_qtyDisp_writeFloat
    _autoMode_init->_disp7s_qtyDisp_writeFloat

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  192333
                                             64 COMRAM     3     3      0
                      _autoMode_init
                       _autoMode_job
                     _check_oilLevel
                  _check_startSignal
                    _configMode_init
                     _configMode_job
                        _disp7s_init
                         _disp7s_job
                 _errorHandler_queue
                          _ikb_flush
                           _ikb_init
                            _ikb_job
                          _mpap_sych
                  _ps_autoMode_start
                      _pulsonic_init
                           _pump_job
                        _visMode_job
 ---------------------------------------------------------------------------------
 (1) _visMode_job                                          1     1      0   28769
                                             63 COMRAM     1     1      0
                       _visMode_disp
                         _visMode_kb
 ---------------------------------------------------------------------------------
 (2) _visMode_kb                                           1     1      0     102
                                             11 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
 ---------------------------------------------------------------------------------
 (2) _visMode_disp                                         4     4      0   28630
                                             59 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
      _disp7s_modeDisp_writeText_oil
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
       _disp7s_qtyDisp_writeText_OFF
 ---------------------------------------------------------------------------------
 (1) _pump_job                                             1     1      0      13
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulsonic_init                                        1     1      0      99
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8968
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     654
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key0 *
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    8314
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      93
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3644
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     285
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _errorHandler_queue                                   6     6      0      65
                                             10 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _disp7s_job                                           3     3      0     263
                                             18 COMRAM     3     3      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
                       _disp7s_mux_Q
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_Q                                         8     8      0     192
                                             10 COMRAM     8     8      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (1) _disp7s_init                                          1     1      0     297
                                             11 COMRAM     1     1      0
                    _disp7s_mux_init
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_init                                      1     1      0      99
                                             10 COMRAM     1     1      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configMode_job                                       1     1      0   41856
                                             63 COMRAM     1     1      0
                    _configMode_disp
                      _configMode_kb
 ---------------------------------------------------------------------------------
 (2) _configMode_kb                                        4     4      0   13189
                                             36 COMRAM     4     4      0
                            ___ftadd
                             ___ftge
                            ___ftsub
              _ikb_key_is_ready2read
                   _ikb_key_was_read
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5754
                                             30 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _configMode_disp                                      4     4      0   28630
                                             59 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
      _disp7s_modeDisp_writeText_oil
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
       _disp7s_qtyDisp_writeText_OFF
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeText_OFF                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeInt                              2     0      2    5581
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeText_oil                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configMode_init                                      1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _check_startSignal                                    0     0      0   30624
 _disp7s_qtyDisp_writeText_20_3RAYAS
                     _is_startSignal
                  _ps_autoMode_start
 ---------------------------------------------------------------------------------
 (2) _is_startSignal                                       1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _disp7s_qtyDisp_writeText_20_3RAYAS                   0     0      0    5671
           _disp7s_modeDisp_writeInt
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeInt                             2     0      2    5671
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_i                                      24    19      5    5370
                                             31 COMRAM    24    19      5
                             ___wmul
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               3     1      2     220
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _check_oilLevel                                       0     0      0   24953
    _disp7s_qtyDisp_writeText_NO_OIL
                        _is_oilLevel
                  _ps_autoMode_start
 ---------------------------------------------------------------------------------
 (1) _ps_autoMode_start                                    0     0      0   24953
                      _autoMode_init
                          _ikb_flush
 ---------------------------------------------------------------------------------
 (2) _ikb_flush                                            0     0      0      99
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (3) _ikey_clear_all_flag                                  1     1      0      99
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _autoMode_init                                        1     1      0   24854
                                             59 COMRAM     1     1      0
                _disp7s_modeDisp_off
          _disp7s_qtyDisp_writeFloat
           _pulsonic_getTotalSum_mlh
 ---------------------------------------------------------------------------------
 (3) _pulsonic_getTotalSum_mlh                             8     5      3    6973
                                             30 COMRAM     8     5      3
                            ___ftadd
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeFloat                            3     0      3   17220
                                              0 BANK1      3     0      3
                     _disp7s_write_f
           _pulsonic_getTotalSum_mlh (ARG)
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_f                                      28    22      6   16919
                                             48 COMRAM    11     5      6
                                              0 BANK0     17    17      0
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                         _disp7s_off
                               _itoa
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 6     1      5    2496
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     551
                                             33 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4427
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5338
                                             18 COMRAM    12     6      6
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3253
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_off                                  0     0      0     630
                         _disp7s_off
 ---------------------------------------------------------------------------------
 (5) _disp7s_off                                           6     3      3     630
                                             10 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _is_oilLevel                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disp7s_qtyDisp_writeText_NO_OIL                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autoMode_job                                         1     1      0    6000
                                             32 COMRAM     1     1      0
                        _autoMode_kb
                        _mpap_isIdle
                  _mpap_movetoNozzle
                _mpap_setupToHomming
                   _nozzle_isEnabled
                        _pump_isIdle
                       _pump_setTick
 ---------------------------------------------------------------------------------
 (2) _pump_setTick                                         2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _pump_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nozzle_isEnabled                                     2     0      2    3587
                                             30 COMRAM     2     0      2
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    1998
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToHomming                                  0     0      0     310
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_movetoNozzle                                    1     1      0    1809
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (3) _mpap_setupToTurn                                     4     2      2     310
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1468
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _mpap_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _autoMode_kb                                          1     1      0     136
                                             11 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
                       _visMode_init
 ---------------------------------------------------------------------------------
 (3) _visMode_init                                         1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_key_was_read                                     1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_key_is_ready2read                                1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (10) _mpap_job                                            1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (11) _mpap_normal_mode                                    1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (11) _mpap_homming                                        2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (12) _mpap_do1step                                        1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (13) __mpap_step4                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) __mpap_step3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) __mpap_step2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) __mpap_step1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) __mpap_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autoMode_init
     _disp7s_modeDisp_off
       _disp7s_off
     _disp7s_qtyDisp_writeFloat
       _disp7s_write_f
         ___ftadd
           ___ftpack
           ___wmul (ARG)
         ___ftge
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         _disp7s_off
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _pulsonic_getTotalSum_mlh (ARG)
         ___ftadd
           ___ftpack
           ___wmul (ARG)
         ___wmul
     _pulsonic_getTotalSum_mlh
       ___ftadd
         ___ftpack
         ___wmul (ARG)
       ___wmul
   _autoMode_job
     _autoMode_kb
       _ikb_key_is_ready2read
       _ikb_key_was_read
       _visMode_init
     _mpap_isIdle
     _mpap_movetoNozzle
       ___wmul
       _mpap_setupToTurn
         ___wmul (ARG)
     _mpap_setupToHomming
       _mpap_setupToTurn
         ___wmul (ARG)
     _nozzle_isEnabled
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _pump_isIdle
     _pump_setTick
   _check_oilLevel
     _disp7s_qtyDisp_writeText_NO_OIL
     _is_oilLevel
     _ps_autoMode_start
       _autoMode_init
         _disp7s_modeDisp_off
           _disp7s_off
         _disp7s_qtyDisp_writeFloat
           _disp7s_write_f
             ___ftadd
               ___ftpack
               ___wmul (ARG)
             ___ftge
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___ftpack
             _disp7s_off
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
           _pulsonic_getTotalSum_mlh (ARG)
             ___ftadd
               ___ftpack
               ___wmul (ARG)
             ___wmul
         _pulsonic_getTotalSum_mlh
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _ikb_flush
         _ikey_clear_all_flag
   _check_startSignal
     _disp7s_qtyDisp_writeText_20_3RAYAS
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
     _is_startSignal
     _ps_autoMode_start
       _autoMode_init
         _disp7s_modeDisp_off
           _disp7s_off
         _disp7s_qtyDisp_writeFloat
           _disp7s_write_f
             ___ftadd
               ___ftpack
               ___wmul (ARG)
             ___ftge
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___ftpack
             _disp7s_off
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
           _pulsonic_getTotalSum_mlh (ARG)
             ___ftadd
               ___ftpack
               ___wmul (ARG)
             ___wmul
         _pulsonic_getTotalSum_mlh
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _ikb_flush
         _ikey_clear_all_flag
   _configMode_init
   _configMode_job
     _configMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_modeDisp_writeText_oil
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeText_OFF
     _configMode_kb
       ___ftadd
         ___ftpack
         ___wmul (ARG)
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftsub
         ___ftadd
           ___ftpack
           ___wmul (ARG)
       _ikb_key_is_ready2read
       _ikb_key_was_read
   _disp7s_init
     _disp7s_mux_init
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _disp7s_job
     _disp7s_mux0_off *
     _disp7s_mux0_on *
     _disp7s_mux1_off *
     _disp7s_mux1_on *
     _disp7s_mux2_off *
     _disp7s_mux2_on *
     _disp7s_mux3_off *
     _disp7s_mux3_on *
     _disp7s_mux4_off *
     _disp7s_mux4_on *
     _disp7s_mux_Q *
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _errorHandler_queue
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key0 *
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
   _mpap_sych
   _ps_autoMode_start
     _autoMode_init
       _disp7s_modeDisp_off
         _disp7s_off
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _pulsonic_getTotalSum_mlh
         ___ftadd
           ___ftpack
           ___wmul (ARG)
         ___wmul
     _ikb_flush
       _ikey_clear_all_flag
   _pulsonic_init
   _pump_job
   _visMode_job
     _visMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_modeDisp_writeText_oil
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeText_OFF
     _visMode_kb
       _ikb_key_is_ready2read
       _ikb_key_was_read

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3      44       7       26.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     135      20        0.0%
DATA                 0      0     135       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 20:06:16 2019

                      disp7s_write_f@K10MULT 00FB                           autoMode_kb@cod_ret 000C  
                      ??_mpap_setupToHomming 0015                                  _pump_isIdle 2AE4  
                        ___wmul@multiplicand 000D                                  __CFG_BORV$3 000000  
                      disp7s_write_i@K10MULT 0035                                 ___ftadd@exp1 001E  
                               ___ftadd@exp2 001D                                 ___ftadd@sign 001C  
                                        l129 16B6                                          l331 0998  
                                        l324 08F4                                          l341 0C30  
                                        l333 09FA                                          l318 093E  
                                        l351 0D90                                          l335 0A3E  
                                        l353 0DC6                                          l337 0AA0  
                                        l347 0D5C                                          l339 0AE4  
                                        l356 0E18                                          l462 28B2  
                                        l464 28B6                                          l811 202E  
                                        l812 2040                                          l943 0E68  
                                        l793 1DAC                                          l945 0E88  
                                        l890 1EAC                                          l891 1EBE  
                                        l949 0F22                                          _GIE 007F97  
                               __CFG_BOR$OFF 000000                                          _key 0060  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                       __size_of_pulsonic_init 0060  
                             _check_oilLevel 2478                                 _pump_setTick 2B46  
                               ?_autoMode_kb 0001                                 __CFG_LVP$OFF 000000  
                               __CFG_WDT$OFF 000000                                         l1302 1434  
                                       l1451 2516                                         l1461 26C8  
                                       l1643 1E28                                         l5005 1450  
                                       l5015 1480                                         l5031 18EC  
                                       l6001 1D66                                         l5025 18C4  
                                       l5121 1A34                                         l5113 1A20  
                                       l6013 1D96                                         l6005 1D76  
                                       l5045 191E                                         l5109 1A10  
                                       l5221 1F76                                         l5071 21DC  
                                       l5055 1946                                         l5127 1A50  
                                       l5119 1A28                                         l5143 1170  
                                       l5135 10F6                                         l6111 1EFC  
                                       l6031 28DE                                         l5081 222A  
                                       l5049 192E                                         l5137 111E  
                                       l5209 29FC                                         l5313 2568  
                                       l6121 1F1E                                         l5075 21FE  
                                       l5059 1956                                         l5091 19BC  
                                       l5251 1828                                         l5243 17E4  
                                       l5235 17A0                                         l6123 1F20  
                                       l6107 1EF0                                         l5165 1232  
                                       l5149 1194                                         l5173 127C  
                                       l5237 17BC                                         l6037 28F0  
                                       l6205 16E0                                         l5159 121C  
                                       l5271 285C                                         l5191 297A  
                                       l5263 188C                                         l5247 1802  
                                       l6055 2920                                         l5415 14E8  
                                       l6127 1F2A                                         l6039 28F6  
                                       l6223 1712                                         l5185 12EE  
                                       l5169 1250                                         l5257 184A  
                                       l6057 2924                                         l6049 290C  
                                       l5433 15BA                                         l5425 155A  
                                       l5409 14AA                                         l6137 1F4C  
                                       l6073 22B2                                         l5179 12AC  
                                       l5363 276A                                         l5523 0CE2  
                                       l5515 0C20                                         l5427 157A  
                                       l6235 1738                                         l6251 176A  
                                       l5621 201C                                         l5613 2000  
                                       l4901 1DB8                                         l5189 2978  
                                       l5509 0B96                                         l5453 0816  
                                       l5445 163E                                         l6085 22D2  
                                       l5631 2056                                         l4831 24E4  
                                       l4911 1DEA                                         l5471 08B4  
                                       l6247 175C                                         l5641 2644  
                                       l4833 24EC                                         l5721 0EDA  
                                       l5713 0E8C                                         l5705 0E6C  
                                       l5465 0884                                         l4931 279A  
                                       l4843 250C                                         l4851 269E  
                                       l5731 0F96                                         l5539 0E38  
                                       l5475 08D4                                         l5467 0894  
                                       l6259 1782                                         l6187 16AE  
                                       l5557 2AFE                                         l4853 26A6  
                                       l5725 0F70                                         l5805 1A9A  
                                       l4935 27C0                                         l4871 1B36  
                                       l5911 2472                                         l5903 245E  
                                       l5751 109E                                         l5735 0FA0  
                                       l5655 1E70                                         l6199 16CE  
                                       l5569 2AF0                                         l4881 1B92  
                                       l4873 1B40                                         l4945 2822  
                                       l5761 10C8                                         l5729 0F82  
                                       l5817 23C8                                         l5593 1C78  
                                       l5665 1E96                                         l5657 1E74  
                                       l4883 1B9C                                         l4875 1B5E  
                                       l4963 1376                                         l4859 26BE  
                                       l5755 10AA                                         l5747 1050  
                                       l5579 2718                                         l5691 2132  
                                       l5675 1ED0                                         l5667 1E9A  
                                       l4957 134E                                         l5925 2494  
                                       l5781 2194                                         l5757 10BE  
                                       l5829 23F2                                         l5597 1CE0  
                                       l5845 2372                           _errorHandler_queue 1BC6  
                                       l4879 1B74                                         l5783 21A6  
                                       l5767 10DE                                         l4985 13C8  
                                       l5945 24C8                                         l5937 24B4  
                                       l5953 1BDA                                         l5689 2120  
                                       l4987 13D2                                         l5875 20A2  
                                       l5963 1C0C                                         l5981 1D22  
                                       l4997 1406                                         l4989 13DC  
                                       l5893 2440                                         l5869 2066  
                                       l5973 1C6A                                         l4999 1410  
                                       l5993 1D42                                         l5985 1D2C  
                                       l5987 1D30                                         _LATA 000F89  
                                       _LATB 000F8A                                         _LATC 000F8B  
                                       _LATD 000F8C                                         _LATE 000F8D  
                                       u6100 1FD2                                         u6060 128C  
                                       u5510 1B28                                         u6240 2A98  
                                       u6320 154A                                         u6170 2A4C  
                                       u5450 24F0                                         u5700 1368  
                                       u5550 1BA6                                         u6318 1530  
                                       u5631 130E                                         u6319 1544  
                                       u5800 1418                                         u5480 26AA  
                                       u5641 1322                                         u5730 13A6  
                                       u6348 159E                                         u6349 15B2  
                                       u5670 1340                                         u6278 14CC  
                                       u6279 14E0                                         u5841 18AC  
                                       u5770 13E4                                         u7258 2076  
                                       u7434 1BEA                                         u5931 19A0  
                                       u7259 208A                                         u7435 1BE6  
                                       u5940 19AA                                         u6388 1604  
                                       u5861 18D4                                         u6389 1618  
                                       u5950 19DA                                         u6814 1C8E  
                                       u6815 1C88                                         _UCFG 000F6F  
                                       u6824 1CA8                                         u7464 1C28  
                                       u6825 1CA2                                         u7465 1C22  
                                       u5955 19D2               ?_disp7s_modeDisp_writeText_oil 0001  
                                       u5990 1A3A                                         u6848 1CCC  
                                       u6858 1CF0                                         u6859 1D04  
                                       u7780 1EEC                                         u6798 2728  
                                       u6799 273C                                         _UCON 000F6D  
                               __CFG_PWRT$ON 000000                        _ikb_key_is_ready2read 2A34  
                            _NOZZLE_QTY_DIFF 00E9                                         _main 1646  
                               ___ftpack@arg 000B                                         _itoa 280A  
                                       _mpap 00B0                                 ___ftpack@exp 000E  
                                       fsr1h 000FE2                                         fsr2h 000FDA  
                                       _pump 0044                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                                       btemp 0053                                         _utoa 1DB0  
            __end_of_disp7s_qtyDisp_writeInt 2A6A                                         prodh 000FF4  
                                       prodl 000FF3                                         start 000E  
                        ?_errorHandler_queue 0001                               pulsonic_init@i 000B  
                              __CFG_IESO$OFF 000000                                __CFG_MCLRE$ON 000000  
                              ?_autoMode_job 0001                                 ___ftmul@cntr 0020  
                       __end_of_DISP7S_CHARS 0811                                 ___param_bank 000000  
                               ___ftmul@sign 0021                                _autoMode_init 283C  
                               ___fttol@exp1 0030                                 ___fttol@lval 002C  
                          visMode_kb@cod_ret 000C                                __CFG_PLLDIV$5 000000  
                               ?_is_oilLevel 0001                                        ?_main 0001  
                                      ?_itoa 001A                              __end_of___ftadd 14A6  
                                      _CMCON 000FB4                                        ?_utoa 0012  
                            __end_of___ftmul 1990                                        _T0CON 000FD5  
                            __end_of___ftsub 2794                              __end_of___fttol 1A62  
                            __end_of___lwdiv 2520                              __end_of___lwmod 26D2  
                                      i2l162 259A                                        i2l484 25FC  
                                      i2l478 2360                       __end_of_check_oilLevel 24CE  
                       ??_errorHandler_queue 000B                                        _TMR0H 000FD7  
                                      _TMR0L 000FD6                                        _PORTC 000F82  
                                      _PORTD 000F83                                        _PORTE 000F84  
                              __CFG_USBDIV$2 000000                                        _TRISA 000F92  
                                      _TRISB 000F93                                        _TRISC 000F94  
                                      _TRISD 000F95                                        _TRISE 000F96  
                            ??_configMode_kb 0025                               __CFG_FCMEN$OFF 000000  
                            __end_of_ikb_job 2B32                                ?_INTERRUPCION 0001  
                            _disp7s_mux0_off 2BC4                              _disp7s_mux1_off 2BBC  
                            _disp7s_mux2_off 2BB4                              _disp7s_mux3_off 2BAC  
                            _disp7s_mux4_off 2BA4                                        _smain 0047  
                              ___ftpack@sign 000F                                        pclath 000FFA  
                                      tablat 000FF5                                        plusw2 000FDB  
                 __size_of_mpap_movetoNozzle 0030                                        ttemp5 0054  
                                      ttemp6 0057                                        ttemp7 005B  
                                      utoa@c 0019                              _disp7s_mux_init 2714  
                                      utoa@v 0017                                        status 000FD8  
                                      wtemp8 0054             __end_of_disp7s_modeDisp_writeInt 2A84  
                __size_of_ikey_is_accessible 004C                                ?_ikey_parsing 0001  
                       __size_of__mpap_step1 000A                         __size_of__mpap_step2 000A  
                       __size_of__mpap_step3 000A                         __size_of__mpap_step4 000A  
                             ??_autoMode_job 0021                                _pulsonic_init 2364  
                           ??_is_startSignal 000B                                 ?_mpap_isIdle 0001  
                             ?_autoMode_init 0001                              __initialization 222E  
                               __end_of_main 1792                                 __end_of_itoa 283C  
                               __end_of_utoa 1E44                            ikb_key_was_read@k 000B  
         __size_of_disp7s_qtyDisp_writeFloat 001E                                       ??_main 0041  
                              ___fttol@sign1 002B                                       ??_itoa 001F  
                       __end_of_disp7s_mux_Q 1D12                                       ??_utoa 0017  
                              mpap_do1step@i 0051                                __activetblptr 000002  
                            ?_check_oilLevel 0001                               ??_INTERRUPCION 0005  
                       __size_of_disp7s_init 005E                          autoMode_job@cod_ret 0021  
 __end_of_disp7s_qtyDisp_writeText_20_3RAYAS 280A  __size_of_disp7s_qtyDisp_writeText_20_3RAYAS 0038  
       ??_disp7s_qtyDisp_writeText_20_3RAYAS 003A          ?_disp7s_qtyDisp_writeText_20_3RAYAS 0001  
         _disp7s_qtyDisp_writeText_20_3RAYAS 27D2                                       _ADCON1 000FC1  
                   __end_of_keyRead_pin_key0 2B8A                     __end_of_keyRead_pin_key1 2B46  
                   __end_of_keyRead_pin_key2 2B3C                     __end_of_keyRead_pin_key3 2B98  
                   __end_of_keyRead_pin_key4 2B92                       ?_ikb_key_is_ready2read 0001  
                           __end_of___ftpack 1BC6                                       i2l4047 2342  
                                     i2l3811 26F0                                       i2l3807 26E8  
                                     i2l4671 2656                                       i2l4675 2664  
                           __end_of___lwtoft 2972                                       _TMR0IE 007F95  
                                     _TMR0IF 007F92                               ??_ikey_parsing 001F  
                             __CFG_VREGEN$ON 000000                             ??_configMode_job 0040  
                  __size_of_nozzle_isEnabled 0048                               ?_pulsonic_init 0001  
                   __end_of_mpap_normal_mode 2600                   configMode_init@numRegistro 000B  
                  disp7s_write_f@NUM_OF_DISP 0033                     _error_requestToWriteDisp 00C9  
                   _pulsonic_getTotalSum_mlh 1F62                             __end_of_ikb_init 1B18  
                                     ___ftge 21BA                         visMode_disp@numVista 003F  
                                     ___wmul 2928                                    ??___ftadd 0019  
                                  ??___ftmul 0019                                    ??___ftsub 0025  
                                  ??___fttol 0026                                    ??___lwdiv 000F  
                                  ??___lwmod 000F                            ?_ikb_key_was_read 0001  
                                     clear_0 226C                                       clear_1 2278  
                                     clear_2 2284                   configMode_disp@numRegistro 003F  
                           __end_of_mpap_job 2690                           ??_ikb_key_was_read 000B  
                                     _unlock 00CB                                    ??_ikb_job 0024  
                                     _strlen 2972                      __end_of_disp7s_mux0_off 2BC8  
                    __end_of_disp7s_mux1_off 2BC0                        ___ftmul@f3_as_product 001D  
                    __end_of_disp7s_mux2_off 2BB8                      __end_of_disp7s_mux3_off 2BB0  
                    __end_of_disp7s_mux4_off 2BA8            __end_of_disp7s_qtyDisp_writeFloat 2A34  
                   __end_of_mpap_setupToTurn 28CC                                 __pdataCOMRAM 0051  
                               __mediumconst 0000                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                   __size_of_configMode_disp 0074                     __size_of_configMode_init 000C  
                        ikey_is_accessible@k 000D                      __end_of_disp7s_mux_init 2754  
                           __end_of_pump_job 2302                                 ?_visMode_job 0001  
                       __size_of_autoMode_kb 007A                 __size_of_ikey_clear_all_flag 001E  
                                 __accesstop 0060                      __end_of__initialization 228A  
                            __CFG_PBADEN$OFF 000000                                ?_mpap_do1step 0001  
                                 ___ftadd@f1 0013                                   ___ftadd@f2 0016  
                                 ___ftge@ff1 0016                                   ___ftge@ff2 0019  
                            disp7s_off@pDisp 000B                                ___rparam_used 000001  
                            ??_autoMode_init 003C                                   ___ftmul@f1 0013  
                                 ___ftmul@f2 0016                                   ___ftsub@f1 001F  
                                 ___ftsub@f2 0022                                   ___fttol@f1 0022  
                             __pcstackCOMRAM 0001                                 __pidataBANK0 29B6  
                              ?_mpap_homming 0001                                 ?_pump_isIdle 0001  
                         __size_of__mpap_off 000A                                   ___lwtoft@c 0013  
                            visMode_disp@qty 003C            __size_of_disp7s_modeDisp_writeInt 001A  
                  ?_disp7s_modeDisp_writeInt 0038                         __size_of_is_oilLevel 0006  
                       __end_of_autoMode_job 1DB0                                 _DISP7S_CHARS 080F  
                         __size_of_ikb_flush 0006                               mpap_do1step@KI 0001  
                                 __pbssBANK0 0060                                   __pbssBANK1 0100  
                         visMode_job@cod_ret 0040                               ??_mpap_do1step 0001  
                         __size_of_ikey_scan 01A0                              ??_pulsonic_init 000B  
                __end_of_mpap_setupToHomming 2AD4                               ??_mpap_homming 0002  
                                    ?___ftge 0016                         __end_of_INTERRUPCION 25B6  
                         __size_of_mpap_sych 008E                                      ?___wmul 000B  
                      __size_of_disp7s_mux_Q 00A0                         __size_of_mpap_isIdle 000E  
                            disp7s_write_f@I 00F8                              disp7s_write_f@i 00FE  
                            disp7s_write_i@i 0037                     ?_disp7s_qtyDisp_writeInt 0038  
                                 _disp7s_job 205A                                   _disp7s_off 2794  
                                 _disp7s_mux 00CD                 __size_of_disp7s_modeDisp_off 0012  
                                  ?___ftpack 000B                 errorHandler_queue@is_granted 0010  
                                    ?_strlen 000B                                    ?___lwtoft 0013  
                    __size_of_disp7s_mux0_on 0004                      __size_of_disp7s_mux1_on 0004  
                    __size_of_disp7s_mux2_on 0004                      __size_of_disp7s_mux3_on 0004  
                    __size_of_disp7s_mux4_on 0004                             ?_disp7s_mux0_off 0001  
                           ?_disp7s_mux1_off 0001                             ?_disp7s_mux2_off 0001  
                           ?_disp7s_mux3_off 0001                             ?_disp7s_mux4_off 0001  
                       __end_of_ikey_parsing 0E42                                   _configMode 004A  
                pulsonic_getTotalSum_mlh@acc 0022                      __size_of_disp7s_write_f 021C  
                    __size_of_disp7s_write_i 010A                                   _disp_owner 0050  
                           ?_disp7s_mux_init 0001                                    ?_ikb_init 0001  
                          disp7s_write_f@num 0034                            disp7s_write_i@num 0023  
                          __end_of__mpap_off 2B82                            ??_configMode_disp 003C  
                          ??_configMode_init 000B                                 _disp7s_mux_Q 1C72  
                           _nozzle_isEnabled 2600                                    ?_mpap_job 0001  
                                    __Hparam 0000                                      __Lparam 0000  
                disp7s_modeDisp_writeInt@num 0038                    disp7s_write_i@NUM_OF_DISP 0022  
                          __end_of_ikb_flush 2B9E                              __size_of___ftge 0074  
                                    ___ftadd 12FE                              __size_of___wmul 0026  
                                    ___ftmul 189C                                      ___ftsub 2754  
                                    ___fttol 1990                            pump_setTick@ticks 000B  
                                    ___lwdiv 24CE                                    ?_pump_job 0001  
                                    ___lwmod 2690                             ??_check_oilLevel 003D  
                               __psmallconst 0800                                      __pcinit 222E  
                                 ??___ftpack 0010                                      __ramtop 0800  
                                    __ptext0 1646                                      __ptext1 28CC  
                                    __ptext2 1E44                                      __ptext3 20D2  
                                    __ptext4 2298                                      __ptext5 2364  
                                    __ptext6 1ED4                                      __ptext7 2B28  
                                    __ptext8 14A6                                      __ptext9 2B92  
                          __end_of_ikey_scan 1646                                      _ikb_job 2B28  
                                 ??___lwtoft 0016                              __size_of_strlen 0022  
                __size_of_errorHandler_queue 00AC                                      _group_x 00B8  
                   _error_grantedToWriteDisp 00C8                      ??_ikb_key_is_ready2read 000B  
                                    _visMode 00BD                        __end_of_configMode_kb 10E2  
                          __end_of_mpap_sych 1F62                      mpap_normal_mode@cod_ret 0002  
                                 ??_ikb_init 000B                               __pintcode_body 256C  
                       end_of_initialization 228A                   __end_of_ikey_is_accessible 256C  
                          ?_keyRead_pin_key0 0001                            ?_keyRead_pin_key1 0001  
                          ?_keyRead_pin_key2 0001                            ?_keyRead_pin_key3 0001  
                          ?_keyRead_pin_key4 0001                   ??_pulsonic_getTotalSum_mlh 0022  
                              ??__mpap_step1 0001                                ??__mpap_step2 0001  
                              ??__mpap_step3 0001                                ??__mpap_step4 0001  
                       __size_of_visMode_job 002E                                      itoa@buf 001A  
                                    itoa@val 001B                            _check_startSignal 2422  
                              __Lmediumconst 0000                                      int_func 256C  
                         ??_keyRead_pin_key0 000B                           ??_keyRead_pin_key1 000B  
                         ??_keyRead_pin_key2 000B                           ??_keyRead_pin_key3 000B  
                         ??_keyRead_pin_key4 000B               ??_disp7s_qtyDisp_writeText_OFF 000B  
                        errorHandler_queue@c 00BF                          errorHandler_queue@i 0052  
                                 ??_mpap_job 0004                                _OIL_VISCOSITY 080B  
                         ?_check_startSignal 0001                            ?_mpap_normal_mode 0001  
                            main@c_access_kb 0041                                      postdec1 000FE5  
                                    postdec2 000FDD                           ??_mpap_normal_mode 0002  
                                    postinc0 000FEE                                      postinc1 000FE6  
                                    postinc2 000FDE                       ikb_key_is_ready2read@k 000B  
                                 ??_pump_job 000B                          ??_check_startSignal 003D  
                                    utoa@buf 0012                                      utoa@val 0013  
                                ?_disp7s_job 0001                                  ?_disp7s_off 000B  
                        _ikey_clear_all_flag 29F8                                      strlen@s 000B  
                              ?_visMode_disp 0001                                ?_visMode_init 0001  
                       __size_of_pump_isIdle 0010                        __size_of_autoMode_job 009E  
                       __end_of_mpap_do1step 2714                                   _visMode_kb 1E44  
                              ??_disp7s_init 000C                         ikey_clear_all_flag@i 000B  
                      configMode_job@cod_ret 0040                            ?_mpap_setupToTurn 0011  
                         ??_mpap_setupToTurn 0013                         __end_of_mpap_homming 2364  
                  __size_of_ikb_key_was_read 0014                    __end_of_check_startSignal 2478  
                       ?_ikey_clear_all_flag 0001                 disp7s_qtyDisp_writeFloat@num 0141  
                                 main@codapp 0043                          disp7s_write_f@pDisp 0031  
                        disp7s_write_i@pDisp 0020                        __size_of_INTERRUPCION 25AE  
                                ___ftmul@exp 001C                                 _autoMode_job 1D12  
                        __end_of__mpap_step1 2B6E                          __end_of__mpap_step2 2B64  
                        __end_of__mpap_step3 2B5A                          __end_of__mpap_step4 2B78  
                        __end_of_DISP7S_NUMS 080B                               __end_of___ftge 222E  
            mpap_setupToTurn@numSteps_tomove 0011                               ??_visMode_disp 003C  
                             ??_visMode_init 000B                        __size_of_ikey_parsing 0630  
                             __end_of___wmul 294E                                __pidataCOMRAM 2BCC  
                             _disp7s_mux0_on 2BC0                               _disp7s_mux1_on 2BB8  
                             _disp7s_mux2_on 2BB0                               _disp7s_mux3_on 2BA8  
                             _disp7s_mux4_on 2BC8                      __size_of_is_startSignal 0018  
                             __end_of_strlen 2994                            autoMode_init@init 003C  
                        start_initialization 222E                   ?_disp7s_qtyDisp_writeFloat 0141  
                              ?_pump_setTick 000B                                ??_autoMode_kb 000C  
                             _disp7s_write_f 10E2                               _disp7s_write_i 1792  
                               _INTERRUPCION 0008                          __end_of_disp7s_init 2422  
                      ??_ikey_clear_all_flag 000B                         visMode_init@numVista 000B  
                                 ikey_scan@k 000C                          _disp7s_modeDisp_off 2AB0  
                        __size_of_disp7s_job 0078                          __size_of_disp7s_off 003E  
                               _ikey_parsing 0812                        __end_of_autoMode_init 286C  
                                   ??___ftge 001C                                     ??___wmul 000F  
                                __pdataBANK0 00CD                       __end_of_disp7s_mux0_on 2BC4  
                     __end_of_disp7s_mux1_on 2BBC                       __end_of_disp7s_mux2_on 2BB4  
                     __end_of_disp7s_mux3_on 2BAC                       __end_of_disp7s_mux4_on 2BCC  
                          _ps_autoMode_start 29D8                         ?_disp7s_modeDisp_off 0001  
                    __size_of_configMode_job 002E                                ??_is_oilLevel 000B  
                                ?_visMode_kb 0001                                     ??_strlen 000D  
                         ?_ps_autoMode_start 0001                       __end_of_disp7s_write_f 12FE  
                     __end_of_disp7s_write_i 189C                            __size_of___ftpack 00AE  
                   __end_of_nozzle_isEnabled 2648                               ??_pump_setTick 000D  
                            _configMode_disp 2146                              _configMode_init 2B1C  
                                __pbssCOMRAM 0044                            __size_of___lwtoft 0024  
                              __pcstackBANK0 00EE                                __pcstackBANK1 0141  
                 disp7s_qtyDisp_writeInt@num 0038                             disp7s_mux_init@i 000B  
                        ??_ps_autoMode_start 003D                                 mpap_sych@sm0 004F  
           __size_of_disp7s_qtyDisp_writeInt 001A                   __size_of_check_startSignal 0056  
           __end_of_pulsonic_getTotalSum_mlh 1FE0                    pulsonic_getTotalSum_mlh@i 0025  
                        __end_of_autoMode_kb 205A                                ikey_parsing@k 0023  
                          __size_of_ikb_init 00B6                                  __mpap_step1 2B64  
                                __mpap_step2 2B5A                                  __mpap_step3 2B50  
                                __mpap_step4 2B6E                                  _DISP7S_NUMS 0801  
                                 mpap_sych@c 00C2                        __end_of_pulsonic_init 23C4  
                                  __mpap_off 2B78                                ??_mpap_isIdle 000B  
                           ___lwdiv@dividend 000B                            __size_of_mpap_job 0048  
                       configMode_kb@cod_ret 0028                                    __pintcode 0008  
                  __end_of_ps_autoMode_start 29F8                        __size_of_mpap_do1step 0042  
                                   ?___ftadd 0013                                     ?___ftmul 0013  
                                   ?___ftsub 001F                                     ?___fttol 0022  
                                   ?___lwdiv 000B                                     ?___lwmod 000B  
                      ??_disp7s_modeDisp_off 0011                     _disp7s_modeDisp_writeInt 2A6A  
                            ?_disp7s_mux0_on 0001                              ?_disp7s_mux1_on 0001  
                            ?_disp7s_mux2_on 0001                              ?_disp7s_mux3_on 0001  
                            ?_disp7s_mux4_on 0001                 __size_of_mpap_setupToHomming 0012  
                                  _machState 00CA                                    _ikb_flush 2B98  
                         configMode_disp@qty 003C                            __size_of_pump_job 006A  
                                   ?_ikb_job 0001                             disp7s_write_f@pi 00FA  
                           disp7s_write_i@pi 0034                                  __smallconst 0800  
                      __size_of_mpap_homming 0062                              ?_disp7s_write_f 0031  
                            ?_disp7s_write_i 0020                                  _disp7s_init 23C4  
                                  _ikey_scan 14A6                          __end_of_is_oilLevel 2BA4  
             __size_of_ikb_key_is_ready2read 001C                             ___lwdiv@quotient 0010  
              __end_of_ikb_key_is_ready2read 2A50                             _ikb_key_was_read 2A9C  
                   __size_of_disp7s_mux0_off 0004                     __size_of_disp7s_mux1_off 0004  
                   __size_of_disp7s_mux2_off 0004                     __size_of_disp7s_mux3_off 0004  
                   __size_of_disp7s_mux4_off 0004                         __end_of_visMode_disp 2146  
                       __end_of_visMode_init 2B10                                    _mpap_step 00E1  
                                  _mpap_sych 1ED4                               ___wmul@product 000F  
                               _mpap_do1step 26D2                     __size_of_disp7s_mux_init 0040  
                        __size_of_visMode_kb 0090                                   ?__mpap_off 0001  
                                   i2u353_48 2700                                     i2u528_48 2676  
                                   i2u528_49 268A                           _ikey_is_accessible 2520  
                               _mpap_homming 2302                    __size_of_keyRead_pin_key0 0008  
                  __size_of_keyRead_pin_key1 000A                    __size_of_keyRead_pin_key2 000A  
                  __size_of_keyRead_pin_key3 0006                    __size_of_keyRead_pin_key4 0008  
                    __end_of_configMode_disp 21BA                                 ??_disp7s_job 0013  
                               ??_disp7s_off 000E                      __end_of_configMode_init 2B28  
                        __end_of_mpap_isIdle 2B02                   __end_of_errorHandler_queue 1C72  
            ??_disp7s_modeDisp_writeText_oil 000B                                   ?_ikb_flush 0001  
                          ___wmul@multiplier 000B                          ?_ikey_is_accessible 0001  
                             _is_startSignal 2A84                           disp7s_write_f@buff 00EE  
                                  ikb_init@i 000B                    __size_of_mpap_normal_mode 004A  
                         disp7s_write_i@buff 002A                        disp7s_off@NUM_OF_DISP 000D  
                                 ?_ikey_scan 0001                                  _autoMode_kb 1FE0  
                              ??_visMode_job 0040                                    copy_data0 2242  
                        mpap_homming@cod_ret 0003      __end_of_disp7s_qtyDisp_writeText_NO_OIL 29B6  
   __size_of_disp7s_qtyDisp_writeText_NO_OIL 0022            ??_disp7s_qtyDisp_writeText_NO_OIL 000B  
           ?_disp7s_qtyDisp_writeText_NO_OIL 0001              _disp7s_qtyDisp_writeText_NO_OIL 2994  
                                 ?_mpap_sych 0001                         ??_ikey_is_accessible 000B  
                         __end_of_disp7s_job 20D2                           __end_of_disp7s_off 27D2  
                  __size_of_mpap_setupToTurn 0030                                     __Hrparam 0000  
                       __end_of_pump_setTick 2B50                                     __Lrparam 0000  
                 __size_of_ps_autoMode_start 0020                         check_startSignal@sm0 00C7  
                       check_startSignal@sm1 00C6                                ??_pump_isIdle 000B  
                     __size_of_configMode_kb 02A0                             __size_of___ftadd 01A8  
                     __end_of_is_startSignal 2A9C            __size_of_pulsonic_getTotalSum_mlh 007E  
                           __size_of___ftmul 00F4                             __size_of___ftsub 0040  
                           __size_of___fttol 00D2                               _configMode_job 28FA  
                           __size_of___lwdiv 0052                    ?_pulsonic_getTotalSum_mlh 001F  
                           __size_of___lwmod 0042                                     ___ftpack 1B18  
                                _is_oilLevel 2B9E                                     ___lwtoft 294E  
       __end_of_disp7s_qtyDisp_writeText_OFF 2AE4        __size_of_disp7s_qtyDisp_writeText_OFF 0010  
               _disp7s_qtyDisp_writeText_OFF 2AD4                             __size_of_ikb_job 000A  
                              disp7s_mux_Q@i 0012                                disp7s_mux_Q@q 0011  
                ??_disp7s_qtyDisp_writeFloat 003C                        errorHandler_queue@sm0 00C3  
                            ___lwdiv@divisor 000D                      __size_of_check_oilLevel 0056  
                    _disp7s_qtyDisp_writeInt 2A50                            check_oilLevel@sm0 00C5  
                          check_oilLevel@sm1 00C4                              ___lwdiv@counter 000F  
                                   __ptext10 2B32                                     __ptext11 2B3C  
                                   __ptext20 1C72                                     __ptext12 2B82  
                                   __ptext21 23C4                                     __ptext13 2B8A  
                                   __ptext30 2BC0                                     __ptext22 2714  
                                   __ptext14 0812                                     __ptext31 2BC4  
                                   __ptext23 2BA4                                     __ptext15 2520  
                                   __ptext40 2B1C                                     __ptext32 2BC8  
                                   __ptext24 2BA8                                     __ptext16 294E  
                                   __ptext41 2422                                     __ptext33 28FA  
                                   __ptext25 2BAC                                     __ptext17 1A62  
                                   __ptext50 29F8                                     __ptext42 2A84  
                                   __ptext34 0E42                                     __ptext26 2BB0  
                                   __ptext18 1BC6                                     __ptext51 283C  
                                   __ptext43 27D2                                     __ptext35 2754  
                                   __ptext27 2BB4                                     __ptext19 205A  
                                   __ptext60 189C                                     __ptext52 1F62  
                                   __ptext44 2A6A                                     __ptext36 2146  
                                   __ptext28 2BB8                                     __ptext61 12FE  
                                   __ptext53 2A16                                     __ptext45 1792  
                                   __ptext37 2AD4                                     __ptext29 2BBC  
                                   __ptext70 2600                                     __ptext62 1B18  
                                   __ptext54 10E2                                     __ptext46 2972  
                                   __ptext38 2A50                                     __ptext71 21BA  
                                   __ptext63 2AB0                                     __ptext55 280A  
                                   __ptext47 2478                                     __ptext39 2B10  
                                   __ptext80 2A34                                     __ptext72 2AC2  
                                   __ptext64 2794                                     __ptext56 1DB0  
                                   __ptext48 29D8                                     __ptext73 286C  
                                   __ptext65 2B9E                                     __ptext57 2690  
                                   __ptext49 2B98                                     __ptext90 2B78  
                                   __ptext82 2648                                     __ptext74 289C  
                                   __ptext66 2994                                     __ptext58 24CE  
                                   __ptext91 0000                                     __ptext83 25B6  
                                   __ptext75 2928                                     __ptext67 1D12  
                                   __ptext59 1990                                     __ptext84 2302  
                                   __ptext76 2AF4                                     __ptext68 2B46  
                                   __ptext85 26D2                                     __ptext77 1FE0  
                                   __ptext69 2AE4                                     __ptext86 2B50  
                                   __ptext78 2B02                                     __ptext87 2B5A  
                                   __ptext79 2A9C                                     __ptext88 2B64  
                                   __ptext89 2B6E                                     _ikb_init 1A62  
                       _mpap_setupToTurn$500 0013                                     _autoMode 004C  
                              __size_of_main 014C                                __size_of_itoa 0032  
                              __size_of_utoa 0094                          __end_of_visMode_job 28FA  
                                   _isr_flag 00CC                                     _mpap_job 2648  
                                   _mpap_off 00EC                            ??_disp7s_mux0_off 000B  
                          ??_disp7s_mux1_off 000B                            ??_disp7s_mux2_off 000B  
                          ??_disp7s_mux3_off 000B                                  ??__mpap_off 0001  
                          ??_disp7s_mux4_off 000B                            main@c_access_disp 0042  
                                _mpap_isIdle 2AF4                       __end_of_configMode_job 2928  
                                   int$flags 0053                            ??_disp7s_mux_init 000B  
                                   _pump_job 2298                                     _pulsonic 0100  
                           ?_configMode_disp 0001                              ?_is_startSignal 0001  
                           ?_configMode_init 0001                                  ??_ikb_flush 000C  
                          nozzle_isEnabled@n 001F                                 ??_visMode_kb 000C  
                      __CFG_CPUDIV$OSC1_PLL2 000000                          __end_of_pump_isIdle 2AF4  
                __end_of_ikey_clear_all_flag 2A16                            ?_nozzle_isEnabled 001F  
                                  pump_job@c 00C1                ?_disp7s_qtyDisp_writeText_OFF 0001  
      __end_of_disp7s_modeDisp_writeText_oil 2B1C       __size_of_disp7s_modeDisp_writeText_oil 000C  
              _disp7s_modeDisp_writeText_oil 2B10                                  ??_ikey_scan 000B  
                      __size_of_visMode_disp 0074                                     itoa@base 001D  
                      __size_of_visMode_init 000E                           ??_nozzle_isEnabled 0021  
                               disp7s_job@pq 0015                                _configMode_kb 0E42  
                               disp7s_init@i 000C                                     intlevel2 0000  
                        _mpap_setupToHomming 2AC2                                  ??_mpap_sych 000B  
                           ___lwmod@dividend 000B                                 ?__mpap_step1 0001  
                               ?__mpap_step2 0001                                 ?__mpap_step3 0001  
                               ?__mpap_step4 0001                                ?_disp7s_mux_Q 0001  
                 ??_disp7s_modeDisp_writeInt 003A                            _mpap_movetoNozzle 286C  
                         __end_of_visMode_kb 1ED4                    _disp7s_qtyDisp_writeFloat 2A16  
                           ??_disp7s_mux0_on 000B                             ??_disp7s_mux1_on 000B  
                           ??_disp7s_mux2_on 000B                             ??_disp7s_mux3_on 000B  
                           ??_disp7s_mux4_on 000B                           ?_mpap_movetoNozzle 0001  
                            ?_configMode_job 0001                     __end_of_ikb_key_was_read 2AB0  
                           _keyRead_pin_key0 2B82                             _keyRead_pin_key1 2B3C  
                           _keyRead_pin_key2 2B32                             _keyRead_pin_key3 2B92  
                           _keyRead_pin_key4 2B8A                             ??_disp7s_write_f 0037  
                           ??_disp7s_write_i 0025                         ?_mpap_setupToHomming 0001  
                        ??_mpap_movetoNozzle 0015                                 _visMode_disp 20D2  
                               _visMode_init 2B02                                     utoa@base 0015  
                                disp7s_job@q 004E                                  disp7s_off@i 0010  
                  ??_disp7s_qtyDisp_writeInt 003A                                 ?_disp7s_init 0001  
                            ___lwmod@divisor 000D                             _mpap_normal_mode 25B6  
                                   strlen@cp 000D                   mpap_movetoNozzle@numNozzle 0015  
                            ___lwmod@counter 000F                               ?_configMode_kb 0001  
                     __size_of_autoMode_init 0030                                  _visMode_job 28CC  
                         __CFG_FOSC$HSPLL_HS 000000                        __size_of_pump_setTick 000A  
                             ??_disp7s_mux_Q 000B                    __end_of_mpap_movetoNozzle 289C  
                      __end_of_OIL_VISCOSITY 080F                             _mpap_setupToTurn 289C  
                __end_of_disp7s_modeDisp_off 2AC2  
