

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 00:38:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,keep,inline
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,keep,inline
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,keep,inline
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,keep,inline
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,keep,inline
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,keep,inline
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,keep,inline
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,keep,inline
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,keep,inline
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   102                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   103  0000                     
   104                           ; Version 2.05
   105                           ; Generated 20/12/2018 GMT
   106                           ; 
   107                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   108                           ; All rights reserved.
   109                           ; 
   110                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   111                           ; 
   112                           ; Redistribution and use in source and binary forms, with or without modification, are
   113                           ; permitted provided that the following conditions are met:
   114                           ; 
   115                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   116                           ;        conditions and the following disclaimer.
   117                           ; 
   118                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   119                           ;        of conditions and the following disclaimer in the documentation and/or other
   120                           ;        materials provided with the distribution.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC18F4550 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138  0000                     
   139                           	psect	idataCOMRAM
   140  0029C4                     __pidataCOMRAM:
   141                           	opt callstack 0
   142                           
   143                           ;initializer for mpap_do1step@i
   144  0029C4  FF                 	db	255
   145                           
   146                           	psect	idataBANK0
   147  002812                     __pidataBANK0:
   148                           	opt callstack 0
   149                           
   150                           ;initializer for _disp7s_mux
   151  002812  BC                 	db	low _disp7s_mux0_off
   152  002813  29                 	db	high _disp7s_mux0_off
   153  002814  B8                 	db	low _disp7s_mux0_on
   154  002815  29                 	db	high _disp7s_mux0_on
   155  002816  B4                 	db	low _disp7s_mux1_off
   156  002817  29                 	db	high _disp7s_mux1_off
   157  002818  B0                 	db	low _disp7s_mux1_on
   158  002819  29                 	db	high _disp7s_mux1_on
   159  00281A  AC                 	db	low _disp7s_mux2_off
   160  00281B  29                 	db	high _disp7s_mux2_off
   161  00281C  A8                 	db	low _disp7s_mux2_on
   162  00281D  29                 	db	high _disp7s_mux2_on
   163  00281E  A4                 	db	low _disp7s_mux3_off
   164  00281F  29                 	db	high _disp7s_mux3_off
   165  002820  A0                 	db	low _disp7s_mux3_on
   166  002821  29                 	db	high _disp7s_mux3_on
   167  002822  9C                 	db	low _disp7s_mux4_off
   168  002823  29                 	db	high _disp7s_mux4_off
   169  002824  C0                 	db	low _disp7s_mux4_on
   170  002825  29                 	db	high _disp7s_mux4_on
   171                           
   172                           ;initializer for _mpap_step
   173  002826  68                 	db	low __mpap_step1
   174  002827  29                 	db	high __mpap_step1
   175  002828  5E                 	db	low __mpap_step2
   176  002829  29                 	db	high __mpap_step2
   177  00282A  54                 	db	low __mpap_step3
   178  00282B  29                 	db	high __mpap_step3
   179  00282C  72                 	db	low __mpap_step4
   180  00282D  29                 	db	high __mpap_step4
   181                           
   182                           ;initializer for _NOZZLE_QTY_DIFF
   183  00282E  CD                 	db	205
   184  00282F  CC                 	db	204
   185  002830  3D                 	db	61
   186                           
   187                           ;initializer for _mpap_off
   188  002831  7C                 	db	low __mpap_off
   189  002832  29                 	db	high __mpap_off
   190                           
   191                           	psect	smallconst
   192  000800                     __psmallconst:
   193                           	opt callstack 0
   194  000800  00                 	db	0
   195  000801                     _DISP7S_NUMS:
   196                           	opt callstack 0
   197  000801  3F                 	db	63
   198  000802  06                 	db	6
   199  000803  5B                 	db	91
   200  000804  4F                 	db	79
   201  000805  66                 	db	102
   202  000806  6D                 	db	109
   203  000807  7C                 	db	124
   204  000808  07                 	db	7
   205  000809  7F                 	db	127
   206  00080A  67                 	db	103
   207  00080B                     __end_of_DISP7S_NUMS:
   208                           	opt callstack 0
   209  00080B                     _OIL_VISCOSITY:
   210                           	opt callstack 0
   211  00080B  16                 	db	22
   212  00080C  20                 	db	32
   213  00080D  2E                 	db	46
   214  00080E  44                 	db	68
   215  00080F                     __end_of_OIL_VISCOSITY:
   216                           	opt callstack 0
   217  00080F                     _DISP7S_CHARS:
   218                           	opt callstack 0
   219  00080F  00                 	db	0
   220  000810  40                 	db	64
   221  000811                     __end_of_DISP7S_CHARS:
   222                           	opt callstack 0
   223  0000                     _TRISB	set	3987
   224  0000                     _TRISA	set	3986
   225  0000                     _PORTE	set	3972
   226  0000                     _PORTD	set	3971
   227  0000                     _PORTC	set	3970
   228  0000                     _TRISC	set	3988
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISE	set	3990
   231  0000                     _TMR0L	set	4054
   232  0000                     _TMR0H	set	4055
   233  0000                     _T0CON	set	4053
   234  0000                     _UCFG	set	3951
   235  0000                     _UCON	set	3949
   236  0000                     _CMCON	set	4020
   237  0000                     _ADCON1	set	4033
   238  0000                     _LATB	set	3978
   239  0000                     _LATE	set	3981
   240  0000                     _LATD	set	3980
   241  0000                     _LATC	set	3979
   242  0000                     _LATA	set	3977
   243  0000                     _TMR0IF	set	32658
   244  0000                     _GIE	set	32663
   245  0000                     _TMR0IE	set	32661
   246                           
   247                           ; #config settings
   248  000811  00                 	db	0	; dummy byte at the end
   249  0000                     
   250                           	psect	cinit
   251  002202                     __pcinit:
   252                           	opt callstack 0
   253  002202                     start_initialization:
   254                           	opt callstack 0
   255  002202                     __initialization:
   256                           	opt callstack 0
   257                           
   258                           ; Initialize objects allocated to BANK0 (33 bytes)
   259                           ; load TBLPTR registers with __pidataBANK0
   260  002202  0E12               	movlw	low __pidataBANK0
   261  002204  6EF6               	movwf	tblptrl,c
   262  002206  0E28               	movlw	high __pidataBANK0
   263  002208  6EF7               	movwf	tblptrh,c
   264  00220A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   265  00220C  6EF8               	movwf	tblptru,c
   266  00220E  EE00  F0CD         	lfsr	0,__pdataBANK0
   267  002212  EE10 F021          	lfsr	1,33
   268  002216                     copy_data0:
   269  002216  0009               	tblrd		*+
   270  002218  CFF5 FFEE          	movff	tablat,postinc0
   271  00221C  50E5               	movf	postdec1,w,c
   272  00221E  50E1               	movf	fsr1l,w,c
   273  002220  E1FA               	bnz	copy_data0
   274                           
   275                           ; Initialize objects allocated to COMRAM (1 bytes)
   276                           ; load TBLPTR registers with __pidataCOMRAM
   277  002222  0EC4               	movlw	low __pidataCOMRAM
   278  002224  6EF6               	movwf	tblptrl,c
   279  002226  0E29               	movlw	high __pidataCOMRAM
   280  002228  6EF7               	movwf	tblptrh,c
   281  00222A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   282  00222C  6EF8               	movwf	tblptru,c
   283  00222E  0009               	tblrd		*+	;fetch initializer
   284  002230  CFF5 F052          	movff	tablat,__pdataCOMRAM
   285                           
   286                           ; Clear objects allocated to BANK1 (65 bytes)
   287  002234  EE01  F000         	lfsr	0,__pbssBANK1
   288  002238  0E41               	movlw	65
   289  00223A                     clear_0:
   290  00223A  6AEE               	clrf	postinc0,c
   291  00223C  06E8               	decf	wreg,f,c
   292  00223E  E1FD               	bnz	clear_0
   293                           
   294                           ; Clear objects allocated to BANK0 (109 bytes)
   295  002240  EE00  F060         	lfsr	0,__pbssBANK0
   296  002244  0E6D               	movlw	109
   297  002246                     clear_1:
   298  002246  6AEE               	clrf	postinc0,c
   299  002248  06E8               	decf	wreg,f,c
   300  00224A  E1FD               	bnz	clear_1
   301                           
   302                           ; Clear objects allocated to COMRAM (14 bytes)
   303  00224C  EE00  F044         	lfsr	0,__pbssCOMRAM
   304  002250  0E0E               	movlw	14
   305  002252                     clear_2:
   306  002252  6AEE               	clrf	postinc0,c
   307  002254  06E8               	decf	wreg,f,c
   308  002256  E1FD               	bnz	clear_2
   309  002258                     end_of_initialization:
   310                           	opt callstack 0
   311  002258                     __end_of__initialization:
   312                           	opt callstack 0
   313  002258  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   314  00225A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   315  00225C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   316  00225E  6EF8               	movwf	tblptru,c
   317  002260  0100               	movlb	0
   318  002262  EF23  F00B         	goto	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMRAM
   321  000044                     __pbssCOMRAM:
   322                           	opt callstack 0
   323  000044                     _pump:
   324                           	opt callstack 0
   325  000044                     	ds	3
   326  000047                     _configMode:
   327                           	opt callstack 0
   328  000047                     	ds	2
   329  000049                     _visMode:
   330                           	opt callstack 0
   331  000049                     	ds	2
   332  00004B                     _autoMode:
   333                           	opt callstack 0
   334  00004B                     	ds	2
   335  00004D                     disp7s_job@q:
   336                           	opt callstack 0
   337  00004D                     	ds	1
   338  00004E                     pump_job@c:
   339                           	opt callstack 0
   340  00004E                     	ds	1
   341  00004F                     mpap_sych@c:
   342                           	opt callstack 0
   343  00004F                     	ds	1
   344  000050                     mpap_sych@sm0:
   345                           	opt callstack 0
   346  000050                     	ds	1
   347  000051                     _disp_owner:
   348                           	opt callstack 0
   349  000051                     	ds	1
   350                           
   351                           	psect	dataCOMRAM
   352  000052                     __pdataCOMRAM:
   353                           	opt callstack 0
   354  000052                     mpap_do1step@i:
   355                           	opt callstack 0
   356  000052                     	ds	1
   357                           
   358                           	psect	bssBANK0
   359  000060                     __pbssBANK0:
   360                           	opt callstack 0
   361  000060                     _key:
   362                           	opt callstack 0
   363  000060                     	ds	80
   364  0000B0                     _mpap:
   365                           	opt callstack 0
   366  0000B0                     	ds	8
   367  0000B8                     _group_x:
   368                           	opt callstack 0
   369  0000B8                     	ds	5
   370  0000BD                     _smain:
   371                           	opt callstack 0
   372  0000BD                     	ds	3
   373  0000C0                     	ds	2
   374  0000C2                     	ds	1
   375  0000C3                     	ds	1
   376  0000C4                     	ds	1
   377  0000C5                     	ds	1
   378  0000C6                     	ds	1
   379  0000C7                     	ds	1
   380  0000C8                     _error_grantedToWriteDisp:
   381                           	opt callstack 0
   382  0000C8                     	ds	1
   383  0000C9                     _error_requestToWriteDisp:
   384                           	opt callstack 0
   385  0000C9                     	ds	1
   386  0000CA                     _machState:
   387                           	opt callstack 0
   388  0000CA                     	ds	1
   389  0000CB                     _unlock:
   390                           	opt callstack 0
   391  0000CB                     	ds	1
   392  0000CC                     _isr_flag:
   393                           	opt callstack 0
   394  0000CC                     	ds	1
   395                           
   396                           	psect	dataBANK0
   397  0000CD                     __pdataBANK0:
   398                           	opt callstack 0
   399  0000CD                     _disp7s_mux:
   400                           	opt callstack 0
   401  0000CD                     	ds	20
   402  0000E1                     _mpap_step:
   403                           	opt callstack 0
   404  0000E1                     	ds	8
   405  0000E9                     _NOZZLE_QTY_DIFF:
   406                           	opt callstack 0
   407  0000E9                     	ds	3
   408  0000EC                     _mpap_off:
   409                           	opt callstack 0
   410  0000EC                     	ds	2
   411                           
   412                           	psect	bssBANK1
   413  000100                     __pbssBANK1:
   414                           	opt callstack 0
   415  000100                     _pulsonic:
   416                           	opt callstack 0
   417  000100                     	ds	65
   418                           
   419                           	psect	cstackBANK1
   420  000141                     __pcstackBANK1:
   421                           	opt callstack 0
   422  000141                     disp7s_qtyDisp_writeFloat@num:
   423                           	opt callstack 0
   424                           
   425                           ; 3 bytes @ 0x0
   426  000141                     	ds	3
   427                           
   428                           	psect	cstackBANK0
   429  0000EE                     __pcstackBANK0:
   430                           	opt callstack 0
   431  0000EE                     disp7s_write_f@buff:
   432                           	opt callstack 0
   433                           
   434                           ; 10 bytes @ 0x0
   435  0000EE                     	ds	10
   436  0000F8                     disp7s_write_f@I:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0xA
   440  0000F8                     	ds	2
   441  0000FA                     disp7s_write_f@pi:
   442                           	opt callstack 0
   443                           
   444                           ; 1 bytes @ 0xC
   445  0000FA                     	ds	1
   446  0000FB                     disp7s_write_f@K10MULT:
   447                           	opt callstack 0
   448                           
   449                           ; 3 bytes @ 0xD
   450  0000FB                     	ds	3
   451  0000FE                     disp7s_write_f@i:
   452                           	opt callstack 0
   453                           
   454                           ; 1 bytes @ 0x10
   455  0000FE                     	ds	1
   456                           
   457                           	psect	cstackCOMRAM
   458  000001                     __pcstackCOMRAM:
   459                           	opt callstack 0
   460  000001                     mpap_do1step@KI:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x0
   464  000001                     	ds	1
   465  000002                     ??_mpap_homming:
   466  000002                     mpap_normal_mode@cod_ret:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0x1
   470  000002                     	ds	1
   471  000003                     mpap_homming@cod_ret:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0x2
   475  000003                     	ds	1
   476  000004                     
   477                           ; 1 bytes @ 0x3
   478  000004                     	ds	1
   479  000005                     ??_INTERRUPCION:
   480                           
   481                           ; 1 bytes @ 0x4
   482  000005                     	ds	6
   483  00000B                     ??_ikey_is_accessible:
   484  00000B                     ??_disp7s_mux_Q:
   485  00000B                     ?_strlen:
   486                           	opt callstack 0
   487  00000B                     ?___wmul:
   488                           	opt callstack 0
   489  00000B                     ?___lwdiv:
   490                           	opt callstack 0
   491  00000B                     ?___lwmod:
   492                           	opt callstack 0
   493  00000B                     ?___ftpack:
   494                           	opt callstack 0
   495  00000B                     ikb_init@i:
   496                           	opt callstack 0
   497  00000B                     ikb_key_is_ready2read@k:
   498                           	opt callstack 0
   499  00000B                     ikb_key_was_read@k:
   500                           	opt callstack 0
   501  00000B                     pulsonic_init@i:
   502                           	opt callstack 0
   503  00000B                     disp7s_mux_init@i:
   504                           	opt callstack 0
   505  00000B                     visMode_init@numVista:
   506                           	opt callstack 0
   507  00000B                     configMode_init@numRegistro:
   508                           	opt callstack 0
   509  00000B                     strlen@s:
   510                           	opt callstack 0
   511  00000B                     pump_setTick@ticks:
   512                           	opt callstack 0
   513  00000B                     disp7s_off@pDisp:
   514                           	opt callstack 0
   515  00000B                     ___wmul@multiplier:
   516                           	opt callstack 0
   517  00000B                     ___lwdiv@dividend:
   518                           	opt callstack 0
   519  00000B                     ___lwmod@dividend:
   520                           	opt callstack 0
   521  00000B                     ___ftpack@arg:
   522                           	opt callstack 0
   523                           
   524                           ; 3 bytes @ 0xA
   525  00000B                     	ds	1
   526  00000C                     ikey_scan@k:
   527                           	opt callstack 0
   528  00000C                     disp7s_init@i:
   529                           	opt callstack 0
   530  00000C                     autoMode_kb@cod_ret:
   531                           	opt callstack 0
   532  00000C                     visMode_kb@cod_ret:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0xB
   536  00000C                     	ds	1
   537  00000D                     ikey_is_accessible@k:
   538                           	opt callstack 0
   539  00000D                     disp7s_off@NUM_OF_DISP:
   540                           	opt callstack 0
   541  00000D                     strlen@cp:
   542                           	opt callstack 0
   543  00000D                     ___wmul@multiplicand:
   544                           	opt callstack 0
   545  00000D                     ___lwdiv@divisor:
   546                           	opt callstack 0
   547  00000D                     ___lwmod@divisor:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0xC
   551  00000D                     	ds	1
   552  00000E                     ??_disp7s_off:
   553  00000E                     ___ftpack@exp:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0xD
   557  00000E                     	ds	1
   558  00000F                     ___ftpack@sign:
   559                           	opt callstack 0
   560  00000F                     ___lwdiv@counter:
   561                           	opt callstack 0
   562  00000F                     ___lwmod@counter:
   563                           	opt callstack 0
   564  00000F                     ___wmul@product:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0xE
   568  00000F                     	ds	1
   569  000010                     ??___ftpack:
   570  000010                     disp7s_off@i:
   571                           	opt callstack 0
   572  000010                     ___lwdiv@quotient:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0xF
   576  000010                     	ds	1
   577  000011                     disp7s_mux_Q@q:
   578                           	opt callstack 0
   579  000011                     mpap_setupToTurn@numSteps_tomove:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x10
   583  000011                     	ds	1
   584  000012                     disp7s_mux_Q@i:
   585                           	opt callstack 0
   586  000012                     utoa@buf:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0x11
   590  000012                     	ds	1
   591  000013                     ??_disp7s_job:
   592  000013                     ?___ftadd:
   593                           	opt callstack 0
   594  000013                     ?___ftmul:
   595                           	opt callstack 0
   596  000013                     ?___lwtoft:
   597                           	opt callstack 0
   598  000013                     _mpap_setupToTurn$474:
   599                           	opt callstack 0
   600  000013                     ___lwtoft@c:
   601                           	opt callstack 0
   602  000013                     utoa@val:
   603                           	opt callstack 0
   604  000013                     ___ftadd@f1:
   605                           	opt callstack 0
   606  000013                     ___ftmul@f1:
   607                           	opt callstack 0
   608                           
   609                           ; 3 bytes @ 0x12
   610  000013                     	ds	2
   611  000015                     mpap_movetoNozzle@numNozzle:
   612                           	opt callstack 0
   613  000015                     disp7s_job@pq:
   614                           	opt callstack 0
   615  000015                     utoa@base:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x14
   619  000015                     	ds	1
   620  000016                     ___ftadd@f2:
   621                           	opt callstack 0
   622  000016                     ___ftge@ff1:
   623                           	opt callstack 0
   624  000016                     ___ftmul@f2:
   625                           	opt callstack 0
   626                           
   627                           ; 3 bytes @ 0x15
   628  000016                     	ds	1
   629  000017                     utoa@v:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x16
   633  000017                     	ds	2
   634  000019                     ??___ftadd:
   635  000019                     ??___ftmul:
   636  000019                     utoa@c:
   637                           	opt callstack 0
   638  000019                     ___ftge@ff2:
   639                           	opt callstack 0
   640                           
   641                           ; 3 bytes @ 0x18
   642  000019                     	ds	1
   643  00001A                     itoa@buf:
   644                           	opt callstack 0
   645                           
   646                           ; 1 bytes @ 0x19
   647  00001A                     	ds	1
   648  00001B                     itoa@val:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0x1A
   652  00001B                     	ds	1
   653  00001C                     ??___ftge:
   654  00001C                     ___ftadd@sign:
   655                           	opt callstack 0
   656  00001C                     ___ftmul@exp:
   657                           	opt callstack 0
   658                           
   659                           ; 1 bytes @ 0x1B
   660  00001C                     	ds	1
   661  00001D                     ___ftadd@exp2:
   662                           	opt callstack 0
   663  00001D                     itoa@base:
   664                           	opt callstack 0
   665  00001D                     ___ftmul@f3_as_product:
   666                           	opt callstack 0
   667                           
   668                           ; 3 bytes @ 0x1C
   669  00001D                     	ds	1
   670  00001E                     ___ftadd@exp1:
   671                           	opt callstack 0
   672                           
   673                           ; 1 bytes @ 0x1D
   674  00001E                     	ds	1
   675  00001F                     ??_ikey_parsing:
   676  00001F                     ?___ftsub:
   677                           	opt callstack 0
   678  00001F                     ?_pulsonic_getTotalSum_mlh:
   679                           	opt callstack 0
   680  00001F                     nozzle_isEnabled@n:
   681                           	opt callstack 0
   682  00001F                     ___ftsub@f1:
   683                           	opt callstack 0
   684                           
   685                           ; 3 bytes @ 0x1E
   686  00001F                     	ds	1
   687  000020                     ___ftmul@cntr:
   688                           	opt callstack 0
   689  000020                     disp7s_write_i@pDisp:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x1F
   693  000020                     	ds	1
   694  000021                     autoMode_job@cod_ret:
   695                           	opt callstack 0
   696  000021                     ___ftmul@sign:
   697                           	opt callstack 0
   698                           
   699                           ; 1 bytes @ 0x20
   700  000021                     	ds	1
   701  000022                     ?___fttol:
   702                           	opt callstack 0
   703  000022                     disp7s_write_i@NUM_OF_DISP:
   704                           	opt callstack 0
   705  000022                     pulsonic_getTotalSum_mlh@acc:
   706                           	opt callstack 0
   707  000022                     ___ftsub@f2:
   708                           	opt callstack 0
   709  000022                     ___fttol@f1:
   710                           	opt callstack 0
   711                           
   712                           ; 3 bytes @ 0x21
   713  000022                     	ds	1
   714  000023                     ikey_parsing@k:
   715                           	opt callstack 0
   716  000023                     disp7s_write_i@num:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x22
   720  000023                     	ds	1
   721  000024                     
   722                           ; 1 bytes @ 0x23
   723  000024                     	ds	1
   724  000025                     ??_configMode_kb:
   725  000025                     ??_disp7s_write_i:
   726  000025                     pulsonic_getTotalSum_mlh@i:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0x24
   730  000025                     	ds	1
   731  000026                     ??___fttol:
   732                           
   733                           ; 1 bytes @ 0x25
   734  000026                     	ds	2
   735  000028                     configMode_kb@cod_ret:
   736                           	opt callstack 0
   737                           
   738                           ; 1 bytes @ 0x27
   739  000028                     	ds	2
   740  00002A                     disp7s_write_i@buff:
   741                           	opt callstack 0
   742                           
   743                           ; 10 bytes @ 0x29
   744  00002A                     	ds	1
   745  00002B                     ___fttol@sign1:
   746                           	opt callstack 0
   747                           
   748                           ; 1 bytes @ 0x2A
   749  00002B                     	ds	1
   750  00002C                     ___fttol@lval:
   751                           	opt callstack 0
   752                           
   753                           ; 4 bytes @ 0x2B
   754  00002C                     	ds	4
   755  000030                     ___fttol@exp1:
   756                           	opt callstack 0
   757                           
   758                           ; 1 bytes @ 0x2F
   759  000030                     	ds	1
   760  000031                     disp7s_write_f@pDisp:
   761                           	opt callstack 0
   762                           
   763                           ; 2 bytes @ 0x30
   764  000031                     	ds	2
   765  000033                     disp7s_write_f@NUM_OF_DISP:
   766                           	opt callstack 0
   767                           
   768                           ; 1 bytes @ 0x32
   769  000033                     	ds	1
   770  000034                     disp7s_write_i@pi:
   771                           	opt callstack 0
   772  000034                     disp7s_write_f@num:
   773                           	opt callstack 0
   774                           
   775                           ; 3 bytes @ 0x33
   776  000034                     	ds	1
   777  000035                     disp7s_write_i@K10MULT:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x34
   781  000035                     	ds	2
   782  000037                     ??_disp7s_write_f:
   783  000037                     disp7s_write_i@i:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0x36
   787  000037                     	ds	1
   788  000038                     disp7s_qtyDisp_writeInt@num:
   789                           	opt callstack 0
   790  000038                     disp7s_modeDisp_writeInt@num:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x37
   794  000038                     	ds	2
   795  00003A                     
   796                           ; 1 bytes @ 0x39
   797  00003A                     	ds	2
   798  00003C                     autoMode_init@init:
   799                           	opt callstack 0
   800  00003C                     visMode_disp@qty:
   801                           	opt callstack 0
   802  00003C                     configMode_disp@qty:
   803                           	opt callstack 0
   804                           
   805                           ; 3 bytes @ 0x3B
   806  00003C                     	ds	3
   807  00003F                     visMode_disp@numVista:
   808                           	opt callstack 0
   809  00003F                     configMode_disp@numRegistro:
   810                           	opt callstack 0
   811                           
   812                           ; 1 bytes @ 0x3E
   813  00003F                     	ds	1
   814  000040                     visMode_job@cod_ret:
   815                           	opt callstack 0
   816  000040                     configMode_job@cod_ret:
   817                           	opt callstack 0
   818                           
   819                           ; 1 bytes @ 0x3F
   820  000040                     	ds	1
   821  000041                     main@c_access_kb:
   822                           	opt callstack 0
   823                           
   824                           ; 1 bytes @ 0x40
   825  000041                     	ds	1
   826  000042                     main@c_access_disp:
   827                           	opt callstack 0
   828                           
   829                           ; 1 bytes @ 0x41
   830  000042                     	ds	1
   831  000043                     main@codapp:
   832                           	opt callstack 0
   833                           
   834                           ; 1 bytes @ 0x42
   835  000043                     	ds	1
   836                           
   837 ;;
   838 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   839 ;;
   840 ;; *************** function _main *****************
   841 ;; Defined at:
   842 ;;		line 82 in file "main.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  codapp          1   66[COMRAM] char 
   847 ;;  c_access_dis    1   65[COMRAM] char 
   848 ;;  c_access_kb     1   64[COMRAM] char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 3F/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   858 ;;      Params:         0       0       0       0       0       0       0       0       0
   859 ;;      Locals:         3       0       0       0       0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0       0       0       0
   861 ;;      Totals:         3       0       0       0       0       0       0       0       0
   862 ;;Total ram usage:        3 bytes
   863 ;; Hardware stack levels required when called:   12
   864 ;; This function calls:
   865 ;;		_autoMode_init
   866 ;;		_autoMode_job
   867 ;;		_configMode_init
   868 ;;		_configMode_job
   869 ;;		_disp7s_init
   870 ;;		_disp7s_job
   871 ;;		_ikb_init
   872 ;;		_ikb_job
   873 ;;		_mpap_sych
   874 ;;		_pulsonic_init
   875 ;;		_pump_job
   876 ;;		_visMode_job
   877 ;; This function is called by:
   878 ;;		Startup code after reset
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text0
   883  001646                     __ptext0:
   884                           	opt callstack 0
   885  001646                     _main:
   886                           	opt callstack 19
   887                           
   888                           ;main.c: 84: int8_t c_access_kb=0;
   889                           
   890                           ;incstack = 0
   891  001646  0E00               	movlw	0
   892  001648  6E41               	movwf	main@c_access_kb,c
   893                           
   894                           ;main.c: 85: int8_t c_access_disp=0;
   895  00164A  0E00               	movlw	0
   896  00164C  6E42               	movwf	main@c_access_disp,c
   897                           
   898                           ;main.c: 87: int8_t codapp;;main.c: 89: LATA = 0x00;
   899  00164E  0E00               	movlw	0
   900  001650  6E89               	movwf	3977,c	;volatile
   901                           
   902                           ;main.c: 90: LATC = 0x00;
   903  001652  0E00               	movlw	0
   904  001654  6E8B               	movwf	3979,c	;volatile
   905                           
   906                           ;main.c: 91: LATD = 0x00;
   907  001656  0E00               	movlw	0
   908  001658  6E8C               	movwf	3980,c	;volatile
   909                           
   910                           ;main.c: 92: LATE = 0x00;
   911  00165A  0E00               	movlw	0
   912  00165C  6E8D               	movwf	3981,c	;volatile
   913                           
   914                           ;main.c: 93: LATB = 0x00;
   915  00165E  0E00               	movlw	0
   916  001660  6E8A               	movwf	3978,c	;volatile
   917                           
   918                           ;main.c: 95: ADCON1 = 0x0F;
   919  001662  0E0F               	movlw	15
   920  001664  6EC1               	movwf	4033,c	;volatile
   921                           
   922                           ;main.c: 96: CMCON=0xCF;
   923  001666  0ECF               	movlw	207
   924  001668  6EB4               	movwf	4020,c	;volatile
   925                           
   926                           ;main.c: 99: UCON = 0;
   927  00166A  0E00               	movlw	0
   928  00166C  6E6D               	movwf	3949,c	;volatile
   929                           
   930                           ;main.c: 100: UCFG = 1<<3;
   931  00166E  0E08               	movlw	8
   932  001670  6E6F               	movwf	3951,c	;volatile
   933                           
   934                           ;main.c: 101: T0CON = 0B10000111;
   935  001672  0E87               	movlw	135
   936  001674  6ED5               	movwf	4053,c	;volatile
   937                           
   938                           ;main.c: 103: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
   939  001676  68D7               	setf	4055,c	;volatile
   940                           
   941                           ;main.c: 104: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
   942  001678  0ED1               	movlw	209
   943  00167A  6ED6               	movwf	4054,c	;volatile
   944                           
   945                           ;main.c: 105: TMR0IE = 1;
   946  00167C  8AF2               	bsf	4082,5,c	;volatile
   947  00167E  808D               	bsf	3981,0,c	;volatile
   948  001680  9096               	bcf	3990,0,c	;volatile
   949  001682  9095               	bcf	3989,0,c	;volatile
   950  001684  9295               	bcf	3989,1,c	;volatile
   951  001686  9495               	bcf	3989,2,c	;volatile
   952  001688  9695               	bcf	3989,3,c	;volatile
   953  00168A  928B               	bcf	3979,1,c	;volatile
   954  00168C  9294               	bcf	3988,1,c	;volatile
   955  00168E  8296               	bsf	3990,1,c	;volatile
   956  001690  8094               	bsf	3988,0,c	;volatile
   957  001692  8496               	bsf	3990,2,c	;volatile
   958                           
   959                           ;main.c: 123: ikb_init();
   960  001694  EC3E  F00D         	call	_ikb_init	;wreg free
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 124: disp7s_init();
   964  001698  EC94  F011         	call	_disp7s_init	;wreg free
   965                           
   966                           ;main.c: 125: pulsonic_init();
   967  00169C  EC64  F011         	call	_pulsonic_init	;wreg free
   968                           
   969                           ; BSR set to: 1
   970                           ;main.c: 128: unlock.kb = 1;
   971  0016A0  0100               	movlb	0	; () banked
   972  0016A2  81CB               	bsf	_unlock& (0+255),0,b
   973                           
   974                           ; BSR set to: 0
   975                           ;main.c: 129: unlock.autoMode = 1;
   976  0016A4  83CB               	bsf	_unlock& (0+255),1,b
   977                           
   978                           ; BSR set to: 0
   979                           ;main.c: 130: unlock.visMode = 0;
   980  0016A6  95CB               	bcf	_unlock& (0+255),2,b
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 132: autoMode_init(AUTOMODE_INIT_RESTART);
   984  0016A8  0E00               	movlw	0
   985  0016AA  EC8E  F013         	call	_autoMode_init
   986                           
   987                           ;main.c: 133: disp_owner = DISPOWNER_AUTOMODE;
   988  0016AE  0E00               	movlw	0
   989  0016B0  6E51               	movwf	_disp_owner,c
   990                           
   991                           ;main.c: 135: machState = MACHSTATE_RUNNING;
   992  0016B2  0E01               	movlw	1
   993  0016B4  0100               	movlb	0	; () banked
   994  0016B6  6FCA               	movwf	_machState& (0+255),b
   995                           
   996                           ; BSR set to: 0
   997                           ;main.c: 137: smain.focus.kb = FOCUS_KB_AUTOMODE;
   998  0016B8  0E01               	movlw	1
   999  0016BA  6FBE               	movwf	(_smain+1)& (0+255),b	;volatile
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 141: GIE = 1;
  1003  0016BC  8EF2               	bsf	4082,7,c	;volatile
  1004  0016BE                     l5747:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;main.c: 143: {;main.c: 144: if (isr_flag.f1ms)
  1008  0016BE  A1CC               	btfss	_isr_flag& (0+255),0,b	;volatile
  1009  0016C0  D002               	goto	l114
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;main.c: 145: {;main.c: 146: isr_flag.f1ms = 0;
  1013  0016C2  91CC               	bcf	_isr_flag& (0+255),0,b	;volatile
  1014                           
  1015                           ;main.c: 147: smain.f.f1ms = 1;
  1016  0016C4  81BD               	bsf	_smain& (0+255),0,b	;volatile
  1017  0016C6                     l114:
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;main.c: 148: };main.c: 150: if (smain.f.f1ms)
  1021  0016C6  A1BD               	btfss	_smain& (0+255),0,b	;volatile
  1022  0016C8  D013               	goto	l5765
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 151: {;main.c: 152: if (++c_access_kb == 20)
  1026  0016CA  2A41               	incf	main@c_access_kb,f,c
  1027  0016CC  0E14               	movlw	20
  1028  0016CE  1841               	xorwf	main@c_access_kb,w,c
  1029  0016D0  A4D8               	btfss	status,2,c
  1030  0016D2  D005               	goto	l5759
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;main.c: 153: {;main.c: 154: c_access_kb = 0;
  1034  0016D4  0E00               	movlw	0
  1035  0016D6  6E41               	movwf	main@c_access_kb,c
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;main.c: 156: if (unlock.kb)
  1039  0016D8  B1CB               	btfsc	_unlock& (0+255),0,b
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;main.c: 157: {ikb_job();}
  1043  0016DA  EC96  F014         	call	_ikb_job	;wreg free
  1044  0016DE                     l5759:
  1045                           
  1046                           ;main.c: 158: };main.c: 161: if (++c_access_disp == 3)
  1047  0016DE  2A42               	incf	main@c_access_disp,f,c
  1048  0016E0  0E03               	movlw	3
  1049  0016E2  1842               	xorwf	main@c_access_disp,w,c
  1050  0016E4  A4D8               	btfss	status,2,c
  1051  0016E6  D004               	goto	l5765
  1052                           
  1053                           ;main.c: 162: {;main.c: 163: c_access_disp = 0;
  1054  0016E8  0E00               	movlw	0
  1055  0016EA  6E42               	movwf	main@c_access_disp,c
  1056                           
  1057                           ;main.c: 164: disp7s_job();
  1058  0016EC  ECE3  F00F         	call	_disp7s_job	;wreg free
  1059  0016F0                     l5765:
  1060                           
  1061                           ;main.c: 165: };main.c: 166: };main.c: 170: if (machState == MACHSTATE_RUNNING)
  1062  0016F0  0100               	movlb	0	; () banked
  1063  0016F2  05CA               	decf	_machState& (0+255),w,b
  1064  0016F4  A4D8               	btfss	status,2,c
  1065  0016F6  D03D               	goto	l5805
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;main.c: 171: {;main.c: 173: if (unlock.autoMode)
  1069  0016F8  A3CB               	btfss	_unlock& (0+255),1,b
  1070  0016FA  D020               	goto	l5789
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;main.c: 174: {;main.c: 175: codapp = autoMode_job();
  1074  0016FC  EC40  F00E         	call	_autoMode_job	;wreg free
  1075  001700  6E43               	movwf	main@codapp,c
  1076                           
  1077                           ;main.c: 177: if (codapp == 1)
  1078  001702  0443               	decf	main@codapp,w,c
  1079  001704  A4D8               	btfss	status,2,c
  1080  001706  D007               	goto	l5777
  1081                           
  1082                           ;main.c: 178: {;main.c: 179: smain.focus.kb = FOCUS_KB_VISMODE;
  1083  001708  0E02               	movlw	2
  1084  00170A  0100               	movlb	0	; () banked
  1085  00170C  6FBE               	movwf	(_smain+1)& (0+255),b	;volatile
  1086                           
  1087                           ;main.c: 180: disp_owner = DISPOWNER_VISMODE;
  1088  00170E  0E01               	movlw	1
  1089  001710  6E51               	movwf	_disp_owner,c
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;main.c: 181: unlock.visMode = 1;
  1093  001712  85CB               	bsf	_unlock& (0+255),2,b
  1094                           
  1095                           ;main.c: 182: }
  1096  001714  D013               	goto	l5789
  1097  001716                     l5777:
  1098                           
  1099                           ;main.c: 183: else if (codapp == 2)
  1100  001716  0E02               	movlw	2
  1101  001718  1843               	xorwf	main@codapp,w,c
  1102  00171A  A4D8               	btfss	status,2,c
  1103  00171C  D00F               	goto	l5789
  1104                           
  1105                           ;main.c: 184: {;main.c: 185: mpap.mode = MPAP_STALL_MODE;
  1106  00171E  0E01               	movlw	1
  1107  001720  0100               	movlb	0	; () banked
  1108  001722  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  1109                           
  1110                           ;main.c: 187: machState = MACHSTATE_CONFIG;
  1111  001724  0E02               	movlw	2
  1112  001726  6FCA               	movwf	_machState& (0+255),b
  1113                           
  1114                           ;main.c: 189: smain.focus.kb = FOCUS_KB_CONFIGMODE;
  1115  001728  0E03               	movlw	3
  1116  00172A  6FBE               	movwf	(_smain+1)& (0+255),b	;volatile
  1117                           
  1118                           ;main.c: 190: disp_owner = DISPOWNER_CONFIGMODE;
  1119  00172C  0E02               	movlw	2
  1120  00172E  6E51               	movwf	_disp_owner,c
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;main.c: 191: unlock.visMode = 0;
  1124  001730  95CB               	bcf	_unlock& (0+255),2,b
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;main.c: 192: unlock.autoMode = 0;
  1128  001732  93CB               	bcf	_unlock& (0+255),1,b
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;main.c: 193: configMode_init(0x0);
  1132  001734  0E00               	movlw	0
  1133  001736  EC8A  F014         	call	_configMode_init
  1134  00173A  8A89               	bsf	3977,5,c	;volatile
  1135  00173C                     l5789:
  1136                           
  1137                           ;main.c: 195: };main.c: 196: };main.c: 197: if (unlock.visMode)
  1138  00173C  0100               	movlb	0	; () banked
  1139  00173E  A5CB               	btfss	_unlock& (0+255),2,b
  1140  001740  D02E               	goto	l5819
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;main.c: 198: {;main.c: 199: codapp = visMode_job();
  1144  001742  ECBD  F013         	call	_visMode_job	;wreg free
  1145  001746  6E43               	movwf	main@codapp,c
  1146                           
  1147                           ;main.c: 201: if (codapp == 1)
  1148  001748  0443               	decf	main@codapp,w,c
  1149  00174A  A4D8               	btfss	status,2,c
  1150  00174C  D00A               	goto	l5801
  1151                           
  1152                           ;main.c: 202: {;main.c: 203: smain.focus.kb = FOCUS_KB_AUTOMODE;
  1153  00174E  0E01               	movlw	1
  1154  001750  0100               	movlb	0	; () banked
  1155  001752  6FBE               	movwf	(_smain+1)& (0+255),b	;volatile
  1156                           
  1157                           ;main.c: 204: disp_owner = DISPOWNER_AUTOMODE;
  1158  001754  0E00               	movlw	0
  1159  001756  6E51               	movwf	_disp_owner,c
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;main.c: 205: unlock.visMode = 0;
  1163  001758  95CB               	bcf	_unlock& (0+255),2,b
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;main.c: 207: autoMode_init(AUTOMODE_INIT_CONTINUE);
  1167  00175A  0E01               	movlw	1
  1168  00175C  EC8E  F013         	call	_autoMode_init
  1169                           
  1170                           ;main.c: 208: }
  1171  001760  D01E               	goto	l5819
  1172  001762                     l5801:
  1173                           
  1174                           ;main.c: 209: else if (codapp == 2)
  1175  001762  0E02               	movlw	2
  1176  001764  1843               	xorwf	main@codapp,w,c
  1177  001766  A4D8               	btfss	status,2,c
  1178  001768  D01A               	goto	l5819
  1179                           
  1180                           ;main.c: 210: {;main.c: 211: machState = MACHSTATE_CONFIG;
  1181  00176A  0E02               	movlw	2
  1182  00176C  0100               	movlb	0	; () banked
  1183  00176E  6FCA               	movwf	_machState& (0+255),b
  1184                           
  1185                           ;main.c: 212: };main.c: 213: };main.c: 214: }
  1186  001770  D016               	goto	l5819
  1187  001772                     l5805:
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 215: else if (machState == MACHSTATE_CONFIG)
  1191  001772  0E02               	movlw	2
  1192  001774  19CA               	xorwf	_machState& (0+255),w,b
  1193  001776  A4D8               	btfss	status,2,c
  1194  001778  D012               	goto	l5819
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 216: {;main.c: 219: if (configMode_job())
  1198  00177A  ECA6  F013         	call	_configMode_job	;wreg free
  1199  00177E  0900               	iorlw	0
  1200  001780  B4D8               	btfsc	status,2,c
  1201  001782  D00D               	goto	l5819
  1202                           
  1203                           ;main.c: 220: {;main.c: 221: smain.focus.kb = FOCUS_KB_AUTOMODE;
  1204  001784  0E01               	movlw	1
  1205  001786  0100               	movlb	0	; () banked
  1206  001788  6FBE               	movwf	(_smain+1)& (0+255),b	;volatile
  1207                           
  1208                           ;main.c: 222: disp_owner = DISPOWNER_AUTOMODE;
  1209  00178A  0E00               	movlw	0
  1210  00178C  6E51               	movwf	_disp_owner,c
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;main.c: 223: unlock.autoMode = 1;
  1214  00178E  83CB               	bsf	_unlock& (0+255),1,b
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;main.c: 225: autoMode_init(AUTOMODE_INIT_RESTART);
  1218  001790  0E00               	movlw	0
  1219  001792  EC8E  F013         	call	_autoMode_init
  1220                           
  1221                           ;main.c: 227: machState = MACHSTATE_RUNNING;
  1222  001796  0E01               	movlw	1
  1223  001798  0100               	movlb	0	; () banked
  1224  00179A  6FCA               	movwf	_machState& (0+255),b
  1225                           
  1226                           ; BSR set to: 0
  1227  00179C  9A89               	bcf	3977,5,c	;volatile
  1228  00179E                     l5819:
  1229                           
  1230                           ;main.c: 230: };main.c: 231: };main.c: 233: pump_job();
  1231  00179E  ECCD  F010         	call	_pump_job	;wreg free
  1232                           
  1233                           ;main.c: 234: mpap_sych();
  1234  0017A2  EC21  F00F         	call	_mpap_sych	;wreg free
  1235                           
  1236                           ;main.c: 237: smain.f.f1ms = 0;
  1237  0017A6  0100               	movlb	0	; () banked
  1238  0017A8  91BD               	bcf	_smain& (0+255),0,b	;volatile
  1239  0017AA  D789               	goto	l5747
  1240  0017AC                     __end_of_main:
  1241                           	opt callstack 0
  1242                           
  1243 ;; *************** function _visMode_job *****************
  1244 ;; Defined at:
  1245 ;;		line 26 in file "visualizerMode.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  cod_ret         1   63[COMRAM] char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      char 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 3F/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0
  1260 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1262 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1263 ;;Total ram usage:        1 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:   11
  1266 ;; This function calls:
  1267 ;;		_visMode_disp
  1268 ;;		_visMode_kb
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text1
  1275  00277A                     __ptext1:
  1276                           	opt callstack 0
  1277  00277A                     _visMode_job:
  1278                           	opt callstack 19
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;visualizerMode.c: 28: int8_t cod_ret = 0;
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;incstack = 0
  1285  00277A  0E00               	movlw	0
  1286  00277C  6E40               	movwf	visMode_job@cod_ret,c
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;visualizerMode.c: 30: if (smain.focus.kb == FOCUS_KB_VISMODE)
  1290  00277E  0E02               	movlw	2
  1291  002780  19BE               	xorwf	(_smain+1)& (0+255),w,b	;volatile
  1292  002782  A4D8               	btfss	status,2,c
  1293  002784  D003               	goto	l5585
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;visualizerMode.c: 31: {;visualizerMode.c: 32: cod_ret = visMode_kb();
  1297  002786  ECD9  F00E         	call	_visMode_kb	;wreg free
  1298  00278A  6E40               	movwf	visMode_job@cod_ret,c
  1299  00278C                     l5585:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;visualizerMode.c: 33: };visualizerMode.c: 35: if ( visMode.disp7s_accessReq == 1)
  1303  00278C  0449               	decf	_visMode,w,c
  1304  00278E  A4D8               	btfss	status,2,c
  1305  002790  D008               	goto	l5593
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;visualizerMode.c: 36: {;visualizerMode.c: 37: if (disp_owner == DISPOWNER_VISMODE)
  1309  002792  0451               	decf	_disp_owner,w,c
  1310  002794  A4D8               	btfss	status,2,c
  1311  002796  D003               	goto	l5591
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;visualizerMode.c: 38: {;visualizerMode.c: 39: visMode_disp(visMode.numVista);
  1315  002798  504A               	movf	_visMode+1,w,c
  1316  00279A  EC1F  F010         	call	_visMode_disp
  1317  00279E                     l5591:
  1318                           
  1319                           ;visualizerMode.c: 40: };visualizerMode.c: 41: visMode.disp7s_accessReq = 0;
  1320  00279E  0E00               	movlw	0
  1321  0027A0  6E49               	movwf	_visMode,c
  1322  0027A2                     l5593:
  1323                           
  1324                           ;visualizerMode.c: 42: };visualizerMode.c: 44: return cod_ret;
  1325  0027A2  5040               	movf	visMode_job@cod_ret,w,c
  1326  0027A4  0012               	return		;funcret
  1327  0027A6                     __end_of_visMode_job:
  1328                           	opt callstack 0
  1329                           
  1330 ;; *************** function _visMode_kb *****************
  1331 ;; Defined at:
  1332 ;;		line 46 in file "visualizerMode.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  cod_ret         1   11[COMRAM] char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      char 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 3F/0
  1343 ;;		On exit  : 3F/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0
  1347 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1349 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1350 ;;Total ram usage:        1 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    6
  1353 ;; This function calls:
  1354 ;;		_ikb_key_is_ready2read
  1355 ;;		_ikb_key_was_read
  1356 ;; This function is called by:
  1357 ;;		_visMode_job
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text2
  1362  001DB2                     __ptext2:
  1363                           	opt callstack 0
  1364  001DB2                     _visMode_kb:
  1365                           	opt callstack 23
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;visualizerMode.c: 48: int8_t cod_ret = 0;
  1369                           
  1370                           ;incstack = 0
  1371  001DB2  0E00               	movlw	0
  1372  001DB4  6E0C               	movwf	visMode_kb@cod_ret,c
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;visualizerMode.c: 50: if (ikb_key_is_ready2read(0))
  1376  001DB6  0E00               	movlw	0
  1377  001DB8  EC29  F014         	call	_ikb_key_is_ready2read
  1378  001DBC  0900               	iorlw	0
  1379  001DBE  B4D8               	btfsc	status,2,c
  1380  001DC0  D010               	goto	l5293
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;visualizerMode.c: 51: {;visualizerMode.c: 52: ikb_key_was_read(0);
  1384  001DC2  0E00               	movlw	0
  1385  001DC4  EC51  F014         	call	_ikb_key_was_read
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;visualizerMode.c: 54: if (++visMode.numVista >= (8+1))
  1389  001DC8  2A4A               	incf	_visMode+1,f,c
  1390  001DCA  504A               	movf	_visMode+1,w,c
  1391  001DCC  0A80               	xorlw	128
  1392  001DCE  0F77               	addlw	-137
  1393  001DD0  A0D8               	btfss	status,0,c
  1394  001DD2  D005               	goto	l5291
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;visualizerMode.c: 55: {;visualizerMode.c: 56: visMode.numVista = 0x00;
  1398  001DD4  0E00               	movlw	0
  1399  001DD6  6E4A               	movwf	_visMode+1,c
  1400                           
  1401                           ;visualizerMode.c: 57: cod_ret = 1;
  1402  001DD8  0E01               	movlw	1
  1403  001DDA  6E0C               	movwf	visMode_kb@cod_ret,c
  1404                           
  1405                           ;visualizerMode.c: 58: }
  1406  001DDC  D002               	goto	l5293
  1407  001DDE                     l5291:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;visualizerMode.c: 59: else;visualizerMode.c: 60: {;visualizerMode.c: 61: visMode.disp7s
      +                          _accessReq = 1;
  1411  001DDE  0E01               	movlw	1
  1412  001DE0  6E49               	movwf	_visMode,c
  1413  001DE2                     l5293:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;visualizerMode.c: 62: };visualizerMode.c: 63: };visualizerMode.c: 65: if (ikb_key_is_re
      +                          ady2read(1))
  1417  001DE2  0E01               	movlw	1
  1418  001DE4  EC29  F014         	call	_ikb_key_is_ready2read
  1419  001DE8  0900               	iorlw	0
  1420  001DEA  B4D8               	btfsc	status,2,c
  1421  001DEC  D00D               	goto	l5303
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;visualizerMode.c: 66: {;visualizerMode.c: 67: ikb_key_was_read(1);
  1425  001DEE  0E01               	movlw	1
  1426  001DF0  EC51  F014         	call	_ikb_key_was_read
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;visualizerMode.c: 69: if (--visMode.numVista < 0)
  1430  001DF4  064A               	decf	_visMode+1,f,c
  1431  001DF6  AE4A               	btfss	_visMode+1,7,c
  1432  001DF8  D005               	goto	l5301
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;visualizerMode.c: 70: {;visualizerMode.c: 71: visMode.numVista = (8+1)-1;
  1436  001DFA  0E08               	movlw	8
  1437  001DFC  6E4A               	movwf	_visMode+1,c
  1438                           
  1439                           ;visualizerMode.c: 72: cod_ret = 1;
  1440  001DFE  0E01               	movlw	1
  1441  001E00  6E0C               	movwf	visMode_kb@cod_ret,c
  1442                           
  1443                           ;visualizerMode.c: 73: }
  1444  001E02  D002               	goto	l5303
  1445  001E04                     l5301:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;visualizerMode.c: 74: else;visualizerMode.c: 75: {;visualizerMode.c: 76: visMode.disp7s
      +                          _accessReq = 1;
  1449  001E04  0E01               	movlw	1
  1450  001E06  6E49               	movwf	_visMode,c
  1451  001E08                     l5303:
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;visualizerMode.c: 77: };visualizerMode.c: 78: };visualizerMode.c: 79: if (ikb_key_is_re
      +                          ady2read(2))
  1455  001E08  0E02               	movlw	2
  1456  001E0A  EC29  F014         	call	_ikb_key_is_ready2read
  1457  001E0E  0900               	iorlw	0
  1458  001E10  B4D8               	btfsc	status,2,c
  1459  001E12  D003               	goto	l862
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;visualizerMode.c: 80: {;visualizerMode.c: 81: ikb_key_was_read(2);
  1463  001E14  0E02               	movlw	2
  1464  001E16  EC51  F014         	call	_ikb_key_was_read
  1465  001E1A                     l862:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;visualizerMode.c: 83: };visualizerMode.c: 84: if (ikb_key_is_ready2read(3))
  1469  001E1A  0E03               	movlw	3
  1470  001E1C  EC29  F014         	call	_ikb_key_is_ready2read
  1471  001E20  0900               	iorlw	0
  1472  001E22  B4D8               	btfsc	status,2,c
  1473  001E24  D003               	goto	l863
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;visualizerMode.c: 85: {;visualizerMode.c: 86: ikb_key_was_read(3);
  1477  001E26  0E03               	movlw	3
  1478  001E28  EC51  F014         	call	_ikb_key_was_read
  1479  001E2C                     l863:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;visualizerMode.c: 88: };visualizerMode.c: 89: if (ikb_key_is_ready2read(4))
  1483  001E2C  0E04               	movlw	4
  1484  001E2E  EC29  F014         	call	_ikb_key_is_ready2read
  1485  001E32  0900               	iorlw	0
  1486  001E34  B4D8               	btfsc	status,2,c
  1487  001E36  D003               	goto	l5311
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;visualizerMode.c: 90: {;visualizerMode.c: 91: ikb_key_was_read(4);
  1491  001E38  0E04               	movlw	4
  1492  001E3A  EC51  F014         	call	_ikb_key_was_read
  1493  001E3E                     l5311:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;visualizerMode.c: 93: };visualizerMode.c: 94: return cod_ret;
  1497  001E3E  500C               	movf	visMode_kb@cod_ret,w,c
  1498                           
  1499                           ; BSR set to: 0
  1500  001E40  0012               	return		;funcret
  1501  001E42                     __end_of_visMode_kb:
  1502                           	opt callstack 0
  1503                           
  1504 ;; *************** function _visMode_disp *****************
  1505 ;; Defined at:
  1506 ;;		line 96 in file "visualizerMode.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  numVista        1    wreg     char 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  numVista        1   62[COMRAM] char 
  1511 ;;  qty             3   59[COMRAM] char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 3F/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1521 ;;      Params:         0       0       0       0       0       0       0       0       0
  1522 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1524 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1525 ;;Total ram usage:        4 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:   10
  1528 ;; This function calls:
  1529 ;;		_disp7s_modeDisp_writeInt
  1530 ;;		_disp7s_modeDisp_writeText_oil
  1531 ;;		_disp7s_qtyDisp_writeFloat
  1532 ;;		_disp7s_qtyDisp_writeInt
  1533 ;;		_disp7s_qtyDisp_writeText_OFF
  1534 ;; This function is called by:
  1535 ;;		_visMode_job
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text3
  1540  00203E                     __ptext3:
  1541                           	opt callstack 0
  1542  00203E                     _visMode_disp:
  1543                           	opt callstack 19
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;incstack = 0
  1547                           ;visMode_disp@numVista stored from wreg
  1548  00203E  6E3F               	movwf	visMode_disp@numVista,c
  1549                           
  1550                           ;visualizerMode.c: 98: double qty;;visualizerMode.c: 100: if (numVista < 8)
  1551  002040  503F               	movf	visMode_disp@numVista,w,c
  1552  002042  0A80               	xorlw	128
  1553  002044  0F78               	addlw	-136
  1554  002046  B0D8               	btfsc	status,0,c
  1555  002048  D02A               	goto	l5327
  1556                           
  1557                           ;visualizerMode.c: 101: {;visualizerMode.c: 102: disp7s_modeDisp_writeInt(numVista+1);
  1558  00204A  0E01               	movlw	1
  1559  00204C  243F               	addwf	visMode_disp@numVista,w,c
  1560  00204E  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  1561  002050  6AE8               	clrf	wreg,c
  1562  002052  B0D8               	btfsc	status,0,c
  1563  002054  2AE8               	incf	wreg,f,c
  1564  002056  BE3F               	btfsc	visMode_disp@numVista,7,c
  1565  002058  06E8               	decf	wreg,f,c
  1566  00205A  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  1567  00205C  EC44  F014         	call	_disp7s_modeDisp_writeInt	;wreg free
  1568                           
  1569                           ;visualizerMode.c: 104: qty = pulsonic.nozzle[numVista].Q_mlh;
  1570  002060  503F               	movf	visMode_disp@numVista,w,c
  1571  002062  0D06               	mullw	6
  1572  002064  0E06               	movlw	low (_pulsonic+6)
  1573  002066  24F3               	addwf	prodl,w,c
  1574  002068  6ED9               	movwf	fsr2l,c
  1575  00206A  0E01               	movlw	high (_pulsonic+6)
  1576  00206C  20F4               	addwfc	prodh,w,c
  1577  00206E  6EDA               	movwf	fsr2h,c
  1578  002070  CFDE F03C          	movff	postinc2,visMode_disp@qty
  1579  002074  CFDE F03D          	movff	postinc2,visMode_disp@qty+1
  1580  002078  CFDD F03E          	movff	postdec2,visMode_disp@qty+2
  1581                           
  1582                           ;visualizerMode.c: 105: if (qty == 0)
  1583  00207C  503C               	movf	visMode_disp@qty,w,c
  1584  00207E  103D               	iorwf	visMode_disp@qty+1,w,c
  1585  002080  103E               	iorwf	visMode_disp@qty+2,w,c
  1586  002082  A4D8               	btfss	status,2,c
  1587  002084  D003               	goto	l5325
  1588                           
  1589                           ;visualizerMode.c: 106: {;visualizerMode.c: 107: disp7s_qtyDisp_writeText_OFF();
  1590  002086  EC6D  F014         	call	_disp7s_qtyDisp_writeText_OFF	;wreg free
  1591                           
  1592                           ;visualizerMode.c: 108: }
  1593  00208A  0012               	return	
  1594  00208C                     l5325:
  1595                           
  1596                           ;visualizerMode.c: 109: else;visualizerMode.c: 110: {;visualizerMode.c: 111: disp7s_qtyD
      +                          isp_writeFloat( qty );
  1597  00208C  C03C  F141         	movff	visMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  1598  002090  C03D  F142         	movff	visMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  1599  002094  C03E  F143         	movff	visMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  1600  002098  EC1A  F014         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  1601  00209C  0012               	return	
  1602  00209E                     l5327:
  1603                           
  1604                           ;visualizerMode.c: 114: else;visualizerMode.c: 115: {;visualizerMode.c: 116: disp7s_mode
      +                          Disp_writeText_oil();
  1605  00209E  EC84  F014         	call	_disp7s_modeDisp_writeText_oil	;wreg free
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;visualizerMode.c: 117: disp7s_qtyDisp_writeInt( pulsonic.oil.viscosity );
  1609  0020A2  5137               	movf	(_pulsonic+55)& (0+255),w,b
  1610  0020A4  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  1611  0020A6  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  1612  0020A8  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  1613  0020AA  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  1614  0020AC  EC37  F014         	call	_disp7s_qtyDisp_writeInt	;wreg free
  1615  0020B0  0012               	return		;funcret
  1616  0020B2                     __end_of_visMode_disp:
  1617                           	opt callstack 0
  1618                           
  1619 ;; *************** function _pump_job *****************
  1620 ;; Defined at:
  1621 ;;		line 22 in file "pump.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  cod_ret         1    0        char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      char 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1638 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1639 ;;Total ram usage:        1 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    5
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text4
  1650  00219A                     __ptext4:
  1651                           	opt callstack 0
  1652  00219A                     _pump_job:
  1653                           	opt callstack 25
  1654                           
  1655                           ;pump.c: 25: static int8_t c;;pump.c: 27: if (pump.ticks > 0)
  1656                           
  1657                           ;incstack = 0
  1658  00219A  5044               	movf	_pump,w,c
  1659  00219C  1045               	iorwf	_pump+1,w,c
  1660  00219E  B4D8               	btfsc	status,2,c
  1661  0021A0  0012               	return	
  1662                           
  1663                           ;pump.c: 28: {;pump.c: 29: if (pump.sm0 == 0)
  1664  0021A2  5046               	movf	_pump+2,w,c
  1665  0021A4  A4D8               	btfss	status,2,c
  1666  0021A6  D005               	goto	l5627
  1667  0021A8  908D               	bcf	3981,0,c	;volatile
  1668                           
  1669                           ;pump.c: 32: c = 0x0;
  1670  0021AA  0E00               	movlw	0
  1671  0021AC  6E4E               	movwf	pump_job@c,c
  1672                           
  1673                           ;pump.c: 33: pump.sm0++;
  1674  0021AE  2A46               	incf	_pump+2,f,c
  1675                           
  1676                           ;pump.c: 34: }
  1677  0021B0  0012               	return	
  1678  0021B2                     l5627:
  1679                           
  1680                           ;pump.c: 35: else if (pump.sm0 == 1)
  1681  0021B2  0446               	decf	_pump+2,w,c
  1682  0021B4  A4D8               	btfss	status,2,c
  1683  0021B6  D00D               	goto	l5639
  1684                           
  1685                           ;pump.c: 36: {;pump.c: 37: if (smain.f.f1ms)
  1686  0021B8  0100               	movlb	0	; () banked
  1687  0021BA  A1BD               	btfss	_smain& (0+255),0,b	;volatile
  1688  0021BC  0012               	return	
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;pump.c: 38: {;pump.c: 39: if (++c == 50)
  1692  0021BE  2A4E               	incf	pump_job@c,f,c
  1693  0021C0  0E32               	movlw	50
  1694  0021C2  184E               	xorwf	pump_job@c,w,c
  1695  0021C4  A4D8               	btfss	status,2,c
  1696  0021C6  0012               	return	
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;pump.c: 40: {;pump.c: 41: c=0x00;
  1700  0021C8  0E00               	movlw	0
  1701  0021CA  6E4E               	movwf	pump_job@c,c
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;pump.c: 42: pump.sm0++;
  1705  0021CC  2A46               	incf	_pump+2,f,c
  1706                           
  1707                           ; BSR set to: 0
  1708  0021CE  808D               	bsf	3981,0,c	;volatile
  1709                           
  1710                           ;pump.c: 44: };pump.c: 45: };pump.c: 46: }
  1711  0021D0  0012               	return	
  1712  0021D2                     l5639:
  1713                           
  1714                           ;pump.c: 47: else if (pump.sm0 == 2)
  1715  0021D2  0E02               	movlw	2
  1716  0021D4  1846               	xorwf	_pump+2,w,c
  1717  0021D6  A4D8               	btfss	status,2,c
  1718  0021D8  0012               	return	
  1719                           
  1720                           ;pump.c: 48: {;pump.c: 49: if (smain.f.f1ms)
  1721  0021DA  0100               	movlb	0	; () banked
  1722  0021DC  A1BD               	btfss	_smain& (0+255),0,b	;volatile
  1723  0021DE  0012               	return	
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;pump.c: 50: {;pump.c: 51: if (++c == 50)
  1727  0021E0  2A4E               	incf	pump_job@c,f,c
  1728  0021E2  0E32               	movlw	50
  1729  0021E4  184E               	xorwf	pump_job@c,w,c
  1730  0021E6  A4D8               	btfss	status,2,c
  1731  0021E8  0012               	return	
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;pump.c: 52: {;pump.c: 53: c=0x00;
  1735  0021EA  0E00               	movlw	0
  1736  0021EC  6E4E               	movwf	pump_job@c,c
  1737                           
  1738                           ;pump.c: 54: pump.sm0 = 0x00;
  1739  0021EE  0E00               	movlw	0
  1740  0021F0  6E46               	movwf	_pump+2,c
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;pump.c: 56: if (--pump.ticks == 0)
  1744  0021F2  0644               	decf	_pump,f,c
  1745  0021F4  A0D8               	btfss	status,0,c
  1746  0021F6  0645               	decf	_pump+1,f,c
  1747  0021F8  5044               	movf	_pump,w,c
  1748  0021FA  1045               	iorwf	_pump+1,w,c
  1749  0021FC  B4D8               	btfsc	status,2,c
  1750  0021FE  0012               	return	
  1751  002200  0012               	return	
  1752  002202                     __end_of_pump_job:
  1753                           	opt callstack 0
  1754                           
  1755 ;; *************** function _pulsonic_init *****************
  1756 ;; Defined at:
  1757 ;;		line 7 in file "pulsonic.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  i               1   10[COMRAM] char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 3F/1
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0
  1772 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1774 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1775 ;;Total ram usage:        1 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    5
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text5
  1786  0022C8                     __ptext5:
  1787                           	opt callstack 0
  1788  0022C8                     _pulsonic_init:
  1789                           	opt callstack 25
  1790                           
  1791                           ;pulsonic.c: 9: int8_t i;;pulsonic.c: 10: pulsonic.dist_total_time = 60;
  1792                           
  1793                           ;incstack = 0
  1794  0022C8  0E00               	movlw	0
  1795  0022CA  0101               	movlb	1	; () banked
  1796  0022CC  6F03               	movwf	(_pulsonic+3)& (0+255),b
  1797  0022CE  0E3C               	movlw	60
  1798  0022D0  6F02               	movwf	(_pulsonic+2)& (0+255),b
  1799                           
  1800                           ;pulsonic.c: 14: for (i=0; i< 8; i++)
  1801  0022D2  0E00               	movlw	0
  1802  0022D4  6E0B               	movwf	pulsonic_init@i,c
  1803  0022D6                     l5481:
  1804                           
  1805                           ;pulsonic.c: 15: {;pulsonic.c: 16: pulsonic.nozzle[i].Q_mlh = 2.4f;
  1806  0022D6  500B               	movf	pulsonic_init@i,w,c
  1807  0022D8  0D06               	mullw	6
  1808  0022DA  0E06               	movlw	low (_pulsonic+6)
  1809  0022DC  24F3               	addwf	prodl,w,c
  1810  0022DE  6ED9               	movwf	fsr2l,c
  1811  0022E0  0E01               	movlw	high (_pulsonic+6)
  1812  0022E2  20F4               	addwfc	prodh,w,c
  1813  0022E4  6EDA               	movwf	fsr2h,c
  1814  0022E6  0E9A               	movlw	154
  1815  0022E8  6EDE               	movwf	postinc2,c
  1816  0022EA  0E19               	movlw	25
  1817  0022EC  6EDE               	movwf	postinc2,c
  1818  0022EE  0E40               	movlw	64
  1819  0022F0  6EDE               	movwf	postinc2,c
  1820  0022F2  2A0B               	incf	pulsonic_init@i,f,c
  1821  0022F4  500B               	movf	pulsonic_init@i,w,c
  1822  0022F6  0A80               	xorlw	128
  1823  0022F8  0F78               	addlw	-136
  1824  0022FA  A0D8               	btfss	status,0,c
  1825  0022FC  D7EC               	goto	l5481
  1826                           
  1827                           ;pulsonic.c: 17: };pulsonic.c: 18: pulsonic.oil.viscosity = OIL_VISCOSITY[0];
  1828  0022FE  0E0B               	movlw	low _OIL_VISCOSITY
  1829  002300  6EF6               	movwf	tblptrl,c
  1830  002302                     	if	1	;There is more than 1 active tblptr byte
  1831  002302  0E08               	movlw	high _OIL_VISCOSITY
  1832  002304  6EF7               	movwf	tblptrh,c
  1833  002306                     	endif
  1834  002306                     	if	0	;There are less than 3 active tblptr bytes
  1835  002306                     	endif
  1836  002306  0008               	tblrd		*
  1837  002308  CFF5 F137          	movff	tablat,_pulsonic+55
  1838                           
  1839                           ;pulsonic.c: 20: pulsonic.nozzle[3].Q_mlh = 0;
  1840  00230C  0E00               	movlw	0
  1841  00230E  0101               	movlb	1	; () banked
  1842  002310  6F18               	movwf	(_pulsonic+24)& (0+255),b
  1843  002312  0E00               	movlw	0
  1844  002314  6F19               	movwf	(_pulsonic+25)& (0+255),b
  1845  002316  0E00               	movlw	0
  1846  002318  6F1A               	movwf	(_pulsonic+26)& (0+255),b
  1847                           
  1848                           ; BSR set to: 1
  1849                           ;pulsonic.c: 21: pulsonic.nozzle[5].Q_mlh = 0;
  1850  00231A  0E00               	movlw	0
  1851  00231C  6F24               	movwf	(_pulsonic+36)& (0+255),b
  1852  00231E  0E00               	movlw	0
  1853  002320  6F25               	movwf	(_pulsonic+37)& (0+255),b
  1854  002322  0E00               	movlw	0
  1855  002324  6F26               	movwf	(_pulsonic+38)& (0+255),b
  1856                           
  1857                           ; BSR set to: 1
  1858  002326  0012               	return		;funcret
  1859  002328                     __end_of_pulsonic_init:
  1860                           	opt callstack 0
  1861                           
  1862 ;; *************** function _mpap_sych *****************
  1863 ;; Defined at:
  1864 ;;		line 159 in file "mpap.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0
  1879 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1881 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:    5
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text6
  1893  001E42                     __ptext6:
  1894                           	opt callstack 0
  1895  001E42                     _mpap_sych:
  1896                           	opt callstack 25
  1897                           
  1898                           ;mpap.c: 161: static int8_t sm0;;mpap.c: 162: static int8_t c;;mpap.c: 163: if (sm0 == 0
      +                          )
  1899                           
  1900                           ; BSR set to: 1
  1901                           ;incstack = 0
  1902  001E42  5050               	movf	mpap_sych@sm0,w,c
  1903  001E44  A4D8               	btfss	status,2,c
  1904  001E46  D011               	goto	l5665
  1905                           
  1906                           ;mpap.c: 164: {;mpap.c: 165: if ((mpap.mode == MPAP_NORMAL_MODE) || (mpap.mode == MPAP_H
      +                          OMMING_MODE))
  1907  001E48  0E03               	movlw	3
  1908  001E4A  0100               	movlb	0	; () banked
  1909  001E4C  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  1910  001E4E  B4D8               	btfsc	status,2,c
  1911  001E50  D004               	goto	u7030
  1912                           
  1913                           ; BSR set to: 0
  1914  001E52  0E02               	movlw	2
  1915  001E54  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  1916  001E56  A4D8               	btfss	status,2,c
  1917  001E58  D002               	goto	l5661
  1918  001E5A                     u7030:
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;mpap.c: 166: {;mpap.c: 167: sm0++;
  1922  001E5A  2A50               	incf	mpap_sych@sm0,f,c
  1923                           
  1924                           ;mpap.c: 168: }
  1925  001E5C  0012               	return	
  1926  001E5E                     l5661:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;mpap.c: 169: else if (mpap.mode == MPAP_STALL_MODE)
  1930  001E5E  05B7               	decf	(_mpap+7)& (0+255),w,b	;volatile
  1931  001E60  A4D8               	btfss	status,2,c
  1932  001E62  0012               	return	
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;mpap.c: 170: {;mpap.c: 171: sm0 = 3;
  1936  001E64  0E03               	movlw	3
  1937  001E66  6E50               	movwf	mpap_sych@sm0,c
  1938  001E68  0012               	return	
  1939  001E6A                     l5665:
  1940                           
  1941                           ;mpap.c: 174: else if (sm0 == 1)
  1942  001E6A  0450               	decf	mpap_sych@sm0,w,c
  1943  001E6C  A4D8               	btfss	status,2,c
  1944  001E6E  D013               	goto	l5681
  1945                           
  1946                           ;mpap.c: 175: {;mpap.c: 176: if (mpap.numSteps_tomove == 0)
  1947  001E70  0100               	movlb	0	; () banked
  1948  001E72  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  1949  001E74  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
  1950  001E76  A4D8               	btfss	status,2,c
  1951  001E78  0012               	return	
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;mpap.c: 177: {;mpap.c: 178: if (mpap.mode == MPAP_HOMMING_MODE)
  1955  001E7A  0E02               	movlw	2
  1956  001E7C  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  1957  001E7E  A4D8               	btfss	status,2,c
  1958  001E80  D005               	goto	l5675
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;mpap.c: 179: {;mpap.c: 180: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  1962  001E82  0101               	movlb	1	; () banked
  1963  001E84  A13B               	btfss	(_pulsonic+59)& (0+255),0,b
  1964  001E86  D003               	goto	l5677
  1965                           
  1966                           ; BSR set to: 1
  1967                           ;mpap.c: 181: {;mpap.c: 182: pulsonic.errors.flag.mpap_home_sensor = 0;
  1968  001E88  913B               	bcf	(_pulsonic+59)& (0+255),0,b
  1969  001E8A  D001               	goto	l5677
  1970  001E8C                     l5675:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;mpap.c: 186: else if (mpap.mode == MPAP_NORMAL_MODE)
  1974  001E8C  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  1975  001E8E                     l5677:
  1976                           
  1977                           ;mpap.c: 188: };mpap.c: 189: sm0++;
  1978  001E8E  2A50               	incf	mpap_sych@sm0,f,c
  1979                           
  1980                           ;mpap.c: 190: c = 0;
  1981  001E90  0E00               	movlw	0
  1982  001E92  6E4F               	movwf	mpap_sych@c,c
  1983  001E94  0012               	return	
  1984  001E96                     l5681:
  1985                           
  1986                           ;mpap.c: 193: else if (sm0 == 2)
  1987  001E96  0E02               	movlw	2
  1988  001E98  1850               	xorwf	mpap_sych@sm0,w,c
  1989  001E9A  A4D8               	btfss	status,2,c
  1990  001E9C  D00D               	goto	l5691
  1991                           
  1992                           ;mpap.c: 194: {;mpap.c: 195: if (smain.f.f1ms)
  1993  001E9E  0100               	movlb	0	; () banked
  1994  001EA0  A1BD               	btfss	_smain& (0+255),0,b	;volatile
  1995  001EA2  0012               	return	
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;mpap.c: 196: {;mpap.c: 197: if (++c == 10)
  1999  001EA4  2A4F               	incf	mpap_sych@c,f,c
  2000  001EA6  0E0A               	movlw	10
  2001  001EA8  184F               	xorwf	mpap_sych@c,w,c
  2002  001EAA  A4D8               	btfss	status,2,c
  2003  001EAC  0012               	return	
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;mpap.c: 198: {;mpap.c: 199: c = 0;
  2007  001EAE  0E00               	movlw	0
  2008  001EB0  6E4F               	movwf	mpap_sych@c,c
  2009                           
  2010                           ;mpap.c: 200: mpap.mode = MPAP_STALL_MODE;
  2011  001EB2  0E01               	movlw	1
  2012  001EB4  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  2013  001EB6  D7D1               	goto	u7030
  2014  001EB8                     l5691:
  2015                           
  2016                           ;mpap.c: 205: else if (sm0 == 3)
  2017  001EB8  0E03               	movlw	3
  2018  001EBA  1850               	xorwf	mpap_sych@sm0,w,c
  2019  001EBC  A4D8               	btfss	status,2,c
  2020  001EBE  0012               	return	
  2021                           
  2022                           ;mpap.c: 206: {;mpap.c: 207: if (mpap.mode == MPAP_IDLE_MODE)
  2023  001EC0  0100               	movlb	0	; () banked
  2024  001EC2  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  2025  001EC4  A4D8               	btfss	status,2,c
  2026  001EC6  0012               	return	
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;mpap.c: 208: {;mpap.c: 209: sm0 = 0;
  2030  001EC8  0E00               	movlw	0
  2031  001ECA  6E50               	movwf	mpap_sych@sm0,c
  2032  001ECC  0012               	return		;funcret
  2033  001ECE                     __end_of_mpap_sych:
  2034                           	opt callstack 0
  2035                           
  2036 ;; *************** function _ikb_job *****************
  2037 ;; Defined at:
  2038 ;;		line 413 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 3F/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2056 ;;Total ram usage:        0 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    8
  2059 ;; This function calls:
  2060 ;;		_ikey_parsing
  2061 ;;		_ikey_scan
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text7
  2068  00292C                     __ptext7:
  2069                           	opt callstack 0
  2070  00292C                     _ikb_job:
  2071                           	opt callstack 22
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;ikb.c: 415: ikey_scan();
  2075                           
  2076                           ;incstack = 0
  2077  00292C  EC53  F00A         	call	_ikey_scan	;wreg free
  2078                           
  2079                           ;ikb.c: 416: ikey_parsing();
  2080  002930  EC09  F004         	call	_ikey_parsing	;wreg free
  2081  002934  0012               	return		;funcret
  2082  002936                     __end_of_ikb_job:
  2083                           	opt callstack 0
  2084                           
  2085 ;; *************** function _ikey_scan *****************
  2086 ;; Defined at:
  2087 ;;		line 448 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  k               1   11[COMRAM] char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 3F/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0
  2102 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2103 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2104 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2105 ;;Total ram usage:        2 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    6
  2108 ;; This function calls:
  2109 ;;		_keyRead_pin_key0
  2110 ;;		_keyRead_pin_key1
  2111 ;;		_keyRead_pin_key2
  2112 ;;		_keyRead_pin_key3
  2113 ;;		_keyRead_pin_key4
  2114 ;; This function is called by:
  2115 ;;		_ikb_job
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text8
  2120  0014A6                     __ptext8:
  2121                           	opt callstack 0
  2122  0014A6                     _ikey_scan:
  2123                           	opt callstack 23
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;ikb.c: 450: int8_t k = 5-1;
  2127                           
  2128                           ;incstack = 0
  2129  0014A6  0E04               	movlw	4
  2130  0014A8  6E0C               	movwf	ikey_scan@k,c
  2131  0014AA                     l5031:
  2132                           
  2133                           ;ikb.c: 452: {;ikb.c: 453: if (key[k].sm0 == 0)
  2134  0014AA  500C               	movf	ikey_scan@k,w,c
  2135  0014AC  0D10               	mullw	16
  2136  0014AE  50F3               	movf	prodl,w,c
  2137  0014B0  0F64               	addlw	low (_key+4)
  2138  0014B2  6ED9               	movwf	fsr2l,c
  2139  0014B4  6ADA               	clrf	fsr2h,c
  2140  0014B6  50DF               	movf	indf2,w,c
  2141  0014B8  A4D8               	btfss	status,2,c
  2142  0014BA  D016               	goto	l5037
  2143                           
  2144                           ;ikb.c: 454: {;ikb.c: 455: if (key[k].keyRead() == 0)
  2145  0014BC  500C               	movf	ikey_scan@k,w,c
  2146  0014BE  0D10               	mullw	16
  2147  0014C0  50F3               	movf	prodl,w,c
  2148  0014C2  0F60               	addlw	low _key
  2149  0014C4  6ED9               	movwf	fsr2l,c
  2150  0014C6  6ADA               	clrf	fsr2h,c
  2151  0014C8  D801               	call	u5718
  2152  0014CA  D00A               	goto	u5719
  2153  0014CC                     u5718:
  2154  0014CC  0005               	push	
  2155  0014CE  6EFA               	movwf	pclath,c
  2156  0014D0  50DE               	movf	postinc2,w,c
  2157  0014D2  6EFD               	movwf	tosl,c
  2158  0014D4  50DE               	movf	postinc2,w,c
  2159  0014D6  6EFE               	movwf	tosh,c
  2160  0014D8  50F8               	movf	tblptru,w,c
  2161  0014DA  6EFF               	movwf	tosu,c
  2162  0014DC  50FA               	movf	pclath,w,c
  2163  0014DE  0012               	return		;indir
  2164  0014E0                     u5719:
  2165  0014E0  0900               	iorlw	0
  2166  0014E2  A4D8               	btfss	status,2,c
  2167  0014E4  D0AC               	goto	l5067
  2168  0014E6  D041               	goto	L1
  2169  0014E8                     l5037:
  2170                           
  2171                           ;ikb.c: 460: else if (key[k].sm0 == 1)
  2172  0014E8  500C               	movf	ikey_scan@k,w,c
  2173  0014EA  0D10               	mullw	16
  2174  0014EC  50F3               	movf	prodl,w,c
  2175  0014EE  0F64               	addlw	low (_key+4)
  2176  0014F0  6ED9               	movwf	fsr2l,c
  2177  0014F2  6ADA               	clrf	fsr2h,c
  2178  0014F4  04DE               	decf	postinc2,w,c
  2179  0014F6  A4D8               	btfss	status,2,c
  2180  0014F8  D040               	goto	l5049
  2181                           
  2182                           ;ikb.c: 461: {;ikb.c: 462: if (++key[k].counter0 == 4)
  2183  0014FA  500C               	movf	ikey_scan@k,w,c
  2184  0014FC  0D10               	mullw	16
  2185  0014FE  50F3               	movf	prodl,w,c
  2186  001500  0F65               	addlw	low (_key+5)
  2187  001502  6ED9               	movwf	fsr2l,c
  2188  001504  6ADA               	clrf	fsr2h,c
  2189  001506  2ADF               	incf	indf2,f,c
  2190  001508  0E04               	movlw	4
  2191  00150A  18DE               	xorwf	postinc2,w,c
  2192  00150C  A4D8               	btfss	status,2,c
  2193  00150E  D097               	goto	l5067
  2194                           
  2195                           ;ikb.c: 463: {;ikb.c: 464: key[k].counter0 = 0x00;
  2196  001510  500C               	movf	ikey_scan@k,w,c
  2197  001512  0D10               	mullw	16
  2198  001514  50F3               	movf	prodl,w,c
  2199  001516  0F65               	addlw	low (_key+5)
  2200  001518  6ED9               	movwf	fsr2l,c
  2201  00151A  6ADA               	clrf	fsr2h,c
  2202  00151C  0E00               	movlw	0
  2203  00151E  6EDF               	movwf	indf2,c
  2204                           
  2205                           ;ikb.c: 466: if (key[k].keyRead() != 0)
  2206  001520  500C               	movf	ikey_scan@k,w,c
  2207  001522  0D10               	mullw	16
  2208  001524  50F3               	movf	prodl,w,c
  2209  001526  0F60               	addlw	low _key
  2210  001528  6ED9               	movwf	fsr2l,c
  2211  00152A  6ADA               	clrf	fsr2h,c
  2212  00152C  D801               	call	u5758
  2213  00152E  D00A               	goto	u5759
  2214  001530                     u5758:
  2215  001530  0005               	push	
  2216  001532  6EFA               	movwf	pclath,c
  2217  001534  50DE               	movf	postinc2,w,c
  2218  001536  6EFD               	movwf	tosl,c
  2219  001538  50DE               	movf	postinc2,w,c
  2220  00153A  6EFE               	movwf	tosh,c
  2221  00153C  50F8               	movf	tblptru,w,c
  2222  00153E  6EFF               	movwf	tosu,c
  2223  001540  50FA               	movf	pclath,w,c
  2224  001542  0012               	return		;indir
  2225  001544                     u5759:
  2226  001544  0900               	iorlw	0
  2227  001546  B4D8               	btfsc	status,2,c
  2228  001548  D008               	goto	l5047
  2229  00154A                     u5760:
  2230                           
  2231                           ;ikb.c: 467: {;ikb.c: 468: key[k].sm0--;
  2232  00154A  500C               	movf	ikey_scan@k,w,c
  2233  00154C  0D10               	mullw	16
  2234  00154E  50F3               	movf	prodl,w,c
  2235  001550  0F64               	addlw	low (_key+4)
  2236  001552  6ED9               	movwf	fsr2l,c
  2237  001554  6ADA               	clrf	fsr2h,c
  2238  001556  06DF               	decf	indf2,f,c
  2239                           
  2240                           ;ikb.c: 469: }
  2241  001558  D072               	goto	l5067
  2242  00155A                     l5047:
  2243                           
  2244                           ;ikb.c: 470: else;ikb.c: 471: {;ikb.c: 472: key[k].bf.state = 1;
  2245  00155A  500C               	movf	ikey_scan@k,w,c
  2246  00155C  0D10               	mullw	16
  2247  00155E  50F3               	movf	prodl,w,c
  2248  001560  0F6A               	addlw	low (_key+10)
  2249  001562  6ED9               	movwf	fsr2l,c
  2250  001564  6ADA               	clrf	fsr2h,c
  2251  001566  0100               	movlb	0	; () banked
  2252  001568  80DF               	bsf	indf2,0,c
  2253  00156A                     L1:
  2254                           
  2255                           ;ikb.c: 473: key[k].sm0++;
  2256  00156A  500C               	movf	ikey_scan@k,w,c
  2257  00156C  0D10               	mullw	16
  2258  00156E  50F3               	movf	prodl,w,c
  2259  001570  0F64               	addlw	low (_key+4)
  2260  001572  6ED9               	movwf	fsr2l,c
  2261  001574  6ADA               	clrf	fsr2h,c
  2262  001576  2ADF               	incf	indf2,f,c
  2263  001578  D062               	goto	l5067
  2264  00157A                     l5049:
  2265                           
  2266                           ;ikb.c: 477: else if (key[k].sm0 == 2)
  2267  00157A  500C               	movf	ikey_scan@k,w,c
  2268  00157C  0D10               	mullw	16
  2269  00157E  50F3               	movf	prodl,w,c
  2270  001580  0F64               	addlw	low (_key+4)
  2271  001582  6ED9               	movwf	fsr2l,c
  2272  001584  6ADA               	clrf	fsr2h,c
  2273  001586  0E02               	movlw	2
  2274  001588  18DE               	xorwf	postinc2,w,c
  2275  00158A  A4D8               	btfss	status,2,c
  2276  00158C  D016               	goto	l5055
  2277                           
  2278                           ;ikb.c: 478: {;ikb.c: 479: if (key[k].keyRead() == 1)
  2279  00158E  500C               	movf	ikey_scan@k,w,c
  2280  001590  0D10               	mullw	16
  2281  001592  50F3               	movf	prodl,w,c
  2282  001594  0F60               	addlw	low _key
  2283  001596  6ED9               	movwf	fsr2l,c
  2284  001598  6ADA               	clrf	fsr2h,c
  2285  00159A  D801               	call	u5788
  2286  00159C  D00A               	goto	u5789
  2287  00159E                     u5788:
  2288  00159E  0005               	push	
  2289  0015A0  6EFA               	movwf	pclath,c
  2290  0015A2  50DE               	movf	postinc2,w,c
  2291  0015A4  6EFD               	movwf	tosl,c
  2292  0015A6  50DE               	movf	postinc2,w,c
  2293  0015A8  6EFE               	movwf	tosh,c
  2294  0015AA  50F8               	movf	tblptru,w,c
  2295  0015AC  6EFF               	movwf	tosu,c
  2296  0015AE  50FA               	movf	pclath,w,c
  2297  0015B0  0012               	return		;indir
  2298  0015B2                     u5789:
  2299  0015B2  06E8               	decf	wreg,f,c
  2300  0015B4  B4D8               	btfsc	status,2,c
  2301  0015B6  D7D9               	goto	L1
  2302  0015B8  D042               	goto	l5067
  2303  0015BA                     l5055:
  2304                           
  2305                           ;ikb.c: 482: else if (key[k].sm0 == 3)
  2306  0015BA  500C               	movf	ikey_scan@k,w,c
  2307  0015BC  0D10               	mullw	16
  2308  0015BE  50F3               	movf	prodl,w,c
  2309  0015C0  0F64               	addlw	low (_key+4)
  2310  0015C2  6ED9               	movwf	fsr2l,c
  2311  0015C4  6ADA               	clrf	fsr2h,c
  2312  0015C6  0E03               	movlw	3
  2313  0015C8  18DE               	xorwf	postinc2,w,c
  2314  0015CA  A4D8               	btfss	status,2,c
  2315  0015CC  D038               	goto	l5067
  2316                           
  2317                           ;ikb.c: 483: {;ikb.c: 484: if (++key[k].counter0 == 4)
  2318  0015CE  500C               	movf	ikey_scan@k,w,c
  2319  0015D0  0D10               	mullw	16
  2320  0015D2  50F3               	movf	prodl,w,c
  2321  0015D4  0F65               	addlw	low (_key+5)
  2322  0015D6  6ED9               	movwf	fsr2l,c
  2323  0015D8  6ADA               	clrf	fsr2h,c
  2324  0015DA  2ADF               	incf	indf2,f,c
  2325  0015DC  0E04               	movlw	4
  2326  0015DE  18DE               	xorwf	postinc2,w,c
  2327  0015E0  A4D8               	btfss	status,2,c
  2328  0015E2  D02D               	goto	l5067
  2329                           
  2330                           ;ikb.c: 485: {;ikb.c: 486: key[k].counter0 = 0x00;
  2331  0015E4  500C               	movf	ikey_scan@k,w,c
  2332  0015E6  0D10               	mullw	16
  2333  0015E8  50F3               	movf	prodl,w,c
  2334  0015EA  0F65               	addlw	low (_key+5)
  2335  0015EC  6ED9               	movwf	fsr2l,c
  2336  0015EE  6ADA               	clrf	fsr2h,c
  2337  0015F0  0E00               	movlw	0
  2338  0015F2  6EDF               	movwf	indf2,c
  2339                           
  2340                           ;ikb.c: 488: if (key[k].keyRead() != 1)
  2341  0015F4  500C               	movf	ikey_scan@k,w,c
  2342  0015F6  0D10               	mullw	16
  2343  0015F8  50F3               	movf	prodl,w,c
  2344  0015FA  0F60               	addlw	low _key
  2345  0015FC  6ED9               	movwf	fsr2l,c
  2346  0015FE  6ADA               	clrf	fsr2h,c
  2347  001600  D801               	call	u5828
  2348  001602  D00A               	goto	u5829
  2349  001604                     u5828:
  2350  001604  0005               	push	
  2351  001606  6EFA               	movwf	pclath,c
  2352  001608  50DE               	movf	postinc2,w,c
  2353  00160A  6EFD               	movwf	tosl,c
  2354  00160C  50DE               	movf	postinc2,w,c
  2355  00160E  6EFE               	movwf	tosh,c
  2356  001610  50F8               	movf	tblptru,w,c
  2357  001612  6EFF               	movwf	tosu,c
  2358  001614  50FA               	movf	pclath,w,c
  2359  001616  0012               	return		;indir
  2360  001618                     u5829:
  2361  001618  06E8               	decf	wreg,f,c
  2362  00161A  A4D8               	btfss	status,2,c
  2363  00161C  D796               	goto	u5760
  2364                           
  2365                           ;ikb.c: 492: else;ikb.c: 493: {;ikb.c: 494: key[k].bf.state = 0;
  2366  00161E  500C               	movf	ikey_scan@k,w,c
  2367  001620  0D10               	mullw	16
  2368  001622  50F3               	movf	prodl,w,c
  2369  001624  0F6A               	addlw	low (_key+10)
  2370  001626  6ED9               	movwf	fsr2l,c
  2371  001628  6ADA               	clrf	fsr2h,c
  2372  00162A  0100               	movlb	0	; () banked
  2373  00162C  90DF               	bcf	indf2,0,c
  2374                           
  2375                           ;ikb.c: 495: key[k].sm0 = 0x00;
  2376  00162E  500C               	movf	ikey_scan@k,w,c
  2377  001630  0D10               	mullw	16
  2378  001632  50F3               	movf	prodl,w,c
  2379  001634  0F64               	addlw	low (_key+4)
  2380  001636  6ED9               	movwf	fsr2l,c
  2381  001638  6ADA               	clrf	fsr2h,c
  2382  00163A  0E00               	movlw	0
  2383  00163C  6EDF               	movwf	indf2,c
  2384  00163E                     l5067:
  2385                           
  2386                           ;ikb.c: 496: };ikb.c: 497: };ikb.c: 498: };ikb.c: 499: }while (--k >= 0);
  2387  00163E  060C               	decf	ikey_scan@k,f,c
  2388  001640  BE0C               	btfsc	ikey_scan@k,7,c
  2389  001642  0012               	return	
  2390  001644  D732               	goto	l5031
  2391  001646                     __end_of_ikey_scan:
  2392                           	opt callstack 0
  2393                           
  2394 ;; *************** function _keyRead_pin_key3 *****************
  2395 ;; Defined at:
  2396 ;;		line 205 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    5
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_ikb_init
  2421 ;;		_ikey_scan
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text9
  2426  002996                     __ptext9:
  2427                           	opt callstack 0
  2428  002996                     _keyRead_pin_key3:
  2429                           	opt callstack 23
  2430                           
  2431                           ;ikb.c: 207: return ((PORTC & (1<<7))>>7);
  2432                           
  2433                           ;incstack = 0
  2434  002996  4482               	rlncf	3970,w,c	;volatile
  2435  002998  0B01               	andlw	1
  2436  00299A  0012               	return		;funcret
  2437  00299C                     __end_of_keyRead_pin_key3:
  2438                           	opt callstack 0
  2439                           
  2440 ;; *************** function _keyRead_pin_key2 *****************
  2441 ;; Defined at:
  2442 ;;		line 201 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      unsigned char 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2459 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2460 ;;Total ram usage:        0 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    5
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_ikb_init
  2467 ;;		_ikey_scan
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text10
  2472  002936                     __ptext10:
  2473                           	opt callstack 0
  2474  002936                     _keyRead_pin_key2:
  2475                           	opt callstack 23
  2476                           
  2477                           ;ikb.c: 203: return ((PORTC & (1<<6))>>6);
  2478                           
  2479                           ;incstack = 0
  2480  002936  4482               	rlncf	3970,w,c	;volatile
  2481  002938  46E8               	rlncf	wreg,f,c
  2482  00293A  0B03               	andlw	3
  2483  00293C  0B01               	andlw	1
  2484  00293E  0012               	return		;funcret
  2485  002940                     __end_of_keyRead_pin_key2:
  2486                           	opt callstack 0
  2487                           
  2488 ;; *************** function _keyRead_pin_key1 *****************
  2489 ;; Defined at:
  2490 ;;		line 197 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      unsigned char 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    5
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_ikb_init
  2515 ;;		_ikey_scan
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text11
  2520  002940                     __ptext11:
  2521                           	opt callstack 0
  2522  002940                     _keyRead_pin_key1:
  2523                           	opt callstack 23
  2524                           
  2525                           ;ikb.c: 199: return ((PORTC & (1<<5))>>5);
  2526                           
  2527                           ;incstack = 0
  2528  002940  3882               	swapf	3970,w,c	;volatile
  2529  002942  42E8               	rrncf	wreg,f,c
  2530  002944  0B07               	andlw	7
  2531  002946  0B01               	andlw	1
  2532  002948  0012               	return		;funcret
  2533  00294A                     __end_of_keyRead_pin_key1:
  2534                           	opt callstack 0
  2535                           
  2536 ;; *************** function _keyRead_pin_key0 *****************
  2537 ;; Defined at:
  2538 ;;		line 193 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      unsigned char 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    5
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_ikb_init
  2563 ;;		_ikey_scan
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text12
  2568  002986                     __ptext12:
  2569                           	opt callstack 0
  2570  002986                     _keyRead_pin_key0:
  2571                           	opt callstack 23
  2572                           
  2573                           ;ikb.c: 195: return ((PORTC & (1<<4))>>4);
  2574                           
  2575                           ;incstack = 0
  2576  002986  3882               	swapf	3970,w,c	;volatile
  2577  002988  0B0F               	andlw	15
  2578  00298A  0B01               	andlw	1
  2579  00298C  0012               	return		;funcret
  2580  00298E                     __end_of_keyRead_pin_key0:
  2581                           	opt callstack 0
  2582                           
  2583 ;; *************** function _keyRead_pin_key4 *****************
  2584 ;; Defined at:
  2585 ;;		line 209 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      unsigned char 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    5
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_ikb_init
  2610 ;;		_ikey_scan
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text13
  2615  00298E                     __ptext13:
  2616                           	opt callstack 0
  2617  00298E                     _keyRead_pin_key4:
  2618                           	opt callstack 23
  2619                           
  2620                           ;ikb.c: 211: return ((PORTD & (1<<4))>>4);
  2621                           
  2622                           ;incstack = 0
  2623  00298E  3883               	swapf	3971,w,c	;volatile
  2624  002990  0B0F               	andlw	15
  2625  002992  0B01               	andlw	1
  2626  002994  0012               	return		;funcret
  2627  002996                     __end_of_keyRead_pin_key4:
  2628                           	opt callstack 0
  2629                           
  2630 ;; *************** function _ikey_parsing *****************
  2631 ;; Defined at:
  2632 ;;		line 544 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  k               1   34[COMRAM] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0
  2647 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2648 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2649 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2650 ;;Total ram usage:        5 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    7
  2653 ;; This function calls:
  2654 ;;		___ftge
  2655 ;;		___lwtoft
  2656 ;;		_ikey_is_accessible
  2657 ;; This function is called by:
  2658 ;;		_ikb_job
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text14
  2663  000812                     __ptext14:
  2664                           	opt callstack 0
  2665  000812                     _ikey_parsing:
  2666                           	opt callstack 22
  2667                           
  2668                           ;ikb.c: 546: uint8_t k;;ikb.c: 548: for (k=0; k < 5; k++)
  2669                           
  2670                           ;incstack = 0
  2671  000812  0E00               	movlw	0
  2672  000814  6E23               	movwf	ikey_parsing@k,c
  2673  000816                     l5075:
  2674                           
  2675                           ;ikb.c: 549: {;ikb.c: 550: if ( key[k].sm1 == (0) )
  2676  000816  5023               	movf	ikey_parsing@k,w,c
  2677  000818  0D10               	mullw	16
  2678  00081A  50F3               	movf	prodl,w,c
  2679  00081C  0F66               	addlw	low (_key+6)
  2680  00081E  6ED9               	movwf	fsr2l,c
  2681  000820  6ADA               	clrf	fsr2h,c
  2682  000822  50DF               	movf	indf2,w,c
  2683  000824  A4D8               	btfss	status,2,c
  2684  000826  D08B               	goto	l298
  2685                           
  2686                           ;ikb.c: 551: {;ikb.c: 552: if ( ikey_is_accessible(k) )
  2687  000828  5023               	movf	ikey_parsing@k,w,c
  2688  00082A  ECEC  F011         	call	_ikey_is_accessible
  2689  00082E  0900               	iorlw	0
  2690  000830  B4D8               	btfsc	status,2,c
  2691  000832  D085               	goto	l298
  2692                           
  2693                           ;ikb.c: 553: {;ikb.c: 554: if (key[k].bf.state == 1)
  2694  000834  5023               	movf	ikey_parsing@k,w,c
  2695  000836  0D10               	mullw	16
  2696  000838  50F3               	movf	prodl,w,c
  2697  00083A  0F6A               	addlw	low (_key+10)
  2698  00083C  6ED9               	movwf	fsr2l,c
  2699  00083E  6ADA               	clrf	fsr2h,c
  2700  000840  0100               	movlb	0	; () banked
  2701  000842  A0DF               	btfss	indf2,0,c
  2702  000844  D07C               	goto	l298
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;ikb.c: 555: {;ikb.c: 557: if (key[k].bf.OnKeyPressed)
  2706  000846  5023               	movf	ikey_parsing@k,w,c
  2707  000848  0D10               	mullw	16
  2708  00084A  50F3               	movf	prodl,w,c
  2709  00084C  0F6A               	addlw	low (_key+10)
  2710  00084E  6ED9               	movwf	fsr2l,c
  2711  000850  6ADA               	clrf	fsr2h,c
  2712  000852  A2DF               	btfss	indf2,1,c
  2713  000854  D01F               	goto	l5089
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;ikb.c: 558: {;ikb.c: 559: key[k].bf.ReadyToRead = 1;
  2717  000856  5023               	movf	ikey_parsing@k,w,c
  2718  000858  0D10               	mullw	16
  2719  00085A  50F3               	movf	prodl,w,c
  2720  00085C  0F6A               	addlw	low (_key+10)
  2721  00085E  6ED9               	movwf	fsr2l,c
  2722  000860  6ADA               	clrf	fsr2h,c
  2723  000862  8CDF               	bsf	indf2,6,c
  2724                           
  2725                           ;ikb.c: 561: if (key[k].bf.Reptt)
  2726  000864  5023               	movf	ikey_parsing@k,w,c
  2727  000866  0D10               	mullw	16
  2728  000868  50F3               	movf	prodl,w,c
  2729  00086A  0F6A               	addlw	low (_key+10)
  2730  00086C  6ED9               	movwf	fsr2l,c
  2731  00086E  6ADA               	clrf	fsr2h,c
  2732  000870  AADF               	btfss	indf2,5,c
  2733  000872  D008               	goto	l5087
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;ikb.c: 562: {;ikb.c: 563: key[k].sm1 = (6);
  2737  000874  5023               	movf	ikey_parsing@k,w,c
  2738  000876  0D10               	mullw	16
  2739  000878  50F3               	movf	prodl,w,c
  2740  00087A  0F66               	addlw	low (_key+6)
  2741  00087C  6ED9               	movwf	fsr2l,c
  2742  00087E  6ADA               	clrf	fsr2h,c
  2743  000880  0E06               	movlw	6
  2744  000882  D037               	goto	L2
  2745  000884                     l5087:
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;ikb.c: 565: else;ikb.c: 566: {;ikb.c: 567: key[k].sm1 = (1);
  2749  000884  5023               	movf	ikey_parsing@k,w,c
  2750  000886  0D10               	mullw	16
  2751  000888  50F3               	movf	prodl,w,c
  2752  00088A  0F66               	addlw	low (_key+6)
  2753  00088C  6ED9               	movwf	fsr2l,c
  2754  00088E  6ADA               	clrf	fsr2h,c
  2755  000890  0E01               	movlw	1
  2756  000892  D02F               	goto	L2
  2757  000894                     l5089:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;ikb.c: 570: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2761  000894  5023               	movf	ikey_parsing@k,w,c
  2762  000896  0D10               	mullw	16
  2763  000898  50F3               	movf	prodl,w,c
  2764  00089A  0F6A               	addlw	low (_key+10)
  2765  00089C  6ED9               	movwf	fsr2l,c
  2766  00089E  6ADA               	clrf	fsr2h,c
  2767  0008A0  A4DF               	btfss	indf2,2,c
  2768  0008A2  D008               	goto	l5093
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;ikb.c: 571: {;ikb.c: 572: key[k].sm1 = (5);
  2772  0008A4  5023               	movf	ikey_parsing@k,w,c
  2773  0008A6  0D10               	mullw	16
  2774  0008A8  50F3               	movf	prodl,w,c
  2775  0008AA  0F66               	addlw	low (_key+6)
  2776  0008AC  6ED9               	movwf	fsr2l,c
  2777  0008AE  6ADA               	clrf	fsr2h,c
  2778  0008B0  0E05               	movlw	5
  2779  0008B2  D01F               	goto	L2
  2780  0008B4                     l5093:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;ikb.c: 575: else if (key[k].bf.AtTimeExpired)
  2784  0008B4  5023               	movf	ikey_parsing@k,w,c
  2785  0008B6  0D10               	mullw	16
  2786  0008B8  50F3               	movf	prodl,w,c
  2787  0008BA  0F6A               	addlw	low (_key+10)
  2788  0008BC  6ED9               	movwf	fsr2l,c
  2789  0008BE  6ADA               	clrf	fsr2h,c
  2790  0008C0  A6DF               	btfss	indf2,3,c
  2791  0008C2  D008               	goto	l5097
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;ikb.c: 576: {;ikb.c: 577: key[k].sm1 = (3);
  2795  0008C4  5023               	movf	ikey_parsing@k,w,c
  2796  0008C6  0D10               	mullw	16
  2797  0008C8  50F3               	movf	prodl,w,c
  2798  0008CA  0F66               	addlw	low (_key+6)
  2799  0008CC  6ED9               	movwf	fsr2l,c
  2800  0008CE  6ADA               	clrf	fsr2h,c
  2801  0008D0  0E03               	movlw	3
  2802  0008D2  D00F               	goto	L2
  2803  0008D4                     l5097:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;ikb.c: 579: else if (key[k].bf.AtTimeExpired2)
  2807  0008D4  5023               	movf	ikey_parsing@k,w,c
  2808  0008D6  0D10               	mullw	16
  2809  0008D8  50F3               	movf	prodl,w,c
  2810  0008DA  0F6A               	addlw	low (_key+10)
  2811  0008DC  6ED9               	movwf	fsr2l,c
  2812  0008DE  6ADA               	clrf	fsr2h,c
  2813  0008E0  A8DF               	btfss	indf2,4,c
  2814  0008E2  D008               	goto	l304
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;ikb.c: 580: {;ikb.c: 581: key[k].sm1 = (4);
  2818  0008E4  5023               	movf	ikey_parsing@k,w,c
  2819  0008E6  0D10               	mullw	16
  2820  0008E8  50F3               	movf	prodl,w,c
  2821  0008EA  0F66               	addlw	low (_key+6)
  2822  0008EC  6ED9               	movwf	fsr2l,c
  2823  0008EE  6ADA               	clrf	fsr2h,c
  2824  0008F0  0E04               	movlw	4
  2825  0008F2                     L2:
  2826  0008F2  6EDF               	movwf	indf2,c
  2827  0008F4                     l304:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;ikb.c: 582: };ikb.c: 585: key[k].bf.InProcessing = 1;
  2831  0008F4  5023               	movf	ikey_parsing@k,w,c
  2832  0008F6  0D10               	mullw	16
  2833  0008F8  50F3               	movf	prodl,w,c
  2834  0008FA  0F6B               	addlw	low (_key+11)
  2835  0008FC  6ED9               	movwf	fsr2l,c
  2836  0008FE  6ADA               	clrf	fsr2h,c
  2837  000900  82DF               	bsf	indf2,1,c
  2838                           
  2839                           ;ikb.c: 590: if (key[k].num_group_x != 0)
  2840  000902  5023               	movf	ikey_parsing@k,w,c
  2841  000904  0D10               	mullw	16
  2842  000906  50F3               	movf	prodl,w,c
  2843  000908  0F69               	addlw	low (_key+9)
  2844  00090A  6ED9               	movwf	fsr2l,c
  2845  00090C  6ADA               	clrf	fsr2h,c
  2846  00090E  50DF               	movf	indf2,w,c
  2847  000910  B4D8               	btfsc	status,2,c
  2848  000912  D015               	goto	l298
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;ikb.c: 591: {;ikb.c: 592: group_x[ key[k].num_group_x ] = 1;
  2852  000914  5023               	movf	ikey_parsing@k,w,c
  2853  000916  0D10               	mullw	16
  2854  000918  50F3               	movf	prodl,w,c
  2855  00091A  0F69               	addlw	low (_key+9)
  2856  00091C  6ED9               	movwf	fsr2l,c
  2857  00091E  6ADA               	clrf	fsr2h,c
  2858  000920  50DF               	movf	indf2,w,c
  2859  000922  6E1F               	movwf	??_ikey_parsing& (0+255),c
  2860  000924  501F               	movf	??_ikey_parsing,w,c
  2861  000926  0FB8               	addlw	low _group_x
  2862  000928  6ED9               	movwf	fsr2l,c
  2863  00092A  6ADA               	clrf	fsr2h,c
  2864  00092C  0E01               	movlw	1
  2865  00092E  6EDF               	movwf	indf2,c
  2866                           
  2867                           ;ikb.c: 593: key[k].bf.OwnerOfGroup = 1;
  2868  000930  5023               	movf	ikey_parsing@k,w,c
  2869  000932  0D10               	mullw	16
  2870  000934  50F3               	movf	prodl,w,c
  2871  000936  0F6B               	addlw	low (_key+11)
  2872  000938  6ED9               	movwf	fsr2l,c
  2873  00093A  6ADA               	clrf	fsr2h,c
  2874  00093C  80DF               	bsf	indf2,0,c
  2875  00093E                     l298:
  2876                           
  2877                           ;ikb.c: 594: };ikb.c: 596: };ikb.c: 597: };ikb.c: 598: };ikb.c: 602: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2878  00093E  5023               	movf	ikey_parsing@k,w,c
  2879  000940  0D10               	mullw	16
  2880  000942  50F3               	movf	prodl,w,c
  2881  000944  0F66               	addlw	low (_key+6)
  2882  000946  6ED9               	movwf	fsr2l,c
  2883  000948  6ADA               	clrf	fsr2h,c
  2884  00094A  0E05               	movlw	5
  2885  00094C  64DF               	cpfsgt	indf2,c
  2886  00094E  D024               	goto	l311
  2887  000950  5023               	movf	ikey_parsing@k,w,c
  2888  000952  0D10               	mullw	16
  2889  000954  50F3               	movf	prodl,w,c
  2890  000956  0F66               	addlw	low (_key+6)
  2891  000958  6ED9               	movwf	fsr2l,c
  2892  00095A  6ADA               	clrf	fsr2h,c
  2893  00095C  0E09               	movlw	9
  2894  00095E  60DF               	cpfslt	indf2,c
  2895  000960  D01B               	goto	l311
  2896                           
  2897                           ;ikb.c: 603: {;ikb.c: 604: if (key[k].bf.state == 0)
  2898  000962  5023               	movf	ikey_parsing@k,w,c
  2899  000964  0D10               	mullw	16
  2900  000966  50F3               	movf	prodl,w,c
  2901  000968  0F6A               	addlw	low (_key+10)
  2902  00096A  6ED9               	movwf	fsr2l,c
  2903  00096C  6ADA               	clrf	fsr2h,c
  2904  00096E  0100               	movlb	0	; () banked
  2905  000970  B0DF               	btfsc	indf2,0,c
  2906  000972  D012               	goto	l311
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;ikb.c: 605: {;ikb.c: 606: key[k].counter1 = 0;
  2910  000974  5023               	movf	ikey_parsing@k,w,c
  2911  000976  0D10               	mullw	16
  2912  000978  50F3               	movf	prodl,w,c
  2913  00097A  0F67               	addlw	low (_key+7)
  2914  00097C  6ED9               	movwf	fsr2l,c
  2915  00097E  6ADA               	clrf	fsr2h,c
  2916  000980  0E00               	movlw	0
  2917  000982  6EDE               	movwf	postinc2,c
  2918  000984  0E00               	movlw	0
  2919  000986  6EDD               	movwf	postdec2,c
  2920                           
  2921                           ;ikb.c: 607: key[k].sm1 = (2);
  2922  000988  5023               	movf	ikey_parsing@k,w,c
  2923  00098A  0D10               	mullw	16
  2924  00098C  50F3               	movf	prodl,w,c
  2925  00098E  0F66               	addlw	low (_key+6)
  2926  000990  6ED9               	movwf	fsr2l,c
  2927  000992  6ADA               	clrf	fsr2h,c
  2928  000994  0E02               	movlw	2
  2929  000996  6EDF               	movwf	indf2,c
  2930  000998                     l311:
  2931                           
  2932                           ;ikb.c: 608: };ikb.c: 609: };ikb.c: 611: if (key[k].sm1 == (6) )
  2933  000998  5023               	movf	ikey_parsing@k,w,c
  2934  00099A  0D10               	mullw	16
  2935  00099C  50F3               	movf	prodl,w,c
  2936  00099E  0F66               	addlw	low (_key+6)
  2937  0009A0  6ED9               	movwf	fsr2l,c
  2938  0009A2  6ADA               	clrf	fsr2h,c
  2939  0009A4  0E06               	movlw	6
  2940  0009A6  18DE               	xorwf	postinc2,w,c
  2941  0009A8  A4D8               	btfss	status,2,c
  2942  0009AA  D027               	goto	l313
  2943                           
  2944                           ;ikb.c: 612: {;ikb.c: 613: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2945  0009AC  5023               	movf	ikey_parsing@k,w,c
  2946  0009AE  0D10               	mullw	16
  2947  0009B0  50F3               	movf	prodl,w,c
  2948  0009B2  0F6C               	addlw	low (_key+12)
  2949  0009B4  6ED9               	movwf	fsr2l,c
  2950  0009B6  6ADA               	clrf	fsr2h,c
  2951  0009B8  5023               	movf	ikey_parsing@k,w,c
  2952  0009BA  0D10               	mullw	16
  2953  0009BC  50F3               	movf	prodl,w,c
  2954  0009BE  0F67               	addlw	low (_key+7)
  2955  0009C0  6EE1               	movwf	fsr1l,c
  2956  0009C2  6AE2               	clrf	fsr1h,c
  2957  0009C4  2AE6               	incf	postinc1,f,c
  2958  0009C6  0E00               	movlw	0
  2959  0009C8  22E5               	addwfc	postdec1,f,c
  2960  0009CA  50DE               	movf	postinc2,w,c
  2961  0009CC  5CE6               	subwf	postinc1,w,c
  2962  0009CE  50DE               	movf	postinc2,w,c
  2963  0009D0  58E6               	subwfb	postinc1,w,c
  2964  0009D2  A0D8               	btfss	status,0,c
  2965  0009D4  D012               	goto	l313
  2966                           
  2967                           ;ikb.c: 614: {;ikb.c: 615: key[k].counter1 =0;
  2968  0009D6  5023               	movf	ikey_parsing@k,w,c
  2969  0009D8  0D10               	mullw	16
  2970  0009DA  50F3               	movf	prodl,w,c
  2971  0009DC  0F67               	addlw	low (_key+7)
  2972  0009DE  6ED9               	movwf	fsr2l,c
  2973  0009E0  6ADA               	clrf	fsr2h,c
  2974  0009E2  0E00               	movlw	0
  2975  0009E4  6EDE               	movwf	postinc2,c
  2976  0009E6  0E00               	movlw	0
  2977  0009E8  6EDD               	movwf	postdec2,c
  2978                           
  2979                           ;ikb.c: 616: key[k].sm1 = (7);
  2980  0009EA  5023               	movf	ikey_parsing@k,w,c
  2981  0009EC  0D10               	mullw	16
  2982  0009EE  50F3               	movf	prodl,w,c
  2983  0009F0  0F66               	addlw	low (_key+6)
  2984  0009F2  6ED9               	movwf	fsr2l,c
  2985  0009F4  6ADA               	clrf	fsr2h,c
  2986  0009F6  0E07               	movlw	7
  2987  0009F8  6EDF               	movwf	indf2,c
  2988  0009FA                     l313:
  2989                           
  2990                           ;ikb.c: 617: };ikb.c: 618: };ikb.c: 619: if (key[k].sm1 == (7))
  2991  0009FA  5023               	movf	ikey_parsing@k,w,c
  2992  0009FC  0D10               	mullw	16
  2993  0009FE  50F3               	movf	prodl,w,c
  2994  000A00  0F66               	addlw	low (_key+6)
  2995  000A02  6ED9               	movwf	fsr2l,c
  2996  000A04  6ADA               	clrf	fsr2h,c
  2997  000A06  0E07               	movlw	7
  2998  000A08  18DE               	xorwf	postinc2,w,c
  2999  000A0A  A4D8               	btfss	status,2,c
  3000  000A0C  D018               	goto	l315
  3001                           
  3002                           ;ikb.c: 620: {;ikb.c: 621: if (key[k].bf.ReadyToRead == 0)
  3003  000A0E  5023               	movf	ikey_parsing@k,w,c
  3004  000A10  0D10               	mullw	16
  3005  000A12  50F3               	movf	prodl,w,c
  3006  000A14  0F6A               	addlw	low (_key+10)
  3007  000A16  6ED9               	movwf	fsr2l,c
  3008  000A18  6ADA               	clrf	fsr2h,c
  3009  000A1A  0100               	movlb	0	; () banked
  3010  000A1C  BCDF               	btfsc	indf2,6,c
  3011  000A1E  D00F               	goto	l315
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;ikb.c: 622: {;ikb.c: 623: key[k].bf.ReadyToRead = 1;
  3015  000A20  5023               	movf	ikey_parsing@k,w,c
  3016  000A22  0D10               	mullw	16
  3017  000A24  50F3               	movf	prodl,w,c
  3018  000A26  0F6A               	addlw	low (_key+10)
  3019  000A28  6ED9               	movwf	fsr2l,c
  3020  000A2A  6ADA               	clrf	fsr2h,c
  3021  000A2C  8CDF               	bsf	indf2,6,c
  3022                           
  3023                           ;ikb.c: 624: key[k].sm1 = (8);
  3024  000A2E  5023               	movf	ikey_parsing@k,w,c
  3025  000A30  0D10               	mullw	16
  3026  000A32  50F3               	movf	prodl,w,c
  3027  000A34  0F66               	addlw	low (_key+6)
  3028  000A36  6ED9               	movwf	fsr2l,c
  3029  000A38  6ADA               	clrf	fsr2h,c
  3030  000A3A  0E08               	movlw	8
  3031  000A3C  6EDF               	movwf	indf2,c
  3032  000A3E                     l315:
  3033                           
  3034                           ;ikb.c: 625: };ikb.c: 626: };ikb.c: 627: if (key[k].sm1 == (8))
  3035  000A3E  5023               	movf	ikey_parsing@k,w,c
  3036  000A40  0D10               	mullw	16
  3037  000A42  50F3               	movf	prodl,w,c
  3038  000A44  0F66               	addlw	low (_key+6)
  3039  000A46  6ED9               	movwf	fsr2l,c
  3040  000A48  6ADA               	clrf	fsr2h,c
  3041  000A4A  0E08               	movlw	8
  3042  000A4C  18DE               	xorwf	postinc2,w,c
  3043  000A4E  A4D8               	btfss	status,2,c
  3044  000A50  D027               	goto	l317
  3045                           
  3046                           ;ikb.c: 628: {;ikb.c: 629: if ( ++key[k].counter1 >= key[k].repp.after_start)
  3047  000A52  5023               	movf	ikey_parsing@k,w,c
  3048  000A54  0D10               	mullw	16
  3049  000A56  50F3               	movf	prodl,w,c
  3050  000A58  0F6E               	addlw	low (_key+14)
  3051  000A5A  6ED9               	movwf	fsr2l,c
  3052  000A5C  6ADA               	clrf	fsr2h,c
  3053  000A5E  5023               	movf	ikey_parsing@k,w,c
  3054  000A60  0D10               	mullw	16
  3055  000A62  50F3               	movf	prodl,w,c
  3056  000A64  0F67               	addlw	low (_key+7)
  3057  000A66  6EE1               	movwf	fsr1l,c
  3058  000A68  6AE2               	clrf	fsr1h,c
  3059  000A6A  2AE6               	incf	postinc1,f,c
  3060  000A6C  0E00               	movlw	0
  3061  000A6E  22E5               	addwfc	postdec1,f,c
  3062  000A70  50DE               	movf	postinc2,w,c
  3063  000A72  5CE6               	subwf	postinc1,w,c
  3064  000A74  50DE               	movf	postinc2,w,c
  3065  000A76  58E6               	subwfb	postinc1,w,c
  3066  000A78  A0D8               	btfss	status,0,c
  3067  000A7A  D012               	goto	l317
  3068                           
  3069                           ;ikb.c: 630: {;ikb.c: 631: key[k].counter1 = 0;
  3070  000A7C  5023               	movf	ikey_parsing@k,w,c
  3071  000A7E  0D10               	mullw	16
  3072  000A80  50F3               	movf	prodl,w,c
  3073  000A82  0F67               	addlw	low (_key+7)
  3074  000A84  6ED9               	movwf	fsr2l,c
  3075  000A86  6ADA               	clrf	fsr2h,c
  3076  000A88  0E00               	movlw	0
  3077  000A8A  6EDE               	movwf	postinc2,c
  3078  000A8C  0E00               	movlw	0
  3079  000A8E  6EDD               	movwf	postdec2,c
  3080                           
  3081                           ;ikb.c: 632: key[k].sm1 = (7);
  3082  000A90  5023               	movf	ikey_parsing@k,w,c
  3083  000A92  0D10               	mullw	16
  3084  000A94  50F3               	movf	prodl,w,c
  3085  000A96  0F66               	addlw	low (_key+6)
  3086  000A98  6ED9               	movwf	fsr2l,c
  3087  000A9A  6ADA               	clrf	fsr2h,c
  3088  000A9C  0E07               	movlw	7
  3089  000A9E  6EDF               	movwf	indf2,c
  3090  000AA0                     l317:
  3091                           
  3092                           ;ikb.c: 633: };ikb.c: 634: };ikb.c: 636: if (key[k].sm1 == (5) )
  3093  000AA0  5023               	movf	ikey_parsing@k,w,c
  3094  000AA2  0D10               	mullw	16
  3095  000AA4  50F3               	movf	prodl,w,c
  3096  000AA6  0F66               	addlw	low (_key+6)
  3097  000AA8  6ED9               	movwf	fsr2l,c
  3098  000AAA  6ADA               	clrf	fsr2h,c
  3099  000AAC  0E05               	movlw	5
  3100  000AAE  18DE               	xorwf	postinc2,w,c
  3101  000AB0  A4D8               	btfss	status,2,c
  3102  000AB2  D018               	goto	l319
  3103                           
  3104                           ;ikb.c: 637: {;ikb.c: 638: if (key[k].bf.state == 0)
  3105  000AB4  5023               	movf	ikey_parsing@k,w,c
  3106  000AB6  0D10               	mullw	16
  3107  000AB8  50F3               	movf	prodl,w,c
  3108  000ABA  0F6A               	addlw	low (_key+10)
  3109  000ABC  6ED9               	movwf	fsr2l,c
  3110  000ABE  6ADA               	clrf	fsr2h,c
  3111  000AC0  0100               	movlb	0	; () banked
  3112  000AC2  B0DF               	btfsc	indf2,0,c
  3113  000AC4  D00F               	goto	l319
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;ikb.c: 639: {;ikb.c: 640: key[k].bf.ReadyToRead = 1;
  3117  000AC6  5023               	movf	ikey_parsing@k,w,c
  3118  000AC8  0D10               	mullw	16
  3119  000ACA  50F3               	movf	prodl,w,c
  3120  000ACC  0F6A               	addlw	low (_key+10)
  3121  000ACE  6ED9               	movwf	fsr2l,c
  3122  000AD0  6ADA               	clrf	fsr2h,c
  3123  000AD2  8CDF               	bsf	indf2,6,c
  3124                           
  3125                           ;ikb.c: 641: key[k].sm1 = (2);
  3126  000AD4  5023               	movf	ikey_parsing@k,w,c
  3127  000AD6  0D10               	mullw	16
  3128  000AD8  50F3               	movf	prodl,w,c
  3129  000ADA  0F66               	addlw	low (_key+6)
  3130  000ADC  6ED9               	movwf	fsr2l,c
  3131  000ADE  6ADA               	clrf	fsr2h,c
  3132  000AE0  0E02               	movlw	2
  3133  000AE2  6EDF               	movwf	indf2,c
  3134  000AE4                     l319:
  3135                           
  3136                           ;ikb.c: 642: };ikb.c: 643: };ikb.c: 645: if (key[k].sm1 == (3) )
  3137  000AE4  5023               	movf	ikey_parsing@k,w,c
  3138  000AE6  0D10               	mullw	16
  3139  000AE8  50F3               	movf	prodl,w,c
  3140  000AEA  0F66               	addlw	low (_key+6)
  3141  000AEC  6ED9               	movwf	fsr2l,c
  3142  000AEE  6ADA               	clrf	fsr2h,c
  3143  000AF0  0E03               	movlw	3
  3144  000AF2  18DE               	xorwf	postinc2,w,c
  3145  000AF4  A4D8               	btfss	status,2,c
  3146  000AF6  D09C               	goto	l321
  3147                           
  3148                           ;ikb.c: 646: {;ikb.c: 647: key[k].counter1++;
  3149  000AF8  5023               	movf	ikey_parsing@k,w,c
  3150  000AFA  0D10               	mullw	16
  3151  000AFC  50F3               	movf	prodl,w,c
  3152  000AFE  0F67               	addlw	low (_key+7)
  3153  000B00  6ED9               	movwf	fsr2l,c
  3154  000B02  6ADA               	clrf	fsr2h,c
  3155  000B04  2ADE               	incf	postinc2,f,c
  3156  000B06  0E00               	movlw	0
  3157  000B08  22DD               	addwfc	postdec2,f,c
  3158                           
  3159                           ;ikb.c: 649: if (key[k].bf.state == 0)
  3160  000B0A  5023               	movf	ikey_parsing@k,w,c
  3161  000B0C  0D10               	mullw	16
  3162  000B0E  50F3               	movf	prodl,w,c
  3163  000B10  0F6A               	addlw	low (_key+10)
  3164  000B12  6ED9               	movwf	fsr2l,c
  3165  000B14  6ADA               	clrf	fsr2h,c
  3166  000B16  0100               	movlb	0	; () banked
  3167  000B18  B0DF               	btfsc	indf2,0,c
  3168  000B1A  D03D               	goto	l5131
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;ikb.c: 650: {;ikb.c: 651: if (key[k].counter1 <= ((1000E-3/5E-3)) )
  3172  000B1C  0E00               	movlw	0
  3173  000B1E  6E16               	movwf	___ftge@ff1,c
  3174  000B20  0E48               	movlw	72
  3175  000B22  6E17               	movwf	___ftge@ff1+1,c
  3176  000B24  0E43               	movlw	67
  3177  000B26  6E18               	movwf	___ftge@ff1+2,c
  3178  000B28  5023               	movf	ikey_parsing@k,w,c
  3179  000B2A  0D10               	mullw	16
  3180  000B2C  50F3               	movf	prodl,w,c
  3181  000B2E  0F67               	addlw	low (_key+7)
  3182  000B30  6ED9               	movwf	fsr2l,c
  3183  000B32  6ADA               	clrf	fsr2h,c
  3184  000B34  CFDE F013          	movff	postinc2,___lwtoft@c
  3185  000B38  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3186  000B3C  ECE6  F013         	call	___lwtoft	;wreg free
  3187  000B40  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3188  000B44  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3189  000B48  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3190  000B4C  EC93  F010         	call	___ftge	;wreg free
  3191  000B50  A0D8               	btfss	status,0,c
  3192  000B52  D021               	goto	l5131
  3193                           
  3194                           ;ikb.c: 652: {;ikb.c: 653: key[k].counter1 = 0;
  3195  000B54  5023               	movf	ikey_parsing@k,w,c
  3196  000B56  0D10               	mullw	16
  3197  000B58  50F3               	movf	prodl,w,c
  3198  000B5A  0F67               	addlw	low (_key+7)
  3199  000B5C  6ED9               	movwf	fsr2l,c
  3200  000B5E  6ADA               	clrf	fsr2h,c
  3201  000B60  0E00               	movlw	0
  3202  000B62  6EDE               	movwf	postinc2,c
  3203  000B64  0E00               	movlw	0
  3204  000B66  6EDD               	movwf	postdec2,c
  3205                           
  3206                           ;ikb.c: 655: key[k].bf.ReadyToRead = 1;
  3207  000B68  5023               	movf	ikey_parsing@k,w,c
  3208  000B6A  0D10               	mullw	16
  3209  000B6C  50F3               	movf	prodl,w,c
  3210  000B6E  0F6A               	addlw	low (_key+10)
  3211  000B70  6ED9               	movwf	fsr2l,c
  3212  000B72  6ADA               	clrf	fsr2h,c
  3213  000B74  0100               	movlb	0	; () banked
  3214  000B76  8CDF               	bsf	indf2,6,c
  3215                           
  3216                           ;ikb.c: 656: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3217  000B78  5023               	movf	ikey_parsing@k,w,c
  3218  000B7A  0D10               	mullw	16
  3219  000B7C  50F3               	movf	prodl,w,c
  3220  000B7E  0F6A               	addlw	low (_key+10)
  3221  000B80  6ED9               	movwf	fsr2l,c
  3222  000B82  6ADA               	clrf	fsr2h,c
  3223  000B84  9EDF               	bcf	indf2,7,c
  3224                           
  3225                           ;ikb.c: 658: key[k].sm1 = (2);
  3226  000B86  5023               	movf	ikey_parsing@k,w,c
  3227  000B88  0D10               	mullw	16
  3228  000B8A  50F3               	movf	prodl,w,c
  3229  000B8C  0F66               	addlw	low (_key+6)
  3230  000B8E  6ED9               	movwf	fsr2l,c
  3231  000B90  6ADA               	clrf	fsr2h,c
  3232  000B92  0E02               	movlw	2
  3233  000B94  6EDF               	movwf	indf2,c
  3234  000B96                     l5131:
  3235                           
  3236                           ;ikb.c: 659: };ikb.c: 660: };ikb.c: 662: if (key[k].counter1 > ((1000E-3/5E-3)) )
  3237  000B96  0E00               	movlw	0
  3238  000B98  6E16               	movwf	___ftge@ff1,c
  3239  000B9A  0E48               	movlw	72
  3240  000B9C  6E17               	movwf	___ftge@ff1+1,c
  3241  000B9E  0E43               	movlw	67
  3242  000BA0  6E18               	movwf	___ftge@ff1+2,c
  3243  000BA2  5023               	movf	ikey_parsing@k,w,c
  3244  000BA4  0D10               	mullw	16
  3245  000BA6  50F3               	movf	prodl,w,c
  3246  000BA8  0F67               	addlw	low (_key+7)
  3247  000BAA  6ED9               	movwf	fsr2l,c
  3248  000BAC  6ADA               	clrf	fsr2h,c
  3249  000BAE  CFDE F013          	movff	postinc2,___lwtoft@c
  3250  000BB2  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3251  000BB6  ECE6  F013         	call	___lwtoft	;wreg free
  3252  000BBA  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3253  000BBE  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3254  000BC2  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3255  000BC6  EC93  F010         	call	___ftge	;wreg free
  3256  000BCA  B0D8               	btfsc	status,0,c
  3257  000BCC  D031               	goto	l321
  3258                           
  3259                           ;ikb.c: 663: {;ikb.c: 664: key[k].counter1 = 0x0000;
  3260  000BCE  5023               	movf	ikey_parsing@k,w,c
  3261  000BD0  0D10               	mullw	16
  3262  000BD2  50F3               	movf	prodl,w,c
  3263  000BD4  0F67               	addlw	low (_key+7)
  3264  000BD6  6ED9               	movwf	fsr2l,c
  3265  000BD8  6ADA               	clrf	fsr2h,c
  3266  000BDA  0E00               	movlw	0
  3267  000BDC  6EDE               	movwf	postinc2,c
  3268  000BDE  0E00               	movlw	0
  3269  000BE0  6EDD               	movwf	postdec2,c
  3270                           
  3271                           ;ikb.c: 666: key[k].bf.ReadyToRead = 1;
  3272  000BE2  5023               	movf	ikey_parsing@k,w,c
  3273  000BE4  0D10               	mullw	16
  3274  000BE6  50F3               	movf	prodl,w,c
  3275  000BE8  0F6A               	addlw	low (_key+10)
  3276  000BEA  6ED9               	movwf	fsr2l,c
  3277  000BEC  6ADA               	clrf	fsr2h,c
  3278  000BEE  0100               	movlb	0	; () banked
  3279  000BF0  8CDF               	bsf	indf2,6,c
  3280                           
  3281                           ;ikb.c: 667: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3282  000BF2  5023               	movf	ikey_parsing@k,w,c
  3283  000BF4  0D10               	mullw	16
  3284  000BF6  50F3               	movf	prodl,w,c
  3285  000BF8  0F6A               	addlw	low (_key+10)
  3286  000BFA  6ED9               	movwf	fsr2l,c
  3287  000BFC  6ADA               	clrf	fsr2h,c
  3288  000BFE  8EDF               	bsf	indf2,7,c
  3289                           
  3290                           ;ikb.c: 669: if (!key[k].bf.Reptt)
  3291  000C00  5023               	movf	ikey_parsing@k,w,c
  3292  000C02  0D10               	mullw	16
  3293  000C04  50F3               	movf	prodl,w,c
  3294  000C06  0F6A               	addlw	low (_key+10)
  3295  000C08  6ED9               	movwf	fsr2l,c
  3296  000C0A  6ADA               	clrf	fsr2h,c
  3297  000C0C  BADF               	btfsc	indf2,5,c
  3298  000C0E  D008               	goto	l5137
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;ikb.c: 670: {;ikb.c: 671: key[k].sm1 = (1);
  3302  000C10  5023               	movf	ikey_parsing@k,w,c
  3303  000C12  0D10               	mullw	16
  3304  000C14  50F3               	movf	prodl,w,c
  3305  000C16  0F66               	addlw	low (_key+6)
  3306  000C18  6ED9               	movwf	fsr2l,c
  3307  000C1A  6ADA               	clrf	fsr2h,c
  3308  000C1C  0E01               	movlw	1
  3309  000C1E  D007               	goto	L3
  3310  000C20                     l5137:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;ikb.c: 673: else;ikb.c: 674: {;ikb.c: 675: key[k].sm1 = (8);
  3314  000C20  5023               	movf	ikey_parsing@k,w,c
  3315  000C22  0D10               	mullw	16
  3316  000C24  50F3               	movf	prodl,w,c
  3317  000C26  0F66               	addlw	low (_key+6)
  3318  000C28  6ED9               	movwf	fsr2l,c
  3319  000C2A  6ADA               	clrf	fsr2h,c
  3320  000C2C  0E08               	movlw	8
  3321  000C2E                     L3:
  3322  000C2E  6EDF               	movwf	indf2,c
  3323  000C30                     l321:
  3324                           
  3325                           ;ikb.c: 676: };ikb.c: 677: };ikb.c: 678: };ikb.c: 683: if (key[k].sm1 == (4))
  3326  000C30  5023               	movf	ikey_parsing@k,w,c
  3327  000C32  0D10               	mullw	16
  3328  000C34  50F3               	movf	prodl,w,c
  3329  000C36  0F66               	addlw	low (_key+6)
  3330  000C38  6ED9               	movwf	fsr2l,c
  3331  000C3A  6ADA               	clrf	fsr2h,c
  3332  000C3C  0E04               	movlw	4
  3333  000C3E  18DE               	xorwf	postinc2,w,c
  3334  000C40  A4D8               	btfss	status,2,c
  3335  000C42  D08C               	goto	l327
  3336                           
  3337                           ;ikb.c: 684: {;ikb.c: 685: key[k].counter1++;
  3338  000C44  5023               	movf	ikey_parsing@k,w,c
  3339  000C46  0D10               	mullw	16
  3340  000C48  50F3               	movf	prodl,w,c
  3341  000C4A  0F67               	addlw	low (_key+7)
  3342  000C4C  6ED9               	movwf	fsr2l,c
  3343  000C4E  6ADA               	clrf	fsr2h,c
  3344  000C50  2ADE               	incf	postinc2,f,c
  3345  000C52  0E00               	movlw	0
  3346  000C54  22DD               	addwfc	postdec2,f,c
  3347                           
  3348                           ;ikb.c: 687: if (key[k].bf.state == 0)
  3349  000C56  5023               	movf	ikey_parsing@k,w,c
  3350  000C58  0D10               	mullw	16
  3351  000C5A  50F3               	movf	prodl,w,c
  3352  000C5C  0F6A               	addlw	low (_key+10)
  3353  000C5E  6ED9               	movwf	fsr2l,c
  3354  000C60  6ADA               	clrf	fsr2h,c
  3355  000C62  0100               	movlb	0	; () banked
  3356  000C64  B0DF               	btfsc	indf2,0,c
  3357  000C66  D03D               	goto	l5145
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;ikb.c: 688: {;ikb.c: 689: if (key[k].counter1 <= ((1000E-3/5E-3)))
  3361  000C68  0E00               	movlw	0
  3362  000C6A  6E16               	movwf	___ftge@ff1,c
  3363  000C6C  0E48               	movlw	72
  3364  000C6E  6E17               	movwf	___ftge@ff1+1,c
  3365  000C70  0E43               	movlw	67
  3366  000C72  6E18               	movwf	___ftge@ff1+2,c
  3367  000C74  5023               	movf	ikey_parsing@k,w,c
  3368  000C76  0D10               	mullw	16
  3369  000C78  50F3               	movf	prodl,w,c
  3370  000C7A  0F67               	addlw	low (_key+7)
  3371  000C7C  6ED9               	movwf	fsr2l,c
  3372  000C7E  6ADA               	clrf	fsr2h,c
  3373  000C80  CFDE F013          	movff	postinc2,___lwtoft@c
  3374  000C84  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3375  000C88  ECE6  F013         	call	___lwtoft	;wreg free
  3376  000C8C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3377  000C90  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3378  000C94  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3379  000C98  EC93  F010         	call	___ftge	;wreg free
  3380  000C9C  A0D8               	btfss	status,0,c
  3381  000C9E  D021               	goto	l5145
  3382                           
  3383                           ;ikb.c: 690: {;ikb.c: 691: key[k].counter1 = 0;
  3384  000CA0  5023               	movf	ikey_parsing@k,w,c
  3385  000CA2  0D10               	mullw	16
  3386  000CA4  50F3               	movf	prodl,w,c
  3387  000CA6  0F67               	addlw	low (_key+7)
  3388  000CA8  6ED9               	movwf	fsr2l,c
  3389  000CAA  6ADA               	clrf	fsr2h,c
  3390  000CAC  0E00               	movlw	0
  3391  000CAE  6EDE               	movwf	postinc2,c
  3392  000CB0  0E00               	movlw	0
  3393  000CB2  6EDD               	movwf	postdec2,c
  3394                           
  3395                           ;ikb.c: 693: key[k].bf.ReadyToRead = 1;
  3396  000CB4  5023               	movf	ikey_parsing@k,w,c
  3397  000CB6  0D10               	mullw	16
  3398  000CB8  50F3               	movf	prodl,w,c
  3399  000CBA  0F6A               	addlw	low (_key+10)
  3400  000CBC  6ED9               	movwf	fsr2l,c
  3401  000CBE  6ADA               	clrf	fsr2h,c
  3402  000CC0  0100               	movlb	0	; () banked
  3403  000CC2  8CDF               	bsf	indf2,6,c
  3404                           
  3405                           ;ikb.c: 694: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3406  000CC4  5023               	movf	ikey_parsing@k,w,c
  3407  000CC6  0D10               	mullw	16
  3408  000CC8  50F3               	movf	prodl,w,c
  3409  000CCA  0F6A               	addlw	low (_key+10)
  3410  000CCC  6ED9               	movwf	fsr2l,c
  3411  000CCE  6ADA               	clrf	fsr2h,c
  3412  000CD0  9EDF               	bcf	indf2,7,c
  3413                           
  3414                           ;ikb.c: 696: key[k].sm1 = (2);
  3415  000CD2  5023               	movf	ikey_parsing@k,w,c
  3416  000CD4  0D10               	mullw	16
  3417  000CD6  50F3               	movf	prodl,w,c
  3418  000CD8  0F66               	addlw	low (_key+6)
  3419  000CDA  6ED9               	movwf	fsr2l,c
  3420  000CDC  6ADA               	clrf	fsr2h,c
  3421  000CDE  0E02               	movlw	2
  3422  000CE0  6EDF               	movwf	indf2,c
  3423  000CE2                     l5145:
  3424                           
  3425                           ;ikb.c: 697: };ikb.c: 698: };ikb.c: 701: if (key[k].counter1 >= ((3000E-3/5E-3)))
  3426  000CE2  5023               	movf	ikey_parsing@k,w,c
  3427  000CE4  0D10               	mullw	16
  3428  000CE6  50F3               	movf	prodl,w,c
  3429  000CE8  0F67               	addlw	low (_key+7)
  3430  000CEA  6ED9               	movwf	fsr2l,c
  3431  000CEC  6ADA               	clrf	fsr2h,c
  3432  000CEE  CFDE F013          	movff	postinc2,___lwtoft@c
  3433  000CF2  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3434  000CF6  ECE6  F013         	call	___lwtoft	;wreg free
  3435  000CFA  C013  F016         	movff	?___lwtoft,___ftge@ff1
  3436  000CFE  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  3437  000D02  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  3438  000D06  0E00               	movlw	0
  3439  000D08  6E19               	movwf	___ftge@ff2,c
  3440  000D0A  0E16               	movlw	22
  3441  000D0C  6E1A               	movwf	___ftge@ff2+1,c
  3442  000D0E  0E44               	movlw	68
  3443  000D10  6E1B               	movwf	___ftge@ff2+2,c
  3444  000D12  EC93  F010         	call	___ftge	;wreg free
  3445  000D16  A0D8               	btfss	status,0,c
  3446  000D18  D021               	goto	l327
  3447                           
  3448                           ;ikb.c: 702: {;ikb.c: 703: key[k].counter1 = 0x0000;
  3449  000D1A  5023               	movf	ikey_parsing@k,w,c
  3450  000D1C  0D10               	mullw	16
  3451  000D1E  50F3               	movf	prodl,w,c
  3452  000D20  0F67               	addlw	low (_key+7)
  3453  000D22  6ED9               	movwf	fsr2l,c
  3454  000D24  6ADA               	clrf	fsr2h,c
  3455  000D26  0E00               	movlw	0
  3456  000D28  6EDE               	movwf	postinc2,c
  3457  000D2A  0E00               	movlw	0
  3458  000D2C  6EDD               	movwf	postdec2,c
  3459                           
  3460                           ;ikb.c: 705: key[k].bf.ReadyToRead = 1;
  3461  000D2E  5023               	movf	ikey_parsing@k,w,c
  3462  000D30  0D10               	mullw	16
  3463  000D32  50F3               	movf	prodl,w,c
  3464  000D34  0F6A               	addlw	low (_key+10)
  3465  000D36  6ED9               	movwf	fsr2l,c
  3466  000D38  6ADA               	clrf	fsr2h,c
  3467  000D3A  0100               	movlb	0	; () banked
  3468  000D3C  8CDF               	bsf	indf2,6,c
  3469                           
  3470                           ;ikb.c: 706: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3471  000D3E  5023               	movf	ikey_parsing@k,w,c
  3472  000D40  0D10               	mullw	16
  3473  000D42  50F3               	movf	prodl,w,c
  3474  000D44  0F6A               	addlw	low (_key+10)
  3475  000D46  6ED9               	movwf	fsr2l,c
  3476  000D48  6ADA               	clrf	fsr2h,c
  3477  000D4A  8EDF               	bsf	indf2,7,c
  3478                           
  3479                           ;ikb.c: 709: key[k].sm1 = (1);
  3480  000D4C  5023               	movf	ikey_parsing@k,w,c
  3481  000D4E  0D10               	mullw	16
  3482  000D50  50F3               	movf	prodl,w,c
  3483  000D52  0F66               	addlw	low (_key+6)
  3484  000D54  6ED9               	movwf	fsr2l,c
  3485  000D56  6ADA               	clrf	fsr2h,c
  3486  000D58  0E01               	movlw	1
  3487  000D5A  6EDF               	movwf	indf2,c
  3488  000D5C                     l327:
  3489                           
  3490                           ;ikb.c: 710: };ikb.c: 711: };ikb.c: 714: if (key[k].sm1 == (1))
  3491  000D5C  5023               	movf	ikey_parsing@k,w,c
  3492  000D5E  0D10               	mullw	16
  3493  000D60  50F3               	movf	prodl,w,c
  3494  000D62  0F66               	addlw	low (_key+6)
  3495  000D64  6ED9               	movwf	fsr2l,c
  3496  000D66  6ADA               	clrf	fsr2h,c
  3497  000D68  04DE               	decf	postinc2,w,c
  3498  000D6A  A4D8               	btfss	status,2,c
  3499  000D6C  D011               	goto	l331
  3500                           
  3501                           ;ikb.c: 715: {;ikb.c: 716: if (key[k].bf.state == 0)
  3502  000D6E  5023               	movf	ikey_parsing@k,w,c
  3503  000D70  0D10               	mullw	16
  3504  000D72  50F3               	movf	prodl,w,c
  3505  000D74  0F6A               	addlw	low (_key+10)
  3506  000D76  6ED9               	movwf	fsr2l,c
  3507  000D78  6ADA               	clrf	fsr2h,c
  3508  000D7A  0100               	movlb	0	; () banked
  3509  000D7C  B0DF               	btfsc	indf2,0,c
  3510  000D7E  D008               	goto	l331
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;ikb.c: 717: {;ikb.c: 718: key[k].sm1 = (2);
  3514  000D80  5023               	movf	ikey_parsing@k,w,c
  3515  000D82  0D10               	mullw	16
  3516  000D84  50F3               	movf	prodl,w,c
  3517  000D86  0F66               	addlw	low (_key+6)
  3518  000D88  6ED9               	movwf	fsr2l,c
  3519  000D8A  6ADA               	clrf	fsr2h,c
  3520  000D8C  0E02               	movlw	2
  3521  000D8E  6EDF               	movwf	indf2,c
  3522  000D90                     l331:
  3523                           
  3524                           ;ikb.c: 719: };ikb.c: 720: };ikb.c: 722: if (key[k].sm1 == (2))
  3525  000D90  5023               	movf	ikey_parsing@k,w,c
  3526  000D92  0D10               	mullw	16
  3527  000D94  50F3               	movf	prodl,w,c
  3528  000D96  0F66               	addlw	low (_key+6)
  3529  000D98  6ED9               	movwf	fsr2l,c
  3530  000D9A  6ADA               	clrf	fsr2h,c
  3531  000D9C  0E02               	movlw	2
  3532  000D9E  18DE               	xorwf	postinc2,w,c
  3533  000DA0  A4D8               	btfss	status,2,c
  3534  000DA2  D011               	goto	l333
  3535                           
  3536                           ;ikb.c: 723: {;ikb.c: 724: if (key[k].bf.ReadyToRead == 0)
  3537  000DA4  5023               	movf	ikey_parsing@k,w,c
  3538  000DA6  0D10               	mullw	16
  3539  000DA8  50F3               	movf	prodl,w,c
  3540  000DAA  0F6A               	addlw	low (_key+10)
  3541  000DAC  6ED9               	movwf	fsr2l,c
  3542  000DAE  6ADA               	clrf	fsr2h,c
  3543  000DB0  0100               	movlb	0	; () banked
  3544  000DB2  BCDF               	btfsc	indf2,6,c
  3545  000DB4  D008               	goto	l333
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;ikb.c: 725: {;ikb.c: 726: key[k].sm1 = (9);
  3549  000DB6  5023               	movf	ikey_parsing@k,w,c
  3550  000DB8  0D10               	mullw	16
  3551  000DBA  50F3               	movf	prodl,w,c
  3552  000DBC  0F66               	addlw	low (_key+6)
  3553  000DBE  6ED9               	movwf	fsr2l,c
  3554  000DC0  6ADA               	clrf	fsr2h,c
  3555  000DC2  0E09               	movlw	9
  3556  000DC4  6EDF               	movwf	indf2,c
  3557  000DC6                     l333:
  3558                           
  3559                           ;ikb.c: 727: };ikb.c: 728: };ikb.c: 730: if (key[k].sm1 == (9))
  3560  000DC6  5023               	movf	ikey_parsing@k,w,c
  3561  000DC8  0D10               	mullw	16
  3562  000DCA  50F3               	movf	prodl,w,c
  3563  000DCC  0F66               	addlw	low (_key+6)
  3564  000DCE  6ED9               	movwf	fsr2l,c
  3565  000DD0  6ADA               	clrf	fsr2h,c
  3566  000DD2  0E09               	movlw	9
  3567  000DD4  18DE               	xorwf	postinc2,w,c
  3568  000DD6  A4D8               	btfss	status,2,c
  3569  000DD8  D02F               	goto	l5161
  3570                           
  3571                           ;ikb.c: 731: {;ikb.c: 732: if (key[k].num_group_x > 0)
  3572  000DDA  5023               	movf	ikey_parsing@k,w,c
  3573  000DDC  0D10               	mullw	16
  3574  000DDE  50F3               	movf	prodl,w,c
  3575  000DE0  0F69               	addlw	low (_key+9)
  3576  000DE2  6ED9               	movwf	fsr2l,c
  3577  000DE4  6ADA               	clrf	fsr2h,c
  3578  000DE6  50DF               	movf	indf2,w,c
  3579  000DE8  B4D8               	btfsc	status,2,c
  3580  000DEA  D016               	goto	l336
  3581                           
  3582                           ;ikb.c: 733: {;ikb.c: 734: group_x[key[k].num_group_x] = 0;
  3583  000DEC  5023               	movf	ikey_parsing@k,w,c
  3584  000DEE  0D10               	mullw	16
  3585  000DF0  50F3               	movf	prodl,w,c
  3586  000DF2  0F69               	addlw	low (_key+9)
  3587  000DF4  6ED9               	movwf	fsr2l,c
  3588  000DF6  6ADA               	clrf	fsr2h,c
  3589  000DF8  50DF               	movf	indf2,w,c
  3590  000DFA  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3591  000DFC  501F               	movf	??_ikey_parsing,w,c
  3592  000DFE  0FB8               	addlw	low _group_x
  3593  000E00  6ED9               	movwf	fsr2l,c
  3594  000E02  6ADA               	clrf	fsr2h,c
  3595  000E04  0E00               	movlw	0
  3596  000E06  6EDF               	movwf	indf2,c
  3597                           
  3598                           ;ikb.c: 735: key[k].bf.OwnerOfGroup = 0;
  3599  000E08  5023               	movf	ikey_parsing@k,w,c
  3600  000E0A  0D10               	mullw	16
  3601  000E0C  50F3               	movf	prodl,w,c
  3602  000E0E  0F6B               	addlw	low (_key+11)
  3603  000E10  6ED9               	movwf	fsr2l,c
  3604  000E12  6ADA               	clrf	fsr2h,c
  3605  000E14  0100               	movlb	0	; () banked
  3606  000E16  90DF               	bcf	indf2,0,c
  3607  000E18                     l336:
  3608                           
  3609                           ;ikb.c: 736: };ikb.c: 738: key[k].sm1 = (0);
  3610  000E18  5023               	movf	ikey_parsing@k,w,c
  3611  000E1A  0D10               	mullw	16
  3612  000E1C  50F3               	movf	prodl,w,c
  3613  000E1E  0F66               	addlw	low (_key+6)
  3614  000E20  6ED9               	movwf	fsr2l,c
  3615  000E22  6ADA               	clrf	fsr2h,c
  3616  000E24  0E00               	movlw	0
  3617  000E26  6EDF               	movwf	indf2,c
  3618                           
  3619                           ;ikb.c: 741: key[k].bf.InProcessing = 0;
  3620  000E28  5023               	movf	ikey_parsing@k,w,c
  3621  000E2A  0D10               	mullw	16
  3622  000E2C  50F3               	movf	prodl,w,c
  3623  000E2E  0F6B               	addlw	low (_key+11)
  3624  000E30  6ED9               	movwf	fsr2l,c
  3625  000E32  6ADA               	clrf	fsr2h,c
  3626  000E34  0100               	movlb	0	; () banked
  3627  000E36  92DF               	bcf	indf2,1,c
  3628  000E38                     l5161:
  3629  000E38  2A23               	incf	ikey_parsing@k,f,c
  3630  000E3A  0E04               	movlw	4
  3631  000E3C  6423               	cpfsgt	ikey_parsing@k,c
  3632  000E3E  D4EB               	goto	l5075
  3633  000E40  0012               	return	
  3634  000E42                     __end_of_ikey_parsing:
  3635                           	opt callstack 0
  3636                           
  3637 ;; *************** function _ikey_is_accessible *****************
  3638 ;; Defined at:
  3639 ;;		line 509 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  k               1    wreg     unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  k               1   12[COMRAM] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      unsigned char 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3653 ;;      Params:         0       0       0       0       0       0       0       0       0
  3654 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3655 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3656 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3657 ;;Total ram usage:        3 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    5
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_ikey_parsing
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text15
  3668  0023D8                     __ptext15:
  3669                           	opt callstack 0
  3670  0023D8                     _ikey_is_accessible:
  3671                           	opt callstack 23
  3672                           
  3673                           ;incstack = 0
  3674                           ;ikey_is_accessible@k stored from wreg
  3675  0023D8  6E0D               	movwf	ikey_is_accessible@k,c
  3676                           
  3677                           ;ikb.c: 511: if (key[k].num_group_x != 0)
  3678  0023DA  500D               	movf	ikey_is_accessible@k,w,c
  3679  0023DC  0D10               	mullw	16
  3680  0023DE  50F3               	movf	prodl,w,c
  3681  0023E0  0F69               	addlw	low (_key+9)
  3682  0023E2  6ED9               	movwf	fsr2l,c
  3683  0023E4  6ADA               	clrf	fsr2h,c
  3684  0023E6  50DF               	movf	indf2,w,c
  3685  0023E8  B4D8               	btfsc	status,2,c
  3686  0023EA  D01A               	goto	l4969
  3687                           
  3688                           ;ikb.c: 512: {;ikb.c: 514: if (group_x[key[k].num_group_x] == 1)
  3689  0023EC  500D               	movf	ikey_is_accessible@k,w,c
  3690  0023EE  0D10               	mullw	16
  3691  0023F0  50F3               	movf	prodl,w,c
  3692  0023F2  0F69               	addlw	low (_key+9)
  3693  0023F4  6ED9               	movwf	fsr2l,c
  3694  0023F6  6ADA               	clrf	fsr2h,c
  3695  0023F8  50DF               	movf	indf2,w,c
  3696  0023FA  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  3697  0023FC  500B               	movf	??_ikey_is_accessible,w,c
  3698  0023FE  0FB8               	addlw	low _group_x
  3699  002400  6ED9               	movwf	fsr2l,c
  3700  002402  6ADA               	clrf	fsr2h,c
  3701  002404  04DE               	decf	postinc2,w,c
  3702  002406  A4D8               	btfss	status,2,c
  3703  002408  D00B               	goto	l4969
  3704                           
  3705                           ;ikb.c: 515: {;ikb.c: 517: if ( !key[k].bf.OwnerOfGroup)
  3706  00240A  500D               	movf	ikey_is_accessible@k,w,c
  3707  00240C  0D10               	mullw	16
  3708  00240E  50F3               	movf	prodl,w,c
  3709  002410  0F6B               	addlw	low (_key+11)
  3710  002412  6ED9               	movwf	fsr2l,c
  3711  002414  6ADA               	clrf	fsr2h,c
  3712  002416  0100               	movlb	0	; () banked
  3713  002418  B0DF               	btfsc	indf2,0,c
  3714  00241A  D002               	goto	l4969
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;ikb.c: 518: {;ikb.c: 519: return 0;
  3718  00241C  0E00               	movlw	0
  3719  00241E  0012               	return	
  3720  002420                     l4969:
  3721                           
  3722                           ;ikb.c: 520: };ikb.c: 521: };ikb.c: 522: };ikb.c: 523: return 1;
  3723  002420  0E01               	movlw	1
  3724  002422  0012               	return		;funcret
  3725  002424                     __end_of_ikey_is_accessible:
  3726                           	opt callstack 0
  3727                           
  3728 ;; *************** function ___lwtoft *****************
  3729 ;; Defined at:
  3730 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  c               2   18[COMRAM] unsigned int 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  3   18[COMRAM] float 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3744 ;;      Params:         3       0       0       0       0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3747 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3748 ;;Total ram usage:        3 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    6
  3751 ;; This function calls:
  3752 ;;		___ftpack
  3753 ;; This function is called by:
  3754 ;;		_ikey_parsing
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text16
  3759  0027CC                     __ptext16:
  3760                           	opt callstack 0
  3761  0027CC                     ___lwtoft:
  3762                           	opt callstack 22
  3763                           
  3764                           ;incstack = 0
  3765  0027CC  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  3766  0027D0  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  3767  0027D4  6A0D               	clrf	___ftpack@arg+2,c
  3768  0027D6  0E8E               	movlw	142
  3769  0027D8  6E0E               	movwf	___ftpack@exp,c
  3770  0027DA  0E00               	movlw	0
  3771  0027DC  6E0F               	movwf	___ftpack@sign,c
  3772  0027DE  EC99  F00D         	call	___ftpack	;wreg free
  3773  0027E2  C00B  F013         	movff	?___ftpack,?___lwtoft
  3774  0027E6  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  3775  0027EA  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  3776  0027EE  0012               	return		;funcret
  3777  0027F0                     __end_of___lwtoft:
  3778                           	opt callstack 0
  3779                           
  3780 ;; *************** function _ikb_init *****************
  3781 ;; Defined at:
  3782 ;;		line 216 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  i               1   10[COMRAM] char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 3F/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0
  3797 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3799 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3800 ;;Total ram usage:        1 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    5
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text17
  3811  001A7C                     __ptext17:
  3812                           	opt callstack 0
  3813  001A7C                     _ikb_init:
  3814                           	opt callstack 25
  3815                           
  3816                           ;incstack = 0
  3817                           ;ikb.c: 218: int8_t i;;ikb.c: 388: do{TRISC |= 1<<4;}while(0);
  3818  001A7C  8894               	bsf	3988,4,c	;volatile
  3819                           
  3820                           ;ikb.c: 389: do{TRISC |= 1<<5;}while(0);
  3821  001A7E  8A94               	bsf	3988,5,c	;volatile
  3822                           
  3823                           ;ikb.c: 390: do{TRISC |= 1<<6;}while(0);
  3824  001A80  8C94               	bsf	3988,6,c	;volatile
  3825                           
  3826                           ;ikb.c: 391: do{TRISC |= 1<<7;}while(0);
  3827  001A82  8E94               	bsf	3988,7,c	;volatile
  3828                           
  3829                           ;ikb.c: 392: do{TRISD |= 1<<4;}while(0);
  3830  001A84  8895               	bsf	3989,4,c	;volatile
  3831                           
  3832                           ;ikb.c: 393: key[0].keyRead = keyRead_pin_key0;
  3833  001A86  0E86               	movlw	low _keyRead_pin_key0
  3834  001A88  0100               	movlb	0	; () banked
  3835  001A8A  6F60               	movwf	_key& (0+255),b	;volatile
  3836  001A8C  0E29               	movlw	high _keyRead_pin_key0
  3837  001A8E  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;ikb.c: 394: key[1].keyRead = keyRead_pin_key1;
  3841  001A90  0E40               	movlw	low _keyRead_pin_key1
  3842  001A92  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3843  001A94  0E29               	movlw	high _keyRead_pin_key1
  3844  001A96  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;ikb.c: 395: key[2].keyRead = keyRead_pin_key2;
  3848  001A98  0E36               	movlw	low _keyRead_pin_key2
  3849  001A9A  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3850  001A9C  0E29               	movlw	high _keyRead_pin_key2
  3851  001A9E  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;ikb.c: 396: key[3].keyRead = keyRead_pin_key3;
  3855  001AA0  0E96               	movlw	low _keyRead_pin_key3
  3856  001AA2  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3857  001AA4  0E29               	movlw	high _keyRead_pin_key3
  3858  001AA6  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;ikb.c: 397: key[4].keyRead = keyRead_pin_key4;
  3862  001AA8  0E8E               	movlw	low _keyRead_pin_key4
  3863  001AAA  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3864  001AAC  0E29               	movlw	high _keyRead_pin_key4
  3865  001AAE  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;ikb.c: 400: for (i=0; i<5; i++)
  3869  001AB0  0E00               	movlw	0
  3870  001AB2  6E0B               	movwf	ikb_init@i,c
  3871  001AB4                     l5441:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;ikb.c: 401: {;ikb.c: 402: key[i].bf.OnKeyPressed = 1;
  3875  001AB4  500B               	movf	ikb_init@i,w,c
  3876  001AB6  0D10               	mullw	16
  3877  001AB8  50F3               	movf	prodl,w,c
  3878  001ABA  0F6A               	addlw	low (_key+10)
  3879  001ABC  6ED9               	movwf	fsr2l,c
  3880  001ABE  6ADA               	clrf	fsr2h,c
  3881  001AC0  82DF               	bsf	indf2,1,c
  3882                           
  3883                           ;ikb.c: 403: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3884  001AC2  500B               	movf	ikb_init@i,w,c
  3885  001AC4  0D10               	mullw	16
  3886  001AC6  50F3               	movf	prodl,w,c
  3887  001AC8  0F6A               	addlw	low (_key+10)
  3888  001ACA  6ED9               	movwf	fsr2l,c
  3889  001ACC  6ADA               	clrf	fsr2h,c
  3890  001ACE  94DF               	bcf	indf2,2,c
  3891                           
  3892                           ;ikb.c: 404: key[i].bf.AtTimeExpired = 0;
  3893  001AD0  500B               	movf	ikb_init@i,w,c
  3894  001AD2  0D10               	mullw	16
  3895  001AD4  50F3               	movf	prodl,w,c
  3896  001AD6  0F6A               	addlw	low (_key+10)
  3897  001AD8  6ED9               	movwf	fsr2l,c
  3898  001ADA  6ADA               	clrf	fsr2h,c
  3899  001ADC  96DF               	bcf	indf2,3,c
  3900                           
  3901                           ;ikb.c: 405: key[i].bf.Reptt = 0;
  3902  001ADE  500B               	movf	ikb_init@i,w,c
  3903  001AE0  0D10               	mullw	16
  3904  001AE2  50F3               	movf	prodl,w,c
  3905  001AE4  0F6A               	addlw	low (_key+10)
  3906  001AE6  6ED9               	movwf	fsr2l,c
  3907  001AE8  6ADA               	clrf	fsr2h,c
  3908  001AEA  9ADF               	bcf	indf2,5,c
  3909                           
  3910                           ;ikb.c: 406: key[i].num_group_x = 0;
  3911  001AEC  500B               	movf	ikb_init@i,w,c
  3912  001AEE  0D10               	mullw	16
  3913  001AF0  50F3               	movf	prodl,w,c
  3914  001AF2  0F69               	addlw	low (_key+9)
  3915  001AF4  6ED9               	movwf	fsr2l,c
  3916  001AF6  6ADA               	clrf	fsr2h,c
  3917  001AF8  0E00               	movlw	0
  3918  001AFA  6EDF               	movwf	indf2,c
  3919                           
  3920                           ;ikb.c: 407: key[i].repp.to_start= (uint16_t)500.0/5;
  3921  001AFC  500B               	movf	ikb_init@i,w,c
  3922  001AFE  0D10               	mullw	16
  3923  001B00  50F3               	movf	prodl,w,c
  3924  001B02  0F6C               	addlw	low (_key+12)
  3925  001B04  6ED9               	movwf	fsr2l,c
  3926  001B06  6ADA               	clrf	fsr2h,c
  3927  001B08  0E64               	movlw	100
  3928  001B0A  6EDE               	movwf	postinc2,c
  3929  001B0C  0E00               	movlw	0
  3930  001B0E  6EDD               	movwf	postdec2,c
  3931                           
  3932                           ;ikb.c: 408: key[i].repp.after_start = (uint16_t)200.0/5;
  3933  001B10  500B               	movf	ikb_init@i,w,c
  3934  001B12  0D10               	mullw	16
  3935  001B14  50F3               	movf	prodl,w,c
  3936  001B16  0F6E               	addlw	low (_key+14)
  3937  001B18  6ED9               	movwf	fsr2l,c
  3938  001B1A  6ADA               	clrf	fsr2h,c
  3939  001B1C  0E28               	movlw	40
  3940  001B1E  6EDE               	movwf	postinc2,c
  3941  001B20  0E00               	movlw	0
  3942  001B22  6EDD               	movwf	postdec2,c
  3943                           
  3944                           ; BSR set to: 0
  3945  001B24  2A0B               	incf	ikb_init@i,f,c
  3946                           
  3947                           ; BSR set to: 0
  3948  001B26  500B               	movf	ikb_init@i,w,c
  3949  001B28  0A80               	xorlw	128
  3950  001B2A  0F7B               	addlw	-133
  3951  001B2C  B0D8               	btfsc	status,0,c
  3952  001B2E  0012               	return	
  3953  001B30  D7C1               	goto	l5441
  3954  001B32                     __end_of_ikb_init:
  3955                           	opt callstack 0
  3956                           
  3957 ;; *************** function _disp7s_job *****************
  3958 ;; Defined at:
  3959 ;;		line 128 in file "display.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  pq              1   20[COMRAM] char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3973 ;;      Params:         0       0       0       0       0       0       0       0       0
  3974 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3975 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3976 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3977 ;;Total ram usage:        3 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    7
  3980 ;; This function calls:
  3981 ;;		_disp7s_mux0_off
  3982 ;;		_disp7s_mux0_on
  3983 ;;		_disp7s_mux1_off
  3984 ;;		_disp7s_mux1_on
  3985 ;;		_disp7s_mux2_off
  3986 ;;		_disp7s_mux2_on
  3987 ;;		_disp7s_mux3_off
  3988 ;;		_disp7s_mux3_on
  3989 ;;		_disp7s_mux4_off
  3990 ;;		_disp7s_mux4_on
  3991 ;;		_disp7s_mux_Q
  3992 ;; This function is called by:
  3993 ;;		_main
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text18
  3998  001FC6                     __ptext18:
  3999                           	opt callstack 0
  4000  001FC6                     _disp7s_job:
  4001                           	opt callstack 23
  4002                           
  4003                           ;display.c: 134: pq= q-1;
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;incstack = 0
  4007  001FC6  044D               	decf	disp7s_job@q,w,c
  4008  001FC8  6E15               	movwf	disp7s_job@pq,c
  4009                           
  4010                           ;display.c: 135: if (pq<0)
  4011  001FCA  AE15               	btfss	disp7s_job@pq,7,c
  4012  001FCC  D002               	goto	l5515
  4013                           
  4014                           ;display.c: 136: {pq=(2 + 3)-1;}
  4015  001FCE  0E04               	movlw	4
  4016  001FD0  6E15               	movwf	disp7s_job@pq,c
  4017  001FD2                     l5515:
  4018                           
  4019                           ;display.c: 137: disp7s_mux[pq].Qonoff[0]();
  4020  001FD2  5015               	movf	disp7s_job@pq,w,c
  4021  001FD4  0D04               	mullw	4
  4022  001FD6  50F3               	movf	prodl,w,c
  4023  001FD8  0FCD               	addlw	low _disp7s_mux
  4024  001FDA  6ED9               	movwf	fsr2l,c
  4025  001FDC  6ADA               	clrf	fsr2h,c
  4026  001FDE  D801               	call	u6728
  4027  001FE0  D00A               	goto	u6729
  4028  001FE2                     u6728:
  4029  001FE2  0005               	push	
  4030  001FE4  6EFA               	movwf	pclath,c
  4031  001FE6  50DE               	movf	postinc2,w,c
  4032  001FE8  6EFD               	movwf	tosl,c
  4033  001FEA  50DE               	movf	postinc2,w,c
  4034  001FEC  6EFE               	movwf	tosh,c
  4035  001FEE  50F8               	movf	tblptru,w,c
  4036  001FF0  6EFF               	movwf	tosu,c
  4037  001FF2  50FA               	movf	pclath,w,c
  4038  001FF4  0012               	return		;indir
  4039  001FF6                     u6729:
  4040                           
  4041                           ;display.c: 139: if (q < 3)
  4042  001FF6  504D               	movf	disp7s_job@q,w,c
  4043  001FF8  0A80               	xorlw	128
  4044  001FFA  0F7D               	addlw	-131
  4045  001FFC  B0D8               	btfsc	status,0,c
  4046  001FFE  D007               	goto	l5521
  4047                           
  4048                           ;display.c: 140: {LATB = pulsonic.disp7s.qty[q];}
  4049  002000  0E3C               	movlw	low (_pulsonic+60)
  4050  002002  244D               	addwf	disp7s_job@q,w,c
  4051  002004  6ED9               	movwf	fsr2l,c
  4052  002006  6ADA               	clrf	fsr2h,c
  4053  002008  0E01               	movlw	high (_pulsonic+60)
  4054  00200A  22DA               	addwfc	fsr2h,f,c
  4055  00200C  D00B               	goto	L4
  4056  00200E                     l5521:
  4057                           
  4058                           ;display.c: 141: else;display.c: 142: {LATB = pulsonic.disp7s.mode[q-3];}
  4059  00200E  C04D  F013         	movff	disp7s_job@q,??_disp7s_job
  4060  002012  6A14               	clrf	(??_disp7s_job+1)& (0+255),c
  4061  002014  BE13               	btfsc	??_disp7s_job& (0+255),7,c
  4062  002016  0614               	decf	(??_disp7s_job+1)& (0+255),f,c
  4063  002018  0E3C               	movlw	low (_pulsonic+60)
  4064  00201A  2413               	addwf	??_disp7s_job,w,c
  4065  00201C  6ED9               	movwf	fsr2l,c
  4066  00201E  0E01               	movlw	high (_pulsonic+60)
  4067  002020  2014               	addwfc	??_disp7s_job+1,w,c
  4068  002022  6EDA               	movwf	fsr2h,c
  4069  002024                     L4:
  4070  002024  50DF               	movf	indf2,w,c
  4071  002026  6E8A               	movwf	3978,c	;volatile
  4072                           
  4073                           ;display.c: 144: disp7s_mux_Q(q);
  4074  002028  504D               	movf	disp7s_job@q,w,c
  4075  00202A  ECF0  F00D         	call	_disp7s_mux_Q
  4076                           
  4077                           ;display.c: 146: if (++q == (2 + 3))
  4078  00202E  2A4D               	incf	disp7s_job@q,f,c
  4079  002030  0E05               	movlw	5
  4080  002032  184D               	xorwf	disp7s_job@q,w,c
  4081  002034  A4D8               	btfss	status,2,c
  4082  002036  0012               	return	
  4083                           
  4084                           ;display.c: 147: {q=0x0;}
  4085  002038  0E00               	movlw	0
  4086  00203A  6E4D               	movwf	disp7s_job@q,c
  4087  00203C  0012               	return		;funcret
  4088  00203E                     __end_of_disp7s_job:
  4089                           	opt callstack 0
  4090                           
  4091 ;; *************** function _disp7s_mux_Q *****************
  4092 ;; Defined at:
  4093 ;;		line 97 in file "display.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  q               1    wreg     char 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  q               1   16[COMRAM] char 
  4098 ;;  i               1   17[COMRAM] char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4108 ;;      Params:         0       0       0       0       0       0       0       0       0
  4109 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4111 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:        8 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    6
  4115 ;; This function calls:
  4116 ;;		_disp7s_mux0_off
  4117 ;;		_disp7s_mux0_on
  4118 ;;		_disp7s_mux1_off
  4119 ;;		_disp7s_mux1_on
  4120 ;;		_disp7s_mux2_off
  4121 ;;		_disp7s_mux2_on
  4122 ;;		_disp7s_mux3_off
  4123 ;;		_disp7s_mux3_on
  4124 ;;		_disp7s_mux4_off
  4125 ;;		_disp7s_mux4_on
  4126 ;; This function is called by:
  4127 ;;		_disp7s_job
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text19
  4132  001BE0                     __ptext19:
  4133                           	opt callstack 0
  4134  001BE0                     _disp7s_mux_Q:
  4135                           	opt callstack 23
  4136                           
  4137                           ;incstack = 0
  4138                           ;disp7s_mux_Q@q stored from wreg
  4139  001BE0  6E11               	movwf	disp7s_mux_Q@q,c
  4140                           
  4141                           ;display.c: 99: int8_t i;;display.c: 100: for (i=0; i< (2 + 3); i++)
  4142  001BE2  0E00               	movlw	0
  4143  001BE4  6E12               	movwf	disp7s_mux_Q@i,c
  4144  001BE6                     l5227:
  4145                           
  4146                           ;display.c: 101: {;display.c: 102: if ( (1<<i) & (1<<q) )
  4147  001BE6  C011  F00B         	movff	disp7s_mux_Q@q,??_disp7s_mux_Q
  4148  001BEA  0E01               	movlw	1
  4149  001BEC  6E0C               	movwf	(??_disp7s_mux_Q+1)& (0+255),c
  4150  001BEE  0E00               	movlw	0
  4151  001BF0  6E0D               	movwf	(??_disp7s_mux_Q+2)& (0+255),c
  4152  001BF2  2A0B               	incf	??_disp7s_mux_Q,f,c
  4153  001BF4  D003               	goto	u6264
  4154  001BF6                     u6265:
  4155  001BF6  90D8               	bcf	status,0,c
  4156  001BF8  360C               	rlcf	??_disp7s_mux_Q+1,f,c
  4157  001BFA  360D               	rlcf	??_disp7s_mux_Q+2,f,c
  4158  001BFC                     u6264:
  4159  001BFC  2E0B               	decfsz	??_disp7s_mux_Q,f,c
  4160  001BFE  D7FB               	goto	u6265
  4161  001C00  C012  F00E         	movff	disp7s_mux_Q@i,??_disp7s_mux_Q+3
  4162  001C04  0E01               	movlw	1
  4163  001C06  6E0F               	movwf	(??_disp7s_mux_Q+4)& (0+255),c
  4164  001C08  0E00               	movlw	0
  4165  001C0A  6E10               	movwf	(??_disp7s_mux_Q+5)& (0+255),c
  4166  001C0C  2A0E               	incf	??_disp7s_mux_Q+3,f,c
  4167  001C0E  D003               	goto	u6274
  4168  001C10                     u6275:
  4169  001C10  90D8               	bcf	status,0,c
  4170  001C12  360F               	rlcf	??_disp7s_mux_Q+4,f,c
  4171  001C14  3610               	rlcf	??_disp7s_mux_Q+5,f,c
  4172  001C16                     u6274:
  4173  001C16  2E0E               	decfsz	??_disp7s_mux_Q+3,f,c
  4174  001C18  D7FB               	goto	u6275
  4175  001C1A  500C               	movf	??_disp7s_mux_Q+1,w,c
  4176  001C1C  160F               	andwf	??_disp7s_mux_Q+4,f,c
  4177  001C1E  500D               	movf	??_disp7s_mux_Q+2,w,c
  4178  001C20  1610               	andwf	??_disp7s_mux_Q+5,f,c
  4179  001C22  500F               	movf	??_disp7s_mux_Q+4,w,c
  4180  001C24  1010               	iorwf	??_disp7s_mux_Q+5,w,c
  4181  001C26  B4D8               	btfsc	status,2,c
  4182  001C28  D012               	goto	l5231
  4183                           
  4184                           ;display.c: 103: disp7s_mux[i].Qonoff[1]();
  4185  001C2A  5012               	movf	disp7s_mux_Q@i,w,c
  4186  001C2C  0D04               	mullw	4
  4187  001C2E  50F3               	movf	prodl,w,c
  4188  001C30  0FCF               	addlw	low (_disp7s_mux+2)
  4189  001C32  6ED9               	movwf	fsr2l,c
  4190  001C34  6ADA               	clrf	fsr2h,c
  4191  001C36  D801               	call	u6298
  4192  001C38  D01C               	goto	u6309
  4193  001C3A                     u6298:
  4194  001C3A  0005               	push	
  4195  001C3C  6EFA               	movwf	pclath,c
  4196  001C3E  50DE               	movf	postinc2,w,c
  4197  001C40  6EFD               	movwf	tosl,c
  4198  001C42  50DE               	movf	postinc2,w,c
  4199  001C44  6EFE               	movwf	tosh,c
  4200  001C46  50F8               	movf	tblptru,w,c
  4201  001C48  6EFF               	movwf	tosu,c
  4202  001C4A  50FA               	movf	pclath,w,c
  4203  001C4C  0012               	return		;indir
  4204  001C4E                     l5231:
  4205                           
  4206                           ;display.c: 104: else;display.c: 105: disp7s_mux[i].Qonoff[0]();
  4207  001C4E  5012               	movf	disp7s_mux_Q@i,w,c
  4208  001C50  0D04               	mullw	4
  4209  001C52  50F3               	movf	prodl,w,c
  4210  001C54  0FCD               	addlw	low _disp7s_mux
  4211  001C56  6ED9               	movwf	fsr2l,c
  4212  001C58  6ADA               	clrf	fsr2h,c
  4213  001C5A  D801               	call	u6308
  4214  001C5C  D00A               	goto	u6309
  4215  001C5E                     u6308:
  4216  001C5E  0005               	push	
  4217  001C60  6EFA               	movwf	pclath,c
  4218  001C62  50DE               	movf	postinc2,w,c
  4219  001C64  6EFD               	movwf	tosl,c
  4220  001C66  50DE               	movf	postinc2,w,c
  4221  001C68  6EFE               	movwf	tosh,c
  4222  001C6A  50F8               	movf	tblptru,w,c
  4223  001C6C  6EFF               	movwf	tosu,c
  4224  001C6E  50FA               	movf	pclath,w,c
  4225  001C70  0012               	return		;indir
  4226  001C72                     u6309:
  4227  001C72  2A12               	incf	disp7s_mux_Q@i,f,c
  4228  001C74  5012               	movf	disp7s_mux_Q@i,w,c
  4229  001C76  0A80               	xorlw	128
  4230  001C78  0F7B               	addlw	-133
  4231  001C7A  B0D8               	btfsc	status,0,c
  4232  001C7C  0012               	return	
  4233  001C7E  D7B3               	goto	l5227
  4234  001C80                     __end_of_disp7s_mux_Q:
  4235                           	opt callstack 0
  4236                           
  4237 ;; *************** function _disp7s_init *****************
  4238 ;; Defined at:
  4239 ;;		line 112 in file "display.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  i               1   11[COMRAM] char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 3F/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0
  4254 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4256 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4257 ;;Total ram usage:        1 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    7
  4260 ;; This function calls:
  4261 ;;		_disp7s_mux_init
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text20
  4268  002328                     __ptext20:
  4269                           	opt callstack 0
  4270  002328                     _disp7s_init:
  4271                           	opt callstack 23
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;display.c: 114: int8_t i;;display.c: 115: for (i=0; i<2; i++)
  4275                           
  4276                           ;incstack = 0
  4277  002328  0E00               	movlw	0
  4278  00232A  6E0C               	movwf	disp7s_init@i,c
  4279  00232C                     l5453:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;display.c: 116: {pulsonic.disp7s.mode[i] = DISP7S_CHARS[OFF];}
  4283  00232C  0E0F               	movlw	low _DISP7S_CHARS
  4284  00232E  6EF6               	movwf	tblptrl,c
  4285  002330                     	if	1	;There is more than 1 active tblptr byte
  4286  002330  0E08               	movlw	high _DISP7S_CHARS
  4287  002332  6EF7               	movwf	tblptrh,c
  4288  002334                     	endif
  4289  002334                     	if	0	;There are less than 3 active tblptr bytes
  4290  002334                     	endif
  4291  002334  0E3F               	movlw	low (_pulsonic+63)
  4292  002336  240C               	addwf	disp7s_init@i,w,c
  4293  002338  6ED9               	movwf	fsr2l,c
  4294  00233A  6ADA               	clrf	fsr2h,c
  4295  00233C  0E01               	movlw	high (_pulsonic+63)
  4296  00233E  22DA               	addwfc	fsr2h,f,c
  4297  002340  0008               	tblrd		*
  4298  002342  CFF5 FFDF          	movff	tablat,indf2
  4299                           
  4300                           ; BSR set to: 0
  4301  002346  2A0C               	incf	disp7s_init@i,f,c
  4302                           
  4303                           ; BSR set to: 0
  4304  002348  500C               	movf	disp7s_init@i,w,c
  4305  00234A  0A80               	xorlw	128
  4306  00234C  0F7E               	addlw	-130
  4307  00234E  A0D8               	btfss	status,0,c
  4308  002350  D7ED               	goto	l5453
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;display.c: 118: for (i=0; i<3; i++)
  4312  002352  0E00               	movlw	0
  4313  002354  6E0C               	movwf	disp7s_init@i,c
  4314  002356                     l5465:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;display.c: 119: {pulsonic.disp7s.qty[i] = DISP7S_CHARS[OFF];}
  4318  002356  0E0F               	movlw	low _DISP7S_CHARS
  4319  002358  6EF6               	movwf	tblptrl,c
  4320  00235A                     	if	1	;There is more than 1 active tblptr byte
  4321  00235A  0E08               	movlw	high _DISP7S_CHARS
  4322  00235C  6EF7               	movwf	tblptrh,c
  4323  00235E                     	endif
  4324  00235E                     	if	0	;There are less than 3 active tblptr bytes
  4325  00235E                     	endif
  4326  00235E  0E3C               	movlw	low (_pulsonic+60)
  4327  002360  240C               	addwf	disp7s_init@i,w,c
  4328  002362  6ED9               	movwf	fsr2l,c
  4329  002364  6ADA               	clrf	fsr2h,c
  4330  002366  0E01               	movlw	high (_pulsonic+60)
  4331  002368  22DA               	addwfc	fsr2h,f,c
  4332  00236A  0008               	tblrd		*
  4333  00236C  CFF5 FFDF          	movff	tablat,indf2
  4334                           
  4335                           ; BSR set to: 0
  4336  002370  2A0C               	incf	disp7s_init@i,f,c
  4337                           
  4338                           ; BSR set to: 0
  4339  002372  500C               	movf	disp7s_init@i,w,c
  4340  002374  0A80               	xorlw	128
  4341  002376  0F7D               	addlw	-131
  4342  002378  A0D8               	btfss	status,0,c
  4343  00237A  D7ED               	goto	l5465
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;display.c: 121: TRISB = 0x00;
  4347  00237C  0E00               	movlw	0
  4348  00237E  6E93               	movwf	3987,c	;volatile
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;display.c: 122: disp7s_mux_init();
  4352  002380  ECE6  F012         	call	_disp7s_mux_init	;wreg free
  4353  002384  0012               	return		;funcret
  4354  002386                     __end_of_disp7s_init:
  4355                           	opt callstack 0
  4356                           
  4357 ;; *************** function _disp7s_mux_init *****************
  4358 ;; Defined at:
  4359 ;;		line 83 in file "display.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  i               1   10[COMRAM] char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 3F/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0
  4374 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4376 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4377 ;;Total ram usage:        1 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    6
  4380 ;; This function calls:
  4381 ;;		_disp7s_mux0_off
  4382 ;;		_disp7s_mux0_on
  4383 ;;		_disp7s_mux1_off
  4384 ;;		_disp7s_mux1_on
  4385 ;;		_disp7s_mux2_off
  4386 ;;		_disp7s_mux2_on
  4387 ;;		_disp7s_mux3_off
  4388 ;;		_disp7s_mux3_on
  4389 ;;		_disp7s_mux4_off
  4390 ;;		_disp7s_mux4_on
  4391 ;; This function is called by:
  4392 ;;		_disp7s_init
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text21
  4397  0025CC                     __ptext21:
  4398                           	opt callstack 0
  4399  0025CC                     _disp7s_mux_init:
  4400                           	opt callstack 23
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;display.c: 85: int8_t i;;display.c: 86: for (i=0; i< (2 + 3); i++)
  4404                           
  4405                           ;incstack = 0
  4406  0025CC  0E00               	movlw	0
  4407  0025CE  6E0B               	movwf	disp7s_mux_init@i,c
  4408  0025D0                     l5213:
  4409                           
  4410                           ;display.c: 87: {;display.c: 88: disp7s_mux[i].Qonoff[0]();
  4411  0025D0  500B               	movf	disp7s_mux_init@i,w,c
  4412  0025D2  0D04               	mullw	4
  4413  0025D4  50F3               	movf	prodl,w,c
  4414  0025D6  0FCD               	addlw	low _disp7s_mux
  4415  0025D8  6ED9               	movwf	fsr2l,c
  4416  0025DA  6ADA               	clrf	fsr2h,c
  4417  0025DC  D801               	call	u6248
  4418  0025DE  D00A               	goto	u6249
  4419  0025E0                     u6248:
  4420  0025E0  0005               	push	
  4421  0025E2  6EFA               	movwf	pclath,c
  4422  0025E4  50DE               	movf	postinc2,w,c
  4423  0025E6  6EFD               	movwf	tosl,c
  4424  0025E8  50DE               	movf	postinc2,w,c
  4425  0025EA  6EFE               	movwf	tosh,c
  4426  0025EC  50F8               	movf	tblptru,w,c
  4427  0025EE  6EFF               	movwf	tosu,c
  4428  0025F0  50FA               	movf	pclath,w,c
  4429  0025F2  0012               	return		;indir
  4430  0025F4                     u6249:
  4431  0025F4  2A0B               	incf	disp7s_mux_init@i,f,c
  4432  0025F6  500B               	movf	disp7s_mux_init@i,w,c
  4433  0025F8  0A80               	xorlw	128
  4434  0025FA  0F7B               	addlw	-133
  4435  0025FC  A0D8               	btfss	status,0,c
  4436  0025FE  D7E8               	goto	l5213
  4437  002600  9892               	bcf	3986,4,c	;volatile
  4438                           
  4439                           ;display.c: 91: do{TRISA &= ~(1<<3);}while(0);
  4440  002602  9692               	bcf	3986,3,c	;volatile
  4441                           
  4442                           ;display.c: 92: do{TRISA &= ~(1<<2);}while(0);
  4443  002604  9492               	bcf	3986,2,c	;volatile
  4444                           
  4445                           ;display.c: 93: do{TRISA &= ~(1<<1);}while(0);
  4446  002606  9292               	bcf	3986,1,c	;volatile
  4447                           
  4448                           ;display.c: 94: do{TRISA &= ~(1<<0);}while(0);
  4449  002608  9092               	bcf	3986,0,c	;volatile
  4450  00260A  0012               	return		;funcret
  4451  00260C                     __end_of_disp7s_mux_init:
  4452                           	opt callstack 0
  4453                           
  4454 ;; *************** function _disp7s_mux4_off *****************
  4455 ;; Defined at:
  4456 ;;		line 41 in file "display.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		status,2, status,0
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:    5
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_disp7s_mux_init
  4481 ;;		_disp7s_mux_Q
  4482 ;;		_disp7s_job
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text22
  4487  00299C                     __ptext22:
  4488                           	opt callstack 0
  4489  00299C                     _disp7s_mux4_off:
  4490                           	opt callstack 23
  4491                           
  4492                           ;incstack = 0
  4493                           ;display.c: 43: do{LATA |= 1<<0;}while(0);
  4494  00299C  8089               	bsf	3977,0,c	;volatile
  4495  00299E  0012               	return		;funcret
  4496  0029A0                     __end_of_disp7s_mux4_off:
  4497                           	opt callstack 0
  4498                           
  4499 ;; *************** function _disp7s_mux3_on *****************
  4500 ;; Defined at:
  4501 ;;		line 36 in file "display.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4515 ;;      Params:         0       0       0       0       0       0       0       0       0
  4516 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4518 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4519 ;;Total ram usage:        0 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    5
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_disp7s_mux_init
  4526 ;;		_disp7s_mux_Q
  4527 ;;		_disp7s_job
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text23
  4532  0029A0                     __ptext23:
  4533                           	opt callstack 0
  4534  0029A0                     _disp7s_mux3_on:
  4535                           	opt callstack 23
  4536                           
  4537                           ;incstack = 0
  4538                           ;display.c: 38: do{LATA &= ~(1<<1);}while(0);
  4539  0029A0  9289               	bcf	3977,1,c	;volatile
  4540  0029A2  0012               	return		;funcret
  4541  0029A4                     __end_of_disp7s_mux3_on:
  4542                           	opt callstack 0
  4543                           
  4544 ;; *************** function _disp7s_mux3_off *****************
  4545 ;; Defined at:
  4546 ;;		line 32 in file "display.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		status,2, status,0
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    5
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_disp7s_mux_init
  4571 ;;		_disp7s_mux_Q
  4572 ;;		_disp7s_job
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text24
  4577  0029A4                     __ptext24:
  4578                           	opt callstack 0
  4579  0029A4                     _disp7s_mux3_off:
  4580                           	opt callstack 23
  4581                           
  4582                           ;incstack = 0
  4583                           ;display.c: 34: do{LATA |= 1<<1;}while(0);
  4584  0029A4  8289               	bsf	3977,1,c	;volatile
  4585  0029A6  0012               	return		;funcret
  4586  0029A8                     __end_of_disp7s_mux3_off:
  4587                           	opt callstack 0
  4588                           
  4589 ;; *************** function _disp7s_mux2_on *****************
  4590 ;; Defined at:
  4591 ;;		line 27 in file "display.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4608 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    5
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_disp7s_mux_init
  4616 ;;		_disp7s_mux_Q
  4617 ;;		_disp7s_job
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text25
  4622  0029A8                     __ptext25:
  4623                           	opt callstack 0
  4624  0029A8                     _disp7s_mux2_on:
  4625                           	opt callstack 23
  4626                           
  4627                           ;incstack = 0
  4628                           ;display.c: 29: do{LATA &= ~(1<<2);}while(0);
  4629  0029A8  9489               	bcf	3977,2,c	;volatile
  4630  0029AA  0012               	return		;funcret
  4631  0029AC                     __end_of_disp7s_mux2_on:
  4632                           	opt callstack 0
  4633                           
  4634 ;; *************** function _disp7s_mux2_off *****************
  4635 ;; Defined at:
  4636 ;;		line 23 in file "display.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    5
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_disp7s_mux_init
  4661 ;;		_disp7s_mux_Q
  4662 ;;		_disp7s_job
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text26
  4667  0029AC                     __ptext26:
  4668                           	opt callstack 0
  4669  0029AC                     _disp7s_mux2_off:
  4670                           	opt callstack 23
  4671                           
  4672                           ;incstack = 0
  4673                           ;display.c: 25: do{LATA |= 1<<2;}while(0);
  4674  0029AC  8489               	bsf	3977,2,c	;volatile
  4675  0029AE  0012               	return		;funcret
  4676  0029B0                     __end_of_disp7s_mux2_off:
  4677                           	opt callstack 0
  4678                           
  4679 ;; *************** function _disp7s_mux1_on *****************
  4680 ;; Defined at:
  4681 ;;		line 18 in file "display.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4695 ;;      Params:         0       0       0       0       0       0       0       0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4698 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4699 ;;Total ram usage:        0 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    5
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_disp7s_mux_init
  4706 ;;		_disp7s_mux_Q
  4707 ;;		_disp7s_job
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text27
  4712  0029B0                     __ptext27:
  4713                           	opt callstack 0
  4714  0029B0                     _disp7s_mux1_on:
  4715                           	opt callstack 23
  4716                           
  4717                           ;incstack = 0
  4718                           ;display.c: 20: do{LATA &= ~(1<<3);}while(0);
  4719  0029B0  9689               	bcf	3977,3,c	;volatile
  4720  0029B2  0012               	return		;funcret
  4721  0029B4                     __end_of_disp7s_mux1_on:
  4722                           	opt callstack 0
  4723                           
  4724 ;; *************** function _disp7s_mux1_off *****************
  4725 ;; Defined at:
  4726 ;;		line 14 in file "display.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		status,2, status,0
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    5
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_disp7s_mux_init
  4751 ;;		_disp7s_mux_Q
  4752 ;;		_disp7s_job
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text28
  4757  0029B4                     __ptext28:
  4758                           	opt callstack 0
  4759  0029B4                     _disp7s_mux1_off:
  4760                           	opt callstack 23
  4761                           
  4762                           ;incstack = 0
  4763                           ;display.c: 16: do{LATA |= 1<<3;}while(0);
  4764  0029B4  8689               	bsf	3977,3,c	;volatile
  4765  0029B6  0012               	return		;funcret
  4766  0029B8                     __end_of_disp7s_mux1_off:
  4767                           	opt callstack 0
  4768                           
  4769 ;; *************** function _disp7s_mux0_on *****************
  4770 ;; Defined at:
  4771 ;;		line 9 in file "display.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		status,2, status,0
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4788 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4789 ;;Total ram usage:        0 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:    5
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_disp7s_mux_init
  4796 ;;		_disp7s_mux_Q
  4797 ;;		_disp7s_job
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text29
  4802  0029B8                     __ptext29:
  4803                           	opt callstack 0
  4804  0029B8                     _disp7s_mux0_on:
  4805                           	opt callstack 23
  4806                           
  4807                           ;incstack = 0
  4808                           ;display.c: 11: do{LATA &= ~(1<<4);}while(0);
  4809  0029B8  9889               	bcf	3977,4,c	;volatile
  4810  0029BA  0012               	return		;funcret
  4811  0029BC                     __end_of_disp7s_mux0_on:
  4812                           	opt callstack 0
  4813                           
  4814 ;; *************** function _disp7s_mux0_off *****************
  4815 ;; Defined at:
  4816 ;;		line 5 in file "display.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		status,2, status,0
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    5
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_disp7s_mux_init
  4841 ;;		_disp7s_mux_Q
  4842 ;;		_disp7s_job
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text30
  4847  0029BC                     __ptext30:
  4848                           	opt callstack 0
  4849  0029BC                     _disp7s_mux0_off:
  4850                           	opt callstack 23
  4851                           
  4852                           ;incstack = 0
  4853                           ;display.c: 7: do{LATA |= 1<<4;}while(0);
  4854  0029BC  8889               	bsf	3977,4,c	;volatile
  4855  0029BE  0012               	return		;funcret
  4856  0029C0                     __end_of_disp7s_mux0_off:
  4857                           	opt callstack 0
  4858                           
  4859 ;; *************** function _disp7s_mux4_on *****************
  4860 ;; Defined at:
  4861 ;;		line 45 in file "display.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		status,2, status,0
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4875 ;;      Params:         0       0       0       0       0       0       0       0       0
  4876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4878 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4879 ;;Total ram usage:        0 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    5
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_disp7s_mux_init
  4886 ;;		_disp7s_mux_Q
  4887 ;;		_disp7s_job
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text31
  4892  0029C0                     __ptext31:
  4893                           	opt callstack 0
  4894  0029C0                     _disp7s_mux4_on:
  4895                           	opt callstack 23
  4896                           
  4897                           ;incstack = 0
  4898                           ;display.c: 47: do{LATA &= ~(1<<0);}while(0);
  4899  0029C0  9089               	bcf	3977,0,c	;volatile
  4900  0029C2  0012               	return		;funcret
  4901  0029C4                     __end_of_disp7s_mux4_on:
  4902                           	opt callstack 0
  4903                           
  4904 ;; *************** function _configMode_job *****************
  4905 ;; Defined at:
  4906 ;;		line 26 in file "configMode.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  cod_ret         1   63[COMRAM] char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      char 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 3F/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4920 ;;      Params:         0       0       0       0       0       0       0       0       0
  4921 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4923 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4924 ;;Total ram usage:        1 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   11
  4927 ;; This function calls:
  4928 ;;		_configMode_disp
  4929 ;;		_configMode_kb
  4930 ;; This function is called by:
  4931 ;;		_main
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text32
  4936  00274C                     __ptext32:
  4937                           	opt callstack 0
  4938  00274C                     _configMode_job:
  4939                           	opt callstack 19
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;configMode.c: 28: int8_t cod_ret = 0;
  4943                           
  4944                           ;incstack = 0
  4945  00274C  0E00               	movlw	0
  4946  00274E  6E40               	movwf	configMode_job@cod_ret,c
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;configMode.c: 30: if (smain.focus.kb == FOCUS_KB_CONFIGMODE)
  4950  002750  0E03               	movlw	3
  4951  002752  19BE               	xorwf	(_smain+1)& (0+255),w,b	;volatile
  4952  002754  A4D8               	btfss	status,2,c
  4953  002756  D003               	goto	l5603
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;configMode.c: 31: {;configMode.c: 32: cod_ret = configMode_kb();
  4957  002758  EC21  F007         	call	_configMode_kb	;wreg free
  4958  00275C  6E40               	movwf	configMode_job@cod_ret,c
  4959  00275E                     l5603:
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;configMode.c: 33: };configMode.c: 35: if ( configMode.disp7s_accessReq == 1)
  4963  00275E  0447               	decf	_configMode,w,c
  4964  002760  A4D8               	btfss	status,2,c
  4965  002762  D009               	goto	l5611
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;configMode.c: 36: {;configMode.c: 37: if (disp_owner == DISPOWNER_CONFIGMODE)
  4969  002764  0E02               	movlw	2
  4970  002766  1851               	xorwf	_disp_owner,w,c
  4971  002768  A4D8               	btfss	status,2,c
  4972  00276A  D003               	goto	l5609
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;configMode.c: 38: {;configMode.c: 39: configMode_disp(configMode.numRegistro);
  4976  00276C  5048               	movf	_configMode+1,w,c
  4977  00276E  EC59  F010         	call	_configMode_disp
  4978  002772                     l5609:
  4979                           
  4980                           ;configMode.c: 40: };configMode.c: 41: configMode.disp7s_accessReq = 0;
  4981  002772  0E00               	movlw	0
  4982  002774  6E47               	movwf	_configMode,c
  4983  002776                     l5611:
  4984                           
  4985                           ;configMode.c: 42: };configMode.c: 44: return cod_ret;
  4986  002776  5040               	movf	configMode_job@cod_ret,w,c
  4987  002778  0012               	return		;funcret
  4988  00277A                     __end_of_configMode_job:
  4989                           	opt callstack 0
  4990                           
  4991 ;; *************** function _configMode_kb *****************
  4992 ;; Defined at:
  4993 ;;		line 46 in file "configMode.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  cod_ret         1   39[COMRAM] char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      char 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 3F/0
  5004 ;;		On exit  : 3F/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0
  5008 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5009 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5010 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5011 ;;Total ram usage:        4 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    8
  5014 ;; This function calls:
  5015 ;;		___ftadd
  5016 ;;		___ftge
  5017 ;;		___ftsub
  5018 ;;		_ikb_key_is_ready2read
  5019 ;;		_ikb_key_was_read
  5020 ;; This function is called by:
  5021 ;;		_configMode_job
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text33
  5026  000E42                     __ptext33:
  5027                           	opt callstack 0
  5028  000E42                     _configMode_kb:
  5029                           	opt callstack 21
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;configMode.c: 48: int8_t cod_ret = 0;
  5033                           
  5034                           ;incstack = 0
  5035  000E42  0E00               	movlw	0
  5036  000E44  6E28               	movwf	configMode_kb@cod_ret,c
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;configMode.c: 50: if (ikb_key_is_ready2read(0))
  5040  000E46  0E00               	movlw	0
  5041  000E48  EC29  F014         	call	_ikb_key_is_ready2read
  5042  000E4C  0900               	iorlw	0
  5043  000E4E  B4D8               	btfsc	status,2,c
  5044  000E50  D00D               	goto	l5341
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;configMode.c: 51: {;configMode.c: 52: ikb_key_was_read(0);
  5048  000E52  0E00               	movlw	0
  5049  000E54  EC51  F014         	call	_ikb_key_was_read
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;configMode.c: 54: if (++configMode.numRegistro >= (8+1))
  5053  000E58  2A48               	incf	_configMode+1,f,c
  5054  000E5A  5048               	movf	_configMode+1,w,c
  5055  000E5C  0A80               	xorlw	128
  5056  000E5E  0F77               	addlw	-137
  5057  000E60  A0D8               	btfss	status,0,c
  5058  000E62  D002               	goto	l915
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;configMode.c: 55: {;configMode.c: 56: configMode.numRegistro = 0x00;
  5062  000E64  0E00               	movlw	0
  5063  000E66  6E48               	movwf	_configMode+1,c
  5064  000E68                     l915:
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;configMode.c: 57: };configMode.c: 58: configMode.disp7s_accessReq = 1;
  5068  000E68  0E01               	movlw	1
  5069  000E6A  6E47               	movwf	_configMode,c
  5070  000E6C                     l5341:
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;configMode.c: 60: };configMode.c: 62: if (ikb_key_is_ready2read(1))
  5074  000E6C  0E01               	movlw	1
  5075  000E6E  EC29  F014         	call	_ikb_key_is_ready2read
  5076  000E72  0900               	iorlw	0
  5077  000E74  B4D8               	btfsc	status,2,c
  5078  000E76  D00A               	goto	l5349
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;configMode.c: 63: {;configMode.c: 64: ikb_key_was_read(1);
  5082  000E78  0E01               	movlw	1
  5083  000E7A  EC51  F014         	call	_ikb_key_was_read
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;configMode.c: 66: if (--configMode.numRegistro < 0)
  5087  000E7E  0648               	decf	_configMode+1,f,c
  5088  000E80  AE48               	btfss	_configMode+1,7,c
  5089  000E82  D002               	goto	l917
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;configMode.c: 67: {;configMode.c: 68: configMode.numRegistro = (8+1)-1;
  5093  000E84  0E08               	movlw	8
  5094  000E86  6E48               	movwf	_configMode+1,c
  5095  000E88                     l917:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;configMode.c: 69: };configMode.c: 70: configMode.disp7s_accessReq = 1;
  5099  000E88  0E01               	movlw	1
  5100  000E8A  6E47               	movwf	_configMode,c
  5101  000E8C                     l5349:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;configMode.c: 71: };configMode.c: 73: if (ikb_key_is_ready2read(2))
  5105  000E8C  0E02               	movlw	2
  5106  000E8E  EC29  F014         	call	_ikb_key_is_ready2read
  5107  000E92  0900               	iorlw	0
  5108  000E94  B4D8               	btfsc	status,2,c
  5109  000E96  D084               	goto	l5371
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;configMode.c: 74: {;configMode.c: 75: if (configMode.numRegistro < 8)
  5113  000E98  5048               	movf	_configMode+1,w,c
  5114  000E9A  0A80               	xorlw	128
  5115  000E9C  0F78               	addlw	-136
  5116  000E9E  B0D8               	btfsc	status,0,c
  5117  000EA0  D067               	goto	l5361
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;configMode.c: 76: {;configMode.c: 77: if (pulsonic.nozzle[configMode.numRegistro].Q_mlh
      +                           == 0)
  5121  000EA2  5048               	movf	_configMode+1,w,c
  5122  000EA4  0D06               	mullw	6
  5123  000EA6  0E06               	movlw	low (_pulsonic+6)
  5124  000EA8  24F3               	addwf	prodl,w,c
  5125  000EAA  6ED9               	movwf	fsr2l,c
  5126  000EAC  0E01               	movlw	high (_pulsonic+6)
  5127  000EAE  20F4               	addwfc	prodh,w,c
  5128  000EB0  6EDA               	movwf	fsr2h,c
  5129  000EB2  50DE               	movf	postinc2,w,c
  5130  000EB4  10DE               	iorwf	postinc2,w,c
  5131  000EB6  10DE               	iorwf	postinc2,w,c
  5132  000EB8  A4D8               	btfss	status,2,c
  5133  000EBA  D00F               	goto	l5357
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;configMode.c: 78: {;configMode.c: 79: pulsonic.nozzle[configMode.numRegistro].Q_mlh = 0
      +                          .3;
  5137  000EBC  5048               	movf	_configMode+1,w,c
  5138  000EBE  0D06               	mullw	6
  5139  000EC0  0E06               	movlw	low (_pulsonic+6)
  5140  000EC2  24F3               	addwf	prodl,w,c
  5141  000EC4  6ED9               	movwf	fsr2l,c
  5142  000EC6  0E01               	movlw	high (_pulsonic+6)
  5143  000EC8  20F4               	addwfc	prodh,w,c
  5144  000ECA  6EDA               	movwf	fsr2h,c
  5145  000ECC  0E9A               	movlw	154
  5146  000ECE  6EDE               	movwf	postinc2,c
  5147  000ED0  0E99               	movlw	153
  5148  000ED2  6EDE               	movwf	postinc2,c
  5149  000ED4  0E3E               	movlw	62
  5150  000ED6  6EDE               	movwf	postinc2,c
  5151                           
  5152                           ;configMode.c: 80: }
  5153  000ED8  D024               	goto	l921
  5154  000EDA                     l5357:
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;configMode.c: 81: else;configMode.c: 82: {;configMode.c: 83: pulsonic.nozzle[configMode
      +                          .numRegistro].Q_mlh += NOZZLE_QTY_DIFF;
  5158  000EDA  5048               	movf	_configMode+1,w,c
  5159  000EDC  0D06               	mullw	6
  5160  000EDE  0E06               	movlw	low (_pulsonic+6)
  5161  000EE0  24F3               	addwf	prodl,w,c
  5162  000EE2  6ED9               	movwf	fsr2l,c
  5163  000EE4  0E01               	movlw	high (_pulsonic+6)
  5164  000EE6  20F4               	addwfc	prodh,w,c
  5165  000EE8  6EDA               	movwf	fsr2h,c
  5166  000EEA  CFDE F013          	movff	postinc2,___ftadd@f1
  5167  000EEE  CFDE F014          	movff	postinc2,___ftadd@f1+1
  5168  000EF2  CFDD F015          	movff	postdec2,___ftadd@f1+2
  5169  000EF6  0ECD               	movlw	205
  5170  000EF8  6E16               	movwf	___ftadd@f2,c
  5171  000EFA  0ECC               	movlw	204
  5172  000EFC  6E17               	movwf	___ftadd@f2+1,c
  5173  000EFE  0E3D               	movlw	61
  5174  000F00  6E18               	movwf	___ftadd@f2+2,c
  5175  000F02  EC7F  F009         	call	___ftadd	;wreg free
  5176  000F06  5048               	movf	_configMode+1,w,c
  5177  000F08  0D06               	mullw	6
  5178  000F0A  0E06               	movlw	low (_pulsonic+6)
  5179  000F0C  24F3               	addwf	prodl,w,c
  5180  000F0E  6ED9               	movwf	fsr2l,c
  5181  000F10  0E01               	movlw	high (_pulsonic+6)
  5182  000F12  20F4               	addwfc	prodh,w,c
  5183  000F14  6EDA               	movwf	fsr2h,c
  5184  000F16  C013  FFDE         	movff	?___ftadd,postinc2
  5185  000F1A  C014  FFDE         	movff	?___ftadd+1,postinc2
  5186  000F1E  C015  FFDE         	movff	?___ftadd+2,postinc2
  5187  000F22                     l921:
  5188                           
  5189                           ;configMode.c: 84: };configMode.c: 86: if ( pulsonic.nozzle[configMode.numRegistro].Q_ml
      +                          h >= 12.0)
  5190  000F22  5048               	movf	_configMode+1,w,c
  5191  000F24  0D06               	mullw	6
  5192  000F26  0E06               	movlw	low (_pulsonic+6)
  5193  000F28  24F3               	addwf	prodl,w,c
  5194  000F2A  6ED9               	movwf	fsr2l,c
  5195  000F2C  0E01               	movlw	high (_pulsonic+6)
  5196  000F2E  20F4               	addwfc	prodh,w,c
  5197  000F30  6EDA               	movwf	fsr2h,c
  5198  000F32  CFDE F016          	movff	postinc2,___ftge@ff1
  5199  000F36  CFDE F017          	movff	postinc2,___ftge@ff1+1
  5200  000F3A  CFDD F018          	movff	postdec2,___ftge@ff1+2
  5201  000F3E  0E00               	movlw	0
  5202  000F40  6E19               	movwf	___ftge@ff2,c
  5203  000F42  0E40               	movlw	64
  5204  000F44  6E1A               	movwf	___ftge@ff2+1,c
  5205  000F46  0E41               	movlw	65
  5206  000F48  6E1B               	movwf	___ftge@ff2+2,c
  5207  000F4A  EC93  F010         	call	___ftge	;wreg free
  5208  000F4E  A0D8               	btfss	status,0,c
  5209  000F50  D022               	goto	l5367
  5210                           
  5211                           ;configMode.c: 87: {;configMode.c: 88: pulsonic.nozzle[configMode.numRegistro].Q_mlh = 1
      +                          2.0;
  5212  000F52  5048               	movf	_configMode+1,w,c
  5213  000F54  0D06               	mullw	6
  5214  000F56  0E06               	movlw	low (_pulsonic+6)
  5215  000F58  24F3               	addwf	prodl,w,c
  5216  000F5A  6ED9               	movwf	fsr2l,c
  5217  000F5C  0E01               	movlw	high (_pulsonic+6)
  5218  000F5E  20F4               	addwfc	prodh,w,c
  5219  000F60  6EDA               	movwf	fsr2h,c
  5220  000F62  0E00               	movlw	0
  5221  000F64  6EDE               	movwf	postinc2,c
  5222  000F66  0E40               	movlw	64
  5223  000F68  6EDE               	movwf	postinc2,c
  5224  000F6A  0E41               	movlw	65
  5225  000F6C  6EDE               	movwf	postinc2,c
  5226  000F6E  D013               	goto	l5367
  5227  000F70                     l5361:
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;configMode.c: 92: else;configMode.c: 93: {;configMode.c: 94: if (++pulsonic.oil.i>=4)
  5231  000F70  0101               	movlb	1	; () banked
  5232  000F72  2B36               	incf	(_pulsonic+54)& (0+255),f,b
  5233  000F74  5136               	movf	(_pulsonic+54)& (0+255),w,b
  5234  000F76  0A80               	xorlw	128
  5235  000F78  0F7C               	addlw	-132
  5236  000F7A  A0D8               	btfss	status,0,c
  5237  000F7C  D002               	goto	l5365
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;configMode.c: 95: {;configMode.c: 96: pulsonic.oil.i=0;
  5241  000F7E  0E00               	movlw	0
  5242  000F80  6F36               	movwf	(_pulsonic+54)& (0+255),b
  5243  000F82                     l5365:
  5244                           
  5245                           ; BSR set to: 1
  5246                           ;configMode.c: 97: };configMode.c: 98: pulsonic.oil.viscosity = OIL_VISCOSITY[pulsonic.o
      +                          il.i];
  5247  000F82  5136               	movf	(_pulsonic+54)& (0+255),w,b
  5248  000F84  0F0B               	addlw	low _OIL_VISCOSITY
  5249  000F86  6E25               	movwf	??_configMode_kb& (0+255),c
  5250  000F88  C025  FFF6         	movff	??_configMode_kb,tblptrl
  5251  000F8C                     	if	1	;There is more than 1 active tblptr byte
  5252  000F8C  0E08               	movlw	high __smallconst
  5253  000F8E  6EF7               	movwf	tblptrh,c
  5254  000F90                     	endif
  5255  000F90                     	if	0	;tblptru may be non-zero
  5256  000F90                     	endif
  5257  000F90                     	if	0	;tblptru may be non-zero
  5258  000F90                     	endif
  5259  000F90  0008               	tblrd		*
  5260  000F92  CFF5 F137          	movff	tablat,_pulsonic+55
  5261  000F96                     l5367:
  5262                           
  5263                           ;configMode.c: 99: };configMode.c: 100: configMode.disp7s_accessReq = 1;
  5264  000F96  0E01               	movlw	1
  5265  000F98  6E47               	movwf	_configMode,c
  5266                           
  5267                           ;configMode.c: 102: ikb_key_was_read(2);
  5268  000F9A  0E02               	movlw	2
  5269  000F9C  EC51  F014         	call	_ikb_key_was_read
  5270  000FA0                     l5371:
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;configMode.c: 104: };configMode.c: 105: if (ikb_key_is_ready2read(3))
  5274  000FA0  0E03               	movlw	3
  5275  000FA2  EC29  F014         	call	_ikb_key_is_ready2read
  5276  000FA6  0900               	iorlw	0
  5277  000FA8  B4D8               	btfsc	status,2,c
  5278  000FAA  D08E               	goto	l5397
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;configMode.c: 106: {;configMode.c: 107: if (configMode.numRegistro < 8)
  5282  000FAC  5048               	movf	_configMode+1,w,c
  5283  000FAE  0A80               	xorlw	128
  5284  000FB0  0F78               	addlw	-136
  5285  000FB2  B0D8               	btfsc	status,0,c
  5286  000FB4  D074               	goto	l5387
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;configMode.c: 108: {;configMode.c: 109: pulsonic.nozzle[configMode.numRegistro].Q_mlh -
      +                          = NOZZLE_QTY_DIFF;
  5290  000FB6  5048               	movf	_configMode+1,w,c
  5291  000FB8  0D06               	mullw	6
  5292  000FBA  0E06               	movlw	low (_pulsonic+6)
  5293  000FBC  24F3               	addwf	prodl,w,c
  5294  000FBE  6ED9               	movwf	fsr2l,c
  5295  000FC0  0E01               	movlw	high (_pulsonic+6)
  5296  000FC2  20F4               	addwfc	prodh,w,c
  5297  000FC4  6EDA               	movwf	fsr2h,c
  5298  000FC6  CFDE F01F          	movff	postinc2,___ftsub@f1
  5299  000FCA  CFDE F020          	movff	postinc2,___ftsub@f1+1
  5300  000FCE  CFDD F021          	movff	postdec2,___ftsub@f1+2
  5301  000FD2  0ECD               	movlw	205
  5302  000FD4  6E22               	movwf	___ftsub@f2,c
  5303  000FD6  0ECC               	movlw	204
  5304  000FD8  6E23               	movwf	___ftsub@f2+1,c
  5305  000FDA  0E3D               	movlw	61
  5306  000FDC  6E24               	movwf	___ftsub@f2+2,c
  5307  000FDE  EC06  F013         	call	___ftsub	;wreg free
  5308  000FE2  5048               	movf	_configMode+1,w,c
  5309  000FE4  0D06               	mullw	6
  5310  000FE6  0E06               	movlw	low (_pulsonic+6)
  5311  000FE8  24F3               	addwf	prodl,w,c
  5312  000FEA  6ED9               	movwf	fsr2l,c
  5313  000FEC  0E01               	movlw	high (_pulsonic+6)
  5314  000FEE  20F4               	addwfc	prodh,w,c
  5315  000FF0  6EDA               	movwf	fsr2h,c
  5316  000FF2  C01F  FFDE         	movff	?___ftsub,postinc2
  5317  000FF6  C020  FFDE         	movff	?___ftsub+1,postinc2
  5318  000FFA  C021  FFDE         	movff	?___ftsub+2,postinc2
  5319                           
  5320                           ;configMode.c: 111: if (configMode.numRegistro == 0)
  5321  000FFE  5048               	movf	_configMode+1,w,c
  5322  001000  A4D8               	btfss	status,2,c
  5323  001002  D026               	goto	l5383
  5324                           
  5325                           ;configMode.c: 112: {;configMode.c: 113: if ( pulsonic.nozzle[configMode.numRegistro].Q_
      +                          mlh < 0.3)
  5326  001004  5048               	movf	_configMode+1,w,c
  5327  001006  0D06               	mullw	6
  5328  001008  0E06               	movlw	low (_pulsonic+6)
  5329  00100A  24F3               	addwf	prodl,w,c
  5330  00100C  6ED9               	movwf	fsr2l,c
  5331  00100E  0E01               	movlw	high (_pulsonic+6)
  5332  001010  20F4               	addwfc	prodh,w,c
  5333  001012  6EDA               	movwf	fsr2h,c
  5334  001014  CFDE F016          	movff	postinc2,___ftge@ff1
  5335  001018  CFDE F017          	movff	postinc2,___ftge@ff1+1
  5336  00101C  CFDD F018          	movff	postdec2,___ftge@ff1+2
  5337  001020  0E9A               	movlw	154
  5338  001022  6E19               	movwf	___ftge@ff2,c
  5339  001024  0E99               	movlw	153
  5340  001026  6E1A               	movwf	___ftge@ff2+1,c
  5341  001028  0E3E               	movlw	62
  5342  00102A  6E1B               	movwf	___ftge@ff2+2,c
  5343  00102C  EC93  F010         	call	___ftge	;wreg free
  5344  001030  B0D8               	btfsc	status,0,c
  5345  001032  D045               	goto	l5393
  5346                           
  5347                           ;configMode.c: 114: {;configMode.c: 115: pulsonic.nozzle[configMode.numRegistro].Q_mlh =
      +                           0.3;
  5348  001034  5048               	movf	_configMode+1,w,c
  5349  001036  0D06               	mullw	6
  5350  001038  0E06               	movlw	low (_pulsonic+6)
  5351  00103A  24F3               	addwf	prodl,w,c
  5352  00103C  6ED9               	movwf	fsr2l,c
  5353  00103E  0E01               	movlw	high (_pulsonic+6)
  5354  001040  20F4               	addwfc	prodh,w,c
  5355  001042  6EDA               	movwf	fsr2h,c
  5356  001044  0E9A               	movlw	154
  5357  001046  6EDE               	movwf	postinc2,c
  5358  001048  0E99               	movlw	153
  5359  00104A  6EDE               	movwf	postinc2,c
  5360  00104C  0E3E               	movlw	62
  5361  00104E  D025               	goto	L5
  5362  001050                     l5383:
  5363                           
  5364                           ;configMode.c: 118: else;configMode.c: 119: {;configMode.c: 120: if ( pulsonic.nozzle[co
      +                          nfigMode.numRegistro].Q_mlh < 0.3)
  5365  001050  5048               	movf	_configMode+1,w,c
  5366  001052  0D06               	mullw	6
  5367  001054  0E06               	movlw	low (_pulsonic+6)
  5368  001056  24F3               	addwf	prodl,w,c
  5369  001058  6ED9               	movwf	fsr2l,c
  5370  00105A  0E01               	movlw	high (_pulsonic+6)
  5371  00105C  20F4               	addwfc	prodh,w,c
  5372  00105E  6EDA               	movwf	fsr2h,c
  5373  001060  CFDE F016          	movff	postinc2,___ftge@ff1
  5374  001064  CFDE F017          	movff	postinc2,___ftge@ff1+1
  5375  001068  CFDD F018          	movff	postdec2,___ftge@ff1+2
  5376  00106C  0E9A               	movlw	154
  5377  00106E  6E19               	movwf	___ftge@ff2,c
  5378  001070  0E99               	movlw	153
  5379  001072  6E1A               	movwf	___ftge@ff2+1,c
  5380  001074  0E3E               	movlw	62
  5381  001076  6E1B               	movwf	___ftge@ff2+2,c
  5382  001078  EC93  F010         	call	___ftge	;wreg free
  5383  00107C  B0D8               	btfsc	status,0,c
  5384  00107E  D01F               	goto	l5393
  5385                           
  5386                           ;configMode.c: 121: {;configMode.c: 122: pulsonic.nozzle[configMode.numRegistro].Q_mlh =
      +                           0;
  5387  001080  5048               	movf	_configMode+1,w,c
  5388  001082  0D06               	mullw	6
  5389  001084  0E06               	movlw	low (_pulsonic+6)
  5390  001086  24F3               	addwf	prodl,w,c
  5391  001088  6ED9               	movwf	fsr2l,c
  5392  00108A  0E01               	movlw	high (_pulsonic+6)
  5393  00108C  20F4               	addwfc	prodh,w,c
  5394  00108E  6EDA               	movwf	fsr2h,c
  5395  001090  0E00               	movlw	0
  5396  001092  6EDE               	movwf	postinc2,c
  5397  001094  0E00               	movlw	0
  5398  001096  6EDE               	movwf	postinc2,c
  5399  001098  0E00               	movlw	0
  5400  00109A                     L5:
  5401  00109A  6EDE               	movwf	postinc2,c
  5402  00109C  D010               	goto	l5393
  5403  00109E                     l5387:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;configMode.c: 126: else;configMode.c: 127: {;configMode.c: 128: if (--pulsonic.oil.i < 
      +                          0)
  5407  00109E  0101               	movlb	1	; () banked
  5408  0010A0  0736               	decf	(_pulsonic+54)& (0+255),f,b
  5409  0010A2  AF36               	btfss	(_pulsonic+54)& (0+255),7,b
  5410  0010A4  D002               	goto	l5391
  5411                           
  5412                           ; BSR set to: 1
  5413                           ;configMode.c: 129: {;configMode.c: 130: pulsonic.oil.i= 4-1;
  5414  0010A6  0E03               	movlw	3
  5415  0010A8  6F36               	movwf	(_pulsonic+54)& (0+255),b
  5416  0010AA                     l5391:
  5417                           
  5418                           ; BSR set to: 1
  5419                           ;configMode.c: 131: };configMode.c: 132: pulsonic.oil.viscosity = OIL_VISCOSITY[pulsonic
      +                          .oil.i];
  5420  0010AA  5136               	movf	(_pulsonic+54)& (0+255),w,b
  5421  0010AC  0F0B               	addlw	low _OIL_VISCOSITY
  5422  0010AE  6E25               	movwf	??_configMode_kb& (0+255),c
  5423  0010B0  C025  FFF6         	movff	??_configMode_kb,tblptrl
  5424  0010B4                     	if	1	;There is more than 1 active tblptr byte
  5425  0010B4  0E08               	movlw	high __smallconst
  5426  0010B6  6EF7               	movwf	tblptrh,c
  5427  0010B8                     	endif
  5428  0010B8                     	if	0	;tblptru may be non-zero
  5429  0010B8                     	endif
  5430  0010B8                     	if	0	;tblptru may be non-zero
  5431  0010B8                     	endif
  5432  0010B8  0008               	tblrd		*
  5433  0010BA  CFF5 F137          	movff	tablat,_pulsonic+55
  5434  0010BE                     l5393:
  5435                           
  5436                           ;configMode.c: 133: };configMode.c: 134: configMode.disp7s_accessReq = 1;
  5437  0010BE  0E01               	movlw	1
  5438  0010C0  6E47               	movwf	_configMode,c
  5439                           
  5440                           ;configMode.c: 136: ikb_key_was_read(3);
  5441  0010C2  0E03               	movlw	3
  5442  0010C4  EC51  F014         	call	_ikb_key_was_read
  5443  0010C8                     l5397:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;configMode.c: 138: };configMode.c: 139: if (ikb_key_is_ready2read(4))
  5447  0010C8  0E04               	movlw	4
  5448  0010CA  EC29  F014         	call	_ikb_key_is_ready2read
  5449  0010CE  0900               	iorlw	0
  5450  0010D0  B4D8               	btfsc	status,2,c
  5451  0010D2  D005               	goto	l5403
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;configMode.c: 140: {;configMode.c: 141: cod_ret = 1;
  5455  0010D4  0E01               	movlw	1
  5456  0010D6  6E28               	movwf	configMode_kb@cod_ret,c
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;configMode.c: 142: ikb_key_was_read(4);
  5460  0010D8  0E04               	movlw	4
  5461  0010DA  EC51  F014         	call	_ikb_key_was_read
  5462  0010DE                     l5403:
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;configMode.c: 144: };configMode.c: 145: return cod_ret;
  5466  0010DE  5028               	movf	configMode_kb@cod_ret,w,c
  5467                           
  5468                           ; BSR set to: 0
  5469  0010E0  0012               	return		;funcret
  5470  0010E2                     __end_of_configMode_kb:
  5471                           	opt callstack 0
  5472                           
  5473 ;; *************** function ___ftsub *****************
  5474 ;; Defined at:
  5475 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  f1              3   30[COMRAM] float 
  5478 ;;  f2              3   33[COMRAM] float 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  3   30[COMRAM] float 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 3F/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5490 ;;      Params:         6       0       0       0       0       0       0       0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5493 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5494 ;;Total ram usage:        6 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    7
  5497 ;; This function calls:
  5498 ;;		___ftadd
  5499 ;; This function is called by:
  5500 ;;		_configMode_kb
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text34
  5505  00260C                     __ptext34:
  5506                           	opt callstack 0
  5507  00260C                     ___ftsub:
  5508                           	opt callstack 21
  5509                           
  5510                           ; BSR set to: 0
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;incstack = 0
  5514  00260C  5022               	movf	___ftsub@f2,w,c
  5515  00260E  1023               	iorwf	___ftsub@f2+1,w,c
  5516  002610  1024               	iorwf	___ftsub@f2+2,w,c
  5517  002612  B4D8               	btfsc	status,2,c
  5518  002614  D006               	goto	l5021
  5519                           
  5520                           ; BSR set to: 0
  5521  002616  0E00               	movlw	0
  5522  002618  1A22               	xorwf	___ftsub@f2,f,c
  5523  00261A  0E00               	movlw	0
  5524  00261C  1A23               	xorwf	___ftsub@f2+1,f,c
  5525  00261E  0E80               	movlw	128
  5526  002620  1A24               	xorwf	___ftsub@f2+2,f,c
  5527  002622                     l5021:
  5528                           
  5529                           ; BSR set to: 0
  5530  002622  C01F  F013         	movff	___ftsub@f1,___ftadd@f1
  5531  002626  C020  F014         	movff	___ftsub@f1+1,___ftadd@f1+1
  5532  00262A  C021  F015         	movff	___ftsub@f1+2,___ftadd@f1+2
  5533  00262E  C022  F016         	movff	___ftsub@f2,___ftadd@f2
  5534  002632  C023  F017         	movff	___ftsub@f2+1,___ftadd@f2+1
  5535  002636  C024  F018         	movff	___ftsub@f2+2,___ftadd@f2+2
  5536  00263A  EC7F  F009         	call	___ftadd	;wreg free
  5537  00263E  C013  F01F         	movff	?___ftadd,?___ftsub
  5538  002642  C014  F020         	movff	?___ftadd+1,?___ftsub+1
  5539  002646  C015  F021         	movff	?___ftadd+2,?___ftsub+2
  5540  00264A  0012               	return		;funcret
  5541  00264C                     __end_of___ftsub:
  5542                           	opt callstack 0
  5543                           
  5544 ;; *************** function _configMode_disp *****************
  5545 ;; Defined at:
  5546 ;;		line 147 in file "configMode.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  numRegistro     1    wreg     char 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  numRegistro     1   62[COMRAM] char 
  5551 ;;  qty             3   59[COMRAM] char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1    wreg      void 
  5554 ;; Registers used:
  5555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5556 ;; Tracked objects:
  5557 ;;		On entry : 3F/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5561 ;;      Params:         0       0       0       0       0       0       0       0       0
  5562 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5564 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5565 ;;Total ram usage:        4 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:   10
  5568 ;; This function calls:
  5569 ;;		_disp7s_modeDisp_writeInt
  5570 ;;		_disp7s_modeDisp_writeText_oil
  5571 ;;		_disp7s_qtyDisp_writeFloat
  5572 ;;		_disp7s_qtyDisp_writeInt
  5573 ;;		_disp7s_qtyDisp_writeText_OFF
  5574 ;; This function is called by:
  5575 ;;		_configMode_job
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text35
  5580  0020B2                     __ptext35:
  5581                           	opt callstack 0
  5582  0020B2                     _configMode_disp:
  5583                           	opt callstack 19
  5584                           
  5585                           ;incstack = 0
  5586                           ;configMode_disp@numRegistro stored from wreg
  5587  0020B2  6E3F               	movwf	configMode_disp@numRegistro,c
  5588                           
  5589                           ;configMode.c: 149: double qty;;configMode.c: 151: if (numRegistro < 8)
  5590  0020B4  503F               	movf	configMode_disp@numRegistro,w,c
  5591  0020B6  0A80               	xorlw	128
  5592  0020B8  0F78               	addlw	-136
  5593  0020BA  B0D8               	btfsc	status,0,c
  5594  0020BC  D02A               	goto	l5419
  5595                           
  5596                           ;configMode.c: 152: {;configMode.c: 153: disp7s_modeDisp_writeInt(numRegistro+1);
  5597  0020BE  0E01               	movlw	1
  5598  0020C0  243F               	addwf	configMode_disp@numRegistro,w,c
  5599  0020C2  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  5600  0020C4  6AE8               	clrf	wreg,c
  5601  0020C6  B0D8               	btfsc	status,0,c
  5602  0020C8  2AE8               	incf	wreg,f,c
  5603  0020CA  BE3F               	btfsc	configMode_disp@numRegistro,7,c
  5604  0020CC  06E8               	decf	wreg,f,c
  5605  0020CE  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  5606  0020D0  EC44  F014         	call	_disp7s_modeDisp_writeInt	;wreg free
  5607                           
  5608                           ;configMode.c: 155: qty = pulsonic.nozzle[numRegistro].Q_mlh;
  5609  0020D4  503F               	movf	configMode_disp@numRegistro,w,c
  5610  0020D6  0D06               	mullw	6
  5611  0020D8  0E06               	movlw	low (_pulsonic+6)
  5612  0020DA  24F3               	addwf	prodl,w,c
  5613  0020DC  6ED9               	movwf	fsr2l,c
  5614  0020DE  0E01               	movlw	high (_pulsonic+6)
  5615  0020E0  20F4               	addwfc	prodh,w,c
  5616  0020E2  6EDA               	movwf	fsr2h,c
  5617  0020E4  CFDE F03C          	movff	postinc2,configMode_disp@qty
  5618  0020E8  CFDE F03D          	movff	postinc2,configMode_disp@qty+1
  5619  0020EC  CFDD F03E          	movff	postdec2,configMode_disp@qty+2
  5620                           
  5621                           ;configMode.c: 156: if (qty == 0)
  5622  0020F0  503C               	movf	configMode_disp@qty,w,c
  5623  0020F2  103D               	iorwf	configMode_disp@qty+1,w,c
  5624  0020F4  103E               	iorwf	configMode_disp@qty+2,w,c
  5625  0020F6  A4D8               	btfss	status,2,c
  5626  0020F8  D003               	goto	l5417
  5627                           
  5628                           ;configMode.c: 157: {;configMode.c: 158: disp7s_qtyDisp_writeText_OFF();
  5629  0020FA  EC6D  F014         	call	_disp7s_qtyDisp_writeText_OFF	;wreg free
  5630                           
  5631                           ;configMode.c: 159: }
  5632  0020FE  0012               	return	
  5633  002100                     l5417:
  5634                           
  5635                           ;configMode.c: 160: else;configMode.c: 161: {;configMode.c: 162: disp7s_qtyDisp_writeFlo
      +                          at( qty );
  5636  002100  C03C  F141         	movff	configMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  5637  002104  C03D  F142         	movff	configMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  5638  002108  C03E  F143         	movff	configMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  5639  00210C  EC1A  F014         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  5640  002110  0012               	return	
  5641  002112                     l5419:
  5642                           
  5643                           ;configMode.c: 165: else;configMode.c: 166: {;configMode.c: 167: disp7s_modeDisp_writeTe
      +                          xt_oil();
  5644  002112  EC84  F014         	call	_disp7s_modeDisp_writeText_oil	;wreg free
  5645                           
  5646                           ; BSR set to: 1
  5647                           ;configMode.c: 168: disp7s_qtyDisp_writeInt( pulsonic.oil.viscosity );
  5648  002116  5137               	movf	(_pulsonic+55)& (0+255),w,b
  5649  002118  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  5650  00211A  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  5651  00211C  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  5652  00211E  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  5653  002120  EC37  F014         	call	_disp7s_qtyDisp_writeInt	;wreg free
  5654  002124  0012               	return		;funcret
  5655  002126                     __end_of_configMode_disp:
  5656                           	opt callstack 0
  5657                           
  5658 ;; *************** function _disp7s_qtyDisp_writeText_OFF *****************
  5659 ;; Defined at:
  5660 ;;		line 169 in file "display.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 3F/1
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5677 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5678 ;;Total ram usage:        0 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    5
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_visMode_disp
  5685 ;;		_configMode_disp
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text36
  5690  0028DA                     __ptext36:
  5691                           	opt callstack 0
  5692  0028DA                     _disp7s_qtyDisp_writeText_OFF:
  5693                           	opt callstack 23
  5694                           
  5695                           ;display.c: 171: pulsonic.disp7s.qty[2] =0x3F;
  5696                           
  5697                           ;incstack = 0
  5698  0028DA  0E3F               	movlw	63
  5699  0028DC  0101               	movlb	1	; () banked
  5700  0028DE  6F3E               	movwf	(_pulsonic+62)& (0+255),b
  5701                           
  5702                           ;display.c: 172: pulsonic.disp7s.qty[1] =0x71;
  5703  0028E0  0E71               	movlw	113
  5704  0028E2  6F3D               	movwf	(_pulsonic+61)& (0+255),b
  5705                           
  5706                           ;display.c: 173: pulsonic.disp7s.qty[0] =0x71;
  5707  0028E4  0E71               	movlw	113
  5708  0028E6  6F3C               	movwf	(_pulsonic+60)& (0+255),b
  5709                           
  5710                           ; BSR set to: 1
  5711  0028E8  0012               	return		;funcret
  5712  0028EA                     __end_of_disp7s_qtyDisp_writeText_OFF:
  5713                           	opt callstack 0
  5714                           
  5715 ;; *************** function _disp7s_qtyDisp_writeInt *****************
  5716 ;; Defined at:
  5717 ;;		line 281 in file "display.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  num             2   55[COMRAM] int 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      void 
  5724 ;; Registers used:
  5725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 3F/1
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5731 ;;      Params:         2       0       0       0       0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5734 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5735 ;;Total ram usage:        2 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    9
  5738 ;; This function calls:
  5739 ;;		_disp7s_write_i
  5740 ;; This function is called by:
  5741 ;;		_visMode_disp
  5742 ;;		_configMode_disp
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text37
  5747  00286E                     __ptext37:
  5748                           	opt callstack 0
  5749  00286E                     _disp7s_qtyDisp_writeInt:
  5750                           	opt callstack 19
  5751                           
  5752                           ; BSR set to: 1
  5753                           ;display.c: 283: disp7s_write_i(pulsonic.disp7s.qty, 3, num);
  5754                           
  5755                           ; BSR set to: 1
  5756                           ;incstack = 0
  5757  00286E  0E3C               	movlw	low (_pulsonic+60)
  5758  002870  6E20               	movwf	disp7s_write_i@pDisp,c
  5759  002872  0E01               	movlw	high (_pulsonic+60)
  5760  002874  6E21               	movwf	disp7s_write_i@pDisp+1,c
  5761  002876  0E03               	movlw	3
  5762  002878  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  5763  00287A  C038  F023         	movff	disp7s_qtyDisp_writeInt@num,disp7s_write_i@num
  5764  00287E  C039  F024         	movff	disp7s_qtyDisp_writeInt@num+1,disp7s_write_i@num+1
  5765  002882  ECD6  F00B         	call	_disp7s_write_i	;wreg free
  5766  002886  0012               	return		;funcret
  5767  002888                     __end_of_disp7s_qtyDisp_writeInt:
  5768                           	opt callstack 0
  5769                           
  5770 ;; *************** function _disp7s_modeDisp_writeText_oil *****************
  5771 ;; Defined at:
  5772 ;;		line 164 in file "display.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;		None
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 3F/1
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0
  5787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5789 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5790 ;;Total ram usage:        0 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    5
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_visMode_disp
  5797 ;;		_configMode_disp
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text38
  5802  002908                     __ptext38:
  5803                           	opt callstack 0
  5804  002908                     _disp7s_modeDisp_writeText_oil:
  5805                           	opt callstack 23
  5806                           
  5807                           ;display.c: 166: pulsonic.disp7s.mode[1] =0x5C;
  5808                           
  5809                           ;incstack = 0
  5810  002908  0E5C               	movlw	92
  5811  00290A  0101               	movlb	1	; () banked
  5812  00290C  6F40               	movwf	(_pulsonic+64)& (0+255),b
  5813                           
  5814                           ;display.c: 167: pulsonic.disp7s.mode[0] =0x16;
  5815  00290E  0E16               	movlw	22
  5816  002910  6F3F               	movwf	(_pulsonic+63)& (0+255),b
  5817                           
  5818                           ; BSR set to: 1
  5819  002912  0012               	return		;funcret
  5820  002914                     __end_of_disp7s_modeDisp_writeText_oil:
  5821                           	opt callstack 0
  5822                           
  5823 ;; *************** function _disp7s_modeDisp_writeInt *****************
  5824 ;; Defined at:
  5825 ;;		line 285 in file "display.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  num             2   55[COMRAM] int 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5839 ;;      Params:         2       0       0       0       0       0       0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5842 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5843 ;;Total ram usage:        2 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    9
  5846 ;; This function calls:
  5847 ;;		_disp7s_write_i
  5848 ;; This function is called by:
  5849 ;;		_visMode_disp
  5850 ;;		_configMode_disp
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text39
  5855  002888                     __ptext39:
  5856                           	opt callstack 0
  5857  002888                     _disp7s_modeDisp_writeInt:
  5858                           	opt callstack 19
  5859                           
  5860                           ;display.c: 287: disp7s_write_i(pulsonic.disp7s.mode, 2, num);
  5861                           
  5862                           ; BSR set to: 1
  5863                           ;incstack = 0
  5864  002888  0E3F               	movlw	low (_pulsonic+63)
  5865  00288A  6E20               	movwf	disp7s_write_i@pDisp,c
  5866  00288C  0E01               	movlw	high (_pulsonic+63)
  5867  00288E  6E21               	movwf	disp7s_write_i@pDisp+1,c
  5868  002890  0E02               	movlw	2
  5869  002892  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  5870  002894  C038  F023         	movff	disp7s_modeDisp_writeInt@num,disp7s_write_i@num
  5871  002898  C039  F024         	movff	disp7s_modeDisp_writeInt@num+1,disp7s_write_i@num+1
  5872  00289C  ECD6  F00B         	call	_disp7s_write_i	;wreg free
  5873  0028A0  0012               	return		;funcret
  5874  0028A2                     __end_of_disp7s_modeDisp_writeInt:
  5875                           	opt callstack 0
  5876                           
  5877 ;; *************** function _disp7s_write_i *****************
  5878 ;; Defined at:
  5879 ;;		line 251 in file "display.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  pDisp           2   31[COMRAM] PTR unsigned char 
  5882 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  5883 ;;  NUM_OF_DISP     1   33[COMRAM] char 
  5884 ;;  num             2   34[COMRAM] int 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  buff           10   41[COMRAM] unsigned char [10]
  5887 ;;  K10MULT         2   52[COMRAM] int 
  5888 ;;  i               1   54[COMRAM] char 
  5889 ;;  pi              1   51[COMRAM] char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/1
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5899 ;;      Params:         5       0       0       0       0       0       0       0       0
  5900 ;;      Locals:        14       0       0       0       0       0       0       0       0
  5901 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5902 ;;      Totals:        24       0       0       0       0       0       0       0       0
  5903 ;;Total ram usage:       24 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    8
  5906 ;; This function calls:
  5907 ;;		___wmul
  5908 ;;		_itoa
  5909 ;;		_strlen
  5910 ;; This function is called by:
  5911 ;;		_disp7s_qtyDisp_writeInt
  5912 ;;		_disp7s_modeDisp_writeInt
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text40
  5917  0017AC                     __ptext40:
  5918                           	opt callstack 0
  5919  0017AC                     _disp7s_write_i:
  5920                           	opt callstack 19
  5921                           
  5922                           ;display.c: 253: int16_t K10MULT;;display.c: 254: char buff[10];;display.c: 255: int8_t 
      +                          i;;display.c: 256: int8_t pi;;display.c: 258: K10MULT = 1;
  5923                           
  5924                           ;incstack = 0
  5925  0017AC  0E00               	movlw	0
  5926  0017AE  6E36               	movwf	disp7s_write_i@K10MULT+1,c
  5927  0017B0  0E01               	movlw	1
  5928  0017B2  6E35               	movwf	disp7s_write_i@K10MULT,c
  5929                           
  5930                           ;display.c: 259: i = NUM_OF_DISP;
  5931  0017B4  C022  F037         	movff	disp7s_write_i@NUM_OF_DISP,disp7s_write_i@i
  5932                           
  5933                           ;display.c: 260: while (i--)
  5934  0017B8  D00E               	goto	l4905
  5935  0017BA                     l4903:
  5936                           
  5937                           ;display.c: 261: {K10MULT *=10;}
  5938  0017BA  C035  F00B         	movff	disp7s_write_i@K10MULT,___wmul@multiplier
  5939  0017BE  C036  F00C         	movff	disp7s_write_i@K10MULT+1,___wmul@multiplier+1
  5940  0017C2  0E00               	movlw	0
  5941  0017C4  6E0E               	movwf	___wmul@multiplicand+1,c
  5942  0017C6  0E0A               	movlw	10
  5943  0017C8  6E0D               	movwf	___wmul@multiplicand,c
  5944  0017CA  ECD3  F013         	call	___wmul	;wreg free
  5945  0017CE  C00B  F035         	movff	?___wmul,disp7s_write_i@K10MULT
  5946  0017D2  C00C  F036         	movff	?___wmul+1,disp7s_write_i@K10MULT+1
  5947  0017D6                     l4905:
  5948  0017D6  0637               	decf	disp7s_write_i@i,f,c
  5949  0017D8  2837               	incf	disp7s_write_i@i,w,c
  5950  0017DA  A4D8               	btfss	status,2,c
  5951  0017DC  D7EE               	goto	l4903
  5952                           
  5953                           ;display.c: 263: if (num >= K10MULT)
  5954  0017DE  5035               	movf	disp7s_write_i@K10MULT,w,c
  5955  0017E0  5C23               	subwf	disp7s_write_i@num,w,c
  5956  0017E2  5024               	movf	disp7s_write_i@num+1,w,c
  5957  0017E4  0A80               	xorlw	128
  5958  0017E6  6E25               	movwf	??_disp7s_write_i& (0+255),c
  5959  0017E8  5036               	movf	disp7s_write_i@K10MULT+1,w,c
  5960  0017EA  0A80               	xorlw	128
  5961  0017EC  5825               	subwfb	??_disp7s_write_i& (0+255),w,c
  5962  0017EE  A0D8               	btfss	status,0,c
  5963  0017F0  D006               	goto	l4911
  5964                           
  5965                           ;display.c: 264: {num= K10MULT-1;}
  5966  0017F2  0EFF               	movlw	255
  5967  0017F4  2435               	addwf	disp7s_write_i@K10MULT,w,c
  5968  0017F6  6E23               	movwf	disp7s_write_i@num,c
  5969  0017F8  0EFF               	movlw	255
  5970  0017FA  2036               	addwfc	disp7s_write_i@K10MULT+1,w,c
  5971  0017FC  6E24               	movwf	disp7s_write_i@num+1,c
  5972  0017FE                     l4911:
  5973                           
  5974                           ;display.c: 266: itoa(buff, num, 10);
  5975  0017FE  0E2A               	movlw	low disp7s_write_i@buff
  5976  001800  6E1A               	movwf	itoa@buf,c
  5977  001802  C023  F01B         	movff	disp7s_write_i@num,itoa@val
  5978  001806  C024  F01C         	movff	disp7s_write_i@num+1,itoa@val+1
  5979  00180A  0E00               	movlw	0
  5980  00180C  6E1E               	movwf	itoa@base+1,c
  5981  00180E  0E0A               	movlw	10
  5982  001810  6E1D               	movwf	itoa@base,c
  5983  001812  EC45  F013         	call	_itoa	;wreg free
  5984                           
  5985                           ;display.c: 269: for (i=0; i<NUM_OF_DISP; i++)
  5986  001816  0E00               	movlw	0
  5987  001818  6E37               	movwf	disp7s_write_i@i,c
  5988  00181A  D013               	goto	l4919
  5989  00181C                     l4915:
  5990                           
  5991                           ;display.c: 270: {pDisp[i] = DISP7S_CHARS[OFF];}
  5992  00181C  0E0F               	movlw	low _DISP7S_CHARS
  5993  00181E  6EF6               	movwf	tblptrl,c
  5994  001820                     	if	1	;There is more than 1 active tblptr byte
  5995  001820  0E08               	movlw	high _DISP7S_CHARS
  5996  001822  6EF7               	movwf	tblptrh,c
  5997  001824                     	endif
  5998  001824                     	if	0	;There are less than 3 active tblptr bytes
  5999  001824                     	endif
  6000  001824  C037  F025         	movff	disp7s_write_i@i,??_disp7s_write_i
  6001  001828  6A26               	clrf	(??_disp7s_write_i+1)& (0+255),c
  6002  00182A  BE25               	btfsc	??_disp7s_write_i& (0+255),7,c
  6003  00182C  0626               	decf	(??_disp7s_write_i+1)& (0+255),f,c
  6004  00182E  5025               	movf	??_disp7s_write_i,w,c
  6005  001830  2420               	addwf	disp7s_write_i@pDisp,w,c
  6006  001832  6ED9               	movwf	fsr2l,c
  6007  001834  5026               	movf	??_disp7s_write_i+1,w,c
  6008  001836  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  6009  001838  6EDA               	movwf	fsr2h,c
  6010  00183A  0008               	tblrd		*
  6011  00183C  CFF5 FFDF          	movff	tablat,indf2
  6012  001840  2A37               	incf	disp7s_write_i@i,f,c
  6013  001842                     l4919:
  6014  001842  5037               	movf	disp7s_write_i@i,w,c
  6015  001844  0A80               	xorlw	128
  6016  001846  6E25               	movwf	??_disp7s_write_i& (0+255),c
  6017  001848  5022               	movf	disp7s_write_i@NUM_OF_DISP,w,c
  6018  00184A  0A80               	xorlw	128
  6019  00184C  5C25               	subwf	??_disp7s_write_i& (0+255),w,c
  6020  00184E  A0D8               	btfss	status,0,c
  6021  001850  D7E5               	goto	l4915
  6022                           
  6023                           ;display.c: 272: i=0;
  6024  001852  0E00               	movlw	0
  6025  001854  6E37               	movwf	disp7s_write_i@i,c
  6026                           
  6027                           ;display.c: 273: pi = strlen(buff)-1;
  6028  001856  0E2A               	movlw	low disp7s_write_i@buff
  6029  001858  6E0B               	movwf	strlen@s,c
  6030  00185A  ECF8  F013         	call	_strlen	;wreg free
  6031  00185E  040B               	decf	?_strlen,w,c
  6032  001860  6E34               	movwf	disp7s_write_i@pi,c
  6033                           
  6034                           ;display.c: 274: while (buff[i] != '\0')
  6035  001862  D021               	goto	l4931
  6036  001864                     l4925:
  6037                           
  6038                           ;display.c: 275: {;display.c: 276: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  6039  001864  5037               	movf	disp7s_write_i@i,w,c
  6040  001866  0F2A               	addlw	low disp7s_write_i@buff
  6041  001868  6ED9               	movwf	fsr2l,c
  6042  00186A  6ADA               	clrf	fsr2h,c
  6043  00186C  50DF               	movf	indf2,w,c
  6044  00186E  6E25               	movwf	??_disp7s_write_i& (0+255),c
  6045  001870  0ED0               	movlw	208
  6046  001872  2625               	addwf	??_disp7s_write_i,f,c
  6047  001874  5025               	movf	??_disp7s_write_i,w,c
  6048  001876  0F01               	addlw	low _DISP7S_NUMS
  6049  001878  6E26               	movwf	(??_disp7s_write_i+1)& (0+255),c
  6050  00187A  C026  FFF6         	movff	??_disp7s_write_i+1,tblptrl
  6051  00187E                     	if	1	;There is more than 1 active tblptr byte
  6052  00187E  0E08               	movlw	high __smallconst
  6053  001880  6EF7               	movwf	tblptrh,c
  6054  001882                     	endif
  6055  001882                     	if	0	;tblptru may be non-zero
  6056  001882                     	endif
  6057  001882                     	if	0	;tblptru may be non-zero
  6058  001882                     	endif
  6059  001882  0008               	tblrd		*
  6060  001884  CFF5 F027          	movff	tablat,??_disp7s_write_i+2
  6061  001888  C034  F028         	movff	disp7s_write_i@pi,??_disp7s_write_i+3
  6062  00188C  6A29               	clrf	(??_disp7s_write_i+4)& (0+255),c
  6063  00188E  BE28               	btfsc	(??_disp7s_write_i+3)& (0+255),7,c
  6064  001890  0629               	decf	(??_disp7s_write_i+4)& (0+255),f,c
  6065  001892  5028               	movf	??_disp7s_write_i+3,w,c
  6066  001894  2420               	addwf	disp7s_write_i@pDisp,w,c
  6067  001896  6ED9               	movwf	fsr2l,c
  6068  001898  5029               	movf	??_disp7s_write_i+4,w,c
  6069  00189A  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  6070  00189C  6EDA               	movwf	fsr2h,c
  6071  00189E  5027               	movf	??_disp7s_write_i+2,w,c
  6072  0018A0  12DF               	iorwf	indf2,f,c
  6073  0018A2  0634               	decf	disp7s_write_i@pi,f,c
  6074                           
  6075                           ;display.c: 277: i++;
  6076  0018A4  2A37               	incf	disp7s_write_i@i,f,c
  6077  0018A6                     l4931:
  6078  0018A6  5037               	movf	disp7s_write_i@i,w,c
  6079  0018A8  0F2A               	addlw	low disp7s_write_i@buff
  6080  0018AA  6ED9               	movwf	fsr2l,c
  6081  0018AC  6ADA               	clrf	fsr2h,c
  6082  0018AE  50DF               	movf	indf2,w,c
  6083  0018B0  B4D8               	btfsc	status,2,c
  6084  0018B2  0012               	return	
  6085  0018B4  D7D7               	goto	l4925
  6086  0018B6                     __end_of_disp7s_write_i:
  6087                           	opt callstack 0
  6088                           
  6089 ;; *************** function _strlen *****************
  6090 ;; Defined at:
  6091 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/strlen.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  s               1   10[COMRAM] PTR const unsigned char 
  6094 ;;		 -> disp7s_write_i@buff(10), 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  cp              1   12[COMRAM] PTR const unsigned char 
  6097 ;;		 -> disp7s_write_i@buff(10), 
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  2   10[COMRAM] unsigned int 
  6100 ;; Registers used:
  6101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/1
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6107 ;;      Params:         2       0       0       0       0       0       0       0       0
  6108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6110 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6111 ;;Total ram usage:        3 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:    5
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_disp7s_write_i
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text41
  6122  0027F0                     __ptext41:
  6123                           	opt callstack 0
  6124  0027F0                     _strlen:
  6125                           	opt callstack 21
  6126                           
  6127                           ;incstack = 0
  6128  0027F0  C00B  F00D         	movff	strlen@s,strlen@cp
  6129  0027F4  D001               	goto	l4649
  6130  0027F6                     l4647:
  6131  0027F6  2A0D               	incf	strlen@cp,f,c
  6132  0027F8                     l4649:
  6133  0027F8  500D               	movf	strlen@cp,w,c
  6134  0027FA  6ED9               	movwf	fsr2l,c
  6135  0027FC  6ADA               	clrf	fsr2h,c
  6136  0027FE  50DF               	movf	indf2,w,c
  6137  002800  A4D8               	btfss	status,2,c
  6138  002802  D7F9               	goto	l4647
  6139  002804  500B               	movf	strlen@s,w,c
  6140  002806  5C0D               	subwf	strlen@cp,w,c
  6141  002808  6E0B               	movwf	?_strlen,c
  6142  00280A  6A0C               	clrf	?_strlen+1,c
  6143  00280C  BE0B               	btfsc	?_strlen,7,c
  6144  00280E  060C               	decf	?_strlen+1,f,c
  6145  002810  0012               	return		;funcret
  6146  002812                     __end_of_strlen:
  6147                           	opt callstack 0
  6148                           
  6149 ;; *************** function _configMode_init *****************
  6150 ;; Defined at:
  6151 ;;		line 14 in file "configMode.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  numRegistro     1    wreg     char 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  numRegistro     1   10[COMRAM] char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      void 
  6158 ;; Registers used:
  6159 ;;		wreg, status,2
  6160 ;; Tracked objects:
  6161 ;;		On entry : 3F/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6165 ;;      Params:         0       0       0       0       0       0       0       0       0
  6166 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6168 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6169 ;;Total ram usage:        1 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    5
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_main
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text42
  6180  002914                     __ptext42:
  6181                           	opt callstack 0
  6182  002914                     _configMode_init:
  6183                           	opt callstack 25
  6184                           
  6185                           ;incstack = 0
  6186                           ;configMode_init@numRegistro stored from wreg
  6187  002914  6E0B               	movwf	configMode_init@numRegistro,c
  6188                           
  6189                           ;configMode.c: 16: configMode.numRegistro = numRegistro;
  6190  002916  C00B  F048         	movff	configMode_init@numRegistro,_configMode+1
  6191                           
  6192                           ;configMode.c: 17: configMode.disp7s_accessReq = 1;
  6193  00291A  0E01               	movlw	1
  6194  00291C  6E47               	movwf	_configMode,c
  6195  00291E  0012               	return		;funcret
  6196  002920                     __end_of_configMode_init:
  6197                           	opt callstack 0
  6198                           
  6199 ;; *************** function _autoMode_job *****************
  6200 ;; Defined at:
  6201 ;;		line 30 in file "automode.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;		None
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  cod_ret         1   32[COMRAM] char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      char 
  6208 ;; Registers used:
  6209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 3F/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6215 ;;      Params:         0       0       0       0       0       0       0       0       0
  6216 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6218 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6219 ;;Total ram usage:        1 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    7
  6222 ;; This function calls:
  6223 ;;		_autoMode_kb
  6224 ;;		_mpap_isIdle
  6225 ;;		_mpap_movetoNozzle
  6226 ;;		_mpap_setupToHomming
  6227 ;;		_nozzle_isEnabled
  6228 ;;		_pump_isIdle
  6229 ;;		_pump_setTick
  6230 ;; This function is called by:
  6231 ;;		_main
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text43
  6236  001C80                     __ptext43:
  6237                           	opt callstack 0
  6238  001C80                     _autoMode_job:
  6239                           	opt callstack 23
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;automode.c: 32: int8_t cod_ret = 0;
  6243                           
  6244                           ;incstack = 0
  6245  001C80  0E00               	movlw	0
  6246  001C82  6E21               	movwf	autoMode_job@cod_ret,c
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;automode.c: 34: if (smain.focus.kb == FOCUS_KB_AUTOMODE)
  6250  001C84  05BE               	decf	(_smain+1)& (0+255),w,b	;volatile
  6251  001C86  A4D8               	btfss	status,2,c
  6252  001C88  D003               	goto	l5535
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;automode.c: 35: {;automode.c: 36: cod_ret = autoMode_kb();
  6256  001C8A  ECA6  F00F         	call	_autoMode_kb	;wreg free
  6257  001C8E  6E21               	movwf	autoMode_job@cod_ret,c
  6258  001C90                     l5535:
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;automode.c: 37: };automode.c: 40: if (autoMode.sm0 == 0)
  6262  001C90  504C               	movf	_autoMode+1,w,c
  6263  001C92  A4D8               	btfss	status,2,c
  6264  001C94  D004               	goto	l5541
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;automode.c: 41: {;automode.c: 42: mpap_setupToHomming();
  6268  001C96  EC5B  F014         	call	_mpap_setupToHomming	;wreg free
  6269  001C9A                     l5539:
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;automode.c: 43: autoMode.sm0++;
  6273  001C9A  2A4C               	incf	_autoMode+1,f,c
  6274                           
  6275                           ;automode.c: 44: }
  6276  001C9C  D03E               	goto	l765
  6277  001C9E                     l5541:
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;automode.c: 45: else if (autoMode.sm0 == 1)
  6281  001C9E  044C               	decf	_autoMode+1,w,c
  6282  001CA0  A4D8               	btfss	status,2,c
  6283  001CA2  D006               	goto	l5547
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;automode.c: 46: {;automode.c: 47: if (mpap_isIdle())
  6287  001CA4  EC7D  F014         	call	_mpap_isIdle	;wreg free
  6288  001CA8  0900               	iorlw	0
  6289  001CAA  A4D8               	btfss	status,2,c
  6290  001CAC  D7F6               	goto	l5539
  6291  001CAE  D035               	goto	l765
  6292  001CB0                     l5547:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;automode.c: 53: else if (autoMode.sm0 == 2)
  6296  001CB0  0E02               	movlw	2
  6297  001CB2  184C               	xorwf	_autoMode+1,w,c
  6298  001CB4  A4D8               	btfss	status,2,c
  6299  001CB6  D016               	goto	l5559
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;automode.c: 54: {;automode.c: 55: if (nozzle_isEnabled(autoMode.numNozzle))
  6303  001CB8  504B               	movf	_autoMode,w,c
  6304  001CBA  6E1F               	movwf	nozzle_isEnabled@n,c
  6305  001CBC  6A20               	clrf	nozzle_isEnabled@n+1,c
  6306  001CBE  BE1F               	btfsc	nozzle_isEnabled@n,7,c
  6307  001CC0  0620               	decf	nozzle_isEnabled@n+1,f,c
  6308  001CC2  EC5C  F012         	call	_nozzle_isEnabled	;wreg free
  6309  001CC6  0900               	iorlw	0
  6310  001CC8  B4D8               	btfsc	status,2,c
  6311  001CCA  D004               	goto	l5555
  6312                           
  6313                           ;automode.c: 56: {;automode.c: 57: mpap_movetoNozzle(autoMode.numNozzle);
  6314  001CCC  504B               	movf	_autoMode,w,c
  6315  001CCE  EC5E  F013         	call	_mpap_movetoNozzle
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;automode.c: 58: autoMode.sm0++;
  6319  001CD2  2A4C               	incf	_autoMode+1,f,c
  6320  001CD4                     l5555:
  6321                           
  6322                           ;automode.c: 59: };automode.c: 61: if (++autoMode.numNozzle == 8)
  6323  001CD4  2A4B               	incf	_autoMode,f,c
  6324  001CD6  0E08               	movlw	8
  6325  001CD8  184B               	xorwf	_autoMode,w,c
  6326  001CDA  A4D8               	btfss	status,2,c
  6327  001CDC  D01E               	goto	l765
  6328                           
  6329                           ;automode.c: 62: {autoMode.numNozzle = 0x00;}
  6330  001CDE  0E00               	movlw	0
  6331  001CE0  6E4B               	movwf	_autoMode,c
  6332  001CE2  D01B               	goto	l765
  6333  001CE4                     l5559:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;automode.c: 64: else if (autoMode.sm0 == 3)
  6337  001CE4  0E03               	movlw	3
  6338  001CE6  184C               	xorwf	_autoMode+1,w,c
  6339  001CE8  A4D8               	btfss	status,2,c
  6340  001CEA  D00C               	goto	l5567
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;automode.c: 65: {;automode.c: 66: if (mpap_isIdle())
  6344  001CEC  EC7D  F014         	call	_mpap_isIdle	;wreg free
  6345  001CF0  0900               	iorlw	0
  6346  001CF2  B4D8               	btfsc	status,2,c
  6347  001CF4  D012               	goto	l765
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;automode.c: 67: {;automode.c: 68: pump_setTick(1);
  6351  001CF6  0E00               	movlw	0
  6352  001CF8  6E0C               	movwf	pump_setTick@ticks+1,c
  6353  001CFA  0E01               	movlw	1
  6354  001CFC  6E0B               	movwf	pump_setTick@ticks,c
  6355  001CFE  ECA5  F014         	call	_pump_setTick	;wreg free
  6356  001D02  D7CB               	goto	l5539
  6357  001D04                     l5567:
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;automode.c: 72: else if (autoMode.sm0 == 4)
  6361  001D04  0E04               	movlw	4
  6362  001D06  184C               	xorwf	_autoMode+1,w,c
  6363  001D08  A4D8               	btfss	status,2,c
  6364  001D0A  D007               	goto	l765
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;automode.c: 73: {;automode.c: 74: if (pump_isIdle())
  6368  001D0C  EC75  F014         	call	_pump_isIdle	;wreg free
  6369  001D10  0900               	iorlw	0
  6370  001D12  B4D8               	btfsc	status,2,c
  6371  001D14  D002               	goto	l765
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;automode.c: 75: {;automode.c: 76: autoMode.sm0 = 0x2;
  6375  001D16  0E02               	movlw	2
  6376  001D18  6E4C               	movwf	_autoMode+1,c
  6377  001D1A                     l765:
  6378                           
  6379                           ;automode.c: 77: };automode.c: 78: };automode.c: 79: return cod_ret;
  6380  001D1A  5021               	movf	autoMode_job@cod_ret,w,c
  6381  001D1C  0012               	return		;funcret
  6382  001D1E                     __end_of_autoMode_job:
  6383                           	opt callstack 0
  6384                           
  6385 ;; *************** function _pump_setTick *****************
  6386 ;; Defined at:
  6387 ;;		line 8 in file "pump.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  ticks           2   10[COMRAM] unsigned int 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		None
  6396 ;; Tracked objects:
  6397 ;;		On entry : 3F/0
  6398 ;;		On exit  : 3F/0
  6399 ;;		Unchanged: 3F/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6401 ;;      Params:         2       0       0       0       0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6404 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6405 ;;Total ram usage:        2 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    5
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_autoMode_job
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text44
  6416  00294A                     __ptext44:
  6417                           	opt callstack 0
  6418  00294A                     _pump_setTick:
  6419                           	opt callstack 24
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;pump.c: 10: pump.ticks = ticks;
  6423                           
  6424                           ;incstack = 0
  6425  00294A  C00B  F044         	movff	pump_setTick@ticks,_pump
  6426  00294E  C00C  F045         	movff	pump_setTick@ticks+1,_pump+1
  6427                           
  6428                           ; BSR set to: 0
  6429  002952  0012               	return		;funcret
  6430  002954                     __end_of_pump_setTick:
  6431                           	opt callstack 0
  6432                           
  6433 ;; *************** function _pump_isIdle *****************
  6434 ;; Defined at:
  6435 ;;		line 66 in file "pump.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      char 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 3F/0
  6446 ;;		On exit  : 3F/0
  6447 ;;		Unchanged: 3F/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6452 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    5
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_autoMode_job
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text45
  6464  0028EA                     __ptext45:
  6465                           	opt callstack 0
  6466  0028EA                     _pump_isIdle:
  6467                           	opt callstack 24
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;pump.c: 68: if (pump.ticks == 0)
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;incstack = 0
  6474  0028EA  5044               	movf	_pump,w,c
  6475  0028EC  1045               	iorwf	_pump+1,w,c
  6476  0028EE  A4D8               	btfss	status,2,c
  6477  0028F0  D002               	goto	l5203
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;pump.c: 69: {return 1;}
  6481  0028F2  0E01               	movlw	1
  6482  0028F4  0012               	return	
  6483  0028F6                     l5203:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;pump.c: 70: return 0;
  6487  0028F6  0E00               	movlw	0
  6488                           
  6489                           ; BSR set to: 0
  6490  0028F8  0012               	return		;funcret
  6491  0028FA                     __end_of_pump_isIdle:
  6492                           	opt callstack 0
  6493                           
  6494 ;; *************** function _nozzle_isEnabled *****************
  6495 ;; Defined at:
  6496 ;;		line 7 in file "nozzle.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  n               2   30[COMRAM] int 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1    wreg      char 
  6503 ;; Registers used:
  6504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6505 ;; Tracked objects:
  6506 ;;		On entry : 3F/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6510 ;;      Params:         2       0       0       0       0       0       0       0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6513 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6514 ;;Total ram usage:        2 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    6
  6517 ;; This function calls:
  6518 ;;		___ftge
  6519 ;;		___wmul
  6520 ;; This function is called by:
  6521 ;;		_autoMode_job
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text46
  6526  0024B8                     __ptext46:
  6527                           	opt callstack 0
  6528  0024B8                     _nozzle_isEnabled:
  6529                           	opt callstack 23
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;nozzle.c: 9: if (pulsonic.nozzle[n].Q_mlh > 0.0)
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;incstack = 0
  6536  0024B8  0E00               	movlw	0
  6537  0024BA  6E16               	movwf	___ftge@ff1,c
  6538  0024BC  0E00               	movlw	0
  6539  0024BE  6E17               	movwf	___ftge@ff1+1,c
  6540  0024C0  0E00               	movlw	0
  6541  0024C2  6E18               	movwf	___ftge@ff1+2,c
  6542  0024C4  C01F  F00B         	movff	nozzle_isEnabled@n,___wmul@multiplier
  6543  0024C8  C020  F00C         	movff	nozzle_isEnabled@n+1,___wmul@multiplier+1
  6544  0024CC  0E00               	movlw	0
  6545  0024CE  6E0E               	movwf	___wmul@multiplicand+1,c
  6546  0024D0  0E06               	movlw	6
  6547  0024D2  6E0D               	movwf	___wmul@multiplicand,c
  6548  0024D4  ECD3  F013         	call	___wmul	;wreg free
  6549  0024D8  0E06               	movlw	low (_pulsonic+6)
  6550  0024DA  240B               	addwf	?___wmul,w,c
  6551  0024DC  6ED9               	movwf	fsr2l,c
  6552  0024DE  0E01               	movlw	high (_pulsonic+6)
  6553  0024E0  200C               	addwfc	?___wmul+1,w,c
  6554  0024E2  6EDA               	movwf	fsr2h,c
  6555  0024E4  CFDE F019          	movff	postinc2,___ftge@ff2
  6556  0024E8  CFDE F01A          	movff	postinc2,___ftge@ff2+1
  6557  0024EC  CFDD F01B          	movff	postdec2,___ftge@ff2+2
  6558  0024F0  EC93  F010         	call	___ftge	;wreg free
  6559  0024F4  B0D8               	btfsc	status,0,c
  6560  0024F6  D002               	goto	l5277
  6561                           
  6562                           ;nozzle.c: 10: return 1;
  6563  0024F8  0E01               	movlw	1
  6564  0024FA  0012               	return	
  6565  0024FC                     l5277:
  6566                           
  6567                           ;nozzle.c: 11: return 0;
  6568  0024FC  0E00               	movlw	0
  6569  0024FE  0012               	return		;funcret
  6570  002500                     __end_of_nozzle_isEnabled:
  6571                           	opt callstack 0
  6572                           
  6573 ;; *************** function _mpap_setupToHomming *****************
  6574 ;; Defined at:
  6575 ;;		line 64 in file "mpap.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0, cstack
  6584 ;; Tracked objects:
  6585 ;;		On entry : 3F/0
  6586 ;;		On exit  : 3F/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6589 ;;      Params:         0       0       0       0       0       0       0       0       0
  6590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6592 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6593 ;;Total ram usage:        0 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    6
  6596 ;; This function calls:
  6597 ;;		_mpap_setupToTurn
  6598 ;; This function is called by:
  6599 ;;		_autoMode_job
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text47
  6604  0028B6                     __ptext47:
  6605                           	opt callstack 0
  6606  0028B6                     _mpap_setupToHomming:
  6607                           	opt callstack 23
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;mpap.c: 67: mpap_setupToTurn( -1 *( (18*200) +20));
  6611                           
  6612                           ;incstack = 0
  6613  0028B6  0EF1               	movlw	241
  6614  0028B8  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  6615  0028BA  0EDC               	movlw	220
  6616  0028BC  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  6617  0028BE  EC76  F013         	call	_mpap_setupToTurn	;wreg free
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;mpap.c: 69: mpap.mode = MPAP_HOMMING_MODE;
  6621  0028C2  0E02               	movlw	2
  6622  0028C4  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  6623                           
  6624                           ; BSR set to: 0
  6625  0028C6  0012               	return		;funcret
  6626  0028C8                     __end_of_mpap_setupToHomming:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _mpap_movetoNozzle *****************
  6630 ;; Defined at:
  6631 ;;		line 213 in file "mpap.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  numNozzle       1    wreg     char 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  numNozzle       1   20[COMRAM] char 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 3F/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0
  6646 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6648 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6649 ;;Total ram usage:        1 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    6
  6652 ;; This function calls:
  6653 ;;		___wmul
  6654 ;;		_mpap_setupToTurn
  6655 ;; This function is called by:
  6656 ;;		_autoMode_job
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text48
  6661  0026BC                     __ptext48:
  6662                           	opt callstack 0
  6663  0026BC                     _mpap_movetoNozzle:
  6664                           	opt callstack 23
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;incstack = 0
  6668                           ;mpap_movetoNozzle@numNozzle stored from wreg
  6669  0026BC  6E15               	movwf	mpap_movetoNozzle@numNozzle,c
  6670                           
  6671                           ;mpap.c: 216: mpap_setupToTurn( (numNozzle*200) - mpap.numSteps_current);
  6672  0026BE  5015               	movf	mpap_movetoNozzle@numNozzle,w,c
  6673  0026C0  6E0B               	movwf	___wmul@multiplier,c
  6674  0026C2  6A0C               	clrf	___wmul@multiplier+1,c
  6675  0026C4  BE0B               	btfsc	___wmul@multiplier,7,c
  6676  0026C6  060C               	decf	___wmul@multiplier+1,f,c
  6677  0026C8  0E00               	movlw	0
  6678  0026CA  6E0E               	movwf	___wmul@multiplicand+1,c
  6679  0026CC  0EC8               	movlw	200
  6680  0026CE  6E0D               	movwf	___wmul@multiplicand,c
  6681  0026D0  ECD3  F013         	call	___wmul	;wreg free
  6682  0026D4  0100               	movlb	0	; () banked
  6683  0026D6  51B0               	movf	_mpap& (0+255),w,b	;volatile
  6684  0026D8  5C0B               	subwf	?___wmul,w,c
  6685  0026DA  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  6686  0026DC  51B1               	movf	(_mpap+1)& (0+255),w,b	;volatile
  6687  0026DE  580C               	subwfb	?___wmul+1,w,c
  6688  0026E0  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  6689  0026E2  EC76  F013         	call	_mpap_setupToTurn	;wreg free
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;mpap.c: 218: mpap.mode = MPAP_NORMAL_MODE;
  6693  0026E6  0E03               	movlw	3
  6694  0026E8  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  6695                           
  6696                           ; BSR set to: 0
  6697  0026EA  0012               	return		;funcret
  6698  0026EC                     __end_of_mpap_movetoNozzle:
  6699                           	opt callstack 0
  6700                           
  6701 ;; *************** function _mpap_setupToTurn *****************
  6702 ;; Defined at:
  6703 ;;		line 55 in file "mpap.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  numSteps_tom    2   16[COMRAM] int 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  1    wreg      void 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 3F/0
  6714 ;;		On exit  : 3F/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6717 ;;      Params:         2       0       0       0       0       0       0       0       0
  6718 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6720 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6721 ;;Total ram usage:        4 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    5
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_mpap_setupToHomming
  6728 ;;		_mpap_movetoNozzle
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text49
  6733  0026EC                     __ptext49:
  6734                           	opt callstack 0
  6735  0026EC                     _mpap_setupToTurn:
  6736                           	opt callstack 23
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;mpap.c: 57: if (numSteps_tomove !=0)
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;incstack = 0
  6743  0026EC  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  6744  0026EE  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  6745  0026F0  B4D8               	btfsc	status,2,c
  6746  0026F2  0012               	return	
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;mpap.c: 58: {;mpap.c: 59: mpap.KI = (numSteps_tomove<0)? -1: 1;
  6750  0026F4  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  6751  0026F6  D005               	goto	l442
  6752                           
  6753                           ; BSR set to: 0
  6754  0026F8  0E00               	movlw	0
  6755  0026FA  6E14               	movwf	_mpap_setupToTurn$474+1,c
  6756  0026FC  0E01               	movlw	1
  6757  0026FE  6E13               	movwf	_mpap_setupToTurn$474,c
  6758  002700  D002               	goto	l444
  6759  002702                     l442:
  6760                           
  6761                           ; BSR set to: 0
  6762  002702  6813               	setf	_mpap_setupToTurn$474,c
  6763  002704  6814               	setf	_mpap_setupToTurn$474+1,c
  6764  002706                     l444:
  6765                           
  6766                           ; BSR set to: 0
  6767  002706  C013  F0B6         	movff	_mpap_setupToTurn$474,_mpap+6	;volatile
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;mpap.c: 60: mpap.counter_steps = 0;
  6771  00270A  0E00               	movlw	0
  6772  00270C  6FB3               	movwf	(_mpap+3)& (0+255),b	;volatile
  6773  00270E  0E00               	movlw	0
  6774  002710  6FB2               	movwf	(_mpap+2)& (0+255),b	;volatile
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;mpap.c: 61: mpap.numSteps_tomove = numSteps_tomove;
  6778  002712  C011  F0B4         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  6779  002716  C012  F0B5         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  6780                           
  6781                           ; BSR set to: 0
  6782  00271A  0012               	return		;funcret
  6783  00271C                     __end_of_mpap_setupToTurn:
  6784                           	opt callstack 0
  6785                           
  6786 ;; *************** function _mpap_isIdle *****************
  6787 ;; Defined at:
  6788 ;;		line 220 in file "mpap.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      char 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2
  6797 ;; Tracked objects:
  6798 ;;		On entry : 3F/0
  6799 ;;		On exit  : 3F/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    5
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_autoMode_job
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text50
  6817  0028FA                     __ptext50:
  6818                           	opt callstack 0
  6819  0028FA                     _mpap_isIdle:
  6820                           	opt callstack 24
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;mpap.c: 222: if (mpap.mode == MPAP_IDLE_MODE)
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;incstack = 0
  6827  0028FA  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  6828  0028FC  A4D8               	btfss	status,2,c
  6829  0028FE  D002               	goto	l5191
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;mpap.c: 223: {return 1;}
  6833  002900  0E01               	movlw	1
  6834  002902  0012               	return	
  6835  002904                     l5191:
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;mpap.c: 224: return 0;
  6839  002904  0E00               	movlw	0
  6840                           
  6841                           ; BSR set to: 0
  6842  002906  0012               	return		;funcret
  6843  002908                     __end_of_mpap_isIdle:
  6844                           	opt callstack 0
  6845                           
  6846 ;; *************** function _autoMode_kb *****************
  6847 ;; Defined at:
  6848 ;;		line 84 in file "automode.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  cod_ret         1   11[COMRAM] char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      char 
  6855 ;; Registers used:
  6856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6857 ;; Tracked objects:
  6858 ;;		On entry : 3F/0
  6859 ;;		On exit  : 3F/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0
  6863 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6865 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6866 ;;Total ram usage:        1 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    6
  6869 ;; This function calls:
  6870 ;;		_ikb_key_is_ready2read
  6871 ;;		_ikb_key_was_read
  6872 ;;		_visMode_init
  6873 ;; This function is called by:
  6874 ;;		_autoMode_job
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text51
  6879  001F4C                     __ptext51:
  6880                           	opt callstack 0
  6881  001F4C                     _autoMode_kb:
  6882                           	opt callstack 23
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;automode.c: 86: int8_t cod_ret = 0;
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;incstack = 0
  6889  001F4C  0E00               	movlw	0
  6890  001F4E  6E0C               	movwf	autoMode_kb@cod_ret,c
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;automode.c: 88: if (ikb_key_is_ready2read(0))
  6894  001F50  0E00               	movlw	0
  6895  001F52  EC29  F014         	call	_ikb_key_is_ready2read
  6896  001F56  0900               	iorlw	0
  6897  001F58  B4D8               	btfsc	status,2,c
  6898  001F5A  D008               	goto	l5249
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;automode.c: 89: {;automode.c: 90: ikb_key_was_read(0);
  6902  001F5C  0E00               	movlw	0
  6903  001F5E  EC51  F014         	call	_ikb_key_was_read
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;automode.c: 92: visMode_init(0x00);
  6907  001F62  0E00               	movlw	0
  6908  001F64  EC90  F014         	call	_visMode_init
  6909                           
  6910                           ;automode.c: 93: cod_ret = 1;
  6911  001F68  0E01               	movlw	1
  6912  001F6A  6E0C               	movwf	autoMode_kb@cod_ret,c
  6913  001F6C                     l5249:
  6914                           
  6915                           ;automode.c: 94: };automode.c: 95: if (ikb_key_is_ready2read(1))
  6916  001F6C  0E01               	movlw	1
  6917  001F6E  EC29  F014         	call	_ikb_key_is_ready2read
  6918  001F72  0900               	iorlw	0
  6919  001F74  B4D8               	btfsc	status,2,c
  6920  001F76  D008               	goto	l5257
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;automode.c: 96: {;automode.c: 97: ikb_key_was_read(1);
  6924  001F78  0E01               	movlw	1
  6925  001F7A  EC51  F014         	call	_ikb_key_was_read
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;automode.c: 99: visMode_init((8+1)-1);
  6929  001F7E  0E08               	movlw	8
  6930  001F80  EC90  F014         	call	_visMode_init
  6931                           
  6932                           ;automode.c: 100: cod_ret = 1;
  6933  001F84  0E01               	movlw	1
  6934  001F86  6E0C               	movwf	autoMode_kb@cod_ret,c
  6935  001F88                     l5257:
  6936                           
  6937                           ;automode.c: 101: };automode.c: 102: if (ikb_key_is_ready2read(2))
  6938  001F88  0E02               	movlw	2
  6939  001F8A  EC29  F014         	call	_ikb_key_is_ready2read
  6940  001F8E  0900               	iorlw	0
  6941  001F90  B4D8               	btfsc	status,2,c
  6942  001F92  D003               	goto	l783
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;automode.c: 103: {;automode.c: 104: ikb_key_was_read(2);
  6946  001F94  0E02               	movlw	2
  6947  001F96  EC51  F014         	call	_ikb_key_was_read
  6948  001F9A                     l783:
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;automode.c: 106: };automode.c: 107: if (ikb_key_is_ready2read(3))
  6952  001F9A  0E03               	movlw	3
  6953  001F9C  EC29  F014         	call	_ikb_key_is_ready2read
  6954  001FA0  0900               	iorlw	0
  6955  001FA2  B4D8               	btfsc	status,2,c
  6956  001FA4  D003               	goto	l784
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;automode.c: 108: {;automode.c: 109: ikb_key_was_read(3);
  6960  001FA6  0E03               	movlw	3
  6961  001FA8  EC51  F014         	call	_ikb_key_was_read
  6962  001FAC                     l784:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;automode.c: 111: };automode.c: 112: if (ikb_key_is_ready2read(4))
  6966  001FAC  0E04               	movlw	4
  6967  001FAE  EC29  F014         	call	_ikb_key_is_ready2read
  6968  001FB2  0900               	iorlw	0
  6969  001FB4  B4D8               	btfsc	status,2,c
  6970  001FB6  D005               	goto	l5267
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;automode.c: 113: {;automode.c: 114: cod_ret = 2;
  6974  001FB8  0E02               	movlw	2
  6975  001FBA  6E0C               	movwf	autoMode_kb@cod_ret,c
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;automode.c: 115: ikb_key_was_read(4);
  6979  001FBC  0E04               	movlw	4
  6980  001FBE  EC51  F014         	call	_ikb_key_was_read
  6981  001FC2                     l5267:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;automode.c: 117: };automode.c: 118: return cod_ret;
  6985  001FC2  500C               	movf	autoMode_kb@cod_ret,w,c
  6986                           
  6987                           ; BSR set to: 0
  6988  001FC4  0012               	return		;funcret
  6989  001FC6                     __end_of_autoMode_kb:
  6990                           	opt callstack 0
  6991                           
  6992 ;; *************** function _visMode_init *****************
  6993 ;; Defined at:
  6994 ;;		line 14 in file "visualizerMode.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;  numVista        1    wreg     char 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  numVista        1   10[COMRAM] char 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  1    wreg      void 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2
  7003 ;; Tracked objects:
  7004 ;;		On entry : 3F/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7008 ;;      Params:         0       0       0       0       0       0       0       0       0
  7009 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7011 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7012 ;;Total ram usage:        1 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:    5
  7015 ;; This function calls:
  7016 ;;		Nothing
  7017 ;; This function is called by:
  7018 ;;		_autoMode_kb
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text52
  7023  002920                     __ptext52:
  7024                           	opt callstack 0
  7025  002920                     _visMode_init:
  7026                           	opt callstack 23
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;incstack = 0
  7030                           ;visMode_init@numVista stored from wreg
  7031  002920  6E0B               	movwf	visMode_init@numVista,c
  7032                           
  7033                           ;visualizerMode.c: 16: visMode.numVista = numVista;
  7034  002922  C00B  F04A         	movff	visMode_init@numVista,_visMode+1
  7035                           
  7036                           ;visualizerMode.c: 17: visMode.disp7s_accessReq = 1;
  7037  002926  0E01               	movlw	1
  7038  002928  6E49               	movwf	_visMode,c
  7039  00292A  0012               	return		;funcret
  7040  00292C                     __end_of_visMode_init:
  7041                           	opt callstack 0
  7042                           
  7043 ;; *************** function _ikb_key_was_read *****************
  7044 ;; Defined at:
  7045 ;;		line 434 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  k               1    wreg     unsigned char 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  k               1   10[COMRAM] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 3F/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7059 ;;      Params:         0       0       0       0       0       0       0       0       0
  7060 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7062 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7063 ;;Total ram usage:        1 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    5
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_autoMode_kb
  7070 ;;		_visMode_kb
  7071 ;;		_configMode_kb
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text53
  7076  0028A2                     __ptext53:
  7077                           	opt callstack 0
  7078  0028A2                     _ikb_key_was_read:
  7079                           	opt callstack 23
  7080                           
  7081                           ;incstack = 0
  7082                           ;ikb_key_was_read@k stored from wreg
  7083  0028A2  6E0B               	movwf	ikb_key_was_read@k,c
  7084                           
  7085                           ;ikb.c: 436: key[k].bf.ReadyToRead = 0;
  7086  0028A4  500B               	movf	ikb_key_was_read@k,w,c
  7087  0028A6  0D10               	mullw	16
  7088  0028A8  50F3               	movf	prodl,w,c
  7089  0028AA  0F6A               	addlw	low (_key+10)
  7090  0028AC  6ED9               	movwf	fsr2l,c
  7091  0028AE  6ADA               	clrf	fsr2h,c
  7092  0028B0  0100               	movlb	0	; () banked
  7093  0028B2  9CDF               	bcf	indf2,6,c
  7094                           
  7095                           ; BSR set to: 0
  7096  0028B4  0012               	return		;funcret
  7097  0028B6                     __end_of_ikb_key_was_read:
  7098                           	opt callstack 0
  7099                           
  7100 ;; *************** function _ikb_key_is_ready2read *****************
  7101 ;; Defined at:
  7102 ;;		line 426 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  k               1    wreg     unsigned char 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  k               1   10[COMRAM] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      unsigned char 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 3F/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7116 ;;      Params:         0       0       0       0       0       0       0       0       0
  7117 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7119 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7120 ;;Total ram usage:        1 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    5
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_autoMode_kb
  7127 ;;		_visMode_kb
  7128 ;;		_configMode_kb
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text54
  7133  002852                     __ptext54:
  7134                           	opt callstack 0
  7135  002852                     _ikb_key_is_ready2read:
  7136                           	opt callstack 23
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;incstack = 0
  7140                           ;ikb_key_is_ready2read@k stored from wreg
  7141  002852  6E0B               	movwf	ikb_key_is_ready2read@k,c
  7142                           
  7143                           ;ikb.c: 428: return key[k].bf.ReadyToRead;
  7144  002854  500B               	movf	ikb_key_is_ready2read@k,w,c
  7145  002856  0D10               	mullw	16
  7146  002858  50F3               	movf	prodl,w,c
  7147  00285A  0F6A               	addlw	low (_key+10)
  7148  00285C  6ED9               	movwf	fsr2l,c
  7149  00285E  6ADA               	clrf	fsr2h,c
  7150  002860  0100               	movlb	0	; () banked
  7151  002862  ACDF               	btfss	indf2,6,c
  7152  002864  D002               	goto	u5630
  7153  002866  0E01               	movlw	1
  7154  002868  0012               	return	
  7155  00286A                     u5630:
  7156  00286A  0E00               	movlw	0
  7157                           
  7158                           ; BSR set to: 0
  7159  00286C  0012               	return		;funcret
  7160  00286E                     __end_of_ikb_key_is_ready2read:
  7161                           	opt callstack 0
  7162                           
  7163 ;; *************** function _autoMode_init *****************
  7164 ;; Defined at:
  7165 ;;		line 16 in file "automode.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  init            1    wreg     char 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  init            1   59[COMRAM] char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 3F/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7179 ;;      Params:         0       0       0       0       0       0       0       0       0
  7180 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7182 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7183 ;;Total ram usage:        1 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:   10
  7186 ;; This function calls:
  7187 ;;		_disp7s_modeDisp_off
  7188 ;;		_disp7s_qtyDisp_writeFloat
  7189 ;;		_pulsonic_getTotalSum_mlh
  7190 ;; This function is called by:
  7191 ;;		_main
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text55
  7196  00271C                     __ptext55:
  7197                           	opt callstack 0
  7198  00271C                     _autoMode_init:
  7199                           	opt callstack 20
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;incstack = 0
  7203                           ;autoMode_init@init stored from wreg
  7204  00271C  6E3C               	movwf	autoMode_init@init,c
  7205                           
  7206                           ;automode.c: 18: if (disp_owner == DISPOWNER_AUTOMODE)
  7207  00271E  5051               	movf	_disp_owner,w,c
  7208  002720  A4D8               	btfss	status,2,c
  7209  002722  D00C               	goto	l5499
  7210                           
  7211                           ;automode.c: 19: {;automode.c: 20: disp7s_modeDisp_off();
  7212  002724  EC64  F014         	call	_disp7s_modeDisp_off	;wreg free
  7213                           
  7214                           ;automode.c: 21: disp7s_qtyDisp_writeFloat( pulsonic_getTotalSum_mlh() );
  7215  002728  EC67  F00F         	call	_pulsonic_getTotalSum_mlh	;wreg free
  7216  00272C  C01F  F141         	movff	?_pulsonic_getTotalSum_mlh,disp7s_qtyDisp_writeFloat@num
  7217  002730  C020  F142         	movff	?_pulsonic_getTotalSum_mlh+1,disp7s_qtyDisp_writeFloat@num+1
  7218  002734  C021  F143         	movff	?_pulsonic_getTotalSum_mlh+2,disp7s_qtyDisp_writeFloat@num+2
  7219  002738  EC1A  F014         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  7220  00273C                     l5499:
  7221                           
  7222                           ;automode.c: 22: };automode.c: 23: if (init == AUTOMODE_INIT_RESTART)
  7223  00273C  503C               	movf	autoMode_init@init,w,c
  7224  00273E  A4D8               	btfss	status,2,c
  7225  002740  0012               	return	
  7226                           
  7227                           ;automode.c: 24: {;automode.c: 25: autoMode.numNozzle = 0x0;
  7228  002742  0E00               	movlw	0
  7229  002744  6E4B               	movwf	_autoMode,c
  7230                           
  7231                           ;automode.c: 26: autoMode.sm0 = 0x0;
  7232  002746  0E00               	movlw	0
  7233  002748  6E4C               	movwf	_autoMode+1,c
  7234  00274A  0012               	return		;funcret
  7235  00274C                     __end_of_autoMode_init:
  7236                           	opt callstack 0
  7237                           
  7238 ;; *************** function _pulsonic_getTotalSum_mlh *****************
  7239 ;; Defined at:
  7240 ;;		line 24 in file "pulsonic.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  acc             3   33[COMRAM] void 
  7245 ;;  i               2   36[COMRAM] int 
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  3   30[COMRAM] int 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7255 ;;      Params:         3       0       0       0       0       0       0       0       0
  7256 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7258 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7259 ;;Total ram usage:        8 bytes
  7260 ;; Hardware stack levels used:    1
  7261 ;; Hardware stack levels required when called:    7
  7262 ;; This function calls:
  7263 ;;		___ftadd
  7264 ;;		___wmul
  7265 ;; This function is called by:
  7266 ;;		_autoMode_init
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text56
  7271  001ECE                     __ptext56:
  7272                           	opt callstack 0
  7273  001ECE                     _pulsonic_getTotalSum_mlh:
  7274                           	opt callstack 22
  7275                           
  7276                           ;pulsonic.c: 26: int i;;pulsonic.c: 27: double acc = 0;
  7277                           
  7278                           ;incstack = 0
  7279  001ECE  0E00               	movlw	0
  7280  001ED0  6E22               	movwf	pulsonic_getTotalSum_mlh@acc,c
  7281  001ED2  0E00               	movlw	0
  7282  001ED4  6E23               	movwf	pulsonic_getTotalSum_mlh@acc+1,c
  7283  001ED6  0E00               	movlw	0
  7284  001ED8  6E24               	movwf	pulsonic_getTotalSum_mlh@acc+2,c
  7285                           
  7286                           ;pulsonic.c: 29: for (i=0; i<8; i++)
  7287  001EDA  0E00               	movlw	0
  7288  001EDC  6E26               	movwf	pulsonic_getTotalSum_mlh@i+1,c
  7289  001EDE  0E00               	movlw	0
  7290  001EE0  6E25               	movwf	pulsonic_getTotalSum_mlh@i,c
  7291  001EE2                     l5171:
  7292                           
  7293                           ;pulsonic.c: 30: {;pulsonic.c: 31: acc += pulsonic.nozzle[i].Q_mlh;
  7294  001EE2  C022  F013         	movff	pulsonic_getTotalSum_mlh@acc,___ftadd@f1
  7295  001EE6  C023  F014         	movff	pulsonic_getTotalSum_mlh@acc+1,___ftadd@f1+1
  7296  001EEA  C024  F015         	movff	pulsonic_getTotalSum_mlh@acc+2,___ftadd@f1+2
  7297  001EEE  C025  F00B         	movff	pulsonic_getTotalSum_mlh@i,___wmul@multiplier
  7298  001EF2  C026  F00C         	movff	pulsonic_getTotalSum_mlh@i+1,___wmul@multiplier+1
  7299  001EF6  0E00               	movlw	0
  7300  001EF8  6E0E               	movwf	___wmul@multiplicand+1,c
  7301  001EFA  0E06               	movlw	6
  7302  001EFC  6E0D               	movwf	___wmul@multiplicand,c
  7303  001EFE  ECD3  F013         	call	___wmul	;wreg free
  7304  001F02  0E06               	movlw	low (_pulsonic+6)
  7305  001F04  240B               	addwf	?___wmul,w,c
  7306  001F06  6ED9               	movwf	fsr2l,c
  7307  001F08  0E01               	movlw	high (_pulsonic+6)
  7308  001F0A  200C               	addwfc	?___wmul+1,w,c
  7309  001F0C  6EDA               	movwf	fsr2h,c
  7310  001F0E  CFDE F016          	movff	postinc2,___ftadd@f2
  7311  001F12  CFDE F017          	movff	postinc2,___ftadd@f2+1
  7312  001F16  CFDD F018          	movff	postdec2,___ftadd@f2+2
  7313  001F1A  EC7F  F009         	call	___ftadd	;wreg free
  7314  001F1E  C013  F022         	movff	?___ftadd,pulsonic_getTotalSum_mlh@acc
  7315  001F22  C014  F023         	movff	?___ftadd+1,pulsonic_getTotalSum_mlh@acc+1
  7316  001F26  C015  F024         	movff	?___ftadd+2,pulsonic_getTotalSum_mlh@acc+2
  7317  001F2A  4A25               	infsnz	pulsonic_getTotalSum_mlh@i,f,c
  7318  001F2C  2A26               	incf	pulsonic_getTotalSum_mlh@i+1,f,c
  7319  001F2E  BE26               	btfsc	pulsonic_getTotalSum_mlh@i+1,7,c
  7320  001F30  D7D8               	goto	l5171
  7321  001F32  5026               	movf	pulsonic_getTotalSum_mlh@i+1,w,c
  7322  001F34  E104               	bnz	u6210
  7323  001F36  0E08               	movlw	8
  7324  001F38  5C25               	subwf	pulsonic_getTotalSum_mlh@i,w,c
  7325  001F3A  A0D8               	btfss	status,0,c
  7326  001F3C  D7D2               	goto	l5171
  7327  001F3E                     u6210:
  7328                           
  7329                           ;pulsonic.c: 32: };pulsonic.c: 33: return acc;
  7330  001F3E  C022  F01F         	movff	pulsonic_getTotalSum_mlh@acc,?_pulsonic_getTotalSum_mlh
  7331  001F42  C023  F020         	movff	pulsonic_getTotalSum_mlh@acc+1,?_pulsonic_getTotalSum_mlh+1
  7332  001F46  C024  F021         	movff	pulsonic_getTotalSum_mlh@acc+2,?_pulsonic_getTotalSum_mlh+2
  7333  001F4A  0012               	return		;funcret
  7334  001F4C                     __end_of_pulsonic_getTotalSum_mlh:
  7335                           	opt callstack 0
  7336                           
  7337 ;; *************** function ___wmul *****************
  7338 ;; Defined at:
  7339 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  multiplier      2   10[COMRAM] unsigned int 
  7342 ;;  multiplicand    2   12[COMRAM] unsigned int 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  product         2   14[COMRAM] unsigned int 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  2   10[COMRAM] unsigned int 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, status,0, prodl, prodh
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/1
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7354 ;;      Params:         4       0       0       0       0       0       0       0       0
  7355 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7357 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7358 ;;Total ram usage:        6 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    5
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_mpap_movetoNozzle
  7365 ;;		_disp7s_write_i
  7366 ;;		_nozzle_isEnabled
  7367 ;;		_pulsonic_getTotalSum_mlh
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text57
  7372  0027A6                     __ptext57:
  7373                           	opt callstack 0
  7374  0027A6                     ___wmul:
  7375                           	opt callstack 21
  7376                           
  7377                           ;incstack = 0
  7378  0027A6  500B               	movf	___wmul@multiplier,w,c
  7379  0027A8  020D               	mulwf	___wmul@multiplicand,c
  7380  0027AA  CFF3 F00F          	movff	prodl,___wmul@product
  7381  0027AE  CFF4 F010          	movff	prodh,___wmul@product+1
  7382  0027B2  500B               	movf	___wmul@multiplier,w,c
  7383  0027B4  020E               	mulwf	___wmul@multiplicand+1,c
  7384  0027B6  50F3               	movf	prodl,w,c
  7385  0027B8  2610               	addwf	___wmul@product+1,f,c
  7386  0027BA  500C               	movf	___wmul@multiplier+1,w,c
  7387  0027BC  020D               	mulwf	___wmul@multiplicand,c
  7388  0027BE  50F3               	movf	prodl,w,c
  7389  0027C0  2610               	addwf	___wmul@product+1,f,c
  7390  0027C2  C00F  F00B         	movff	___wmul@product,?___wmul
  7391  0027C6  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  7392  0027CA  0012               	return		;funcret
  7393  0027CC                     __end_of___wmul:
  7394                           	opt callstack 0
  7395                           
  7396 ;; *************** function _disp7s_qtyDisp_writeFloat *****************
  7397 ;; Defined at:
  7398 ;;		line 242 in file "display.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;  num             3    0[BANK1 ] float 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 3F/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7412 ;;      Params:         0       0       3       0       0       0       0       0       0
  7413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7415 ;;      Totals:         0       0       3       0       0       0       0       0       0
  7416 ;;Total ram usage:        3 bytes
  7417 ;; Hardware stack levels used:    1
  7418 ;; Hardware stack levels required when called:    9
  7419 ;; This function calls:
  7420 ;;		_disp7s_write_f
  7421 ;; This function is called by:
  7422 ;;		_autoMode_init
  7423 ;;		_visMode_disp
  7424 ;;		_configMode_disp
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text58
  7429  002834                     __ptext58:
  7430                           	opt callstack 0
  7431  002834                     _disp7s_qtyDisp_writeFloat:
  7432                           	opt callstack 19
  7433                           
  7434                           ;display.c: 244: disp7s_write_f(pulsonic.disp7s.qty, 3, num);
  7435                           
  7436                           ;incstack = 0
  7437  002834  0E3C               	movlw	low (_pulsonic+60)
  7438  002836  6E31               	movwf	disp7s_write_f@pDisp,c
  7439  002838  0E01               	movlw	high (_pulsonic+60)
  7440  00283A  6E32               	movwf	disp7s_write_f@pDisp+1,c
  7441  00283C  0E03               	movlw	3
  7442  00283E  6E33               	movwf	disp7s_write_f@NUM_OF_DISP,c
  7443  002840  C141  F034         	movff	disp7s_qtyDisp_writeFloat@num,disp7s_write_f@num
  7444  002844  C142  F035         	movff	disp7s_qtyDisp_writeFloat@num+1,disp7s_write_f@num+1
  7445  002848  C143  F036         	movff	disp7s_qtyDisp_writeFloat@num+2,disp7s_write_f@num+2
  7446  00284C  EC71  F008         	call	_disp7s_write_f	;wreg free
  7447                           
  7448                           ; BSR set to: 0
  7449  002850  0012               	return		;funcret
  7450  002852                     __end_of_disp7s_qtyDisp_writeFloat:
  7451                           	opt callstack 0
  7452                           
  7453 ;; *************** function _disp7s_write_f *****************
  7454 ;; Defined at:
  7455 ;;		line 187 in file "display.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  pDisp           2   48[COMRAM] PTR unsigned char 
  7458 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  7459 ;;  NUM_OF_DISP     1   50[COMRAM] char 
  7460 ;;  num             3   51[COMRAM] char 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;  buff           10    0[BANK0 ] unsigned char [10]
  7463 ;;  K10MULT         3   13[BANK0 ] unsigned char [10]
  7464 ;;  I               2   10[BANK0 ] int 
  7465 ;;  i               1   16[BANK0 ] char 
  7466 ;;  pi              1   12[BANK0 ] char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      void 
  7469 ;; Registers used:
  7470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 3F/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7476 ;;      Params:         6       0       0       0       0       0       0       0       0
  7477 ;;      Locals:         0      17       0       0       0       0       0       0       0
  7478 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7479 ;;      Totals:        11      17       0       0       0       0       0       0       0
  7480 ;;Total ram usage:       28 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    8
  7483 ;; This function calls:
  7484 ;;		___ftadd
  7485 ;;		___ftge
  7486 ;;		___ftmul
  7487 ;;		___fttol
  7488 ;;		_disp7s_off
  7489 ;;		_itoa
  7490 ;; This function is called by:
  7491 ;;		_disp7s_qtyDisp_writeFloat
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text59
  7496  0010E2                     __ptext59:
  7497                           	opt callstack 0
  7498  0010E2                     _disp7s_write_f:
  7499                           	opt callstack 19
  7500                           
  7501                           ;display.c: 189: double K10MULT;;display.c: 190: int16_t I;;display.c: 191: char buff[10
      +                          ];;display.c: 192: int8_t i;;display.c: 193: int8_t pi;;display.c: 195: K10MULT = 1;
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;incstack = 0
  7505  0010E2  0E00               	movlw	0
  7506  0010E4  0100               	movlb	0	; () banked
  7507  0010E6  6FFB               	movwf	disp7s_write_f@K10MULT& (0+255),b
  7508  0010E8  0E80               	movlw	128
  7509  0010EA  6FFC               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  7510  0010EC  0E3F               	movlw	63
  7511  0010EE  6FFD               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;display.c: 196: i = NUM_OF_DISP;
  7515  0010F0  C033  F0FE         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_write_f@i
  7516                           
  7517                           ;display.c: 197: while (i--)
  7518  0010F4  D014               	goto	l4849
  7519  0010F6                     l4847:
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;display.c: 198: {K10MULT *=10;}
  7523  0010F6  C0FB  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  7524  0010FA  C0FC  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  7525  0010FE  C0FD  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  7526  001102  0E00               	movlw	0
  7527  001104  6E16               	movwf	___ftmul@f2,c
  7528  001106  0E20               	movlw	32
  7529  001108  6E17               	movwf	___ftmul@f2+1,c
  7530  00110A  0E41               	movlw	65
  7531  00110C  6E18               	movwf	___ftmul@f2+2,c
  7532  00110E  EC5B  F00C         	call	___ftmul	;wreg free
  7533  001112  C013  F0FB         	movff	?___ftmul,disp7s_write_f@K10MULT
  7534  001116  C014  F0FC         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  7535  00111A  C015  F0FD         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  7536  00111E                     l4849:
  7537  00111E  0100               	movlb	0	; () banked
  7538  001120  07FE               	decf	disp7s_write_f@i& (0+255),f,b
  7539  001122  29FE               	incf	disp7s_write_f@i& (0+255),w,b
  7540  001124  A4D8               	btfss	status,2,c
  7541  001126  D7E7               	goto	l4847
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;display.c: 199: if (num >= K10MULT)
  7545  001128  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  7546  00112C  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  7547  001130  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  7548  001134  C0FB  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  7549  001138  C0FC  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  7550  00113C  C0FD  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  7551  001140  EC93  F010         	call	___ftge	;wreg free
  7552  001144  A0D8               	btfss	status,0,c
  7553  001146  D014               	goto	l4855
  7554                           
  7555                           ;display.c: 200: {num= K10MULT-1;}
  7556  001148  C0FB  F013         	movff	disp7s_write_f@K10MULT,___ftadd@f1
  7557  00114C  C0FC  F014         	movff	disp7s_write_f@K10MULT+1,___ftadd@f1+1
  7558  001150  C0FD  F015         	movff	disp7s_write_f@K10MULT+2,___ftadd@f1+2
  7559  001154  0E00               	movlw	0
  7560  001156  6E16               	movwf	___ftadd@f2,c
  7561  001158  0E80               	movlw	128
  7562  00115A  6E17               	movwf	___ftadd@f2+1,c
  7563  00115C  0EBF               	movlw	191
  7564  00115E  6E18               	movwf	___ftadd@f2+2,c
  7565  001160  EC7F  F009         	call	___ftadd	;wreg free
  7566  001164  C013  F034         	movff	?___ftadd,disp7s_write_f@num
  7567  001168  C014  F035         	movff	?___ftadd+1,disp7s_write_f@num+1
  7568  00116C  C015  F036         	movff	?___ftadd+2,disp7s_write_f@num+2
  7569  001170                     l4855:
  7570                           
  7571                           ;display.c: 202: disp7s_off(pDisp, NUM_OF_DISP);
  7572  001170  C031  F00B         	movff	disp7s_write_f@pDisp,disp7s_off@pDisp
  7573  001174  C032  F00C         	movff	disp7s_write_f@pDisp+1,disp7s_off@pDisp+1
  7574  001178  C033  F00D         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_off@NUM_OF_DISP
  7575  00117C  EC26  F013         	call	_disp7s_off	;wreg free
  7576                           
  7577                           ;display.c: 206: K10MULT = 1;
  7578  001180  0E00               	movlw	0
  7579  001182  0100               	movlb	0	; () banked
  7580  001184  6FFB               	movwf	disp7s_write_f@K10MULT& (0+255),b
  7581  001186  0E80               	movlw	128
  7582  001188  6FFC               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  7583  00118A  0E3F               	movlw	63
  7584  00118C  6FFD               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;display.c: 207: for (i=0; i<=NUM_OF_DISP; i++)
  7588  00118E  0E00               	movlw	0
  7589  001190  6FFE               	movwf	disp7s_write_f@i& (0+255),b
  7590  001192  D074               	goto	l4885
  7591  001194                     l4861:
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;display.c: 208: {;display.c: 209: if (num< K10MULT)
  7595  001194  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  7596  001198  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  7597  00119C  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  7598  0011A0  C0FB  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  7599  0011A4  C0FC  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  7600  0011A8  C0FD  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  7601  0011AC  EC93  F010         	call	___ftge	;wreg free
  7602  0011B0  B0D8               	btfsc	status,0,c
  7603  0011B2  D04E               	goto	l4881
  7604                           
  7605                           ;display.c: 210: {;display.c: 211: if (i<NUM_OF_DISP)
  7606  0011B4  0100               	movlb	0	; () banked
  7607  0011B6  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7608  0011B8  0A80               	xorlw	128
  7609  0011BA  6E37               	movwf	??_disp7s_write_f& (0+255),c
  7610  0011BC  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  7611  0011BE  0A80               	xorlw	128
  7612  0011C0  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  7613  0011C2  B0D8               	btfsc	status,0,c
  7614  0011C4  D036               	goto	l4877
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;display.c: 212: {;display.c: 213: I = (int16_t)(num*10);
  7618  0011C6  0E00               	movlw	0
  7619  0011C8  6E16               	movwf	___ftmul@f2,c
  7620  0011CA  0E20               	movlw	32
  7621  0011CC  6E17               	movwf	___ftmul@f2+1,c
  7622  0011CE  0E41               	movlw	65
  7623  0011D0  6E18               	movwf	___ftmul@f2+2,c
  7624  0011D2  C034  F013         	movff	disp7s_write_f@num,___ftmul@f1
  7625  0011D6  C035  F014         	movff	disp7s_write_f@num+1,___ftmul@f1+1
  7626  0011DA  C036  F015         	movff	disp7s_write_f@num+2,___ftmul@f1+2
  7627  0011DE  EC5B  F00C         	call	___ftmul	;wreg free
  7628  0011E2  C013  F022         	movff	?___ftmul,___fttol@f1
  7629  0011E6  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  7630  0011EA  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  7631  0011EE  ECD5  F00C         	call	___fttol	;wreg free
  7632  0011F2  C022  F0F8         	movff	?___fttol,disp7s_write_f@I
  7633  0011F6  C023  F0F9         	movff	?___fttol+1,disp7s_write_f@I+1
  7634                           
  7635                           ;display.c: 216: if (i==0)
  7636  0011FA  0100               	movlb	0	; () banked
  7637  0011FC  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7638  0011FE  A4D8               	btfss	status,2,c
  7639  001200  D00D               	goto	l4871
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;display.c: 217: {pDisp[1]= DISP7S_NUMS[0];}
  7643  001202  0E01               	movlw	low _DISP7S_NUMS
  7644  001204  6EF6               	movwf	tblptrl,c
  7645  001206                     	if	1	;There is more than 1 active tblptr byte
  7646  001206  0E08               	movlw	high _DISP7S_NUMS
  7647  001208  6EF7               	movwf	tblptrh,c
  7648  00120A                     	endif
  7649  00120A                     	if	0	;There are less than 3 active tblptr bytes
  7650  00120A                     	endif
  7651  00120A  EE20 F001          	lfsr	2,1
  7652  00120E  5031               	movf	disp7s_write_f@pDisp,w,c
  7653  001210  26D9               	addwf	fsr2l,f,c
  7654  001212  5032               	movf	disp7s_write_f@pDisp+1,w,c
  7655  001214  22DA               	addwfc	fsr2h,f,c
  7656  001216  0008               	tblrd		*
  7657  001218  CFF5 FFDF          	movff	tablat,indf2
  7658  00121C                     l4871:
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;display.c: 219: pDisp[1] |= 0x80;
  7662  00121C  EE20 F001          	lfsr	2,1
  7663  001220  5031               	movf	disp7s_write_f@pDisp,w,c
  7664  001222  26D9               	addwf	fsr2l,f,c
  7665  001224  5032               	movf	disp7s_write_f@pDisp+1,w,c
  7666  001226  22DA               	addwfc	fsr2h,f,c
  7667  001228  0E00               	movlw	0
  7668  00122A  8EDB               	bsf	plusw2,7,c
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;display.c: 220: pi = i;
  7672  00122C  C0FE  F0FA         	movff	disp7s_write_f@i,disp7s_write_f@pi
  7673                           
  7674                           ;display.c: 221: break;
  7675  001230  D02D               	goto	u5570
  7676  001232                     l4877:
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;display.c: 223: else;display.c: 224: {;display.c: 225: I = (int16_t)(num);
  7680  001232  C034  F022         	movff	disp7s_write_f@num,___fttol@f1
  7681  001236  C035  F023         	movff	disp7s_write_f@num+1,___fttol@f1+1
  7682  00123A  C036  F024         	movff	disp7s_write_f@num+2,___fttol@f1+2
  7683  00123E  ECD5  F00C         	call	___fttol	;wreg free
  7684  001242  C022  F0F8         	movff	?___fttol,disp7s_write_f@I
  7685  001246  C023  F0F9         	movff	?___fttol+1,disp7s_write_f@I+1
  7686                           
  7687                           ;display.c: 226: pi = i-1;
  7688  00124A  0100               	movlb	0	; () banked
  7689  00124C  05FE               	decf	disp7s_write_f@i& (0+255),w,b
  7690  00124E  6FFA               	movwf	disp7s_write_f@pi& (0+255),b
  7691  001250                     l4881:
  7692                           
  7693                           ;display.c: 227: };display.c: 228: };display.c: 229: K10MULT *= 10;
  7694  001250  C0FB  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  7695  001254  C0FC  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  7696  001258  C0FD  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  7697  00125C  0E00               	movlw	0
  7698  00125E  6E16               	movwf	___ftmul@f2,c
  7699  001260  0E20               	movlw	32
  7700  001262  6E17               	movwf	___ftmul@f2+1,c
  7701  001264  0E41               	movlw	65
  7702  001266  6E18               	movwf	___ftmul@f2+2,c
  7703  001268  EC5B  F00C         	call	___ftmul	;wreg free
  7704  00126C  C013  F0FB         	movff	?___ftmul,disp7s_write_f@K10MULT
  7705  001270  C014  F0FC         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  7706  001274  C015  F0FD         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  7707  001278  0100               	movlb	0	; () banked
  7708  00127A  2BFE               	incf	disp7s_write_f@i& (0+255),f,b
  7709  00127C                     l4885:
  7710                           
  7711                           ; BSR set to: 0
  7712  00127C  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  7713  00127E  0A80               	xorlw	128
  7714  001280  6E37               	movwf	??_disp7s_write_f& (0+255),c
  7715  001282  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7716  001284  0A80               	xorlw	128
  7717  001286  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  7718  001288  B0D8               	btfsc	status,0,c
  7719  00128A  D784               	goto	l4861
  7720  00128C                     u5570:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;display.c: 230: };display.c: 232: itoa(buff, I, 10);
  7724  00128C  0EEE               	movlw	low disp7s_write_f@buff
  7725  00128E  6E1A               	movwf	itoa@buf,c
  7726  001290  C0F8  F01B         	movff	disp7s_write_f@I,itoa@val
  7727  001294  C0F9  F01C         	movff	disp7s_write_f@I+1,itoa@val+1
  7728  001298  0E00               	movlw	0
  7729  00129A  6E1E               	movwf	itoa@base+1,c
  7730  00129C  0E0A               	movlw	10
  7731  00129E  6E1D               	movwf	itoa@base,c
  7732  0012A0  EC45  F013         	call	_itoa	;wreg free
  7733                           
  7734                           ;display.c: 234: i=0;
  7735  0012A4  0E00               	movlw	0
  7736  0012A6  0100               	movlb	0	; () banked
  7737  0012A8  6FFE               	movwf	disp7s_write_f@i& (0+255),b
  7738                           
  7739                           ;display.c: 235: while (buff[i] != '\0')
  7740  0012AA  D021               	goto	l4897
  7741  0012AC                     l4891:
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;display.c: 236: {;display.c: 237: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  7745  0012AC  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7746  0012AE  0FEE               	addlw	low disp7s_write_f@buff
  7747  0012B0  6ED9               	movwf	fsr2l,c
  7748  0012B2  6ADA               	clrf	fsr2h,c
  7749  0012B4  50DF               	movf	indf2,w,c
  7750  0012B6  6E37               	movwf	??_disp7s_write_f& (0+255),c
  7751  0012B8  0ED0               	movlw	208
  7752  0012BA  2637               	addwf	??_disp7s_write_f,f,c
  7753  0012BC  5037               	movf	??_disp7s_write_f,w,c
  7754  0012BE  0F01               	addlw	low _DISP7S_NUMS
  7755  0012C0  6E38               	movwf	(??_disp7s_write_f+1)& (0+255),c
  7756  0012C2  C038  FFF6         	movff	??_disp7s_write_f+1,tblptrl
  7757  0012C6                     	if	1	;There is more than 1 active tblptr byte
  7758  0012C6  0E08               	movlw	high __smallconst
  7759  0012C8  6EF7               	movwf	tblptrh,c
  7760  0012CA                     	endif
  7761  0012CA                     	if	0	;tblptru may be non-zero
  7762  0012CA                     	endif
  7763  0012CA                     	if	0	;tblptru may be non-zero
  7764  0012CA                     	endif
  7765  0012CA  0008               	tblrd		*
  7766  0012CC  CFF5 F039          	movff	tablat,??_disp7s_write_f+2
  7767  0012D0  C0FA  F03A         	movff	disp7s_write_f@pi,??_disp7s_write_f+3
  7768  0012D4  6A3B               	clrf	(??_disp7s_write_f+4)& (0+255),c
  7769  0012D6  BE3A               	btfsc	(??_disp7s_write_f+3)& (0+255),7,c
  7770  0012D8  063B               	decf	(??_disp7s_write_f+4)& (0+255),f,c
  7771  0012DA  503A               	movf	??_disp7s_write_f+3,w,c
  7772  0012DC  2431               	addwf	disp7s_write_f@pDisp,w,c
  7773  0012DE  6ED9               	movwf	fsr2l,c
  7774  0012E0  503B               	movf	??_disp7s_write_f+4,w,c
  7775  0012E2  2032               	addwfc	disp7s_write_f@pDisp+1,w,c
  7776  0012E4  6EDA               	movwf	fsr2h,c
  7777  0012E6  5039               	movf	??_disp7s_write_f+2,w,c
  7778  0012E8  12DF               	iorwf	indf2,f,c
  7779                           
  7780                           ; BSR set to: 0
  7781  0012EA  07FA               	decf	disp7s_write_f@pi& (0+255),f,b
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;display.c: 238: i++;
  7785  0012EC  2BFE               	incf	disp7s_write_f@i& (0+255),f,b
  7786  0012EE                     l4897:
  7787                           
  7788                           ; BSR set to: 0
  7789  0012EE  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  7790  0012F0  0FEE               	addlw	low disp7s_write_f@buff
  7791  0012F2  6ED9               	movwf	fsr2l,c
  7792  0012F4  6ADA               	clrf	fsr2h,c
  7793  0012F6  50DF               	movf	indf2,w,c
  7794  0012F8  B4D8               	btfsc	status,2,c
  7795  0012FA  0012               	return	
  7796  0012FC  D7D7               	goto	l4891
  7797  0012FE                     __end_of_disp7s_write_f:
  7798                           	opt callstack 0
  7799                           
  7800 ;; *************** function _itoa *****************
  7801 ;; Defined at:
  7802 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;  buf             1   25[COMRAM] PTR unsigned char 
  7805 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  7806 ;;  val             2   26[COMRAM] int 
  7807 ;;  base            2   28[COMRAM] int 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  cp              1    0        PTR unsigned char 
  7810 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      PTR unsigned char 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/1
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7820 ;;      Params:         5       0       0       0       0       0       0       0       0
  7821 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7823 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7824 ;;Total ram usage:        6 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    7
  7827 ;; This function calls:
  7828 ;;		_utoa
  7829 ;; This function is called by:
  7830 ;;		_disp7s_write_f
  7831 ;;		_disp7s_write_i
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           	psect	text60
  7836  00268A                     __ptext60:
  7837                           	opt callstack 0
  7838  00268A                     _itoa:
  7839                           	opt callstack 19
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;incstack = 0
  7843  00268A  AE1C               	btfss	itoa@val+1,7,c
  7844  00268C  D00A               	goto	l4641
  7845  00268E  501A               	movf	itoa@buf,w,c
  7846  002690  6ED9               	movwf	fsr2l,c
  7847  002692  6ADA               	clrf	fsr2h,c
  7848  002694  0E2D               	movlw	45
  7849  002696  6EDF               	movwf	indf2,c
  7850  002698  2A1A               	incf	itoa@buf,f,c
  7851  00269A  6C1B               	negf	itoa@val,c
  7852  00269C  1E1C               	comf	itoa@val+1,f,c
  7853  00269E  B0D8               	btfsc	status,0,c
  7854  0026A0  2A1C               	incf	itoa@val+1,f,c
  7855  0026A2                     l4641:
  7856  0026A2  C01A  F012         	movff	itoa@buf,utoa@buf
  7857  0026A6  C01B  F013         	movff	itoa@val,utoa@val
  7858  0026AA  C01C  F014         	movff	itoa@val+1,utoa@val+1
  7859  0026AE  C01D  F015         	movff	itoa@base,utoa@base
  7860  0026B2  C01E  F016         	movff	itoa@base+1,utoa@base+1
  7861  0026B6  EC8F  F00E         	call	_utoa	;wreg free
  7862  0026BA  0012               	return		;funcret
  7863  0026BC                     __end_of_itoa:
  7864                           	opt callstack 0
  7865                           
  7866 ;; *************** function _utoa *****************
  7867 ;; Defined at:
  7868 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;  buf             1   17[COMRAM] PTR unsigned char 
  7871 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  7872 ;;  val             2   18[COMRAM] unsigned int 
  7873 ;;  base            2   20[COMRAM] int 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  v               2   22[COMRAM] unsigned int 
  7876 ;;  c               1   24[COMRAM] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      PTR unsigned char 
  7879 ;; Registers used:
  7880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/1
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7886 ;;      Params:         5       0       0       0       0       0       0       0       0
  7887 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7889 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7890 ;;Total ram usage:        8 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:    6
  7893 ;; This function calls:
  7894 ;;		___lwdiv
  7895 ;;		___lwmod
  7896 ;; This function is called by:
  7897 ;;		_itoa
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text61
  7902  001D1E                     __ptext61:
  7903                           	opt callstack 0
  7904  001D1E                     _utoa:
  7905                           	opt callstack 19
  7906                           
  7907                           ;incstack = 0
  7908  001D1E  C013  F017         	movff	utoa@val,utoa@v
  7909  001D22  C014  F018         	movff	utoa@val+1,utoa@v+1
  7910  001D26                     l4597:
  7911  001D26  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  7912  001D2A  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  7913  001D2E  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  7914  001D32  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  7915  001D36  ECC3  F011         	call	___lwdiv	;wreg free
  7916  001D3A  C00B  F017         	movff	?___lwdiv,utoa@v
  7917  001D3E  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  7918  001D42  2A12               	incf	utoa@buf,f,c
  7919  001D44  5017               	movf	utoa@v,w,c
  7920  001D46  1018               	iorwf	utoa@v+1,w,c
  7921  001D48  A4D8               	btfss	status,2,c
  7922  001D4A  D7ED               	goto	l4597
  7923  001D4C  5012               	movf	utoa@buf,w,c
  7924  001D4E  6ED9               	movwf	fsr2l,c
  7925  001D50  6ADA               	clrf	fsr2h,c
  7926  001D52  0E00               	movlw	0
  7927  001D54  6EDF               	movwf	indf2,c
  7928  001D56  0612               	decf	utoa@buf,f,c
  7929  001D58                     l4607:
  7930  001D58  C013  F00B         	movff	utoa@val,___lwmod@dividend
  7931  001D5C  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  7932  001D60  C015  F00D         	movff	utoa@base,___lwmod@divisor
  7933  001D64  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  7934  001D68  ECA4  F012         	call	___lwmod	;wreg free
  7935  001D6C  500B               	movf	?___lwmod,w,c
  7936  001D6E  6E19               	movwf	utoa@c,c
  7937  001D70  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  7938  001D74  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  7939  001D78  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  7940  001D7C  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  7941  001D80  ECC3  F011         	call	___lwdiv	;wreg free
  7942  001D84  C00B  F013         	movff	?___lwdiv,utoa@val
  7943  001D88  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  7944  001D8C  0E09               	movlw	9
  7945  001D8E  6419               	cpfsgt	utoa@c,c
  7946  001D90  D002               	goto	l1615
  7947  001D92  0E07               	movlw	7
  7948  001D94  2619               	addwf	utoa@c,f,c
  7949  001D96                     l1615:
  7950  001D96  0E30               	movlw	48
  7951  001D98  2619               	addwf	utoa@c,f,c
  7952  001D9A  5012               	movf	utoa@buf,w,c
  7953  001D9C  6ED9               	movwf	fsr2l,c
  7954  001D9E  6ADA               	clrf	fsr2h,c
  7955  001DA0  C019  FFDF         	movff	utoa@c,indf2
  7956  001DA4  0612               	decf	utoa@buf,f,c
  7957  001DA6  5013               	movf	utoa@val,w,c
  7958  001DA8  1014               	iorwf	utoa@val+1,w,c
  7959  001DAA  A4D8               	btfss	status,2,c
  7960  001DAC  D7D5               	goto	l4607
  7961                           
  7962                           ;	Return value of _utoa is never used
  7963  001DAE  2A12               	incf	utoa@buf,f,c
  7964  001DB0  0012               	return		;funcret
  7965  001DB2                     __end_of_utoa:
  7966                           	opt callstack 0
  7967                           
  7968 ;; *************** function ___lwmod *****************
  7969 ;; Defined at:
  7970 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  dividend        2   10[COMRAM] unsigned int 
  7973 ;;  divisor         2   12[COMRAM] unsigned int 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  counter         1   14[COMRAM] unsigned char 
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  2   10[COMRAM] unsigned int 
  7978 ;; Registers used:
  7979 ;;		wreg, status,2, status,0
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/1
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7985 ;;      Params:         4       0       0       0       0       0       0       0       0
  7986 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7988 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7989 ;;Total ram usage:        5 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; Hardware stack levels required when called:    5
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_utoa
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text62
  8000  002548                     __ptext62:
  8001                           	opt callstack 0
  8002  002548                     ___lwmod:
  8003                           	opt callstack 19
  8004                           
  8005                           ;incstack = 0
  8006  002548  500D               	movf	___lwmod@divisor,w,c
  8007  00254A  100E               	iorwf	___lwmod@divisor+1,w,c
  8008  00254C  B4D8               	btfsc	status,2,c
  8009  00254E  D018               	goto	l1433
  8010  002550  0E01               	movlw	1
  8011  002552  6E0F               	movwf	___lwmod@counter,c
  8012  002554  D004               	goto	l4549
  8013  002556                     l4547:
  8014  002556  90D8               	bcf	status,0,c
  8015  002558  360D               	rlcf	___lwmod@divisor,f,c
  8016  00255A  360E               	rlcf	___lwmod@divisor+1,f,c
  8017  00255C  2A0F               	incf	___lwmod@counter,f,c
  8018  00255E                     l4549:
  8019  00255E  AE0E               	btfss	___lwmod@divisor+1,7,c
  8020  002560  D7FA               	goto	l4547
  8021  002562                     u4980:
  8022  002562  500D               	movf	___lwmod@divisor,w,c
  8023  002564  5C0B               	subwf	___lwmod@dividend,w,c
  8024  002566  500E               	movf	___lwmod@divisor+1,w,c
  8025  002568  580C               	subwfb	___lwmod@dividend+1,w,c
  8026  00256A  A0D8               	btfss	status,0,c
  8027  00256C  D004               	goto	l4555
  8028  00256E  500D               	movf	___lwmod@divisor,w,c
  8029  002570  5E0B               	subwf	___lwmod@dividend,f,c
  8030  002572  500E               	movf	___lwmod@divisor+1,w,c
  8031  002574  5A0C               	subwfb	___lwmod@dividend+1,f,c
  8032  002576                     l4555:
  8033  002576  90D8               	bcf	status,0,c
  8034  002578  320E               	rrcf	___lwmod@divisor+1,f,c
  8035  00257A  320D               	rrcf	___lwmod@divisor,f,c
  8036  00257C  2E0F               	decfsz	___lwmod@counter,f,c
  8037  00257E  D7F1               	goto	u4980
  8038  002580                     l1433:
  8039  002580  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  8040  002584  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  8041  002588  0012               	return		;funcret
  8042  00258A                     __end_of___lwmod:
  8043                           	opt callstack 0
  8044                           
  8045 ;; *************** function ___lwdiv *****************
  8046 ;; Defined at:
  8047 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  dividend        2   10[COMRAM] unsigned int 
  8050 ;;  divisor         2   12[COMRAM] unsigned int 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  quotient        2   15[COMRAM] unsigned int 
  8053 ;;  counter         1   14[COMRAM] unsigned char 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  2   10[COMRAM] unsigned int 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/1
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8063 ;;      Params:         4       0       0       0       0       0       0       0       0
  8064 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8066 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8067 ;;Total ram usage:        7 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    5
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_utoa
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text63
  8078  002386                     __ptext63:
  8079                           	opt callstack 0
  8080  002386                     ___lwdiv:
  8081                           	opt callstack 19
  8082                           
  8083                           ;incstack = 0
  8084  002386  0E00               	movlw	0
  8085  002388  6E11               	movwf	___lwdiv@quotient+1,c
  8086  00238A  0E00               	movlw	0
  8087  00238C  6E10               	movwf	___lwdiv@quotient,c
  8088  00238E  500D               	movf	___lwdiv@divisor,w,c
  8089  002390  100E               	iorwf	___lwdiv@divisor+1,w,c
  8090  002392  B4D8               	btfsc	status,2,c
  8091  002394  D01C               	goto	l1423
  8092  002396  0E01               	movlw	1
  8093  002398  6E0F               	movwf	___lwdiv@counter,c
  8094  00239A  D004               	goto	l4529
  8095  00239C                     l4527:
  8096  00239C  90D8               	bcf	status,0,c
  8097  00239E  360D               	rlcf	___lwdiv@divisor,f,c
  8098  0023A0  360E               	rlcf	___lwdiv@divisor+1,f,c
  8099  0023A2  2A0F               	incf	___lwdiv@counter,f,c
  8100  0023A4                     l4529:
  8101  0023A4  AE0E               	btfss	___lwdiv@divisor+1,7,c
  8102  0023A6  D7FA               	goto	l4527
  8103  0023A8                     u4950:
  8104  0023A8  90D8               	bcf	status,0,c
  8105  0023AA  3610               	rlcf	___lwdiv@quotient,f,c
  8106  0023AC  3611               	rlcf	___lwdiv@quotient+1,f,c
  8107  0023AE  500D               	movf	___lwdiv@divisor,w,c
  8108  0023B0  5C0B               	subwf	___lwdiv@dividend,w,c
  8109  0023B2  500E               	movf	___lwdiv@divisor+1,w,c
  8110  0023B4  580C               	subwfb	___lwdiv@dividend+1,w,c
  8111  0023B6  A0D8               	btfss	status,0,c
  8112  0023B8  D005               	goto	l4539
  8113  0023BA  500D               	movf	___lwdiv@divisor,w,c
  8114  0023BC  5E0B               	subwf	___lwdiv@dividend,f,c
  8115  0023BE  500E               	movf	___lwdiv@divisor+1,w,c
  8116  0023C0  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  8117  0023C2  8010               	bsf	___lwdiv@quotient,0,c
  8118  0023C4                     l4539:
  8119  0023C4  90D8               	bcf	status,0,c
  8120  0023C6  320E               	rrcf	___lwdiv@divisor+1,f,c
  8121  0023C8  320D               	rrcf	___lwdiv@divisor,f,c
  8122  0023CA  2E0F               	decfsz	___lwdiv@counter,f,c
  8123  0023CC  D7ED               	goto	u4950
  8124  0023CE                     l1423:
  8125  0023CE  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  8126  0023D2  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8127  0023D6  0012               	return		;funcret
  8128  0023D8                     __end_of___lwdiv:
  8129                           	opt callstack 0
  8130                           
  8131 ;; *************** function ___fttol *****************
  8132 ;; Defined at:
  8133 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  f1              3   33[COMRAM] float 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;  lval            4   43[COMRAM] unsigned long 
  8138 ;;  exp1            1   47[COMRAM] unsigned char 
  8139 ;;  sign1           1   42[COMRAM] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  4   33[COMRAM] long 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8149 ;;      Params:         4       0       0       0       0       0       0       0       0
  8150 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8151 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8152 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8153 ;;Total ram usage:       15 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    5
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_disp7s_write_f
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text64
  8164  0019AA                     __ptext64:
  8165                           	opt callstack 0
  8166  0019AA                     ___fttol:
  8167                           	opt callstack 21
  8168                           
  8169                           ;incstack = 0
  8170  0019AA  C024  F026         	movff	___fttol@f1+2,??___fttol
  8171  0019AE  6A27               	clrf	(??___fttol+1)& (0+255),c
  8172  0019B0  6A28               	clrf	(??___fttol+2)& (0+255),c
  8173  0019B2  3423               	rlcf	___fttol@f1+1,w,c
  8174  0019B4  3626               	rlcf	??___fttol& (0+255),f,c
  8175  0019B6  E301               	bnc	u5441
  8176  0019B8  8027               	bsf	(??___fttol+1)& (0+255),0,c
  8177  0019BA                     u5441:
  8178  0019BA  5026               	movf	??___fttol,w,c
  8179  0019BC  6E30               	movwf	___fttol@exp1,c
  8180  0019BE  5030               	movf	___fttol@exp1,w,c
  8181  0019C0  A4D8               	btfss	status,2,c
  8182  0019C2  D009               	goto	l4803
  8183  0019C4                     u5450:
  8184  0019C4  0E00               	movlw	0
  8185  0019C6  6E22               	movwf	?___fttol,c
  8186  0019C8  0E00               	movlw	0
  8187  0019CA  6E23               	movwf	?___fttol+1,c
  8188  0019CC  0E00               	movlw	0
  8189  0019CE  6E24               	movwf	?___fttol+2,c
  8190  0019D0  0E00               	movlw	0
  8191  0019D2  6E25               	movwf	?___fttol+3,c
  8192  0019D4  0012               	return	
  8193  0019D6                     l4803:
  8194  0019D6  0E17               	movlw	23
  8195  0019D8  6E26               	movwf	??___fttol& (0+255),c
  8196  0019DA  C022  F027         	movff	___fttol@f1,??___fttol+1
  8197  0019DE  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  8198  0019E2  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  8199  0019E6  2826               	incf	??___fttol,w,c
  8200  0019E8  6E2A               	movwf	(??___fttol+4)& (0+255),c
  8201  0019EA  D004               	goto	u5460
  8202  0019EC                     u5465:
  8203  0019EC  90D8               	bcf	status,0,c
  8204  0019EE  3229               	rrcf	??___fttol+3,f,c
  8205  0019F0  3228               	rrcf	??___fttol+2,f,c
  8206  0019F2  3227               	rrcf	??___fttol+1,f,c
  8207  0019F4                     u5460:
  8208  0019F4  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  8209  0019F6  D7FA               	goto	u5465
  8210  0019F8  5027               	movf	??___fttol+1,w,c
  8211  0019FA  6E2B               	movwf	___fttol@sign1,c
  8212  0019FC  8E23               	bsf	___fttol@f1+1,7,c
  8213  0019FE  0EFF               	movlw	255
  8214  001A00  1622               	andwf	___fttol@f1,f,c
  8215  001A02  0EFF               	movlw	255
  8216  001A04  1623               	andwf	___fttol@f1+1,f,c
  8217  001A06  0E00               	movlw	0
  8218  001A08  1624               	andwf	___fttol@f1+2,f,c
  8219  001A0A  5022               	movf	___fttol@f1,w,c
  8220  001A0C  6E2C               	movwf	___fttol@lval,c
  8221  001A0E  5023               	movf	___fttol@f1+1,w,c
  8222  001A10  6E2D               	movwf	___fttol@lval+1,c
  8223  001A12  5024               	movf	___fttol@f1+2,w,c
  8224  001A14  6E2E               	movwf	___fttol@lval+2,c
  8225  001A16  6A2F               	clrf	___fttol@lval+3,c
  8226  001A18  0E8E               	movlw	142
  8227  001A1A  5E30               	subwf	___fttol@exp1,f,c
  8228  001A1C  AE30               	btfss	___fttol@exp1,7,c
  8229  001A1E  D00D               	goto	l4825
  8230  001A20  5030               	movf	___fttol@exp1,w,c
  8231  001A22  0A80               	xorlw	128
  8232  001A24  0F8F               	addlw	143
  8233  001A26  A0D8               	btfss	status,0,c
  8234  001A28  D7CD               	goto	u5450
  8235  001A2A                     l4821:
  8236  001A2A  90D8               	bcf	status,0,c
  8237  001A2C  322F               	rrcf	___fttol@lval+3,f,c
  8238  001A2E  322E               	rrcf	___fttol@lval+2,f,c
  8239  001A30  322D               	rrcf	___fttol@lval+1,f,c
  8240  001A32  322C               	rrcf	___fttol@lval,f,c
  8241  001A34  3E30               	incfsz	___fttol@exp1,f,c
  8242  001A36  D7F9               	goto	l4821
  8243  001A38  D00D               	goto	u5500
  8244  001A3A                     l4825:
  8245  001A3A  0E17               	movlw	23
  8246  001A3C  6430               	cpfsgt	___fttol@exp1,c
  8247  001A3E  D007               	goto	l4833
  8248  001A40  D7C1               	goto	u5450
  8249  001A42                     l4831:
  8250  001A42  90D8               	bcf	status,0,c
  8251  001A44  362C               	rlcf	___fttol@lval,f,c
  8252  001A46  362D               	rlcf	___fttol@lval+1,f,c
  8253  001A48  362E               	rlcf	___fttol@lval+2,f,c
  8254  001A4A  362F               	rlcf	___fttol@lval+3,f,c
  8255  001A4C  0630               	decf	___fttol@exp1,f,c
  8256  001A4E                     l4833:
  8257  001A4E  5030               	movf	___fttol@exp1,w,c
  8258  001A50  A4D8               	btfss	status,2,c
  8259  001A52  D7F7               	goto	l4831
  8260  001A54                     u5500:
  8261  001A54  502B               	movf	___fttol@sign1,w,c
  8262  001A56  B4D8               	btfsc	status,2,c
  8263  001A58  D008               	goto	l4839
  8264  001A5A  1E2F               	comf	___fttol@lval+3,f,c
  8265  001A5C  1E2E               	comf	___fttol@lval+2,f,c
  8266  001A5E  1E2D               	comf	___fttol@lval+1,f,c
  8267  001A60  6C2C               	negf	___fttol@lval,c
  8268  001A62  0E00               	movlw	0
  8269  001A64  222D               	addwfc	___fttol@lval+1,f,c
  8270  001A66  222E               	addwfc	___fttol@lval+2,f,c
  8271  001A68  222F               	addwfc	___fttol@lval+3,f,c
  8272  001A6A                     l4839:
  8273  001A6A  C02C  F022         	movff	___fttol@lval,?___fttol
  8274  001A6E  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  8275  001A72  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  8276  001A76  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  8277  001A7A  0012               	return		;funcret
  8278  001A7C                     __end_of___fttol:
  8279                           	opt callstack 0
  8280                           
  8281 ;; *************** function ___ftmul *****************
  8282 ;; Defined at:
  8283 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  f1              3   18[COMRAM] float 
  8286 ;;  f2              3   21[COMRAM] float 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  8289 ;;  sign            1   32[COMRAM] unsigned char 
  8290 ;;  cntr            1   31[COMRAM] unsigned char 
  8291 ;;  exp             1   27[COMRAM] unsigned char 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  3   18[COMRAM] float 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8301 ;;      Params:         6       0       0       0       0       0       0       0       0
  8302 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8303 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8304 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8305 ;;Total ram usage:       15 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    6
  8308 ;; This function calls:
  8309 ;;		___ftpack
  8310 ;; This function is called by:
  8311 ;;		_disp7s_write_f
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text65
  8316  0018B6                     __ptext65:
  8317                           	opt callstack 0
  8318  0018B6                     ___ftmul:
  8319                           	opt callstack 20
  8320                           
  8321                           ;incstack = 0
  8322  0018B6  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  8323  0018BA  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  8324  0018BC  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  8325  0018BE  3414               	rlcf	___ftmul@f1+1,w,c
  8326  0018C0  3619               	rlcf	??___ftmul& (0+255),f,c
  8327  0018C2  E301               	bnc	u5351
  8328  0018C4  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  8329  0018C6                     u5351:
  8330  0018C6  5019               	movf	??___ftmul,w,c
  8331  0018C8  6E1C               	movwf	___ftmul@exp,c
  8332  0018CA  501C               	movf	___ftmul@exp,w,c
  8333  0018CC  A4D8               	btfss	status,2,c
  8334  0018CE  D007               	goto	l4737
  8335  0018D0  0E00               	movlw	0
  8336  0018D2  6E13               	movwf	?___ftmul,c
  8337  0018D4  0E00               	movlw	0
  8338  0018D6  6E14               	movwf	?___ftmul+1,c
  8339  0018D8  0E00               	movlw	0
  8340  0018DA  6E15               	movwf	?___ftmul+2,c
  8341  0018DC  0012               	return	
  8342  0018DE                     l4737:
  8343  0018DE  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  8344  0018E2  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  8345  0018E4  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  8346  0018E6  3417               	rlcf	___ftmul@f2+1,w,c
  8347  0018E8  3619               	rlcf	??___ftmul& (0+255),f,c
  8348  0018EA  E301               	bnc	u5371
  8349  0018EC  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  8350  0018EE                     u5371:
  8351  0018EE  5019               	movf	??___ftmul,w,c
  8352  0018F0  6E21               	movwf	___ftmul@sign,c
  8353  0018F2  5021               	movf	___ftmul@sign,w,c
  8354  0018F4  A4D8               	btfss	status,2,c
  8355  0018F6  D007               	goto	l4743
  8356  0018F8  0E00               	movlw	0
  8357  0018FA  6E13               	movwf	?___ftmul,c
  8358  0018FC  0E00               	movlw	0
  8359  0018FE  6E14               	movwf	?___ftmul+1,c
  8360  001900  0E00               	movlw	0
  8361  001902  6E15               	movwf	?___ftmul+2,c
  8362  001904  0012               	return	
  8363  001906                     l4743:
  8364  001906  5021               	movf	___ftmul@sign,w,c
  8365  001908  0F7B               	addlw	123
  8366  00190A  261C               	addwf	___ftmul@exp,f,c
  8367  00190C  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  8368  001910  5018               	movf	___ftmul@f2+2,w,c
  8369  001912  1A21               	xorwf	___ftmul@sign,f,c
  8370  001914  0E80               	movlw	128
  8371  001916  1621               	andwf	___ftmul@sign,f,c
  8372  001918  8E14               	bsf	___ftmul@f1+1,7,c
  8373  00191A  8E17               	bsf	___ftmul@f2+1,7,c
  8374  00191C  0EFF               	movlw	255
  8375  00191E  1616               	andwf	___ftmul@f2,f,c
  8376  001920  0EFF               	movlw	255
  8377  001922  1617               	andwf	___ftmul@f2+1,f,c
  8378  001924  0E00               	movlw	0
  8379  001926  1618               	andwf	___ftmul@f2+2,f,c
  8380  001928  0E00               	movlw	0
  8381  00192A  6E1D               	movwf	___ftmul@f3_as_product,c
  8382  00192C  0E00               	movlw	0
  8383  00192E  6E1E               	movwf	___ftmul@f3_as_product+1,c
  8384  001930  0E00               	movlw	0
  8385  001932  6E1F               	movwf	___ftmul@f3_as_product+2,c
  8386  001934  0E07               	movlw	7
  8387  001936  6E20               	movwf	___ftmul@cntr,c
  8388  001938                     l4757:
  8389  001938  A013               	btfss	___ftmul@f1,0,c
  8390  00193A  D006               	goto	l4761
  8391  00193C  5016               	movf	___ftmul@f2,w,c
  8392  00193E  261D               	addwf	___ftmul@f3_as_product,f,c
  8393  001940  5017               	movf	___ftmul@f2+1,w,c
  8394  001942  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  8395  001944  5018               	movf	___ftmul@f2+2,w,c
  8396  001946  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  8397  001948                     l4761:
  8398  001948  90D8               	bcf	status,0,c
  8399  00194A  3215               	rrcf	___ftmul@f1+2,f,c
  8400  00194C  3214               	rrcf	___ftmul@f1+1,f,c
  8401  00194E  3213               	rrcf	___ftmul@f1,f,c
  8402  001950  90D8               	bcf	status,0,c
  8403  001952  3616               	rlcf	___ftmul@f2,f,c
  8404  001954  3617               	rlcf	___ftmul@f2+1,f,c
  8405  001956  3618               	rlcf	___ftmul@f2+2,f,c
  8406  001958  2E20               	decfsz	___ftmul@cntr,f,c
  8407  00195A  D7EE               	goto	l4757
  8408  00195C  0E09               	movlw	9
  8409  00195E  6E20               	movwf	___ftmul@cntr,c
  8410  001960                     l4767:
  8411  001960  A013               	btfss	___ftmul@f1,0,c
  8412  001962  D006               	goto	l4771
  8413  001964  5016               	movf	___ftmul@f2,w,c
  8414  001966  261D               	addwf	___ftmul@f3_as_product,f,c
  8415  001968  5017               	movf	___ftmul@f2+1,w,c
  8416  00196A  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  8417  00196C  5018               	movf	___ftmul@f2+2,w,c
  8418  00196E  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  8419  001970                     l4771:
  8420  001970  90D8               	bcf	status,0,c
  8421  001972  3215               	rrcf	___ftmul@f1+2,f,c
  8422  001974  3214               	rrcf	___ftmul@f1+1,f,c
  8423  001976  3213               	rrcf	___ftmul@f1,f,c
  8424  001978  90D8               	bcf	status,0,c
  8425  00197A  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  8426  00197C  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  8427  00197E  321D               	rrcf	___ftmul@f3_as_product,f,c
  8428  001980  2E20               	decfsz	___ftmul@cntr,f,c
  8429  001982  D7EE               	goto	l4767
  8430  001984  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  8431  001988  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8432  00198C  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8433  001990  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  8434  001994  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  8435  001998  EC99  F00D         	call	___ftpack	;wreg free
  8436  00199C  C00B  F013         	movff	?___ftpack,?___ftmul
  8437  0019A0  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  8438  0019A4  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  8439  0019A8  0012               	return		;funcret
  8440  0019AA                     __end_of___ftmul:
  8441                           	opt callstack 0
  8442                           
  8443 ;; *************** function ___ftge *****************
  8444 ;; Defined at:
  8445 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;  ff1             3   21[COMRAM] float 
  8448 ;;  ff2             3   24[COMRAM] float 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;		None               void
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8460 ;;      Params:         6       0       0       0       0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8462 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8463 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8464 ;;Total ram usage:        9 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    5
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_ikey_parsing
  8471 ;;		_disp7s_write_f
  8472 ;;		_nozzle_isEnabled
  8473 ;;		_configMode_kb
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text66
  8478  002126                     __ptext66:
  8479                           	opt callstack 0
  8480  002126                     ___ftge:
  8481                           	opt callstack 21
  8482                           
  8483                           ;incstack = 0
  8484  002126  AE18               	btfss	___ftge@ff1+2,7,c
  8485  002128  D00F               	goto	l4783
  8486  00212A  0E00               	movlw	0
  8487  00212C  6E1C               	movwf	??___ftge& (0+255),c
  8488  00212E  0E00               	movlw	0
  8489  002130  6E1D               	movwf	(??___ftge+1)& (0+255),c
  8490  002132  0E80               	movlw	128
  8491  002134  6E1E               	movwf	(??___ftge+2)& (0+255),c
  8492  002136  5016               	movf	___ftge@ff1,w,c
  8493  002138  5C1C               	subwf	??___ftge,w,c
  8494  00213A  6E16               	movwf	___ftge@ff1,c
  8495  00213C  5017               	movf	___ftge@ff1+1,w,c
  8496  00213E  581D               	subwfb	??___ftge+1,w,c
  8497  002140  6E17               	movwf	___ftge@ff1+1,c
  8498  002142  5018               	movf	___ftge@ff1+2,w,c
  8499  002144  581E               	subwfb	??___ftge+2,w,c
  8500  002146  6E18               	movwf	___ftge@ff1+2,c
  8501  002148                     l4783:
  8502  002148  AE1B               	btfss	___ftge@ff2+2,7,c
  8503  00214A  D00F               	goto	l4787
  8504  00214C  0E00               	movlw	0
  8505  00214E  6E1C               	movwf	??___ftge& (0+255),c
  8506  002150  0E00               	movlw	0
  8507  002152  6E1D               	movwf	(??___ftge+1)& (0+255),c
  8508  002154  0E80               	movlw	128
  8509  002156  6E1E               	movwf	(??___ftge+2)& (0+255),c
  8510  002158  5019               	movf	___ftge@ff2,w,c
  8511  00215A  5C1C               	subwf	??___ftge,w,c
  8512  00215C  6E19               	movwf	___ftge@ff2,c
  8513  00215E  501A               	movf	___ftge@ff2+1,w,c
  8514  002160  581D               	subwfb	??___ftge+1,w,c
  8515  002162  6E1A               	movwf	___ftge@ff2+1,c
  8516  002164  501B               	movf	___ftge@ff2+2,w,c
  8517  002166  581E               	subwfb	??___ftge+2,w,c
  8518  002168  6E1B               	movwf	___ftge@ff2+2,c
  8519  00216A                     l4787:
  8520  00216A  0E00               	movlw	0
  8521  00216C  1A16               	xorwf	___ftge@ff1,f,c
  8522  00216E  0E00               	movlw	0
  8523  002170  1A17               	xorwf	___ftge@ff1+1,f,c
  8524  002172  0E80               	movlw	128
  8525  002174  1A18               	xorwf	___ftge@ff1+2,f,c
  8526  002176  0E00               	movlw	0
  8527  002178  1A19               	xorwf	___ftge@ff2,f,c
  8528  00217A  0E00               	movlw	0
  8529  00217C  1A1A               	xorwf	___ftge@ff2+1,f,c
  8530  00217E  0E80               	movlw	128
  8531  002180  1A1B               	xorwf	___ftge@ff2+2,f,c
  8532  002182  5019               	movf	___ftge@ff2,w,c
  8533  002184  5C16               	subwf	___ftge@ff1,w,c
  8534  002186  501A               	movf	___ftge@ff2+1,w,c
  8535  002188  5817               	subwfb	___ftge@ff1+1,w,c
  8536  00218A  501B               	movf	___ftge@ff2+2,w,c
  8537  00218C  5818               	subwfb	___ftge@ff1+2,w,c
  8538  00218E  B0D8               	btfsc	status,0,c
  8539  002190  D002               	goto	l4793
  8540  002192  90D8               	bcf	status,0,c
  8541  002194  0012               	return	
  8542  002196                     l4793:
  8543  002196  80D8               	bsf	status,0,c
  8544  002198  0012               	return		;funcret
  8545  00219A                     __end_of___ftge:
  8546                           	opt callstack 0
  8547                           
  8548 ;; *************** function ___ftadd *****************
  8549 ;; Defined at:
  8550 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  f1              3   18[COMRAM] float 
  8553 ;;  f2              3   21[COMRAM] float 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  exp1            1   29[COMRAM] unsigned char 
  8556 ;;  exp2            1   28[COMRAM] unsigned char 
  8557 ;;  sign            1   27[COMRAM] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  3   18[COMRAM] float 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8567 ;;      Params:         6       0       0       0       0       0       0       0       0
  8568 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8569 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8570 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8571 ;;Total ram usage:       12 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    6
  8574 ;; This function calls:
  8575 ;;		___ftpack
  8576 ;; This function is called by:
  8577 ;;		_pulsonic_getTotalSum_mlh
  8578 ;;		_disp7s_write_f
  8579 ;;		_configMode_kb
  8580 ;;		___ftsub
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text67
  8585  0012FE                     __ptext67:
  8586                           	opt callstack 0
  8587  0012FE                     ___ftadd:
  8588                           	opt callstack 20
  8589                           
  8590                           ;incstack = 0
  8591  0012FE  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  8592  001302  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  8593  001304  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  8594  001306  3414               	rlcf	___ftadd@f1+1,w,c
  8595  001308  3619               	rlcf	??___ftadd& (0+255),f,c
  8596  00130A  E301               	bnc	u5141
  8597  00130C  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  8598  00130E                     u5141:
  8599  00130E  5019               	movf	??___ftadd,w,c
  8600  001310  6E1E               	movwf	___ftadd@exp1,c
  8601  001312  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  8602  001316  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  8603  001318  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  8604  00131A  3417               	rlcf	___ftadd@f2+1,w,c
  8605  00131C  3619               	rlcf	??___ftadd& (0+255),f,c
  8606  00131E  E301               	bnc	u5151
  8607  001320  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  8608  001322                     u5151:
  8609  001322  5019               	movf	??___ftadd,w,c
  8610  001324  6E1D               	movwf	___ftadd@exp2,c
  8611  001326  501E               	movf	___ftadd@exp1,w,c
  8612  001328  B4D8               	btfsc	status,2,c
  8613  00132A  D00A               	goto	u5180
  8614  00132C  501D               	movf	___ftadd@exp2,w,c
  8615  00132E  5C1E               	subwf	___ftadd@exp1,w,c
  8616  001330  B0D8               	btfsc	status,0,c
  8617  001332  D00D               	goto	l4669
  8618  001334  501E               	movf	___ftadd@exp1,w,c
  8619  001336  5C1D               	subwf	___ftadd@exp2,w,c
  8620  001338  6E19               	movwf	??___ftadd& (0+255),c
  8621  00133A  0E18               	movlw	24
  8622  00133C  6419               	cpfsgt	??___ftadd,c
  8623  00133E  D007               	goto	l4669
  8624  001340                     u5180:
  8625  001340  C016  F013         	movff	___ftadd@f2,?___ftadd
  8626  001344  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  8627  001348  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  8628  00134C  0012               	return	
  8629  00134E                     l4669:
  8630  00134E  501D               	movf	___ftadd@exp2,w,c
  8631  001350  B4D8               	btfsc	status,2,c
  8632  001352  D00A               	goto	u5210
  8633  001354  501E               	movf	___ftadd@exp1,w,c
  8634  001356  5C1D               	subwf	___ftadd@exp2,w,c
  8635  001358  B0D8               	btfsc	status,0,c
  8636  00135A  D00D               	goto	l4675
  8637  00135C  501D               	movf	___ftadd@exp2,w,c
  8638  00135E  5C1E               	subwf	___ftadd@exp1,w,c
  8639  001360  6E19               	movwf	??___ftadd& (0+255),c
  8640  001362  0E18               	movlw	24
  8641  001364  6419               	cpfsgt	??___ftadd,c
  8642  001366  D007               	goto	l4675
  8643  001368                     u5210:
  8644  001368  C013  F013         	movff	___ftadd@f1,?___ftadd
  8645  00136C  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  8646  001370  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  8647  001374  0012               	return	
  8648  001376                     l4675:
  8649  001376  0E06               	movlw	6
  8650  001378  6E1C               	movwf	___ftadd@sign,c
  8651  00137A  BE15               	btfsc	___ftadd@f1+2,7,c
  8652  00137C  8E1C               	bsf	___ftadd@sign,7,c
  8653  00137E  BE18               	btfsc	___ftadd@f2+2,7,c
  8654  001380  8C1C               	bsf	___ftadd@sign,6,c
  8655  001382  8E14               	bsf	___ftadd@f1+1,7,c
  8656  001384  0EFF               	movlw	255
  8657  001386  1613               	andwf	___ftadd@f1,f,c
  8658  001388  0EFF               	movlw	255
  8659  00138A  1614               	andwf	___ftadd@f1+1,f,c
  8660  00138C  0E00               	movlw	0
  8661  00138E  1615               	andwf	___ftadd@f1+2,f,c
  8662  001390  8E17               	bsf	___ftadd@f2+1,7,c
  8663  001392  0EFF               	movlw	255
  8664  001394  1616               	andwf	___ftadd@f2,f,c
  8665  001396  0EFF               	movlw	255
  8666  001398  1617               	andwf	___ftadd@f2+1,f,c
  8667  00139A  0E00               	movlw	0
  8668  00139C  1618               	andwf	___ftadd@f2+2,f,c
  8669  00139E  501D               	movf	___ftadd@exp2,w,c
  8670  0013A0  5C1E               	subwf	___ftadd@exp1,w,c
  8671  0013A2  B0D8               	btfsc	status,0,c
  8672  0013A4  D01B               	goto	l4701
  8673  0013A6                     u5240:
  8674  0013A6  90D8               	bcf	status,0,c
  8675  0013A8  3616               	rlcf	___ftadd@f2,f,c
  8676  0013AA  3617               	rlcf	___ftadd@f2+1,f,c
  8677  0013AC  3618               	rlcf	___ftadd@f2+2,f,c
  8678  0013AE  061D               	decf	___ftadd@exp2,f,c
  8679  0013B0  501E               	movf	___ftadd@exp1,w,c
  8680  0013B2  181D               	xorwf	___ftadd@exp2,w,c
  8681  0013B4  B4D8               	btfsc	status,2,c
  8682  0013B6  D00D               	goto	l4699
  8683  0013B8  061C               	decf	___ftadd@sign,f,c
  8684  0013BA  C01C  F019         	movff	___ftadd@sign,??___ftadd
  8685  0013BE  0E07               	movlw	7
  8686  0013C0  1619               	andwf	??___ftadd,f,c
  8687  0013C2  B4D8               	btfsc	status,2,c
  8688  0013C4  D006               	goto	l4699
  8689  0013C6  D7EF               	goto	u5240
  8690  0013C8                     l4697:
  8691  0013C8  90D8               	bcf	status,0,c
  8692  0013CA  3215               	rrcf	___ftadd@f1+2,f,c
  8693  0013CC  3214               	rrcf	___ftadd@f1+1,f,c
  8694  0013CE  3213               	rrcf	___ftadd@f1,f,c
  8695  0013D0  2A1E               	incf	___ftadd@exp1,f,c
  8696  0013D2                     l4699:
  8697  0013D2  501D               	movf	___ftadd@exp2,w,c
  8698  0013D4  181E               	xorwf	___ftadd@exp1,w,c
  8699  0013D6  B4D8               	btfsc	status,2,c
  8700  0013D8  D01F               	goto	u5310
  8701  0013DA  D7F6               	goto	l4697
  8702  0013DC                     l4701:
  8703  0013DC  501E               	movf	___ftadd@exp1,w,c
  8704  0013DE  5C1D               	subwf	___ftadd@exp2,w,c
  8705  0013E0  B0D8               	btfsc	status,0,c
  8706  0013E2  D01A               	goto	u5310
  8707  0013E4                     u5280:
  8708  0013E4  90D8               	bcf	status,0,c
  8709  0013E6  3613               	rlcf	___ftadd@f1,f,c
  8710  0013E8  3614               	rlcf	___ftadd@f1+1,f,c
  8711  0013EA  3615               	rlcf	___ftadd@f1+2,f,c
  8712  0013EC  061E               	decf	___ftadd@exp1,f,c
  8713  0013EE  501E               	movf	___ftadd@exp1,w,c
  8714  0013F0  181D               	xorwf	___ftadd@exp2,w,c
  8715  0013F2  B4D8               	btfsc	status,2,c
  8716  0013F4  D00D               	goto	l4711
  8717  0013F6  061C               	decf	___ftadd@sign,f,c
  8718  0013F8  C01C  F019         	movff	___ftadd@sign,??___ftadd
  8719  0013FC  0E07               	movlw	7
  8720  0013FE  1619               	andwf	??___ftadd,f,c
  8721  001400  B4D8               	btfsc	status,2,c
  8722  001402  D006               	goto	l4711
  8723  001404  D7EF               	goto	u5280
  8724  001406                     l4709:
  8725  001406  90D8               	bcf	status,0,c
  8726  001408  3218               	rrcf	___ftadd@f2+2,f,c
  8727  00140A  3217               	rrcf	___ftadd@f2+1,f,c
  8728  00140C  3216               	rrcf	___ftadd@f2,f,c
  8729  00140E  2A1D               	incf	___ftadd@exp2,f,c
  8730  001410                     l4711:
  8731  001410  501D               	movf	___ftadd@exp2,w,c
  8732  001412  181E               	xorwf	___ftadd@exp1,w,c
  8733  001414  A4D8               	btfss	status,2,c
  8734  001416  D7F7               	goto	l4709
  8735  001418                     u5310:
  8736  001418  AE1C               	btfss	___ftadd@sign,7,c
  8737  00141A  D00C               	goto	l1274
  8738  00141C  0EFF               	movlw	255
  8739  00141E  1A13               	xorwf	___ftadd@f1,f,c
  8740  001420  0EFF               	movlw	255
  8741  001422  1A14               	xorwf	___ftadd@f1+1,f,c
  8742  001424  0EFF               	movlw	255
  8743  001426  1A15               	xorwf	___ftadd@f1+2,f,c
  8744  001428  0E01               	movlw	1
  8745  00142A  2613               	addwf	___ftadd@f1,f,c
  8746  00142C  0E00               	movlw	0
  8747  00142E  2214               	addwfc	___ftadd@f1+1,f,c
  8748  001430  0E00               	movlw	0
  8749  001432  2215               	addwfc	___ftadd@f1+2,f,c
  8750  001434                     l1274:
  8751  001434  AC1C               	btfss	___ftadd@sign,6,c
  8752  001436  D00C               	goto	l4717
  8753  001438  0EFF               	movlw	255
  8754  00143A  1A16               	xorwf	___ftadd@f2,f,c
  8755  00143C  0EFF               	movlw	255
  8756  00143E  1A17               	xorwf	___ftadd@f2+1,f,c
  8757  001440  0EFF               	movlw	255
  8758  001442  1A18               	xorwf	___ftadd@f2+2,f,c
  8759  001444  0E01               	movlw	1
  8760  001446  2616               	addwf	___ftadd@f2,f,c
  8761  001448  0E00               	movlw	0
  8762  00144A  2217               	addwfc	___ftadd@f2+1,f,c
  8763  00144C  0E00               	movlw	0
  8764  00144E  2218               	addwfc	___ftadd@f2+2,f,c
  8765  001450                     l4717:
  8766  001450  0E00               	movlw	0
  8767  001452  6E1C               	movwf	___ftadd@sign,c
  8768  001454  5013               	movf	___ftadd@f1,w,c
  8769  001456  2616               	addwf	___ftadd@f2,f,c
  8770  001458  5014               	movf	___ftadd@f1+1,w,c
  8771  00145A  2217               	addwfc	___ftadd@f2+1,f,c
  8772  00145C  5015               	movf	___ftadd@f1+2,w,c
  8773  00145E  2218               	addwfc	___ftadd@f2+2,f,c
  8774  001460  AE18               	btfss	___ftadd@f2+2,7,c
  8775  001462  D00E               	goto	l4727
  8776  001464  0EFF               	movlw	255
  8777  001466  1A16               	xorwf	___ftadd@f2,f,c
  8778  001468  0EFF               	movlw	255
  8779  00146A  1A17               	xorwf	___ftadd@f2+1,f,c
  8780  00146C  0EFF               	movlw	255
  8781  00146E  1A18               	xorwf	___ftadd@f2+2,f,c
  8782  001470  0E01               	movlw	1
  8783  001472  2616               	addwf	___ftadd@f2,f,c
  8784  001474  0E00               	movlw	0
  8785  001476  2217               	addwfc	___ftadd@f2+1,f,c
  8786  001478  0E00               	movlw	0
  8787  00147A  2218               	addwfc	___ftadd@f2+2,f,c
  8788  00147C  0E01               	movlw	1
  8789  00147E  6E1C               	movwf	___ftadd@sign,c
  8790  001480                     l4727:
  8791  001480  C016  F00B         	movff	___ftadd@f2,___ftpack@arg
  8792  001484  C017  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  8793  001488  C018  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  8794  00148C  C01E  F00E         	movff	___ftadd@exp1,___ftpack@exp
  8795  001490  C01C  F00F         	movff	___ftadd@sign,___ftpack@sign
  8796  001494  EC99  F00D         	call	___ftpack	;wreg free
  8797  001498  C00B  F013         	movff	?___ftpack,?___ftadd
  8798  00149C  C00C  F014         	movff	?___ftpack+1,?___ftadd+1
  8799  0014A0  C00D  F015         	movff	?___ftpack+2,?___ftadd+2
  8800  0014A4  0012               	return		;funcret
  8801  0014A6                     __end_of___ftadd:
  8802                           	opt callstack 0
  8803                           
  8804 ;; *************** function ___ftpack *****************
  8805 ;; Defined at:
  8806 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  arg             3   10[COMRAM] unsigned um
  8809 ;;  exp             1   13[COMRAM] unsigned char 
  8810 ;;  sign            1   14[COMRAM] unsigned char 
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;		None
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  3   10[COMRAM] float 
  8815 ;; Registers used:
  8816 ;;		wreg, status,2, status,0
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8822 ;;      Params:         5       0       0       0       0       0       0       0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8824 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8825 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8826 ;;Total ram usage:        8 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:    5
  8829 ;; This function calls:
  8830 ;;		Nothing
  8831 ;; This function is called by:
  8832 ;;		___ftadd
  8833 ;;		___ftmul
  8834 ;;		___lwtoft
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text68
  8839  001B32                     __ptext68:
  8840                           	opt callstack 0
  8841  001B32                     ___ftpack:
  8842                           	opt callstack 20
  8843                           
  8844                           ;incstack = 0
  8845  001B32  500E               	movf	___ftpack@exp,w,c
  8846  001B34  B4D8               	btfsc	status,2,c
  8847  001B36  D005               	goto	u5010
  8848  001B38  500B               	movf	___ftpack@arg,w,c
  8849  001B3A  100C               	iorwf	___ftpack@arg+1,w,c
  8850  001B3C  100D               	iorwf	___ftpack@arg+2,w,c
  8851  001B3E  A4D8               	btfss	status,2,c
  8852  001B40  D00C               	goto	l4569
  8853  001B42                     u5010:
  8854  001B42  0E00               	movlw	0
  8855  001B44  6E0B               	movwf	?___ftpack,c
  8856  001B46  0E00               	movlw	0
  8857  001B48  6E0C               	movwf	?___ftpack+1,c
  8858  001B4A  0E00               	movlw	0
  8859  001B4C  6E0D               	movwf	?___ftpack+2,c
  8860  001B4E  0012               	return	
  8861  001B50                     l4567:
  8862  001B50  2A0E               	incf	___ftpack@exp,f,c
  8863  001B52  90D8               	bcf	status,0,c
  8864  001B54  320D               	rrcf	___ftpack@arg+2,f,c
  8865  001B56  320C               	rrcf	___ftpack@arg+1,f,c
  8866  001B58  320B               	rrcf	___ftpack@arg,f,c
  8867  001B5A                     l4569:
  8868  001B5A  0E00               	movlw	0
  8869  001B5C  140B               	andwf	___ftpack@arg,w,c
  8870  001B5E  6E10               	movwf	??___ftpack& (0+255),c
  8871  001B60  0E00               	movlw	0
  8872  001B62  140C               	andwf	___ftpack@arg+1,w,c
  8873  001B64  6E11               	movwf	(??___ftpack+1)& (0+255),c
  8874  001B66  0EFE               	movlw	254
  8875  001B68  140D               	andwf	___ftpack@arg+2,w,c
  8876  001B6A  6E12               	movwf	(??___ftpack+2)& (0+255),c
  8877  001B6C  5010               	movf	??___ftpack,w,c
  8878  001B6E  1011               	iorwf	??___ftpack+1,w,c
  8879  001B70  1012               	iorwf	??___ftpack+2,w,c
  8880  001B72  B4D8               	btfsc	status,2,c
  8881  001B74  D00C               	goto	l4575
  8882  001B76  D7EC               	goto	l4567
  8883  001B78                     l4571:
  8884  001B78  2A0E               	incf	___ftpack@exp,f,c
  8885  001B7A  0E01               	movlw	1
  8886  001B7C  260B               	addwf	___ftpack@arg,f,c
  8887  001B7E  0E00               	movlw	0
  8888  001B80  220C               	addwfc	___ftpack@arg+1,f,c
  8889  001B82  0E00               	movlw	0
  8890  001B84  220D               	addwfc	___ftpack@arg+2,f,c
  8891  001B86  90D8               	bcf	status,0,c
  8892  001B88  320D               	rrcf	___ftpack@arg+2,f,c
  8893  001B8A  320C               	rrcf	___ftpack@arg+1,f,c
  8894  001B8C  320B               	rrcf	___ftpack@arg,f,c
  8895  001B8E                     l4575:
  8896  001B8E  0E00               	movlw	0
  8897  001B90  140B               	andwf	___ftpack@arg,w,c
  8898  001B92  6E10               	movwf	??___ftpack& (0+255),c
  8899  001B94  0E00               	movlw	0
  8900  001B96  140C               	andwf	___ftpack@arg+1,w,c
  8901  001B98  6E11               	movwf	(??___ftpack+1)& (0+255),c
  8902  001B9A  0EFF               	movlw	255
  8903  001B9C  140D               	andwf	___ftpack@arg+2,w,c
  8904  001B9E  6E12               	movwf	(??___ftpack+2)& (0+255),c
  8905  001BA0  5010               	movf	??___ftpack,w,c
  8906  001BA2  1011               	iorwf	??___ftpack+1,w,c
  8907  001BA4  1012               	iorwf	??___ftpack+2,w,c
  8908  001BA6  B4D8               	btfsc	status,2,c
  8909  001BA8  D006               	goto	l4579
  8910  001BAA  D7E6               	goto	l4571
  8911  001BAC                     l4577:
  8912  001BAC  060E               	decf	___ftpack@exp,f,c
  8913  001BAE  90D8               	bcf	status,0,c
  8914  001BB0  360B               	rlcf	___ftpack@arg,f,c
  8915  001BB2  360C               	rlcf	___ftpack@arg+1,f,c
  8916  001BB4  360D               	rlcf	___ftpack@arg+2,f,c
  8917  001BB6                     l4579:
  8918  001BB6  BE0C               	btfsc	___ftpack@arg+1,7,c
  8919  001BB8  D003               	goto	u5050
  8920  001BBA  0E02               	movlw	2
  8921  001BBC  600E               	cpfslt	___ftpack@exp,c
  8922  001BBE  D7F6               	goto	l4577
  8923  001BC0                     u5050:
  8924  001BC0  A00E               	btfss	___ftpack@exp,0,c
  8925  001BC2  9E0C               	bcf	___ftpack@arg+1,7,c
  8926  001BC4  90D8               	bcf	status,0,c
  8927  001BC6  320E               	rrcf	___ftpack@exp,f,c
  8928  001BC8  500E               	movf	___ftpack@exp,w,c
  8929  001BCA  120D               	iorwf	___ftpack@arg+2,f,c
  8930  001BCC  500F               	movf	___ftpack@sign,w,c
  8931  001BCE  A4D8               	btfss	status,2,c
  8932  001BD0  8E0D               	bsf	___ftpack@arg+2,7,c
  8933  001BD2  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  8934  001BD6  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  8935  001BDA  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  8936  001BDE  0012               	return		;funcret
  8937  001BE0                     __end_of___ftpack:
  8938                           	opt callstack 0
  8939                           
  8940 ;; *************** function _disp7s_modeDisp_off *****************
  8941 ;; Defined at:
  8942 ;;		line 156 in file "display.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;		None
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;		None
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1    wreg      void 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8956 ;;      Params:         0       0       0       0       0       0       0       0       0
  8957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8960 ;;Total ram usage:        0 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; Hardware stack levels required when called:    6
  8963 ;; This function calls:
  8964 ;;		_disp7s_off
  8965 ;; This function is called by:
  8966 ;;		_autoMode_init
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text69
  8971  0028C8                     __ptext69:
  8972                           	opt callstack 0
  8973  0028C8                     _disp7s_modeDisp_off:
  8974                           	opt callstack 23
  8975                           
  8976                           ;display.c: 158: disp7s_off(pulsonic.disp7s.mode, 2);
  8977                           
  8978                           ;incstack = 0
  8979  0028C8  0E3F               	movlw	low (_pulsonic+63)
  8980  0028CA  6E0B               	movwf	disp7s_off@pDisp,c
  8981  0028CC  0E01               	movlw	high (_pulsonic+63)
  8982  0028CE  6E0C               	movwf	disp7s_off@pDisp+1,c
  8983  0028D0  0E02               	movlw	2
  8984  0028D2  6E0D               	movwf	disp7s_off@NUM_OF_DISP,c
  8985  0028D4  EC26  F013         	call	_disp7s_off	;wreg free
  8986  0028D8  0012               	return		;funcret
  8987  0028DA                     __end_of_disp7s_modeDisp_off:
  8988                           	opt callstack 0
  8989                           
  8990 ;; *************** function _disp7s_off *****************
  8991 ;; Defined at:
  8992 ;;		line 150 in file "display.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  pDisp           2   10[COMRAM] PTR unsigned char 
  8995 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  8996 ;;  NUM_OF_DISP     1   12[COMRAM] char 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  i               1   15[COMRAM] char 
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  1    wreg      void 
  9001 ;; Registers used:
  9002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9008 ;;      Params:         3       0       0       0       0       0       0       0       0
  9009 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9010 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9011 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9012 ;;Total ram usage:        6 bytes
  9013 ;; Hardware stack levels used:    1
  9014 ;; Hardware stack levels required when called:    5
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_disp7s_modeDisp_off
  9019 ;;		_disp7s_write_f
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text70
  9024  00264C                     __ptext70:
  9025                           	opt callstack 0
  9026  00264C                     _disp7s_off:
  9027                           	opt callstack 21
  9028                           
  9029                           ;display.c: 152: int8_t i;;display.c: 153: for (i=0; i<NUM_OF_DISP; i++)
  9030                           
  9031                           ;incstack = 0
  9032  00264C  0E00               	movlw	0
  9033  00264E  6E10               	movwf	disp7s_off@i,c
  9034  002650  D013               	goto	l4631
  9035  002652                     l4627:
  9036                           
  9037                           ;display.c: 154: {pDisp[i] = DISP7S_CHARS[OFF];}
  9038  002652  0E0F               	movlw	low _DISP7S_CHARS
  9039  002654  6EF6               	movwf	tblptrl,c
  9040  002656                     	if	1	;There is more than 1 active tblptr byte
  9041  002656  0E08               	movlw	high _DISP7S_CHARS
  9042  002658  6EF7               	movwf	tblptrh,c
  9043  00265A                     	endif
  9044  00265A                     	if	0	;There are less than 3 active tblptr bytes
  9045  00265A                     	endif
  9046  00265A  C010  F00E         	movff	disp7s_off@i,??_disp7s_off
  9047  00265E  6A0F               	clrf	(??_disp7s_off+1)& (0+255),c
  9048  002660  BE0E               	btfsc	??_disp7s_off& (0+255),7,c
  9049  002662  060F               	decf	(??_disp7s_off+1)& (0+255),f,c
  9050  002664  500E               	movf	??_disp7s_off,w,c
  9051  002666  240B               	addwf	disp7s_off@pDisp,w,c
  9052  002668  6ED9               	movwf	fsr2l,c
  9053  00266A  500F               	movf	??_disp7s_off+1,w,c
  9054  00266C  200C               	addwfc	disp7s_off@pDisp+1,w,c
  9055  00266E  6EDA               	movwf	fsr2h,c
  9056  002670  0008               	tblrd		*
  9057  002672  CFF5 FFDF          	movff	tablat,indf2
  9058  002676  2A10               	incf	disp7s_off@i,f,c
  9059  002678                     l4631:
  9060  002678  5010               	movf	disp7s_off@i,w,c
  9061  00267A  0A80               	xorlw	128
  9062  00267C  6E0E               	movwf	??_disp7s_off& (0+255),c
  9063  00267E  500D               	movf	disp7s_off@NUM_OF_DISP,w,c
  9064  002680  0A80               	xorlw	128
  9065  002682  5C0E               	subwf	??_disp7s_off& (0+255),w,c
  9066  002684  B0D8               	btfsc	status,0,c
  9067  002686  0012               	return	
  9068  002688  D7E4               	goto	l4627
  9069  00268A                     __end_of_disp7s_off:
  9070                           	opt callstack 0
  9071                           
  9072 ;; *************** function _INTERRUPCION *****************
  9073 ;; Defined at:
  9074 ;;		line 242 in file "main.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;		None
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9088 ;;      Params:         0       0       0       0       0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9090 ;;      Temps:          6       0       0       0       0       0       0       0       0
  9091 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9092 ;;Total ram usage:        6 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    4
  9095 ;; This function calls:
  9096 ;;		_mpap_job
  9097 ;; This function is called by:
  9098 ;;		Interrupt level 2
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	intcode
  9103  000008                     __pintcode:
  9104                           	opt callstack 0
  9105  000008                     _INTERRUPCION:
  9106                           	opt callstack 19
  9107                           
  9108                           ;incstack = 0
  9109  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9110  00000A  ED12  F012         	call	int_func,f	;refresh shadow registers
  9111                           
  9112                           	psect	intcode_body
  9113  002424                     __pintcode_body:
  9114                           	opt callstack 19
  9115  002424                     int_func:
  9116                           	opt callstack 19
  9117  002424  0006               	pop		; remove dummy address from shadow register refresh
  9118  002426  CFFA F005          	movff	pclath,??_INTERRUPCION
  9119  00242A  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  9120  00242E  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  9121  002432  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  9122  002436  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  9123  00243A  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  9124                           
  9125                           ;main.c: 244: if (TMR0IF)
  9126  00243E  A4F2               	btfss	4082,2,c	;volatile
  9127  002440  D008               	goto	i2l147
  9128                           
  9129                           ;main.c: 245: {;main.c: 246: isr_flag.f1ms = 1;
  9130  002442  0100               	movlb	0	; () banked
  9131  002444  81CC               	bsf	_isr_flag& (0+255),0,b	;volatile
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;main.c: 247: mpap_job();
  9135  002446  EC80  F012         	call	_mpap_job	;wreg free
  9136                           
  9137                           ;main.c: 249: TMR0IF = 0;
  9138  00244A  94F2               	bcf	4082,2,c	;volatile
  9139                           
  9140                           ;main.c: 250: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  9141  00244C  68D7               	setf	4055,c	;volatile
  9142                           
  9143                           ;main.c: 251: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  9144  00244E  0ED1               	movlw	209
  9145  002450  6ED6               	movwf	4054,c	;volatile
  9146  002452                     i2l147:
  9147  002452  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  9148  002456  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  9149  00245A  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  9150  00245E  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  9151  002462  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  9152  002466  C005  FFFA         	movff	??_INTERRUPCION,pclath
  9153  00246A  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9154  00246C  0011               	retfie		f
  9155  00246E                     __end_of_INTERRUPCION:
  9156                           	opt callstack 0
  9157                           
  9158 ;; *************** function _mpap_job *****************
  9159 ;; Defined at:
  9160 ;;		line 139 in file "mpap.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;		None
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  cod_ret         1    0        char 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      char 
  9167 ;; Registers used:
  9168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9169 ;; Tracked objects:
  9170 ;;		On entry : 3F/0
  9171 ;;		On exit  : 3E/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9174 ;;      Params:         0       0       0       0       0       0       0       0       0
  9175 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9177 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9178 ;;Total ram usage:        1 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; Hardware stack levels required when called:    3
  9181 ;; This function calls:
  9182 ;;		__mpap_off
  9183 ;;		_mpap_homming
  9184 ;;		_mpap_normal_mode
  9185 ;; This function is called by:
  9186 ;;		_INTERRUPCION
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           	psect	text72
  9191  002500                     __ptext72:
  9192                           	opt callstack 0
  9193  002500                     _mpap_job:
  9194                           	opt callstack 19
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;mpap.c: 141: int8_t cod_ret;;mpap.c: 143: if (mpap.mode == MPAP_HOMMING_MODE)
  9198                           
  9199                           ;incstack = 0
  9200  002500  0E02               	movlw	2
  9201  002502  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  9202  002504  A4D8               	btfss	status,2,c
  9203  002506  D003               	goto	i2l4363
  9204                           
  9205                           ; BSR set to: 0
  9206  002508  EC33  F011         	call	_mpap_homming	;wreg free
  9207  00250C  0012               	return	
  9208  00250E                     i2l4363:
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;mpap.c: 146: else if (mpap.mode == MPAP_NORMAL_MODE)
  9212  00250E  0E03               	movlw	3
  9213  002510  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  9214  002512  A4D8               	btfss	status,2,c
  9215  002514  D003               	goto	i2l4367
  9216                           
  9217                           ; BSR set to: 0
  9218  002516  EC37  F012         	call	_mpap_normal_mode	;wreg free
  9219  00251A  0012               	return	
  9220  00251C                     i2l4367:
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;mpap.c: 149: else if (mpap.mode == MPAP_STALL_MODE)
  9224  00251C  05B7               	decf	(_mpap+7)& (0+255),w,b	;volatile
  9225  00251E  A4D8               	btfss	status,2,c
  9226  002520  0012               	return	
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;mpap.c: 150: {;mpap.c: 151: mpap.numSteps_tomove = 0x00;
  9230  002522  0E00               	movlw	0
  9231  002524  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
  9232  002526  0E00               	movlw	0
  9233  002528  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;mpap.c: 152: mpap_off();
  9237  00252A  D801               	call	i2u478_48
  9238  00252C  D00A               	goto	i2u478_49
  9239  00252E                     i2u478_48:
  9240  00252E  0005               	push	
  9241  002530  6EFA               	movwf	pclath,c
  9242  002532  51EC               	movf	_mpap_off& (0+255),w,b
  9243  002534  6EFD               	movwf	tosl,c
  9244  002536  51ED               	movf	(_mpap_off+1)& (0+255),w,b
  9245  002538  6EFE               	movwf	tosh,c
  9246  00253A  50F8               	movf	tblptru,w,c
  9247  00253C  6EFF               	movwf	tosu,c
  9248  00253E  50FA               	movf	pclath,w,c
  9249  002540  0012               	return		;indir
  9250  002542                     i2u478_49:
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;mpap.c: 154: mpap.mode = MPAP_IDLE_MODE;
  9254  002542  0E00               	movlw	0
  9255  002544  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  9256  002546  0012               	return	
  9257  002548                     __end_of_mpap_job:
  9258                           	opt callstack 0
  9259                           
  9260 ;; *************** function _mpap_normal_mode *****************
  9261 ;; Defined at:
  9262 ;;		line 119 in file "mpap.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;		None
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;  cod_ret         1    1[COMRAM] char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  1    wreg      char 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 3F/0
  9273 ;;		On exit  : 3F/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9276 ;;      Params:         0       0       0       0       0       0       0       0       0
  9277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9279 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9280 ;;Total ram usage:        1 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:    2
  9283 ;; This function calls:
  9284 ;;		_mpap_do1step
  9285 ;; This function is called by:
  9286 ;;		_mpap_job
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text73
  9291  00246E                     __ptext73:
  9292                           	opt callstack 0
  9293  00246E                     _mpap_normal_mode:
  9294                           	opt callstack 19
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;mpap.c: 121: int8_t cod_ret = 0;
  9298                           
  9299                           ;incstack = 0
  9300  00246E  0E00               	movlw	0
  9301  002470  6E02               	movwf	mpap_normal_mode@cod_ret,c
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;mpap.c: 122: if (mpap.numSteps_tomove!=0)
  9305  002472  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  9306  002474  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
  9307  002476  B4D8               	btfsc	status,2,c
  9308  002478  D01D               	goto	i2l464
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;mpap.c: 123: {;mpap.c: 124: mpap_do1step(mpap.KI);
  9312  00247A  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9313  00247C  ECC5  F012         	call	_mpap_do1step
  9314                           
  9315                           ;mpap.c: 126: mpap.counter_steps+= mpap.KI;
  9316  002480  0100               	movlb	0	; () banked
  9317  002482  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9318  002484  27B2               	addwf	(_mpap+2)& (0+255),f,b	;volatile
  9319  002486  0E00               	movlw	0
  9320  002488  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
  9321  00248A  0EFF               	movlw	255
  9322  00248C  23B3               	addwfc	(_mpap+3)& (0+255),f,b	;volatile
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;mpap.c: 128: mpap.numSteps_current+= mpap.KI;
  9326  00248E  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9327  002490  27B0               	addwf	_mpap& (0+255),f,b	;volatile
  9328  002492  0E00               	movlw	0
  9329  002494  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
  9330  002496  0EFF               	movlw	255
  9331  002498  23B1               	addwfc	(_mpap+1)& (0+255),f,b	;volatile
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;mpap.c: 130: if ( mpap.counter_steps== mpap.numSteps_tomove)
  9335  00249A  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  9336  00249C  19B2               	xorwf	(_mpap+2)& (0+255),w,b	;volatile
  9337  00249E  E10A               	bnz	i2l464
  9338  0024A0  51B5               	movf	(_mpap+5)& (0+255),w,b	;volatile
  9339  0024A2  19B3               	xorwf	(_mpap+3)& (0+255),w,b	;volatile
  9340  0024A4  A4D8               	btfss	status,2,c
  9341  0024A6  D006               	goto	i2l464
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;mpap.c: 131: {;mpap.c: 132: mpap.numSteps_tomove = 0;
  9345  0024A8  0E00               	movlw	0
  9346  0024AA  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
  9347  0024AC  0E00               	movlw	0
  9348  0024AE  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
  9349                           
  9350                           ;mpap.c: 133: cod_ret = 1;
  9351  0024B0  0E01               	movlw	1
  9352  0024B2  6E02               	movwf	mpap_normal_mode@cod_ret,c
  9353  0024B4                     i2l464:
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;mpap.c: 134: };mpap.c: 135: };mpap.c: 136: return cod_ret;
  9357  0024B4  5002               	movf	mpap_normal_mode@cod_ret,w,c
  9358                           
  9359                           ; BSR set to: 0
  9360  0024B6  0012               	return		;funcret
  9361  0024B8                     __end_of_mpap_normal_mode:
  9362                           	opt callstack 0
  9363                           
  9364 ;; *************** function _mpap_homming *****************
  9365 ;; Defined at:
  9366 ;;		line 94 in file "mpap.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;		None
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;  cod_ret         1    2[COMRAM] char 
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      char 
  9373 ;; Registers used:
  9374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9375 ;; Tracked objects:
  9376 ;;		On entry : 3F/0
  9377 ;;		On exit  : 3E/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9380 ;;      Params:         0       0       0       0       0       0       0       0       0
  9381 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9382 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9383 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9384 ;;Total ram usage:        2 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    2
  9387 ;; This function calls:
  9388 ;;		_mpap_do1step
  9389 ;; This function is called by:
  9390 ;;		_mpap_job
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text74
  9395  002266                     __ptext74:
  9396                           	opt callstack 0
  9397  002266                     _mpap_homming:
  9398                           	opt callstack 19
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;mpap.c: 96: int8_t cod_ret = 0;
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;incstack = 0
  9405  002266  0E00               	movlw	0
  9406  002268  6E03               	movwf	mpap_homming@cod_ret,c
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;mpap.c: 97: if (mpap.numSteps_tomove!=0)
  9410  00226A  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  9411  00226C  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
  9412  00226E  B4D8               	btfsc	status,2,c
  9413  002270  D029               	goto	i2l458
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;mpap.c: 98: {;mpap.c: 99: mpap_do1step(mpap.KI);
  9417  002272  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9418  002274  ECC5  F012         	call	_mpap_do1step
  9419                           
  9420                           ;mpap.c: 101: mpap.counter_steps+= mpap.KI;
  9421  002278  0100               	movlb	0	; () banked
  9422  00227A  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9423  00227C  27B2               	addwf	(_mpap+2)& (0+255),f,b	;volatile
  9424  00227E  0E00               	movlw	0
  9425  002280  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
  9426  002282  0EFF               	movlw	255
  9427  002284  23B3               	addwfc	(_mpap+3)& (0+255),f,b	;volatile
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;mpap.c: 103: if (((PORTE & (1<<1))>>1) == 0)
  9431  002286  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  9432  00228A  90D8               	bcf	status,0,c
  9433  00228C  3202               	rrcf	??_mpap_homming,f,c
  9434  00228E  B002               	btfsc	??_mpap_homming,0,c
  9435  002290  D00A               	goto	i2l3819
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;mpap.c: 104: {;mpap.c: 105: mpap.numSteps_tomove = 0x0000;
  9439  002292  0E00               	movlw	0
  9440  002294  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
  9441  002296  0E00               	movlw	0
  9442  002298  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
  9443                           
  9444                           ;mpap.c: 106: mpap.numSteps_current = 0x0000;
  9445  00229A  0E00               	movlw	0
  9446  00229C  6FB1               	movwf	(_mpap+1)& (0+255),b	;volatile
  9447  00229E  0E00               	movlw	0
  9448  0022A0  6FB0               	movwf	_mpap& (0+255),b	;volatile
  9449                           
  9450                           ;mpap.c: 107: cod_ret = 1;
  9451  0022A2  0E01               	movlw	1
  9452  0022A4  6E03               	movwf	mpap_homming@cod_ret,c
  9453  0022A6                     i2l3819:
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;mpap.c: 108: };mpap.c: 109: if ( mpap.counter_steps == mpap.numSteps_tomove)
  9457  0022A6  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  9458  0022A8  19B2               	xorwf	(_mpap+2)& (0+255),w,b	;volatile
  9459  0022AA  E10C               	bnz	i2l458
  9460  0022AC  51B5               	movf	(_mpap+5)& (0+255),w,b	;volatile
  9461  0022AE  19B3               	xorwf	(_mpap+3)& (0+255),w,b	;volatile
  9462  0022B0  A4D8               	btfss	status,2,c
  9463  0022B2  D008               	goto	i2l458
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;mpap.c: 110: {;mpap.c: 111: mpap.numSteps_tomove = 0x0000;
  9467  0022B4  0E00               	movlw	0
  9468  0022B6  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
  9469  0022B8  0E00               	movlw	0
  9470  0022BA  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
  9471                           
  9472                           ;mpap.c: 112: cod_ret = 1;
  9473  0022BC  0E01               	movlw	1
  9474  0022BE  6E03               	movwf	mpap_homming@cod_ret,c
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;mpap.c: 113: pulsonic.errors.flag.mpap_home_sensor = 1;
  9478  0022C0  0101               	movlb	1	; () banked
  9479  0022C2  813B               	bsf	(_pulsonic+59)& (0+255),0,b
  9480  0022C4                     i2l458:
  9481                           
  9482                           ;mpap.c: 114: };mpap.c: 115: };mpap.c: 116: return cod_ret;
  9483  0022C4  5003               	movf	mpap_homming@cod_ret,w,c
  9484  0022C6  0012               	return		;funcret
  9485  0022C8                     __end_of_mpap_homming:
  9486                           	opt callstack 0
  9487                           
  9488 ;; *************** function _mpap_do1step *****************
  9489 ;; Defined at:
  9490 ;;		line 75 in file "mpap.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  KI              1    wreg     char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;  KI              1    0[COMRAM] char 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 3F/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0
  9505 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9507 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9508 ;;Total ram usage:        1 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    1
  9511 ;; This function calls:
  9512 ;;		__mpap_step1
  9513 ;;		__mpap_step2
  9514 ;;		__mpap_step3
  9515 ;;		__mpap_step4
  9516 ;; This function is called by:
  9517 ;;		_mpap_homming
  9518 ;;		_mpap_normal_mode
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text75
  9523  00258A                     __ptext75:
  9524                           	opt callstack 0
  9525  00258A                     _mpap_do1step:
  9526                           	opt callstack 19
  9527                           
  9528                           ;incstack = 0
  9529                           ;mpap_do1step@KI stored from wreg
  9530  00258A  6E01               	movwf	mpap_do1step@KI,c
  9531                           
  9532                           ;mpap.c: 77: static int8_t i = -1;;mpap.c: 79: i= i + KI;
  9533  00258C  5052               	movf	mpap_do1step@i,w,c
  9534  00258E  2401               	addwf	mpap_do1step@KI,w,c
  9535  002590  6E52               	movwf	mpap_do1step@i,c
  9536                           
  9537                           ;mpap.c: 80: if (i>3){i=0;}
  9538  002592  5052               	movf	mpap_do1step@i,w,c
  9539  002594  0A80               	xorlw	128
  9540  002596  0F7C               	addlw	-132
  9541  002598  A0D8               	btfss	status,0,c
  9542  00259A  D002               	goto	i2l3601
  9543  00259C  0E00               	movlw	0
  9544  00259E  6E52               	movwf	mpap_do1step@i,c
  9545  0025A0                     i2l3601:
  9546                           
  9547                           ;mpap.c: 81: if (i<0){i=3;}
  9548  0025A0  AE52               	btfss	mpap_do1step@i,7,c
  9549  0025A2  D002               	goto	i2l3605
  9550  0025A4  0E03               	movlw	3
  9551  0025A6  6E52               	movwf	mpap_do1step@i,c
  9552  0025A8                     i2l3605:
  9553                           
  9554                           ;mpap.c: 83: mpap_step[i]();
  9555  0025A8  5052               	movf	mpap_do1step@i,w,c
  9556  0025AA  0D02               	mullw	2
  9557  0025AC  50F3               	movf	prodl,w,c
  9558  0025AE  0FE1               	addlw	low _mpap_step
  9559  0025B0  6ED9               	movwf	fsr2l,c
  9560  0025B2  6ADA               	clrf	fsr2h,c
  9561  0025B4  D801               	call	i2u324_48
  9562  0025B6  0012               	return	
  9563  0025B8                     i2u324_48:
  9564  0025B8  0005               	push	
  9565  0025BA  6EFA               	movwf	pclath,c
  9566  0025BC  50DE               	movf	postinc2,w,c
  9567  0025BE  6EFD               	movwf	tosl,c
  9568  0025C0  50DE               	movf	postinc2,w,c
  9569  0025C2  6EFE               	movwf	tosh,c
  9570  0025C4  50F8               	movf	tblptru,w,c
  9571  0025C6  6EFF               	movwf	tosu,c
  9572  0025C8  50FA               	movf	pclath,w,c
  9573  0025CA  0012               	return		;indir
  9574  0025CC                     __end_of_mpap_do1step:
  9575                           	opt callstack 0
  9576                           
  9577 ;; *************** function __mpap_step3 *****************
  9578 ;; Defined at:
  9579 ;;		line 21 in file "mpap.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;		None
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		status,2, status,0
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9593 ;;      Params:         0       0       0       0       0       0       0       0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9596 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9597 ;;Total ram usage:        0 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_mpap_do1step
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text76
  9607  002954                     __ptext76:
  9608                           	opt callstack 0
  9609  002954                     __mpap_step3:
  9610                           	opt callstack 19
  9611                           
  9612                           ;incstack = 0
  9613                           ;mpap.c: 23: do{LATD &= ~(1<<0);}while(0);
  9614  002954  908C               	bcf	3980,0,c	;volatile
  9615                           
  9616                           ;mpap.c: 24: do{LATD |= 1<<1;}while(0);
  9617  002956  828C               	bsf	3980,1,c	;volatile
  9618                           
  9619                           ;mpap.c: 25: do{LATD &= ~(1<<2);}while(0);
  9620  002958  948C               	bcf	3980,2,c	;volatile
  9621                           
  9622                           ;mpap.c: 26: do{LATD &= ~(1<<3);}while(0);
  9623  00295A  968C               	bcf	3980,3,c	;volatile
  9624  00295C  0012               	return		;funcret
  9625  00295E                     __end_of__mpap_step3:
  9626                           	opt callstack 0
  9627                           
  9628 ;; *************** function __mpap_step2 *****************
  9629 ;; Defined at:
  9630 ;;		line 13 in file "mpap.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;		None
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		status,2, status,0
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9644 ;;      Params:         0       0       0       0       0       0       0       0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9647 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9648 ;;Total ram usage:        0 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_mpap_do1step
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text77
  9658  00295E                     __ptext77:
  9659                           	opt callstack 0
  9660  00295E                     __mpap_step2:
  9661                           	opt callstack 19
  9662                           
  9663                           ;incstack = 0
  9664                           ;mpap.c: 15: do{LATD &= ~(1<<0);}while(0);
  9665  00295E  908C               	bcf	3980,0,c	;volatile
  9666                           
  9667                           ;mpap.c: 16: do{LATD &= ~(1<<1);}while(0);
  9668  002960  928C               	bcf	3980,1,c	;volatile
  9669                           
  9670                           ;mpap.c: 17: do{LATD |= 1<<2;}while(0);
  9671  002962  848C               	bsf	3980,2,c	;volatile
  9672                           
  9673                           ;mpap.c: 18: do{LATD &= ~(1<<3);}while(0);
  9674  002964  968C               	bcf	3980,3,c	;volatile
  9675  002966  0012               	return		;funcret
  9676  002968                     __end_of__mpap_step2:
  9677                           	opt callstack 0
  9678                           
  9679 ;; *************** function __mpap_step1 *****************
  9680 ;; Defined at:
  9681 ;;		line 5 in file "mpap.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;		None
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      void 
  9688 ;; Registers used:
  9689 ;;		status,2, status,0
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9698 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9699 ;;Total ram usage:        0 bytes
  9700 ;; Hardware stack levels used:    1
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_mpap_do1step
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text78
  9709  002968                     __ptext78:
  9710                           	opt callstack 0
  9711  002968                     __mpap_step1:
  9712                           	opt callstack 19
  9713                           
  9714                           ;incstack = 0
  9715                           ;mpap.c: 7: do{LATD &= ~(1<<0);}while(0);
  9716  002968  908C               	bcf	3980,0,c	;volatile
  9717                           
  9718                           ;mpap.c: 8: do{LATD &= ~(1<<1);}while(0);
  9719  00296A  928C               	bcf	3980,1,c	;volatile
  9720                           
  9721                           ;mpap.c: 9: do{LATD &= ~(1<<2);}while(0);
  9722  00296C  948C               	bcf	3980,2,c	;volatile
  9723                           
  9724                           ;mpap.c: 10: do{LATD |= 1<<3;}while(0);
  9725  00296E  868C               	bsf	3980,3,c	;volatile
  9726  002970  0012               	return		;funcret
  9727  002972                     __end_of__mpap_step1:
  9728                           	opt callstack 0
  9729                           
  9730 ;; *************** function __mpap_step4 *****************
  9731 ;; Defined at:
  9732 ;;		line 29 in file "mpap.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;		None
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;		None
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		status,2, status,0
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9749 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9750 ;;Total ram usage:        0 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; This function calls:
  9753 ;;		Nothing
  9754 ;; This function is called by:
  9755 ;;		_mpap_do1step
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text79
  9760  002972                     __ptext79:
  9761                           	opt callstack 0
  9762  002972                     __mpap_step4:
  9763                           	opt callstack 19
  9764                           
  9765                           ;incstack = 0
  9766                           ;mpap.c: 31: do{LATD |= 1<<0;}while(0);
  9767  002972  808C               	bsf	3980,0,c	;volatile
  9768                           
  9769                           ;mpap.c: 32: do{LATD &= ~(1<<1);}while(0);
  9770  002974  928C               	bcf	3980,1,c	;volatile
  9771                           
  9772                           ;mpap.c: 33: do{LATD &= ~(1<<2);}while(0);
  9773  002976  948C               	bcf	3980,2,c	;volatile
  9774                           
  9775                           ;mpap.c: 34: do{LATD &= ~(1<<3);}while(0);
  9776  002978  968C               	bcf	3980,3,c	;volatile
  9777  00297A  0012               	return		;funcret
  9778  00297C                     __end_of__mpap_step4:
  9779                           	opt callstack 0
  9780                           
  9781 ;; *************** function __mpap_off *****************
  9782 ;; Defined at:
  9783 ;;		line 43 in file "mpap.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		status,2, status,0
  9792 ;; Tracked objects:
  9793 ;;		On entry : 3F/0
  9794 ;;		On exit  : 3F/0
  9795 ;;		Unchanged: 3F/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9797 ;;      Params:         0       0       0       0       0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9800 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; This function calls:
  9804 ;;		Nothing
  9805 ;; This function is called by:
  9806 ;;		_mpap_job
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text80
  9811  00297C                     __ptext80:
  9812                           	opt callstack 0
  9813  00297C                     __mpap_off:
  9814                           	opt callstack 21
  9815                           
  9816                           ; BSR set to: 0
  9817                           
  9818                           ; BSR set to: 0
  9819                           
  9820                           ;incstack = 0
  9821                           ;mpap.c: 45: do{LATD &= ~(1<<0);}while(0);
  9822  00297C  908C               	bcf	3980,0,c	;volatile
  9823                           
  9824                           ; BSR set to: 0
  9825                           
  9826                           ;mpap.c: 46: do{LATD &= ~(1<<1);}while(0);
  9827  00297E  928C               	bcf	3980,1,c	;volatile
  9828                           
  9829                           ; BSR set to: 0
  9830                           
  9831                           ;mpap.c: 47: do{LATD &= ~(1<<2);}while(0);
  9832  002980  948C               	bcf	3980,2,c	;volatile
  9833                           
  9834                           ; BSR set to: 0
  9835                           
  9836                           ;mpap.c: 48: do{LATD &= ~(1<<3);}while(0);
  9837  002982  968C               	bcf	3980,3,c	;volatile
  9838                           
  9839                           ; BSR set to: 0
  9840  002984  0012               	return		;funcret
  9841  002986                     __end_of__mpap_off:
  9842                           	opt callstack 0
  9843                           
  9844                           	psect	text81
  9845  000000                     __ptext81:
  9846                           	opt callstack 0
  9847                           
  9848                           	psect	rparam
  9849  0000                     
  9850                           	psect	temp
  9851  000053                     btemp:
  9852                           	opt callstack 0
  9853  000053                     	ds	1
  9854  0000                     int$flags	set	btemp
  9855  0000                     wtemp8	set	btemp+1
  9856  0000                     ttemp5	set	btemp+1
  9857  0000                     ttemp6	set	btemp+4
  9858  0000                     ttemp7	set	btemp+8
  9859                           tosu	equ	0xFFF
  9860                           tosh	equ	0xFFE
  9861                           tosl	equ	0xFFD
  9862                           stkptr	equ	0xFFC
  9863                           pclatu	equ	0xFFB
  9864                           pclath	equ	0xFFA
  9865                           pcl	equ	0xFF9
  9866                           tblptru	equ	0xFF8
  9867                           tblptrh	equ	0xFF7
  9868                           tblptrl	equ	0xFF6
  9869                           tablat	equ	0xFF5
  9870                           prodh	equ	0xFF4
  9871                           prodl	equ	0xFF3
  9872                           indf0	equ	0xFEF
  9873                           postinc0	equ	0xFEE
  9874                           postdec0	equ	0xFED
  9875                           preinc0	equ	0xFEC
  9876                           plusw0	equ	0xFEB
  9877                           fsr0h	equ	0xFEA
  9878                           fsr0l	equ	0xFE9
  9879                           wreg	equ	0xFE8
  9880                           indf1	equ	0xFE7
  9881                           postinc1	equ	0xFE6
  9882                           postdec1	equ	0xFE5
  9883                           preinc1	equ	0xFE4
  9884                           plusw1	equ	0xFE3
  9885                           fsr1h	equ	0xFE2
  9886                           fsr1l	equ	0xFE1
  9887                           bsr	equ	0xFE0
  9888                           indf2	equ	0xFDF
  9889                           postinc2	equ	0xFDE
  9890                           postdec2	equ	0xFDD
  9891                           preinc2	equ	0xFDC
  9892                           plusw2	equ	0xFDB
  9893                           fsr2h	equ	0xFDA
  9894                           fsr2l	equ	0xFD9
  9895                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        34
    BSS         188
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      82
    BANK0           160     17     159
    BANK1           256      3      68
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_i@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_f@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    disp7s_off@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    S526_disp7s_mux$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    disp7s_mux.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    S270_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S270_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 


Critical Paths under _main in COMRAM

    _main->_configMode_job
    _main->_visMode_job
    _visMode_job->_visMode_disp
    _visMode_kb->_ikb_key_is_ready2read
    _visMode_kb->_ikb_key_was_read
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _disp7s_job->_disp7s_mux_Q
    _disp7s_init->_disp7s_mux_init
    _configMode_job->_configMode_disp
    _configMode_kb->___ftsub
    ___ftsub->___ftadd
    _disp7s_qtyDisp_writeInt->_disp7s_write_i
    _disp7s_modeDisp_writeInt->_disp7s_write_i
    _disp7s_write_i->_itoa
    _autoMode_job->_nozzle_isEnabled
    _nozzle_isEnabled->___ftge
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_movetoNozzle->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _autoMode_kb->_ikb_key_is_ready2read
    _autoMode_kb->_ikb_key_was_read
    _autoMode_kb->_visMode_init
    _pulsonic_getTotalSum_mlh->___ftadd
    _disp7s_qtyDisp_writeFloat->_disp7s_write_f
    _disp7s_write_f->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___ftadd->___ftpack
    _disp7s_modeDisp_off->_disp7s_off

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _disp7s_qtyDisp_writeFloat->_disp7s_write_f

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    _visMode_disp->_disp7s_qtyDisp_writeFloat
    _configMode_disp->_disp7s_qtyDisp_writeFloat
    _autoMode_init->_disp7s_qtyDisp_writeFloat

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  111459
                                             64 COMRAM     3     3      0
                      _autoMode_init
                       _autoMode_job
                    _configMode_init
                     _configMode_job
                        _disp7s_init
                         _disp7s_job
                           _ikb_init
                            _ikb_job
                          _mpap_sych
                      _pulsonic_init
                           _pump_job
                        _visMode_job
 ---------------------------------------------------------------------------------
 (1) _visMode_job                                          1     1      0   28679
                                             63 COMRAM     1     1      0
                       _visMode_disp
                         _visMode_kb
 ---------------------------------------------------------------------------------
 (2) _visMode_kb                                           1     1      0     102
                                             11 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
 ---------------------------------------------------------------------------------
 (2) _visMode_disp                                         4     4      0   28540
                                             59 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
      _disp7s_modeDisp_writeText_oil
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
       _disp7s_qtyDisp_writeText_OFF
 ---------------------------------------------------------------------------------
 (1) _pump_job                                             1     1      0      13
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulsonic_init                                        1     1      0      99
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8968
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     654
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key0 *
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    8314
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      93
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3644
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     285
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _disp7s_job                                           3     3      0     263
                                             18 COMRAM     3     3      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
                       _disp7s_mux_Q
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_Q                                         8     8      0     192
                                             10 COMRAM     8     8      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (1) _disp7s_init                                          1     1      0     297
                                             11 COMRAM     1     1      0
                    _disp7s_mux_init
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_init                                      1     1      0      99
                                             10 COMRAM     1     1      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configMode_job                                       1     1      0   41766
                                             63 COMRAM     1     1      0
                    _configMode_disp
                      _configMode_kb
 ---------------------------------------------------------------------------------
 (2) _configMode_kb                                        4     4      0   13189
                                             36 COMRAM     4     4      0
                            ___ftadd
                             ___ftge
                            ___ftsub
              _ikb_key_is_ready2read
                   _ikb_key_was_read
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5754
                                             30 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _configMode_disp                                      4     4      0   28540
                                             59 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
      _disp7s_modeDisp_writeText_oil
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
       _disp7s_qtyDisp_writeText_OFF
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeText_OFF                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeInt                              2     0      2    5581
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeText_oil                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeInt                             2     0      2    5581
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_i                                      24    19      5    5370
                                             31 COMRAM    24    19      5
                             ___wmul
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               3     1      2     220
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _configMode_init                                      1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _autoMode_job                                         1     1      0    6000
                                             32 COMRAM     1     1      0
                        _autoMode_kb
                        _mpap_isIdle
                  _mpap_movetoNozzle
                _mpap_setupToHomming
                   _nozzle_isEnabled
                        _pump_isIdle
                       _pump_setTick
 ---------------------------------------------------------------------------------
 (2) _pump_setTick                                         2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _pump_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nozzle_isEnabled                                     2     0      2    3587
                                             30 COMRAM     2     0      2
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToHomming                                  0     0      0     310
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_movetoNozzle                                    1     1      0    1809
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (3) _mpap_setupToTurn                                     4     2      2     310
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mpap_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _autoMode_kb                                          1     1      0     136
                                             11 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
                       _visMode_init
 ---------------------------------------------------------------------------------
 (3) _visMode_init                                         1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_key_was_read                                     1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_key_is_ready2read                                1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _autoMode_init                                        1     1      0   24854
                                             59 COMRAM     1     1      0
                _disp7s_modeDisp_off
          _disp7s_qtyDisp_writeFloat
           _pulsonic_getTotalSum_mlh
 ---------------------------------------------------------------------------------
 (2) _pulsonic_getTotalSum_mlh                             8     5      3    6973
                                             30 COMRAM     8     5      3
                            ___ftadd
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1468
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeFloat                            3     0      3   17220
                                              0 BANK1      3     0      3
                     _disp7s_write_f
           _pulsonic_getTotalSum_mlh (ARG)
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_f                                      28    22      6   16919
                                             48 COMRAM    11     5      6
                                              0 BANK0     17    17      0
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                         _disp7s_off
                               _itoa
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 6     1      5    2496
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     551
                                             33 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4427
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    1998
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5338
                                             18 COMRAM    12     6      6
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3253
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _disp7s_modeDisp_off                                  0     0      0     630
                         _disp7s_off
 ---------------------------------------------------------------------------------
 (5) _disp7s_off                                           6     3      3     630
                                             10 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (9) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (10) _mpap_normal_mode                                    1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (10) _mpap_homming                                        2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (11) _mpap_do1step                                        1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (12) __mpap_step4                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) __mpap_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autoMode_init
     _disp7s_modeDisp_off
       _disp7s_off
     _disp7s_qtyDisp_writeFloat
       _disp7s_write_f
         ___ftadd
           ___ftpack
           ___wmul (ARG)
         ___ftge
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         _disp7s_off
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _pulsonic_getTotalSum_mlh (ARG)
         ___ftadd
           ___ftpack
           ___wmul (ARG)
         ___wmul
     _pulsonic_getTotalSum_mlh
       ___ftadd
         ___ftpack
         ___wmul (ARG)
       ___wmul
   _autoMode_job
     _autoMode_kb
       _ikb_key_is_ready2read
       _ikb_key_was_read
       _visMode_init
     _mpap_isIdle
     _mpap_movetoNozzle
       ___wmul
       _mpap_setupToTurn
         ___wmul (ARG)
     _mpap_setupToHomming
       _mpap_setupToTurn
         ___wmul (ARG)
     _nozzle_isEnabled
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _pump_isIdle
     _pump_setTick
   _configMode_init
   _configMode_job
     _configMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_modeDisp_writeText_oil
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeText_OFF
     _configMode_kb
       ___ftadd
         ___ftpack
         ___wmul (ARG)
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftsub
         ___ftadd
           ___ftpack
           ___wmul (ARG)
       _ikb_key_is_ready2read
       _ikb_key_was_read
   _disp7s_init
     _disp7s_mux_init
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _disp7s_job
     _disp7s_mux0_off *
     _disp7s_mux0_on *
     _disp7s_mux1_off *
     _disp7s_mux1_on *
     _disp7s_mux2_off *
     _disp7s_mux2_on *
     _disp7s_mux3_off *
     _disp7s_mux3_on *
     _disp7s_mux4_off *
     _disp7s_mux4_on *
     _disp7s_mux_Q *
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key0 *
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
   _mpap_sych
   _pulsonic_init
   _pump_job
   _visMode_job
     _visMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_modeDisp_writeText_oil
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeText_OFF
     _visMode_kb
       _ikb_key_is_ready2read
       _ikb_key_was_read

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3      44       7       26.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     135      20        0.0%
DATA                 0      0     135       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 00:38:41 2019

                 disp7s_write_f@K10MULT 00FB                      autoMode_kb@cod_ret 000C  
                 ??_mpap_setupToHomming 0015                             _pump_isIdle 28EA  
                   ___wmul@multiplicand 000D                             __CFG_BORV$3 000000  
                 disp7s_write_i@K10MULT 0035                            ___ftadd@exp1 001E  
                          ___ftadd@exp2 001D                            ___ftadd@sign 001C  
                                   l114 16C6                                     l311 0998  
                                   l304 08F4                                     l321 0C30  
                                   l313 09FA                                     l331 0D90  
                                   l315 0A3E                                     l333 0DC6  
                                   l317 0AA0                                     l327 0D5C  
                                   l319 0AE4                                     l336 0E18  
                                   l442 2702                                     l444 2706  
                                   l298 093E                                     l921 0F22  
                                   l915 0E68                                     l765 1D1A  
                                   l917 0E88                                     l862 1E1A  
                                   l783 1F9A                                     l863 1E2C  
                                   l784 1FAC                                     _GIE 007F97  
                          __CFG_BOR$OFF 000000                                     _key 0060  
                                   prod 000FF3                                     tosl 000FFD  
                                   wreg 000FE8                  __size_of_pulsonic_init 0060  
                          _pump_setTick 294A                            ?_autoMode_kb 0001  
                          __CFG_LVP$OFF 000000                            __CFG_WDT$OFF 000000  
                                  l1423 23CE                                    l1433 2580  
                                  l1274 1434                                    l1615 1D96  
                                  l5021 2622                                    l5031 14AA  
                                  l5203 28F6                                    l5131 0B96  
                                  l5213 25D0                                    l5037 14E8  
                                  l5301 1E04                                    l5231 1C4E  
                                  l5055 15BA                                    l5047 155A  
                                  l5311 1E3E                                    l5303 1E08  
                                  l5161 0E38                                    l5145 0CE2  
                                  l5137 0C20                                    l5049 157A  
                                  l5171 1EE2                                    l5403 10DE  
                                  l5227 1BE6                                    l5075 0816  
                                  l5067 163E                                    l4701 13DC  
                                  l5341 0E6C                                    l5093 08B4  
                                  l5325 208C                                    l4631 2678  
                                  l4711 1410                                    l4527 239C  
                                  l4607 1D58                                    l5191 2904  
                                  l5087 0884                                    l5327 209E  
                                  l4529 23A4                                    l4641 26A2  
                                  l5257 1F88                                    l5249 1F6C  
                                  l5417 2100                                    l5361 0F70  
                                  l5521 200E                                    l5441 1AB4  
                                  l5097 08D4                                    l5089 0894  
                                  l4627 2652                                    l4571 1B78  
                                  l4803 19D6                                    l4539 23C4  
                                  l4555 2576                                    l4547 2556  
                                  l5267 1FC2                                    l5419 2112  
                                  l5371 0FA0                                    l5611 2776  
                                  l5603 275E                                    l5515 1FD2  
                                  l5291 1DDE                                    l4717 1450  
                                  l4709 1406                                    l4821 1A2A  
                                  l4549 255E                                    l5277 24FC  
                                  l5541 1C9E                                    l5365 0F82  
                                  l5357 0EDA                                    l5349 0E8C  
                                  l5453 232C                                    l5293 1DE2  
                                  l4575 1B8E                                    l4567 1B50  
                                  l4727 1480                                    l4743 1906  
                                  l4831 1A42                                    l5535 1C90  
                                  l4647 27F6                                    l4911 17FE  
                                  l4903 17BA                                    l5391 10AA  
                                  l5383 1050                                    l5367 0F96  
                                  l4577 1BAC                                    l4569 1B5A  
                                  l4761 1948                                    l4737 18DE  
                                  l4833 1A4E                                    l4825 1A3A  
                                  l4649 27F8                                    l4905 17D6  
                                  l5393 10BE                                    l5609 2772  
                                  l5465 2356                                    l5481 22D6  
                                  l5801 1762                                    l4579 1BB6  
                                  l4675 1376                                    l4771 1970  
                                  l5555 1CD4                                    l5547 1CB0  
                                  l5539 1C9A                                    l4931 18A6  
                                  l4915 181C                                    l5387 109E  
                                  l5627 21B2                                    l4669 134E  
                                  l4757 1938                                    l4597 1D26  
                                  l4861 1194                                    l4925 1864  
                                  l5397 10C8                                    l5661 1E5E  
                                  l5805 1772                                    l4783 2148  
                                  l4767 1960                                    l4839 1A6A  
                                  l4871 121C                                    l4855 1170  
                                  l4847 10F6                                    l5567 1D04  
                                  l5559 1CE4                                    l4919 1842  
                                  l5639 21D2                                    l5591 279E  
                                  l4697 13C8                                    l4793 2196  
                                  l4881 1250                                    l4849 111E  
                                  l5681 1E96                                    l5665 1E6A  
                                  l5593 27A2                                    l5585 278C  
                                  l4699 13D2                                    l4787 216A  
                                  l4891 12AC                                    l5499 273C  
                                  l5691 1EB8                                    l5675 1E8C  
                                  l5819 179E                                    l5747 16BE  
                                  l4877 1232                                    l4885 127C  
                                  l5677 1E8E                                    l5765 16F0  
                                  l5759 16DE                                    l4897 12EE  
                                  l4969 2420                                    l5777 1716  
                                  l5789 173C                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                                  _LATD 000F8C                                    _LATE 000F8D  
                                  u5010 1B42                                    u5050 1BC0  
                                  u5210 1368                                    u5141 130E  
                                  u5310 1418                                    u5151 1322  
                                  u5240 13A6                                    u6210 1F3E  
                                  u5180 1340                                    u5500 1A54  
                                  u7030 1E5A                                    u5351 18C6  
                                  u5280 13E4                                    u5441 19BA  
                                  u5450 19C4                                    u5371 18EE  
                                  u5460 19F4                                    u6308 1C5E  
                                  u6309 1C72                                    u5630 286A  
                                  u6248 25E0                                    u6264 1BFC  
                                  u5465 19EC                                    u6249 25F4  
                                  u6265 1BF6                                    u5570 128C  
                                  u6274 1C16                                    u6275 1C10  
                                  u4950 23A8                                    u5718 14CC  
                                  u5719 14E0                                    u5760 154A  
                                  u6298 1C3A                                    u4980 2562  
                                  u5828 1604                                    u5829 1618  
                                  u5758 1530                                    u5759 1544  
                                  _UCFG 000F6F                                    u6728 1FE2  
                                  u6729 1FF6                                    u5788 159E  
        ?_disp7s_modeDisp_writeText_oil 0001                                    u5789 15B2  
                                  _UCON 000F6D                            __CFG_PWRT$ON 000000  
                 _ikb_key_is_ready2read 2852                         _NOZZLE_QTY_DIFF 00E9  
                                  _main 1646                            ___ftpack@arg 000B  
                                  _itoa 268A                                    _mpap 00B0  
                          ___ftpack@exp 000E                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    _pump 0044  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0053  
                                  _utoa 1D1E         __end_of_disp7s_qtyDisp_writeInt 2888  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 000E                          pulsonic_init@i 000B  
                         __CFG_IESO$OFF 000000                           __CFG_MCLRE$ON 000000  
                         ?_autoMode_job 0001                            ___ftmul@cntr 0020  
                  __end_of_DISP7S_CHARS 0811                            ___param_bank 000000  
                          ___ftmul@sign 0021                           _autoMode_init 271C  
                          ___fttol@exp1 0030                            ___fttol@lval 002C  
                     visMode_kb@cod_ret 000C                           __CFG_PLLDIV$5 000000  
                                 ?_main 0001                                   ?_itoa 001A  
                       __end_of___ftadd 14A6                                   _CMCON 000FB4  
                                 ?_utoa 0012                         __end_of___ftmul 19AA  
                                 _T0CON 000FD5                         __end_of___ftsub 264C  
                       __end_of___fttol 1A7C                         __end_of___lwdiv 23D8  
                       __end_of___lwmod 258A                                   i2l147 2452  
                                 i2l464 24B4                                   i2l458 22C4  
                                 _TMR0H 000FD7                                   _TMR0L 000FD6  
                                 _PORTC 000F82                                   _PORTD 000F83  
                                 _PORTE 000F84                           __CFG_USBDIV$2 000000  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _TRISE 000F96                         ??_configMode_kb 0025  
                        __CFG_FCMEN$OFF 000000                         __end_of_ikb_job 2936  
                         ?_INTERRUPCION 0001                         _disp7s_mux0_off 29BC  
                       _disp7s_mux1_off 29B4                         _disp7s_mux2_off 29AC  
                       _disp7s_mux3_off 29A4                         _disp7s_mux4_off 299C  
                                 _smain 00BD                           ___ftpack@sign 000F  
                                 pclath 000FFA                                   tablat 000FF5  
                                 plusw2 000FDB              __size_of_mpap_movetoNozzle 0030  
                                 ttemp5 0054                                   ttemp6 0057  
                                 ttemp7 005B                                   utoa@c 0019  
                       _disp7s_mux_init 25CC                                   utoa@v 0017  
                                 status 000FD8                                   wtemp8 0054  
      __end_of_disp7s_modeDisp_writeInt 28A2             __size_of_ikey_is_accessible 004C  
                         ?_ikey_parsing 0001                    __size_of__mpap_step1 000A  
                  __size_of__mpap_step2 000A                    __size_of__mpap_step3 000A  
                  __size_of__mpap_step4 000A                          ??_autoMode_job 0021  
                         _pulsonic_init 22C8                            ?_mpap_isIdle 0001  
                        ?_autoMode_init 0001                         __initialization 2202  
                          __end_of_main 17AC                            __end_of_itoa 26BC  
                          __end_of_utoa 1DB2                       ikb_key_was_read@k 000B  
    __size_of_disp7s_qtyDisp_writeFloat 001E                                  ??_main 0041  
                         ___fttol@sign1 002B                                  ??_itoa 001F  
                  __end_of_disp7s_mux_Q 1C80                                  ??_utoa 0017  
                         mpap_do1step@i 0052                           __activetblptr 000002  
                        ??_INTERRUPCION 0005                    __size_of_disp7s_init 005E  
                   autoMode_job@cod_ret 0021                                  _ADCON1 000FC1  
              __end_of_keyRead_pin_key0 298E                __end_of_keyRead_pin_key1 294A  
              __end_of_keyRead_pin_key2 2940                __end_of_keyRead_pin_key3 299C  
              __end_of_keyRead_pin_key4 2996                  ?_ikb_key_is_ready2read 0001  
                      __end_of___ftpack 1BE0                                  i2l3601 25A0  
                                i2l3605 25A8                                  i2l4363 250E  
                                i2l4367 251C                                  i2l3819 22A6  
                      __end_of___lwtoft 27F0                                  _TMR0IE 007F95  
                                _TMR0IF 007F92                          ??_ikey_parsing 001F  
                        __CFG_VREGEN$ON 000000                        ??_configMode_job 0040  
             __size_of_nozzle_isEnabled 0048                          ?_pulsonic_init 0001  
              __end_of_mpap_normal_mode 24B8              configMode_init@numRegistro 000B  
             disp7s_write_f@NUM_OF_DISP 0033                _error_requestToWriteDisp 00C9  
              _pulsonic_getTotalSum_mlh 1ECE                        __end_of_ikb_init 1B32  
                                ___ftge 2126                    visMode_disp@numVista 003F  
                                ___wmul 27A6                               ??___ftadd 0019  
                             ??___ftmul 0019                               ??___ftsub 0025  
                             ??___fttol 0026                               ??___lwdiv 000F  
                             ??___lwmod 000F                       ?_ikb_key_was_read 0001  
                                clear_0 223A                                  clear_1 2246  
                                clear_2 2252              configMode_disp@numRegistro 003F  
                      __end_of_mpap_job 2548                      ??_ikb_key_was_read 000B  
                                _unlock 00CB                               ??_ikb_job 0024  
                                _strlen 27F0                 __end_of_disp7s_mux0_off 29C0  
               __end_of_disp7s_mux1_off 29B8                   ___ftmul@f3_as_product 001D  
               __end_of_disp7s_mux2_off 29B0                 __end_of_disp7s_mux3_off 29A8  
               __end_of_disp7s_mux4_off 29A0       __end_of_disp7s_qtyDisp_writeFloat 2852  
              __end_of_mpap_setupToTurn 271C                            __pdataCOMRAM 0052  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
              __size_of_configMode_disp 0074                __size_of_configMode_init 000C  
                   ikey_is_accessible@k 000D                 __end_of_disp7s_mux_init 260C  
                      __end_of_pump_job 2202                            ?_visMode_job 0001  
                  __size_of_autoMode_kb 007A                              __accesstop 0060  
               __end_of__initialization 2258                         __CFG_PBADEN$OFF 000000  
                         ?_mpap_do1step 0001                              ___ftadd@f1 0013  
                            ___ftadd@f2 0016                              ___ftge@ff1 0016  
                            ___ftge@ff2 0019                         disp7s_off@pDisp 000B  
                         ___rparam_used 000001                         ??_autoMode_init 003C  
                            ___ftmul@f1 0013                              ___ftmul@f2 0016  
                            ___ftsub@f1 001F                              ___ftsub@f2 0022  
                            ___fttol@f1 0022                          __pcstackCOMRAM 0001  
                          __pidataBANK0 2812                           ?_mpap_homming 0001  
                          ?_pump_isIdle 0001                      __size_of__mpap_off 000A  
                            ___lwtoft@c 0013                         visMode_disp@qty 003C  
     __size_of_disp7s_modeDisp_writeInt 001A               ?_disp7s_modeDisp_writeInt 0038  
                  __end_of_autoMode_job 1D1E                            _DISP7S_CHARS 080F  
                        mpap_do1step@KI 0001                              __pbssBANK0 0060  
                            __pbssBANK1 0100                      visMode_job@cod_ret 0040  
                        ??_mpap_do1step 0001                      __size_of_ikey_scan 01A0  
                       ??_pulsonic_init 000B             __end_of_mpap_setupToHomming 28C8  
                        ??_mpap_homming 0002                                 ?___ftge 0016  
                  __end_of_INTERRUPCION 246E                      __size_of_mpap_sych 008C  
                               ?___wmul 000B                   __size_of_disp7s_mux_Q 00A0  
                  __size_of_mpap_isIdle 000E                         disp7s_write_f@I 00F8  
                       disp7s_write_f@i 00FE                         disp7s_write_i@i 0037  
              ?_disp7s_qtyDisp_writeInt 0038                              _disp7s_job 1FC6  
                            _disp7s_off 264C                              _disp7s_mux 00CD  
          __size_of_disp7s_modeDisp_off 0012                               ?___ftpack 000B  
                               ?_strlen 000B                               ?___lwtoft 0013  
               __size_of_disp7s_mux0_on 0004                 __size_of_disp7s_mux1_on 0004  
               __size_of_disp7s_mux2_on 0004                 __size_of_disp7s_mux3_on 0004  
               __size_of_disp7s_mux4_on 0004                        ?_disp7s_mux0_off 0001  
                      ?_disp7s_mux1_off 0001                        ?_disp7s_mux2_off 0001  
                      ?_disp7s_mux3_off 0001                        ?_disp7s_mux4_off 0001  
                  __end_of_ikey_parsing 0E42                              _configMode 0047  
           pulsonic_getTotalSum_mlh@acc 0022                 __size_of_disp7s_write_f 021C  
               __size_of_disp7s_write_i 010A                              _disp_owner 0051  
                      ?_disp7s_mux_init 0001                               ?_ikb_init 0001  
                     disp7s_write_f@num 0034                       disp7s_write_i@num 0023  
                     __end_of__mpap_off 2986                       ??_configMode_disp 003C  
                     ??_configMode_init 000B                            _disp7s_mux_Q 1BE0  
                      _nozzle_isEnabled 24B8                               ?_mpap_job 0001  
                               __Hparam 0000                                 __Lparam 0000  
           disp7s_modeDisp_writeInt@num 0038               disp7s_write_i@NUM_OF_DISP 0022  
                       __size_of___ftge 0074                                 ___ftadd 12FE  
                       __size_of___wmul 0026                                 ___ftmul 18B6  
                               ___ftsub 260C                                 ___fttol 19AA  
                     pump_setTick@ticks 000B                                 ___lwdiv 2386  
                             ?_pump_job 0001                                 ___lwmod 2548  
                          __psmallconst 0800                                 __pcinit 2202  
                            ??___ftpack 0010                                 __ramtop 0800  
                               __ptext0 1646                                 __ptext1 277A  
                               __ptext2 1DB2                                 __ptext3 203E  
                               __ptext4 219A                                 __ptext5 22C8  
                               __ptext6 1E42                                 __ptext7 292C  
                               __ptext8 14A6                                 __ptext9 2996  
                     __end_of_ikey_scan 1646                                 _ikb_job 292C  
                            ??___lwtoft 0016                         __size_of_strlen 0022  
                               _group_x 00B8                _error_grantedToWriteDisp 00C8  
               ??_ikb_key_is_ready2read 000B                                 _visMode 0049  
                 __end_of_configMode_kb 10E2                       __end_of_mpap_sych 1ECE  
               mpap_normal_mode@cod_ret 0002                              ??_ikb_init 000B  
                        __pintcode_body 2424                    end_of_initialization 2258  
            __end_of_ikey_is_accessible 2424                       ?_keyRead_pin_key0 0001  
                     ?_keyRead_pin_key1 0001                       ?_keyRead_pin_key2 0001  
                     ?_keyRead_pin_key3 0001                       ?_keyRead_pin_key4 0001  
            ??_pulsonic_getTotalSum_mlh 0022                           ??__mpap_step1 0001  
                         ??__mpap_step2 0001                           ??__mpap_step3 0001  
                         ??__mpap_step4 0001                    __size_of_visMode_job 002C  
                               itoa@buf 001A                                 itoa@val 001B  
                         __Lmediumconst 0000                                 int_func 2424  
                    ??_keyRead_pin_key0 000B                      ??_keyRead_pin_key1 000B  
                    ??_keyRead_pin_key2 000B                      ??_keyRead_pin_key3 000B  
                    ??_keyRead_pin_key4 000B          ??_disp7s_qtyDisp_writeText_OFF 000B  
                   errorHandler_queue@c 00C0                     errorHandler_queue@i 00C3  
                            ??_mpap_job 0004                           _OIL_VISCOSITY 080B  
                     ?_mpap_normal_mode 0001                         main@c_access_kb 0041  
                               postdec1 000FE5                                 postdec2 000FDD  
                    ??_mpap_normal_mode 0002                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                ikb_key_is_ready2read@k 000B                              ??_pump_job 000B  
                               utoa@buf 0012                                 utoa@val 0013  
                           ?_disp7s_job 0001                             ?_disp7s_off 000B  
                               strlen@s 000B                           ?_visMode_disp 0001  
                         ?_visMode_init 0001                    __size_of_pump_isIdle 0010  
                 __size_of_autoMode_job 009E                    __end_of_mpap_do1step 25CC  
                            _visMode_kb 1DB2                           ??_disp7s_init 000C  
                 configMode_job@cod_ret 0040                       ?_mpap_setupToTurn 0011  
                    ??_mpap_setupToTurn 0013                    __end_of_mpap_homming 22C8  
             __size_of_ikb_key_was_read 0014            disp7s_qtyDisp_writeFloat@num 0141  
                            main@codapp 0043                     disp7s_write_f@pDisp 0031  
                   disp7s_write_i@pDisp 0020                   __size_of_INTERRUPCION 2466  
                           ___ftmul@exp 001C                            _autoMode_job 1C80  
                   __end_of__mpap_step1 2972                     __end_of__mpap_step2 2968  
                   __end_of__mpap_step3 295E                     __end_of__mpap_step4 297C  
                   __end_of_DISP7S_NUMS 080B                          __end_of___ftge 219A  
       mpap_setupToTurn@numSteps_tomove 0011                          ??_visMode_disp 003C  
                        ??_visMode_init 000B                   __size_of_ikey_parsing 0630  
                        __end_of___wmul 27CC                           __pidataCOMRAM 29C4  
                        _disp7s_mux0_on 29B8                          _disp7s_mux1_on 29B0  
                        _disp7s_mux2_on 29A8                          _disp7s_mux3_on 29A0  
                        _disp7s_mux4_on 29C0                          __end_of_strlen 2812  
                     autoMode_init@init 003C                     start_initialization 2202  
            ?_disp7s_qtyDisp_writeFloat 0141                           ?_pump_setTick 000B  
                         ??_autoMode_kb 000C                          _disp7s_write_f 10E2  
                        _disp7s_write_i 17AC                            _INTERRUPCION 0008  
                   __end_of_disp7s_init 2386                    visMode_init@numVista 000B  
                            ikey_scan@k 000C                     _disp7s_modeDisp_off 28C8  
                   __size_of_disp7s_job 0078                     __size_of_disp7s_off 003E  
                          _ikey_parsing 0812                   __end_of_autoMode_init 274C  
                              ??___ftge 001C                                ??___wmul 000F  
                           __pdataBANK0 00CD                  __end_of_disp7s_mux0_on 29BC  
                __end_of_disp7s_mux1_on 29B4                  __end_of_disp7s_mux2_on 29AC  
                __end_of_disp7s_mux3_on 29A4                  __end_of_disp7s_mux4_on 29C4  
                  ?_disp7s_modeDisp_off 0001                 __size_of_configMode_job 002E  
                           ?_visMode_kb 0001                                ??_strlen 000D  
                __end_of_disp7s_write_f 12FE                  __end_of_disp7s_write_i 18B6  
                     __size_of___ftpack 00AE                __end_of_nozzle_isEnabled 2500  
                        ??_pump_setTick 000D                         _configMode_disp 20B2  
                       _configMode_init 2914                             __pbssCOMRAM 0044  
                     __size_of___lwtoft 0024                           __pcstackBANK0 00EE  
                         __pcstackBANK1 0141              disp7s_qtyDisp_writeInt@num 0038  
                      disp7s_mux_init@i 000B                            mpap_sych@sm0 0050  
      __size_of_disp7s_qtyDisp_writeInt 001A        __end_of_pulsonic_getTotalSum_mlh 1F4C  
             pulsonic_getTotalSum_mlh@i 0025                     __end_of_autoMode_kb 1FC6  
                         ikey_parsing@k 0023                       __size_of_ikb_init 00B6  
                           __mpap_step1 2968                             __mpap_step2 295E  
                           __mpap_step3 2954                             __mpap_step4 2972  
                           _DISP7S_NUMS 0801                              mpap_sych@c 004F  
                 __end_of_pulsonic_init 2328                               __mpap_off 297C  
                         ??_mpap_isIdle 000B                        ___lwdiv@dividend 000B  
                     __size_of_mpap_job 0048                    configMode_kb@cod_ret 0028  
                             __pintcode 0008                   __size_of_mpap_do1step 0042  
                              ?___ftadd 0013                                ?___ftmul 0013  
                              ?___ftsub 001F                                ?___fttol 0022  
                              ?___lwdiv 000B                                ?___lwmod 000B  
                 ??_disp7s_modeDisp_off 0011                _disp7s_modeDisp_writeInt 2888  
                       ?_disp7s_mux0_on 0001                         ?_disp7s_mux1_on 0001  
                       ?_disp7s_mux2_on 0001                         ?_disp7s_mux3_on 0001  
                       ?_disp7s_mux4_on 0001            __size_of_mpap_setupToHomming 0012  
                             _machState 00CA                      configMode_disp@qty 003C  
                     __size_of_pump_job 0068                                ?_ikb_job 0001  
                      disp7s_write_f@pi 00FA                        disp7s_write_i@pi 0034  
                           __smallconst 0800                   __size_of_mpap_homming 0062  
                       ?_disp7s_write_f 0031                         ?_disp7s_write_i 0020  
                           _disp7s_init 2328                               _ikey_scan 14A6  
        __size_of_ikb_key_is_ready2read 001C                        ___lwdiv@quotient 0010  
         __end_of_ikb_key_is_ready2read 286E                        _ikb_key_was_read 28A2  
              __size_of_disp7s_mux0_off 0004                __size_of_disp7s_mux1_off 0004  
              __size_of_disp7s_mux2_off 0004                __size_of_disp7s_mux3_off 0004  
              __size_of_disp7s_mux4_off 0004                    __end_of_visMode_disp 20B2  
                  __end_of_visMode_init 292C                               _mpap_step 00E1  
                             _mpap_sych 1E42                          ___wmul@product 000F  
                          _mpap_do1step 258A                __size_of_disp7s_mux_init 0040  
                   __size_of_visMode_kb 0090                              ?__mpap_off 0001  
                              i2u324_48 25B8                                i2u478_48 252E  
                              i2u478_49 2542                      _ikey_is_accessible 23D8  
                          _mpap_homming 2266               __size_of_keyRead_pin_key0 0008  
             __size_of_keyRead_pin_key1 000A               __size_of_keyRead_pin_key2 000A  
             __size_of_keyRead_pin_key3 0006               __size_of_keyRead_pin_key4 0008  
               __end_of_configMode_disp 2126                            ??_disp7s_job 0013  
                          ??_disp7s_off 000E                 __end_of_configMode_init 2920  
                   __end_of_mpap_isIdle 2908         ??_disp7s_modeDisp_writeText_oil 000B  
                     ___wmul@multiplier 000B                     ?_ikey_is_accessible 0001  
                    disp7s_write_f@buff 00EE                               ikb_init@i 000B  
             __size_of_mpap_normal_mode 004A                      disp7s_write_i@buff 002A  
                 disp7s_off@NUM_OF_DISP 000D                              ?_ikey_scan 0001  
                           _autoMode_kb 1F4C                           ??_visMode_job 0040  
                             copy_data0 2216                     mpap_homming@cod_ret 0003  
                            ?_mpap_sych 0001                    ??_ikey_is_accessible 000B  
                    __end_of_disp7s_job 203E                      __end_of_disp7s_off 268A  
             __size_of_mpap_setupToTurn 0030                                __Hrparam 0000  
                  __end_of_pump_setTick 2954                                __Lrparam 0000  
                  check_startSignal@sm0 00C7                    check_startSignal@sm1 00C6  
                         ??_pump_isIdle 000B                  __size_of_configMode_kb 02A0  
                      __size_of___ftadd 01A8       __size_of_pulsonic_getTotalSum_mlh 007E  
                      __size_of___ftmul 00F4                        __size_of___ftsub 0040  
                      __size_of___fttol 00D2                          _configMode_job 274C  
                      __size_of___lwdiv 0052               ?_pulsonic_getTotalSum_mlh 001F  
                      __size_of___lwmod 0042                                ___ftpack 1B32  
                              ___lwtoft 27CC    __end_of_disp7s_qtyDisp_writeText_OFF 28EA  
 __size_of_disp7s_qtyDisp_writeText_OFF 0010            _disp7s_qtyDisp_writeText_OFF 28DA  
                      __size_of_ikb_job 000A                           disp7s_mux_Q@i 0012  
                         disp7s_mux_Q@q 0011             ??_disp7s_qtyDisp_writeFloat 003C  
                 errorHandler_queue@sm0 00C2                         ___lwdiv@divisor 000D  
               _disp7s_qtyDisp_writeInt 286E                       check_oilLevel@sm0 00C5  
                     check_oilLevel@sm1 00C4                         ___lwdiv@counter 000F  
                              __ptext10 2936                                __ptext11 2940  
                              __ptext20 2328                                __ptext12 2986  
                              __ptext21 25CC                                __ptext13 298E  
                              __ptext30 29BC                                __ptext22 299C  
                              __ptext14 0812                                __ptext31 29C0  
                              __ptext23 29A0                                __ptext15 23D8  
                              __ptext40 17AC                                __ptext32 274C  
                              __ptext24 29A4                                __ptext16 27CC  
                              __ptext41 27F0                                __ptext33 0E42  
                              __ptext25 29A8                                __ptext17 1A7C  
                              __ptext50 28FA                                __ptext42 2914  
                              __ptext34 260C                                __ptext26 29AC  
                              __ptext18 1FC6                                __ptext51 1F4C  
                              __ptext43 1C80                                __ptext35 20B2  
                              __ptext27 29B0                                __ptext19 1BE0  
                              __ptext60 268A                                __ptext52 2920  
                              __ptext44 294A                                __ptext36 28DA  
                              __ptext28 29B4                                __ptext61 1D1E  
                              __ptext53 28A2                                __ptext45 28EA  
                              __ptext37 286E                                __ptext29 29B8  
                              __ptext70 264C                                __ptext62 2548  
                              __ptext54 2852                                __ptext46 24B8  
                              __ptext38 2908                                __ptext63 2386  
                              __ptext55 271C                                __ptext47 28B6  
                              __ptext39 2888                                __ptext80 297C  
                              __ptext72 2500                                __ptext64 19AA  
                              __ptext56 1ECE                                __ptext48 26BC  
                              __ptext81 0000                                __ptext73 246E  
                              __ptext65 18B6                                __ptext57 27A6  
                              __ptext49 26EC                                __ptext74 2266  
                              __ptext66 2126                                __ptext58 2834  
                              __ptext75 258A                                __ptext67 12FE  
                              __ptext59 10E2                                __ptext76 2954  
                              __ptext68 1B32                                __ptext77 295E  
                              __ptext69 28C8                                __ptext78 2968  
                              __ptext79 2972                                _ikb_init 1A7C  
                  _mpap_setupToTurn$474 0013                                _autoMode 004B  
                         __size_of_main 0166                           __size_of_itoa 0032  
                         __size_of_utoa 0094                     __end_of_visMode_job 27A6  
                              _isr_flag 00CC                                _mpap_job 2500  
                              _mpap_off 00EC                       ??_disp7s_mux0_off 000B  
                     ??_disp7s_mux1_off 000B                       ??_disp7s_mux2_off 000B  
                     ??_disp7s_mux3_off 000B                             ??__mpap_off 0001  
                     ??_disp7s_mux4_off 000B                       main@c_access_disp 0042  
                           _mpap_isIdle 28FA                  __end_of_configMode_job 277A  
                              int$flags 0053                       ??_disp7s_mux_init 000B  
                              _pump_job 219A                                _pulsonic 0100  
                      ?_configMode_disp 0001                        ?_configMode_init 0001  
                     nozzle_isEnabled@n 001F                            ??_visMode_kb 000C  
                 __CFG_CPUDIV$OSC1_PLL2 000000                     __end_of_pump_isIdle 28FA  
                     ?_nozzle_isEnabled 001F                               pump_job@c 004E  
         ?_disp7s_qtyDisp_writeText_OFF 0001   __end_of_disp7s_modeDisp_writeText_oil 2914  
__size_of_disp7s_modeDisp_writeText_oil 000C           _disp7s_modeDisp_writeText_oil 2908  
                           ??_ikey_scan 000B                   __size_of_visMode_disp 0074  
                              itoa@base 001D                   __size_of_visMode_init 000C  
                    ??_nozzle_isEnabled 0021                            disp7s_job@pq 0015  
                         _configMode_kb 0E42                            disp7s_init@i 000C  
                              intlevel2 0000                     _mpap_setupToHomming 28B6  
                           ??_mpap_sych 000B                        ___lwmod@dividend 000B  
                          ?__mpap_step1 0001                            ?__mpap_step2 0001  
                          ?__mpap_step3 0001                            ?__mpap_step4 0001  
                         ?_disp7s_mux_Q 0001              ??_disp7s_modeDisp_writeInt 003A  
                     _mpap_movetoNozzle 26BC                      __end_of_visMode_kb 1E42  
             _disp7s_qtyDisp_writeFloat 2834                        ??_disp7s_mux0_on 000B  
                      ??_disp7s_mux1_on 000B                        ??_disp7s_mux2_on 000B  
                      ??_disp7s_mux3_on 000B                        ??_disp7s_mux4_on 000B  
                    ?_mpap_movetoNozzle 0001                         ?_configMode_job 0001  
              __end_of_ikb_key_was_read 28B6                        _keyRead_pin_key0 2986  
                      _keyRead_pin_key1 2940                        _keyRead_pin_key2 2936  
                      _keyRead_pin_key3 2996                        _keyRead_pin_key4 298E  
                      ??_disp7s_write_f 0037                        ??_disp7s_write_i 0025  
                  ?_mpap_setupToHomming 0001                     ??_mpap_movetoNozzle 0015  
                          _visMode_disp 203E                            _visMode_init 2920  
                              utoa@base 0015                             disp7s_job@q 004D  
                           disp7s_off@i 0010               ??_disp7s_qtyDisp_writeInt 003A  
                          ?_disp7s_init 0001                         ___lwmod@divisor 000D  
                      _mpap_normal_mode 246E                                strlen@cp 000D  
            mpap_movetoNozzle@numNozzle 0015                         ___lwmod@counter 000F  
                        ?_configMode_kb 0001                  __size_of_autoMode_init 0030  
                           _visMode_job 277A                      __CFG_FOSC$HSPLL_HS 000000  
                 __size_of_pump_setTick 000A                          ??_disp7s_mux_Q 000B  
             __end_of_mpap_movetoNozzle 26EC                   __end_of_OIL_VISCOSITY 080F  
                      _mpap_setupToTurn 26EC             __end_of_disp7s_modeDisp_off 28DA  
