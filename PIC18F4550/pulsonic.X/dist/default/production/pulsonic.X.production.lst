

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 10 02:35:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,keep,inline
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,keep,inline
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,keep,inline
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,keep,inline
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,keep,inline
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,keep,inline
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,keep,inline
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,keep,inline
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,keep,inline
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  002060                     __pidataCOMRAM:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for mpap_do1step@i
   119  002060  FF                 	db	255
   120                           
   121                           	psect	idataBANK0
   122  001F72                     __pidataBANK0:
   123                           	opt callstack 0
   124                           
   125                           ;initializer for _multiplexedDisp
   126  001F72  58                 	db	low _multiplexedDisp0_off
   127  001F73  20                 	db	high _multiplexedDisp0_off
   128  001F74  54                 	db	low _multiplexedDisp0_on
   129  001F75  20                 	db	high _multiplexedDisp0_on
   130  001F76  50                 	db	low _multiplexedDisp1_off
   131  001F77  20                 	db	high _multiplexedDisp1_off
   132  001F78  4C                 	db	low _multiplexedDisp1_on
   133  001F79  20                 	db	high _multiplexedDisp1_on
   134  001F7A  48                 	db	low _multiplexedDisp2_off
   135  001F7B  20                 	db	high _multiplexedDisp2_off
   136  001F7C  44                 	db	low _multiplexedDisp2_on
   137  001F7D  20                 	db	high _multiplexedDisp2_on
   138  001F7E  40                 	db	low _multiplexedDisp3_off
   139  001F7F  20                 	db	high _multiplexedDisp3_off
   140  001F80  3C                 	db	low _multiplexedDisp3_on
   141  001F81  20                 	db	high _multiplexedDisp3_on
   142  001F82  38                 	db	low _multiplexedDisp4_off
   143  001F83  20                 	db	high _multiplexedDisp4_off
   144  001F84  5C                 	db	low _multiplexedDisp4_on
   145  001F85  20                 	db	high _multiplexedDisp4_on
   146                           
   147                           ;initializer for _mpap_step
   148  001F86  2C                 	db	low __mpap_step1
   149  001F87  20                 	db	high __mpap_step1
   150  001F88  26                 	db	low __mpap_step2
   151  001F89  20                 	db	high __mpap_step2
   152  001F8A  20                 	db	low __mpap_step3
   153  001F8B  20                 	db	high __mpap_step3
   154  001F8C  32                 	db	low __mpap_step4
   155  001F8D  20                 	db	high __mpap_step4
   156                           
   157                           ;initializer for _mpap_off
   158  001F8E  FA                 	db	low __mpap_off
   159  001F8F  1F                 	db	high __mpap_off
   160                           
   161                           	psect	smallconst
   162  000800                     __psmallconst:
   163                           	opt callstack 0
   164  000800  00                 	db	0
   165  000801                     _DISP7S_NUMS:
   166                           	opt callstack 0
   167  000801  3F                 	db	63
   168  000802  06                 	db	6
   169  000803  5B                 	db	91
   170  000804  4F                 	db	79
   171  000805  66                 	db	102
   172  000806  6D                 	db	109
   173  000807  7C                 	db	124
   174  000808  07                 	db	7
   175  000809  7F                 	db	127
   176  00080A  67                 	db	103
   177  00080B                     __end_of_DISP7S_NUMS:
   178                           	opt callstack 0
   179  00080B                     _DISP7S_CHARS:
   180                           	opt callstack 0
   181  00080B  00                 	db	0
   182  00080C  40                 	db	64
   183  00080D                     __end_of_DISP7S_CHARS:
   184                           	opt callstack 0
   185  0000                     _PORTE	set	3972
   186  0000                     _TRISB	set	3987
   187  0000                     _TRISA	set	3986
   188  0000                     _PORTD	set	3971
   189  0000                     _PORTC	set	3970
   190  0000                     _TRISC	set	3988
   191  0000                     _TRISD	set	3989
   192  0000                     _TRISE	set	3990
   193  0000                     _TMR0L	set	4054
   194  0000                     _TMR0H	set	4055
   195  0000                     _T0CON	set	4053
   196  0000                     _UCFG	set	3951
   197  0000                     _UCON	set	3949
   198  0000                     _CMCON	set	4020
   199  0000                     _ADCON1	set	4033
   200  0000                     _LATB	set	3978
   201  0000                     _LATD	set	3980
   202  0000                     _LATC	set	3979
   203  0000                     _LATA	set	3977
   204  0000                     _LATE	set	3981
   205  0000                     _TMR0IF	set	32658
   206  0000                     _GIE	set	32663
   207  0000                     _TMR0IE	set	32661
   208                           
   209                           ; #config settings
   210  00080D  00                 	db	0	; dummy byte at the end
   211  0000                     
   212                           	psect	cinit
   213  001A7E                     __pcinit:
   214                           	opt callstack 0
   215  001A7E                     start_initialization:
   216                           	opt callstack 0
   217  001A7E                     __initialization:
   218                           	opt callstack 0
   219                           
   220                           ; Initialize objects allocated to BANK0 (30 bytes)
   221                           ; load TBLPTR registers with __pidataBANK0
   222  001A7E  0E72               	movlw	low __pidataBANK0
   223  001A80  6EF6               	movwf	tblptrl,c
   224  001A82  0E1F               	movlw	high __pidataBANK0
   225  001A84  6EF7               	movwf	tblptrh,c
   226  001A86  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   227  001A88  6EF8               	movwf	tblptru,c
   228  001A8A  EE00  F0B5         	lfsr	0,__pdataBANK0
   229  001A8E  EE10 F01E          	lfsr	1,30
   230  001A92                     copy_data0:
   231  001A92  0009               	tblrd		*+
   232  001A94  CFF5 FFEE          	movff	tablat,postinc0
   233  001A98  50E5               	movf	postdec1,w,c
   234  001A9A  50E1               	movf	fsr1l,w,c
   235  001A9C  E1FA               	bnz	copy_data0
   236                           
   237                           ; Initialize objects allocated to COMRAM (1 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239  001A9E  0E60               	movlw	low __pidataCOMRAM
   240  001AA0  6EF6               	movwf	tblptrl,c
   241  001AA2  0E20               	movlw	high __pidataCOMRAM
   242  001AA4  6EF7               	movwf	tblptrh,c
   243  001AA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244  001AA8  6EF8               	movwf	tblptru,c
   245  001AAA  0009               	tblrd		*+	;fetch initializer
   246  001AAC  CFF5 F046          	movff	tablat,__pdataCOMRAM
   247                           
   248                           ; Clear objects allocated to BANK1 (123 bytes)
   249  001AB0  EE01  F000         	lfsr	0,__pbssBANK1
   250  001AB4  0E7B               	movlw	123
   251  001AB6                     clear_0:
   252  001AB6  6AEE               	clrf	postinc0,c
   253  001AB8  06E8               	decf	wreg,f,c
   254  001ABA  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to BANK0 (85 bytes)
   257  001ABC  EE00  F060         	lfsr	0,__pbssBANK0
   258  001AC0  0E55               	movlw	85
   259  001AC2                     clear_1:
   260  001AC2  6AEE               	clrf	postinc0,c
   261  001AC4  06E8               	decf	wreg,f,c
   262  001AC6  E1FD               	bnz	clear_1
   263                           
   264                           ; Clear objects allocated to COMRAM (15 bytes)
   265  001AC8  EE00  F037         	lfsr	0,__pbssCOMRAM
   266  001ACC  0E0F               	movlw	15
   267  001ACE                     clear_2:
   268  001ACE  6AEE               	clrf	postinc0,c
   269  001AD0  06E8               	decf	wreg,f,c
   270  001AD2  E1FD               	bnz	clear_2
   271  001AD4                     end_of_initialization:
   272                           	opt callstack 0
   273  001AD4                     __end_of__initialization:
   274                           	opt callstack 0
   275  001AD4  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276  001AD6  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277  001AD8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  001ADA  6EF8               	movwf	tblptru,c
   279  001ADC  0100               	movlb	0
   280  001ADE  EF13  F00A         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMRAM
   283  000037                     __pbssCOMRAM:
   284                           	opt callstack 0
   285  000037                     _mpap:
   286                           	opt callstack 0
   287  000037                     	ds	8
   288  00003F                     display7s_job@q:
   289                           	opt callstack 0
   290  00003F                     	ds	1
   291  000040                     mpap_sych@c:
   292                           	opt callstack 0
   293  000040                     	ds	1
   294  000041                     mpap_sych@sm0:
   295                           	opt callstack 0
   296  000041                     	ds	1
   297  000042                     pump_tick@c:
   298                           	opt callstack 0
   299  000042                     	ds	1
   300  000043                     pump_tick@sm0:
   301                           	opt callstack 0
   302  000043                     	ds	1
   303  000044                     _main_flag:
   304                           	opt callstack 0
   305  000044                     	ds	1
   306  000045                     _isr_flag:
   307                           	opt callstack 0
   308  000045                     	ds	1
   309                           
   310                           	psect	dataCOMRAM
   311  000046                     __pdataCOMRAM:
   312                           	opt callstack 0
   313  000046                     mpap_do1step@i:
   314                           	opt callstack 0
   315  000046                     	ds	1
   316                           
   317                           	psect	bssBANK0
   318  000060                     __pbssBANK0:
   319                           	opt callstack 0
   320  000060                     _key:
   321                           	opt callstack 0
   322  000060                     	ds	80
   323  0000B0                     _group_x:
   324                           	opt callstack 0
   325  0000B0                     	ds	5
   326                           
   327                           	psect	dataBANK0
   328  0000B5                     __pdataBANK0:
   329                           	opt callstack 0
   330  0000B5                     _multiplexedDisp:
   331                           	opt callstack 0
   332  0000B5                     	ds	20
   333  0000C9                     _mpap_step:
   334                           	opt callstack 0
   335  0000C9                     	ds	8
   336  0000D1                     _mpap_off:
   337                           	opt callstack 0
   338  0000D1                     	ds	2
   339                           
   340                           	psect	bssBANK1
   341  000100                     __pbssBANK1:
   342                           	opt callstack 0
   343  000100                     _pulsonic:
   344                           	opt callstack 0
   345  000100                     	ds	123
   346                           
   347                           	psect	cstackBANK0
   348  0000D3                     __pcstackBANK0:
   349                           	opt callstack 0
   350  0000D3                     disp_show_quantity@buff:
   351                           	opt callstack 0
   352                           
   353                           ; 10 bytes @ 0x0
   354  0000D3                     	ds	10
   355  0000DD                     disp_show_quantity@real:
   356                           	opt callstack 0
   357                           
   358                           ; 3 bytes @ 0xA
   359  0000DD                     	ds	3
   360  0000E0                     disp_show_quantity@num:
   361                           	opt callstack 0
   362                           
   363                           ; 1 bytes @ 0xD
   364  0000E0                     	ds	1
   365  0000E1                     disp_show_quantity@q:
   366                           	opt callstack 0
   367                           
   368                           ; 1 bytes @ 0xE
   369  0000E1                     	ds	1
   370  0000E2                     disp_show_quantity@last_pos:
   371                           	opt callstack 0
   372                           
   373                           ; 1 bytes @ 0xF
   374  0000E2                     	ds	1
   375  0000E3                     disp_show_quantity@I:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x10
   379  0000E3                     	ds	2
   380  0000E5                     disp_show_quantity@i:
   381                           	opt callstack 0
   382                           
   383                           ; 1 bytes @ 0x12
   384  0000E5                     	ds	1
   385                           
   386                           	psect	cstackCOMRAM
   387  000001                     __pcstackCOMRAM:
   388                           	opt callstack 0
   389  000001                     mpap_do1step@KI:
   390                           	opt callstack 0
   391                           
   392                           ; 1 bytes @ 0x0
   393  000001                     	ds	1
   394  000002                     ??_mpap_homming:
   395  000002                     mpap_normal_mode@cod_ret:
   396                           	opt callstack 0
   397                           
   398                           ; 1 bytes @ 0x1
   399  000002                     	ds	1
   400  000003                     mpap_homming@cod_ret:
   401                           	opt callstack 0
   402                           
   403                           ; 1 bytes @ 0x2
   404  000003                     	ds	1
   405  000004                     
   406                           ; 1 bytes @ 0x3
   407  000004                     	ds	1
   408  000005                     ??_INTERRUPCION:
   409                           
   410                           ; 1 bytes @ 0x4
   411  000005                     	ds	6
   412  00000B                     ??_ikey_is_accessible:
   413  00000B                     ??_multiplexedDisp_job:
   414  00000B                     ?___wmul:
   415                           	opt callstack 0
   416  00000B                     ?___lwdiv:
   417                           	opt callstack 0
   418  00000B                     ?___lwmod:
   419                           	opt callstack 0
   420  00000B                     ?___ftpack:
   421                           	opt callstack 0
   422  00000B                     pump_tick@cod_ret:
   423                           	opt callstack 0
   424  00000B                     ikb_init@i:
   425                           	opt callstack 0
   426  00000B                     ikb_key_is_ready2read@k:
   427                           	opt callstack 0
   428  00000B                     ikey_clear_all_flag@i:
   429                           	opt callstack 0
   430  00000B                     multiplexedDisp_init@i:
   431                           	opt callstack 0
   432  00000B                     ___wmul@multiplier:
   433                           	opt callstack 0
   434  00000B                     ___lwdiv@dividend:
   435                           	opt callstack 0
   436  00000B                     ___lwmod@dividend:
   437                           	opt callstack 0
   438  00000B                     ___ftpack@arg:
   439                           	opt callstack 0
   440                           
   441                           ; 3 bytes @ 0xA
   442  00000B                     	ds	1
   443  00000C                     ikey_scan@k:
   444                           	opt callstack 0
   445                           
   446                           ; 1 bytes @ 0xB
   447  00000C                     	ds	1
   448  00000D                     ikey_is_accessible@k:
   449                           	opt callstack 0
   450  00000D                     ___wmul@multiplicand:
   451                           	opt callstack 0
   452  00000D                     ___lwdiv@divisor:
   453                           	opt callstack 0
   454  00000D                     ___lwmod@divisor:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0xC
   458  00000D                     	ds	1
   459  00000E                     ___ftpack@exp:
   460                           	opt callstack 0
   461                           
   462                           ; 1 bytes @ 0xD
   463  00000E                     	ds	1
   464  00000F                     ___ftpack@sign:
   465                           	opt callstack 0
   466  00000F                     ___lwdiv@counter:
   467                           	opt callstack 0
   468  00000F                     ___lwmod@counter:
   469                           	opt callstack 0
   470  00000F                     ___wmul@product:
   471                           	opt callstack 0
   472                           
   473                           ; 2 bytes @ 0xE
   474  00000F                     	ds	1
   475  000010                     ??___ftpack:
   476  000010                     ___lwdiv@quotient:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0xF
   480  000010                     	ds	1
   481  000011                     multiplexedDisp_job@q:
   482                           	opt callstack 0
   483  000011                     mpap_setupToTurn@numSteps_tomove:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x10
   487  000011                     	ds	1
   488  000012                     multiplexedDisp_job@i:
   489                           	opt callstack 0
   490  000012                     utoa@buf:
   491                           	opt callstack 0
   492                           
   493                           ; 1 bytes @ 0x11
   494  000012                     	ds	1
   495  000013                     ?___ftadd:
   496                           	opt callstack 0
   497  000013                     ?___ftmul:
   498                           	opt callstack 0
   499  000013                     ?___awtoft:
   500                           	opt callstack 0
   501  000013                     ?___lwtoft:
   502                           	opt callstack 0
   503  000013                     _mpap_setupToTurn$418:
   504                           	opt callstack 0
   505  000013                     ___awtoft@c:
   506                           	opt callstack 0
   507  000013                     ___lwtoft@c:
   508                           	opt callstack 0
   509  000013                     utoa@val:
   510                           	opt callstack 0
   511  000013                     ___ftadd@f1:
   512                           	opt callstack 0
   513  000013                     ___ftmul@f1:
   514                           	opt callstack 0
   515                           
   516                           ; 3 bytes @ 0x12
   517  000013                     	ds	2
   518  000015                     nozzle_moveto@nozzle:
   519                           	opt callstack 0
   520  000015                     utoa@base:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x14
   524  000015                     	ds	1
   525  000016                     ___awtoft@sign:
   526                           	opt callstack 0
   527  000016                     ___ftadd@f2:
   528                           	opt callstack 0
   529  000016                     ___ftge@ff1:
   530                           	opt callstack 0
   531  000016                     ___ftmul@f2:
   532                           	opt callstack 0
   533                           
   534                           ; 3 bytes @ 0x15
   535  000016                     	ds	1
   536  000017                     utoa@v:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x16
   540  000017                     	ds	2
   541  000019                     ??___ftadd:
   542  000019                     ??___ftmul:
   543  000019                     utoa@c:
   544                           	opt callstack 0
   545  000019                     ___ftge@ff2:
   546                           	opt callstack 0
   547                           
   548                           ; 3 bytes @ 0x18
   549  000019                     	ds	1
   550  00001A                     itoa@buf:
   551                           	opt callstack 0
   552                           
   553                           ; 1 bytes @ 0x19
   554  00001A                     	ds	1
   555  00001B                     itoa@val:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x1A
   559  00001B                     	ds	1
   560  00001C                     ??___ftge:
   561  00001C                     ___ftadd@sign:
   562                           	opt callstack 0
   563  00001C                     ___ftmul@exp:
   564                           	opt callstack 0
   565                           
   566                           ; 1 bytes @ 0x1B
   567  00001C                     	ds	1
   568  00001D                     ___ftadd@exp2:
   569                           	opt callstack 0
   570  00001D                     itoa@base:
   571                           	opt callstack 0
   572  00001D                     ___ftmul@f3_as_product:
   573                           	opt callstack 0
   574                           
   575                           ; 3 bytes @ 0x1C
   576  00001D                     	ds	1
   577  00001E                     ___ftadd@exp1:
   578                           	opt callstack 0
   579                           
   580                           ; 1 bytes @ 0x1D
   581  00001E                     	ds	1
   582  00001F                     ??_ikey_parsing:
   583  00001F                     ?___ftsub:
   584                           	opt callstack 0
   585  00001F                     ___ftsub@f1:
   586                           	opt callstack 0
   587                           
   588                           ; 3 bytes @ 0x1E
   589  00001F                     	ds	1
   590  000020                     ___ftmul@cntr:
   591                           	opt callstack 0
   592                           
   593                           ; 1 bytes @ 0x1F
   594  000020                     	ds	1
   595  000021                     ___ftmul@sign:
   596                           	opt callstack 0
   597                           
   598                           ; 1 bytes @ 0x20
   599  000021                     	ds	1
   600  000022                     ?___fttol:
   601                           	opt callstack 0
   602  000022                     ___ftsub@f2:
   603                           	opt callstack 0
   604  000022                     ___fttol@f1:
   605                           	opt callstack 0
   606                           
   607                           ; 3 bytes @ 0x21
   608  000022                     	ds	1
   609  000023                     ikey_parsing@k:
   610                           	opt callstack 0
   611                           
   612                           ; 1 bytes @ 0x22
   613  000023                     	ds	1
   614  000024                     
   615                           ; 1 bytes @ 0x23
   616  000024                     	ds	1
   617  000025                     
   618                           ; 1 bytes @ 0x24
   619  000025                     	ds	1
   620  000026                     ??___fttol:
   621                           
   622                           ; 1 bytes @ 0x25
   623  000026                     	ds	5
   624  00002B                     ___fttol@sign1:
   625                           	opt callstack 0
   626                           
   627                           ; 1 bytes @ 0x2A
   628  00002B                     	ds	1
   629  00002C                     ___fttol@lval:
   630                           	opt callstack 0
   631                           
   632                           ; 4 bytes @ 0x2B
   633  00002C                     	ds	4
   634  000030                     ___fttol@exp1:
   635                           	opt callstack 0
   636                           
   637                           ; 1 bytes @ 0x2F
   638  000030                     	ds	1
   639  000031                     disp_show_quantity@f:
   640                           	opt callstack 0
   641                           
   642                           ; 3 bytes @ 0x30
   643  000031                     	ds	3
   644  000034                     ??_disp_show_quantity:
   645                           
   646                           ; 1 bytes @ 0x33
   647  000034                     	ds	1
   648  000035                     main@c_access_kb:
   649                           	opt callstack 0
   650                           
   651                           ; 1 bytes @ 0x34
   652  000035                     	ds	1
   653  000036                     main@c_access_disp:
   654                           	opt callstack 0
   655                           
   656                           ; 1 bytes @ 0x35
   657  000036                     	ds	1
   658                           
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   661 ;;
   662 ;; *************** function _main *****************
   663 ;; Defined at:
   664 ;;		line 67 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  c_access_dis    1   53[COMRAM] char 
   669 ;;  c_access_kb     1   52[COMRAM] char 
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 3F/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   679 ;;      Params:         0       0       0       0       0       0       0       0       0
   680 ;;      Locals:         2       0       0       0       0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0       0       0
   682 ;;      Totals:         2       0       0       0       0       0       0       0       0
   683 ;;Total ram usage:        2 bytes
   684 ;; Hardware stack levels required when called:    9
   685 ;; This function calls:
   686 ;;		_disp_show_quantity
   687 ;;		_display7s_init
   688 ;;		_display7s_job
   689 ;;		_ikb_flush
   690 ;;		_ikb_init
   691 ;;		_ikb_job
   692 ;;		_ikb_key_is_ready2read
   693 ;;		_mpap_setupToHomming
   694 ;;		_mpap_sych
   695 ;;		_nozzle_moveto
   696 ;;		_pump_tick
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text0
   703  001426                     __ptext0:
   704                           	opt callstack 0
   705  001426                     _main:
   706                           	opt callstack 22
   707                           
   708                           ;main.c: 69: int8_t c_access_kb=0;
   709                           
   710                           ;incstack = 0
   711  001426  0E00               	movlw	0
   712  001428  6E35               	movwf	main@c_access_kb,c
   713                           
   714                           ;main.c: 70: int8_t c_access_disp=0;
   715  00142A  0E00               	movlw	0
   716  00142C  6E36               	movwf	main@c_access_disp,c
   717                           
   718                           ;main.c: 72: LATA = 0x00;
   719  00142E  0E00               	movlw	0
   720  001430  6E89               	movwf	3977,c	;volatile
   721                           
   722                           ;main.c: 73: LATC = 0x00;
   723  001432  0E00               	movlw	0
   724  001434  6E8B               	movwf	3979,c	;volatile
   725                           
   726                           ;main.c: 74: LATD = 0x00;
   727  001436  0E00               	movlw	0
   728  001438  6E8C               	movwf	3980,c	;volatile
   729                           
   730                           ;main.c: 75: LATE = 0x00;
   731  00143A  0E00               	movlw	0
   732  00143C  6E8D               	movwf	3981,c	;volatile
   733                           
   734                           ;main.c: 76: LATB = 0x00;
   735  00143E  0E00               	movlw	0
   736  001440  6E8A               	movwf	3978,c	;volatile
   737                           
   738                           ;main.c: 80: ADCON1 = 0x0F;
   739  001442  0E0F               	movlw	15
   740  001444  6EC1               	movwf	4033,c	;volatile
   741                           
   742                           ;main.c: 81: CMCON=0xCF;
   743  001446  0ECF               	movlw	207
   744  001448  6EB4               	movwf	4020,c	;volatile
   745                           
   746                           ;main.c: 84: UCON = 0;
   747  00144A  0E00               	movlw	0
   748  00144C  6E6D               	movwf	3949,c	;volatile
   749                           
   750                           ;main.c: 85: UCFG = 1<<3;
   751  00144E  0E08               	movlw	8
   752  001450  6E6F               	movwf	3951,c	;volatile
   753                           
   754                           ;main.c: 86: T0CON = 0B10000111;
   755  001452  0E87               	movlw	135
   756  001454  6ED5               	movwf	4053,c	;volatile
   757                           
   758                           ;main.c: 89: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) ) 
      +                          >> 8);
   759  001456  68D7               	setf	4055,c	;volatile
   760                           
   761                           ;main.c: 90: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) ))
      +                          ;
   762  001458  0ED1               	movlw	209
   763  00145A  6ED6               	movwf	4054,c	;volatile
   764                           
   765                           ;main.c: 91: TMR0IE = 1;
   766  00145C  8AF2               	bsf	4082,5,c	;volatile
   767  00145E  808D               	bsf	3981,0,c	;volatile
   768  001460  9096               	bcf	3990,0,c	;volatile
   769  001462  9095               	bcf	3989,0,c	;volatile
   770  001464  9295               	bcf	3989,1,c	;volatile
   771  001466  9495               	bcf	3989,2,c	;volatile
   772  001468  9695               	bcf	3989,3,c	;volatile
   773  00146A  928B               	bcf	3979,1,c	;volatile
   774  00146C  9294               	bcf	3988,1,c	;volatile
   775  00146E  8296               	bsf	3990,1,c	;volatile
   776  001470  8094               	bsf	3988,0,c	;volatile
   777  001472  8496               	bsf	3990,2,c	;volatile
   778                           
   779                           ;main.c: 109: display7s_init();
   780  001474  ECC6  F00D         	call	_display7s_init	;wreg free
   781                           
   782                           ;main.c: 110: ikb_init();
   783  001478  EC79  F00B         	call	_ikb_init	;wreg free
   784                           
   785                           ; BSR set to: 0
   786                           ;main.c: 112: disp_show_quantity(77.7);
   787  00147C  0E66               	movlw	102
   788  00147E  6E31               	movwf	disp_show_quantity@f,c
   789  001480  0E9B               	movlw	155
   790  001482  6E32               	movwf	disp_show_quantity@f+1,c
   791  001484  0E42               	movlw	66
   792  001486  6E33               	movwf	disp_show_quantity@f+2,c
   793  001488  EC1F  F007         	call	_disp_show_quantity	;wreg free
   794                           
   795                           ;main.c: 113: GIE = 1;
   796  00148C  8EF2               	bsf	4082,7,c	;volatile
   797                           
   798                           ;main.c: 115: mpap_setupToHomming();
   799  00148E  ECE5  F00F         	call	_mpap_setupToHomming	;wreg free
   800  001492                     l3796:
   801                           
   802                           ;main.c: 117: {;main.c: 118: if (isr_flag.f1ms)
   803  001492  A045               	btfss	_isr_flag,0,c	;volatile
   804  001494  D002               	goto	l118
   805                           
   806                           ;main.c: 119: {;main.c: 120: isr_flag.f1ms = 0;
   807  001496  9045               	bcf	_isr_flag,0,c	;volatile
   808                           
   809                           ;main.c: 121: main_flag.f1ms = 1;
   810  001498  8044               	bsf	_main_flag,0,c	;volatile
   811  00149A                     l118:
   812                           
   813                           ;main.c: 122: };main.c: 124: if (main_flag.f1ms)
   814  00149A  A044               	btfss	_main_flag,0,c	;volatile
   815  00149C  D041               	goto	l3834
   816                           
   817                           ;main.c: 125: {;main.c: 126: if (++c_access_kb == 20)
   818  00149E  2A35               	incf	main@c_access_kb,f,c
   819  0014A0  0E14               	movlw	20
   820  0014A2  1835               	xorwf	main@c_access_kb,w,c
   821  0014A4  A4D8               	btfss	status,2,c
   822  0014A6  D033               	goto	u4670
   823                           
   824                           ;main.c: 127: {;main.c: 128: c_access_kb = 0;
   825  0014A8  0E00               	movlw	0
   826  0014AA  6E35               	movwf	main@c_access_kb,c
   827                           
   828                           ;main.c: 130: ikb_job();
   829  0014AC  ECEE  F00F         	call	_ikb_job	;wreg free
   830                           
   831                           ;main.c: 132: if (ikb_key_is_ready2read(0))
   832  0014B0  0E00               	movlw	0
   833  0014B2  ECD7  F00F         	call	_ikb_key_is_ready2read
   834  0014B6  0900               	iorlw	0
   835  0014B8  B4D8               	btfsc	status,2,c
   836  0014BA  D003               	goto	l3810
   837                           
   838                           ; BSR set to: 0
   839                           ;main.c: 133: {;main.c: 134: nozzle_moveto(0);
   840  0014BC  0E00               	movlw	0
   841  0014BE  EC6A  F00F         	call	_nozzle_moveto
   842  0014C2                     l3810:
   843                           
   844                           ;main.c: 135: };main.c: 136: if (ikb_key_is_ready2read(1))
   845  0014C2  0E01               	movlw	1
   846  0014C4  ECD7  F00F         	call	_ikb_key_is_ready2read
   847  0014C8  0900               	iorlw	0
   848  0014CA  B4D8               	btfsc	status,2,c
   849  0014CC  D003               	goto	l3814
   850                           
   851                           ; BSR set to: 0
   852                           ;main.c: 137: {;main.c: 138: nozzle_moveto(1);
   853  0014CE  0E01               	movlw	1
   854  0014D0  EC6A  F00F         	call	_nozzle_moveto
   855  0014D4                     l3814:
   856                           
   857                           ;main.c: 139: };main.c: 140: if (ikb_key_is_ready2read(2))
   858  0014D4  0E02               	movlw	2
   859  0014D6  ECD7  F00F         	call	_ikb_key_is_ready2read
   860  0014DA  0900               	iorlw	0
   861  0014DC  B4D8               	btfsc	status,2,c
   862  0014DE  D003               	goto	l3818
   863                           
   864                           ; BSR set to: 0
   865                           ;main.c: 141: {;main.c: 142: nozzle_moveto(2);
   866  0014E0  0E02               	movlw	2
   867  0014E2  EC6A  F00F         	call	_nozzle_moveto
   868  0014E6                     l3818:
   869                           
   870                           ;main.c: 143: };main.c: 144: if (ikb_key_is_ready2read(3))
   871  0014E6  0E03               	movlw	3
   872  0014E8  ECD7  F00F         	call	_ikb_key_is_ready2read
   873  0014EC  0900               	iorlw	0
   874  0014EE  B4D8               	btfsc	status,2,c
   875  0014F0  D003               	goto	l3822
   876                           
   877                           ; BSR set to: 0
   878                           ;main.c: 145: {;main.c: 146: nozzle_moveto(3);
   879  0014F2  0E03               	movlw	3
   880  0014F4  EC6A  F00F         	call	_nozzle_moveto
   881  0014F8                     l3822:
   882                           
   883                           ;main.c: 147: };main.c: 148: if (ikb_key_is_ready2read(4))
   884  0014F8  0E04               	movlw	4
   885  0014FA  ECD7  F00F         	call	_ikb_key_is_ready2read
   886  0014FE  0900               	iorlw	0
   887  001500  B4D8               	btfsc	status,2,c
   888  001502  D005               	goto	u4670
   889  001504                     u4660:
   890  001504  EC1F  F00F         	call	_pump_tick	;wreg free
   891  001508  0900               	iorlw	0
   892  00150A  A4D8               	btfss	status,2,c
   893  00150C  D7FB               	goto	u4660
   894  00150E                     u4670:
   895                           
   896                           ;main.c: 153: };main.c: 154: };main.c: 156: if (++c_access_disp == 2)
   897  00150E  2A36               	incf	main@c_access_disp,f,c
   898  001510  0E02               	movlw	2
   899  001512  1836               	xorwf	main@c_access_disp,w,c
   900  001514  A4D8               	btfss	status,2,c
   901  001516  D004               	goto	l3834
   902                           
   903                           ;main.c: 157: {;main.c: 158: c_access_disp = 0;
   904  001518  0E00               	movlw	0
   905  00151A  6E36               	movwf	main@c_access_disp,c
   906                           
   907                           ;main.c: 159: display7s_job();
   908  00151C  EC94  F00F         	call	_display7s_job	;wreg free
   909  001520                     l3834:
   910                           
   911                           ;main.c: 160: };main.c: 161: };main.c: 162: mpap_sych();
   912  001520  ECC5  F00C         	call	_mpap_sych	;wreg free
   913                           
   914                           ;main.c: 165: main_flag.f1ms = 0;
   915  001524  9044               	bcf	_main_flag,0,c	;volatile
   916                           
   917                           ;main.c: 166: ikb_flush();
   918  001526  EC0D  F010         	call	_ikb_flush	;wreg free
   919  00152A  D7B3               	goto	l3796
   920  00152C                     __end_of_main:
   921                           	opt callstack 0
   922                           
   923 ;; *************** function _pump_tick *****************
   924 ;; Defined at:
   925 ;;		line 41 in file "main.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  cod_ret         1   10[COMRAM] char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      char 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         0       0       0       0       0       0       0       0       0
   940 ;;      Locals:         1       0       0       0       0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0       0       0
   942 ;;      Totals:         1       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        1 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    5
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text1
   954  001E3E                     __ptext1:
   955                           	opt callstack 0
   956  001E3E                     _pump_tick:
   957                           	opt callstack 25
   958                           
   959                           ;main.c: 43: int8_t cod_ret = 0;
   960                           
   961                           ; BSR set to: 0
   962                           ;incstack = 0
   963  001E3E  0E00               	movlw	0
   964  001E40  6E0B               	movwf	pump_tick@cod_ret,c
   965                           
   966                           ;main.c: 44: static int8_t sm0;;main.c: 45: static int8_t c;;main.c: 47: if (sm0 == 0)
   967  001E42  5043               	movf	pump_tick@sm0,w,c
   968  001E44  A4D8               	btfss	status,2,c
   969  001E46  D005               	goto	l1964
   970  001E48  908D               	bcf	3981,0,c	;volatile
   971                           
   972                           ;main.c: 50: c = 0x0;
   973  001E4A  0E00               	movlw	0
   974  001E4C  6E42               	movwf	pump_tick@c,c
   975                           
   976                           ;main.c: 51: sm0++;
   977  001E4E  2A43               	incf	pump_tick@sm0,f,c
   978                           
   979                           ;main.c: 52: }
   980  001E50  D00E               	goto	l79
   981  001E52                     l1964:
   982                           
   983                           ;main.c: 53: else if (sm0 == 1)
   984  001E52  0443               	decf	pump_tick@sm0,w,c
   985  001E54  B4D8               	btfsc	status,2,c
   986                           
   987                           ;main.c: 54: {;main.c: 55: if (main_flag.f1ms)
   988  001E56  A044               	btfss	_main_flag,0,c	;volatile
   989  001E58  D00A               	goto	l79
   990                           
   991                           ;main.c: 56: {;main.c: 57: if (++c == 100)
   992  001E5A  2A42               	incf	pump_tick@c,f,c
   993  001E5C  0E64               	movlw	100
   994  001E5E  1842               	xorwf	pump_tick@c,w,c
   995  001E60  A4D8               	btfss	status,2,c
   996  001E62  D005               	goto	l79
   997                           
   998                           ;main.c: 58: {;main.c: 59: c = 0;
   999  001E64  0E00               	movlw	0
  1000  001E66  6E42               	movwf	pump_tick@c,c
  1001  001E68  808D               	bsf	3981,0,c	;volatile
  1002                           
  1003                           ;main.c: 61: cod_ret = 1;
  1004  001E6A  0E01               	movlw	1
  1005  001E6C  6E0B               	movwf	pump_tick@cod_ret,c
  1006  001E6E                     l79:
  1007                           
  1008                           ;main.c: 62: };main.c: 63: };main.c: 64: };main.c: 65: return cod_ret;
  1009  001E6E  500B               	movf	pump_tick@cod_ret,w,c
  1010  001E70  0012               	return		;funcret
  1011  001E72                     __end_of_pump_tick:
  1012                           	opt callstack 0
  1013                           
  1014 ;; *************** function _nozzle_moveto *****************
  1015 ;; Defined at:
  1016 ;;		line 108 in file "mpap.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  nozzle          1    wreg     char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  nozzle          1   20[COMRAM] char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 3F/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1030 ;;      Params:         0       0       0       0       0       0       0       0       0
  1031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1033 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1034 ;;Total ram usage:        1 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    6
  1037 ;; This function calls:
  1038 ;;		___wmul
  1039 ;;		_mpap_setupToTurn
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text2
  1046  001ED4                     __ptext2:
  1047                           	opt callstack 0
  1048  001ED4                     _nozzle_moveto:
  1049                           	opt callstack 24
  1050                           
  1051                           ;incstack = 0
  1052                           ;nozzle_moveto@nozzle stored from wreg
  1053  001ED4  6E15               	movwf	nozzle_moveto@nozzle,c
  1054                           
  1055                           ;mpap.c: 111: mpap_setupToTurn( (nozzle*200) - mpap.numSteps_current);
  1056  001ED6  5015               	movf	nozzle_moveto@nozzle,w,c
  1057  001ED8  6E0B               	movwf	___wmul@multiplier,c
  1058  001EDA  6A0C               	clrf	___wmul@multiplier+1,c
  1059  001EDC  BE0B               	btfsc	___wmul@multiplier,7,c
  1060  001EDE  060C               	decf	___wmul@multiplier+1,f,c
  1061  001EE0  0E00               	movlw	0
  1062  001EE2  6E0E               	movwf	___wmul@multiplicand+1,c
  1063  001EE4  0EC8               	movlw	200
  1064  001EE6  6E0D               	movwf	___wmul@multiplicand,c
  1065  001EE8  EC81  F00F         	call	___wmul	;wreg free
  1066  001EEC  5037               	movf	_mpap,w,c	;volatile
  1067  001EEE  5C0B               	subwf	?___wmul,w,c
  1068  001EF0  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1069  001EF2  5038               	movf	_mpap+1,w,c	;volatile
  1070  001EF4  580C               	subwfb	?___wmul+1,w,c
  1071  001EF6  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1072  001EF8  EC52  F00F         	call	_mpap_setupToTurn	;wreg free
  1073                           
  1074                           ;mpap.c: 113: mpap.mode = NORMAL_MODE;
  1075  001EFC  0E03               	movlw	3
  1076  001EFE  6E3E               	movwf	_mpap+7,c	;volatile
  1077  001F00  0012               	return		;funcret
  1078  001F02                     __end_of_nozzle_moveto:
  1079                           	opt callstack 0
  1080                           
  1081 ;; *************** function ___wmul *****************
  1082 ;; Defined at:
  1083 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  multiplier      2   10[COMRAM] unsigned int 
  1086 ;;  multiplicand    2   12[COMRAM] unsigned int 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  product         2   14[COMRAM] unsigned int 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2   10[COMRAM] unsigned int 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, prodl, prodh
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         4       0       0       0       0       0       0       0       0
  1099 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1101 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1102 ;;Total ram usage:        6 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    5
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_nozzle_moveto
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text3
  1113  001F02                     __ptext3:
  1114                           	opt callstack 0
  1115  001F02                     ___wmul:
  1116                           	opt callstack 24
  1117                           
  1118                           ;incstack = 0
  1119  001F02  500B               	movf	___wmul@multiplier,w,c
  1120  001F04  020D               	mulwf	___wmul@multiplicand,c
  1121  001F06  CFF3 F00F          	movff	prodl,___wmul@product
  1122  001F0A  CFF4 F010          	movff	prodh,___wmul@product+1
  1123  001F0E  500B               	movf	___wmul@multiplier,w,c
  1124  001F10  020E               	mulwf	___wmul@multiplicand+1,c
  1125  001F12  50F3               	movf	prodl,w,c
  1126  001F14  2610               	addwf	___wmul@product+1,f,c
  1127  001F16  500C               	movf	___wmul@multiplier+1,w,c
  1128  001F18  020D               	mulwf	___wmul@multiplicand,c
  1129  001F1A  50F3               	movf	prodl,w,c
  1130  001F1C  2610               	addwf	___wmul@product+1,f,c
  1131  001F1E  C00F  F00B         	movff	___wmul@product,?___wmul
  1132  001F22  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  1133  001F26  0012               	return		;funcret
  1134  001F28                     __end_of___wmul:
  1135                           	opt callstack 0
  1136                           
  1137 ;; *************** function _mpap_sych *****************
  1138 ;; Defined at:
  1139 ;;		line 172 in file "main.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    5
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text4
  1168  00198A                     __ptext4:
  1169                           	opt callstack 0
  1170  00198A                     _mpap_sych:
  1171                           	opt callstack 25
  1172                           
  1173                           ;main.c: 174: static int8_t sm0;;main.c: 175: static int8_t c;;main.c: 176: if (sm0 == 0
      +                          )
  1174                           
  1175                           ;incstack = 0
  1176  00198A  5041               	movf	mpap_sych@sm0,w,c
  1177  00198C  A4D8               	btfss	status,2,c
  1178  00198E  D010               	goto	l3084
  1179                           
  1180                           ;main.c: 177: {;main.c: 178: if ((mpap.mode == NORMAL_MODE) || (mpap.mode == HOMMING_MOD
      +                          E))
  1181  001990  0E03               	movlw	3
  1182  001992  183E               	xorwf	_mpap+7,w,c	;volatile
  1183  001994  B4D8               	btfsc	status,2,c
  1184  001996  D004               	goto	u3270
  1185  001998  0E02               	movlw	2
  1186  00199A  183E               	xorwf	_mpap+7,w,c	;volatile
  1187  00199C  A4D8               	btfss	status,2,c
  1188  00199E  D002               	goto	l3080
  1189  0019A0                     u3270:
  1190                           
  1191                           ;main.c: 179: {;main.c: 180: sm0++;
  1192  0019A0  2A41               	incf	mpap_sych@sm0,f,c
  1193                           
  1194                           ;main.c: 181: }
  1195  0019A2  0012               	return	
  1196  0019A4                     l3080:
  1197                           
  1198                           ;main.c: 182: else if (mpap.mode == STALL_MODE)
  1199  0019A4  043E               	decf	_mpap+7,w,c	;volatile
  1200  0019A6  A4D8               	btfss	status,2,c
  1201  0019A8  0012               	return	
  1202                           
  1203                           ;main.c: 183: {;main.c: 184: sm0 = 2;
  1204  0019AA  0E02               	movlw	2
  1205  0019AC  6E41               	movwf	mpap_sych@sm0,c
  1206  0019AE  0012               	return	
  1207  0019B0                     l3084:
  1208                           
  1209                           ;main.c: 187: else if (sm0 == 1)
  1210  0019B0  0441               	decf	mpap_sych@sm0,w,c
  1211  0019B2  A4D8               	btfss	status,2,c
  1212  0019B4  D012               	goto	l3100
  1213                           
  1214                           ;main.c: 188: {;main.c: 189: if (mpap.numSteps_tomove == 0)
  1215  0019B6  503B               	movf	_mpap+4,w,c	;volatile
  1216  0019B8  103C               	iorwf	_mpap+5,w,c	;volatile
  1217  0019BA  A4D8               	btfss	status,2,c
  1218  0019BC  0012               	return	
  1219                           
  1220                           ;main.c: 190: {;main.c: 191: if (mpap.mode == HOMMING_MODE)
  1221  0019BE  0E02               	movlw	2
  1222  0019C0  183E               	xorwf	_mpap+7,w,c	;volatile
  1223  0019C2  A4D8               	btfss	status,2,c
  1224  0019C4  D005               	goto	l3094
  1225                           
  1226                           ;main.c: 192: {;main.c: 193: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  1227  0019C6  0101               	movlb	1	; () banked
  1228  0019C8  A175               	btfss	(_pulsonic+117)& (0+255),0,b
  1229  0019CA  D003               	goto	l3096
  1230                           
  1231                           ; BSR set to: 1
  1232                           ;main.c: 194: {;main.c: 195: pulsonic.errors.flag.mpap_home_sensor = 0;
  1233  0019CC  9175               	bcf	(_pulsonic+117)& (0+255),0,b
  1234  0019CE  D001               	goto	l3096
  1235  0019D0                     l3094:
  1236                           
  1237                           ;main.c: 199: else if (mpap.mode == NORMAL_MODE)
  1238  0019D0  503E               	movf	_mpap+7,w,c	;volatile
  1239  0019D2                     l3096:
  1240                           
  1241                           ;main.c: 201: };main.c: 202: sm0++;
  1242  0019D2  2A41               	incf	mpap_sych@sm0,f,c
  1243                           
  1244                           ;main.c: 203: c = 0;
  1245  0019D4  0E00               	movlw	0
  1246  0019D6  6E40               	movwf	mpap_sych@c,c
  1247  0019D8  0012               	return	
  1248  0019DA                     l3100:
  1249                           
  1250                           ;main.c: 206: else if (sm0 == 2)
  1251  0019DA  0E02               	movlw	2
  1252  0019DC  1841               	xorwf	mpap_sych@sm0,w,c
  1253  0019DE  A4D8               	btfss	status,2,c
  1254  0019E0  D00A               	goto	l3110
  1255                           
  1256                           ;main.c: 207: {;main.c: 208: if (main_flag.f1ms)
  1257  0019E2  A044               	btfss	_main_flag,0,c	;volatile
  1258  0019E4  0012               	return	
  1259                           
  1260                           ;main.c: 209: {;main.c: 210: if (++c == 10)
  1261  0019E6  2A40               	incf	mpap_sych@c,f,c
  1262  0019E8  0E0A               	movlw	10
  1263  0019EA  1840               	xorwf	mpap_sych@c,w,c
  1264  0019EC  A4D8               	btfss	status,2,c
  1265  0019EE  0012               	return	
  1266                           
  1267                           ;main.c: 211: {;main.c: 213: mpap.mode = STALL_MODE;
  1268  0019F0  0E01               	movlw	1
  1269  0019F2  6E3E               	movwf	_mpap+7,c	;volatile
  1270  0019F4  D7D5               	goto	u3270
  1271  0019F6                     l3110:
  1272                           
  1273                           ;main.c: 218: else if (sm0 == 3)
  1274  0019F6  0E03               	movlw	3
  1275  0019F8  1841               	xorwf	mpap_sych@sm0,w,c
  1276  0019FA  A4D8               	btfss	status,2,c
  1277  0019FC  0012               	return	
  1278                           
  1279                           ;main.c: 219: {;main.c: 220: if (mpap.mode == IDLE_MODE)
  1280  0019FE  503E               	movf	_mpap+7,w,c	;volatile
  1281  001A00  A4D8               	btfss	status,2,c
  1282  001A02  0012               	return	
  1283                           
  1284                           ;main.c: 221: {;main.c: 223: sm0 = 0;
  1285  001A04  0E00               	movlw	0
  1286  001A06  6E41               	movwf	mpap_sych@sm0,c
  1287  001A08  0012               	return		;funcret
  1288  001A0A                     __end_of_mpap_sych:
  1289                           	opt callstack 0
  1290                           
  1291 ;; *************** function _mpap_setupToHomming *****************
  1292 ;; Defined at:
  1293 ;;		line 101 in file "mpap.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 3E/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    6
  1314 ;; This function calls:
  1315 ;;		_mpap_setupToTurn
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text5
  1322  001FCA                     __ptext5:
  1323                           	opt callstack 0
  1324  001FCA                     _mpap_setupToHomming:
  1325                           	opt callstack 24
  1326                           
  1327                           ;mpap.c: 103: mpap_setupToTurn( -1 *( (18*200) +20));
  1328                           
  1329                           ;incstack = 0
  1330  001FCA  0EF1               	movlw	241
  1331  001FCC  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1332  001FCE  0EDC               	movlw	220
  1333  001FD0  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1334  001FD2  EC52  F00F         	call	_mpap_setupToTurn	;wreg free
  1335                           
  1336                           ;mpap.c: 106: mpap.mode = HOMMING_MODE;
  1337  001FD6  0E02               	movlw	2
  1338  001FD8  6E3E               	movwf	_mpap+7,c	;volatile
  1339  001FDA  0012               	return		;funcret
  1340  001FDC                     __end_of_mpap_setupToHomming:
  1341                           	opt callstack 0
  1342                           
  1343 ;; *************** function _mpap_setupToTurn *****************
  1344 ;; Defined at:
  1345 ;;		line 89 in file "mpap.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  numSteps_tom    2   16[COMRAM] int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1359 ;;      Params:         2       0       0       0       0       0       0       0       0
  1360 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1362 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1363 ;;Total ram usage:        4 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    5
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_mpap_setupToHomming
  1370 ;;		_nozzle_moveto
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text6
  1375  001EA4                     __ptext6:
  1376                           	opt callstack 0
  1377  001EA4                     _mpap_setupToTurn:
  1378                           	opt callstack 24
  1379                           
  1380                           ;mpap.c: 92: if (numSteps_tomove !=0)
  1381                           
  1382                           ;incstack = 0
  1383  001EA4  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  1384  001EA6  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  1385  001EA8  B4D8               	btfsc	status,2,c
  1386  001EAA  0012               	return	
  1387                           
  1388                           ;mpap.c: 93: {;mpap.c: 94: mpap.KI = (numSteps_tomove<0)? -1: 1;
  1389  001EAC  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  1390  001EAE  D005               	goto	l492
  1391  001EB0  0E00               	movlw	0
  1392  001EB2  6E14               	movwf	_mpap_setupToTurn$418+1,c
  1393  001EB4  0E01               	movlw	1
  1394  001EB6  6E13               	movwf	_mpap_setupToTurn$418,c
  1395  001EB8  D002               	goto	l494
  1396  001EBA                     l492:
  1397  001EBA  6813               	setf	_mpap_setupToTurn$418,c
  1398  001EBC  6814               	setf	_mpap_setupToTurn$418+1,c
  1399  001EBE                     l494:
  1400  001EBE  C013  F03D         	movff	_mpap_setupToTurn$418,_mpap+6	;volatile
  1401                           
  1402                           ;mpap.c: 96: mpap.counter_steps = 0;
  1403  001EC2  0E00               	movlw	0
  1404  001EC4  6E3A               	movwf	_mpap+3,c	;volatile
  1405  001EC6  0E00               	movlw	0
  1406  001EC8  6E39               	movwf	_mpap+2,c	;volatile
  1407                           
  1408                           ;mpap.c: 98: mpap.numSteps_tomove = numSteps_tomove;
  1409  001ECA  C011  F03B         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  1410  001ECE  C012  F03C         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  1411  001ED2  0012               	return		;funcret
  1412  001ED4                     __end_of_mpap_setupToTurn:
  1413                           	opt callstack 0
  1414                           
  1415 ;; *************** function _ikb_key_is_ready2read *****************
  1416 ;; Defined at:
  1417 ;;		line 427 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  k               1    wreg     unsigned char 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  k               1   10[COMRAM] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      unsigned char 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 3F/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1431 ;;      Params:         0       0       0       0       0       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1434 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1435 ;;Total ram usage:        1 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    5
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text7
  1446  001FAE                     __ptext7:
  1447                           	opt callstack 0
  1448  001FAE                     _ikb_key_is_ready2read:
  1449                           	opt callstack 25
  1450                           
  1451                           ;incstack = 0
  1452                           ;ikb_key_is_ready2read@k stored from wreg
  1453  001FAE  6E0B               	movwf	ikb_key_is_ready2read@k,c
  1454                           
  1455                           ;ikb.c: 429: return key[k].bf.ReadyToRead;
  1456  001FB0  500B               	movf	ikb_key_is_ready2read@k,w,c
  1457  001FB2  0D10               	mullw	16
  1458  001FB4  50F3               	movf	prodl,w,c
  1459  001FB6  0F6A               	addlw	low (_key+10)
  1460  001FB8  6ED9               	movwf	fsr2l,c
  1461  001FBA  6ADA               	clrf	fsr2h,c
  1462  001FBC  0100               	movlb	0	; () banked
  1463  001FBE  ACDF               	btfss	indf2,6,c
  1464  001FC0  D002               	goto	u3230
  1465  001FC2  0E01               	movlw	1
  1466  001FC4  0012               	return	
  1467  001FC6                     u3230:
  1468  001FC6  0E00               	movlw	0
  1469                           
  1470                           ; BSR set to: 0
  1471  001FC8  0012               	return		;funcret
  1472  001FCA                     __end_of_ikb_key_is_ready2read:
  1473                           	opt callstack 0
  1474                           
  1475 ;; *************** function _ikb_job *****************
  1476 ;; Defined at:
  1477 ;;		line 414 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1491 ;;      Params:         0       0       0       0       0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    8
  1498 ;; This function calls:
  1499 ;;		_ikey_parsing
  1500 ;;		_ikey_scan
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text8
  1507  001FDC                     __ptext8:
  1508                           	opt callstack 0
  1509  001FDC                     _ikb_job:
  1510                           	opt callstack 22
  1511                           
  1512                           ;ikb.c: 416: ikey_scan();
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;incstack = 0
  1516  001FDC  EC43  F009         	call	_ikey_scan	;wreg free
  1517                           
  1518                           ;ikb.c: 417: ikey_parsing();
  1519  001FE0  EC07  F004         	call	_ikey_parsing	;wreg free
  1520  001FE4  0012               	return		;funcret
  1521  001FE6                     __end_of_ikb_job:
  1522                           	opt callstack 0
  1523                           
  1524 ;; *************** function _ikey_scan *****************
  1525 ;; Defined at:
  1526 ;;		line 449 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  k               1   11[COMRAM] char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0
  1541 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1542 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1543 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    6
  1547 ;; This function calls:
  1548 ;;		_keyRead_pin_key1
  1549 ;;		_keyRead_pin_key2
  1550 ;;		_keyRead_pin_key3
  1551 ;;		_keyRead_pin_key4
  1552 ;;		_keyRead_pin_key5
  1553 ;; This function is called by:
  1554 ;;		_ikb_job
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text9
  1559  001286                     __ptext9:
  1560                           	opt callstack 0
  1561  001286                     _ikey_scan:
  1562                           	opt callstack 23
  1563                           
  1564                           ;ikb.c: 451: int8_t k = 5-1;
  1565                           
  1566                           ;incstack = 0
  1567  001286  0E04               	movlw	4
  1568  001288  6E0C               	movwf	ikey_scan@k,c
  1569  00128A                     l2560:
  1570                           
  1571                           ;ikb.c: 453: {;ikb.c: 454: if (key[k].sm0 == 0)
  1572  00128A  500C               	movf	ikey_scan@k,w,c
  1573  00128C  0D10               	mullw	16
  1574  00128E  50F3               	movf	prodl,w,c
  1575  001290  0F64               	addlw	low (_key+4)
  1576  001292  6ED9               	movwf	fsr2l,c
  1577  001294  6ADA               	clrf	fsr2h,c
  1578  001296  50DF               	movf	indf2,w,c
  1579  001298  A4D8               	btfss	status,2,c
  1580  00129A  D016               	goto	l2566
  1581                           
  1582                           ;ikb.c: 455: {;ikb.c: 456: if (key[k].keyRead() == 0)
  1583  00129C  500C               	movf	ikey_scan@k,w,c
  1584  00129E  0D10               	mullw	16
  1585  0012A0  50F3               	movf	prodl,w,c
  1586  0012A2  0F60               	addlw	low _key
  1587  0012A4  6ED9               	movwf	fsr2l,c
  1588  0012A6  6ADA               	clrf	fsr2h,c
  1589  0012A8  D801               	call	u2278
  1590  0012AA  D00A               	goto	u2279
  1591  0012AC                     u2278:
  1592  0012AC  0005               	push	
  1593  0012AE  6EFA               	movwf	pclath,c
  1594  0012B0  50DE               	movf	postinc2,w,c
  1595  0012B2  6EFD               	movwf	tosl,c
  1596  0012B4  50DE               	movf	postinc2,w,c
  1597  0012B6  6EFE               	movwf	tosh,c
  1598  0012B8  50F8               	movf	tblptru,w,c
  1599  0012BA  6EFF               	movwf	tosu,c
  1600  0012BC  50FA               	movf	pclath,w,c
  1601  0012BE  0012               	return		;indir
  1602  0012C0                     u2279:
  1603  0012C0  0900               	iorlw	0
  1604  0012C2  A4D8               	btfss	status,2,c
  1605  0012C4  D0AC               	goto	l2596
  1606  0012C6  D041               	goto	L1
  1607  0012C8                     l2566:
  1608                           
  1609                           ;ikb.c: 461: else if (key[k].sm0 == 1)
  1610  0012C8  500C               	movf	ikey_scan@k,w,c
  1611  0012CA  0D10               	mullw	16
  1612  0012CC  50F3               	movf	prodl,w,c
  1613  0012CE  0F64               	addlw	low (_key+4)
  1614  0012D0  6ED9               	movwf	fsr2l,c
  1615  0012D2  6ADA               	clrf	fsr2h,c
  1616  0012D4  04DE               	decf	postinc2,w,c
  1617  0012D6  A4D8               	btfss	status,2,c
  1618  0012D8  D040               	goto	l2578
  1619                           
  1620                           ;ikb.c: 462: {;ikb.c: 463: if (++key[k].counter0 == 4)
  1621  0012DA  500C               	movf	ikey_scan@k,w,c
  1622  0012DC  0D10               	mullw	16
  1623  0012DE  50F3               	movf	prodl,w,c
  1624  0012E0  0F65               	addlw	low (_key+5)
  1625  0012E2  6ED9               	movwf	fsr2l,c
  1626  0012E4  6ADA               	clrf	fsr2h,c
  1627  0012E6  2ADF               	incf	indf2,f,c
  1628  0012E8  0E04               	movlw	4
  1629  0012EA  18DE               	xorwf	postinc2,w,c
  1630  0012EC  A4D8               	btfss	status,2,c
  1631  0012EE  D097               	goto	l2596
  1632                           
  1633                           ;ikb.c: 464: {;ikb.c: 465: key[k].counter0 = 0x00;
  1634  0012F0  500C               	movf	ikey_scan@k,w,c
  1635  0012F2  0D10               	mullw	16
  1636  0012F4  50F3               	movf	prodl,w,c
  1637  0012F6  0F65               	addlw	low (_key+5)
  1638  0012F8  6ED9               	movwf	fsr2l,c
  1639  0012FA  6ADA               	clrf	fsr2h,c
  1640  0012FC  0E00               	movlw	0
  1641  0012FE  6EDF               	movwf	indf2,c
  1642                           
  1643                           ;ikb.c: 467: if (key[k].keyRead() != 0)
  1644  001300  500C               	movf	ikey_scan@k,w,c
  1645  001302  0D10               	mullw	16
  1646  001304  50F3               	movf	prodl,w,c
  1647  001306  0F60               	addlw	low _key
  1648  001308  6ED9               	movwf	fsr2l,c
  1649  00130A  6ADA               	clrf	fsr2h,c
  1650  00130C  D801               	call	u2318
  1651  00130E  D00A               	goto	u2319
  1652  001310                     u2318:
  1653  001310  0005               	push	
  1654  001312  6EFA               	movwf	pclath,c
  1655  001314  50DE               	movf	postinc2,w,c
  1656  001316  6EFD               	movwf	tosl,c
  1657  001318  50DE               	movf	postinc2,w,c
  1658  00131A  6EFE               	movwf	tosh,c
  1659  00131C  50F8               	movf	tblptru,w,c
  1660  00131E  6EFF               	movwf	tosu,c
  1661  001320  50FA               	movf	pclath,w,c
  1662  001322  0012               	return		;indir
  1663  001324                     u2319:
  1664  001324  0900               	iorlw	0
  1665  001326  B4D8               	btfsc	status,2,c
  1666  001328  D008               	goto	l2576
  1667  00132A                     u2320:
  1668                           
  1669                           ;ikb.c: 468: {;ikb.c: 469: key[k].sm0--;
  1670  00132A  500C               	movf	ikey_scan@k,w,c
  1671  00132C  0D10               	mullw	16
  1672  00132E  50F3               	movf	prodl,w,c
  1673  001330  0F64               	addlw	low (_key+4)
  1674  001332  6ED9               	movwf	fsr2l,c
  1675  001334  6ADA               	clrf	fsr2h,c
  1676  001336  06DF               	decf	indf2,f,c
  1677                           
  1678                           ;ikb.c: 470: }
  1679  001338  D072               	goto	l2596
  1680  00133A                     l2576:
  1681                           
  1682                           ;ikb.c: 471: else;ikb.c: 472: {;ikb.c: 473: key[k].bf.state = 1;
  1683  00133A  500C               	movf	ikey_scan@k,w,c
  1684  00133C  0D10               	mullw	16
  1685  00133E  50F3               	movf	prodl,w,c
  1686  001340  0F6A               	addlw	low (_key+10)
  1687  001342  6ED9               	movwf	fsr2l,c
  1688  001344  6ADA               	clrf	fsr2h,c
  1689  001346  0100               	movlb	0	; () banked
  1690  001348  80DF               	bsf	indf2,0,c
  1691  00134A                     L1:
  1692                           
  1693                           ;ikb.c: 474: key[k].sm0++;
  1694  00134A  500C               	movf	ikey_scan@k,w,c
  1695  00134C  0D10               	mullw	16
  1696  00134E  50F3               	movf	prodl,w,c
  1697  001350  0F64               	addlw	low (_key+4)
  1698  001352  6ED9               	movwf	fsr2l,c
  1699  001354  6ADA               	clrf	fsr2h,c
  1700  001356  2ADF               	incf	indf2,f,c
  1701  001358  D062               	goto	l2596
  1702  00135A                     l2578:
  1703                           
  1704                           ;ikb.c: 478: else if (key[k].sm0 == 2)
  1705  00135A  500C               	movf	ikey_scan@k,w,c
  1706  00135C  0D10               	mullw	16
  1707  00135E  50F3               	movf	prodl,w,c
  1708  001360  0F64               	addlw	low (_key+4)
  1709  001362  6ED9               	movwf	fsr2l,c
  1710  001364  6ADA               	clrf	fsr2h,c
  1711  001366  0E02               	movlw	2
  1712  001368  18DE               	xorwf	postinc2,w,c
  1713  00136A  A4D8               	btfss	status,2,c
  1714  00136C  D016               	goto	l2584
  1715                           
  1716                           ;ikb.c: 479: {;ikb.c: 480: if (key[k].keyRead() == 1)
  1717  00136E  500C               	movf	ikey_scan@k,w,c
  1718  001370  0D10               	mullw	16
  1719  001372  50F3               	movf	prodl,w,c
  1720  001374  0F60               	addlw	low _key
  1721  001376  6ED9               	movwf	fsr2l,c
  1722  001378  6ADA               	clrf	fsr2h,c
  1723  00137A  D801               	call	u2348
  1724  00137C  D00A               	goto	u2349
  1725  00137E                     u2348:
  1726  00137E  0005               	push	
  1727  001380  6EFA               	movwf	pclath,c
  1728  001382  50DE               	movf	postinc2,w,c
  1729  001384  6EFD               	movwf	tosl,c
  1730  001386  50DE               	movf	postinc2,w,c
  1731  001388  6EFE               	movwf	tosh,c
  1732  00138A  50F8               	movf	tblptru,w,c
  1733  00138C  6EFF               	movwf	tosu,c
  1734  00138E  50FA               	movf	pclath,w,c
  1735  001390  0012               	return		;indir
  1736  001392                     u2349:
  1737  001392  06E8               	decf	wreg,f,c
  1738  001394  B4D8               	btfsc	status,2,c
  1739  001396  D7D9               	goto	L1
  1740  001398  D042               	goto	l2596
  1741  00139A                     l2584:
  1742                           
  1743                           ;ikb.c: 483: else if (key[k].sm0 == 3)
  1744  00139A  500C               	movf	ikey_scan@k,w,c
  1745  00139C  0D10               	mullw	16
  1746  00139E  50F3               	movf	prodl,w,c
  1747  0013A0  0F64               	addlw	low (_key+4)
  1748  0013A2  6ED9               	movwf	fsr2l,c
  1749  0013A4  6ADA               	clrf	fsr2h,c
  1750  0013A6  0E03               	movlw	3
  1751  0013A8  18DE               	xorwf	postinc2,w,c
  1752  0013AA  A4D8               	btfss	status,2,c
  1753  0013AC  D038               	goto	l2596
  1754                           
  1755                           ;ikb.c: 484: {;ikb.c: 485: if (++key[k].counter0 == 4)
  1756  0013AE  500C               	movf	ikey_scan@k,w,c
  1757  0013B0  0D10               	mullw	16
  1758  0013B2  50F3               	movf	prodl,w,c
  1759  0013B4  0F65               	addlw	low (_key+5)
  1760  0013B6  6ED9               	movwf	fsr2l,c
  1761  0013B8  6ADA               	clrf	fsr2h,c
  1762  0013BA  2ADF               	incf	indf2,f,c
  1763  0013BC  0E04               	movlw	4
  1764  0013BE  18DE               	xorwf	postinc2,w,c
  1765  0013C0  A4D8               	btfss	status,2,c
  1766  0013C2  D02D               	goto	l2596
  1767                           
  1768                           ;ikb.c: 486: {;ikb.c: 487: key[k].counter0 = 0x00;
  1769  0013C4  500C               	movf	ikey_scan@k,w,c
  1770  0013C6  0D10               	mullw	16
  1771  0013C8  50F3               	movf	prodl,w,c
  1772  0013CA  0F65               	addlw	low (_key+5)
  1773  0013CC  6ED9               	movwf	fsr2l,c
  1774  0013CE  6ADA               	clrf	fsr2h,c
  1775  0013D0  0E00               	movlw	0
  1776  0013D2  6EDF               	movwf	indf2,c
  1777                           
  1778                           ;ikb.c: 489: if (key[k].keyRead() != 1)
  1779  0013D4  500C               	movf	ikey_scan@k,w,c
  1780  0013D6  0D10               	mullw	16
  1781  0013D8  50F3               	movf	prodl,w,c
  1782  0013DA  0F60               	addlw	low _key
  1783  0013DC  6ED9               	movwf	fsr2l,c
  1784  0013DE  6ADA               	clrf	fsr2h,c
  1785  0013E0  D801               	call	u2388
  1786  0013E2  D00A               	goto	u2389
  1787  0013E4                     u2388:
  1788  0013E4  0005               	push	
  1789  0013E6  6EFA               	movwf	pclath,c
  1790  0013E8  50DE               	movf	postinc2,w,c
  1791  0013EA  6EFD               	movwf	tosl,c
  1792  0013EC  50DE               	movf	postinc2,w,c
  1793  0013EE  6EFE               	movwf	tosh,c
  1794  0013F0  50F8               	movf	tblptru,w,c
  1795  0013F2  6EFF               	movwf	tosu,c
  1796  0013F4  50FA               	movf	pclath,w,c
  1797  0013F6  0012               	return		;indir
  1798  0013F8                     u2389:
  1799  0013F8  06E8               	decf	wreg,f,c
  1800  0013FA  A4D8               	btfss	status,2,c
  1801  0013FC  D796               	goto	u2320
  1802                           
  1803                           ;ikb.c: 493: else;ikb.c: 494: {;ikb.c: 495: key[k].bf.state = 0;
  1804  0013FE  500C               	movf	ikey_scan@k,w,c
  1805  001400  0D10               	mullw	16
  1806  001402  50F3               	movf	prodl,w,c
  1807  001404  0F6A               	addlw	low (_key+10)
  1808  001406  6ED9               	movwf	fsr2l,c
  1809  001408  6ADA               	clrf	fsr2h,c
  1810  00140A  0100               	movlb	0	; () banked
  1811  00140C  90DF               	bcf	indf2,0,c
  1812                           
  1813                           ;ikb.c: 496: key[k].sm0 = 0x00;
  1814  00140E  500C               	movf	ikey_scan@k,w,c
  1815  001410  0D10               	mullw	16
  1816  001412  50F3               	movf	prodl,w,c
  1817  001414  0F64               	addlw	low (_key+4)
  1818  001416  6ED9               	movwf	fsr2l,c
  1819  001418  6ADA               	clrf	fsr2h,c
  1820  00141A  0E00               	movlw	0
  1821  00141C  6EDF               	movwf	indf2,c
  1822  00141E                     l2596:
  1823                           
  1824                           ;ikb.c: 497: };ikb.c: 498: };ikb.c: 499: };ikb.c: 500: }while (--k >= 0);
  1825  00141E  060C               	decf	ikey_scan@k,f,c
  1826  001420  BE0C               	btfsc	ikey_scan@k,7,c
  1827  001422  0012               	return	
  1828  001424  D732               	goto	l2560
  1829  001426                     __end_of_ikey_scan:
  1830                           	opt callstack 0
  1831                           
  1832 ;; *************** function _keyRead_pin_key4 *****************
  1833 ;; Defined at:
  1834 ;;		line 206 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      unsigned char 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1848 ;;      Params:         0       0       0       0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    5
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_ikb_init
  1859 ;;		_ikey_scan
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text10
  1864  002014                     __ptext10:
  1865                           	opt callstack 0
  1866  002014                     _keyRead_pin_key4:
  1867                           	opt callstack 23
  1868                           
  1869                           ;ikb.c: 208: return ((PORTC & (1<<7))>>7);
  1870                           
  1871                           ;incstack = 0
  1872  002014  4482               	rlncf	3970,w,c	;volatile
  1873  002016  0B01               	andlw	1
  1874  002018  0012               	return		;funcret
  1875  00201A                     __end_of_keyRead_pin_key4:
  1876                           	opt callstack 0
  1877                           
  1878 ;; *************** function _keyRead_pin_key3 *****************
  1879 ;; Defined at:
  1880 ;;		line 202 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    5
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_ikb_init
  1905 ;;		_ikey_scan
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text11
  1910  001FE6                     __ptext11:
  1911                           	opt callstack 0
  1912  001FE6                     _keyRead_pin_key3:
  1913                           	opt callstack 23
  1914                           
  1915                           ;ikb.c: 204: return ((PORTC & (1<<6))>>6);
  1916                           
  1917                           ;incstack = 0
  1918  001FE6  4482               	rlncf	3970,w,c	;volatile
  1919  001FE8  46E8               	rlncf	wreg,f,c
  1920  001FEA  0B03               	andlw	3
  1921  001FEC  0B01               	andlw	1
  1922  001FEE  0012               	return		;funcret
  1923  001FF0                     __end_of_keyRead_pin_key3:
  1924                           	opt callstack 0
  1925                           
  1926 ;; *************** function _keyRead_pin_key2 *****************
  1927 ;; Defined at:
  1928 ;;		line 198 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      unsigned char 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1942 ;;      Params:         0       0       0       0       0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1945 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1946 ;;Total ram usage:        0 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    5
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_ikb_init
  1953 ;;		_ikey_scan
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text12
  1958  001FF0                     __ptext12:
  1959                           	opt callstack 0
  1960  001FF0                     _keyRead_pin_key2:
  1961                           	opt callstack 23
  1962                           
  1963                           ;ikb.c: 200: return ((PORTC & (1<<5))>>5);
  1964                           
  1965                           ;incstack = 0
  1966  001FF0  3882               	swapf	3970,w,c	;volatile
  1967  001FF2  42E8               	rrncf	wreg,f,c
  1968  001FF4  0B07               	andlw	7
  1969  001FF6  0B01               	andlw	1
  1970  001FF8  0012               	return		;funcret
  1971  001FFA                     __end_of_keyRead_pin_key2:
  1972                           	opt callstack 0
  1973                           
  1974 ;; *************** function _keyRead_pin_key1 *****************
  1975 ;; Defined at:
  1976 ;;		line 194 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      unsigned char 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    5
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_ikb_init
  2001 ;;		_ikey_scan
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text13
  2006  002004                     __ptext13:
  2007                           	opt callstack 0
  2008  002004                     _keyRead_pin_key1:
  2009                           	opt callstack 23
  2010                           
  2011                           ;ikb.c: 196: return ((PORTC & (1<<4))>>4);
  2012                           
  2013                           ;incstack = 0
  2014  002004  3882               	swapf	3970,w,c	;volatile
  2015  002006  0B0F               	andlw	15
  2016  002008  0B01               	andlw	1
  2017  00200A  0012               	return		;funcret
  2018  00200C                     __end_of_keyRead_pin_key1:
  2019                           	opt callstack 0
  2020                           
  2021 ;; *************** function _keyRead_pin_key5 *****************
  2022 ;; Defined at:
  2023 ;;		line 210 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      unsigned char 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    5
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_ikb_init
  2048 ;;		_ikey_scan
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text14
  2053  00200C                     __ptext14:
  2054                           	opt callstack 0
  2055  00200C                     _keyRead_pin_key5:
  2056                           	opt callstack 23
  2057                           
  2058                           ;ikb.c: 212: return ((PORTD & (1<<4))>>4);
  2059                           
  2060                           ;incstack = 0
  2061  00200C  3883               	swapf	3971,w,c	;volatile
  2062  00200E  0B0F               	andlw	15
  2063  002010  0B01               	andlw	1
  2064  002012  0012               	return		;funcret
  2065  002014                     __end_of_keyRead_pin_key5:
  2066                           	opt callstack 0
  2067                           
  2068 ;; *************** function _ikey_parsing *****************
  2069 ;; Defined at:
  2070 ;;		line 545 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  k               1   34[COMRAM] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0
  2085 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2086 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2087 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2088 ;;Total ram usage:        5 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    7
  2091 ;; This function calls:
  2092 ;;		___ftge
  2093 ;;		___lwtoft
  2094 ;;		_ikey_is_accessible
  2095 ;; This function is called by:
  2096 ;;		_ikb_job
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text15
  2101  00080E                     __ptext15:
  2102                           	opt callstack 0
  2103  00080E                     _ikey_parsing:
  2104                           	opt callstack 22
  2105                           
  2106                           ;ikb.c: 547: uint8_t k;;ikb.c: 549: for (k=0; k < 5; k++)
  2107                           
  2108                           ;incstack = 0
  2109  00080E  0E00               	movlw	0
  2110  000810  6E23               	movwf	ikey_parsing@k,c
  2111  000812                     l3436:
  2112                           
  2113                           ;ikb.c: 550: {;ikb.c: 551: if ( key[k].sm1 == (0) )
  2114  000812  5023               	movf	ikey_parsing@k,w,c
  2115  000814  0D10               	mullw	16
  2116  000816  50F3               	movf	prodl,w,c
  2117  000818  0F66               	addlw	low (_key+6)
  2118  00081A  6ED9               	movwf	fsr2l,c
  2119  00081C  6ADA               	clrf	fsr2h,c
  2120  00081E  50DF               	movf	indf2,w,c
  2121  000820  A4D8               	btfss	status,2,c
  2122  000822  D08B               	goto	l265
  2123                           
  2124                           ;ikb.c: 552: {;ikb.c: 553: if ( ikey_is_accessible(k) )
  2125  000824  5023               	movf	ikey_parsing@k,w,c
  2126  000826  ECEE  F00D         	call	_ikey_is_accessible
  2127  00082A  0900               	iorlw	0
  2128  00082C  B4D8               	btfsc	status,2,c
  2129  00082E  D085               	goto	l265
  2130                           
  2131                           ;ikb.c: 554: {;ikb.c: 555: if (key[k].bf.state == 1)
  2132  000830  5023               	movf	ikey_parsing@k,w,c
  2133  000832  0D10               	mullw	16
  2134  000834  50F3               	movf	prodl,w,c
  2135  000836  0F6A               	addlw	low (_key+10)
  2136  000838  6ED9               	movwf	fsr2l,c
  2137  00083A  6ADA               	clrf	fsr2h,c
  2138  00083C  0100               	movlb	0	; () banked
  2139  00083E  A0DF               	btfss	indf2,0,c
  2140  000840  D07C               	goto	l265
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;ikb.c: 556: {;ikb.c: 558: if (key[k].bf.OnKeyPressed)
  2144  000842  5023               	movf	ikey_parsing@k,w,c
  2145  000844  0D10               	mullw	16
  2146  000846  50F3               	movf	prodl,w,c
  2147  000848  0F6A               	addlw	low (_key+10)
  2148  00084A  6ED9               	movwf	fsr2l,c
  2149  00084C  6ADA               	clrf	fsr2h,c
  2150  00084E  A2DF               	btfss	indf2,1,c
  2151  000850  D01F               	goto	l3450
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;ikb.c: 559: {;ikb.c: 560: key[k].bf.ReadyToRead = 1;
  2155  000852  5023               	movf	ikey_parsing@k,w,c
  2156  000854  0D10               	mullw	16
  2157  000856  50F3               	movf	prodl,w,c
  2158  000858  0F6A               	addlw	low (_key+10)
  2159  00085A  6ED9               	movwf	fsr2l,c
  2160  00085C  6ADA               	clrf	fsr2h,c
  2161  00085E  8CDF               	bsf	indf2,6,c
  2162                           
  2163                           ;ikb.c: 562: if (key[k].bf.Reptt)
  2164  000860  5023               	movf	ikey_parsing@k,w,c
  2165  000862  0D10               	mullw	16
  2166  000864  50F3               	movf	prodl,w,c
  2167  000866  0F6A               	addlw	low (_key+10)
  2168  000868  6ED9               	movwf	fsr2l,c
  2169  00086A  6ADA               	clrf	fsr2h,c
  2170  00086C  AADF               	btfss	indf2,5,c
  2171  00086E  D008               	goto	l3448
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;ikb.c: 563: {;ikb.c: 564: key[k].sm1 = (6);
  2175  000870  5023               	movf	ikey_parsing@k,w,c
  2176  000872  0D10               	mullw	16
  2177  000874  50F3               	movf	prodl,w,c
  2178  000876  0F66               	addlw	low (_key+6)
  2179  000878  6ED9               	movwf	fsr2l,c
  2180  00087A  6ADA               	clrf	fsr2h,c
  2181  00087C  0E06               	movlw	6
  2182  00087E  D037               	goto	L2
  2183  000880                     l3448:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;ikb.c: 566: else;ikb.c: 567: {;ikb.c: 568: key[k].sm1 = (1);
  2187  000880  5023               	movf	ikey_parsing@k,w,c
  2188  000882  0D10               	mullw	16
  2189  000884  50F3               	movf	prodl,w,c
  2190  000886  0F66               	addlw	low (_key+6)
  2191  000888  6ED9               	movwf	fsr2l,c
  2192  00088A  6ADA               	clrf	fsr2h,c
  2193  00088C  0E01               	movlw	1
  2194  00088E  D02F               	goto	L2
  2195  000890                     l3450:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;ikb.c: 571: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2199  000890  5023               	movf	ikey_parsing@k,w,c
  2200  000892  0D10               	mullw	16
  2201  000894  50F3               	movf	prodl,w,c
  2202  000896  0F6A               	addlw	low (_key+10)
  2203  000898  6ED9               	movwf	fsr2l,c
  2204  00089A  6ADA               	clrf	fsr2h,c
  2205  00089C  A4DF               	btfss	indf2,2,c
  2206  00089E  D008               	goto	l3454
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;ikb.c: 572: {;ikb.c: 573: key[k].sm1 = (5);
  2210  0008A0  5023               	movf	ikey_parsing@k,w,c
  2211  0008A2  0D10               	mullw	16
  2212  0008A4  50F3               	movf	prodl,w,c
  2213  0008A6  0F66               	addlw	low (_key+6)
  2214  0008A8  6ED9               	movwf	fsr2l,c
  2215  0008AA  6ADA               	clrf	fsr2h,c
  2216  0008AC  0E05               	movlw	5
  2217  0008AE  D01F               	goto	L2
  2218  0008B0                     l3454:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;ikb.c: 576: else if (key[k].bf.AtTimeExpired)
  2222  0008B0  5023               	movf	ikey_parsing@k,w,c
  2223  0008B2  0D10               	mullw	16
  2224  0008B4  50F3               	movf	prodl,w,c
  2225  0008B6  0F6A               	addlw	low (_key+10)
  2226  0008B8  6ED9               	movwf	fsr2l,c
  2227  0008BA  6ADA               	clrf	fsr2h,c
  2228  0008BC  A6DF               	btfss	indf2,3,c
  2229  0008BE  D008               	goto	l3458
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;ikb.c: 577: {;ikb.c: 578: key[k].sm1 = (3);
  2233  0008C0  5023               	movf	ikey_parsing@k,w,c
  2234  0008C2  0D10               	mullw	16
  2235  0008C4  50F3               	movf	prodl,w,c
  2236  0008C6  0F66               	addlw	low (_key+6)
  2237  0008C8  6ED9               	movwf	fsr2l,c
  2238  0008CA  6ADA               	clrf	fsr2h,c
  2239  0008CC  0E03               	movlw	3
  2240  0008CE  D00F               	goto	L2
  2241  0008D0                     l3458:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;ikb.c: 580: else if (key[k].bf.AtTimeExpired2)
  2245  0008D0  5023               	movf	ikey_parsing@k,w,c
  2246  0008D2  0D10               	mullw	16
  2247  0008D4  50F3               	movf	prodl,w,c
  2248  0008D6  0F6A               	addlw	low (_key+10)
  2249  0008D8  6ED9               	movwf	fsr2l,c
  2250  0008DA  6ADA               	clrf	fsr2h,c
  2251  0008DC  A8DF               	btfss	indf2,4,c
  2252  0008DE  D008               	goto	l271
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;ikb.c: 581: {;ikb.c: 582: key[k].sm1 = (4);
  2256  0008E0  5023               	movf	ikey_parsing@k,w,c
  2257  0008E2  0D10               	mullw	16
  2258  0008E4  50F3               	movf	prodl,w,c
  2259  0008E6  0F66               	addlw	low (_key+6)
  2260  0008E8  6ED9               	movwf	fsr2l,c
  2261  0008EA  6ADA               	clrf	fsr2h,c
  2262  0008EC  0E04               	movlw	4
  2263  0008EE                     L2:
  2264  0008EE  6EDF               	movwf	indf2,c
  2265  0008F0                     l271:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;ikb.c: 583: };ikb.c: 586: key[k].bf.InProcessing = 1;
  2269  0008F0  5023               	movf	ikey_parsing@k,w,c
  2270  0008F2  0D10               	mullw	16
  2271  0008F4  50F3               	movf	prodl,w,c
  2272  0008F6  0F6B               	addlw	low (_key+11)
  2273  0008F8  6ED9               	movwf	fsr2l,c
  2274  0008FA  6ADA               	clrf	fsr2h,c
  2275  0008FC  82DF               	bsf	indf2,1,c
  2276                           
  2277                           ;ikb.c: 591: if (key[k].num_group_x != 0)
  2278  0008FE  5023               	movf	ikey_parsing@k,w,c
  2279  000900  0D10               	mullw	16
  2280  000902  50F3               	movf	prodl,w,c
  2281  000904  0F69               	addlw	low (_key+9)
  2282  000906  6ED9               	movwf	fsr2l,c
  2283  000908  6ADA               	clrf	fsr2h,c
  2284  00090A  50DF               	movf	indf2,w,c
  2285  00090C  B4D8               	btfsc	status,2,c
  2286  00090E  D015               	goto	l265
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;ikb.c: 592: {;ikb.c: 593: group_x[ key[k].num_group_x ] = 1;
  2290  000910  5023               	movf	ikey_parsing@k,w,c
  2291  000912  0D10               	mullw	16
  2292  000914  50F3               	movf	prodl,w,c
  2293  000916  0F69               	addlw	low (_key+9)
  2294  000918  6ED9               	movwf	fsr2l,c
  2295  00091A  6ADA               	clrf	fsr2h,c
  2296  00091C  50DF               	movf	indf2,w,c
  2297  00091E  6E1F               	movwf	??_ikey_parsing& (0+255),c
  2298  000920  501F               	movf	??_ikey_parsing,w,c
  2299  000922  0FB0               	addlw	low _group_x
  2300  000924  6ED9               	movwf	fsr2l,c
  2301  000926  6ADA               	clrf	fsr2h,c
  2302  000928  0E01               	movlw	1
  2303  00092A  6EDF               	movwf	indf2,c
  2304                           
  2305                           ;ikb.c: 594: key[k].bf.OwnerOfGroup = 1;
  2306  00092C  5023               	movf	ikey_parsing@k,w,c
  2307  00092E  0D10               	mullw	16
  2308  000930  50F3               	movf	prodl,w,c
  2309  000932  0F6B               	addlw	low (_key+11)
  2310  000934  6ED9               	movwf	fsr2l,c
  2311  000936  6ADA               	clrf	fsr2h,c
  2312  000938  80DF               	bsf	indf2,0,c
  2313  00093A                     l265:
  2314                           
  2315                           ;ikb.c: 595: };ikb.c: 597: };ikb.c: 598: };ikb.c: 599: };ikb.c: 603: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2316  00093A  5023               	movf	ikey_parsing@k,w,c
  2317  00093C  0D10               	mullw	16
  2318  00093E  50F3               	movf	prodl,w,c
  2319  000940  0F66               	addlw	low (_key+6)
  2320  000942  6ED9               	movwf	fsr2l,c
  2321  000944  6ADA               	clrf	fsr2h,c
  2322  000946  0E05               	movlw	5
  2323  000948  64DF               	cpfsgt	indf2,c
  2324  00094A  D024               	goto	l278
  2325  00094C  5023               	movf	ikey_parsing@k,w,c
  2326  00094E  0D10               	mullw	16
  2327  000950  50F3               	movf	prodl,w,c
  2328  000952  0F66               	addlw	low (_key+6)
  2329  000954  6ED9               	movwf	fsr2l,c
  2330  000956  6ADA               	clrf	fsr2h,c
  2331  000958  0E09               	movlw	9
  2332  00095A  60DF               	cpfslt	indf2,c
  2333  00095C  D01B               	goto	l278
  2334                           
  2335                           ;ikb.c: 604: {;ikb.c: 605: if (key[k].bf.state == 0)
  2336  00095E  5023               	movf	ikey_parsing@k,w,c
  2337  000960  0D10               	mullw	16
  2338  000962  50F3               	movf	prodl,w,c
  2339  000964  0F6A               	addlw	low (_key+10)
  2340  000966  6ED9               	movwf	fsr2l,c
  2341  000968  6ADA               	clrf	fsr2h,c
  2342  00096A  0100               	movlb	0	; () banked
  2343  00096C  B0DF               	btfsc	indf2,0,c
  2344  00096E  D012               	goto	l278
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;ikb.c: 606: {;ikb.c: 607: key[k].counter1 = 0;
  2348  000970  5023               	movf	ikey_parsing@k,w,c
  2349  000972  0D10               	mullw	16
  2350  000974  50F3               	movf	prodl,w,c
  2351  000976  0F67               	addlw	low (_key+7)
  2352  000978  6ED9               	movwf	fsr2l,c
  2353  00097A  6ADA               	clrf	fsr2h,c
  2354  00097C  0E00               	movlw	0
  2355  00097E  6EDE               	movwf	postinc2,c
  2356  000980  0E00               	movlw	0
  2357  000982  6EDD               	movwf	postdec2,c
  2358                           
  2359                           ;ikb.c: 608: key[k].sm1 = (2);
  2360  000984  5023               	movf	ikey_parsing@k,w,c
  2361  000986  0D10               	mullw	16
  2362  000988  50F3               	movf	prodl,w,c
  2363  00098A  0F66               	addlw	low (_key+6)
  2364  00098C  6ED9               	movwf	fsr2l,c
  2365  00098E  6ADA               	clrf	fsr2h,c
  2366  000990  0E02               	movlw	2
  2367  000992  6EDF               	movwf	indf2,c
  2368  000994                     l278:
  2369                           
  2370                           ;ikb.c: 609: };ikb.c: 610: };ikb.c: 612: if (key[k].sm1 == (6) )
  2371  000994  5023               	movf	ikey_parsing@k,w,c
  2372  000996  0D10               	mullw	16
  2373  000998  50F3               	movf	prodl,w,c
  2374  00099A  0F66               	addlw	low (_key+6)
  2375  00099C  6ED9               	movwf	fsr2l,c
  2376  00099E  6ADA               	clrf	fsr2h,c
  2377  0009A0  0E06               	movlw	6
  2378  0009A2  18DE               	xorwf	postinc2,w,c
  2379  0009A4  A4D8               	btfss	status,2,c
  2380  0009A6  D027               	goto	l280
  2381                           
  2382                           ;ikb.c: 613: {;ikb.c: 614: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2383  0009A8  5023               	movf	ikey_parsing@k,w,c
  2384  0009AA  0D10               	mullw	16
  2385  0009AC  50F3               	movf	prodl,w,c
  2386  0009AE  0F6C               	addlw	low (_key+12)
  2387  0009B0  6ED9               	movwf	fsr2l,c
  2388  0009B2  6ADA               	clrf	fsr2h,c
  2389  0009B4  5023               	movf	ikey_parsing@k,w,c
  2390  0009B6  0D10               	mullw	16
  2391  0009B8  50F3               	movf	prodl,w,c
  2392  0009BA  0F67               	addlw	low (_key+7)
  2393  0009BC  6EE1               	movwf	fsr1l,c
  2394  0009BE  6AE2               	clrf	fsr1h,c
  2395  0009C0  2AE6               	incf	postinc1,f,c
  2396  0009C2  0E00               	movlw	0
  2397  0009C4  22E5               	addwfc	postdec1,f,c
  2398  0009C6  50DE               	movf	postinc2,w,c
  2399  0009C8  5CE6               	subwf	postinc1,w,c
  2400  0009CA  50DE               	movf	postinc2,w,c
  2401  0009CC  58E6               	subwfb	postinc1,w,c
  2402  0009CE  A0D8               	btfss	status,0,c
  2403  0009D0  D012               	goto	l280
  2404                           
  2405                           ;ikb.c: 615: {;ikb.c: 616: key[k].counter1 =0;
  2406  0009D2  5023               	movf	ikey_parsing@k,w,c
  2407  0009D4  0D10               	mullw	16
  2408  0009D6  50F3               	movf	prodl,w,c
  2409  0009D8  0F67               	addlw	low (_key+7)
  2410  0009DA  6ED9               	movwf	fsr2l,c
  2411  0009DC  6ADA               	clrf	fsr2h,c
  2412  0009DE  0E00               	movlw	0
  2413  0009E0  6EDE               	movwf	postinc2,c
  2414  0009E2  0E00               	movlw	0
  2415  0009E4  6EDD               	movwf	postdec2,c
  2416                           
  2417                           ;ikb.c: 617: key[k].sm1 = (7);
  2418  0009E6  5023               	movf	ikey_parsing@k,w,c
  2419  0009E8  0D10               	mullw	16
  2420  0009EA  50F3               	movf	prodl,w,c
  2421  0009EC  0F66               	addlw	low (_key+6)
  2422  0009EE  6ED9               	movwf	fsr2l,c
  2423  0009F0  6ADA               	clrf	fsr2h,c
  2424  0009F2  0E07               	movlw	7
  2425  0009F4  6EDF               	movwf	indf2,c
  2426  0009F6                     l280:
  2427                           
  2428                           ;ikb.c: 618: };ikb.c: 619: };ikb.c: 620: if (key[k].sm1 == (7))
  2429  0009F6  5023               	movf	ikey_parsing@k,w,c
  2430  0009F8  0D10               	mullw	16
  2431  0009FA  50F3               	movf	prodl,w,c
  2432  0009FC  0F66               	addlw	low (_key+6)
  2433  0009FE  6ED9               	movwf	fsr2l,c
  2434  000A00  6ADA               	clrf	fsr2h,c
  2435  000A02  0E07               	movlw	7
  2436  000A04  18DE               	xorwf	postinc2,w,c
  2437  000A06  A4D8               	btfss	status,2,c
  2438  000A08  D018               	goto	l282
  2439                           
  2440                           ;ikb.c: 621: {;ikb.c: 622: if (key[k].bf.ReadyToRead == 0)
  2441  000A0A  5023               	movf	ikey_parsing@k,w,c
  2442  000A0C  0D10               	mullw	16
  2443  000A0E  50F3               	movf	prodl,w,c
  2444  000A10  0F6A               	addlw	low (_key+10)
  2445  000A12  6ED9               	movwf	fsr2l,c
  2446  000A14  6ADA               	clrf	fsr2h,c
  2447  000A16  0100               	movlb	0	; () banked
  2448  000A18  BCDF               	btfsc	indf2,6,c
  2449  000A1A  D00F               	goto	l282
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;ikb.c: 623: {;ikb.c: 624: key[k].bf.ReadyToRead = 1;
  2453  000A1C  5023               	movf	ikey_parsing@k,w,c
  2454  000A1E  0D10               	mullw	16
  2455  000A20  50F3               	movf	prodl,w,c
  2456  000A22  0F6A               	addlw	low (_key+10)
  2457  000A24  6ED9               	movwf	fsr2l,c
  2458  000A26  6ADA               	clrf	fsr2h,c
  2459  000A28  8CDF               	bsf	indf2,6,c
  2460                           
  2461                           ;ikb.c: 625: key[k].sm1 = (8);
  2462  000A2A  5023               	movf	ikey_parsing@k,w,c
  2463  000A2C  0D10               	mullw	16
  2464  000A2E  50F3               	movf	prodl,w,c
  2465  000A30  0F66               	addlw	low (_key+6)
  2466  000A32  6ED9               	movwf	fsr2l,c
  2467  000A34  6ADA               	clrf	fsr2h,c
  2468  000A36  0E08               	movlw	8
  2469  000A38  6EDF               	movwf	indf2,c
  2470  000A3A                     l282:
  2471                           
  2472                           ;ikb.c: 626: };ikb.c: 627: };ikb.c: 628: if (key[k].sm1 == (8))
  2473  000A3A  5023               	movf	ikey_parsing@k,w,c
  2474  000A3C  0D10               	mullw	16
  2475  000A3E  50F3               	movf	prodl,w,c
  2476  000A40  0F66               	addlw	low (_key+6)
  2477  000A42  6ED9               	movwf	fsr2l,c
  2478  000A44  6ADA               	clrf	fsr2h,c
  2479  000A46  0E08               	movlw	8
  2480  000A48  18DE               	xorwf	postinc2,w,c
  2481  000A4A  A4D8               	btfss	status,2,c
  2482  000A4C  D027               	goto	l284
  2483                           
  2484                           ;ikb.c: 629: {;ikb.c: 630: if ( ++key[k].counter1 >= key[k].repp.after_start)
  2485  000A4E  5023               	movf	ikey_parsing@k,w,c
  2486  000A50  0D10               	mullw	16
  2487  000A52  50F3               	movf	prodl,w,c
  2488  000A54  0F6E               	addlw	low (_key+14)
  2489  000A56  6ED9               	movwf	fsr2l,c
  2490  000A58  6ADA               	clrf	fsr2h,c
  2491  000A5A  5023               	movf	ikey_parsing@k,w,c
  2492  000A5C  0D10               	mullw	16
  2493  000A5E  50F3               	movf	prodl,w,c
  2494  000A60  0F67               	addlw	low (_key+7)
  2495  000A62  6EE1               	movwf	fsr1l,c
  2496  000A64  6AE2               	clrf	fsr1h,c
  2497  000A66  2AE6               	incf	postinc1,f,c
  2498  000A68  0E00               	movlw	0
  2499  000A6A  22E5               	addwfc	postdec1,f,c
  2500  000A6C  50DE               	movf	postinc2,w,c
  2501  000A6E  5CE6               	subwf	postinc1,w,c
  2502  000A70  50DE               	movf	postinc2,w,c
  2503  000A72  58E6               	subwfb	postinc1,w,c
  2504  000A74  A0D8               	btfss	status,0,c
  2505  000A76  D012               	goto	l284
  2506                           
  2507                           ;ikb.c: 631: {;ikb.c: 632: key[k].counter1 = 0;
  2508  000A78  5023               	movf	ikey_parsing@k,w,c
  2509  000A7A  0D10               	mullw	16
  2510  000A7C  50F3               	movf	prodl,w,c
  2511  000A7E  0F67               	addlw	low (_key+7)
  2512  000A80  6ED9               	movwf	fsr2l,c
  2513  000A82  6ADA               	clrf	fsr2h,c
  2514  000A84  0E00               	movlw	0
  2515  000A86  6EDE               	movwf	postinc2,c
  2516  000A88  0E00               	movlw	0
  2517  000A8A  6EDD               	movwf	postdec2,c
  2518                           
  2519                           ;ikb.c: 633: key[k].sm1 = (7);
  2520  000A8C  5023               	movf	ikey_parsing@k,w,c
  2521  000A8E  0D10               	mullw	16
  2522  000A90  50F3               	movf	prodl,w,c
  2523  000A92  0F66               	addlw	low (_key+6)
  2524  000A94  6ED9               	movwf	fsr2l,c
  2525  000A96  6ADA               	clrf	fsr2h,c
  2526  000A98  0E07               	movlw	7
  2527  000A9A  6EDF               	movwf	indf2,c
  2528  000A9C                     l284:
  2529                           
  2530                           ;ikb.c: 634: };ikb.c: 635: };ikb.c: 637: if (key[k].sm1 == (5) )
  2531  000A9C  5023               	movf	ikey_parsing@k,w,c
  2532  000A9E  0D10               	mullw	16
  2533  000AA0  50F3               	movf	prodl,w,c
  2534  000AA2  0F66               	addlw	low (_key+6)
  2535  000AA4  6ED9               	movwf	fsr2l,c
  2536  000AA6  6ADA               	clrf	fsr2h,c
  2537  000AA8  0E05               	movlw	5
  2538  000AAA  18DE               	xorwf	postinc2,w,c
  2539  000AAC  A4D8               	btfss	status,2,c
  2540  000AAE  D018               	goto	l286
  2541                           
  2542                           ;ikb.c: 638: {;ikb.c: 639: if (key[k].bf.state == 0)
  2543  000AB0  5023               	movf	ikey_parsing@k,w,c
  2544  000AB2  0D10               	mullw	16
  2545  000AB4  50F3               	movf	prodl,w,c
  2546  000AB6  0F6A               	addlw	low (_key+10)
  2547  000AB8  6ED9               	movwf	fsr2l,c
  2548  000ABA  6ADA               	clrf	fsr2h,c
  2549  000ABC  0100               	movlb	0	; () banked
  2550  000ABE  B0DF               	btfsc	indf2,0,c
  2551  000AC0  D00F               	goto	l286
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;ikb.c: 640: {;ikb.c: 641: key[k].bf.ReadyToRead = 1;
  2555  000AC2  5023               	movf	ikey_parsing@k,w,c
  2556  000AC4  0D10               	mullw	16
  2557  000AC6  50F3               	movf	prodl,w,c
  2558  000AC8  0F6A               	addlw	low (_key+10)
  2559  000ACA  6ED9               	movwf	fsr2l,c
  2560  000ACC  6ADA               	clrf	fsr2h,c
  2561  000ACE  8CDF               	bsf	indf2,6,c
  2562                           
  2563                           ;ikb.c: 642: key[k].sm1 = (2);
  2564  000AD0  5023               	movf	ikey_parsing@k,w,c
  2565  000AD2  0D10               	mullw	16
  2566  000AD4  50F3               	movf	prodl,w,c
  2567  000AD6  0F66               	addlw	low (_key+6)
  2568  000AD8  6ED9               	movwf	fsr2l,c
  2569  000ADA  6ADA               	clrf	fsr2h,c
  2570  000ADC  0E02               	movlw	2
  2571  000ADE  6EDF               	movwf	indf2,c
  2572  000AE0                     l286:
  2573                           
  2574                           ;ikb.c: 643: };ikb.c: 644: };ikb.c: 646: if (key[k].sm1 == (3) )
  2575  000AE0  5023               	movf	ikey_parsing@k,w,c
  2576  000AE2  0D10               	mullw	16
  2577  000AE4  50F3               	movf	prodl,w,c
  2578  000AE6  0F66               	addlw	low (_key+6)
  2579  000AE8  6ED9               	movwf	fsr2l,c
  2580  000AEA  6ADA               	clrf	fsr2h,c
  2581  000AEC  0E03               	movlw	3
  2582  000AEE  18DE               	xorwf	postinc2,w,c
  2583  000AF0  A4D8               	btfss	status,2,c
  2584  000AF2  D09C               	goto	l288
  2585                           
  2586                           ;ikb.c: 647: {;ikb.c: 648: key[k].counter1++;
  2587  000AF4  5023               	movf	ikey_parsing@k,w,c
  2588  000AF6  0D10               	mullw	16
  2589  000AF8  50F3               	movf	prodl,w,c
  2590  000AFA  0F67               	addlw	low (_key+7)
  2591  000AFC  6ED9               	movwf	fsr2l,c
  2592  000AFE  6ADA               	clrf	fsr2h,c
  2593  000B00  2ADE               	incf	postinc2,f,c
  2594  000B02  0E00               	movlw	0
  2595  000B04  22DD               	addwfc	postdec2,f,c
  2596                           
  2597                           ;ikb.c: 650: if (key[k].bf.state == 0)
  2598  000B06  5023               	movf	ikey_parsing@k,w,c
  2599  000B08  0D10               	mullw	16
  2600  000B0A  50F3               	movf	prodl,w,c
  2601  000B0C  0F6A               	addlw	low (_key+10)
  2602  000B0E  6ED9               	movwf	fsr2l,c
  2603  000B10  6ADA               	clrf	fsr2h,c
  2604  000B12  0100               	movlb	0	; () banked
  2605  000B14  B0DF               	btfsc	indf2,0,c
  2606  000B16  D03D               	goto	l3492
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;ikb.c: 651: {;ikb.c: 652: if (key[k].counter1 <= (1000E-3/5E-3) )
  2610  000B18  0E00               	movlw	0
  2611  000B1A  6E16               	movwf	___ftge@ff1,c
  2612  000B1C  0E48               	movlw	72
  2613  000B1E  6E17               	movwf	___ftge@ff1+1,c
  2614  000B20  0E43               	movlw	67
  2615  000B22  6E18               	movwf	___ftge@ff1+2,c
  2616  000B24  5023               	movf	ikey_parsing@k,w,c
  2617  000B26  0D10               	mullw	16
  2618  000B28  50F3               	movf	prodl,w,c
  2619  000B2A  0F67               	addlw	low (_key+7)
  2620  000B2C  6ED9               	movwf	fsr2l,c
  2621  000B2E  6ADA               	clrf	fsr2h,c
  2622  000B30  CFDE F013          	movff	postinc2,___lwtoft@c
  2623  000B34  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2624  000B38  ECA7  F00F         	call	___lwtoft	;wreg free
  2625  000B3C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2626  000B40  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2627  000B44  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2628  000B48  EC05  F00D         	call	___ftge	;wreg free
  2629  000B4C  A0D8               	btfss	status,0,c
  2630  000B4E  D021               	goto	l3492
  2631                           
  2632                           ;ikb.c: 653: {;ikb.c: 654: key[k].counter1 = 0;
  2633  000B50  5023               	movf	ikey_parsing@k,w,c
  2634  000B52  0D10               	mullw	16
  2635  000B54  50F3               	movf	prodl,w,c
  2636  000B56  0F67               	addlw	low (_key+7)
  2637  000B58  6ED9               	movwf	fsr2l,c
  2638  000B5A  6ADA               	clrf	fsr2h,c
  2639  000B5C  0E00               	movlw	0
  2640  000B5E  6EDE               	movwf	postinc2,c
  2641  000B60  0E00               	movlw	0
  2642  000B62  6EDD               	movwf	postdec2,c
  2643                           
  2644                           ;ikb.c: 656: key[k].bf.ReadyToRead = 1;
  2645  000B64  5023               	movf	ikey_parsing@k,w,c
  2646  000B66  0D10               	mullw	16
  2647  000B68  50F3               	movf	prodl,w,c
  2648  000B6A  0F6A               	addlw	low (_key+10)
  2649  000B6C  6ED9               	movwf	fsr2l,c
  2650  000B6E  6ADA               	clrf	fsr2h,c
  2651  000B70  0100               	movlb	0	; () banked
  2652  000B72  8CDF               	bsf	indf2,6,c
  2653                           
  2654                           ;ikb.c: 657: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  2655  000B74  5023               	movf	ikey_parsing@k,w,c
  2656  000B76  0D10               	mullw	16
  2657  000B78  50F3               	movf	prodl,w,c
  2658  000B7A  0F6A               	addlw	low (_key+10)
  2659  000B7C  6ED9               	movwf	fsr2l,c
  2660  000B7E  6ADA               	clrf	fsr2h,c
  2661  000B80  9EDF               	bcf	indf2,7,c
  2662                           
  2663                           ;ikb.c: 659: key[k].sm1 = (2);
  2664  000B82  5023               	movf	ikey_parsing@k,w,c
  2665  000B84  0D10               	mullw	16
  2666  000B86  50F3               	movf	prodl,w,c
  2667  000B88  0F66               	addlw	low (_key+6)
  2668  000B8A  6ED9               	movwf	fsr2l,c
  2669  000B8C  6ADA               	clrf	fsr2h,c
  2670  000B8E  0E02               	movlw	2
  2671  000B90  6EDF               	movwf	indf2,c
  2672  000B92                     l3492:
  2673                           
  2674                           ;ikb.c: 660: };ikb.c: 661: };ikb.c: 663: if (key[k].counter1 > (1000E-3/5E-3) )
  2675  000B92  0E00               	movlw	0
  2676  000B94  6E16               	movwf	___ftge@ff1,c
  2677  000B96  0E48               	movlw	72
  2678  000B98  6E17               	movwf	___ftge@ff1+1,c
  2679  000B9A  0E43               	movlw	67
  2680  000B9C  6E18               	movwf	___ftge@ff1+2,c
  2681  000B9E  5023               	movf	ikey_parsing@k,w,c
  2682  000BA0  0D10               	mullw	16
  2683  000BA2  50F3               	movf	prodl,w,c
  2684  000BA4  0F67               	addlw	low (_key+7)
  2685  000BA6  6ED9               	movwf	fsr2l,c
  2686  000BA8  6ADA               	clrf	fsr2h,c
  2687  000BAA  CFDE F013          	movff	postinc2,___lwtoft@c
  2688  000BAE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2689  000BB2  ECA7  F00F         	call	___lwtoft	;wreg free
  2690  000BB6  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2691  000BBA  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2692  000BBE  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2693  000BC2  EC05  F00D         	call	___ftge	;wreg free
  2694  000BC6  B0D8               	btfsc	status,0,c
  2695  000BC8  D031               	goto	l288
  2696                           
  2697                           ;ikb.c: 664: {;ikb.c: 665: key[k].counter1 = 0x0000;
  2698  000BCA  5023               	movf	ikey_parsing@k,w,c
  2699  000BCC  0D10               	mullw	16
  2700  000BCE  50F3               	movf	prodl,w,c
  2701  000BD0  0F67               	addlw	low (_key+7)
  2702  000BD2  6ED9               	movwf	fsr2l,c
  2703  000BD4  6ADA               	clrf	fsr2h,c
  2704  000BD6  0E00               	movlw	0
  2705  000BD8  6EDE               	movwf	postinc2,c
  2706  000BDA  0E00               	movlw	0
  2707  000BDC  6EDD               	movwf	postdec2,c
  2708                           
  2709                           ;ikb.c: 667: key[k].bf.ReadyToRead = 1;
  2710  000BDE  5023               	movf	ikey_parsing@k,w,c
  2711  000BE0  0D10               	mullw	16
  2712  000BE2  50F3               	movf	prodl,w,c
  2713  000BE4  0F6A               	addlw	low (_key+10)
  2714  000BE6  6ED9               	movwf	fsr2l,c
  2715  000BE8  6ADA               	clrf	fsr2h,c
  2716  000BEA  0100               	movlb	0	; () banked
  2717  000BEC  8CDF               	bsf	indf2,6,c
  2718                           
  2719                           ;ikb.c: 668: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  2720  000BEE  5023               	movf	ikey_parsing@k,w,c
  2721  000BF0  0D10               	mullw	16
  2722  000BF2  50F3               	movf	prodl,w,c
  2723  000BF4  0F6A               	addlw	low (_key+10)
  2724  000BF6  6ED9               	movwf	fsr2l,c
  2725  000BF8  6ADA               	clrf	fsr2h,c
  2726  000BFA  8EDF               	bsf	indf2,7,c
  2727                           
  2728                           ;ikb.c: 670: if (!key[k].bf.Reptt)
  2729  000BFC  5023               	movf	ikey_parsing@k,w,c
  2730  000BFE  0D10               	mullw	16
  2731  000C00  50F3               	movf	prodl,w,c
  2732  000C02  0F6A               	addlw	low (_key+10)
  2733  000C04  6ED9               	movwf	fsr2l,c
  2734  000C06  6ADA               	clrf	fsr2h,c
  2735  000C08  BADF               	btfsc	indf2,5,c
  2736  000C0A  D008               	goto	l3498
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;ikb.c: 671: {;ikb.c: 672: key[k].sm1 = (1);
  2740  000C0C  5023               	movf	ikey_parsing@k,w,c
  2741  000C0E  0D10               	mullw	16
  2742  000C10  50F3               	movf	prodl,w,c
  2743  000C12  0F66               	addlw	low (_key+6)
  2744  000C14  6ED9               	movwf	fsr2l,c
  2745  000C16  6ADA               	clrf	fsr2h,c
  2746  000C18  0E01               	movlw	1
  2747  000C1A  D007               	goto	L3
  2748  000C1C                     l3498:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;ikb.c: 674: else;ikb.c: 675: {;ikb.c: 676: key[k].sm1 = (8);
  2752  000C1C  5023               	movf	ikey_parsing@k,w,c
  2753  000C1E  0D10               	mullw	16
  2754  000C20  50F3               	movf	prodl,w,c
  2755  000C22  0F66               	addlw	low (_key+6)
  2756  000C24  6ED9               	movwf	fsr2l,c
  2757  000C26  6ADA               	clrf	fsr2h,c
  2758  000C28  0E08               	movlw	8
  2759  000C2A                     L3:
  2760  000C2A  6EDF               	movwf	indf2,c
  2761  000C2C                     l288:
  2762                           
  2763                           ;ikb.c: 677: };ikb.c: 678: };ikb.c: 679: };ikb.c: 684: if (key[k].sm1 == (4))
  2764  000C2C  5023               	movf	ikey_parsing@k,w,c
  2765  000C2E  0D10               	mullw	16
  2766  000C30  50F3               	movf	prodl,w,c
  2767  000C32  0F66               	addlw	low (_key+6)
  2768  000C34  6ED9               	movwf	fsr2l,c
  2769  000C36  6ADA               	clrf	fsr2h,c
  2770  000C38  0E04               	movlw	4
  2771  000C3A  18DE               	xorwf	postinc2,w,c
  2772  000C3C  A4D8               	btfss	status,2,c
  2773  000C3E  D08C               	goto	l294
  2774                           
  2775                           ;ikb.c: 685: {;ikb.c: 686: key[k].counter1++;
  2776  000C40  5023               	movf	ikey_parsing@k,w,c
  2777  000C42  0D10               	mullw	16
  2778  000C44  50F3               	movf	prodl,w,c
  2779  000C46  0F67               	addlw	low (_key+7)
  2780  000C48  6ED9               	movwf	fsr2l,c
  2781  000C4A  6ADA               	clrf	fsr2h,c
  2782  000C4C  2ADE               	incf	postinc2,f,c
  2783  000C4E  0E00               	movlw	0
  2784  000C50  22DD               	addwfc	postdec2,f,c
  2785                           
  2786                           ;ikb.c: 688: if (key[k].bf.state == 0)
  2787  000C52  5023               	movf	ikey_parsing@k,w,c
  2788  000C54  0D10               	mullw	16
  2789  000C56  50F3               	movf	prodl,w,c
  2790  000C58  0F6A               	addlw	low (_key+10)
  2791  000C5A  6ED9               	movwf	fsr2l,c
  2792  000C5C  6ADA               	clrf	fsr2h,c
  2793  000C5E  0100               	movlb	0	; () banked
  2794  000C60  B0DF               	btfsc	indf2,0,c
  2795  000C62  D03D               	goto	l3506
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;ikb.c: 689: {;ikb.c: 690: if (key[k].counter1 <= (1000E-3/5E-3))
  2799  000C64  0E00               	movlw	0
  2800  000C66  6E16               	movwf	___ftge@ff1,c
  2801  000C68  0E48               	movlw	72
  2802  000C6A  6E17               	movwf	___ftge@ff1+1,c
  2803  000C6C  0E43               	movlw	67
  2804  000C6E  6E18               	movwf	___ftge@ff1+2,c
  2805  000C70  5023               	movf	ikey_parsing@k,w,c
  2806  000C72  0D10               	mullw	16
  2807  000C74  50F3               	movf	prodl,w,c
  2808  000C76  0F67               	addlw	low (_key+7)
  2809  000C78  6ED9               	movwf	fsr2l,c
  2810  000C7A  6ADA               	clrf	fsr2h,c
  2811  000C7C  CFDE F013          	movff	postinc2,___lwtoft@c
  2812  000C80  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2813  000C84  ECA7  F00F         	call	___lwtoft	;wreg free
  2814  000C88  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2815  000C8C  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2816  000C90  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2817  000C94  EC05  F00D         	call	___ftge	;wreg free
  2818  000C98  A0D8               	btfss	status,0,c
  2819  000C9A  D021               	goto	l3506
  2820                           
  2821                           ;ikb.c: 691: {;ikb.c: 692: key[k].counter1 = 0;
  2822  000C9C  5023               	movf	ikey_parsing@k,w,c
  2823  000C9E  0D10               	mullw	16
  2824  000CA0  50F3               	movf	prodl,w,c
  2825  000CA2  0F67               	addlw	low (_key+7)
  2826  000CA4  6ED9               	movwf	fsr2l,c
  2827  000CA6  6ADA               	clrf	fsr2h,c
  2828  000CA8  0E00               	movlw	0
  2829  000CAA  6EDE               	movwf	postinc2,c
  2830  000CAC  0E00               	movlw	0
  2831  000CAE  6EDD               	movwf	postdec2,c
  2832                           
  2833                           ;ikb.c: 694: key[k].bf.ReadyToRead = 1;
  2834  000CB0  5023               	movf	ikey_parsing@k,w,c
  2835  000CB2  0D10               	mullw	16
  2836  000CB4  50F3               	movf	prodl,w,c
  2837  000CB6  0F6A               	addlw	low (_key+10)
  2838  000CB8  6ED9               	movwf	fsr2l,c
  2839  000CBA  6ADA               	clrf	fsr2h,c
  2840  000CBC  0100               	movlb	0	; () banked
  2841  000CBE  8CDF               	bsf	indf2,6,c
  2842                           
  2843                           ;ikb.c: 695: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  2844  000CC0  5023               	movf	ikey_parsing@k,w,c
  2845  000CC2  0D10               	mullw	16
  2846  000CC4  50F3               	movf	prodl,w,c
  2847  000CC6  0F6A               	addlw	low (_key+10)
  2848  000CC8  6ED9               	movwf	fsr2l,c
  2849  000CCA  6ADA               	clrf	fsr2h,c
  2850  000CCC  9EDF               	bcf	indf2,7,c
  2851                           
  2852                           ;ikb.c: 697: key[k].sm1 = (2);
  2853  000CCE  5023               	movf	ikey_parsing@k,w,c
  2854  000CD0  0D10               	mullw	16
  2855  000CD2  50F3               	movf	prodl,w,c
  2856  000CD4  0F66               	addlw	low (_key+6)
  2857  000CD6  6ED9               	movwf	fsr2l,c
  2858  000CD8  6ADA               	clrf	fsr2h,c
  2859  000CDA  0E02               	movlw	2
  2860  000CDC  6EDF               	movwf	indf2,c
  2861  000CDE                     l3506:
  2862                           
  2863                           ;ikb.c: 698: };ikb.c: 699: };ikb.c: 702: if (key[k].counter1 >= (3000E-3/5E-3))
  2864  000CDE  5023               	movf	ikey_parsing@k,w,c
  2865  000CE0  0D10               	mullw	16
  2866  000CE2  50F3               	movf	prodl,w,c
  2867  000CE4  0F67               	addlw	low (_key+7)
  2868  000CE6  6ED9               	movwf	fsr2l,c
  2869  000CE8  6ADA               	clrf	fsr2h,c
  2870  000CEA  CFDE F013          	movff	postinc2,___lwtoft@c
  2871  000CEE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2872  000CF2  ECA7  F00F         	call	___lwtoft	;wreg free
  2873  000CF6  C013  F016         	movff	?___lwtoft,___ftge@ff1
  2874  000CFA  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  2875  000CFE  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  2876  000D02  0E00               	movlw	0
  2877  000D04  6E19               	movwf	___ftge@ff2,c
  2878  000D06  0E16               	movlw	22
  2879  000D08  6E1A               	movwf	___ftge@ff2+1,c
  2880  000D0A  0E44               	movlw	68
  2881  000D0C  6E1B               	movwf	___ftge@ff2+2,c
  2882  000D0E  EC05  F00D         	call	___ftge	;wreg free
  2883  000D12  A0D8               	btfss	status,0,c
  2884  000D14  D021               	goto	l294
  2885                           
  2886                           ;ikb.c: 703: {;ikb.c: 704: key[k].counter1 = 0x0000;
  2887  000D16  5023               	movf	ikey_parsing@k,w,c
  2888  000D18  0D10               	mullw	16
  2889  000D1A  50F3               	movf	prodl,w,c
  2890  000D1C  0F67               	addlw	low (_key+7)
  2891  000D1E  6ED9               	movwf	fsr2l,c
  2892  000D20  6ADA               	clrf	fsr2h,c
  2893  000D22  0E00               	movlw	0
  2894  000D24  6EDE               	movwf	postinc2,c
  2895  000D26  0E00               	movlw	0
  2896  000D28  6EDD               	movwf	postdec2,c
  2897                           
  2898                           ;ikb.c: 706: key[k].bf.ReadyToRead = 1;
  2899  000D2A  5023               	movf	ikey_parsing@k,w,c
  2900  000D2C  0D10               	mullw	16
  2901  000D2E  50F3               	movf	prodl,w,c
  2902  000D30  0F6A               	addlw	low (_key+10)
  2903  000D32  6ED9               	movwf	fsr2l,c
  2904  000D34  6ADA               	clrf	fsr2h,c
  2905  000D36  0100               	movlb	0	; () banked
  2906  000D38  8CDF               	bsf	indf2,6,c
  2907                           
  2908                           ;ikb.c: 707: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  2909  000D3A  5023               	movf	ikey_parsing@k,w,c
  2910  000D3C  0D10               	mullw	16
  2911  000D3E  50F3               	movf	prodl,w,c
  2912  000D40  0F6A               	addlw	low (_key+10)
  2913  000D42  6ED9               	movwf	fsr2l,c
  2914  000D44  6ADA               	clrf	fsr2h,c
  2915  000D46  8EDF               	bsf	indf2,7,c
  2916                           
  2917                           ;ikb.c: 710: key[k].sm1 = (1);
  2918  000D48  5023               	movf	ikey_parsing@k,w,c
  2919  000D4A  0D10               	mullw	16
  2920  000D4C  50F3               	movf	prodl,w,c
  2921  000D4E  0F66               	addlw	low (_key+6)
  2922  000D50  6ED9               	movwf	fsr2l,c
  2923  000D52  6ADA               	clrf	fsr2h,c
  2924  000D54  0E01               	movlw	1
  2925  000D56  6EDF               	movwf	indf2,c
  2926  000D58                     l294:
  2927                           
  2928                           ;ikb.c: 711: };ikb.c: 712: };ikb.c: 715: if (key[k].sm1 == (1))
  2929  000D58  5023               	movf	ikey_parsing@k,w,c
  2930  000D5A  0D10               	mullw	16
  2931  000D5C  50F3               	movf	prodl,w,c
  2932  000D5E  0F66               	addlw	low (_key+6)
  2933  000D60  6ED9               	movwf	fsr2l,c
  2934  000D62  6ADA               	clrf	fsr2h,c
  2935  000D64  04DE               	decf	postinc2,w,c
  2936  000D66  A4D8               	btfss	status,2,c
  2937  000D68  D011               	goto	l298
  2938                           
  2939                           ;ikb.c: 716: {;ikb.c: 717: if (key[k].bf.state == 0)
  2940  000D6A  5023               	movf	ikey_parsing@k,w,c
  2941  000D6C  0D10               	mullw	16
  2942  000D6E  50F3               	movf	prodl,w,c
  2943  000D70  0F6A               	addlw	low (_key+10)
  2944  000D72  6ED9               	movwf	fsr2l,c
  2945  000D74  6ADA               	clrf	fsr2h,c
  2946  000D76  0100               	movlb	0	; () banked
  2947  000D78  B0DF               	btfsc	indf2,0,c
  2948  000D7A  D008               	goto	l298
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;ikb.c: 718: {;ikb.c: 719: key[k].sm1 = (2);
  2952  000D7C  5023               	movf	ikey_parsing@k,w,c
  2953  000D7E  0D10               	mullw	16
  2954  000D80  50F3               	movf	prodl,w,c
  2955  000D82  0F66               	addlw	low (_key+6)
  2956  000D84  6ED9               	movwf	fsr2l,c
  2957  000D86  6ADA               	clrf	fsr2h,c
  2958  000D88  0E02               	movlw	2
  2959  000D8A  6EDF               	movwf	indf2,c
  2960  000D8C                     l298:
  2961                           
  2962                           ;ikb.c: 720: };ikb.c: 721: };ikb.c: 723: if (key[k].sm1 == (2))
  2963  000D8C  5023               	movf	ikey_parsing@k,w,c
  2964  000D8E  0D10               	mullw	16
  2965  000D90  50F3               	movf	prodl,w,c
  2966  000D92  0F66               	addlw	low (_key+6)
  2967  000D94  6ED9               	movwf	fsr2l,c
  2968  000D96  6ADA               	clrf	fsr2h,c
  2969  000D98  0E02               	movlw	2
  2970  000D9A  18DE               	xorwf	postinc2,w,c
  2971  000D9C  A4D8               	btfss	status,2,c
  2972  000D9E  D011               	goto	l300
  2973                           
  2974                           ;ikb.c: 724: {;ikb.c: 725: if (key[k].bf.ReadyToRead == 0)
  2975  000DA0  5023               	movf	ikey_parsing@k,w,c
  2976  000DA2  0D10               	mullw	16
  2977  000DA4  50F3               	movf	prodl,w,c
  2978  000DA6  0F6A               	addlw	low (_key+10)
  2979  000DA8  6ED9               	movwf	fsr2l,c
  2980  000DAA  6ADA               	clrf	fsr2h,c
  2981  000DAC  0100               	movlb	0	; () banked
  2982  000DAE  BCDF               	btfsc	indf2,6,c
  2983  000DB0  D008               	goto	l300
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;ikb.c: 726: {;ikb.c: 727: key[k].sm1 = (9);
  2987  000DB2  5023               	movf	ikey_parsing@k,w,c
  2988  000DB4  0D10               	mullw	16
  2989  000DB6  50F3               	movf	prodl,w,c
  2990  000DB8  0F66               	addlw	low (_key+6)
  2991  000DBA  6ED9               	movwf	fsr2l,c
  2992  000DBC  6ADA               	clrf	fsr2h,c
  2993  000DBE  0E09               	movlw	9
  2994  000DC0  6EDF               	movwf	indf2,c
  2995  000DC2                     l300:
  2996                           
  2997                           ;ikb.c: 728: };ikb.c: 729: };ikb.c: 731: if (key[k].sm1 == (9))
  2998  000DC2  5023               	movf	ikey_parsing@k,w,c
  2999  000DC4  0D10               	mullw	16
  3000  000DC6  50F3               	movf	prodl,w,c
  3001  000DC8  0F66               	addlw	low (_key+6)
  3002  000DCA  6ED9               	movwf	fsr2l,c
  3003  000DCC  6ADA               	clrf	fsr2h,c
  3004  000DCE  0E09               	movlw	9
  3005  000DD0  18DE               	xorwf	postinc2,w,c
  3006  000DD2  A4D8               	btfss	status,2,c
  3007  000DD4  D02F               	goto	l3522
  3008                           
  3009                           ;ikb.c: 732: {;ikb.c: 733: if (key[k].num_group_x > 0)
  3010  000DD6  5023               	movf	ikey_parsing@k,w,c
  3011  000DD8  0D10               	mullw	16
  3012  000DDA  50F3               	movf	prodl,w,c
  3013  000DDC  0F69               	addlw	low (_key+9)
  3014  000DDE  6ED9               	movwf	fsr2l,c
  3015  000DE0  6ADA               	clrf	fsr2h,c
  3016  000DE2  50DF               	movf	indf2,w,c
  3017  000DE4  B4D8               	btfsc	status,2,c
  3018  000DE6  D016               	goto	l303
  3019                           
  3020                           ;ikb.c: 734: {;ikb.c: 735: group_x[key[k].num_group_x] = 0;
  3021  000DE8  5023               	movf	ikey_parsing@k,w,c
  3022  000DEA  0D10               	mullw	16
  3023  000DEC  50F3               	movf	prodl,w,c
  3024  000DEE  0F69               	addlw	low (_key+9)
  3025  000DF0  6ED9               	movwf	fsr2l,c
  3026  000DF2  6ADA               	clrf	fsr2h,c
  3027  000DF4  50DF               	movf	indf2,w,c
  3028  000DF6  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3029  000DF8  501F               	movf	??_ikey_parsing,w,c
  3030  000DFA  0FB0               	addlw	low _group_x
  3031  000DFC  6ED9               	movwf	fsr2l,c
  3032  000DFE  6ADA               	clrf	fsr2h,c
  3033  000E00  0E00               	movlw	0
  3034  000E02  6EDF               	movwf	indf2,c
  3035                           
  3036                           ;ikb.c: 736: key[k].bf.OwnerOfGroup = 0;
  3037  000E04  5023               	movf	ikey_parsing@k,w,c
  3038  000E06  0D10               	mullw	16
  3039  000E08  50F3               	movf	prodl,w,c
  3040  000E0A  0F6B               	addlw	low (_key+11)
  3041  000E0C  6ED9               	movwf	fsr2l,c
  3042  000E0E  6ADA               	clrf	fsr2h,c
  3043  000E10  0100               	movlb	0	; () banked
  3044  000E12  90DF               	bcf	indf2,0,c
  3045  000E14                     l303:
  3046                           
  3047                           ;ikb.c: 737: };ikb.c: 739: key[k].sm1 = (0);
  3048  000E14  5023               	movf	ikey_parsing@k,w,c
  3049  000E16  0D10               	mullw	16
  3050  000E18  50F3               	movf	prodl,w,c
  3051  000E1A  0F66               	addlw	low (_key+6)
  3052  000E1C  6ED9               	movwf	fsr2l,c
  3053  000E1E  6ADA               	clrf	fsr2h,c
  3054  000E20  0E00               	movlw	0
  3055  000E22  6EDF               	movwf	indf2,c
  3056                           
  3057                           ;ikb.c: 742: key[k].bf.InProcessing = 0;
  3058  000E24  5023               	movf	ikey_parsing@k,w,c
  3059  000E26  0D10               	mullw	16
  3060  000E28  50F3               	movf	prodl,w,c
  3061  000E2A  0F6B               	addlw	low (_key+11)
  3062  000E2C  6ED9               	movwf	fsr2l,c
  3063  000E2E  6ADA               	clrf	fsr2h,c
  3064  000E30  0100               	movlb	0	; () banked
  3065  000E32  92DF               	bcf	indf2,1,c
  3066  000E34                     l3522:
  3067  000E34  2A23               	incf	ikey_parsing@k,f,c
  3068  000E36  0E04               	movlw	4
  3069  000E38  6423               	cpfsgt	ikey_parsing@k,c
  3070  000E3A  D4EB               	goto	l3436
  3071  000E3C  0012               	return	
  3072  000E3E                     __end_of_ikey_parsing:
  3073                           	opt callstack 0
  3074                           
  3075 ;; *************** function _ikey_is_accessible *****************
  3076 ;; Defined at:
  3077 ;;		line 510 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  k               1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  k               1   12[COMRAM] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      unsigned char 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0
  3092 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3093 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3094 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3095 ;;Total ram usage:        3 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    5
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_ikey_parsing
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text16
  3106  001BDC                     __ptext16:
  3107                           	opt callstack 0
  3108  001BDC                     _ikey_is_accessible:
  3109                           	opt callstack 23
  3110                           
  3111                           ;incstack = 0
  3112                           ;ikey_is_accessible@k stored from wreg
  3113  001BDC  6E0D               	movwf	ikey_is_accessible@k,c
  3114                           
  3115                           ;ikb.c: 512: if (key[k].num_group_x != 0)
  3116  001BDE  500D               	movf	ikey_is_accessible@k,w,c
  3117  001BE0  0D10               	mullw	16
  3118  001BE2  50F3               	movf	prodl,w,c
  3119  001BE4  0F69               	addlw	low (_key+9)
  3120  001BE6  6ED9               	movwf	fsr2l,c
  3121  001BE8  6ADA               	clrf	fsr2h,c
  3122  001BEA  50DF               	movf	indf2,w,c
  3123  001BEC  B4D8               	btfsc	status,2,c
  3124  001BEE  D01A               	goto	l2402
  3125                           
  3126                           ;ikb.c: 513: {;ikb.c: 515: if (group_x[key[k].num_group_x] == 1)
  3127  001BF0  500D               	movf	ikey_is_accessible@k,w,c
  3128  001BF2  0D10               	mullw	16
  3129  001BF4  50F3               	movf	prodl,w,c
  3130  001BF6  0F69               	addlw	low (_key+9)
  3131  001BF8  6ED9               	movwf	fsr2l,c
  3132  001BFA  6ADA               	clrf	fsr2h,c
  3133  001BFC  50DF               	movf	indf2,w,c
  3134  001BFE  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  3135  001C00  500B               	movf	??_ikey_is_accessible,w,c
  3136  001C02  0FB0               	addlw	low _group_x
  3137  001C04  6ED9               	movwf	fsr2l,c
  3138  001C06  6ADA               	clrf	fsr2h,c
  3139  001C08  04DE               	decf	postinc2,w,c
  3140  001C0A  A4D8               	btfss	status,2,c
  3141  001C0C  D00B               	goto	l2402
  3142                           
  3143                           ;ikb.c: 516: {;ikb.c: 518: if ( !key[k].bf.OwnerOfGroup)
  3144  001C0E  500D               	movf	ikey_is_accessible@k,w,c
  3145  001C10  0D10               	mullw	16
  3146  001C12  50F3               	movf	prodl,w,c
  3147  001C14  0F6B               	addlw	low (_key+11)
  3148  001C16  6ED9               	movwf	fsr2l,c
  3149  001C18  6ADA               	clrf	fsr2h,c
  3150  001C1A  0100               	movlb	0	; () banked
  3151  001C1C  B0DF               	btfsc	indf2,0,c
  3152  001C1E  D002               	goto	l2402
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;ikb.c: 519: {;ikb.c: 520: return 0;
  3156  001C20  0E00               	movlw	0
  3157  001C22  0012               	return	
  3158  001C24                     l2402:
  3159                           
  3160                           ;ikb.c: 521: };ikb.c: 522: };ikb.c: 523: };ikb.c: 524: return 1;
  3161  001C24  0E01               	movlw	1
  3162  001C26  0012               	return		;funcret
  3163  001C28                     __end_of_ikey_is_accessible:
  3164                           	opt callstack 0
  3165                           
  3166 ;; *************** function ___lwtoft *****************
  3167 ;; Defined at:
  3168 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  c               2   18[COMRAM] unsigned int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  3   18[COMRAM] float 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         3       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        3 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    6
  3189 ;; This function calls:
  3190 ;;		___ftpack
  3191 ;; This function is called by:
  3192 ;;		_ikey_parsing
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text17
  3197  001F4E                     __ptext17:
  3198                           	opt callstack 0
  3199  001F4E                     ___lwtoft:
  3200                           	opt callstack 22
  3201                           
  3202                           ;incstack = 0
  3203  001F4E  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  3204  001F52  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  3205  001F56  6A0D               	clrf	___ftpack@arg+2,c
  3206  001F58  0E8E               	movlw	142
  3207  001F5A  6E0E               	movwf	___ftpack@exp,c
  3208  001F5C  0E00               	movlw	0
  3209  001F5E  6E0F               	movwf	___ftpack@sign,c
  3210  001F60  ECD4  F00B         	call	___ftpack	;wreg free
  3211  001F64  C00B  F013         	movff	?___ftpack,?___lwtoft
  3212  001F68  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  3213  001F6C  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  3214  001F70  0012               	return		;funcret
  3215  001F72                     __end_of___lwtoft:
  3216                           	opt callstack 0
  3217                           
  3218 ;; *************** function _ikb_init *****************
  3219 ;; Defined at:
  3220 ;;		line 217 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  i               1   10[COMRAM] char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 3F/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0
  3235 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3237 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3238 ;;Total ram usage:        1 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    5
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text18
  3249  0016F2                     __ptext18:
  3250                           	opt callstack 0
  3251  0016F2                     _ikb_init:
  3252                           	opt callstack 25
  3253                           
  3254                           ;incstack = 0
  3255                           ;ikb.c: 219: int8_t i;;ikb.c: 389: do{TRISC |= 1<<4;}while(0);
  3256  0016F2  8894               	bsf	3988,4,c	;volatile
  3257                           
  3258                           ;ikb.c: 390: do{TRISC |= 1<<5;}while(0);
  3259  0016F4  8A94               	bsf	3988,5,c	;volatile
  3260                           
  3261                           ;ikb.c: 391: do{TRISC |= 1<<6;}while(0);
  3262  0016F6  8C94               	bsf	3988,6,c	;volatile
  3263                           
  3264                           ;ikb.c: 392: do{TRISC |= 1<<7;}while(0);
  3265  0016F8  8E94               	bsf	3988,7,c	;volatile
  3266                           
  3267                           ;ikb.c: 393: do{TRISD |= 1<<4;}while(0);
  3268  0016FA  8895               	bsf	3989,4,c	;volatile
  3269                           
  3270                           ;ikb.c: 394: key[0].keyRead = keyRead_pin_key1;
  3271  0016FC  0E04               	movlw	low _keyRead_pin_key1
  3272  0016FE  0100               	movlb	0	; () banked
  3273  001700  6F60               	movwf	_key& (0+255),b	;volatile
  3274  001702  0E20               	movlw	high _keyRead_pin_key1
  3275  001704  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;ikb.c: 395: key[1].keyRead = keyRead_pin_key2;
  3279  001706  0EF0               	movlw	low _keyRead_pin_key2
  3280  001708  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3281  00170A  0E1F               	movlw	high _keyRead_pin_key2
  3282  00170C  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;ikb.c: 396: key[2].keyRead = keyRead_pin_key3;
  3286  00170E  0EE6               	movlw	low _keyRead_pin_key3
  3287  001710  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3288  001712  0E1F               	movlw	high _keyRead_pin_key3
  3289  001714  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;ikb.c: 397: key[3].keyRead = keyRead_pin_key4;
  3293  001716  0E14               	movlw	low _keyRead_pin_key4
  3294  001718  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3295  00171A  0E20               	movlw	high _keyRead_pin_key4
  3296  00171C  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;ikb.c: 398: key[4].keyRead = keyRead_pin_key5;
  3300  00171E  0E0C               	movlw	low _keyRead_pin_key5
  3301  001720  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3302  001722  0E20               	movlw	high _keyRead_pin_key5
  3303  001724  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;ikb.c: 401: for (i=0; i<5; i++)
  3307  001726  0E00               	movlw	0
  3308  001728  6E0B               	movwf	ikb_init@i,c
  3309  00172A                     l2940:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;ikb.c: 402: {;ikb.c: 403: key[i].bf.OnKeyPressed = 1;
  3313  00172A  500B               	movf	ikb_init@i,w,c
  3314  00172C  0D10               	mullw	16
  3315  00172E  50F3               	movf	prodl,w,c
  3316  001730  0F6A               	addlw	low (_key+10)
  3317  001732  6ED9               	movwf	fsr2l,c
  3318  001734  6ADA               	clrf	fsr2h,c
  3319  001736  82DF               	bsf	indf2,1,c
  3320                           
  3321                           ;ikb.c: 404: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3322  001738  500B               	movf	ikb_init@i,w,c
  3323  00173A  0D10               	mullw	16
  3324  00173C  50F3               	movf	prodl,w,c
  3325  00173E  0F6A               	addlw	low (_key+10)
  3326  001740  6ED9               	movwf	fsr2l,c
  3327  001742  6ADA               	clrf	fsr2h,c
  3328  001744  94DF               	bcf	indf2,2,c
  3329                           
  3330                           ;ikb.c: 405: key[i].bf.AtTimeExpired = 0;
  3331  001746  500B               	movf	ikb_init@i,w,c
  3332  001748  0D10               	mullw	16
  3333  00174A  50F3               	movf	prodl,w,c
  3334  00174C  0F6A               	addlw	low (_key+10)
  3335  00174E  6ED9               	movwf	fsr2l,c
  3336  001750  6ADA               	clrf	fsr2h,c
  3337  001752  96DF               	bcf	indf2,3,c
  3338                           
  3339                           ;ikb.c: 406: key[i].bf.Reptt = 0;
  3340  001754  500B               	movf	ikb_init@i,w,c
  3341  001756  0D10               	mullw	16
  3342  001758  50F3               	movf	prodl,w,c
  3343  00175A  0F6A               	addlw	low (_key+10)
  3344  00175C  6ED9               	movwf	fsr2l,c
  3345  00175E  6ADA               	clrf	fsr2h,c
  3346  001760  9ADF               	bcf	indf2,5,c
  3347                           
  3348                           ;ikb.c: 407: key[i].num_group_x = 0;
  3349  001762  500B               	movf	ikb_init@i,w,c
  3350  001764  0D10               	mullw	16
  3351  001766  50F3               	movf	prodl,w,c
  3352  001768  0F69               	addlw	low (_key+9)
  3353  00176A  6ED9               	movwf	fsr2l,c
  3354  00176C  6ADA               	clrf	fsr2h,c
  3355  00176E  0E00               	movlw	0
  3356  001770  6EDF               	movwf	indf2,c
  3357                           
  3358                           ;ikb.c: 408: key[i].repp.to_start= (uint16_t)500.0/5;
  3359  001772  500B               	movf	ikb_init@i,w,c
  3360  001774  0D10               	mullw	16
  3361  001776  50F3               	movf	prodl,w,c
  3362  001778  0F6C               	addlw	low (_key+12)
  3363  00177A  6ED9               	movwf	fsr2l,c
  3364  00177C  6ADA               	clrf	fsr2h,c
  3365  00177E  0E64               	movlw	100
  3366  001780  6EDE               	movwf	postinc2,c
  3367  001782  0E00               	movlw	0
  3368  001784  6EDD               	movwf	postdec2,c
  3369                           
  3370                           ;ikb.c: 409: key[i].repp.after_start = (uint16_t)200.0/5;
  3371  001786  500B               	movf	ikb_init@i,w,c
  3372  001788  0D10               	mullw	16
  3373  00178A  50F3               	movf	prodl,w,c
  3374  00178C  0F6E               	addlw	low (_key+14)
  3375  00178E  6ED9               	movwf	fsr2l,c
  3376  001790  6ADA               	clrf	fsr2h,c
  3377  001792  0E28               	movlw	40
  3378  001794  6EDE               	movwf	postinc2,c
  3379  001796  0E00               	movlw	0
  3380  001798  6EDD               	movwf	postdec2,c
  3381                           
  3382                           ; BSR set to: 0
  3383  00179A  2A0B               	incf	ikb_init@i,f,c
  3384                           
  3385                           ; BSR set to: 0
  3386  00179C  500B               	movf	ikb_init@i,w,c
  3387  00179E  0A80               	xorlw	128
  3388  0017A0  0F7B               	addlw	-133
  3389  0017A2  B0D8               	btfsc	status,0,c
  3390  0017A4  0012               	return	
  3391  0017A6  D7C1               	goto	l2940
  3392  0017A8                     __end_of_ikb_init:
  3393                           	opt callstack 0
  3394                           
  3395 ;; *************** function _ikb_flush *****************
  3396 ;; Defined at:
  3397 ;;		line 419 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 3F/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    6
  3418 ;; This function calls:
  3419 ;;		_ikey_clear_all_flag
  3420 ;; This function is called by:
  3421 ;;		_main
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text19
  3426  00201A                     __ptext19:
  3427                           	opt callstack 0
  3428  00201A                     _ikb_flush:
  3429                           	opt callstack 24
  3430                           
  3431                           ;ikb.c: 421: ikey_clear_all_flag();
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;incstack = 0
  3435  00201A  ECC8  F00F         	call	_ikey_clear_all_flag	;wreg free
  3436                           
  3437                           ; BSR set to: 0
  3438  00201E  0012               	return		;funcret
  3439  002020                     __end_of_ikb_flush:
  3440                           	opt callstack 0
  3441                           
  3442 ;; *************** function _ikey_clear_all_flag *****************
  3443 ;; Defined at:
  3444 ;;		line 761 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  i               1   10[COMRAM] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 3F/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0
  3459 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3461 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3462 ;;Total ram usage:        1 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    5
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_ikb_flush
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text20
  3473  001F90                     __ptext20:
  3474                           	opt callstack 0
  3475  001F90                     _ikey_clear_all_flag:
  3476                           	opt callstack 24
  3477                           
  3478                           ;ikb.c: 763: uint8_t i;;ikb.c: 764: for (i=0; i<5; i++)
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;incstack = 0
  3482  001F90  0E00               	movlw	0
  3483  001F92  6E0B               	movwf	ikey_clear_all_flag@i,c
  3484  001F94                     l2700:
  3485                           
  3486                           ;ikb.c: 765: {;ikb.c: 767: key[i].bf.ReadyToRead = 0;
  3487  001F94  500B               	movf	ikey_clear_all_flag@i,w,c
  3488  001F96  0D10               	mullw	16
  3489  001F98  50F3               	movf	prodl,w,c
  3490  001F9A  0F6A               	addlw	low (_key+10)
  3491  001F9C  6ED9               	movwf	fsr2l,c
  3492  001F9E  6ADA               	clrf	fsr2h,c
  3493  001FA0  0100               	movlb	0	; () banked
  3494  001FA2  9CDF               	bcf	indf2,6,c
  3495                           
  3496                           ; BSR set to: 0
  3497  001FA4  2A0B               	incf	ikey_clear_all_flag@i,f,c
  3498                           
  3499                           ; BSR set to: 0
  3500  001FA6  0E04               	movlw	4
  3501  001FA8  640B               	cpfsgt	ikey_clear_all_flag@i,c
  3502  001FAA  D7F4               	goto	l2700
  3503  001FAC  0012               	return	
  3504  001FAE                     __end_of_ikey_clear_all_flag:
  3505                           	opt callstack 0
  3506                           
  3507 ;; *************** function _display7s_job *****************
  3508 ;; Defined at:
  3509 ;;		line 178 in file "pulsonic.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3523 ;;      Params:         0       0       0       0       0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3526 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:    7
  3530 ;; This function calls:
  3531 ;;		_multiplexedDisp_job
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text21
  3538  001F28                     __ptext21:
  3539                           	opt callstack 0
  3540  001F28                     _display7s_job:
  3541                           	opt callstack 23
  3542                           
  3543                           ;pulsonic.c: 180: static int8_t q;;pulsonic.c: 182: LATB = pulsonic.display7s[q];
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;incstack = 0
  3547  001F28  0E76               	movlw	low (_pulsonic+118)
  3548  001F2A  243F               	addwf	display7s_job@q,w,c
  3549  001F2C  6ED9               	movwf	fsr2l,c
  3550  001F2E  6ADA               	clrf	fsr2h,c
  3551  001F30  0E01               	movlw	high (_pulsonic+118)
  3552  001F32  22DA               	addwfc	fsr2h,f,c
  3553  001F34  50DF               	movf	indf2,w,c
  3554  001F36  6E8A               	movwf	3978,c	;volatile
  3555                           
  3556                           ;pulsonic.c: 183: multiplexedDisp_job(q);
  3557  001F38  503F               	movf	display7s_job@q,w,c
  3558  001F3A  EC2B  F00C         	call	_multiplexedDisp_job
  3559                           
  3560                           ;pulsonic.c: 185: if (++q == (2 + 3))
  3561  001F3E  2A3F               	incf	display7s_job@q,f,c
  3562  001F40  0E05               	movlw	5
  3563  001F42  183F               	xorwf	display7s_job@q,w,c
  3564  001F44  A4D8               	btfss	status,2,c
  3565  001F46  0012               	return	
  3566                           
  3567                           ;pulsonic.c: 186: {q=0;}
  3568  001F48  0E00               	movlw	0
  3569  001F4A  6E3F               	movwf	display7s_job@q,c
  3570  001F4C  0012               	return		;funcret
  3571  001F4E                     __end_of_display7s_job:
  3572                           	opt callstack 0
  3573                           
  3574 ;; *************** function _multiplexedDisp_job *****************
  3575 ;; Defined at:
  3576 ;;		line 149 in file "pulsonic.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  q               1    wreg     char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  q               1   16[COMRAM] char 
  3581 ;;  i               1   17[COMRAM] char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0
  3592 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3593 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3594 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3595 ;;Total ram usage:        8 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    6
  3598 ;; This function calls:
  3599 ;;		_multiplexedDisp0_off
  3600 ;;		_multiplexedDisp0_on
  3601 ;;		_multiplexedDisp1_off
  3602 ;;		_multiplexedDisp1_on
  3603 ;;		_multiplexedDisp2_off
  3604 ;;		_multiplexedDisp2_on
  3605 ;;		_multiplexedDisp3_off
  3606 ;;		_multiplexedDisp3_on
  3607 ;;		_multiplexedDisp4_off
  3608 ;;		_multiplexedDisp4_on
  3609 ;; This function is called by:
  3610 ;;		_display7s_job
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text22
  3615  001856                     __ptext22:
  3616                           	opt callstack 0
  3617  001856                     _multiplexedDisp_job:
  3618                           	opt callstack 23
  3619                           
  3620                           ;incstack = 0
  3621                           ;multiplexedDisp_job@q stored from wreg
  3622  001856  6E11               	movwf	multiplexedDisp_job@q,c
  3623                           
  3624                           ;pulsonic.c: 151: int8_t i;;pulsonic.c: 152: for (i=0; i< (2 + 3); i++)
  3625  001858  0E00               	movlw	0
  3626  00185A  6E12               	movwf	multiplexedDisp_job@i,c
  3627  00185C                     l2726:
  3628                           
  3629                           ;pulsonic.c: 153: {;pulsonic.c: 154: if ((0x01<<i) & (0x1<<q))
  3630  00185C  C011  F00B         	movff	multiplexedDisp_job@q,??_multiplexedDisp_job
  3631  001860  0E01               	movlw	1
  3632  001862  6E0C               	movwf	(??_multiplexedDisp_job+1)& (0+255),c
  3633  001864  0E00               	movlw	0
  3634  001866  6E0D               	movwf	(??_multiplexedDisp_job+2)& (0+255),c
  3635  001868  2A0B               	incf	??_multiplexedDisp_job,f,c
  3636  00186A  D003               	goto	u2804
  3637  00186C                     u2805:
  3638  00186C  90D8               	bcf	status,0,c
  3639  00186E  360C               	rlcf	??_multiplexedDisp_job+1,f,c
  3640  001870  360D               	rlcf	??_multiplexedDisp_job+2,f,c
  3641  001872                     u2804:
  3642  001872  2E0B               	decfsz	??_multiplexedDisp_job,f,c
  3643  001874  D7FB               	goto	u2805
  3644  001876  C012  F00E         	movff	multiplexedDisp_job@i,??_multiplexedDisp_job+3
  3645  00187A  0E01               	movlw	1
  3646  00187C  6E0F               	movwf	(??_multiplexedDisp_job+4)& (0+255),c
  3647  00187E  0E00               	movlw	0
  3648  001880  6E10               	movwf	(??_multiplexedDisp_job+5)& (0+255),c
  3649  001882  2A0E               	incf	??_multiplexedDisp_job+3,f,c
  3650  001884  D003               	goto	u2814
  3651  001886                     u2815:
  3652  001886  90D8               	bcf	status,0,c
  3653  001888  360F               	rlcf	??_multiplexedDisp_job+4,f,c
  3654  00188A  3610               	rlcf	??_multiplexedDisp_job+5,f,c
  3655  00188C                     u2814:
  3656  00188C  2E0E               	decfsz	??_multiplexedDisp_job+3,f,c
  3657  00188E  D7FB               	goto	u2815
  3658  001890  500C               	movf	??_multiplexedDisp_job+1,w,c
  3659  001892  160F               	andwf	??_multiplexedDisp_job+4,f,c
  3660  001894  500D               	movf	??_multiplexedDisp_job+2,w,c
  3661  001896  1610               	andwf	??_multiplexedDisp_job+5,f,c
  3662  001898  500F               	movf	??_multiplexedDisp_job+4,w,c
  3663  00189A  1010               	iorwf	??_multiplexedDisp_job+5,w,c
  3664  00189C  B4D8               	btfsc	status,2,c
  3665  00189E  D012               	goto	l2730
  3666                           
  3667                           ;pulsonic.c: 155: multiplexedDisp[i].Qonoff[1]();
  3668  0018A0  5012               	movf	multiplexedDisp_job@i,w,c
  3669  0018A2  0D04               	mullw	4
  3670  0018A4  50F3               	movf	prodl,w,c
  3671  0018A6  0FB7               	addlw	low (_multiplexedDisp+2)
  3672  0018A8  6ED9               	movwf	fsr2l,c
  3673  0018AA  6ADA               	clrf	fsr2h,c
  3674  0018AC  D801               	call	u2838
  3675  0018AE  D01C               	goto	u2849
  3676  0018B0                     u2838:
  3677  0018B0  0005               	push	
  3678  0018B2  6EFA               	movwf	pclath,c
  3679  0018B4  50DE               	movf	postinc2,w,c
  3680  0018B6  6EFD               	movwf	tosl,c
  3681  0018B8  50DE               	movf	postinc2,w,c
  3682  0018BA  6EFE               	movwf	tosh,c
  3683  0018BC  50F8               	movf	tblptru,w,c
  3684  0018BE  6EFF               	movwf	tosu,c
  3685  0018C0  50FA               	movf	pclath,w,c
  3686  0018C2  0012               	return		;indir
  3687  0018C4                     l2730:
  3688                           
  3689                           ;pulsonic.c: 156: else;pulsonic.c: 157: multiplexedDisp[i].Qonoff[0]();
  3690  0018C4  5012               	movf	multiplexedDisp_job@i,w,c
  3691  0018C6  0D04               	mullw	4
  3692  0018C8  50F3               	movf	prodl,w,c
  3693  0018CA  0FB5               	addlw	low _multiplexedDisp
  3694  0018CC  6ED9               	movwf	fsr2l,c
  3695  0018CE  6ADA               	clrf	fsr2h,c
  3696  0018D0  D801               	call	u2848
  3697  0018D2  D00A               	goto	u2849
  3698  0018D4                     u2848:
  3699  0018D4  0005               	push	
  3700  0018D6  6EFA               	movwf	pclath,c
  3701  0018D8  50DE               	movf	postinc2,w,c
  3702  0018DA  6EFD               	movwf	tosl,c
  3703  0018DC  50DE               	movf	postinc2,w,c
  3704  0018DE  6EFE               	movwf	tosh,c
  3705  0018E0  50F8               	movf	tblptru,w,c
  3706  0018E2  6EFF               	movwf	tosu,c
  3707  0018E4  50FA               	movf	pclath,w,c
  3708  0018E6  0012               	return		;indir
  3709  0018E8                     u2849:
  3710  0018E8  2A12               	incf	multiplexedDisp_job@i,f,c
  3711  0018EA  5012               	movf	multiplexedDisp_job@i,w,c
  3712  0018EC  0A80               	xorlw	128
  3713  0018EE  0F7B               	addlw	-133
  3714  0018F0  B0D8               	btfsc	status,0,c
  3715  0018F2  0012               	return	
  3716  0018F4  D7B3               	goto	l2726
  3717  0018F6                     __end_of_multiplexedDisp_job:
  3718                           	opt callstack 0
  3719                           
  3720 ;; *************** function _display7s_init *****************
  3721 ;; Defined at:
  3722 ;;		line 165 in file "pulsonic.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    7
  3743 ;; This function calls:
  3744 ;;		_multiplexedDisp_init
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text23
  3751  001B8C                     __ptext23:
  3752                           	opt callstack 0
  3753  001B8C                     _display7s_init:
  3754                           	opt callstack 23
  3755                           
  3756                           ;pulsonic.c: 167: pulsonic.display7s[MODE_DIG_1] = DISP7S_NUMS[2];
  3757                           
  3758                           ;incstack = 0
  3759  001B8C  0E03               	movlw	low (_DISP7S_NUMS+2)
  3760  001B8E  6EF6               	movwf	tblptrl,c
  3761  001B90                     	if	1	;There is more than 1 active tblptr byte
  3762  001B90  0E08               	movlw	high __smallconst
  3763  001B92  6EF7               	movwf	tblptrh,c
  3764  001B94                     	endif
  3765  001B94                     	if	0	;tblptru may be non-zero
  3766  001B94                     	endif
  3767  001B94                     	if	0	;tblptru may be non-zero
  3768  001B94                     	endif
  3769  001B94  0008               	tblrd		*
  3770  001B96  CFF5 F177          	movff	tablat,_pulsonic+119
  3771                           
  3772                           ;pulsonic.c: 168: pulsonic.display7s[MODE_DIG_0] = DISP7S_NUMS[0];
  3773  001B9A  0E01               	movlw	low _DISP7S_NUMS
  3774  001B9C  6EF6               	movwf	tblptrl,c
  3775  001B9E                     	if	1	;There is more than 1 active tblptr byte
  3776  001B9E  0E08               	movlw	high _DISP7S_NUMS
  3777  001BA0  6EF7               	movwf	tblptrh,c
  3778  001BA2                     	endif
  3779  001BA2                     	if	0	;There are less than 3 active tblptr bytes
  3780  001BA2                     	endif
  3781  001BA2  0008               	tblrd		*
  3782  001BA4  CFF5 F176          	movff	tablat,_pulsonic+118
  3783                           
  3784                           ;pulsonic.c: 170: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[RAYA];
  3785  001BA8  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3786  001BAA  6EF6               	movwf	tblptrl,c
  3787  001BAC                     	if	1	;There is more than 1 active tblptr byte
  3788  001BAC  0E08               	movlw	high __smallconst
  3789  001BAE  6EF7               	movwf	tblptrh,c
  3790  001BB0                     	endif
  3791  001BB0                     	if	0	;tblptru may be non-zero
  3792  001BB0                     	endif
  3793  001BB0                     	if	0	;tblptru may be non-zero
  3794  001BB0                     	endif
  3795  001BB0  0008               	tblrd		*
  3796  001BB2  CFF5 F178          	movff	tablat,_pulsonic+120
  3797                           
  3798                           ;pulsonic.c: 171: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[RAYA];
  3799  001BB6  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3800  001BB8  6EF6               	movwf	tblptrl,c
  3801  001BBA                     	if	1	;There is more than 1 active tblptr byte
  3802  001BBA  0E08               	movlw	high __smallconst
  3803  001BBC  6EF7               	movwf	tblptrh,c
  3804  001BBE                     	endif
  3805  001BBE                     	if	0	;tblptru may be non-zero
  3806  001BBE                     	endif
  3807  001BBE                     	if	0	;tblptru may be non-zero
  3808  001BBE                     	endif
  3809  001BBE  0008               	tblrd		*
  3810  001BC0  CFF5 F177          	movff	tablat,_pulsonic+119
  3811                           
  3812                           ;pulsonic.c: 172: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[RAYA];
  3813  001BC4  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3814  001BC6  6EF6               	movwf	tblptrl,c
  3815  001BC8                     	if	1	;There is more than 1 active tblptr byte
  3816  001BC8  0E08               	movlw	high __smallconst
  3817  001BCA  6EF7               	movwf	tblptrh,c
  3818  001BCC                     	endif
  3819  001BCC                     	if	0	;tblptru may be non-zero
  3820  001BCC                     	endif
  3821  001BCC                     	if	0	;tblptru may be non-zero
  3822  001BCC                     	endif
  3823  001BCC  0008               	tblrd		*
  3824  001BCE  CFF5 F176          	movff	tablat,_pulsonic+118
  3825                           
  3826                           ;pulsonic.c: 174: TRISB = 0x00;
  3827  001BD2  0E00               	movlw	0
  3828  001BD4  6E93               	movwf	3987,c	;volatile
  3829                           
  3830                           ;pulsonic.c: 175: multiplexedDisp_init();
  3831  001BD6  ECC3  F00E         	call	_multiplexedDisp_init	;wreg free
  3832  001BDA  0012               	return		;funcret
  3833  001BDC                     __end_of_display7s_init:
  3834                           	opt callstack 0
  3835                           
  3836 ;; *************** function _multiplexedDisp_init *****************
  3837 ;; Defined at:
  3838 ;;		line 134 in file "pulsonic.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  i               1   10[COMRAM] char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0
  3853 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3855 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3856 ;;Total ram usage:        1 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    6
  3859 ;; This function calls:
  3860 ;;		_multiplexedDisp0_off
  3861 ;;		_multiplexedDisp0_on
  3862 ;;		_multiplexedDisp1_off
  3863 ;;		_multiplexedDisp1_on
  3864 ;;		_multiplexedDisp2_off
  3865 ;;		_multiplexedDisp2_on
  3866 ;;		_multiplexedDisp3_off
  3867 ;;		_multiplexedDisp3_on
  3868 ;;		_multiplexedDisp4_off
  3869 ;;		_multiplexedDisp4_on
  3870 ;; This function is called by:
  3871 ;;		_display7s_init
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text24
  3876  001D86                     __ptext24:
  3877                           	opt callstack 0
  3878  001D86                     _multiplexedDisp_init:
  3879                           	opt callstack 23
  3880                           
  3881                           ;pulsonic.c: 136: int8_t i;;pulsonic.c: 137: for (i=0; i< (2 + 3); i++)
  3882                           
  3883                           ;incstack = 0
  3884  001D86  0E00               	movlw	0
  3885  001D88  6E0B               	movwf	multiplexedDisp_init@i,c
  3886  001D8A                     l2712:
  3887                           
  3888                           ;pulsonic.c: 138: {;pulsonic.c: 139: multiplexedDisp[i].Qonoff[0]();
  3889  001D8A  500B               	movf	multiplexedDisp_init@i,w,c
  3890  001D8C  0D04               	mullw	4
  3891  001D8E  50F3               	movf	prodl,w,c
  3892  001D90  0FB5               	addlw	low _multiplexedDisp
  3893  001D92  6ED9               	movwf	fsr2l,c
  3894  001D94  6ADA               	clrf	fsr2h,c
  3895  001D96  D801               	call	u2788
  3896  001D98  D00A               	goto	u2789
  3897  001D9A                     u2788:
  3898  001D9A  0005               	push	
  3899  001D9C  6EFA               	movwf	pclath,c
  3900  001D9E  50DE               	movf	postinc2,w,c
  3901  001DA0  6EFD               	movwf	tosl,c
  3902  001DA2  50DE               	movf	postinc2,w,c
  3903  001DA4  6EFE               	movwf	tosh,c
  3904  001DA6  50F8               	movf	tblptru,w,c
  3905  001DA8  6EFF               	movwf	tosu,c
  3906  001DAA  50FA               	movf	pclath,w,c
  3907  001DAC  0012               	return		;indir
  3908  001DAE                     u2789:
  3909  001DAE  2A0B               	incf	multiplexedDisp_init@i,f,c
  3910  001DB0  500B               	movf	multiplexedDisp_init@i,w,c
  3911  001DB2  0A80               	xorlw	128
  3912  001DB4  0F7B               	addlw	-133
  3913  001DB6  A0D8               	btfss	status,0,c
  3914  001DB8  D7E8               	goto	l2712
  3915  001DBA  9892               	bcf	3986,4,c	;volatile
  3916                           
  3917                           ;pulsonic.c: 143: do{TRISA &= ~(1<<3);}while(0);
  3918  001DBC  9692               	bcf	3986,3,c	;volatile
  3919                           
  3920                           ;pulsonic.c: 144: do{TRISA &= ~(1<<2);}while(0);
  3921  001DBE  9492               	bcf	3986,2,c	;volatile
  3922                           
  3923                           ;pulsonic.c: 145: do{TRISA &= ~(1<<1);}while(0);
  3924  001DC0  9292               	bcf	3986,1,c	;volatile
  3925                           
  3926                           ;pulsonic.c: 146: do{TRISA &= ~(1<<0);}while(0);
  3927  001DC2  9092               	bcf	3986,0,c	;volatile
  3928  001DC4  0012               	return		;funcret
  3929  001DC6                     __end_of_multiplexedDisp_init:
  3930                           	opt callstack 0
  3931                           
  3932 ;; *************** function _multiplexedDisp4_off *****************
  3933 ;; Defined at:
  3934 ;;		line 91 in file "pulsonic.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    5
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_multiplexedDisp_init
  3959 ;;		_multiplexedDisp_job
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text25
  3964  002038                     __ptext25:
  3965                           	opt callstack 0
  3966  002038                     _multiplexedDisp4_off:
  3967                           	opt callstack 23
  3968                           
  3969                           ;incstack = 0
  3970                           ;pulsonic.c: 93: do{LATA |= 1<<0;}while(0);
  3971  002038  8089               	bsf	3977,0,c	;volatile
  3972  00203A  0012               	return		;funcret
  3973  00203C                     __end_of_multiplexedDisp4_off:
  3974                           	opt callstack 0
  3975                           
  3976 ;; *************** function _multiplexedDisp3_on *****************
  3977 ;; Defined at:
  3978 ;;		line 86 in file "pulsonic.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		status,2, status,0
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3996 ;;Total ram usage:        0 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    5
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_multiplexedDisp_init
  4003 ;;		_multiplexedDisp_job
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text26
  4008  00203C                     __ptext26:
  4009                           	opt callstack 0
  4010  00203C                     _multiplexedDisp3_on:
  4011                           	opt callstack 23
  4012                           
  4013                           ;incstack = 0
  4014                           ;pulsonic.c: 88: do{LATA &= ~(1<<1);}while(0);
  4015  00203C  9289               	bcf	3977,1,c	;volatile
  4016  00203E  0012               	return		;funcret
  4017  002040                     __end_of_multiplexedDisp3_on:
  4018                           	opt callstack 0
  4019                           
  4020 ;; *************** function _multiplexedDisp3_off *****************
  4021 ;; Defined at:
  4022 ;;		line 82 in file "pulsonic.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    5
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_multiplexedDisp_init
  4047 ;;		_multiplexedDisp_job
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text27
  4052  002040                     __ptext27:
  4053                           	opt callstack 0
  4054  002040                     _multiplexedDisp3_off:
  4055                           	opt callstack 23
  4056                           
  4057                           ;incstack = 0
  4058                           ;pulsonic.c: 84: do{LATA |= 1<<1;}while(0);
  4059  002040  8289               	bsf	3977,1,c	;volatile
  4060  002042  0012               	return		;funcret
  4061  002044                     __end_of_multiplexedDisp3_off:
  4062                           	opt callstack 0
  4063                           
  4064 ;; *************** function _multiplexedDisp2_on *****************
  4065 ;; Defined at:
  4066 ;;		line 77 in file "pulsonic.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4080 ;;      Params:         0       0       0       0       0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4083 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4084 ;;Total ram usage:        0 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    5
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_multiplexedDisp_init
  4091 ;;		_multiplexedDisp_job
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text28
  4096  002044                     __ptext28:
  4097                           	opt callstack 0
  4098  002044                     _multiplexedDisp2_on:
  4099                           	opt callstack 23
  4100                           
  4101                           ;incstack = 0
  4102                           ;pulsonic.c: 79: do{LATA &= ~(1<<2);}while(0);
  4103  002044  9489               	bcf	3977,2,c	;volatile
  4104  002046  0012               	return		;funcret
  4105  002048                     __end_of_multiplexedDisp2_on:
  4106                           	opt callstack 0
  4107                           
  4108 ;; *************** function _multiplexedDisp2_off *****************
  4109 ;; Defined at:
  4110 ;;		line 73 in file "pulsonic.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4124 ;;      Params:         0       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    5
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_multiplexedDisp_init
  4135 ;;		_multiplexedDisp_job
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text29
  4140  002048                     __ptext29:
  4141                           	opt callstack 0
  4142  002048                     _multiplexedDisp2_off:
  4143                           	opt callstack 23
  4144                           
  4145                           ;incstack = 0
  4146                           ;pulsonic.c: 75: do{LATA |= 1<<2;}while(0);
  4147  002048  8489               	bsf	3977,2,c	;volatile
  4148  00204A  0012               	return		;funcret
  4149  00204C                     __end_of_multiplexedDisp2_off:
  4150                           	opt callstack 0
  4151                           
  4152 ;; *************** function _multiplexedDisp1_on *****************
  4153 ;; Defined at:
  4154 ;;		line 68 in file "pulsonic.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4168 ;;      Params:         0       0       0       0       0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    5
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_multiplexedDisp_init
  4179 ;;		_multiplexedDisp_job
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text30
  4184  00204C                     __ptext30:
  4185                           	opt callstack 0
  4186  00204C                     _multiplexedDisp1_on:
  4187                           	opt callstack 23
  4188                           
  4189                           ;incstack = 0
  4190                           ;pulsonic.c: 70: do{LATA &= ~(1<<3);}while(0);
  4191  00204C  9689               	bcf	3977,3,c	;volatile
  4192  00204E  0012               	return		;funcret
  4193  002050                     __end_of_multiplexedDisp1_on:
  4194                           	opt callstack 0
  4195                           
  4196 ;; *************** function _multiplexedDisp1_off *****************
  4197 ;; Defined at:
  4198 ;;		line 64 in file "pulsonic.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		status,2, status,0
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4215 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4216 ;;Total ram usage:        0 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    5
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_multiplexedDisp_init
  4223 ;;		_multiplexedDisp_job
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text31
  4228  002050                     __ptext31:
  4229                           	opt callstack 0
  4230  002050                     _multiplexedDisp1_off:
  4231                           	opt callstack 23
  4232                           
  4233                           ;incstack = 0
  4234                           ;pulsonic.c: 66: do{LATA |= 1<<3;}while(0);
  4235  002050  8689               	bsf	3977,3,c	;volatile
  4236  002052  0012               	return		;funcret
  4237  002054                     __end_of_multiplexedDisp1_off:
  4238                           	opt callstack 0
  4239                           
  4240 ;; *************** function _multiplexedDisp0_on *****************
  4241 ;; Defined at:
  4242 ;;		line 59 in file "pulsonic.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		status,2, status,0
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4256 ;;      Params:         0       0       0       0       0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4259 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    5
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_multiplexedDisp_init
  4267 ;;		_multiplexedDisp_job
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text32
  4272  002054                     __ptext32:
  4273                           	opt callstack 0
  4274  002054                     _multiplexedDisp0_on:
  4275                           	opt callstack 23
  4276                           
  4277                           ;incstack = 0
  4278                           ;pulsonic.c: 61: do{LATA &= ~(1<<4);}while(0);
  4279  002054  9889               	bcf	3977,4,c	;volatile
  4280  002056  0012               	return		;funcret
  4281  002058                     __end_of_multiplexedDisp0_on:
  4282                           	opt callstack 0
  4283                           
  4284 ;; *************** function _multiplexedDisp0_off *****************
  4285 ;; Defined at:
  4286 ;;		line 55 in file "pulsonic.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4300 ;;      Params:         0       0       0       0       0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4303 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4304 ;;Total ram usage:        0 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    5
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_multiplexedDisp_init
  4311 ;;		_multiplexedDisp_job
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text33
  4316  002058                     __ptext33:
  4317                           	opt callstack 0
  4318  002058                     _multiplexedDisp0_off:
  4319                           	opt callstack 23
  4320                           
  4321                           ;incstack = 0
  4322                           ;pulsonic.c: 57: do{LATA |= 1<<4;}while(0);
  4323  002058  8889               	bsf	3977,4,c	;volatile
  4324  00205A  0012               	return		;funcret
  4325  00205C                     __end_of_multiplexedDisp0_off:
  4326                           	opt callstack 0
  4327                           
  4328 ;; *************** function _multiplexedDisp4_on *****************
  4329 ;; Defined at:
  4330 ;;		line 95 in file "pulsonic.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    5
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_multiplexedDisp_init
  4355 ;;		_multiplexedDisp_job
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text34
  4360  00205C                     __ptext34:
  4361                           	opt callstack 0
  4362  00205C                     _multiplexedDisp4_on:
  4363                           	opt callstack 23
  4364                           
  4365                           ;incstack = 0
  4366                           ;pulsonic.c: 97: do{LATA &= ~(1<<0);}while(0);
  4367  00205C  9089               	bcf	3977,0,c	;volatile
  4368  00205E  0012               	return		;funcret
  4369  002060                     __end_of_multiplexedDisp4_on:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _disp_show_quantity *****************
  4373 ;; Defined at:
  4374 ;;		line 190 in file "pulsonic.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  f               3   48[COMRAM] void 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  buff           10    0[BANK0 ] unsigned char [10]
  4379 ;;  real            3   10[BANK0 ] unsigned char [10]
  4380 ;;  I               2   16[BANK0 ] int 
  4381 ;;  i               1   18[BANK0 ] char 
  4382 ;;  last_pos        1   15[BANK0 ] char 
  4383 ;;  q               1   14[BANK0 ] char 
  4384 ;;  num             1   13[BANK0 ] unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 3F/0
  4391 ;;		On exit  : 3E/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4394 ;;      Params:         3       0       0       0       0       0       0       0       0
  4395 ;;      Locals:         0      19       0       0       0       0       0       0       0
  4396 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4397 ;;      Totals:         4      19       0       0       0       0       0       0       0
  4398 ;;Total ram usage:       23 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    8
  4401 ;; This function calls:
  4402 ;;		___awtoft
  4403 ;;		___ftge
  4404 ;;		___ftmul
  4405 ;;		___ftsub
  4406 ;;		___fttol
  4407 ;;		_itoa
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text35
  4414  000E3E                     __ptext35:
  4415                           	opt callstack 0
  4416  000E3E                     _disp_show_quantity:
  4417                           	opt callstack 22
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;pulsonic.c: 192: int16_t I;;pulsonic.c: 193: char buff[10];;pulsonic.c: 194: uint8_t nu
      +                          m;;pulsonic.c: 195: int8_t i;;pulsonic.c: 196: int8_t last_pos;;pulsonic.c: 197: int8_t 
      +                          q;;pulsonic.c: 198: double real;;pulsonic.c: 200: if (f>= 1000.0f)
  4421                           
  4422                           ;incstack = 0
  4423  000E3E  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4424  000E42  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4425  000E46  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4426  000E4A  0E00               	movlw	0
  4427  000E4C  6E19               	movwf	___ftge@ff2,c
  4428  000E4E  0E7A               	movlw	122
  4429  000E50  6E1A               	movwf	___ftge@ff2+1,c
  4430  000E52  0E44               	movlw	68
  4431  000E54  6E1B               	movwf	___ftge@ff2+2,c
  4432  000E56  EC05  F00D         	call	___ftge	;wreg free
  4433  000E5A  A0D8               	btfss	status,0,c
  4434  000E5C  D006               	goto	l3656
  4435                           
  4436                           ;pulsonic.c: 201: f=999.0f;
  4437  000E5E  0EC0               	movlw	192
  4438  000E60  6E31               	movwf	disp_show_quantity@f,c
  4439  000E62  0E79               	movlw	121
  4440  000E64  6E32               	movwf	disp_show_quantity@f+1,c
  4441  000E66  0E44               	movlw	68
  4442  000E68  6E33               	movwf	disp_show_quantity@f+2,c
  4443  000E6A                     l3656:
  4444                           
  4445                           ;pulsonic.c: 203: I = (int16_t)f;
  4446  000E6A  C031  F022         	movff	disp_show_quantity@f,___fttol@f1
  4447  000E6E  C032  F023         	movff	disp_show_quantity@f+1,___fttol@f1+1
  4448  000E72  C033  F024         	movff	disp_show_quantity@f+2,___fttol@f1+2
  4449  000E76  EC10  F00B         	call	___fttol	;wreg free
  4450  000E7A  C022  F0E3         	movff	?___fttol,disp_show_quantity@I
  4451  000E7E  C023  F0E4         	movff	?___fttol+1,disp_show_quantity@I+1
  4452                           
  4453                           ;pulsonic.c: 204: real = f-I;
  4454  000E82  C031  F01F         	movff	disp_show_quantity@f,___ftsub@f1
  4455  000E86  C032  F020         	movff	disp_show_quantity@f+1,___ftsub@f1+1
  4456  000E8A  C033  F021         	movff	disp_show_quantity@f+2,___ftsub@f1+2
  4457  000E8E  C0E3  F013         	movff	disp_show_quantity@I,___awtoft@c
  4458  000E92  C0E4  F014         	movff	disp_show_quantity@I+1,___awtoft@c+1
  4459  000E96  EC03  F00F         	call	___awtoft	;wreg free
  4460  000E9A  C013  F022         	movff	?___awtoft,___ftsub@f2
  4461  000E9E  C014  F023         	movff	?___awtoft+1,___ftsub@f2+1
  4462  000EA2  C015  F024         	movff	?___awtoft+2,___ftsub@f2+2
  4463  000EA6  ECE3  F00E         	call	___ftsub	;wreg free
  4464  000EAA  C01F  F0DD         	movff	?___ftsub,disp_show_quantity@real
  4465  000EAE  C020  F0DE         	movff	?___ftsub+1,disp_show_quantity@real+1
  4466  000EB2  C021  F0DF         	movff	?___ftsub+2,disp_show_quantity@real+2
  4467                           
  4468                           ;pulsonic.c: 205: if (real > 0.0f)
  4469  000EB6  0E00               	movlw	0
  4470  000EB8  6E16               	movwf	___ftge@ff1,c
  4471  000EBA  0E00               	movlw	0
  4472  000EBC  6E17               	movwf	___ftge@ff1+1,c
  4473  000EBE  0E00               	movlw	0
  4474  000EC0  6E18               	movwf	___ftge@ff1+2,c
  4475  000EC2  C0DD  F019         	movff	disp_show_quantity@real,___ftge@ff2
  4476  000EC6  C0DE  F01A         	movff	disp_show_quantity@real+1,___ftge@ff2+1
  4477  000ECA  C0DF  F01B         	movff	disp_show_quantity@real+2,___ftge@ff2+2
  4478  000ECE  EC05  F00D         	call	___ftge	;wreg free
  4479  000ED2  B0D8               	btfsc	status,0,c
  4480  000ED4  D02A               	goto	l3666
  4481                           
  4482                           ;pulsonic.c: 206: {;pulsonic.c: 207: if (f<100.0f)
  4483  000ED6  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4484  000EDA  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4485  000EDE  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4486  000EE2  0E00               	movlw	0
  4487  000EE4  6E19               	movwf	___ftge@ff2,c
  4488  000EE6  0EC8               	movlw	200
  4489  000EE8  6E1A               	movwf	___ftge@ff2+1,c
  4490  000EEA  0E42               	movlw	66
  4491  000EEC  6E1B               	movwf	___ftge@ff2+2,c
  4492  000EEE  EC05  F00D         	call	___ftge	;wreg free
  4493  000EF2  B0D8               	btfsc	status,0,c
  4494  000EF4  D01A               	goto	l3666
  4495                           
  4496                           ;pulsonic.c: 208: {;pulsonic.c: 209: I = (int)(f*10);
  4497  000EF6  0E00               	movlw	0
  4498  000EF8  6E16               	movwf	___ftmul@f2,c
  4499  000EFA  0E20               	movlw	32
  4500  000EFC  6E17               	movwf	___ftmul@f2+1,c
  4501  000EFE  0E41               	movlw	65
  4502  000F00  6E18               	movwf	___ftmul@f2+2,c
  4503  000F02  C031  F013         	movff	disp_show_quantity@f,___ftmul@f1
  4504  000F06  C032  F014         	movff	disp_show_quantity@f+1,___ftmul@f1+1
  4505  000F0A  C033  F015         	movff	disp_show_quantity@f+2,___ftmul@f1+2
  4506  000F0E  EC96  F00A         	call	___ftmul	;wreg free
  4507  000F12  C013  F022         	movff	?___ftmul,___fttol@f1
  4508  000F16  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  4509  000F1A  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  4510  000F1E  EC10  F00B         	call	___fttol	;wreg free
  4511  000F22  C022  F0E3         	movff	?___fttol,disp_show_quantity@I
  4512  000F26  C023  F0E4         	movff	?___fttol+1,disp_show_quantity@I+1
  4513  000F2A                     l3666:
  4514                           
  4515                           ;pulsonic.c: 210: };pulsonic.c: 212: };pulsonic.c: 213: itoa(buff, I, 10);
  4516  000F2A  0ED3               	movlw	low disp_show_quantity@buff
  4517  000F2C  6E1A               	movwf	itoa@buf,c
  4518  000F2E  C0E3  F01B         	movff	disp_show_quantity@I,itoa@val
  4519  000F32  C0E4  F01C         	movff	disp_show_quantity@I+1,itoa@val+1
  4520  000F36  0E00               	movlw	0
  4521  000F38  6E1E               	movwf	itoa@base+1,c
  4522  000F3A  0E0A               	movlw	10
  4523  000F3C  6E1D               	movwf	itoa@base,c
  4524  000F3E  EC39  F00F         	call	_itoa	;wreg free
  4525                           
  4526                           ;pulsonic.c: 215: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[OFF];
  4527  000F42  0E0B               	movlw	low _DISP7S_CHARS
  4528  000F44  6EF6               	movwf	tblptrl,c
  4529  000F46                     	if	1	;There is more than 1 active tblptr byte
  4530  000F46  0E08               	movlw	high _DISP7S_CHARS
  4531  000F48  6EF7               	movwf	tblptrh,c
  4532  000F4A                     	endif
  4533  000F4A                     	if	0	;There are less than 3 active tblptr bytes
  4534  000F4A                     	endif
  4535  000F4A  0008               	tblrd		*
  4536  000F4C  CFF5 F178          	movff	tablat,_pulsonic+120
  4537                           
  4538                           ;pulsonic.c: 216: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[OFF];
  4539  000F50  0E0B               	movlw	low _DISP7S_CHARS
  4540  000F52  6EF6               	movwf	tblptrl,c
  4541  000F54                     	if	1	;There is more than 1 active tblptr byte
  4542  000F54  0E08               	movlw	high _DISP7S_CHARS
  4543  000F56  6EF7               	movwf	tblptrh,c
  4544  000F58                     	endif
  4545  000F58                     	if	0	;There are less than 3 active tblptr bytes
  4546  000F58                     	endif
  4547  000F58  0008               	tblrd		*
  4548  000F5A  CFF5 F177          	movff	tablat,_pulsonic+119
  4549                           
  4550                           ;pulsonic.c: 217: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[OFF];
  4551  000F5E  0E0B               	movlw	low _DISP7S_CHARS
  4552  000F60  6EF6               	movwf	tblptrl,c
  4553  000F62                     	if	1	;There is more than 1 active tblptr byte
  4554  000F62  0E08               	movlw	high _DISP7S_CHARS
  4555  000F64  6EF7               	movwf	tblptrh,c
  4556  000F66                     	endif
  4557  000F66                     	if	0	;There are less than 3 active tblptr bytes
  4558  000F66                     	endif
  4559  000F66  0008               	tblrd		*
  4560  000F68  CFF5 F176          	movff	tablat,_pulsonic+118
  4561                           
  4562                           ;pulsonic.c: 219: if (real<0.01)
  4563  000F6C  C0DD  F016         	movff	disp_show_quantity@real,___ftge@ff1
  4564  000F70  C0DE  F017         	movff	disp_show_quantity@real+1,___ftge@ff1+1
  4565  000F74  C0DF  F018         	movff	disp_show_quantity@real+2,___ftge@ff1+2
  4566  000F78  0ED7               	movlw	215
  4567  000F7A  6E19               	movwf	___ftge@ff2,c
  4568  000F7C  0E23               	movlw	35
  4569  000F7E  6E1A               	movwf	___ftge@ff2+1,c
  4570  000F80  0E3C               	movlw	60
  4571  000F82  6E1B               	movwf	___ftge@ff2+2,c
  4572  000F84  EC05  F00D         	call	___ftge	;wreg free
  4573  000F88  B0D8               	btfsc	status,0,c
  4574  000F8A  D037               	goto	l3702
  4575                           
  4576                           ;pulsonic.c: 220: {;pulsonic.c: 221: if (I>99)
  4577  000F8C  0100               	movlb	0	; () banked
  4578  000F8E  BFE4               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4579  000F90  D008               	goto	l3680
  4580  000F92  51E4               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4581  000F94  E104               	bnz	u4510
  4582  000F96  0E64               	movlw	100
  4583  000F98  5DE3               	subwf	disp_show_quantity@I& (0+255),w,b
  4584  000F9A  A0D8               	btfss	status,0,c
  4585  000F9C  D002               	goto	l3680
  4586  000F9E                     u4510:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;pulsonic.c: 222: last_pos = 2;
  4590  000F9E  0E02               	movlw	2
  4591  000FA0  D00B               	goto	L4
  4592  000FA2                     l3680:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;pulsonic.c: 223: else if (I>9)
  4596  000FA2  BFE4               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4597  000FA4  D008               	goto	l3684
  4598  000FA6  51E4               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4599  000FA8  E104               	bnz	u4520
  4600  000FAA  0E0A               	movlw	10
  4601  000FAC  5DE3               	subwf	disp_show_quantity@I& (0+255),w,b
  4602  000FAE  A0D8               	btfss	status,0,c
  4603  000FB0  D002               	goto	l3684
  4604  000FB2                     u4520:
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;pulsonic.c: 224: last_pos = 1;
  4608  000FB2  0E01               	movlw	1
  4609  000FB4  D001               	goto	L4
  4610  000FB6                     l3684:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;pulsonic.c: 225: else;pulsonic.c: 226: last_pos = 0;
  4614  000FB6  0E00               	movlw	0
  4615  000FB8                     L4:
  4616  000FB8  6FE2               	movwf	disp_show_quantity@last_pos& (0+255),b
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;pulsonic.c: 228: q = 0;
  4620  000FBA  0E00               	movlw	0
  4621  000FBC  6FE1               	movwf	disp_show_quantity@q& (0+255),b
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;pulsonic.c: 229: for (i=last_pos; i>=0; i--)
  4625  000FBE  C0E2  F0E5         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4626  000FC2                     l3688:
  4627                           
  4628                           ; BSR set to: 0
  4629  000FC2  BFE5               	btfsc	disp_show_quantity@i& (0+255),7,b
  4630  000FC4  0012               	return	
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;pulsonic.c: 230: {;pulsonic.c: 231: num = buff[i] - 0x30;
  4634  000FC6  51E5               	movf	disp_show_quantity@i& (0+255),w,b
  4635  000FC8  0FD3               	addlw	low disp_show_quantity@buff
  4636  000FCA  6ED9               	movwf	fsr2l,c
  4637  000FCC  6ADA               	clrf	fsr2h,c
  4638  000FCE  50DF               	movf	indf2,w,c
  4639  000FD0  0FD0               	addlw	208
  4640  000FD2  6FE0               	movwf	disp_show_quantity@num& (0+255),b
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;pulsonic.c: 232: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4644  000FD4  51E0               	movf	disp_show_quantity@num& (0+255),w,b
  4645  000FD6  0F01               	addlw	low _DISP7S_NUMS
  4646  000FD8  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4647  000FDA  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4648  000FDE                     	if	1	;There is more than 1 active tblptr byte
  4649  000FDE  0E08               	movlw	high __smallconst
  4650  000FE0  6EF7               	movwf	tblptrh,c
  4651  000FE2                     	endif
  4652  000FE2                     	if	0	;tblptru may be non-zero
  4653  000FE2                     	endif
  4654  000FE2                     	if	0	;tblptru may be non-zero
  4655  000FE2                     	endif
  4656  000FE2  0E76               	movlw	low (_pulsonic+118)
  4657  000FE4  25E1               	addwf	disp_show_quantity@q& (0+255),w,b
  4658  000FE6  6ED9               	movwf	fsr2l,c
  4659  000FE8  6ADA               	clrf	fsr2h,c
  4660  000FEA  0E01               	movlw	high (_pulsonic+118)
  4661  000FEC  22DA               	addwfc	fsr2h,f,c
  4662  000FEE  0008               	tblrd		*
  4663  000FF0  CFF5 FFDF          	movff	tablat,indf2
  4664                           
  4665                           ; BSR set to: 0
  4666  000FF4  2BE1               	incf	disp_show_quantity@q& (0+255),f,b
  4667                           
  4668                           ; BSR set to: 0
  4669  000FF6  07E5               	decf	disp_show_quantity@i& (0+255),f,b
  4670  000FF8  D7E4               	goto	l3688
  4671  000FFA                     l3702:
  4672                           
  4673                           ;pulsonic.c: 235: else;pulsonic.c: 236: {;pulsonic.c: 237: if (f<100.0)
  4674  000FFA  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4675  000FFE  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4676  001002  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4677  001006  0E00               	movlw	0
  4678  001008  6E19               	movwf	___ftge@ff2,c
  4679  00100A  0EC8               	movlw	200
  4680  00100C  6E1A               	movwf	___ftge@ff2+1,c
  4681  00100E  0E42               	movlw	66
  4682  001010  6E1B               	movwf	___ftge@ff2+2,c
  4683  001012  EC05  F00D         	call	___ftge	;wreg free
  4684  001016  B0D8               	btfsc	status,0,c
  4685  001018  D041               	goto	l3736
  4686                           
  4687                           ;pulsonic.c: 238: {;pulsonic.c: 242: if (I>99)
  4688  00101A  0100               	movlb	0	; () banked
  4689  00101C  BFE4               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4690  00101E  D008               	goto	l3708
  4691  001020  51E4               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4692  001022  E104               	bnz	u4550
  4693  001024  0E64               	movlw	100
  4694  001026  5DE3               	subwf	disp_show_quantity@I& (0+255),w,b
  4695  001028  A0D8               	btfss	status,0,c
  4696  00102A  D002               	goto	l3708
  4697  00102C                     u4550:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;pulsonic.c: 243: {last_pos = 2;}
  4701  00102C  0E02               	movlw	2
  4702  00102E  D012               	goto	L5
  4703  001030                     l3708:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;pulsonic.c: 244: else if (I>9)
  4707  001030  BFE4               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4708  001032  D008               	goto	l3712
  4709  001034  51E4               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4710  001036  E104               	bnz	u4560
  4711  001038  0E0A               	movlw	10
  4712  00103A  5DE3               	subwf	disp_show_quantity@I& (0+255),w,b
  4713  00103C  A0D8               	btfss	status,0,c
  4714  00103E  D002               	goto	l3712
  4715  001040                     u4560:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;pulsonic.c: 245: {last_pos = 1;}
  4719  001040  0E01               	movlw	1
  4720  001042  D008               	goto	L5
  4721  001044                     l3712:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;pulsonic.c: 246: else;pulsonic.c: 247: {;pulsonic.c: 248: pulsonic.display7s[QUANT_DIG_
      +                          1] = DISP7S_NUMS[0];
  4725  001044  0E01               	movlw	low _DISP7S_NUMS
  4726  001046  6EF6               	movwf	tblptrl,c
  4727  001048                     	if	1	;There is more than 1 active tblptr byte
  4728  001048  0E08               	movlw	high _DISP7S_NUMS
  4729  00104A  6EF7               	movwf	tblptrh,c
  4730  00104C                     	endif
  4731  00104C                     	if	0	;There are less than 3 active tblptr bytes
  4732  00104C                     	endif
  4733  00104C  0008               	tblrd		*
  4734  00104E  CFF5 F177          	movff	tablat,_pulsonic+119
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;pulsonic.c: 249: last_pos = 0;
  4738  001052  0E00               	movlw	0
  4739  001054                     L5:
  4740  001054  6FE2               	movwf	disp_show_quantity@last_pos& (0+255),b
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;pulsonic.c: 250: };pulsonic.c: 252: q = 0;
  4744  001056  0E00               	movlw	0
  4745  001058  6FE1               	movwf	disp_show_quantity@q& (0+255),b
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;pulsonic.c: 253: for (i=last_pos; i>=0; i--)
  4749  00105A  C0E2  F0E5         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4750  00105E                     l3720:
  4751                           
  4752                           ; BSR set to: 0
  4753  00105E  BFE5               	btfsc	disp_show_quantity@i& (0+255),7,b
  4754  001060  D01A               	goto	l3734
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;pulsonic.c: 254: {;pulsonic.c: 255: num = buff[i] - 0x30;
  4758  001062  51E5               	movf	disp_show_quantity@i& (0+255),w,b
  4759  001064  0FD3               	addlw	low disp_show_quantity@buff
  4760  001066  6ED9               	movwf	fsr2l,c
  4761  001068  6ADA               	clrf	fsr2h,c
  4762  00106A  50DF               	movf	indf2,w,c
  4763  00106C  0FD0               	addlw	208
  4764  00106E  6FE0               	movwf	disp_show_quantity@num& (0+255),b
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;pulsonic.c: 256: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4768  001070  51E0               	movf	disp_show_quantity@num& (0+255),w,b
  4769  001072  0F01               	addlw	low _DISP7S_NUMS
  4770  001074  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4771  001076  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4772  00107A                     	if	1	;There is more than 1 active tblptr byte
  4773  00107A  0E08               	movlw	high __smallconst
  4774  00107C  6EF7               	movwf	tblptrh,c
  4775  00107E                     	endif
  4776  00107E                     	if	0	;tblptru may be non-zero
  4777  00107E                     	endif
  4778  00107E                     	if	0	;tblptru may be non-zero
  4779  00107E                     	endif
  4780  00107E  0E76               	movlw	low (_pulsonic+118)
  4781  001080  25E1               	addwf	disp_show_quantity@q& (0+255),w,b
  4782  001082  6ED9               	movwf	fsr2l,c
  4783  001084  6ADA               	clrf	fsr2h,c
  4784  001086  0E01               	movlw	high (_pulsonic+118)
  4785  001088  22DA               	addwfc	fsr2h,f,c
  4786  00108A  0008               	tblrd		*
  4787  00108C  CFF5 FFDF          	movff	tablat,indf2
  4788                           
  4789                           ; BSR set to: 0
  4790  001090  2BE1               	incf	disp_show_quantity@q& (0+255),f,b
  4791                           
  4792                           ; BSR set to: 0
  4793  001092  07E5               	decf	disp_show_quantity@i& (0+255),f,b
  4794  001094  D7E4               	goto	l3720
  4795  001096                     l3734:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;pulsonic.c: 257: };pulsonic.c: 258: pulsonic.display7s[QUANT_DIG_1] |= 0x80;
  4799  001096  0101               	movlb	1	; () banked
  4800  001098  8F77               	bsf	(_pulsonic+119)& (0+255),7,b
  4801                           
  4802                           ;pulsonic.c: 259: }
  4803  00109A  0012               	return	
  4804  00109C                     l3736:
  4805                           
  4806                           ;pulsonic.c: 260: else;pulsonic.c: 261: {;pulsonic.c: 262: q = 0;
  4807  00109C  0E00               	movlw	0
  4808  00109E  0100               	movlb	0	; () banked
  4809  0010A0  6FE1               	movwf	disp_show_quantity@q& (0+255),b
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;pulsonic.c: 264: for (i=last_pos; i>=0; i--)
  4813  0010A2  0E02               	movlw	2
  4814  0010A4  6FE5               	movwf	disp_show_quantity@i& (0+255),b
  4815  0010A6                     l3744:
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;pulsonic.c: 265: {;pulsonic.c: 266: num = buff[i] - 0x30;
  4819  0010A6  51E5               	movf	disp_show_quantity@i& (0+255),w,b
  4820  0010A8  0FD3               	addlw	low disp_show_quantity@buff
  4821  0010AA  6ED9               	movwf	fsr2l,c
  4822  0010AC  6ADA               	clrf	fsr2h,c
  4823  0010AE  50DF               	movf	indf2,w,c
  4824  0010B0  0FD0               	addlw	208
  4825  0010B2  6FE0               	movwf	disp_show_quantity@num& (0+255),b
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;pulsonic.c: 267: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4829  0010B4  51E0               	movf	disp_show_quantity@num& (0+255),w,b
  4830  0010B6  0F01               	addlw	low _DISP7S_NUMS
  4831  0010B8  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4832  0010BA  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4833  0010BE                     	if	1	;There is more than 1 active tblptr byte
  4834  0010BE  0E08               	movlw	high __smallconst
  4835  0010C0  6EF7               	movwf	tblptrh,c
  4836  0010C2                     	endif
  4837  0010C2                     	if	0	;tblptru may be non-zero
  4838  0010C2                     	endif
  4839  0010C2                     	if	0	;tblptru may be non-zero
  4840  0010C2                     	endif
  4841  0010C2  0E76               	movlw	low (_pulsonic+118)
  4842  0010C4  25E1               	addwf	disp_show_quantity@q& (0+255),w,b
  4843  0010C6  6ED9               	movwf	fsr2l,c
  4844  0010C8  6ADA               	clrf	fsr2h,c
  4845  0010CA  0E01               	movlw	high (_pulsonic+118)
  4846  0010CC  22DA               	addwfc	fsr2h,f,c
  4847  0010CE  0008               	tblrd		*
  4848  0010D0  CFF5 FFDF          	movff	tablat,indf2
  4849                           
  4850                           ; BSR set to: 0
  4851  0010D4  2BE1               	incf	disp_show_quantity@q& (0+255),f,b
  4852                           
  4853                           ; BSR set to: 0
  4854  0010D6  07E5               	decf	disp_show_quantity@i& (0+255),f,b
  4855                           
  4856                           ; BSR set to: 0
  4857  0010D8  BFE5               	btfsc	disp_show_quantity@i& (0+255),7,b
  4858  0010DA  0012               	return	
  4859  0010DC  D7E4               	goto	l3744
  4860  0010DE                     __end_of_disp_show_quantity:
  4861                           	opt callstack 0
  4862                           
  4863 ;; *************** function _itoa *****************
  4864 ;; Defined at:
  4865 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  buf             1   25[COMRAM] PTR unsigned char 
  4868 ;;		 -> disp_show_quantity@buff(10), 
  4869 ;;  val             2   26[COMRAM] int 
  4870 ;;  base            2   28[COMRAM] int 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  cp              1    0        PTR unsigned char 
  4873 ;;		 -> disp_show_quantity@buff(10), 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      PTR unsigned char 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4883 ;;      Params:         5       0       0       0       0       0       0       0       0
  4884 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4886 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4887 ;;Total ram usage:        6 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    7
  4890 ;; This function calls:
  4891 ;;		_utoa
  4892 ;; This function is called by:
  4893 ;;		_disp_show_quantity
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text36
  4898  001E72                     __ptext36:
  4899                           	opt callstack 0
  4900  001E72                     _itoa:
  4901                           	opt callstack 22
  4902                           
  4903                           ;incstack = 0
  4904  001E72  AE1C               	btfss	itoa@val+1,7,c
  4905  001E74  D00A               	goto	l3534
  4906  001E76  501A               	movf	itoa@buf,w,c
  4907  001E78  6ED9               	movwf	fsr2l,c
  4908  001E7A  6ADA               	clrf	fsr2h,c
  4909  001E7C  0E2D               	movlw	45
  4910  001E7E  6EDF               	movwf	indf2,c
  4911  001E80  2A1A               	incf	itoa@buf,f,c
  4912  001E82  6C1B               	negf	itoa@val,c
  4913  001E84  1E1C               	comf	itoa@val+1,f,c
  4914  001E86  B0D8               	btfsc	status,0,c
  4915  001E88  2A1C               	incf	itoa@val+1,f,c
  4916  001E8A                     l3534:
  4917  001E8A  C01A  F012         	movff	itoa@buf,utoa@buf
  4918  001E8E  C01B  F013         	movff	itoa@val,utoa@val
  4919  001E92  C01C  F014         	movff	itoa@val+1,utoa@val+1
  4920  001E96  C01D  F015         	movff	itoa@base,utoa@base
  4921  001E9A  C01E  F016         	movff	itoa@base+1,utoa@base+1
  4922  001E9E  EC7B  F00C         	call	_utoa	;wreg free
  4923  001EA2  0012               	return		;funcret
  4924  001EA4                     __end_of_itoa:
  4925                           	opt callstack 0
  4926                           
  4927 ;; *************** function _utoa *****************
  4928 ;; Defined at:
  4929 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  buf             1   17[COMRAM] PTR unsigned char 
  4932 ;;		 -> disp_show_quantity@buff(10), 
  4933 ;;  val             2   18[COMRAM] unsigned int 
  4934 ;;  base            2   20[COMRAM] int 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  v               2   22[COMRAM] unsigned int 
  4937 ;;  c               1   24[COMRAM] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      PTR unsigned char 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4947 ;;      Params:         5       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4950 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4951 ;;Total ram usage:        8 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    6
  4954 ;; This function calls:
  4955 ;;		___lwdiv
  4956 ;;		___lwmod
  4957 ;; This function is called by:
  4958 ;;		_itoa
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text37
  4963  0018F6                     __ptext37:
  4964                           	opt callstack 0
  4965  0018F6                     _utoa:
  4966                           	opt callstack 22
  4967                           
  4968                           ;incstack = 0
  4969  0018F6  C013  F017         	movff	utoa@val,utoa@v
  4970  0018FA  C014  F018         	movff	utoa@val+1,utoa@v+1
  4971  0018FE                     l3402:
  4972  0018FE  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  4973  001902  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  4974  001906  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  4975  00190A  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  4976  00190E  EC9D  F00D         	call	___lwdiv	;wreg free
  4977  001912  C00B  F017         	movff	?___lwdiv,utoa@v
  4978  001916  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  4979  00191A  2A12               	incf	utoa@buf,f,c
  4980  00191C  5017               	movf	utoa@v,w,c
  4981  00191E  1018               	iorwf	utoa@v+1,w,c
  4982  001920  A4D8               	btfss	status,2,c
  4983  001922  D7ED               	goto	l3402
  4984  001924  5012               	movf	utoa@buf,w,c
  4985  001926  6ED9               	movwf	fsr2l,c
  4986  001928  6ADA               	clrf	fsr2h,c
  4987  00192A  0E00               	movlw	0
  4988  00192C  6EDF               	movwf	indf2,c
  4989  00192E  0612               	decf	utoa@buf,f,c
  4990  001930                     l3412:
  4991  001930  C013  F00B         	movff	utoa@val,___lwmod@dividend
  4992  001934  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  4993  001938  C015  F00D         	movff	utoa@base,___lwmod@divisor
  4994  00193C  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  4995  001940  EC81  F00E         	call	___lwmod	;wreg free
  4996  001944  500B               	movf	?___lwmod,w,c
  4997  001946  6E19               	movwf	utoa@c,c
  4998  001948  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  4999  00194C  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  5000  001950  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  5001  001954  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  5002  001958  EC9D  F00D         	call	___lwdiv	;wreg free
  5003  00195C  C00B  F013         	movff	?___lwdiv,utoa@val
  5004  001960  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  5005  001964  0E09               	movlw	9
  5006  001966  6419               	cpfsgt	utoa@c,c
  5007  001968  D002               	goto	l1220
  5008  00196A  0E07               	movlw	7
  5009  00196C  2619               	addwf	utoa@c,f,c
  5010  00196E                     l1220:
  5011  00196E  0E30               	movlw	48
  5012  001970  2619               	addwf	utoa@c,f,c
  5013  001972  5012               	movf	utoa@buf,w,c
  5014  001974  6ED9               	movwf	fsr2l,c
  5015  001976  6ADA               	clrf	fsr2h,c
  5016  001978  C019  FFDF         	movff	utoa@c,indf2
  5017  00197C  0612               	decf	utoa@buf,f,c
  5018  00197E  5013               	movf	utoa@val,w,c
  5019  001980  1014               	iorwf	utoa@val+1,w,c
  5020  001982  A4D8               	btfss	status,2,c
  5021  001984  D7D5               	goto	l3412
  5022                           
  5023                           ;	Return value of _utoa is never used
  5024  001986  2A12               	incf	utoa@buf,f,c
  5025  001988  0012               	return		;funcret
  5026  00198A                     __end_of_utoa:
  5027                           	opt callstack 0
  5028                           
  5029 ;; *************** function ___lwmod *****************
  5030 ;; Defined at:
  5031 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  dividend        2   10[COMRAM] unsigned int 
  5034 ;;  divisor         2   12[COMRAM] unsigned int 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;  counter         1   14[COMRAM] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  2   10[COMRAM] unsigned int 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5046 ;;      Params:         4       0       0       0       0       0       0       0       0
  5047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5049 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5050 ;;Total ram usage:        5 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    5
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_utoa
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text38
  5061  001D02                     __ptext38:
  5062                           	opt callstack 0
  5063  001D02                     ___lwmod:
  5064                           	opt callstack 22
  5065                           
  5066                           ;incstack = 0
  5067  001D02  500D               	movf	___lwmod@divisor,w,c
  5068  001D04  100E               	iorwf	___lwmod@divisor+1,w,c
  5069  001D06  B4D8               	btfsc	status,2,c
  5070  001D08  D018               	goto	l1038
  5071  001D0A  0E01               	movlw	1
  5072  001D0C  6E0F               	movwf	___lwmod@counter,c
  5073  001D0E  D004               	goto	l3298
  5074  001D10                     l3296:
  5075  001D10  90D8               	bcf	status,0,c
  5076  001D12  360D               	rlcf	___lwmod@divisor,f,c
  5077  001D14  360E               	rlcf	___lwmod@divisor+1,f,c
  5078  001D16  2A0F               	incf	___lwmod@counter,f,c
  5079  001D18                     l3298:
  5080  001D18  AE0E               	btfss	___lwmod@divisor+1,7,c
  5081  001D1A  D7FA               	goto	l3296
  5082  001D1C                     u3650:
  5083  001D1C  500D               	movf	___lwmod@divisor,w,c
  5084  001D1E  5C0B               	subwf	___lwmod@dividend,w,c
  5085  001D20  500E               	movf	___lwmod@divisor+1,w,c
  5086  001D22  580C               	subwfb	___lwmod@dividend+1,w,c
  5087  001D24  A0D8               	btfss	status,0,c
  5088  001D26  D004               	goto	l3304
  5089  001D28  500D               	movf	___lwmod@divisor,w,c
  5090  001D2A  5E0B               	subwf	___lwmod@dividend,f,c
  5091  001D2C  500E               	movf	___lwmod@divisor+1,w,c
  5092  001D2E  5A0C               	subwfb	___lwmod@dividend+1,f,c
  5093  001D30                     l3304:
  5094  001D30  90D8               	bcf	status,0,c
  5095  001D32  320E               	rrcf	___lwmod@divisor+1,f,c
  5096  001D34  320D               	rrcf	___lwmod@divisor,f,c
  5097  001D36  2E0F               	decfsz	___lwmod@counter,f,c
  5098  001D38  D7F1               	goto	u3650
  5099  001D3A                     l1038:
  5100  001D3A  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  5101  001D3E  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  5102  001D42  0012               	return		;funcret
  5103  001D44                     __end_of___lwmod:
  5104                           	opt callstack 0
  5105                           
  5106 ;; *************** function ___lwdiv *****************
  5107 ;; Defined at:
  5108 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  dividend        2   10[COMRAM] unsigned int 
  5111 ;;  divisor         2   12[COMRAM] unsigned int 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  quotient        2   15[COMRAM] unsigned int 
  5114 ;;  counter         1   14[COMRAM] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  2   10[COMRAM] unsigned int 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5124 ;;      Params:         4       0       0       0       0       0       0       0       0
  5125 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5127 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5128 ;;Total ram usage:        7 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    5
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_utoa
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text39
  5139  001B3A                     __ptext39:
  5140                           	opt callstack 0
  5141  001B3A                     ___lwdiv:
  5142                           	opt callstack 22
  5143                           
  5144                           ;incstack = 0
  5145  001B3A  0E00               	movlw	0
  5146  001B3C  6E11               	movwf	___lwdiv@quotient+1,c
  5147  001B3E  0E00               	movlw	0
  5148  001B40  6E10               	movwf	___lwdiv@quotient,c
  5149  001B42  500D               	movf	___lwdiv@divisor,w,c
  5150  001B44  100E               	iorwf	___lwdiv@divisor+1,w,c
  5151  001B46  B4D8               	btfsc	status,2,c
  5152  001B48  D01C               	goto	l1028
  5153  001B4A  0E01               	movlw	1
  5154  001B4C  6E0F               	movwf	___lwdiv@counter,c
  5155  001B4E  D004               	goto	l3278
  5156  001B50                     l3276:
  5157  001B50  90D8               	bcf	status,0,c
  5158  001B52  360D               	rlcf	___lwdiv@divisor,f,c
  5159  001B54  360E               	rlcf	___lwdiv@divisor+1,f,c
  5160  001B56  2A0F               	incf	___lwdiv@counter,f,c
  5161  001B58                     l3278:
  5162  001B58  AE0E               	btfss	___lwdiv@divisor+1,7,c
  5163  001B5A  D7FA               	goto	l3276
  5164  001B5C                     u3620:
  5165  001B5C  90D8               	bcf	status,0,c
  5166  001B5E  3610               	rlcf	___lwdiv@quotient,f,c
  5167  001B60  3611               	rlcf	___lwdiv@quotient+1,f,c
  5168  001B62  500D               	movf	___lwdiv@divisor,w,c
  5169  001B64  5C0B               	subwf	___lwdiv@dividend,w,c
  5170  001B66  500E               	movf	___lwdiv@divisor+1,w,c
  5171  001B68  580C               	subwfb	___lwdiv@dividend+1,w,c
  5172  001B6A  A0D8               	btfss	status,0,c
  5173  001B6C  D005               	goto	l3288
  5174  001B6E  500D               	movf	___lwdiv@divisor,w,c
  5175  001B70  5E0B               	subwf	___lwdiv@dividend,f,c
  5176  001B72  500E               	movf	___lwdiv@divisor+1,w,c
  5177  001B74  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  5178  001B76  8010               	bsf	___lwdiv@quotient,0,c
  5179  001B78                     l3288:
  5180  001B78  90D8               	bcf	status,0,c
  5181  001B7A  320E               	rrcf	___lwdiv@divisor+1,f,c
  5182  001B7C  320D               	rrcf	___lwdiv@divisor,f,c
  5183  001B7E  2E0F               	decfsz	___lwdiv@counter,f,c
  5184  001B80  D7ED               	goto	u3620
  5185  001B82                     l1028:
  5186  001B82  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  5187  001B86  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5188  001B8A  0012               	return		;funcret
  5189  001B8C                     __end_of___lwdiv:
  5190                           	opt callstack 0
  5191                           
  5192 ;; *************** function ___fttol *****************
  5193 ;; Defined at:
  5194 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  f1              3   33[COMRAM] float 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  lval            4   43[COMRAM] unsigned long 
  5199 ;;  exp1            1   47[COMRAM] unsigned char 
  5200 ;;  sign1           1   42[COMRAM] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  4   33[COMRAM] long 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5210 ;;      Params:         4       0       0       0       0       0       0       0       0
  5211 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5212 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5213 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5214 ;;Total ram usage:       15 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    5
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_disp_show_quantity
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text40
  5225  001620                     __ptext40:
  5226                           	opt callstack 0
  5227  001620                     ___fttol:
  5228                           	opt callstack 24
  5229                           
  5230                           ;incstack = 0
  5231  001620  C024  F026         	movff	___fttol@f1+2,??___fttol
  5232  001624  6A27               	clrf	(??___fttol+1)& (0+255),c
  5233  001626  6A28               	clrf	(??___fttol+2)& (0+255),c
  5234  001628  3423               	rlcf	___fttol@f1+1,w,c
  5235  00162A  3626               	rlcf	??___fttol& (0+255),f,c
  5236  00162C  E301               	bnc	u4391
  5237  00162E  8027               	bsf	(??___fttol+1)& (0+255),0,c
  5238  001630                     u4391:
  5239  001630  5026               	movf	??___fttol,w,c
  5240  001632  6E30               	movwf	___fttol@exp1,c
  5241  001634  5030               	movf	___fttol@exp1,w,c
  5242  001636  A4D8               	btfss	status,2,c
  5243  001638  D009               	goto	l3612
  5244  00163A                     u4400:
  5245  00163A  0E00               	movlw	0
  5246  00163C  6E22               	movwf	?___fttol,c
  5247  00163E  0E00               	movlw	0
  5248  001640  6E23               	movwf	?___fttol+1,c
  5249  001642  0E00               	movlw	0
  5250  001644  6E24               	movwf	?___fttol+2,c
  5251  001646  0E00               	movlw	0
  5252  001648  6E25               	movwf	?___fttol+3,c
  5253  00164A  0012               	return	
  5254  00164C                     l3612:
  5255  00164C  0E17               	movlw	23
  5256  00164E  6E26               	movwf	??___fttol& (0+255),c
  5257  001650  C022  F027         	movff	___fttol@f1,??___fttol+1
  5258  001654  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  5259  001658  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  5260  00165C  2826               	incf	??___fttol,w,c
  5261  00165E  6E2A               	movwf	(??___fttol+4)& (0+255),c
  5262  001660  D004               	goto	u4410
  5263  001662                     u4415:
  5264  001662  90D8               	bcf	status,0,c
  5265  001664  3229               	rrcf	??___fttol+3,f,c
  5266  001666  3228               	rrcf	??___fttol+2,f,c
  5267  001668  3227               	rrcf	??___fttol+1,f,c
  5268  00166A                     u4410:
  5269  00166A  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  5270  00166C  D7FA               	goto	u4415
  5271  00166E  5027               	movf	??___fttol+1,w,c
  5272  001670  6E2B               	movwf	___fttol@sign1,c
  5273  001672  8E23               	bsf	___fttol@f1+1,7,c
  5274  001674  0EFF               	movlw	255
  5275  001676  1622               	andwf	___fttol@f1,f,c
  5276  001678  0EFF               	movlw	255
  5277  00167A  1623               	andwf	___fttol@f1+1,f,c
  5278  00167C  0E00               	movlw	0
  5279  00167E  1624               	andwf	___fttol@f1+2,f,c
  5280  001680  5022               	movf	___fttol@f1,w,c
  5281  001682  6E2C               	movwf	___fttol@lval,c
  5282  001684  5023               	movf	___fttol@f1+1,w,c
  5283  001686  6E2D               	movwf	___fttol@lval+1,c
  5284  001688  5024               	movf	___fttol@f1+2,w,c
  5285  00168A  6E2E               	movwf	___fttol@lval+2,c
  5286  00168C  6A2F               	clrf	___fttol@lval+3,c
  5287  00168E  0E8E               	movlw	142
  5288  001690  5E30               	subwf	___fttol@exp1,f,c
  5289  001692  AE30               	btfss	___fttol@exp1,7,c
  5290  001694  D00D               	goto	l3634
  5291  001696  5030               	movf	___fttol@exp1,w,c
  5292  001698  0A80               	xorlw	128
  5293  00169A  0F8F               	addlw	143
  5294  00169C  A0D8               	btfss	status,0,c
  5295  00169E  D7CD               	goto	u4400
  5296  0016A0                     l3630:
  5297  0016A0  90D8               	bcf	status,0,c
  5298  0016A2  322F               	rrcf	___fttol@lval+3,f,c
  5299  0016A4  322E               	rrcf	___fttol@lval+2,f,c
  5300  0016A6  322D               	rrcf	___fttol@lval+1,f,c
  5301  0016A8  322C               	rrcf	___fttol@lval,f,c
  5302  0016AA  3E30               	incfsz	___fttol@exp1,f,c
  5303  0016AC  D7F9               	goto	l3630
  5304  0016AE  D00D               	goto	u4450
  5305  0016B0                     l3634:
  5306  0016B0  0E17               	movlw	23
  5307  0016B2  6430               	cpfsgt	___fttol@exp1,c
  5308  0016B4  D007               	goto	l3642
  5309  0016B6  D7C1               	goto	u4400
  5310  0016B8                     l3640:
  5311  0016B8  90D8               	bcf	status,0,c
  5312  0016BA  362C               	rlcf	___fttol@lval,f,c
  5313  0016BC  362D               	rlcf	___fttol@lval+1,f,c
  5314  0016BE  362E               	rlcf	___fttol@lval+2,f,c
  5315  0016C0  362F               	rlcf	___fttol@lval+3,f,c
  5316  0016C2  0630               	decf	___fttol@exp1,f,c
  5317  0016C4                     l3642:
  5318  0016C4  5030               	movf	___fttol@exp1,w,c
  5319  0016C6  A4D8               	btfss	status,2,c
  5320  0016C8  D7F7               	goto	l3640
  5321  0016CA                     u4450:
  5322  0016CA  502B               	movf	___fttol@sign1,w,c
  5323  0016CC  B4D8               	btfsc	status,2,c
  5324  0016CE  D008               	goto	l3648
  5325  0016D0  1E2F               	comf	___fttol@lval+3,f,c
  5326  0016D2  1E2E               	comf	___fttol@lval+2,f,c
  5327  0016D4  1E2D               	comf	___fttol@lval+1,f,c
  5328  0016D6  6C2C               	negf	___fttol@lval,c
  5329  0016D8  0E00               	movlw	0
  5330  0016DA  222D               	addwfc	___fttol@lval+1,f,c
  5331  0016DC  222E               	addwfc	___fttol@lval+2,f,c
  5332  0016DE  222F               	addwfc	___fttol@lval+3,f,c
  5333  0016E0                     l3648:
  5334  0016E0  C02C  F022         	movff	___fttol@lval,?___fttol
  5335  0016E4  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  5336  0016E8  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  5337  0016EC  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  5338  0016F0  0012               	return		;funcret
  5339  0016F2                     __end_of___fttol:
  5340                           	opt callstack 0
  5341                           
  5342 ;; *************** function ___ftsub *****************
  5343 ;; Defined at:
  5344 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  f1              3   30[COMRAM] float 
  5347 ;;  f2              3   33[COMRAM] float 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  3   30[COMRAM] float 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, status,0, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5359 ;;      Params:         6       0       0       0       0       0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5362 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5363 ;;Total ram usage:        6 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    7
  5366 ;; This function calls:
  5367 ;;		___ftadd
  5368 ;; This function is called by:
  5369 ;;		_disp_show_quantity
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text41
  5374  001DC6                     __ptext41:
  5375                           	opt callstack 0
  5376  001DC6                     ___ftsub:
  5377                           	opt callstack 22
  5378                           
  5379                           ;incstack = 0
  5380  001DC6  5022               	movf	___ftsub@f2,w,c
  5381  001DC8  1023               	iorwf	___ftsub@f2+1,w,c
  5382  001DCA  1024               	iorwf	___ftsub@f2+2,w,c
  5383  001DCC  B4D8               	btfsc	status,2,c
  5384  001DCE  D006               	goto	l3590
  5385  001DD0  0E00               	movlw	0
  5386  001DD2  1A22               	xorwf	___ftsub@f2,f,c
  5387  001DD4  0E00               	movlw	0
  5388  001DD6  1A23               	xorwf	___ftsub@f2+1,f,c
  5389  001DD8  0E80               	movlw	128
  5390  001DDA  1A24               	xorwf	___ftsub@f2+2,f,c
  5391  001DDC                     l3590:
  5392  001DDC  C01F  F013         	movff	___ftsub@f1,___ftadd@f1
  5393  001DE0  C020  F014         	movff	___ftsub@f1+1,___ftadd@f1+1
  5394  001DE4  C021  F015         	movff	___ftsub@f1+2,___ftadd@f1+2
  5395  001DE8  C022  F016         	movff	___ftsub@f2,___ftadd@f2
  5396  001DEC  C023  F017         	movff	___ftsub@f2+1,___ftadd@f2+1
  5397  001DF0  C024  F018         	movff	___ftsub@f2+2,___ftadd@f2+2
  5398  001DF4  EC6F  F008         	call	___ftadd	;wreg free
  5399  001DF8  C013  F01F         	movff	?___ftadd,?___ftsub
  5400  001DFC  C014  F020         	movff	?___ftadd+1,?___ftsub+1
  5401  001E00  C015  F021         	movff	?___ftadd+2,?___ftsub+2
  5402  001E04  0012               	return		;funcret
  5403  001E06                     __end_of___ftsub:
  5404                           	opt callstack 0
  5405                           
  5406 ;; *************** function ___ftadd *****************
  5407 ;; Defined at:
  5408 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  f1              3   18[COMRAM] float 
  5411 ;;  f2              3   21[COMRAM] float 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  exp1            1   29[COMRAM] unsigned char 
  5414 ;;  exp2            1   28[COMRAM] unsigned char 
  5415 ;;  sign            1   27[COMRAM] unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  3   18[COMRAM] float 
  5418 ;; Registers used:
  5419 ;;		wreg, status,2, status,0, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5425 ;;      Params:         6       0       0       0       0       0       0       0       0
  5426 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5427 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5428 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5429 ;;Total ram usage:       12 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    6
  5432 ;; This function calls:
  5433 ;;		___ftpack
  5434 ;; This function is called by:
  5435 ;;		___ftsub
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text42
  5440  0010DE                     __ptext42:
  5441                           	opt callstack 0
  5442  0010DE                     ___ftadd:
  5443                           	opt callstack 22
  5444                           
  5445                           ;incstack = 0
  5446  0010DE  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  5447  0010E2  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  5448  0010E4  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  5449  0010E6  3414               	rlcf	___ftadd@f1+1,w,c
  5450  0010E8  3619               	rlcf	??___ftadd& (0+255),f,c
  5451  0010EA  E301               	bnc	u3671
  5452  0010EC  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  5453  0010EE                     u3671:
  5454  0010EE  5019               	movf	??___ftadd,w,c
  5455  0010F0  6E1E               	movwf	___ftadd@exp1,c
  5456  0010F2  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  5457  0010F6  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  5458  0010F8  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  5459  0010FA  3417               	rlcf	___ftadd@f2+1,w,c
  5460  0010FC  3619               	rlcf	??___ftadd& (0+255),f,c
  5461  0010FE  E301               	bnc	u3681
  5462  001100  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  5463  001102                     u3681:
  5464  001102  5019               	movf	??___ftadd,w,c
  5465  001104  6E1D               	movwf	___ftadd@exp2,c
  5466  001106  501E               	movf	___ftadd@exp1,w,c
  5467  001108  B4D8               	btfsc	status,2,c
  5468  00110A  D00A               	goto	u3710
  5469  00110C  501D               	movf	___ftadd@exp2,w,c
  5470  00110E  5C1E               	subwf	___ftadd@exp1,w,c
  5471  001110  B0D8               	btfsc	status,0,c
  5472  001112  D00D               	goto	l3316
  5473  001114  501E               	movf	___ftadd@exp1,w,c
  5474  001116  5C1D               	subwf	___ftadd@exp2,w,c
  5475  001118  6E19               	movwf	??___ftadd& (0+255),c
  5476  00111A  0E18               	movlw	24
  5477  00111C  6419               	cpfsgt	??___ftadd,c
  5478  00111E  D007               	goto	l3316
  5479  001120                     u3710:
  5480  001120  C016  F013         	movff	___ftadd@f2,?___ftadd
  5481  001124  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  5482  001128  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  5483  00112C  0012               	return	
  5484  00112E                     l3316:
  5485  00112E  501D               	movf	___ftadd@exp2,w,c
  5486  001130  B4D8               	btfsc	status,2,c
  5487  001132  D00A               	goto	u3740
  5488  001134  501E               	movf	___ftadd@exp1,w,c
  5489  001136  5C1D               	subwf	___ftadd@exp2,w,c
  5490  001138  B0D8               	btfsc	status,0,c
  5491  00113A  D00D               	goto	l3322
  5492  00113C  501D               	movf	___ftadd@exp2,w,c
  5493  00113E  5C1E               	subwf	___ftadd@exp1,w,c
  5494  001140  6E19               	movwf	??___ftadd& (0+255),c
  5495  001142  0E18               	movlw	24
  5496  001144  6419               	cpfsgt	??___ftadd,c
  5497  001146  D007               	goto	l3322
  5498  001148                     u3740:
  5499  001148  C013  F013         	movff	___ftadd@f1,?___ftadd
  5500  00114C  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  5501  001150  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  5502  001154  0012               	return	
  5503  001156                     l3322:
  5504  001156  0E06               	movlw	6
  5505  001158  6E1C               	movwf	___ftadd@sign,c
  5506  00115A  BE15               	btfsc	___ftadd@f1+2,7,c
  5507  00115C  8E1C               	bsf	___ftadd@sign,7,c
  5508  00115E  BE18               	btfsc	___ftadd@f2+2,7,c
  5509  001160  8C1C               	bsf	___ftadd@sign,6,c
  5510  001162  8E14               	bsf	___ftadd@f1+1,7,c
  5511  001164  0EFF               	movlw	255
  5512  001166  1613               	andwf	___ftadd@f1,f,c
  5513  001168  0EFF               	movlw	255
  5514  00116A  1614               	andwf	___ftadd@f1+1,f,c
  5515  00116C  0E00               	movlw	0
  5516  00116E  1615               	andwf	___ftadd@f1+2,f,c
  5517  001170  8E17               	bsf	___ftadd@f2+1,7,c
  5518  001172  0EFF               	movlw	255
  5519  001174  1616               	andwf	___ftadd@f2,f,c
  5520  001176  0EFF               	movlw	255
  5521  001178  1617               	andwf	___ftadd@f2+1,f,c
  5522  00117A  0E00               	movlw	0
  5523  00117C  1618               	andwf	___ftadd@f2+2,f,c
  5524  00117E  501D               	movf	___ftadd@exp2,w,c
  5525  001180  5C1E               	subwf	___ftadd@exp1,w,c
  5526  001182  B0D8               	btfsc	status,0,c
  5527  001184  D01B               	goto	l3348
  5528  001186                     u3770:
  5529  001186  90D8               	bcf	status,0,c
  5530  001188  3616               	rlcf	___ftadd@f2,f,c
  5531  00118A  3617               	rlcf	___ftadd@f2+1,f,c
  5532  00118C  3618               	rlcf	___ftadd@f2+2,f,c
  5533  00118E  061D               	decf	___ftadd@exp2,f,c
  5534  001190  501E               	movf	___ftadd@exp1,w,c
  5535  001192  181D               	xorwf	___ftadd@exp2,w,c
  5536  001194  B4D8               	btfsc	status,2,c
  5537  001196  D00D               	goto	l3346
  5538  001198  061C               	decf	___ftadd@sign,f,c
  5539  00119A  C01C  F019         	movff	___ftadd@sign,??___ftadd
  5540  00119E  0E07               	movlw	7
  5541  0011A0  1619               	andwf	??___ftadd,f,c
  5542  0011A2  B4D8               	btfsc	status,2,c
  5543  0011A4  D006               	goto	l3346
  5544  0011A6  D7EF               	goto	u3770
  5545  0011A8                     l3344:
  5546  0011A8  90D8               	bcf	status,0,c
  5547  0011AA  3215               	rrcf	___ftadd@f1+2,f,c
  5548  0011AC  3214               	rrcf	___ftadd@f1+1,f,c
  5549  0011AE  3213               	rrcf	___ftadd@f1,f,c
  5550  0011B0  2A1E               	incf	___ftadd@exp1,f,c
  5551  0011B2                     l3346:
  5552  0011B2  501D               	movf	___ftadd@exp2,w,c
  5553  0011B4  181E               	xorwf	___ftadd@exp1,w,c
  5554  0011B6  B4D8               	btfsc	status,2,c
  5555  0011B8  D01F               	goto	u3840
  5556  0011BA  D7F6               	goto	l3344
  5557  0011BC                     l3348:
  5558  0011BC  501E               	movf	___ftadd@exp1,w,c
  5559  0011BE  5C1D               	subwf	___ftadd@exp2,w,c
  5560  0011C0  B0D8               	btfsc	status,0,c
  5561  0011C2  D01A               	goto	u3840
  5562  0011C4                     u3810:
  5563  0011C4  90D8               	bcf	status,0,c
  5564  0011C6  3613               	rlcf	___ftadd@f1,f,c
  5565  0011C8  3614               	rlcf	___ftadd@f1+1,f,c
  5566  0011CA  3615               	rlcf	___ftadd@f1+2,f,c
  5567  0011CC  061E               	decf	___ftadd@exp1,f,c
  5568  0011CE  501E               	movf	___ftadd@exp1,w,c
  5569  0011D0  181D               	xorwf	___ftadd@exp2,w,c
  5570  0011D2  B4D8               	btfsc	status,2,c
  5571  0011D4  D00D               	goto	l3358
  5572  0011D6  061C               	decf	___ftadd@sign,f,c
  5573  0011D8  C01C  F019         	movff	___ftadd@sign,??___ftadd
  5574  0011DC  0E07               	movlw	7
  5575  0011DE  1619               	andwf	??___ftadd,f,c
  5576  0011E0  B4D8               	btfsc	status,2,c
  5577  0011E2  D006               	goto	l3358
  5578  0011E4  D7EF               	goto	u3810
  5579  0011E6                     l3356:
  5580  0011E6  90D8               	bcf	status,0,c
  5581  0011E8  3218               	rrcf	___ftadd@f2+2,f,c
  5582  0011EA  3217               	rrcf	___ftadd@f2+1,f,c
  5583  0011EC  3216               	rrcf	___ftadd@f2,f,c
  5584  0011EE  2A1D               	incf	___ftadd@exp2,f,c
  5585  0011F0                     l3358:
  5586  0011F0  501D               	movf	___ftadd@exp2,w,c
  5587  0011F2  181E               	xorwf	___ftadd@exp1,w,c
  5588  0011F4  A4D8               	btfss	status,2,c
  5589  0011F6  D7F7               	goto	l3356
  5590  0011F8                     u3840:
  5591  0011F8  AE1C               	btfss	___ftadd@sign,7,c
  5592  0011FA  D00C               	goto	l879
  5593  0011FC  0EFF               	movlw	255
  5594  0011FE  1A13               	xorwf	___ftadd@f1,f,c
  5595  001200  0EFF               	movlw	255
  5596  001202  1A14               	xorwf	___ftadd@f1+1,f,c
  5597  001204  0EFF               	movlw	255
  5598  001206  1A15               	xorwf	___ftadd@f1+2,f,c
  5599  001208  0E01               	movlw	1
  5600  00120A  2613               	addwf	___ftadd@f1,f,c
  5601  00120C  0E00               	movlw	0
  5602  00120E  2214               	addwfc	___ftadd@f1+1,f,c
  5603  001210  0E00               	movlw	0
  5604  001212  2215               	addwfc	___ftadd@f1+2,f,c
  5605  001214                     l879:
  5606  001214  AC1C               	btfss	___ftadd@sign,6,c
  5607  001216  D00C               	goto	l3364
  5608  001218  0EFF               	movlw	255
  5609  00121A  1A16               	xorwf	___ftadd@f2,f,c
  5610  00121C  0EFF               	movlw	255
  5611  00121E  1A17               	xorwf	___ftadd@f2+1,f,c
  5612  001220  0EFF               	movlw	255
  5613  001222  1A18               	xorwf	___ftadd@f2+2,f,c
  5614  001224  0E01               	movlw	1
  5615  001226  2616               	addwf	___ftadd@f2,f,c
  5616  001228  0E00               	movlw	0
  5617  00122A  2217               	addwfc	___ftadd@f2+1,f,c
  5618  00122C  0E00               	movlw	0
  5619  00122E  2218               	addwfc	___ftadd@f2+2,f,c
  5620  001230                     l3364:
  5621  001230  0E00               	movlw	0
  5622  001232  6E1C               	movwf	___ftadd@sign,c
  5623  001234  5013               	movf	___ftadd@f1,w,c
  5624  001236  2616               	addwf	___ftadd@f2,f,c
  5625  001238  5014               	movf	___ftadd@f1+1,w,c
  5626  00123A  2217               	addwfc	___ftadd@f2+1,f,c
  5627  00123C  5015               	movf	___ftadd@f1+2,w,c
  5628  00123E  2218               	addwfc	___ftadd@f2+2,f,c
  5629  001240  AE18               	btfss	___ftadd@f2+2,7,c
  5630  001242  D00E               	goto	l3374
  5631  001244  0EFF               	movlw	255
  5632  001246  1A16               	xorwf	___ftadd@f2,f,c
  5633  001248  0EFF               	movlw	255
  5634  00124A  1A17               	xorwf	___ftadd@f2+1,f,c
  5635  00124C  0EFF               	movlw	255
  5636  00124E  1A18               	xorwf	___ftadd@f2+2,f,c
  5637  001250  0E01               	movlw	1
  5638  001252  2616               	addwf	___ftadd@f2,f,c
  5639  001254  0E00               	movlw	0
  5640  001256  2217               	addwfc	___ftadd@f2+1,f,c
  5641  001258  0E00               	movlw	0
  5642  00125A  2218               	addwfc	___ftadd@f2+2,f,c
  5643  00125C  0E01               	movlw	1
  5644  00125E  6E1C               	movwf	___ftadd@sign,c
  5645  001260                     l3374:
  5646  001260  C016  F00B         	movff	___ftadd@f2,___ftpack@arg
  5647  001264  C017  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  5648  001268  C018  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  5649  00126C  C01E  F00E         	movff	___ftadd@exp1,___ftpack@exp
  5650  001270  C01C  F00F         	movff	___ftadd@sign,___ftpack@sign
  5651  001274  ECD4  F00B         	call	___ftpack	;wreg free
  5652  001278  C00B  F013         	movff	?___ftpack,?___ftadd
  5653  00127C  C00C  F014         	movff	?___ftpack+1,?___ftadd+1
  5654  001280  C00D  F015         	movff	?___ftpack+2,?___ftadd+2
  5655  001284  0012               	return		;funcret
  5656  001286                     __end_of___ftadd:
  5657                           	opt callstack 0
  5658                           
  5659 ;; *************** function ___ftmul *****************
  5660 ;; Defined at:
  5661 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  f1              3   18[COMRAM] float 
  5664 ;;  f2              3   21[COMRAM] float 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  5667 ;;  sign            1   32[COMRAM] unsigned char 
  5668 ;;  cntr            1   31[COMRAM] unsigned char 
  5669 ;;  exp             1   27[COMRAM] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  3   18[COMRAM] float 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5679 ;;      Params:         6       0       0       0       0       0       0       0       0
  5680 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5681 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5682 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5683 ;;Total ram usage:       15 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    6
  5686 ;; This function calls:
  5687 ;;		___ftpack
  5688 ;; This function is called by:
  5689 ;;		_disp_show_quantity
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text43
  5694  00152C                     __ptext43:
  5695                           	opt callstack 0
  5696  00152C                     ___ftmul:
  5697                           	opt callstack 23
  5698                           
  5699                           ;incstack = 0
  5700  00152C  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  5701  001530  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  5702  001532  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  5703  001534  3414               	rlcf	___ftmul@f1+1,w,c
  5704  001536  3619               	rlcf	??___ftmul& (0+255),f,c
  5705  001538  E301               	bnc	u4311
  5706  00153A  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  5707  00153C                     u4311:
  5708  00153C  5019               	movf	??___ftmul,w,c
  5709  00153E  6E1C               	movwf	___ftmul@exp,c
  5710  001540  501C               	movf	___ftmul@exp,w,c
  5711  001542  A4D8               	btfss	status,2,c
  5712  001544  D007               	goto	l3544
  5713  001546  0E00               	movlw	0
  5714  001548  6E13               	movwf	?___ftmul,c
  5715  00154A  0E00               	movlw	0
  5716  00154C  6E14               	movwf	?___ftmul+1,c
  5717  00154E  0E00               	movlw	0
  5718  001550  6E15               	movwf	?___ftmul+2,c
  5719  001552  0012               	return	
  5720  001554                     l3544:
  5721  001554  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  5722  001558  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  5723  00155A  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  5724  00155C  3417               	rlcf	___ftmul@f2+1,w,c
  5725  00155E  3619               	rlcf	??___ftmul& (0+255),f,c
  5726  001560  E301               	bnc	u4331
  5727  001562  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  5728  001564                     u4331:
  5729  001564  5019               	movf	??___ftmul,w,c
  5730  001566  6E21               	movwf	___ftmul@sign,c
  5731  001568  5021               	movf	___ftmul@sign,w,c
  5732  00156A  A4D8               	btfss	status,2,c
  5733  00156C  D007               	goto	l3550
  5734  00156E  0E00               	movlw	0
  5735  001570  6E13               	movwf	?___ftmul,c
  5736  001572  0E00               	movlw	0
  5737  001574  6E14               	movwf	?___ftmul+1,c
  5738  001576  0E00               	movlw	0
  5739  001578  6E15               	movwf	?___ftmul+2,c
  5740  00157A  0012               	return	
  5741  00157C                     l3550:
  5742  00157C  5021               	movf	___ftmul@sign,w,c
  5743  00157E  0F7B               	addlw	123
  5744  001580  261C               	addwf	___ftmul@exp,f,c
  5745  001582  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  5746  001586  5018               	movf	___ftmul@f2+2,w,c
  5747  001588  1A21               	xorwf	___ftmul@sign,f,c
  5748  00158A  0E80               	movlw	128
  5749  00158C  1621               	andwf	___ftmul@sign,f,c
  5750  00158E  8E14               	bsf	___ftmul@f1+1,7,c
  5751  001590  8E17               	bsf	___ftmul@f2+1,7,c
  5752  001592  0EFF               	movlw	255
  5753  001594  1616               	andwf	___ftmul@f2,f,c
  5754  001596  0EFF               	movlw	255
  5755  001598  1617               	andwf	___ftmul@f2+1,f,c
  5756  00159A  0E00               	movlw	0
  5757  00159C  1618               	andwf	___ftmul@f2+2,f,c
  5758  00159E  0E00               	movlw	0
  5759  0015A0  6E1D               	movwf	___ftmul@f3_as_product,c
  5760  0015A2  0E00               	movlw	0
  5761  0015A4  6E1E               	movwf	___ftmul@f3_as_product+1,c
  5762  0015A6  0E00               	movlw	0
  5763  0015A8  6E1F               	movwf	___ftmul@f3_as_product+2,c
  5764  0015AA  0E07               	movlw	7
  5765  0015AC  6E20               	movwf	___ftmul@cntr,c
  5766  0015AE                     l3564:
  5767  0015AE  A013               	btfss	___ftmul@f1,0,c
  5768  0015B0  D006               	goto	l3568
  5769  0015B2  5016               	movf	___ftmul@f2,w,c
  5770  0015B4  261D               	addwf	___ftmul@f3_as_product,f,c
  5771  0015B6  5017               	movf	___ftmul@f2+1,w,c
  5772  0015B8  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  5773  0015BA  5018               	movf	___ftmul@f2+2,w,c
  5774  0015BC  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  5775  0015BE                     l3568:
  5776  0015BE  90D8               	bcf	status,0,c
  5777  0015C0  3215               	rrcf	___ftmul@f1+2,f,c
  5778  0015C2  3214               	rrcf	___ftmul@f1+1,f,c
  5779  0015C4  3213               	rrcf	___ftmul@f1,f,c
  5780  0015C6  90D8               	bcf	status,0,c
  5781  0015C8  3616               	rlcf	___ftmul@f2,f,c
  5782  0015CA  3617               	rlcf	___ftmul@f2+1,f,c
  5783  0015CC  3618               	rlcf	___ftmul@f2+2,f,c
  5784  0015CE  2E20               	decfsz	___ftmul@cntr,f,c
  5785  0015D0  D7EE               	goto	l3564
  5786  0015D2  0E09               	movlw	9
  5787  0015D4  6E20               	movwf	___ftmul@cntr,c
  5788  0015D6                     l3574:
  5789  0015D6  A013               	btfss	___ftmul@f1,0,c
  5790  0015D8  D006               	goto	l3578
  5791  0015DA  5016               	movf	___ftmul@f2,w,c
  5792  0015DC  261D               	addwf	___ftmul@f3_as_product,f,c
  5793  0015DE  5017               	movf	___ftmul@f2+1,w,c
  5794  0015E0  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  5795  0015E2  5018               	movf	___ftmul@f2+2,w,c
  5796  0015E4  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  5797  0015E6                     l3578:
  5798  0015E6  90D8               	bcf	status,0,c
  5799  0015E8  3215               	rrcf	___ftmul@f1+2,f,c
  5800  0015EA  3214               	rrcf	___ftmul@f1+1,f,c
  5801  0015EC  3213               	rrcf	___ftmul@f1,f,c
  5802  0015EE  90D8               	bcf	status,0,c
  5803  0015F0  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  5804  0015F2  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  5805  0015F4  321D               	rrcf	___ftmul@f3_as_product,f,c
  5806  0015F6  2E20               	decfsz	___ftmul@cntr,f,c
  5807  0015F8  D7EE               	goto	l3574
  5808  0015FA  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  5809  0015FE  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5810  001602  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5811  001606  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  5812  00160A  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  5813  00160E  ECD4  F00B         	call	___ftpack	;wreg free
  5814  001612  C00B  F013         	movff	?___ftpack,?___ftmul
  5815  001616  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  5816  00161A  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  5817  00161E  0012               	return		;funcret
  5818  001620                     __end_of___ftmul:
  5819                           	opt callstack 0
  5820                           
  5821 ;; *************** function ___ftge *****************
  5822 ;; Defined at:
  5823 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  ff1             3   21[COMRAM] float 
  5826 ;;  ff2             3   24[COMRAM] float 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5838 ;;      Params:         6       0       0       0       0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5840 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5841 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5842 ;;Total ram usage:        9 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    5
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_ikey_parsing
  5849 ;;		_disp_show_quantity
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text44
  5854  001A0A                     __ptext44:
  5855                           	opt callstack 0
  5856  001A0A                     ___ftge:
  5857                           	opt callstack 23
  5858                           
  5859                           ;incstack = 0
  5860  001A0A  AE18               	btfss	___ftge@ff1+2,7,c
  5861  001A0C  D00F               	goto	l3382
  5862  001A0E  0E00               	movlw	0
  5863  001A10  6E1C               	movwf	??___ftge& (0+255),c
  5864  001A12  0E00               	movlw	0
  5865  001A14  6E1D               	movwf	(??___ftge+1)& (0+255),c
  5866  001A16  0E80               	movlw	128
  5867  001A18  6E1E               	movwf	(??___ftge+2)& (0+255),c
  5868  001A1A  5016               	movf	___ftge@ff1,w,c
  5869  001A1C  5C1C               	subwf	??___ftge,w,c
  5870  001A1E  6E16               	movwf	___ftge@ff1,c
  5871  001A20  5017               	movf	___ftge@ff1+1,w,c
  5872  001A22  581D               	subwfb	??___ftge+1,w,c
  5873  001A24  6E17               	movwf	___ftge@ff1+1,c
  5874  001A26  5018               	movf	___ftge@ff1+2,w,c
  5875  001A28  581E               	subwfb	??___ftge+2,w,c
  5876  001A2A  6E18               	movwf	___ftge@ff1+2,c
  5877  001A2C                     l3382:
  5878  001A2C  AE1B               	btfss	___ftge@ff2+2,7,c
  5879  001A2E  D00F               	goto	l3386
  5880  001A30  0E00               	movlw	0
  5881  001A32  6E1C               	movwf	??___ftge& (0+255),c
  5882  001A34  0E00               	movlw	0
  5883  001A36  6E1D               	movwf	(??___ftge+1)& (0+255),c
  5884  001A38  0E80               	movlw	128
  5885  001A3A  6E1E               	movwf	(??___ftge+2)& (0+255),c
  5886  001A3C  5019               	movf	___ftge@ff2,w,c
  5887  001A3E  5C1C               	subwf	??___ftge,w,c
  5888  001A40  6E19               	movwf	___ftge@ff2,c
  5889  001A42  501A               	movf	___ftge@ff2+1,w,c
  5890  001A44  581D               	subwfb	??___ftge+1,w,c
  5891  001A46  6E1A               	movwf	___ftge@ff2+1,c
  5892  001A48  501B               	movf	___ftge@ff2+2,w,c
  5893  001A4A  581E               	subwfb	??___ftge+2,w,c
  5894  001A4C  6E1B               	movwf	___ftge@ff2+2,c
  5895  001A4E                     l3386:
  5896  001A4E  0E00               	movlw	0
  5897  001A50  1A16               	xorwf	___ftge@ff1,f,c
  5898  001A52  0E00               	movlw	0
  5899  001A54  1A17               	xorwf	___ftge@ff1+1,f,c
  5900  001A56  0E80               	movlw	128
  5901  001A58  1A18               	xorwf	___ftge@ff1+2,f,c
  5902  001A5A  0E00               	movlw	0
  5903  001A5C  1A19               	xorwf	___ftge@ff2,f,c
  5904  001A5E  0E00               	movlw	0
  5905  001A60  1A1A               	xorwf	___ftge@ff2+1,f,c
  5906  001A62  0E80               	movlw	128
  5907  001A64  1A1B               	xorwf	___ftge@ff2+2,f,c
  5908  001A66  5019               	movf	___ftge@ff2,w,c
  5909  001A68  5C16               	subwf	___ftge@ff1,w,c
  5910  001A6A  501A               	movf	___ftge@ff2+1,w,c
  5911  001A6C  5817               	subwfb	___ftge@ff1+1,w,c
  5912  001A6E  501B               	movf	___ftge@ff2+2,w,c
  5913  001A70  5818               	subwfb	___ftge@ff1+2,w,c
  5914  001A72  B0D8               	btfsc	status,0,c
  5915  001A74  D002               	goto	l3392
  5916  001A76  90D8               	bcf	status,0,c
  5917  001A78  0012               	return	
  5918  001A7A                     l3392:
  5919  001A7A  80D8               	bsf	status,0,c
  5920  001A7C  0012               	return		;funcret
  5921  001A7E                     __end_of___ftge:
  5922                           	opt callstack 0
  5923                           
  5924 ;; *************** function ___awtoft *****************
  5925 ;; Defined at:
  5926 ;;		line 32 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awtoft.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  c               2   18[COMRAM] int 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  sign            1   21[COMRAM] unsigned char 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  3   18[COMRAM] float 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5940 ;;      Params:         3       0       0       0       0       0       0       0       0
  5941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5943 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5944 ;;Total ram usage:        4 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    6
  5947 ;; This function calls:
  5948 ;;		___ftpack
  5949 ;; This function is called by:
  5950 ;;		_disp_show_quantity
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text45
  5955  001E06                     __ptext45:
  5956                           	opt callstack 0
  5957  001E06                     ___awtoft:
  5958                           	opt callstack 23
  5959                           
  5960                           ;incstack = 0
  5961  001E06  0E00               	movlw	0
  5962  001E08  6E16               	movwf	___awtoft@sign,c
  5963  001E0A  AE14               	btfss	___awtoft@c+1,7,c
  5964  001E0C  D006               	goto	l3602
  5965  001E0E  6C13               	negf	___awtoft@c,c
  5966  001E10  1E14               	comf	___awtoft@c+1,f,c
  5967  001E12  B0D8               	btfsc	status,0,c
  5968  001E14  2A14               	incf	___awtoft@c+1,f,c
  5969  001E16  0E01               	movlw	1
  5970  001E18  6E16               	movwf	___awtoft@sign,c
  5971  001E1A                     l3602:
  5972  001E1A  C013  F00B         	movff	___awtoft@c,___ftpack@arg
  5973  001E1E  C014  F00C         	movff	___awtoft@c+1,___ftpack@arg+1
  5974  001E22  6A0D               	clrf	___ftpack@arg+2,c
  5975  001E24  0E8E               	movlw	142
  5976  001E26  6E0E               	movwf	___ftpack@exp,c
  5977  001E28  C016  F00F         	movff	___awtoft@sign,___ftpack@sign
  5978  001E2C  ECD4  F00B         	call	___ftpack	;wreg free
  5979  001E30  C00B  F013         	movff	?___ftpack,?___awtoft
  5980  001E34  C00C  F014         	movff	?___ftpack+1,?___awtoft+1
  5981  001E38  C00D  F015         	movff	?___ftpack+2,?___awtoft+2
  5982  001E3C  0012               	return		;funcret
  5983  001E3E                     __end_of___awtoft:
  5984                           	opt callstack 0
  5985                           
  5986 ;; *************** function ___ftpack *****************
  5987 ;; Defined at:
  5988 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  arg             3   10[COMRAM] unsigned um
  5991 ;;  exp             1   13[COMRAM] unsigned char 
  5992 ;;  sign            1   14[COMRAM] unsigned char 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  3   10[COMRAM] float 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6004 ;;      Params:         5       0       0       0       0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6006 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6007 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6008 ;;Total ram usage:        8 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    5
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		___awtoft
  6015 ;;		___ftadd
  6016 ;;		___ftmul
  6017 ;;		___lwtoft
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text46
  6022  0017A8                     __ptext46:
  6023                           	opt callstack 0
  6024  0017A8                     ___ftpack:
  6025                           	opt callstack 22
  6026                           
  6027                           ;incstack = 0
  6028  0017A8  500E               	movf	___ftpack@exp,w,c
  6029  0017AA  B4D8               	btfsc	status,2,c
  6030  0017AC  D005               	goto	u3540
  6031  0017AE  500B               	movf	___ftpack@arg,w,c
  6032  0017B0  100C               	iorwf	___ftpack@arg+1,w,c
  6033  0017B2  100D               	iorwf	___ftpack@arg+2,w,c
  6034  0017B4  A4D8               	btfss	status,2,c
  6035  0017B6  D00C               	goto	l3244
  6036  0017B8                     u3540:
  6037  0017B8  0E00               	movlw	0
  6038  0017BA  6E0B               	movwf	?___ftpack,c
  6039  0017BC  0E00               	movlw	0
  6040  0017BE  6E0C               	movwf	?___ftpack+1,c
  6041  0017C0  0E00               	movlw	0
  6042  0017C2  6E0D               	movwf	?___ftpack+2,c
  6043  0017C4  0012               	return	
  6044  0017C6                     l3242:
  6045  0017C6  2A0E               	incf	___ftpack@exp,f,c
  6046  0017C8  90D8               	bcf	status,0,c
  6047  0017CA  320D               	rrcf	___ftpack@arg+2,f,c
  6048  0017CC  320C               	rrcf	___ftpack@arg+1,f,c
  6049  0017CE  320B               	rrcf	___ftpack@arg,f,c
  6050  0017D0                     l3244:
  6051  0017D0  0E00               	movlw	0
  6052  0017D2  140B               	andwf	___ftpack@arg,w,c
  6053  0017D4  6E10               	movwf	??___ftpack& (0+255),c
  6054  0017D6  0E00               	movlw	0
  6055  0017D8  140C               	andwf	___ftpack@arg+1,w,c
  6056  0017DA  6E11               	movwf	(??___ftpack+1)& (0+255),c
  6057  0017DC  0EFE               	movlw	254
  6058  0017DE  140D               	andwf	___ftpack@arg+2,w,c
  6059  0017E0  6E12               	movwf	(??___ftpack+2)& (0+255),c
  6060  0017E2  5010               	movf	??___ftpack,w,c
  6061  0017E4  1011               	iorwf	??___ftpack+1,w,c
  6062  0017E6  1012               	iorwf	??___ftpack+2,w,c
  6063  0017E8  B4D8               	btfsc	status,2,c
  6064  0017EA  D00C               	goto	l3250
  6065  0017EC  D7EC               	goto	l3242
  6066  0017EE                     l3246:
  6067  0017EE  2A0E               	incf	___ftpack@exp,f,c
  6068  0017F0  0E01               	movlw	1
  6069  0017F2  260B               	addwf	___ftpack@arg,f,c
  6070  0017F4  0E00               	movlw	0
  6071  0017F6  220C               	addwfc	___ftpack@arg+1,f,c
  6072  0017F8  0E00               	movlw	0
  6073  0017FA  220D               	addwfc	___ftpack@arg+2,f,c
  6074  0017FC  90D8               	bcf	status,0,c
  6075  0017FE  320D               	rrcf	___ftpack@arg+2,f,c
  6076  001800  320C               	rrcf	___ftpack@arg+1,f,c
  6077  001802  320B               	rrcf	___ftpack@arg,f,c
  6078  001804                     l3250:
  6079  001804  0E00               	movlw	0
  6080  001806  140B               	andwf	___ftpack@arg,w,c
  6081  001808  6E10               	movwf	??___ftpack& (0+255),c
  6082  00180A  0E00               	movlw	0
  6083  00180C  140C               	andwf	___ftpack@arg+1,w,c
  6084  00180E  6E11               	movwf	(??___ftpack+1)& (0+255),c
  6085  001810  0EFF               	movlw	255
  6086  001812  140D               	andwf	___ftpack@arg+2,w,c
  6087  001814  6E12               	movwf	(??___ftpack+2)& (0+255),c
  6088  001816  5010               	movf	??___ftpack,w,c
  6089  001818  1011               	iorwf	??___ftpack+1,w,c
  6090  00181A  1012               	iorwf	??___ftpack+2,w,c
  6091  00181C  B4D8               	btfsc	status,2,c
  6092  00181E  D006               	goto	l3254
  6093  001820  D7E6               	goto	l3246
  6094  001822                     l3252:
  6095  001822  060E               	decf	___ftpack@exp,f,c
  6096  001824  90D8               	bcf	status,0,c
  6097  001826  360B               	rlcf	___ftpack@arg,f,c
  6098  001828  360C               	rlcf	___ftpack@arg+1,f,c
  6099  00182A  360D               	rlcf	___ftpack@arg+2,f,c
  6100  00182C                     l3254:
  6101  00182C  BE0C               	btfsc	___ftpack@arg+1,7,c
  6102  00182E  D003               	goto	u3580
  6103  001830  0E02               	movlw	2
  6104  001832  600E               	cpfslt	___ftpack@exp,c
  6105  001834  D7F6               	goto	l3252
  6106  001836                     u3580:
  6107  001836  A00E               	btfss	___ftpack@exp,0,c
  6108  001838  9E0C               	bcf	___ftpack@arg+1,7,c
  6109  00183A  90D8               	bcf	status,0,c
  6110  00183C  320E               	rrcf	___ftpack@exp,f,c
  6111  00183E  500E               	movf	___ftpack@exp,w,c
  6112  001840  120D               	iorwf	___ftpack@arg+2,f,c
  6113  001842  500F               	movf	___ftpack@sign,w,c
  6114  001844  A4D8               	btfss	status,2,c
  6115  001846  8E0D               	bsf	___ftpack@arg+2,7,c
  6116  001848  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  6117  00184C  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  6118  001850  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  6119  001854  0012               	return		;funcret
  6120  001856                     __end_of___ftpack:
  6121                           	opt callstack 0
  6122                           
  6123 ;; *************** function _INTERRUPCION *****************
  6124 ;; Defined at:
  6125 ;;		line 228 in file "main.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;		None
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      void 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6141 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6142 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6143 ;;Total ram usage:        6 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    4
  6146 ;; This function calls:
  6147 ;;		_mpap_job
  6148 ;; This function is called by:
  6149 ;;		Interrupt level 2
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           	psect	intcode
  6154  000008                     __pintcode:
  6155                           	opt callstack 0
  6156  000008                     _INTERRUPCION:
  6157                           	opt callstack 22
  6158                           
  6159                           ;incstack = 0
  6160  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6161  00000A  ED39  F00E         	call	int_func,f	;refresh shadow registers
  6162                           
  6163                           	psect	intcode_body
  6164  001C72                     __pintcode_body:
  6165                           	opt callstack 22
  6166  001C72                     int_func:
  6167                           	opt callstack 22
  6168  001C72  0006               	pop		; remove dummy address from shadow register refresh
  6169  001C74  CFFA F005          	movff	pclath,??_INTERRUPCION
  6170  001C78  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  6171  001C7C  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  6172  001C80  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  6173  001C84  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  6174  001C88  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  6175                           
  6176                           ;main.c: 230: if (TMR0IF)
  6177  001C8C  A4F2               	btfss	4082,2,c	;volatile
  6178  001C8E  D007               	goto	i2l165
  6179                           
  6180                           ;main.c: 231: {;main.c: 232: isr_flag.f1ms = 1;
  6181  001C90  8045               	bsf	_isr_flag,0,c	;volatile
  6182                           
  6183                           ;main.c: 233: mpap_job();
  6184  001C92  EC14  F00E         	call	_mpap_job	;wreg free
  6185                           
  6186                           ;main.c: 235: TMR0IF = 0;
  6187  001C96  94F2               	bcf	4082,2,c	;volatile
  6188                           
  6189                           ;main.c: 236: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  6190  001C98  68D7               	setf	4055,c	;volatile
  6191                           
  6192                           ;main.c: 237: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  6193  001C9A  0ED1               	movlw	209
  6194  001C9C  6ED6               	movwf	4054,c	;volatile
  6195  001C9E                     i2l165:
  6196  001C9E  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  6197  001CA2  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  6198  001CA6  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  6199  001CAA  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  6200  001CAE  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  6201  001CB2  C005  FFFA         	movff	??_INTERRUPCION,pclath
  6202  001CB6  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6203  001CB8  0011               	retfie		f
  6204  001CBA                     __end_of_INTERRUPCION:
  6205                           	opt callstack 0
  6206                           
  6207 ;; *************** function _mpap_job *****************
  6208 ;; Defined at:
  6209 ;;		line 191 in file "mpap.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  cod_ret         1    0        char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      char 
  6216 ;; Registers used:
  6217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6223 ;;      Params:         0       0       0       0       0       0       0       0       0
  6224 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6226 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6227 ;;Total ram usage:        1 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    3
  6230 ;; This function calls:
  6231 ;;		__mpap_off
  6232 ;;		_mpap_homming
  6233 ;;		_mpap_normal_mode
  6234 ;; This function is called by:
  6235 ;;		_INTERRUPCION
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text48
  6240  001C28                     __ptext48:
  6241                           	opt callstack 0
  6242  001C28                     _mpap_job:
  6243                           	opt callstack 22
  6244                           
  6245                           ;mpap.c: 193: int8_t cod_ret;;mpap.c: 195: if (mpap.mode == HOMMING_MODE)
  6246                           
  6247                           ;incstack = 0
  6248  001C28  0E02               	movlw	2
  6249  001C2A  183E               	xorwf	_mpap+7,w,c	;volatile
  6250  001C2C  A4D8               	btfss	status,2,c
  6251  001C2E  D003               	goto	i2l3122
  6252  001C30  EC71  F00D         	call	_mpap_homming	;wreg free
  6253  001C34  0012               	return	
  6254  001C36                     i2l3122:
  6255                           
  6256                           ;mpap.c: 198: else if (mpap.mode == NORMAL_MODE)
  6257  001C36  0E03               	movlw	3
  6258  001C38  183E               	xorwf	_mpap+7,w,c	;volatile
  6259  001C3A  A4D8               	btfss	status,2,c
  6260  001C3C  D003               	goto	i2l3126
  6261  001C3E  EC5D  F00E         	call	_mpap_normal_mode	;wreg free
  6262  001C42  0012               	return	
  6263  001C44                     i2l3126:
  6264                           
  6265                           ;mpap.c: 201: else if (mpap.mode == STALL_MODE)
  6266  001C44  043E               	decf	_mpap+7,w,c	;volatile
  6267  001C46  A4D8               	btfss	status,2,c
  6268  001C48  0012               	return	
  6269                           
  6270                           ;mpap.c: 202: {;mpap.c: 203: mpap.numSteps_tomove = 0x00;
  6271  001C4A  0E00               	movlw	0
  6272  001C4C  6E3C               	movwf	_mpap+5,c	;volatile
  6273  001C4E  0E00               	movlw	0
  6274  001C50  6E3B               	movwf	_mpap+4,c	;volatile
  6275                           
  6276                           ;mpap.c: 204: mpap_off();
  6277  001C52  D801               	call	i2u341_48
  6278  001C54  D00B               	goto	i2u341_49
  6279  001C56                     i2u341_48:
  6280  001C56  0005               	push	
  6281  001C58  0100               	movlb	0	; () banked
  6282  001C5A  6EFA               	movwf	pclath,c
  6283  001C5C  51D1               	movf	_mpap_off& (0+255),w,b
  6284  001C5E  6EFD               	movwf	tosl,c
  6285  001C60  51D2               	movf	(_mpap_off+1)& (0+255),w,b
  6286  001C62  6EFE               	movwf	tosh,c
  6287  001C64  50F8               	movf	tblptru,w,c
  6288  001C66  6EFF               	movwf	tosu,c
  6289  001C68  50FA               	movf	pclath,w,c
  6290  001C6A  0012               	return		;indir
  6291  001C6C                     i2u341_49:
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;mpap.c: 206: mpap.mode = IDLE_MODE;
  6295  001C6C  0E00               	movlw	0
  6296  001C6E  6E3E               	movwf	_mpap+7,c	;volatile
  6297  001C70  0012               	return	
  6298  001C72                     __end_of_mpap_job:
  6299                           	opt callstack 0
  6300                           
  6301 ;; *************** function _mpap_normal_mode *****************
  6302 ;; Defined at:
  6303 ;;		line 171 in file "mpap.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;		None
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;  cod_ret         1    1[COMRAM] char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  1    wreg      char 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6317 ;;      Params:         0       0       0       0       0       0       0       0       0
  6318 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6320 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6321 ;;Total ram usage:        1 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    2
  6324 ;; This function calls:
  6325 ;;		_mpap_do1step
  6326 ;; This function is called by:
  6327 ;;		_mpap_job
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text49
  6332  001CBA                     __ptext49:
  6333                           	opt callstack 0
  6334  001CBA                     _mpap_normal_mode:
  6335                           	opt callstack 22
  6336                           
  6337                           ;mpap.c: 173: int8_t cod_ret = 0;
  6338                           
  6339                           ;incstack = 0
  6340  001CBA  0E00               	movlw	0
  6341  001CBC  6E02               	movwf	mpap_normal_mode@cod_ret,c
  6342                           
  6343                           ;mpap.c: 174: if (mpap.numSteps_tomove!=0)
  6344  001CBE  503B               	movf	_mpap+4,w,c	;volatile
  6345  001CC0  103C               	iorwf	_mpap+5,w,c	;volatile
  6346  001CC2  B4D8               	btfsc	status,2,c
  6347  001CC4  D01C               	goto	i2l517
  6348                           
  6349                           ;mpap.c: 175: {;mpap.c: 176: mpap_do1step(mpap.KI);
  6350  001CC6  503D               	movf	_mpap+6,w,c	;volatile
  6351  001CC8  ECA2  F00E         	call	_mpap_do1step
  6352                           
  6353                           ;mpap.c: 178: mpap.counter_steps+= mpap.KI;
  6354  001CCC  503D               	movf	_mpap+6,w,c	;volatile
  6355  001CCE  2639               	addwf	_mpap+2,f,c	;volatile
  6356  001CD0  0E00               	movlw	0
  6357  001CD2  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6358  001CD4  0EFF               	movlw	255
  6359  001CD6  223A               	addwfc	_mpap+3,f,c	;volatile
  6360                           
  6361                           ;mpap.c: 180: mpap.numSteps_current+= mpap.KI;
  6362  001CD8  503D               	movf	_mpap+6,w,c	;volatile
  6363  001CDA  2637               	addwf	_mpap,f,c	;volatile
  6364  001CDC  0E00               	movlw	0
  6365  001CDE  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6366  001CE0  0EFF               	movlw	255
  6367  001CE2  2238               	addwfc	_mpap+1,f,c	;volatile
  6368                           
  6369                           ;mpap.c: 182: if ( mpap.counter_steps== mpap.numSteps_tomove)
  6370  001CE4  503B               	movf	_mpap+4,w,c	;volatile
  6371  001CE6  1839               	xorwf	_mpap+2,w,c	;volatile
  6372  001CE8  E10A               	bnz	i2l517
  6373  001CEA  503C               	movf	_mpap+5,w,c	;volatile
  6374  001CEC  183A               	xorwf	_mpap+3,w,c	;volatile
  6375  001CEE  A4D8               	btfss	status,2,c
  6376  001CF0  D006               	goto	i2l517
  6377                           
  6378                           ;mpap.c: 183: {;mpap.c: 184: mpap.numSteps_tomove = 0;
  6379  001CF2  0E00               	movlw	0
  6380  001CF4  6E3C               	movwf	_mpap+5,c	;volatile
  6381  001CF6  0E00               	movlw	0
  6382  001CF8  6E3B               	movwf	_mpap+4,c	;volatile
  6383                           
  6384                           ;mpap.c: 185: cod_ret = 1;
  6385  001CFA  0E01               	movlw	1
  6386  001CFC  6E02               	movwf	mpap_normal_mode@cod_ret,c
  6387  001CFE                     i2l517:
  6388                           
  6389                           ;mpap.c: 186: };mpap.c: 187: };mpap.c: 188: return cod_ret;
  6390  001CFE  5002               	movf	mpap_normal_mode@cod_ret,w,c
  6391  001D00  0012               	return		;funcret
  6392  001D02                     __end_of_mpap_normal_mode:
  6393                           	opt callstack 0
  6394                           
  6395 ;; *************** function _mpap_homming *****************
  6396 ;; Defined at:
  6397 ;;		line 148 in file "mpap.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;		None
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;  cod_ret         1    2[COMRAM] char 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      char 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0
  6412 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6413 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6414 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6415 ;;Total ram usage:        2 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    2
  6418 ;; This function calls:
  6419 ;;		_mpap_do1step
  6420 ;; This function is called by:
  6421 ;;		_mpap_job
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text50
  6426  001AE2                     __ptext50:
  6427                           	opt callstack 0
  6428  001AE2                     _mpap_homming:
  6429                           	opt callstack 22
  6430                           
  6431                           ;mpap.c: 150: int8_t cod_ret = 0;
  6432                           
  6433                           ;incstack = 0
  6434  001AE2  0E00               	movlw	0
  6435  001AE4  6E03               	movwf	mpap_homming@cod_ret,c
  6436                           
  6437                           ;mpap.c: 151: if (mpap.numSteps_tomove!=0)
  6438  001AE6  503B               	movf	_mpap+4,w,c	;volatile
  6439  001AE8  103C               	iorwf	_mpap+5,w,c	;volatile
  6440  001AEA  B4D8               	btfsc	status,2,c
  6441  001AEC  D024               	goto	i2l511
  6442                           
  6443                           ;mpap.c: 152: {;mpap.c: 153: mpap_do1step(mpap.KI);
  6444  001AEE  503D               	movf	_mpap+6,w,c	;volatile
  6445  001AF0  ECA2  F00E         	call	_mpap_do1step
  6446                           
  6447                           ;mpap.c: 155: mpap.counter_steps+= mpap.KI;
  6448  001AF4  503D               	movf	_mpap+6,w,c	;volatile
  6449  001AF6  2639               	addwf	_mpap+2,f,c	;volatile
  6450  001AF8  0E00               	movlw	0
  6451  001AFA  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6452  001AFC  0EFF               	movlw	255
  6453  001AFE  223A               	addwfc	_mpap+3,f,c	;volatile
  6454                           
  6455                           ;mpap.c: 157: if (((PORTE & (1<<1))>>1) == 0)
  6456  001B00  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  6457  001B04  90D8               	bcf	status,0,c
  6458  001B06  3202               	rrcf	??_mpap_homming,f,c
  6459  001B08  B002               	btfsc	??_mpap_homming,0,c
  6460  001B0A  D006               	goto	i2l2772
  6461                           
  6462                           ;mpap.c: 158: {;mpap.c: 159: mpap.numSteps_tomove = 0x0000;
  6463  001B0C  0E00               	movlw	0
  6464  001B0E  6E3C               	movwf	_mpap+5,c	;volatile
  6465  001B10  0E00               	movlw	0
  6466  001B12  6E3B               	movwf	_mpap+4,c	;volatile
  6467                           
  6468                           ;mpap.c: 160: cod_ret = 1;
  6469  001B14  0E01               	movlw	1
  6470  001B16  6E03               	movwf	mpap_homming@cod_ret,c
  6471  001B18                     i2l2772:
  6472                           
  6473                           ;mpap.c: 161: };mpap.c: 162: if ( mpap.counter_steps == mpap.numSteps_tomove)
  6474  001B18  503B               	movf	_mpap+4,w,c	;volatile
  6475  001B1A  1839               	xorwf	_mpap+2,w,c	;volatile
  6476  001B1C  E10C               	bnz	i2l511
  6477  001B1E  503C               	movf	_mpap+5,w,c	;volatile
  6478  001B20  183A               	xorwf	_mpap+3,w,c	;volatile
  6479  001B22  A4D8               	btfss	status,2,c
  6480  001B24  D008               	goto	i2l511
  6481                           
  6482                           ;mpap.c: 163: {;mpap.c: 164: mpap.numSteps_tomove = 0x0000;
  6483  001B26  0E00               	movlw	0
  6484  001B28  6E3C               	movwf	_mpap+5,c	;volatile
  6485  001B2A  0E00               	movlw	0
  6486  001B2C  6E3B               	movwf	_mpap+4,c	;volatile
  6487                           
  6488                           ;mpap.c: 165: cod_ret = 1;
  6489  001B2E  0E01               	movlw	1
  6490  001B30  6E03               	movwf	mpap_homming@cod_ret,c
  6491                           
  6492                           ;mpap.c: 166: pulsonic.errors.flag.mpap_home_sensor = 1;
  6493  001B32  0101               	movlb	1	; () banked
  6494  001B34  8175               	bsf	(_pulsonic+117)& (0+255),0,b
  6495  001B36                     i2l511:
  6496                           
  6497                           ;mpap.c: 167: };mpap.c: 168: };mpap.c: 169: return cod_ret;
  6498  001B36  5003               	movf	mpap_homming@cod_ret,w,c
  6499  001B38  0012               	return		;funcret
  6500  001B3A                     __end_of_mpap_homming:
  6501                           	opt callstack 0
  6502                           
  6503 ;; *************** function _mpap_do1step *****************
  6504 ;; Defined at:
  6505 ;;		line 128 in file "mpap.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  KI              1    wreg     char 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  KI              1    0[COMRAM] char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0
  6520 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6522 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6523 ;;Total ram usage:        1 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    1
  6526 ;; This function calls:
  6527 ;;		__mpap_step1
  6528 ;;		__mpap_step2
  6529 ;;		__mpap_step3
  6530 ;;		__mpap_step4
  6531 ;; This function is called by:
  6532 ;;		_mpap_homming
  6533 ;;		_mpap_normal_mode
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text51
  6538  001D44                     __ptext51:
  6539                           	opt callstack 0
  6540  001D44                     _mpap_do1step:
  6541                           	opt callstack 22
  6542                           
  6543                           ;incstack = 0
  6544                           ;mpap_do1step@KI stored from wreg
  6545  001D44  6E01               	movwf	mpap_do1step@KI,c
  6546                           
  6547                           ;mpap.c: 130: static int8_t i = -1;;mpap.c: 132: i= i + KI;
  6548  001D46  5046               	movf	mpap_do1step@i,w,c
  6549  001D48  2401               	addwf	mpap_do1step@KI,w,c
  6550  001D4A  6E46               	movwf	mpap_do1step@i,c
  6551                           
  6552                           ;mpap.c: 134: if (i>3){i=0;}
  6553  001D4C  5046               	movf	mpap_do1step@i,w,c
  6554  001D4E  0A80               	xorlw	128
  6555  001D50  0F7C               	addlw	-132
  6556  001D52  A0D8               	btfss	status,0,c
  6557  001D54  D002               	goto	i2l2430
  6558  001D56  0E00               	movlw	0
  6559  001D58  6E46               	movwf	mpap_do1step@i,c
  6560  001D5A                     i2l2430:
  6561                           
  6562                           ;mpap.c: 135: if (i<0){i=3;}
  6563  001D5A  AE46               	btfss	mpap_do1step@i,7,c
  6564  001D5C  D002               	goto	i2l2434
  6565  001D5E  0E03               	movlw	3
  6566  001D60  6E46               	movwf	mpap_do1step@i,c
  6567  001D62                     i2l2434:
  6568                           
  6569                           ;mpap.c: 137: mpap_step[i]();
  6570  001D62  5046               	movf	mpap_do1step@i,w,c
  6571  001D64  0D02               	mullw	2
  6572  001D66  50F3               	movf	prodl,w,c
  6573  001D68  0FC9               	addlw	low _mpap_step
  6574  001D6A  6ED9               	movwf	fsr2l,c
  6575  001D6C  6ADA               	clrf	fsr2h,c
  6576  001D6E  D801               	call	i2u198_48
  6577  001D70  0012               	return	
  6578  001D72                     i2u198_48:
  6579  001D72  0005               	push	
  6580  001D74  6EFA               	movwf	pclath,c
  6581  001D76  50DE               	movf	postinc2,w,c
  6582  001D78  6EFD               	movwf	tosl,c
  6583  001D7A  50DE               	movf	postinc2,w,c
  6584  001D7C  6EFE               	movwf	tosh,c
  6585  001D7E  50F8               	movf	tblptru,w,c
  6586  001D80  6EFF               	movwf	tosu,c
  6587  001D82  50FA               	movf	pclath,w,c
  6588  001D84  0012               	return		;indir
  6589  001D86                     __end_of_mpap_do1step:
  6590                           	opt callstack 0
  6591                           
  6592 ;; *************** function __mpap_step3 *****************
  6593 ;; Defined at:
  6594 ;;		line 51 in file "mpap.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6608 ;;      Params:         0       0       0       0       0       0       0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6611 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6612 ;;Total ram usage:        0 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_mpap_do1step
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text52
  6622  002020                     __ptext52:
  6623                           	opt callstack 0
  6624  002020                     __mpap_step3:
  6625                           	opt callstack 22
  6626                           
  6627                           ;mpap.c: 58: LATD = 0x02;
  6628                           
  6629                           ;incstack = 0
  6630  002020  0E02               	movlw	2
  6631  002022  6E8C               	movwf	3980,c	;volatile
  6632  002024  0012               	return		;funcret
  6633  002026                     __end_of__mpap_step3:
  6634                           	opt callstack 0
  6635                           
  6636 ;; *************** function __mpap_step2 *****************
  6637 ;; Defined at:
  6638 ;;		line 42 in file "mpap.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		wreg, status,2
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6652 ;;      Params:         0       0       0       0       0       0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6655 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6656 ;;Total ram usage:        0 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		_mpap_do1step
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text53
  6666  002026                     __ptext53:
  6667                           	opt callstack 0
  6668  002026                     __mpap_step2:
  6669                           	opt callstack 22
  6670                           
  6671                           ;mpap.c: 49: LATD = 0x04;
  6672                           
  6673                           ;incstack = 0
  6674  002026  0E04               	movlw	4
  6675  002028  6E8C               	movwf	3980,c	;volatile
  6676  00202A  0012               	return		;funcret
  6677  00202C                     __end_of__mpap_step2:
  6678                           	opt callstack 0
  6679                           
  6680 ;; *************** function __mpap_step1 *****************
  6681 ;; Defined at:
  6682 ;;		line 33 in file "mpap.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; This function calls:
  6703 ;;		Nothing
  6704 ;; This function is called by:
  6705 ;;		_mpap_do1step
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text54
  6710  00202C                     __ptext54:
  6711                           	opt callstack 0
  6712  00202C                     __mpap_step1:
  6713                           	opt callstack 22
  6714                           
  6715                           ;mpap.c: 40: LATD = 0x08;
  6716                           
  6717                           ;incstack = 0
  6718  00202C  0E08               	movlw	8
  6719  00202E  6E8C               	movwf	3980,c	;volatile
  6720  002030  0012               	return		;funcret
  6721  002032                     __end_of__mpap_step1:
  6722                           	opt callstack 0
  6723                           
  6724 ;; *************** function __mpap_step4 *****************
  6725 ;; Defined at:
  6726 ;;		line 60 in file "mpap.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;		None
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      void 
  6733 ;; Registers used:
  6734 ;;		wreg, status,2
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6743 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6744 ;;Total ram usage:        0 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_mpap_do1step
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text55
  6754  002032                     __ptext55:
  6755                           	opt callstack 0
  6756  002032                     __mpap_step4:
  6757                           	opt callstack 22
  6758                           
  6759                           ;mpap.c: 67: LATD = 0x01;
  6760                           
  6761                           ;incstack = 0
  6762  002032  0E01               	movlw	1
  6763  002034  6E8C               	movwf	3980,c	;volatile
  6764  002036  0012               	return		;funcret
  6765  002038                     __end_of__mpap_step4:
  6766                           	opt callstack 0
  6767                           
  6768 ;; *************** function __mpap_off *****************
  6769 ;; Defined at:
  6770 ;;		line 75 in file "mpap.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;		None
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 3F/0
  6781 ;;		On exit  : 3F/0
  6782 ;;		Unchanged: 3F/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6784 ;;      Params:         0       0       0       0       0       0       0       0       0
  6785 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6787 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6788 ;;Total ram usage:        0 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_mpap_job
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text56
  6798  001FFA                     __ptext56:
  6799                           	opt callstack 0
  6800  001FFA                     __mpap_off:
  6801                           	opt callstack 24
  6802                           
  6803                           ; BSR set to: 0
  6804                           
  6805                           ; BSR set to: 0
  6806                           
  6807                           ;incstack = 0
  6808                           ;mpap.c: 77: do{LATD &= ~(1<<0);}while(0);
  6809  001FFA  908C               	bcf	3980,0,c	;volatile
  6810                           
  6811                           ; BSR set to: 0
  6812                           
  6813                           ;mpap.c: 78: do{LATD &= ~(1<<1);}while(0);
  6814  001FFC  928C               	bcf	3980,1,c	;volatile
  6815                           
  6816                           ; BSR set to: 0
  6817                           
  6818                           ;mpap.c: 79: do{LATD &= ~(1<<2);}while(0);
  6819  001FFE  948C               	bcf	3980,2,c	;volatile
  6820                           
  6821                           ; BSR set to: 0
  6822                           
  6823                           ;mpap.c: 80: do{LATD &= ~(1<<3);}while(0);
  6824  002000  968C               	bcf	3980,3,c	;volatile
  6825                           
  6826                           ; BSR set to: 0
  6827  002002  0012               	return		;funcret
  6828  002004                     __end_of__mpap_off:
  6829                           	opt callstack 0
  6830                           
  6831                           	psect	text57
  6832  000000                     __ptext57:
  6833                           	opt callstack 0
  6834                           
  6835                           	psect	rparam
  6836  0000                     
  6837                           	psect	temp
  6838  000047                     btemp:
  6839                           	opt callstack 0
  6840  000047                     	ds	1
  6841  0000                     int$flags	set	btemp
  6842  0000                     wtemp8	set	btemp+1
  6843  0000                     ttemp5	set	btemp+1
  6844  0000                     ttemp6	set	btemp+4
  6845  0000                     ttemp7	set	btemp+8
  6846                           tosu	equ	0xFFF
  6847                           tosh	equ	0xFFE
  6848                           tosl	equ	0xFFD
  6849                           stkptr	equ	0xFFC
  6850                           pclatu	equ	0xFFB
  6851                           pclath	equ	0xFFA
  6852                           pcl	equ	0xFF9
  6853                           tblptru	equ	0xFF8
  6854                           tblptrh	equ	0xFF7
  6855                           tblptrl	equ	0xFF6
  6856                           tablat	equ	0xFF5
  6857                           prodh	equ	0xFF4
  6858                           prodl	equ	0xFF3
  6859                           indf0	equ	0xFEF
  6860                           postinc0	equ	0xFEE
  6861                           postdec0	equ	0xFED
  6862                           preinc0	equ	0xFEC
  6863                           plusw0	equ	0xFEB
  6864                           fsr0h	equ	0xFEA
  6865                           fsr0l	equ	0xFE9
  6866                           wreg	equ	0xFE8
  6867                           indf1	equ	0xFE7
  6868                           postinc1	equ	0xFE6
  6869                           postdec1	equ	0xFE5
  6870                           preinc1	equ	0xFE4
  6871                           plusw1	equ	0xFE3
  6872                           fsr1h	equ	0xFE2
  6873                           fsr1l	equ	0xFE1
  6874                           bsr	equ	0xFE0
  6875                           indf2	equ	0xFDF
  6876                           postinc2	equ	0xFDE
  6877                           postdec2	equ	0xFDD
  6878                           preinc2	equ	0xFDC
  6879                           plusw2	equ	0xFDB
  6880                           fsr2h	equ	0xFDA
  6881                           fsr2l	equ	0xFD9
  6882                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        31
    BSS         223
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      70
    BANK0           160     19     134
    BANK1           256      0     123
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    S300_multiplexedDisp$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    multiplexedDisp.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    S187_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S187_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 


Critical Paths under _main in COMRAM

    _main->_disp_show_quantity
    _nozzle_moveto->_mpap_setupToTurn
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _ikb_flush->_ikey_clear_all_flag
    _display7s_job->_multiplexedDisp_job
    _display7s_init->_multiplexedDisp_init
    _disp_show_quantity->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___awtoft->___ftpack

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _main->_disp_show_quantity

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29577
                                             52 COMRAM     2     2      0
                 _disp_show_quantity
                     _display7s_init
                      _display7s_job
                          _ikb_flush
                           _ikb_init
                            _ikb_job
              _ikb_key_is_ready2read
                _mpap_setupToHomming
                          _mpap_sych
                      _nozzle_moveto
                          _pump_tick
 ---------------------------------------------------------------------------------
 (1) _pump_tick                                            1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _nozzle_moveto                                        1     1      0    1001
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     737
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mpap_setupToHomming                                  0     0      0     242
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToTurn                                     4     2      2     242
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ikb_key_is_ready2read                                1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8700
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
                   _keyRead_pin_key5 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key5                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    8237
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3774
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_flush                                            0     0      0      68
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (2) _ikey_clear_all_flag                                  1     1      0      68
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display7s_job                                        0     0      0     134
                _multiplexedDisp_job
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_job                                  8     8      0     134
                                             10 COMRAM     8     8      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (1) _display7s_init                                       0     0      0      68
               _multiplexedDisp_init
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_init                                 1     1      0      68
                                             10 COMRAM     1     1      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disp_show_quantity                                  23    20      3   19053
                                             48 COMRAM     4     1      3
                                              0 BANK0     19    19      0
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     1      5    2226
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     621
                                             33 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5414
                                             30 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4998
                                             18 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4127
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1818
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3536
                                             18 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3313
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (6) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (7) _mpap_normal_mode                                     1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (7) _mpap_homming                                         2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (8) _mpap_do1step                                         1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (9) __mpap_step4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) __mpap_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disp_show_quantity
     ___awtoft
       ___ftpack
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _display7s_init
     _multiplexedDisp_init
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _display7s_job
     _multiplexedDisp_job
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
       _keyRead_pin_key5 *
   _ikb_key_is_ready2read
   _mpap_setupToHomming
     _mpap_setupToTurn
       ___wmul (ARG)
   _mpap_sych
   _nozzle_moveto
     ___wmul
     _mpap_setupToTurn
       ___wmul (ARG)
   _pump_tick

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7B       7       48.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      46       1       74.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      20        0.0%
DATA                 0      0     147       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 10 02:35:40 2019

          ??_mpap_setupToHomming 0015                               l79 1E6E  
            ___wmul@multiplicand 000D                      __CFG_BORV$3 000000  
                   ___ftadd@exp1 001E                     ___ftadd@exp2 001D  
                   ___ftadd@sign 001C                              l300 0DC2  
                            l118 149A                              l303 0E14  
                            l271 08F0                              l280 09F6  
                            l265 093A                              l282 0A3A  
                            l284 0A9C                              l294 0D58  
                            l286 0AE0                              l278 0994  
                            l288 0C2C                              l298 0D8C  
                            l492 1EBA                              l494 1EBE  
                            l879 1214                              _GIE 007F97  
                 ?_display7s_job 0001                     __CFG_BOR$OFF 000000  
                            _key 0060                              tosl 000FFD  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             l1028 1B82  
                           l1220 196E                             l1038 1D3A  
                           l3100 19DA                             l3110 19F6  
                           l2402 1C24                             l3304 1D30  
                           l3080 19A4                             l3250 1804  
                           l3242 17C6                             l3322 1156  
                           l3402 18FE                             l3252 1822  
                           l3244 17D0                             l3316 112E  
                           l3412 1930                             l2700 1F94  
                           l3084 19B0                             l3254 182C  
                           l3246 17EE                             l3094 19D0  
                           l3344 11A8                             l2712 1D8A  
                           l2560 128A                             l3096 19D2  
                           l3602 1E1A                             l3346 11B2  
                           l2730 18C4                             l3522 0E34  
                           l3506 0CDE                             l3450 0890  
                           l3364 1230                             l3356 11E6  
                           l3348 11BC                             l3612 164C  
                           l3276 1B50                             l3436 0812  
                           l3382 1A2C                             l3550 157C  
                           l3374 1260                             l3358 11F0  
                           l3630 16A0                             l3278 1B58  
                           l3534 1E8A                             l3702 0FFA  
                           l2726 185C                             l3454 08B0  
                           l2566 12C8                             l3392 1A7A  
                           l3544 1554                             l3640 16B8  
                           l3288 1B78                             l3296 1D10  
                           l3720 105E                             l3712 1044  
                           l3448 0880                             l2584 139A  
                           l2576 133A                             l3386 1A4E  
                           l3642 16C4                             l3634 16B0  
                           l3298 1D18                             l3458 08D0  
                           l2578 135A                             l3810 14C2  
                           l3564 15AE                             l3708 1030  
                           l2940 172A                             l3492 0B92  
                           l2596 141E                             l1964 1E52  
                           l3574 15D6                             l3590 1DDC  
                           l3734 1096                             l3822 14F8  
                           l3814 14D4                             l3568 15BE  
                           l3648 16E0                             l3744 10A6  
                           l3736 109C                             l3680 0FA2  
                           l3656 0E6A                             l3578 15E6  
                           l3666 0F2A                             l3498 0C1C  
                           l3818 14E6                             l3834 1520  
                           l3684 0FB6                             l3688 0FC2  
                           l3796 1492                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           u2320 132A                             _LATD 000F8C  
                           _LATE 000F8D                             u2318 1310  
                           u3230 1FC6                             u2319 1324  
                           u2348 137E                             u2349 1392  
                           u2278 12AC                             u3270 19A0  
                           u4311 153C                             u2279 12C0  
                           u4400 163A                             u4410 166A  
                           u4331 1564                             u3540 17B8  
                           u3620 1B5C                             u2804 1872  
                           u2388 13E4                             u2805 186C  
                           u2389 13F8                             u3710 1120  
                           u4510 0F9E                             u2814 188C  
                           u4415 1662                             u2815 1886  
                           u4520 0FB2                             u3810 11C4  
                           u4450 16CA                             u3650 1D1C  
                           u3580 1836                             u3740 1148  
                           u4550 102C                             u2838 18B0  
                           u3671 10EE                             u4391 1630  
                           u3840 11F8                             u4560 1040  
                           u2848 18D4                             u3681 1102  
                           u2849 18E8                             u3770 1186  
                           u2788 1D9A                             u4660 1504  
                           u2789 1DAE                             u4670 150E  
                           _UCFG 000F6F                             _UCON 000F6D  
                   __CFG_PWRT$ON 000000            _ikb_key_is_ready2read 1FAE  
                ?_display7s_init 0001      __size_of_disp_show_quantity 02A0  
                           _main 1426                     ___ftpack@arg 000B  
                           _itoa 1E72                             _mpap 0037  
                   ___ftpack@exp 000E                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0047                             _utoa 18F6  
                  _nozzle_moveto 1ED4                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
                  __CFG_IESO$OFF 000000              _multiplexedDisp0_on 2054  
            _multiplexedDisp1_on 204C              _multiplexedDisp2_on 2044  
            _multiplexedDisp3_on 203C              _multiplexedDisp4_on 205C  
                  __CFG_MCLRE$ON 000000                     ___ftmul@cntr 0020  
           __end_of_DISP7S_CHARS 080D                     ___param_bank 000000  
                   ___ftmul@sign 0021              _multiplexedDisp_job 1856  
                   ___fttol@exp1 0030                     ___fttol@lval 002C  
                  __CFG_PLLDIV$5 000000                            ?_main 0001  
                          ?_itoa 001A                  __end_of___ftadd 1286  
                          _CMCON 000FB4                            ?_utoa 0012  
                __end_of___ftmul 1620                            _T0CON 000FD5  
                __end_of___ftsub 1E06                  __end_of___fttol 16F2  
                __end_of___lwdiv 1B8C                  __end_of___lwmod 1D44  
                          i2l165 1C9E                            i2l511 1B36  
                          i2l517 1CFE                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
                  __CFG_USBDIV$2 000000                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
           ?_multiplexedDisp0_on 0001             ?_multiplexedDisp1_on 0001  
           ?_multiplexedDisp2_on 0001             ?_multiplexedDisp3_on 0001  
           ?_multiplexedDisp4_on 0001                   __CFG_FCMEN$OFF 000000  
                __end_of_ikb_job 1FE6             ?_multiplexedDisp_job 0001  
                  ___awtoft@sign 0016                    ?_INTERRUPCION 0001  
                  ___ftpack@sign 000F                            pclath 000FFA  
                          tablat 000FF5                            ttemp5 0048  
                          ttemp6 004B                            ttemp7 004F  
                          utoa@c 0019                            utoa@v 0017  
                          status 000FD8                   ?_nozzle_moveto 0001  
                          wtemp8 0048      __size_of_ikey_is_accessible 004C  
           _multiplexedDisp0_off 2058             _multiplexedDisp1_off 2050  
           _multiplexedDisp2_off 2048             _multiplexedDisp3_off 2040  
           _multiplexedDisp4_off 2038                    ?_ikey_parsing 0001  
           __size_of__mpap_step1 0006             __size_of__mpap_step2 0006  
           __size_of__mpap_step3 0006             __size_of__mpap_step4 0006  
                __initialization 1A7E                     __end_of_main 152C  
                   __end_of_itoa 1EA4             _multiplexedDisp_init 1D86  
                   __end_of_utoa 198A                  ??_display7s_job 0013  
                         ??_main 0035                    ___fttol@sign1 002B  
                         ??_itoa 001F                           ??_utoa 0017  
                  mpap_do1step@i 0046                    __activetblptr 000002  
          ??_multiplexedDisp0_on 000B            ??_multiplexedDisp1_on 000B  
          ??_multiplexedDisp2_on 000B            ??_multiplexedDisp3_on 000B  
          ??_multiplexedDisp4_on 000B            ??_multiplexedDisp_job 000B  
                 ??_INTERRUPCION 0005                           _ADCON1 000FC1  
       __end_of_keyRead_pin_key1 200C         __end_of_keyRead_pin_key2 1FFA  
       __end_of_keyRead_pin_key3 1FF0         __end_of_keyRead_pin_key4 201A  
       __end_of_keyRead_pin_key5 2014           ?_ikb_key_is_ready2read 0001  
               __end_of___awtoft 1E3E                 __end_of___ftpack 1856  
                         i2l3122 1C36                           i2l2430 1D5A  
                         i2l3126 1C44                           i2l2434 1D62  
                         i2l2772 1B18                 __end_of___lwtoft 1F72  
               pump_tick@cod_ret 000B                           _TMR0IE 007F95  
                         _TMR0IF 007F92            ?_multiplexedDisp0_off 0001  
          ?_multiplexedDisp1_off 0001            ?_multiplexedDisp2_off 0001  
          ?_multiplexedDisp3_off 0001            ?_multiplexedDisp4_off 0001  
                 ??_ikey_parsing 001F                   __CFG_VREGEN$ON 000000  
       __end_of_mpap_normal_mode 1D02                     pump_tick@sm0 0043  
               __end_of_ikb_init 17A8            ?_multiplexedDisp_init 0001  
                         ___ftge 1A0A                           ___wmul 1F02  
                      ??___ftadd 0019                        ??___ftmul 0019  
                      ??___ftsub 0025                        ??___fttol 0026  
                      ??___lwdiv 000F                        ??___lwmod 000F  
                         clear_0 1AB6                           clear_1 1AC2  
                         clear_2 1ACE                 __end_of_mpap_job 1C72  
                      ??_ikb_job 0024            ___ftmul@f3_as_product 001D  
       __end_of_mpap_setupToTurn 1ED4                     __pdataCOMRAM 0046  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
            ikey_is_accessible@k 000D                  ??_nozzle_moveto 0015  
   __size_of_ikey_clear_all_flag 001E                       __accesstop 0060  
        __end_of__initialization 1AD4                  __CFG_PBADEN$OFF 000000  
                  ?_mpap_do1step 0001                       ___ftadd@f1 0013  
                     ___ftadd@f2 0016                       ___ftge@ff1 0016  
                     ___ftge@ff2 0019                    ___rparam_used 000001  
                     ___awtoft@c 0013                       ___ftmul@f1 0013  
                     ___ftmul@f2 0016                       ___ftsub@f1 001F  
                     ___ftsub@f2 0022                       ___fttol@f1 0022  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1F72  
                  ?_mpap_homming 0001               __size_of__mpap_off 000A  
                     ___lwtoft@c 0013                 ??_display7s_init 000C  
                   _DISP7S_CHARS 080B               __size_of_ikb_flush 0006  
                 mpap_do1step@KI 0001                       __pbssBANK0 0060  
                     __pbssBANK1 0100                   ??_mpap_do1step 0001  
         ??_multiplexedDisp0_off 000B           ??_multiplexedDisp1_off 000B  
         ??_multiplexedDisp2_off 000B           ??_multiplexedDisp3_off 000B  
         ??_multiplexedDisp4_off 000B               __size_of_ikey_scan 01A0  
    __end_of_mpap_setupToHomming 1FDC           ??_multiplexedDisp_init 000B  
                 ??_mpap_homming 0002                          ?___ftge 0016  
           __end_of_INTERRUPCION 1CBA               __size_of_mpap_sych 0080  
                        ?___wmul 000B                        ?___awtoft 0013  
                      ?___ftpack 000B                        ?___lwtoft 0013  
           __end_of_ikey_parsing 0E3E               __size_of_pump_tick 0034  
     __end_of_disp_show_quantity 10DE                        ?_ikb_init 0001  
              __end_of__mpap_off 2004                   display7s_job@q 003F  
                      ?_mpap_job 0001                          __Hparam 0000  
                        __Lparam 0000                __end_of_ikb_flush 2020  
                __size_of___ftge 0074                          ___ftadd 10DE  
                __size_of___wmul 0026                          ___ftmul 152C  
                        ___ftsub 1DC6                          ___fttol 1620  
                        ___lwdiv 1B3A                          ___lwmod 1D02  
                   __psmallconst 0800                          __pcinit 1A7E  
                     ??___awtoft 0016                       ??___ftpack 0010  
                        __ramtop 0800                          __ptext0 1426  
                        __ptext1 1E3E                          __ptext2 1ED4  
                        __ptext3 1F02                          __ptext4 198A  
                        __ptext5 1FCA                          __ptext6 1EA4  
                        __ptext7 1FAE                          __ptext8 1FDC  
                        __ptext9 1286                __end_of_ikey_scan 1426  
                        _ikb_job 1FDC                       ??___lwtoft 0016  
                        _group_x 00B0          ??_ikb_key_is_ready2read 000B  
     disp_show_quantity@last_pos 00E2                __end_of_mpap_sych 1A0A  
        mpap_normal_mode@cod_ret 0002                       ??_ikb_init 000B  
                 __pintcode_body 1C72             end_of_initialization 1AD4  
     __end_of_ikey_is_accessible 1C28                ?_keyRead_pin_key1 0001  
              ?_keyRead_pin_key2 0001                ?_keyRead_pin_key3 0001  
              ?_keyRead_pin_key4 0001                ?_keyRead_pin_key5 0001  
                  ??__mpap_step1 0001                    ??__mpap_step2 0001  
                  ??__mpap_step3 0001                    ??__mpap_step4 0001  
                        itoa@buf 001A                          itoa@val 001B  
                  __Lmediumconst 0000                          int_func 1C72  
             ??_keyRead_pin_key1 000B               ??_keyRead_pin_key2 000B  
             ??_keyRead_pin_key3 000B               ??_keyRead_pin_key4 000B  
             ??_keyRead_pin_key5 000B                       ??_mpap_job 0004  
              ?_mpap_normal_mode 0001                  main@c_access_kb 0035  
                        postdec1 000FE5                          postdec2 000FDD  
             ??_mpap_normal_mode 0002                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
         ikb_key_is_ready2read@k 000B                __end_of_pump_tick 1E72  
                        utoa@buf 0012      __end_of_multiplexedDisp0_on 2058  
    __end_of_multiplexedDisp1_on 2050      __end_of_multiplexedDisp2_on 2048  
    __end_of_multiplexedDisp3_on 2040                          utoa@val 0013  
    __end_of_multiplexedDisp4_on 2060              _ikey_clear_all_flag 1F90  
    __end_of_multiplexedDisp_job 18F6             __end_of_mpap_do1step 1D86  
          __end_of_display7s_job 1F4E             ikey_clear_all_flag@i 000B  
              ?_mpap_setupToTurn 0011               ??_mpap_setupToTurn 0013  
           __end_of_mpap_homming 1B3A              nozzle_moveto@nozzle 0015  
           ?_ikey_clear_all_flag 0001            __size_of_INTERRUPCION 1CB2  
                    ___ftmul@exp 001C              __end_of__mpap_step1 2032  
            __end_of__mpap_step2 202C              __end_of__mpap_step3 2026  
            __end_of__mpap_step4 2038              __end_of_DISP7S_NUMS 080B  
                 __end_of___ftge 1A7E  mpap_setupToTurn@numSteps_tomove 0011  
          __size_of_ikey_parsing 0630                   __end_of___wmul 1F28  
                  __pidataCOMRAM 2060              start_initialization 1A7E  
                   _INTERRUPCION 0008            ??_ikey_clear_all_flag 000B  
                     ikey_scan@k 000C            __end_of_nozzle_moveto 1F02  
                   _ikey_parsing 080E           disp_show_quantity@buff 00D3  
                       ??___ftge 001C           disp_show_quantity@real 00DD  
                       ??___wmul 000F                      __pdataBANK0 00B5  
              __size_of___awtoft 0038                __size_of___ftpack 00AE  
                    __pbssCOMRAM 0037                __size_of___lwtoft 0024  
                  __pcstackBANK0 00D3                     mpap_sych@sm0 0041  
                  ikey_parsing@k 0023                __size_of_ikb_init 00B6  
                    __mpap_step1 202C                      __mpap_step2 2026  
                    __mpap_step3 2020                      __mpap_step4 2032  
                    _DISP7S_NUMS 0801    __size_of_multiplexedDisp0_off 0004  
  __size_of_multiplexedDisp1_off 0004    __size_of_multiplexedDisp2_off 0004  
  __size_of_multiplexedDisp3_off 0004    __size_of_multiplexedDisp4_off 0004  
                     mpap_sych@c 0040                        __mpap_off 1FFA  
               ___lwdiv@dividend 000B               _disp_show_quantity 0E3E  
              __size_of_mpap_job 004A                        __pintcode 0008  
  __size_of_multiplexedDisp_init 0040            __size_of_mpap_do1step 0042  
                       ?___ftadd 0013                         ?___ftmul 0013  
                       ?___ftsub 001F                         ?___fttol 0022  
                       ?___lwdiv 000B                         ?___lwmod 000B  
   __size_of_mpap_setupToHomming 0012              ?_disp_show_quantity 0031  
                      _ikb_flush 201A                         ?_ikb_job 0001  
                    __smallconst 0800            __size_of_mpap_homming 0058  
                _multiplexedDisp 00B5                        _main_flag 0044  
          multiplexedDisp_init@i 000B                        _ikey_scan 1286  
 __size_of_ikb_key_is_ready2read 001C                 ___lwdiv@quotient 0010  
  __end_of_ikb_key_is_ready2read 1FCA             ??_disp_show_quantity 0034  
                      _mpap_step 00C9                        _mpap_sych 198A  
                 ___wmul@product 000F                     _mpap_do1step 1D44  
        __size_of_display7s_init 0050                       ?__mpap_off 0001  
                       i2u341_48 1C56                         i2u341_49 1C6C  
                       i2u198_48 1D72               _ikey_is_accessible 1BDC  
                   _mpap_homming 1AE2        __size_of_keyRead_pin_key1 0008  
      __size_of_keyRead_pin_key2 000A        __size_of_keyRead_pin_key3 000A  
      __size_of_keyRead_pin_key4 0006        __size_of_keyRead_pin_key5 0008  
                     ?_ikb_flush 0001                ___wmul@multiplier 000B  
            ?_ikey_is_accessible 0001                        _pump_tick 1E3E  
                      ikb_init@i 000B        __size_of_mpap_normal_mode 0048  
                     ?_ikey_scan 0001                        copy_data0 1A92  
            mpap_homming@cod_ret 0003                       ?_mpap_sych 0001  
           ??_ikey_is_accessible 000B        __size_of_mpap_setupToTurn 0030  
                       __Hrparam 0000                       pump_tick@c 0042  
                       __Lrparam 0000            disp_show_quantity@num 00E0  
               __size_of___ftadd 01A8                 __size_of___ftmul 00F4  
               __size_of___ftsub 0040                 __size_of___fttol 00D2  
               __size_of___lwdiv 0052                 __size_of___lwmod 0042  
                       ___awtoft 1E06                         ___ftpack 17A8  
                     ?_pump_tick 0001                         ___lwtoft 1F4E  
               __size_of_ikb_job 000A     __size_of_multiplexedDisp0_on 0004  
   __size_of_multiplexedDisp1_on 0004     __size_of_multiplexedDisp2_on 0004  
   __size_of_multiplexedDisp3_on 0004     __size_of_multiplexedDisp4_on 0004  
                ___lwdiv@divisor 000D     __size_of_multiplexedDisp_job 00A0  
                ___lwdiv@counter 000F                         __ptext10 2014  
                       __ptext11 1FE6                         __ptext20 1F90  
                       __ptext12 1FF0                         __ptext21 1F28  
                       __ptext13 2004                         __ptext30 204C  
                       __ptext22 1856                         __ptext14 200C  
                       __ptext31 2050                         __ptext23 1B8C  
                       __ptext15 080E                         __ptext40 1620  
                       __ptext32 2054                         __ptext24 1D86  
                       __ptext16 1BDC                         __ptext41 1DC6  
                       __ptext33 2058                         __ptext25 2038  
                       __ptext17 1F4E                         __ptext50 1AE2  
                       __ptext42 10DE                         __ptext34 205C  
                       __ptext26 203C                         __ptext18 16F2  
                       __ptext51 1D44                         __ptext43 152C  
                       __ptext35 0E3E                         __ptext27 2040  
                       __ptext19 201A                         __ptext52 2020  
                       __ptext44 1A0A                         __ptext36 1E72  
                       __ptext28 2044                         __ptext53 2026  
                       __ptext45 1E06                         __ptext37 18F6  
                       __ptext29 2048                         __ptext54 202C  
                       __ptext46 17A8                         __ptext38 1D02  
                       __ptext55 2032                         __ptext39 1B3A  
                       __ptext56 1FFA                         __ptext48 1C28  
                       __ptext57 0000                         __ptext49 1CBA  
                       _ikb_init 16F2             _mpap_setupToTurn$418 0013  
           multiplexedDisp_job@i 0012             multiplexedDisp_job@q 0011  
                  __size_of_main 0106                    __size_of_itoa 0032  
                  __size_of_utoa 0094                         _isr_flag 0045  
                       _mpap_job 1C28                         _mpap_off 00D1  
                    ??__mpap_off 0001           __size_of_display7s_job 0026  
              main@c_access_disp 0036                         int$flags 0047  
                       _pulsonic 0100                      ??_ikb_flush 000C  
          __CFG_CPUDIV$OSC1_PLL2 000000      __end_of_ikey_clear_all_flag 1FAE  
                    ??_ikey_scan 000B                         itoa@base 001D  
                       intlevel2 0000              _mpap_setupToHomming 1FCA  
                    ??_mpap_sych 000B                 ___lwmod@dividend 000B  
                   ?__mpap_step1 0001                     ?__mpap_step2 0001  
                   ?__mpap_step3 0001                     ?__mpap_step4 0001  
                 _display7s_init 1B8C                 _keyRead_pin_key1 2004  
               _keyRead_pin_key2 1FF0                 _keyRead_pin_key3 1FE6  
               _keyRead_pin_key4 2014                 _keyRead_pin_key5 200C  
           ?_mpap_setupToHomming 0001              disp_show_quantity@I 00E3  
            disp_show_quantity@f 0031              disp_show_quantity@i 00E5  
            disp_show_quantity@q 00E1                         utoa@base 0015  
                    ??_pump_tick 000B     __end_of_multiplexedDisp0_off 205C  
   __end_of_multiplexedDisp1_off 2054     __end_of_multiplexedDisp2_off 204C  
   __end_of_multiplexedDisp3_off 2044     __end_of_multiplexedDisp4_off 203C  
         __size_of_nozzle_moveto 002E                  ___lwmod@divisor 000D  
               _mpap_normal_mode 1CBA                    _display7s_job 1F28  
                ___lwmod@counter 000F     __end_of_multiplexedDisp_init 1DC6  
             __CFG_FOSC$HSPLL_HS 000000           __end_of_display7s_init 1BDC  
               _mpap_setupToTurn 1EA4  
