

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul 11 17:35:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,keep,inline
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,keep,inline
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,keep,inline
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,keep,inline
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,keep,inline
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,keep,inline
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,keep,inline
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,keep,inline
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,keep,inline
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.05
    81                           ; Generated 20/12/2018 GMT
    82                           ; 
    83                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataCOMRAM
   116  00209E                     __pidataCOMRAM:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for mpap_do1step@i
   120  00209E  FF                 	db	255
   121                           
   122                           	psect	idataBANK0
   123  001F96                     __pidataBANK0:
   124                           	opt callstack 0
   125                           
   126                           ;initializer for _multiplexedDisp
   127  001F96  96                 	db	low _multiplexedDisp0_off
   128  001F97  20                 	db	high _multiplexedDisp0_off
   129  001F98  92                 	db	low _multiplexedDisp0_on
   130  001F99  20                 	db	high _multiplexedDisp0_on
   131  001F9A  8E                 	db	low _multiplexedDisp1_off
   132  001F9B  20                 	db	high _multiplexedDisp1_off
   133  001F9C  8A                 	db	low _multiplexedDisp1_on
   134  001F9D  20                 	db	high _multiplexedDisp1_on
   135  001F9E  86                 	db	low _multiplexedDisp2_off
   136  001F9F  20                 	db	high _multiplexedDisp2_off
   137  001FA0  82                 	db	low _multiplexedDisp2_on
   138  001FA1  20                 	db	high _multiplexedDisp2_on
   139  001FA2  7E                 	db	low _multiplexedDisp3_off
   140  001FA3  20                 	db	high _multiplexedDisp3_off
   141  001FA4  7A                 	db	low _multiplexedDisp3_on
   142  001FA5  20                 	db	high _multiplexedDisp3_on
   143  001FA6  76                 	db	low _multiplexedDisp4_off
   144  001FA7  20                 	db	high _multiplexedDisp4_off
   145  001FA8  9A                 	db	low _multiplexedDisp4_on
   146  001FA9  20                 	db	high _multiplexedDisp4_on
   147                           
   148                           ;initializer for _mpap_step
   149  001FAA  3C                 	db	low __mpap_step1
   150  001FAB  20                 	db	high __mpap_step1
   151  001FAC  32                 	db	low __mpap_step2
   152  001FAD  20                 	db	high __mpap_step2
   153  001FAE  28                 	db	low __mpap_step3
   154  001FAF  20                 	db	high __mpap_step3
   155  001FB0  46                 	db	low __mpap_step4
   156  001FB1  20                 	db	high __mpap_step4
   157                           
   158                           ;initializer for _mpap_off
   159  001FB2  50                 	db	low __mpap_off
   160  001FB3  20                 	db	high __mpap_off
   161                           
   162                           	psect	smallconst
   163  000800                     __psmallconst:
   164                           	opt callstack 0
   165  000800  00                 	db	0
   166  000801                     _DISP7S_NUMS:
   167                           	opt callstack 0
   168  000801  3F                 	db	63
   169  000802  06                 	db	6
   170  000803  5B                 	db	91
   171  000804  4F                 	db	79
   172  000805  66                 	db	102
   173  000806  6D                 	db	109
   174  000807  7C                 	db	124
   175  000808  07                 	db	7
   176  000809  7F                 	db	127
   177  00080A  67                 	db	103
   178  00080B                     __end_of_DISP7S_NUMS:
   179                           	opt callstack 0
   180  00080B                     _DISP7S_CHARS:
   181                           	opt callstack 0
   182  00080B  00                 	db	0
   183  00080C  40                 	db	64
   184  00080D                     __end_of_DISP7S_CHARS:
   185                           	opt callstack 0
   186  0000                     _PORTE	set	3972
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISA	set	3986
   189  0000                     _PORTD	set	3971
   190  0000                     _PORTC	set	3970
   191  0000                     _TRISC	set	3988
   192  0000                     _TRISD	set	3989
   193  0000                     _TRISE	set	3990
   194  0000                     _TMR0L	set	4054
   195  0000                     _TMR0H	set	4055
   196  0000                     _T0CON	set	4053
   197  0000                     _UCFG	set	3951
   198  0000                     _UCON	set	3949
   199  0000                     _CMCON	set	4020
   200  0000                     _ADCON1	set	4033
   201  0000                     _LATB	set	3978
   202  0000                     _LATE	set	3981
   203  0000                     _LATD	set	3980
   204  0000                     _LATC	set	3979
   205  0000                     _LATA	set	3977
   206  0000                     _TMR0IF	set	32658
   207  0000                     _GIE	set	32663
   208  0000                     _TMR0IE	set	32661
   209                           
   210                           ; #config settings
   211  00080D  00                 	db	0	; dummy byte at the end
   212  0000                     
   213                           	psect	cinit
   214  001A72                     __pcinit:
   215                           	opt callstack 0
   216  001A72                     start_initialization:
   217                           	opt callstack 0
   218  001A72                     __initialization:
   219                           	opt callstack 0
   220                           
   221                           ; Initialize objects allocated to BANK0 (30 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223  001A72  0E96               	movlw	low __pidataBANK0
   224  001A74  6EF6               	movwf	tblptrl,c
   225  001A76  0E1F               	movlw	high __pidataBANK0
   226  001A78  6EF7               	movwf	tblptrh,c
   227  001A7A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228  001A7C  6EF8               	movwf	tblptru,c
   229  001A7E  EE00  F0BF         	lfsr	0,__pdataBANK0
   230  001A82  EE10 F01E          	lfsr	1,30
   231  001A86                     copy_data0:
   232  001A86  0009               	tblrd		*+
   233  001A88  CFF5 FFEE          	movff	tablat,postinc0
   234  001A8C  50E5               	movf	postdec1,w,c
   235  001A8E  50E1               	movf	fsr1l,w,c
   236  001A90  E1FA               	bnz	copy_data0
   237                           
   238                           ; Initialize objects allocated to COMRAM (1 bytes)
   239                           ; load TBLPTR registers with __pidataCOMRAM
   240  001A92  0E9E               	movlw	low __pidataCOMRAM
   241  001A94  6EF6               	movwf	tblptrl,c
   242  001A96  0E20               	movlw	high __pidataCOMRAM
   243  001A98  6EF7               	movwf	tblptrh,c
   244  001A9A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   245  001A9C  6EF8               	movwf	tblptru,c
   246  001A9E  0009               	tblrd		*+	;fetch initializer
   247  001AA0  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   248                           
   249                           ; Clear objects allocated to BANK1 (123 bytes)
   250  001AA4  EE01  F000         	lfsr	0,__pbssBANK1
   251  001AA8  0E7B               	movlw	123
   252  001AAA                     clear_0:
   253  001AAA  6AEE               	clrf	postinc0,c
   254  001AAC  06E8               	decf	wreg,f,c
   255  001AAE  E1FD               	bnz	clear_0
   256                           
   257                           ; Clear objects allocated to BANK0 (95 bytes)
   258  001AB0  EE00  F060         	lfsr	0,__pbssBANK0
   259  001AB4  0E5F               	movlw	95
   260  001AB6                     clear_1:
   261  001AB6  6AEE               	clrf	postinc0,c
   262  001AB8  06E8               	decf	wreg,f,c
   263  001ABA  E1FD               	bnz	clear_1
   264                           
   265                           ; Clear objects allocated to COMRAM (20 bytes)
   266  001ABC  EE00  F037         	lfsr	0,__pbssCOMRAM
   267  001AC0  0E14               	movlw	20
   268  001AC2                     clear_2:
   269  001AC2  6AEE               	clrf	postinc0,c
   270  001AC4  06E8               	decf	wreg,f,c
   271  001AC6  E1FD               	bnz	clear_2
   272  001AC8                     end_of_initialization:
   273                           	opt callstack 0
   274  001AC8                     __end_of__initialization:
   275                           	opt callstack 0
   276  001AC8  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   277  001ACA  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   278  001ACC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   279  001ACE  6EF8               	movwf	tblptru,c
   280  001AD0  0100               	movlb	0
   281  001AD2  EF13  F00A         	goto	_main	;jump to C main() function
   282                           
   283                           	psect	bssCOMRAM
   284  000037                     __pbssCOMRAM:
   285                           	opt callstack 0
   286  000037                     _mpap:
   287                           	opt callstack 0
   288  000037                     	ds	8
   289  00003F                     _pump:
   290                           	opt callstack 0
   291  00003F                     	ds	3
   292  000042                     pump_job@c:
   293                           	opt callstack 0
   294  000042                     	ds	1
   295  000043                     mpap_sych@c:
   296                           	opt callstack 0
   297  000043                     	ds	1
   298  000044                     mpap_sych@sm0:
   299                           	opt callstack 0
   300  000044                     	ds	1
   301  000045                     display7s_job@q:
   302                           	opt callstack 0
   303  000045                     	ds	1
   304  000046                     _disp_owner:
   305                           	opt callstack 0
   306  000046                     	ds	1
   307  000047                     _machineState:
   308                           	opt callstack 0
   309  000047                     	ds	1
   310  000048                     _lock:
   311                           	opt callstack 0
   312  000048                     	ds	1
   313  000049                     _main_flag:
   314                           	opt callstack 0
   315  000049                     	ds	1
   316  00004A                     _isr_flag:
   317                           	opt callstack 0
   318  00004A                     	ds	1
   319                           
   320                           	psect	dataCOMRAM
   321  00004B                     __pdataCOMRAM:
   322                           	opt callstack 0
   323  00004B                     mpap_do1step@i:
   324                           	opt callstack 0
   325  00004B                     	ds	1
   326                           
   327                           	psect	bssBANK0
   328  000060                     __pbssBANK0:
   329                           	opt callstack 0
   330  000060                     _key:
   331                           	opt callstack 0
   332  000060                     	ds	80
   333  0000B0                     _group_x:
   334                           	opt callstack 0
   335  0000B0                     	ds	5
   336  0000B5                     	ds	2
   337  0000B7                     	ds	1
   338  0000B8                     	ds	1
   339  0000B9                     	ds	1
   340  0000BA                     	ds	1
   341  0000BB                     	ds	1
   342  0000BC                     	ds	1
   343  0000BD                     _error_grantedToWriteDisp:
   344                           	opt callstack 0
   345  0000BD                     	ds	1
   346  0000BE                     _error_requestToWriteDisp:
   347                           	opt callstack 0
   348  0000BE                     	ds	1
   349                           
   350                           	psect	dataBANK0
   351  0000BF                     __pdataBANK0:
   352                           	opt callstack 0
   353  0000BF                     _multiplexedDisp:
   354                           	opt callstack 0
   355  0000BF                     	ds	20
   356  0000D3                     _mpap_step:
   357                           	opt callstack 0
   358  0000D3                     	ds	8
   359  0000DB                     _mpap_off:
   360                           	opt callstack 0
   361  0000DB                     	ds	2
   362                           
   363                           	psect	bssBANK1
   364  000100                     __pbssBANK1:
   365                           	opt callstack 0
   366  000100                     _pulsonic:
   367                           	opt callstack 0
   368  000100                     	ds	123
   369                           
   370                           	psect	cstackBANK0
   371  0000DD                     __pcstackBANK0:
   372                           	opt callstack 0
   373  0000DD                     disp_show_quantity@buff:
   374                           	opt callstack 0
   375                           
   376                           ; 10 bytes @ 0x0
   377  0000DD                     	ds	10
   378  0000E7                     disp_show_quantity@real:
   379                           	opt callstack 0
   380                           
   381                           ; 3 bytes @ 0xA
   382  0000E7                     	ds	3
   383  0000EA                     disp_show_quantity@num:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0xD
   387  0000EA                     	ds	1
   388  0000EB                     disp_show_quantity@q:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0xE
   392  0000EB                     	ds	1
   393  0000EC                     disp_show_quantity@last_pos:
   394                           	opt callstack 0
   395                           
   396                           ; 1 bytes @ 0xF
   397  0000EC                     	ds	1
   398  0000ED                     disp_show_quantity@I:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x10
   402  0000ED                     	ds	2
   403  0000EF                     disp_show_quantity@i:
   404                           	opt callstack 0
   405                           
   406                           ; 1 bytes @ 0x12
   407  0000EF                     	ds	1
   408                           
   409                           	psect	cstackCOMRAM
   410  000001                     __pcstackCOMRAM:
   411                           	opt callstack 0
   412  000001                     mpap_do1step@KI:
   413                           	opt callstack 0
   414                           
   415                           ; 1 bytes @ 0x0
   416  000001                     	ds	1
   417  000002                     ??_mpap_homming:
   418  000002                     mpap_normal_mode@cod_ret:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x1
   422  000002                     	ds	1
   423  000003                     mpap_homming@cod_ret:
   424                           	opt callstack 0
   425                           
   426                           ; 1 bytes @ 0x2
   427  000003                     	ds	1
   428  000004                     
   429                           ; 1 bytes @ 0x3
   430  000004                     	ds	1
   431  000005                     ??_INTERRUPCION:
   432                           
   433                           ; 1 bytes @ 0x4
   434  000005                     	ds	6
   435  00000B                     ??_ikey_is_accessible:
   436  00000B                     ??_multiplexedDisp_job:
   437  00000B                     ?___wmul:
   438                           	opt callstack 0
   439  00000B                     ?___lwdiv:
   440                           	opt callstack 0
   441  00000B                     ?___lwmod:
   442                           	opt callstack 0
   443  00000B                     ?___ftpack:
   444                           	opt callstack 0
   445  00000B                     ikb_init@i:
   446                           	opt callstack 0
   447  00000B                     ikb_key_is_ready2read@k:
   448                           	opt callstack 0
   449  00000B                     ikey_clear_all_flag@i:
   450                           	opt callstack 0
   451  00000B                     multiplexedDisp_init@i:
   452                           	opt callstack 0
   453  00000B                     pump_setTick@ticks:
   454                           	opt callstack 0
   455  00000B                     ___wmul@multiplier:
   456                           	opt callstack 0
   457  00000B                     ___lwdiv@dividend:
   458                           	opt callstack 0
   459  00000B                     ___lwmod@dividend:
   460                           	opt callstack 0
   461  00000B                     ___ftpack@arg:
   462                           	opt callstack 0
   463                           
   464                           ; 3 bytes @ 0xA
   465  00000B                     	ds	1
   466  00000C                     ikey_scan@k:
   467                           	opt callstack 0
   468                           
   469                           ; 1 bytes @ 0xB
   470  00000C                     	ds	1
   471  00000D                     ikey_is_accessible@k:
   472                           	opt callstack 0
   473  00000D                     ___wmul@multiplicand:
   474                           	opt callstack 0
   475  00000D                     ___lwdiv@divisor:
   476                           	opt callstack 0
   477  00000D                     ___lwmod@divisor:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0xC
   481  00000D                     	ds	1
   482  00000E                     ___ftpack@exp:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0xD
   486  00000E                     	ds	1
   487  00000F                     ___ftpack@sign:
   488                           	opt callstack 0
   489  00000F                     ___lwdiv@counter:
   490                           	opt callstack 0
   491  00000F                     ___lwmod@counter:
   492                           	opt callstack 0
   493  00000F                     ___wmul@product:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0xE
   497  00000F                     	ds	1
   498  000010                     ??___ftpack:
   499  000010                     ___lwdiv@quotient:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0xF
   503  000010                     	ds	1
   504  000011                     multiplexedDisp_job@q:
   505                           	opt callstack 0
   506  000011                     mpap_setupToTurn@numSteps_tomove:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x10
   510  000011                     	ds	1
   511  000012                     multiplexedDisp_job@i:
   512                           	opt callstack 0
   513  000012                     utoa@buf:
   514                           	opt callstack 0
   515                           
   516                           ; 1 bytes @ 0x11
   517  000012                     	ds	1
   518  000013                     ?___ftadd:
   519                           	opt callstack 0
   520  000013                     ?___ftmul:
   521                           	opt callstack 0
   522  000013                     ?___awtoft:
   523                           	opt callstack 0
   524  000013                     ?___lwtoft:
   525                           	opt callstack 0
   526  000013                     _mpap_setupToTurn$518:
   527                           	opt callstack 0
   528  000013                     ___awtoft@c:
   529                           	opt callstack 0
   530  000013                     ___lwtoft@c:
   531                           	opt callstack 0
   532  000013                     utoa@val:
   533                           	opt callstack 0
   534  000013                     ___ftadd@f1:
   535                           	opt callstack 0
   536  000013                     ___ftmul@f1:
   537                           	opt callstack 0
   538                           
   539                           ; 3 bytes @ 0x12
   540  000013                     	ds	2
   541  000015                     nozzle_moveto@nozzle:
   542                           	opt callstack 0
   543  000015                     utoa@base:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x14
   547  000015                     	ds	1
   548  000016                     ___awtoft@sign:
   549                           	opt callstack 0
   550  000016                     ___ftadd@f2:
   551                           	opt callstack 0
   552  000016                     ___ftge@ff1:
   553                           	opt callstack 0
   554  000016                     ___ftmul@f2:
   555                           	opt callstack 0
   556                           
   557                           ; 3 bytes @ 0x15
   558  000016                     	ds	1
   559  000017                     utoa@v:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x16
   563  000017                     	ds	2
   564  000019                     ??___ftadd:
   565  000019                     ??___ftmul:
   566  000019                     utoa@c:
   567                           	opt callstack 0
   568  000019                     ___ftge@ff2:
   569                           	opt callstack 0
   570                           
   571                           ; 3 bytes @ 0x18
   572  000019                     	ds	1
   573  00001A                     itoa@buf:
   574                           	opt callstack 0
   575                           
   576                           ; 1 bytes @ 0x19
   577  00001A                     	ds	1
   578  00001B                     itoa@val:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x1A
   582  00001B                     	ds	1
   583  00001C                     ??___ftge:
   584  00001C                     ___ftadd@sign:
   585                           	opt callstack 0
   586  00001C                     ___ftmul@exp:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0x1B
   590  00001C                     	ds	1
   591  00001D                     ___ftadd@exp2:
   592                           	opt callstack 0
   593  00001D                     itoa@base:
   594                           	opt callstack 0
   595  00001D                     ___ftmul@f3_as_product:
   596                           	opt callstack 0
   597                           
   598                           ; 3 bytes @ 0x1C
   599  00001D                     	ds	1
   600  00001E                     ___ftadd@exp1:
   601                           	opt callstack 0
   602                           
   603                           ; 1 bytes @ 0x1D
   604  00001E                     	ds	1
   605  00001F                     ??_ikey_parsing:
   606  00001F                     ?___ftsub:
   607                           	opt callstack 0
   608  00001F                     ___ftsub@f1:
   609                           	opt callstack 0
   610                           
   611                           ; 3 bytes @ 0x1E
   612  00001F                     	ds	1
   613  000020                     ___ftmul@cntr:
   614                           	opt callstack 0
   615                           
   616                           ; 1 bytes @ 0x1F
   617  000020                     	ds	1
   618  000021                     ___ftmul@sign:
   619                           	opt callstack 0
   620                           
   621                           ; 1 bytes @ 0x20
   622  000021                     	ds	1
   623  000022                     ?___fttol:
   624                           	opt callstack 0
   625  000022                     ___ftsub@f2:
   626                           	opt callstack 0
   627  000022                     ___fttol@f1:
   628                           	opt callstack 0
   629                           
   630                           ; 3 bytes @ 0x21
   631  000022                     	ds	1
   632  000023                     ikey_parsing@k:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0x22
   636  000023                     	ds	1
   637  000024                     
   638                           ; 1 bytes @ 0x23
   639  000024                     	ds	1
   640  000025                     
   641                           ; 1 bytes @ 0x24
   642  000025                     	ds	1
   643  000026                     ??___fttol:
   644                           
   645                           ; 1 bytes @ 0x25
   646  000026                     	ds	5
   647  00002B                     ___fttol@sign1:
   648                           	opt callstack 0
   649                           
   650                           ; 1 bytes @ 0x2A
   651  00002B                     	ds	1
   652  00002C                     ___fttol@lval:
   653                           	opt callstack 0
   654                           
   655                           ; 4 bytes @ 0x2B
   656  00002C                     	ds	4
   657  000030                     ___fttol@exp1:
   658                           	opt callstack 0
   659                           
   660                           ; 1 bytes @ 0x2F
   661  000030                     	ds	1
   662  000031                     disp_show_quantity@f:
   663                           	opt callstack 0
   664                           
   665                           ; 3 bytes @ 0x30
   666  000031                     	ds	3
   667  000034                     ??_disp_show_quantity:
   668                           
   669                           ; 1 bytes @ 0x33
   670  000034                     	ds	1
   671  000035                     main@c_access_kb:
   672                           	opt callstack 0
   673                           
   674                           ; 1 bytes @ 0x34
   675  000035                     	ds	1
   676  000036                     main@c_access_disp:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x35
   680  000036                     	ds	1
   681                           
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 82 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  c_access_dis    1   53[COMRAM] char 
   692 ;;  c_access_kb     1   52[COMRAM] char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 3F/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   702 ;;      Params:         0       0       0       0       0       0       0       0       0
   703 ;;      Locals:         2       0       0       0       0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0
   705 ;;      Totals:         2       0       0       0       0       0       0       0       0
   706 ;;Total ram usage:        2 bytes
   707 ;; Hardware stack levels required when called:    9
   708 ;; This function calls:
   709 ;;		_disp_show_quantity
   710 ;;		_display7s_init
   711 ;;		_display7s_job
   712 ;;		_ikb_flush
   713 ;;		_ikb_init
   714 ;;		_ikb_job
   715 ;;		_ikb_key_is_ready2read
   716 ;;		_mpap_setupToHomming
   717 ;;		_mpap_sych
   718 ;;		_nozzle_moveto
   719 ;;		_pump_job
   720 ;;		_pump_setTick
   721 ;; This function is called by:
   722 ;;		Startup code after reset
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text0
   727  001426                     __ptext0:
   728                           	opt callstack 0
   729  001426                     _main:
   730                           	opt callstack 22
   731                           
   732                           ;main.c: 84: int8_t c_access_kb=0;
   733                           
   734                           ;incstack = 0
   735  001426  0E00               	movlw	0
   736  001428  6E35               	movwf	main@c_access_kb,c
   737                           
   738                           ;main.c: 85: int8_t c_access_disp=0;
   739  00142A  0E00               	movlw	0
   740  00142C  6E36               	movwf	main@c_access_disp,c
   741                           
   742                           ;main.c: 87: LATA = 0x00;
   743  00142E  0E00               	movlw	0
   744  001430  6E89               	movwf	3977,c	;volatile
   745                           
   746                           ;main.c: 88: LATC = 0x00;
   747  001432  0E00               	movlw	0
   748  001434  6E8B               	movwf	3979,c	;volatile
   749                           
   750                           ;main.c: 89: LATD = 0x00;
   751  001436  0E00               	movlw	0
   752  001438  6E8C               	movwf	3980,c	;volatile
   753                           
   754                           ;main.c: 90: LATE = 0x00;
   755  00143A  0E00               	movlw	0
   756  00143C  6E8D               	movwf	3981,c	;volatile
   757                           
   758                           ;main.c: 91: LATB = 0x00;
   759  00143E  0E00               	movlw	0
   760  001440  6E8A               	movwf	3978,c	;volatile
   761                           
   762                           ;main.c: 94: ADCON1 = 0x0F;
   763  001442  0E0F               	movlw	15
   764  001444  6EC1               	movwf	4033,c	;volatile
   765                           
   766                           ;main.c: 95: CMCON=0xCF;
   767  001446  0ECF               	movlw	207
   768  001448  6EB4               	movwf	4020,c	;volatile
   769                           
   770                           ;main.c: 98: UCON = 0;
   771  00144A  0E00               	movlw	0
   772  00144C  6E6D               	movwf	3949,c	;volatile
   773                           
   774                           ;main.c: 99: UCFG = 1<<3;
   775  00144E  0E08               	movlw	8
   776  001450  6E6F               	movwf	3951,c	;volatile
   777                           
   778                           ;main.c: 100: T0CON = 0B10000111;
   779  001452  0E87               	movlw	135
   780  001454  6ED5               	movwf	4053,c	;volatile
   781                           
   782                           ;main.c: 102: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
   783  001456  68D7               	setf	4055,c	;volatile
   784                           
   785                           ;main.c: 103: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
   786  001458  0ED1               	movlw	209
   787  00145A  6ED6               	movwf	4054,c	;volatile
   788                           
   789                           ;main.c: 104: TMR0IE = 1;
   790  00145C  8AF2               	bsf	4082,5,c	;volatile
   791  00145E  808D               	bsf	3981,0,c	;volatile
   792  001460  9096               	bcf	3990,0,c	;volatile
   793  001462  9095               	bcf	3989,0,c	;volatile
   794  001464  9295               	bcf	3989,1,c	;volatile
   795  001466  9495               	bcf	3989,2,c	;volatile
   796  001468  9695               	bcf	3989,3,c	;volatile
   797  00146A  928B               	bcf	3979,1,c	;volatile
   798  00146C  9294               	bcf	3988,1,c	;volatile
   799  00146E  8296               	bsf	3990,1,c	;volatile
   800  001470  8094               	bsf	3988,0,c	;volatile
   801  001472  8496               	bsf	3990,2,c	;volatile
   802                           
   803                           ;main.c: 122: display7s_init();
   804  001474  ECF2  F00D         	call	_display7s_init	;wreg free
   805                           
   806                           ;main.c: 123: ikb_init();
   807  001478  EC73  F00B         	call	_ikb_init	;wreg free
   808                           
   809                           ; BSR set to: 0
   810                           ;main.c: 125: disp_show_quantity(77.7);
   811  00147C  0E66               	movlw	102
   812  00147E  6E31               	movwf	disp_show_quantity@f,c
   813  001480  0E9B               	movlw	155
   814  001482  6E32               	movwf	disp_show_quantity@f+1,c
   815  001484  0E42               	movlw	66
   816  001486  6E33               	movwf	disp_show_quantity@f+2,c
   817  001488  EC1F  F007         	call	_disp_show_quantity	;wreg free
   818                           
   819                           ;main.c: 126: GIE = 1;
   820  00148C  8EF2               	bsf	4082,7,c	;volatile
   821                           
   822                           ;main.c: 128: mpap_setupToHomming();
   823  00148E  ECF7  F00F         	call	_mpap_setupToHomming	;wreg free
   824  001492                     l3927:
   825                           
   826                           ;main.c: 131: {;main.c: 132: if (isr_flag.f1ms)
   827  001492  A04A               	btfss	_isr_flag,0,c	;volatile
   828  001494  D002               	goto	l118
   829                           
   830                           ;main.c: 133: {;main.c: 134: isr_flag.f1ms = 0;
   831  001496  904A               	bcf	_isr_flag,0,c	;volatile
   832                           
   833                           ;main.c: 135: main_flag.f1ms = 1;
   834  001498  8049               	bsf	_main_flag,0,c	;volatile
   835  00149A                     l118:
   836                           
   837                           ;main.c: 136: };main.c: 138: if (main_flag.f1ms)
   838  00149A  A049               	btfss	_main_flag,0,c	;volatile
   839  00149C  D039               	goto	l3959
   840                           
   841                           ;main.c: 139: {;main.c: 140: if (++c_access_kb == 20)
   842  00149E  2A35               	incf	main@c_access_kb,f,c
   843  0014A0  0E14               	movlw	20
   844  0014A2  1835               	xorwf	main@c_access_kb,w,c
   845  0014A4  A4D8               	btfss	status,2,c
   846  0014A6  D02B               	goto	l3953
   847                           
   848                           ;main.c: 141: {;main.c: 142: c_access_kb = 0;
   849  0014A8  0E00               	movlw	0
   850  0014AA  6E35               	movwf	main@c_access_kb,c
   851                           
   852                           ;main.c: 144: ikb_job();
   853  0014AC  EC05  F010         	call	_ikb_job	;wreg free
   854                           
   855                           ;main.c: 145: if (ikb_key_is_ready2read(0))
   856  0014B0  0E00               	movlw	0
   857  0014B2  ECE9  F00F         	call	_ikb_key_is_ready2read
   858  0014B6  0900               	iorlw	0
   859  0014B8  B4D8               	btfsc	status,2,c
   860  0014BA  D003               	goto	l3941
   861                           
   862                           ; BSR set to: 0
   863                           ;main.c: 146: {;main.c: 147: nozzle_moveto(0);
   864  0014BC  0E00               	movlw	0
   865  0014BE  EC7C  F00F         	call	_nozzle_moveto
   866  0014C2                     l3941:
   867                           
   868                           ;main.c: 148: };main.c: 149: if (ikb_key_is_ready2read(1))
   869  0014C2  0E01               	movlw	1
   870  0014C4  ECE9  F00F         	call	_ikb_key_is_ready2read
   871  0014C8  0900               	iorlw	0
   872  0014CA  B4D8               	btfsc	status,2,c
   873  0014CC  D003               	goto	l3945
   874                           
   875                           ; BSR set to: 0
   876                           ;main.c: 150: {;main.c: 151: nozzle_moveto(1);
   877  0014CE  0E01               	movlw	1
   878  0014D0  EC7C  F00F         	call	_nozzle_moveto
   879  0014D4                     l3945:
   880                           
   881                           ;main.c: 152: };main.c: 153: if (ikb_key_is_ready2read(2))
   882  0014D4  0E02               	movlw	2
   883  0014D6  ECE9  F00F         	call	_ikb_key_is_ready2read
   884  0014DA  0900               	iorlw	0
   885  0014DC  B4D8               	btfsc	status,2,c
   886  0014DE  D003               	goto	l3949
   887                           
   888                           ; BSR set to: 0
   889                           ;main.c: 154: {;main.c: 155: nozzle_moveto(2);
   890  0014E0  0E02               	movlw	2
   891  0014E2  EC7C  F00F         	call	_nozzle_moveto
   892  0014E6                     l3949:
   893                           
   894                           ;main.c: 156: };main.c: 157: if (ikb_key_is_ready2read(3))
   895  0014E6  0E03               	movlw	3
   896  0014E8  ECE9  F00F         	call	_ikb_key_is_ready2read
   897  0014EC  0900               	iorlw	0
   898  0014EE  B4D8               	btfsc	status,2,c
   899  0014F0  D006               	goto	l3953
   900                           
   901                           ; BSR set to: 0
   902                           ;main.c: 158: {;main.c: 159: pump_setTick(3);
   903  0014F2  0E00               	movlw	0
   904  0014F4  6E0C               	movwf	pump_setTick@ticks+1,c
   905  0014F6  0E03               	movlw	3
   906  0014F8  6E0B               	movwf	pump_setTick@ticks,c
   907  0014FA  EC00  F010         	call	_pump_setTick	;wreg free
   908  0014FE                     l3953:
   909                           
   910                           ;main.c: 160: };main.c: 161: };main.c: 164: if (++c_access_disp == 2)
   911  0014FE  2A36               	incf	main@c_access_disp,f,c
   912  001500  0E02               	movlw	2
   913  001502  1836               	xorwf	main@c_access_disp,w,c
   914  001504  A4D8               	btfss	status,2,c
   915  001506  D004               	goto	l3959
   916                           
   917                           ;main.c: 165: {;main.c: 166: c_access_disp = 0;
   918  001508  0E00               	movlw	0
   919  00150A  6E36               	movwf	main@c_access_disp,c
   920                           
   921                           ;main.c: 167: display7s_job();
   922  00150C  ECA6  F00F         	call	_display7s_job	;wreg free
   923  001510                     l3959:
   924                           
   925                           ;main.c: 168: };main.c: 169: };main.c: 171: pump_job();
   926  001510  EC6B  F00D         	call	_pump_job	;wreg free
   927                           
   928                           ;main.c: 172: mpap_sych();
   929  001514  ECBF  F00C         	call	_mpap_sych	;wreg free
   930                           
   931                           ;main.c: 175: main_flag.f1ms = 0;
   932  001518  9049               	bcf	_main_flag,0,c	;volatile
   933                           
   934                           ;main.c: 176: ikb_flush();
   935  00151A  EC38  F010         	call	_ikb_flush	;wreg free
   936  00151E  D7B9               	goto	l3927
   937  001520                     __end_of_main:
   938                           	opt callstack 0
   939                           
   940 ;; *************** function _pump_setTick *****************
   941 ;; Defined at:
   942 ;;		line 7 in file "pump.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  ticks           2   10[COMRAM] unsigned int 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		None
   951 ;; Tracked objects:
   952 ;;		On entry : 3F/0
   953 ;;		On exit  : 3F/0
   954 ;;		Unchanged: 3F/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   956 ;;      Params:         2       0       0       0       0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0       0
   959 ;;      Totals:         2       0       0       0       0       0       0       0       0
   960 ;;Total ram usage:        2 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    5
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           	psect	text1
   971  002000                     __ptext1:
   972                           	opt callstack 0
   973  002000                     _pump_setTick:
   974                           	opt callstack 25
   975                           
   976                           ; BSR set to: 0
   977                           ;pump.c: 9: pump.ticks = ticks;
   978                           
   979                           ; BSR set to: 0
   980                           ;incstack = 0
   981  002000  C00B  F03F         	movff	pump_setTick@ticks,_pump
   982  002004  C00C  F040         	movff	pump_setTick@ticks+1,_pump+1
   983                           
   984                           ; BSR set to: 0
   985  002008  0012               	return		;funcret
   986  00200A                     __end_of_pump_setTick:
   987                           	opt callstack 0
   988                           
   989 ;; *************** function _pump_job *****************
   990 ;; Defined at:
   991 ;;		line 17 in file "pump.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  cod_ret         1    0        char 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      char 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1005 ;;      Params:         0       0       0       0       0       0       0       0       0
  1006 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1008 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1009 ;;Total ram usage:        1 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    5
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text2
  1020  001AD6                     __ptext2:
  1021                           	opt callstack 0
  1022  001AD6                     _pump_job:
  1023                           	opt callstack 25
  1024                           
  1025                           ;pump.c: 20: static int8_t c;;pump.c: 22: if (pump.ticks > 0)
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;incstack = 0
  1029  001AD6  503F               	movf	_pump,w,c
  1030  001AD8  1040               	iorwf	_pump+1,w,c
  1031  001ADA  B4D8               	btfsc	status,2,c
  1032  001ADC  0012               	return	
  1033                           
  1034                           ;pump.c: 23: {;pump.c: 24: if (pump.sm0 == 0)
  1035  001ADE  5041               	movf	_pump+2,w,c
  1036  001AE0  A4D8               	btfss	status,2,c
  1037  001AE2  D005               	goto	l2239
  1038  001AE4  908D               	bcf	3981,0,c	;volatile
  1039                           
  1040                           ;pump.c: 27: c = 0x0;
  1041  001AE6  0E00               	movlw	0
  1042  001AE8  6E42               	movwf	pump_job@c,c
  1043                           
  1044                           ;pump.c: 28: pump.sm0++;
  1045  001AEA  2A41               	incf	_pump+2,f,c
  1046                           
  1047                           ;pump.c: 29: }
  1048  001AEC  0012               	return	
  1049  001AEE                     l2239:
  1050                           
  1051                           ;pump.c: 30: else if (pump.sm0 == 1)
  1052  001AEE  0441               	decf	_pump+2,w,c
  1053  001AF0  A4D8               	btfss	status,2,c
  1054  001AF2  D00C               	goto	l2251
  1055                           
  1056                           ;pump.c: 31: {;pump.c: 32: if (main_flag.f1ms)
  1057  001AF4  A049               	btfss	_main_flag,0,c	;volatile
  1058  001AF6  0012               	return	
  1059                           
  1060                           ;pump.c: 33: {;pump.c: 34: if (++c == 50)
  1061  001AF8  2A42               	incf	pump_job@c,f,c
  1062  001AFA  0E32               	movlw	50
  1063  001AFC  1842               	xorwf	pump_job@c,w,c
  1064  001AFE  A4D8               	btfss	status,2,c
  1065  001B00  0012               	return	
  1066                           
  1067                           ;pump.c: 35: {;pump.c: 36: c=0x00;
  1068  001B02  0E00               	movlw	0
  1069  001B04  6E42               	movwf	pump_job@c,c
  1070                           
  1071                           ;pump.c: 37: pump.sm0++;
  1072  001B06  2A41               	incf	_pump+2,f,c
  1073  001B08  808D               	bsf	3981,0,c	;volatile
  1074                           
  1075                           ;pump.c: 39: };pump.c: 40: };pump.c: 41: }
  1076  001B0A  0012               	return	
  1077  001B0C                     l2251:
  1078                           
  1079                           ;pump.c: 42: else if (pump.sm0 == 2)
  1080  001B0C  0E02               	movlw	2
  1081  001B0E  1841               	xorwf	_pump+2,w,c
  1082  001B10  A4D8               	btfss	status,2,c
  1083  001B12  0012               	return	
  1084                           
  1085                           ;pump.c: 43: {;pump.c: 44: if (main_flag.f1ms)
  1086  001B14  A049               	btfss	_main_flag,0,c	;volatile
  1087  001B16  0012               	return	
  1088                           
  1089                           ;pump.c: 45: {;pump.c: 46: if (++c == 50)
  1090  001B18  2A42               	incf	pump_job@c,f,c
  1091  001B1A  0E32               	movlw	50
  1092  001B1C  1842               	xorwf	pump_job@c,w,c
  1093  001B1E  A4D8               	btfss	status,2,c
  1094  001B20  0012               	return	
  1095                           
  1096                           ;pump.c: 47: {;pump.c: 48: c=0x00;
  1097  001B22  0E00               	movlw	0
  1098  001B24  6E42               	movwf	pump_job@c,c
  1099                           
  1100                           ;pump.c: 49: pump.sm0 = 0x00;
  1101  001B26  0E00               	movlw	0
  1102  001B28  6E41               	movwf	_pump+2,c
  1103                           
  1104                           ;pump.c: 51: if (--pump.ticks == 0)
  1105  001B2A  063F               	decf	_pump,f,c
  1106  001B2C  A0D8               	btfss	status,0,c
  1107  001B2E  0640               	decf	_pump+1,f,c
  1108  001B30  503F               	movf	_pump,w,c
  1109  001B32  1040               	iorwf	_pump+1,w,c
  1110  001B34  B4D8               	btfsc	status,2,c
  1111  001B36  0012               	return	
  1112  001B38  0012               	return	
  1113  001B3A                     __end_of_pump_job:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _nozzle_moveto *****************
  1117 ;; Defined at:
  1118 ;;		line 76 in file "mpap.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  nozzle          1    wreg     char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  nozzle          1   20[COMRAM] char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 3F/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1135 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1136 ;;Total ram usage:        1 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    6
  1139 ;; This function calls:
  1140 ;;		___wmul
  1141 ;;		_mpap_setupToTurn
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text3
  1148  001EF8                     __ptext3:
  1149                           	opt callstack 0
  1150  001EF8                     _nozzle_moveto:
  1151                           	opt callstack 24
  1152                           
  1153                           ;incstack = 0
  1154                           ;nozzle_moveto@nozzle stored from wreg
  1155  001EF8  6E15               	movwf	nozzle_moveto@nozzle,c
  1156                           
  1157                           ;mpap.c: 79: mpap_setupToTurn( (nozzle*200) - mpap.numSteps_current);
  1158  001EFA  5015               	movf	nozzle_moveto@nozzle,w,c
  1159  001EFC  6E0B               	movwf	___wmul@multiplier,c
  1160  001EFE  6A0C               	clrf	___wmul@multiplier+1,c
  1161  001F00  BE0B               	btfsc	___wmul@multiplier,7,c
  1162  001F02  060C               	decf	___wmul@multiplier+1,f,c
  1163  001F04  0E00               	movlw	0
  1164  001F06  6E0E               	movwf	___wmul@multiplicand+1,c
  1165  001F08  0EC8               	movlw	200
  1166  001F0A  6E0D               	movwf	___wmul@multiplicand,c
  1167  001F0C  EC93  F00F         	call	___wmul	;wreg free
  1168  001F10  5037               	movf	_mpap,w,c	;volatile
  1169  001F12  5C0B               	subwf	?___wmul,w,c
  1170  001F14  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1171  001F16  5038               	movf	_mpap+1,w,c	;volatile
  1172  001F18  580C               	subwfb	?___wmul+1,w,c
  1173  001F1A  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1174  001F1C  EC64  F00F         	call	_mpap_setupToTurn	;wreg free
  1175                           
  1176                           ;mpap.c: 81: mpap.mode = NORMAL_MODE;
  1177  001F20  0E03               	movlw	3
  1178  001F22  6E3E               	movwf	_mpap+7,c	;volatile
  1179  001F24  0012               	return		;funcret
  1180  001F26                     __end_of_nozzle_moveto:
  1181                           	opt callstack 0
  1182                           
  1183 ;; *************** function ___wmul *****************
  1184 ;; Defined at:
  1185 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  multiplier      2   10[COMRAM] unsigned int 
  1188 ;;  multiplicand    2   12[COMRAM] unsigned int 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  product         2   14[COMRAM] unsigned int 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  2   10[COMRAM] unsigned int 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, prodl, prodh
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1200 ;;      Params:         4       0       0       0       0       0       0       0       0
  1201 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1203 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1204 ;;Total ram usage:        6 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    5
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_nozzle_moveto
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text4
  1215  001F26                     __ptext4:
  1216                           	opt callstack 0
  1217  001F26                     ___wmul:
  1218                           	opt callstack 24
  1219                           
  1220                           ;incstack = 0
  1221  001F26  500B               	movf	___wmul@multiplier,w,c
  1222  001F28  020D               	mulwf	___wmul@multiplicand,c
  1223  001F2A  CFF3 F00F          	movff	prodl,___wmul@product
  1224  001F2E  CFF4 F010          	movff	prodh,___wmul@product+1
  1225  001F32  500B               	movf	___wmul@multiplier,w,c
  1226  001F34  020E               	mulwf	___wmul@multiplicand+1,c
  1227  001F36  50F3               	movf	prodl,w,c
  1228  001F38  2610               	addwf	___wmul@product+1,f,c
  1229  001F3A  500C               	movf	___wmul@multiplier+1,w,c
  1230  001F3C  020D               	mulwf	___wmul@multiplicand,c
  1231  001F3E  50F3               	movf	prodl,w,c
  1232  001F40  2610               	addwf	___wmul@product+1,f,c
  1233  001F42  C00F  F00B         	movff	___wmul@product,?___wmul
  1234  001F46  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  1235  001F4A  0012               	return		;funcret
  1236  001F4C                     __end_of___wmul:
  1237                           	opt callstack 0
  1238                           
  1239 ;; *************** function _mpap_sych *****************
  1240 ;; Defined at:
  1241 ;;		line 171 in file "mpap.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1258 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    5
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text5
  1270  00197E                     __ptext5:
  1271                           	opt callstack 0
  1272  00197E                     _mpap_sych:
  1273                           	opt callstack 25
  1274                           
  1275                           ;mpap.c: 173: static int8_t sm0;;mpap.c: 174: static int8_t c;;mpap.c: 175: if (sm0 == 0
      +                          )
  1276                           
  1277                           ;incstack = 0
  1278  00197E  5044               	movf	mpap_sych@sm0,w,c
  1279  001980  A4D8               	btfss	status,2,c
  1280  001982  D010               	goto	l3219
  1281                           
  1282                           ;mpap.c: 176: {;mpap.c: 177: if ((mpap.mode == NORMAL_MODE) || (mpap.mode == HOMMING_MOD
      +                          E))
  1283  001984  0E03               	movlw	3
  1284  001986  183E               	xorwf	_mpap+7,w,c	;volatile
  1285  001988  B4D8               	btfsc	status,2,c
  1286  00198A  D004               	goto	u3300
  1287  00198C  0E02               	movlw	2
  1288  00198E  183E               	xorwf	_mpap+7,w,c	;volatile
  1289  001990  A4D8               	btfss	status,2,c
  1290  001992  D002               	goto	l3215
  1291  001994                     u3300:
  1292                           
  1293                           ;mpap.c: 178: {;mpap.c: 179: sm0++;
  1294  001994  2A44               	incf	mpap_sych@sm0,f,c
  1295                           
  1296                           ;mpap.c: 180: }
  1297  001996  0012               	return	
  1298  001998                     l3215:
  1299                           
  1300                           ;mpap.c: 181: else if (mpap.mode == STALL_MODE)
  1301  001998  043E               	decf	_mpap+7,w,c	;volatile
  1302  00199A  A4D8               	btfss	status,2,c
  1303  00199C  0012               	return	
  1304                           
  1305                           ;mpap.c: 182: {;mpap.c: 183: sm0 = 2;
  1306  00199E  0E02               	movlw	2
  1307  0019A0  6E44               	movwf	mpap_sych@sm0,c
  1308  0019A2  0012               	return	
  1309  0019A4                     l3219:
  1310                           
  1311                           ;mpap.c: 186: else if (sm0 == 1)
  1312  0019A4  0444               	decf	mpap_sych@sm0,w,c
  1313  0019A6  A4D8               	btfss	status,2,c
  1314  0019A8  D012               	goto	l3235
  1315                           
  1316                           ;mpap.c: 187: {;mpap.c: 188: if (mpap.numSteps_tomove == 0)
  1317  0019AA  503B               	movf	_mpap+4,w,c	;volatile
  1318  0019AC  103C               	iorwf	_mpap+5,w,c	;volatile
  1319  0019AE  A4D8               	btfss	status,2,c
  1320  0019B0  0012               	return	
  1321                           
  1322                           ;mpap.c: 189: {;mpap.c: 190: if (mpap.mode == HOMMING_MODE)
  1323  0019B2  0E02               	movlw	2
  1324  0019B4  183E               	xorwf	_mpap+7,w,c	;volatile
  1325  0019B6  A4D8               	btfss	status,2,c
  1326  0019B8  D005               	goto	l3229
  1327                           
  1328                           ;mpap.c: 191: {;mpap.c: 192: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  1329  0019BA  0101               	movlb	1	; () banked
  1330  0019BC  A175               	btfss	(_pulsonic+117)& (0+255),0,b
  1331  0019BE  D003               	goto	l3231
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;mpap.c: 193: {;mpap.c: 194: pulsonic.errors.flag.mpap_home_sensor = 0;
  1335  0019C0  9175               	bcf	(_pulsonic+117)& (0+255),0,b
  1336  0019C2  D001               	goto	l3231
  1337  0019C4                     l3229:
  1338                           
  1339                           ;mpap.c: 198: else if (mpap.mode == NORMAL_MODE)
  1340  0019C4  503E               	movf	_mpap+7,w,c	;volatile
  1341  0019C6                     l3231:
  1342                           
  1343                           ;mpap.c: 200: };mpap.c: 201: sm0++;
  1344  0019C6  2A44               	incf	mpap_sych@sm0,f,c
  1345                           
  1346                           ;mpap.c: 202: c = 0;
  1347  0019C8  0E00               	movlw	0
  1348  0019CA  6E43               	movwf	mpap_sych@c,c
  1349  0019CC  0012               	return	
  1350  0019CE                     l3235:
  1351                           
  1352                           ;mpap.c: 205: else if (sm0 == 2)
  1353  0019CE  0E02               	movlw	2
  1354  0019D0  1844               	xorwf	mpap_sych@sm0,w,c
  1355  0019D2  A4D8               	btfss	status,2,c
  1356  0019D4  D00A               	goto	l3245
  1357                           
  1358                           ;mpap.c: 206: {;mpap.c: 207: if (main_flag.f1ms)
  1359  0019D6  A049               	btfss	_main_flag,0,c	;volatile
  1360  0019D8  0012               	return	
  1361                           
  1362                           ;mpap.c: 208: {;mpap.c: 209: if (++c == 10)
  1363  0019DA  2A43               	incf	mpap_sych@c,f,c
  1364  0019DC  0E0A               	movlw	10
  1365  0019DE  1843               	xorwf	mpap_sych@c,w,c
  1366  0019E0  A4D8               	btfss	status,2,c
  1367  0019E2  0012               	return	
  1368                           
  1369                           ;mpap.c: 210: {;mpap.c: 212: mpap.mode = STALL_MODE;
  1370  0019E4  0E01               	movlw	1
  1371  0019E6  6E3E               	movwf	_mpap+7,c	;volatile
  1372  0019E8  D7D5               	goto	u3300
  1373  0019EA                     l3245:
  1374                           
  1375                           ;mpap.c: 217: else if (sm0 == 3)
  1376  0019EA  0E03               	movlw	3
  1377  0019EC  1844               	xorwf	mpap_sych@sm0,w,c
  1378  0019EE  A4D8               	btfss	status,2,c
  1379  0019F0  0012               	return	
  1380                           
  1381                           ;mpap.c: 218: {;mpap.c: 219: if (mpap.mode == IDLE_MODE)
  1382  0019F2  503E               	movf	_mpap+7,w,c	;volatile
  1383  0019F4  A4D8               	btfss	status,2,c
  1384  0019F6  0012               	return	
  1385                           
  1386                           ;mpap.c: 220: {;mpap.c: 222: sm0 = 0;
  1387  0019F8  0E00               	movlw	0
  1388  0019FA  6E44               	movwf	mpap_sych@sm0,c
  1389  0019FC  0012               	return		;funcret
  1390  0019FE                     __end_of_mpap_sych:
  1391                           	opt callstack 0
  1392                           
  1393 ;; *************** function _mpap_setupToHomming *****************
  1394 ;; Defined at:
  1395 ;;		line 69 in file "mpap.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 3E/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1409 ;;      Params:         0       0       0       0       0       0       0       0       0
  1410 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1412 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    6
  1416 ;; This function calls:
  1417 ;;		_mpap_setupToTurn
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text6
  1424  001FEE                     __ptext6:
  1425                           	opt callstack 0
  1426  001FEE                     _mpap_setupToHomming:
  1427                           	opt callstack 24
  1428                           
  1429                           ;mpap.c: 71: mpap_setupToTurn( -1 *( (18*200) +20));
  1430                           
  1431                           ;incstack = 0
  1432  001FEE  0EF1               	movlw	241
  1433  001FF0  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  1434  001FF2  0EDC               	movlw	220
  1435  001FF4  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  1436  001FF6  EC64  F00F         	call	_mpap_setupToTurn	;wreg free
  1437                           
  1438                           ;mpap.c: 74: mpap.mode = HOMMING_MODE;
  1439  001FFA  0E02               	movlw	2
  1440  001FFC  6E3E               	movwf	_mpap+7,c	;volatile
  1441  001FFE  0012               	return		;funcret
  1442  002000                     __end_of_mpap_setupToHomming:
  1443                           	opt callstack 0
  1444                           
  1445 ;; *************** function _mpap_setupToTurn *****************
  1446 ;; Defined at:
  1447 ;;		line 57 in file "mpap.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  numSteps_tom    2   16[COMRAM] int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1461 ;;      Params:         2       0       0       0       0       0       0       0       0
  1462 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1464 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1465 ;;Total ram usage:        4 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    5
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_mpap_setupToHomming
  1472 ;;		_nozzle_moveto
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text7
  1477  001EC8                     __ptext7:
  1478                           	opt callstack 0
  1479  001EC8                     _mpap_setupToTurn:
  1480                           	opt callstack 24
  1481                           
  1482                           ;mpap.c: 60: if (numSteps_tomove !=0)
  1483                           
  1484                           ;incstack = 0
  1485  001EC8  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  1486  001ECA  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  1487  001ECC  B4D8               	btfsc	status,2,c
  1488  001ECE  0012               	return	
  1489                           
  1490                           ;mpap.c: 61: {;mpap.c: 62: mpap.KI = (numSteps_tomove<0)? -1: 1;
  1491  001ED0  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  1492  001ED2  D005               	goto	l546
  1493  001ED4  0E00               	movlw	0
  1494  001ED6  6E14               	movwf	_mpap_setupToTurn$518+1,c
  1495  001ED8  0E01               	movlw	1
  1496  001EDA  6E13               	movwf	_mpap_setupToTurn$518,c
  1497  001EDC  D002               	goto	l548
  1498  001EDE                     l546:
  1499  001EDE  6813               	setf	_mpap_setupToTurn$518,c
  1500  001EE0  6814               	setf	_mpap_setupToTurn$518+1,c
  1501  001EE2                     l548:
  1502  001EE2  C013  F03D         	movff	_mpap_setupToTurn$518,_mpap+6	;volatile
  1503                           
  1504                           ;mpap.c: 64: mpap.counter_steps = 0;
  1505  001EE6  0E00               	movlw	0
  1506  001EE8  6E3A               	movwf	_mpap+3,c	;volatile
  1507  001EEA  0E00               	movlw	0
  1508  001EEC  6E39               	movwf	_mpap+2,c	;volatile
  1509                           
  1510                           ;mpap.c: 66: mpap.numSteps_tomove = numSteps_tomove;
  1511  001EEE  C011  F03B         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  1512  001EF2  C012  F03C         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  1513  001EF6  0012               	return		;funcret
  1514  001EF8                     __end_of_mpap_setupToTurn:
  1515                           	opt callstack 0
  1516                           
  1517 ;; *************** function _ikb_key_is_ready2read *****************
  1518 ;; Defined at:
  1519 ;;		line 427 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  k               1    wreg     unsigned char 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  k               1   10[COMRAM] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      unsigned char 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 3F/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1533 ;;      Params:         0       0       0       0       0       0       0       0       0
  1534 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1536 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1537 ;;Total ram usage:        1 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    5
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text8
  1548  001FD2                     __ptext8:
  1549                           	opt callstack 0
  1550  001FD2                     _ikb_key_is_ready2read:
  1551                           	opt callstack 25
  1552                           
  1553                           ;incstack = 0
  1554                           ;ikb_key_is_ready2read@k stored from wreg
  1555  001FD2  6E0B               	movwf	ikb_key_is_ready2read@k,c
  1556                           
  1557                           ;ikb.c: 429: return key[k].bf.ReadyToRead;
  1558  001FD4  500B               	movf	ikb_key_is_ready2read@k,w,c
  1559  001FD6  0D10               	mullw	16
  1560  001FD8  50F3               	movf	prodl,w,c
  1561  001FDA  0F6A               	addlw	low (_key+10)
  1562  001FDC  6ED9               	movwf	fsr2l,c
  1563  001FDE  6ADA               	clrf	fsr2h,c
  1564  001FE0  0100               	movlb	0	; () banked
  1565  001FE2  ACDF               	btfss	indf2,6,c
  1566  001FE4  D002               	goto	u3260
  1567  001FE6  0E01               	movlw	1
  1568  001FE8  0012               	return	
  1569  001FEA                     u3260:
  1570  001FEA  0E00               	movlw	0
  1571                           
  1572                           ; BSR set to: 0
  1573  001FEC  0012               	return		;funcret
  1574  001FEE                     __end_of_ikb_key_is_ready2read:
  1575                           	opt callstack 0
  1576                           
  1577 ;; *************** function _ikb_job *****************
  1578 ;; Defined at:
  1579 ;;		line 414 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    8
  1600 ;; This function calls:
  1601 ;;		_ikey_parsing
  1602 ;;		_ikey_scan
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text9
  1609  00200A                     __ptext9:
  1610                           	opt callstack 0
  1611  00200A                     _ikb_job:
  1612                           	opt callstack 22
  1613                           
  1614                           ;ikb.c: 416: ikey_scan();
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;incstack = 0
  1618  00200A  EC43  F009         	call	_ikey_scan	;wreg free
  1619                           
  1620                           ;ikb.c: 417: ikey_parsing();
  1621  00200E  EC07  F004         	call	_ikey_parsing	;wreg free
  1622  002012  0012               	return		;funcret
  1623  002014                     __end_of_ikb_job:
  1624                           	opt callstack 0
  1625                           
  1626 ;; *************** function _ikey_scan *****************
  1627 ;; Defined at:
  1628 ;;		line 449 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  k               1   11[COMRAM] char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0
  1643 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1645 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1646 ;;Total ram usage:        2 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    6
  1649 ;; This function calls:
  1650 ;;		_keyRead_pin_key1
  1651 ;;		_keyRead_pin_key2
  1652 ;;		_keyRead_pin_key3
  1653 ;;		_keyRead_pin_key4
  1654 ;;		_keyRead_pin_key5
  1655 ;; This function is called by:
  1656 ;;		_ikb_job
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text10
  1661  001286                     __ptext10:
  1662                           	opt callstack 0
  1663  001286                     _ikey_scan:
  1664                           	opt callstack 23
  1665                           
  1666                           ;ikb.c: 451: int8_t k = 5-1;
  1667                           
  1668                           ;incstack = 0
  1669  001286  0E04               	movlw	4
  1670  001288  6E0C               	movwf	ikey_scan@k,c
  1671  00128A                     l2693:
  1672                           
  1673                           ;ikb.c: 453: {;ikb.c: 454: if (key[k].sm0 == 0)
  1674  00128A  500C               	movf	ikey_scan@k,w,c
  1675  00128C  0D10               	mullw	16
  1676  00128E  50F3               	movf	prodl,w,c
  1677  001290  0F64               	addlw	low (_key+4)
  1678  001292  6ED9               	movwf	fsr2l,c
  1679  001294  6ADA               	clrf	fsr2h,c
  1680  001296  50DF               	movf	indf2,w,c
  1681  001298  A4D8               	btfss	status,2,c
  1682  00129A  D016               	goto	l2699
  1683                           
  1684                           ;ikb.c: 455: {;ikb.c: 456: if (key[k].keyRead() == 0)
  1685  00129C  500C               	movf	ikey_scan@k,w,c
  1686  00129E  0D10               	mullw	16
  1687  0012A0  50F3               	movf	prodl,w,c
  1688  0012A2  0F60               	addlw	low _key
  1689  0012A4  6ED9               	movwf	fsr2l,c
  1690  0012A6  6ADA               	clrf	fsr2h,c
  1691  0012A8  D801               	call	u2308
  1692  0012AA  D00A               	goto	u2309
  1693  0012AC                     u2308:
  1694  0012AC  0005               	push	
  1695  0012AE  6EFA               	movwf	pclath,c
  1696  0012B0  50DE               	movf	postinc2,w,c
  1697  0012B2  6EFD               	movwf	tosl,c
  1698  0012B4  50DE               	movf	postinc2,w,c
  1699  0012B6  6EFE               	movwf	tosh,c
  1700  0012B8  50F8               	movf	tblptru,w,c
  1701  0012BA  6EFF               	movwf	tosu,c
  1702  0012BC  50FA               	movf	pclath,w,c
  1703  0012BE  0012               	return		;indir
  1704  0012C0                     u2309:
  1705  0012C0  0900               	iorlw	0
  1706  0012C2  A4D8               	btfss	status,2,c
  1707  0012C4  D0AC               	goto	l2729
  1708  0012C6  D041               	goto	L1
  1709  0012C8                     l2699:
  1710                           
  1711                           ;ikb.c: 461: else if (key[k].sm0 == 1)
  1712  0012C8  500C               	movf	ikey_scan@k,w,c
  1713  0012CA  0D10               	mullw	16
  1714  0012CC  50F3               	movf	prodl,w,c
  1715  0012CE  0F64               	addlw	low (_key+4)
  1716  0012D0  6ED9               	movwf	fsr2l,c
  1717  0012D2  6ADA               	clrf	fsr2h,c
  1718  0012D4  04DE               	decf	postinc2,w,c
  1719  0012D6  A4D8               	btfss	status,2,c
  1720  0012D8  D040               	goto	l2711
  1721                           
  1722                           ;ikb.c: 462: {;ikb.c: 463: if (++key[k].counter0 == 4)
  1723  0012DA  500C               	movf	ikey_scan@k,w,c
  1724  0012DC  0D10               	mullw	16
  1725  0012DE  50F3               	movf	prodl,w,c
  1726  0012E0  0F65               	addlw	low (_key+5)
  1727  0012E2  6ED9               	movwf	fsr2l,c
  1728  0012E4  6ADA               	clrf	fsr2h,c
  1729  0012E6  2ADF               	incf	indf2,f,c
  1730  0012E8  0E04               	movlw	4
  1731  0012EA  18DE               	xorwf	postinc2,w,c
  1732  0012EC  A4D8               	btfss	status,2,c
  1733  0012EE  D097               	goto	l2729
  1734                           
  1735                           ;ikb.c: 464: {;ikb.c: 465: key[k].counter0 = 0x00;
  1736  0012F0  500C               	movf	ikey_scan@k,w,c
  1737  0012F2  0D10               	mullw	16
  1738  0012F4  50F3               	movf	prodl,w,c
  1739  0012F6  0F65               	addlw	low (_key+5)
  1740  0012F8  6ED9               	movwf	fsr2l,c
  1741  0012FA  6ADA               	clrf	fsr2h,c
  1742  0012FC  0E00               	movlw	0
  1743  0012FE  6EDF               	movwf	indf2,c
  1744                           
  1745                           ;ikb.c: 467: if (key[k].keyRead() != 0)
  1746  001300  500C               	movf	ikey_scan@k,w,c
  1747  001302  0D10               	mullw	16
  1748  001304  50F3               	movf	prodl,w,c
  1749  001306  0F60               	addlw	low _key
  1750  001308  6ED9               	movwf	fsr2l,c
  1751  00130A  6ADA               	clrf	fsr2h,c
  1752  00130C  D801               	call	u2348
  1753  00130E  D00A               	goto	u2349
  1754  001310                     u2348:
  1755  001310  0005               	push	
  1756  001312  6EFA               	movwf	pclath,c
  1757  001314  50DE               	movf	postinc2,w,c
  1758  001316  6EFD               	movwf	tosl,c
  1759  001318  50DE               	movf	postinc2,w,c
  1760  00131A  6EFE               	movwf	tosh,c
  1761  00131C  50F8               	movf	tblptru,w,c
  1762  00131E  6EFF               	movwf	tosu,c
  1763  001320  50FA               	movf	pclath,w,c
  1764  001322  0012               	return		;indir
  1765  001324                     u2349:
  1766  001324  0900               	iorlw	0
  1767  001326  B4D8               	btfsc	status,2,c
  1768  001328  D008               	goto	l2709
  1769  00132A                     u2350:
  1770                           
  1771                           ;ikb.c: 468: {;ikb.c: 469: key[k].sm0--;
  1772  00132A  500C               	movf	ikey_scan@k,w,c
  1773  00132C  0D10               	mullw	16
  1774  00132E  50F3               	movf	prodl,w,c
  1775  001330  0F64               	addlw	low (_key+4)
  1776  001332  6ED9               	movwf	fsr2l,c
  1777  001334  6ADA               	clrf	fsr2h,c
  1778  001336  06DF               	decf	indf2,f,c
  1779                           
  1780                           ;ikb.c: 470: }
  1781  001338  D072               	goto	l2729
  1782  00133A                     l2709:
  1783                           
  1784                           ;ikb.c: 471: else;ikb.c: 472: {;ikb.c: 473: key[k].bf.state = 1;
  1785  00133A  500C               	movf	ikey_scan@k,w,c
  1786  00133C  0D10               	mullw	16
  1787  00133E  50F3               	movf	prodl,w,c
  1788  001340  0F6A               	addlw	low (_key+10)
  1789  001342  6ED9               	movwf	fsr2l,c
  1790  001344  6ADA               	clrf	fsr2h,c
  1791  001346  0100               	movlb	0	; () banked
  1792  001348  80DF               	bsf	indf2,0,c
  1793  00134A                     L1:
  1794                           
  1795                           ;ikb.c: 474: key[k].sm0++;
  1796  00134A  500C               	movf	ikey_scan@k,w,c
  1797  00134C  0D10               	mullw	16
  1798  00134E  50F3               	movf	prodl,w,c
  1799  001350  0F64               	addlw	low (_key+4)
  1800  001352  6ED9               	movwf	fsr2l,c
  1801  001354  6ADA               	clrf	fsr2h,c
  1802  001356  2ADF               	incf	indf2,f,c
  1803  001358  D062               	goto	l2729
  1804  00135A                     l2711:
  1805                           
  1806                           ;ikb.c: 478: else if (key[k].sm0 == 2)
  1807  00135A  500C               	movf	ikey_scan@k,w,c
  1808  00135C  0D10               	mullw	16
  1809  00135E  50F3               	movf	prodl,w,c
  1810  001360  0F64               	addlw	low (_key+4)
  1811  001362  6ED9               	movwf	fsr2l,c
  1812  001364  6ADA               	clrf	fsr2h,c
  1813  001366  0E02               	movlw	2
  1814  001368  18DE               	xorwf	postinc2,w,c
  1815  00136A  A4D8               	btfss	status,2,c
  1816  00136C  D016               	goto	l2717
  1817                           
  1818                           ;ikb.c: 479: {;ikb.c: 480: if (key[k].keyRead() == 1)
  1819  00136E  500C               	movf	ikey_scan@k,w,c
  1820  001370  0D10               	mullw	16
  1821  001372  50F3               	movf	prodl,w,c
  1822  001374  0F60               	addlw	low _key
  1823  001376  6ED9               	movwf	fsr2l,c
  1824  001378  6ADA               	clrf	fsr2h,c
  1825  00137A  D801               	call	u2378
  1826  00137C  D00A               	goto	u2379
  1827  00137E                     u2378:
  1828  00137E  0005               	push	
  1829  001380  6EFA               	movwf	pclath,c
  1830  001382  50DE               	movf	postinc2,w,c
  1831  001384  6EFD               	movwf	tosl,c
  1832  001386  50DE               	movf	postinc2,w,c
  1833  001388  6EFE               	movwf	tosh,c
  1834  00138A  50F8               	movf	tblptru,w,c
  1835  00138C  6EFF               	movwf	tosu,c
  1836  00138E  50FA               	movf	pclath,w,c
  1837  001390  0012               	return		;indir
  1838  001392                     u2379:
  1839  001392  06E8               	decf	wreg,f,c
  1840  001394  B4D8               	btfsc	status,2,c
  1841  001396  D7D9               	goto	L1
  1842  001398  D042               	goto	l2729
  1843  00139A                     l2717:
  1844                           
  1845                           ;ikb.c: 483: else if (key[k].sm0 == 3)
  1846  00139A  500C               	movf	ikey_scan@k,w,c
  1847  00139C  0D10               	mullw	16
  1848  00139E  50F3               	movf	prodl,w,c
  1849  0013A0  0F64               	addlw	low (_key+4)
  1850  0013A2  6ED9               	movwf	fsr2l,c
  1851  0013A4  6ADA               	clrf	fsr2h,c
  1852  0013A6  0E03               	movlw	3
  1853  0013A8  18DE               	xorwf	postinc2,w,c
  1854  0013AA  A4D8               	btfss	status,2,c
  1855  0013AC  D038               	goto	l2729
  1856                           
  1857                           ;ikb.c: 484: {;ikb.c: 485: if (++key[k].counter0 == 4)
  1858  0013AE  500C               	movf	ikey_scan@k,w,c
  1859  0013B0  0D10               	mullw	16
  1860  0013B2  50F3               	movf	prodl,w,c
  1861  0013B4  0F65               	addlw	low (_key+5)
  1862  0013B6  6ED9               	movwf	fsr2l,c
  1863  0013B8  6ADA               	clrf	fsr2h,c
  1864  0013BA  2ADF               	incf	indf2,f,c
  1865  0013BC  0E04               	movlw	4
  1866  0013BE  18DE               	xorwf	postinc2,w,c
  1867  0013C0  A4D8               	btfss	status,2,c
  1868  0013C2  D02D               	goto	l2729
  1869                           
  1870                           ;ikb.c: 486: {;ikb.c: 487: key[k].counter0 = 0x00;
  1871  0013C4  500C               	movf	ikey_scan@k,w,c
  1872  0013C6  0D10               	mullw	16
  1873  0013C8  50F3               	movf	prodl,w,c
  1874  0013CA  0F65               	addlw	low (_key+5)
  1875  0013CC  6ED9               	movwf	fsr2l,c
  1876  0013CE  6ADA               	clrf	fsr2h,c
  1877  0013D0  0E00               	movlw	0
  1878  0013D2  6EDF               	movwf	indf2,c
  1879                           
  1880                           ;ikb.c: 489: if (key[k].keyRead() != 1)
  1881  0013D4  500C               	movf	ikey_scan@k,w,c
  1882  0013D6  0D10               	mullw	16
  1883  0013D8  50F3               	movf	prodl,w,c
  1884  0013DA  0F60               	addlw	low _key
  1885  0013DC  6ED9               	movwf	fsr2l,c
  1886  0013DE  6ADA               	clrf	fsr2h,c
  1887  0013E0  D801               	call	u2418
  1888  0013E2  D00A               	goto	u2419
  1889  0013E4                     u2418:
  1890  0013E4  0005               	push	
  1891  0013E6  6EFA               	movwf	pclath,c
  1892  0013E8  50DE               	movf	postinc2,w,c
  1893  0013EA  6EFD               	movwf	tosl,c
  1894  0013EC  50DE               	movf	postinc2,w,c
  1895  0013EE  6EFE               	movwf	tosh,c
  1896  0013F0  50F8               	movf	tblptru,w,c
  1897  0013F2  6EFF               	movwf	tosu,c
  1898  0013F4  50FA               	movf	pclath,w,c
  1899  0013F6  0012               	return		;indir
  1900  0013F8                     u2419:
  1901  0013F8  06E8               	decf	wreg,f,c
  1902  0013FA  A4D8               	btfss	status,2,c
  1903  0013FC  D796               	goto	u2350
  1904                           
  1905                           ;ikb.c: 493: else;ikb.c: 494: {;ikb.c: 495: key[k].bf.state = 0;
  1906  0013FE  500C               	movf	ikey_scan@k,w,c
  1907  001400  0D10               	mullw	16
  1908  001402  50F3               	movf	prodl,w,c
  1909  001404  0F6A               	addlw	low (_key+10)
  1910  001406  6ED9               	movwf	fsr2l,c
  1911  001408  6ADA               	clrf	fsr2h,c
  1912  00140A  0100               	movlb	0	; () banked
  1913  00140C  90DF               	bcf	indf2,0,c
  1914                           
  1915                           ;ikb.c: 496: key[k].sm0 = 0x00;
  1916  00140E  500C               	movf	ikey_scan@k,w,c
  1917  001410  0D10               	mullw	16
  1918  001412  50F3               	movf	prodl,w,c
  1919  001414  0F64               	addlw	low (_key+4)
  1920  001416  6ED9               	movwf	fsr2l,c
  1921  001418  6ADA               	clrf	fsr2h,c
  1922  00141A  0E00               	movlw	0
  1923  00141C  6EDF               	movwf	indf2,c
  1924  00141E                     l2729:
  1925                           
  1926                           ;ikb.c: 497: };ikb.c: 498: };ikb.c: 499: };ikb.c: 500: }while (--k >= 0);
  1927  00141E  060C               	decf	ikey_scan@k,f,c
  1928  001420  BE0C               	btfsc	ikey_scan@k,7,c
  1929  001422  0012               	return	
  1930  001424  D732               	goto	l2693
  1931  001426                     __end_of_ikey_scan:
  1932                           	opt callstack 0
  1933                           
  1934 ;; *************** function _keyRead_pin_key4 *****************
  1935 ;; Defined at:
  1936 ;;		line 206 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      unsigned char 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1950 ;;      Params:         0       0       0       0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    5
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_ikb_init
  1961 ;;		_ikey_scan
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text11
  1966  00206A                     __ptext11:
  1967                           	opt callstack 0
  1968  00206A                     _keyRead_pin_key4:
  1969                           	opt callstack 23
  1970                           
  1971                           ;ikb.c: 208: return ((PORTC & (1<<7))>>7);
  1972                           
  1973                           ;incstack = 0
  1974  00206A  4482               	rlncf	3970,w,c	;volatile
  1975  00206C  0B01               	andlw	1
  1976  00206E  0012               	return		;funcret
  1977  002070                     __end_of_keyRead_pin_key4:
  1978                           	opt callstack 0
  1979                           
  1980 ;; *************** function _keyRead_pin_key3 *****************
  1981 ;; Defined at:
  1982 ;;		line 202 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      unsigned char 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1999 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    5
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_ikb_init
  2007 ;;		_ikey_scan
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text12
  2012  002014                     __ptext12:
  2013                           	opt callstack 0
  2014  002014                     _keyRead_pin_key3:
  2015                           	opt callstack 23
  2016                           
  2017                           ;ikb.c: 204: return ((PORTC & (1<<6))>>6);
  2018                           
  2019                           ;incstack = 0
  2020  002014  4482               	rlncf	3970,w,c	;volatile
  2021  002016  46E8               	rlncf	wreg,f,c
  2022  002018  0B03               	andlw	3
  2023  00201A  0B01               	andlw	1
  2024  00201C  0012               	return		;funcret
  2025  00201E                     __end_of_keyRead_pin_key3:
  2026                           	opt callstack 0
  2027                           
  2028 ;; *************** function _keyRead_pin_key2 *****************
  2029 ;; Defined at:
  2030 ;;		line 198 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      unsigned char 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2044 ;;      Params:         0       0       0       0       0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2047 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    5
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_ikb_init
  2055 ;;		_ikey_scan
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text13
  2060  00201E                     __ptext13:
  2061                           	opt callstack 0
  2062  00201E                     _keyRead_pin_key2:
  2063                           	opt callstack 23
  2064                           
  2065                           ;ikb.c: 200: return ((PORTC & (1<<5))>>5);
  2066                           
  2067                           ;incstack = 0
  2068  00201E  3882               	swapf	3970,w,c	;volatile
  2069  002020  42E8               	rrncf	wreg,f,c
  2070  002022  0B07               	andlw	7
  2071  002024  0B01               	andlw	1
  2072  002026  0012               	return		;funcret
  2073  002028                     __end_of_keyRead_pin_key2:
  2074                           	opt callstack 0
  2075                           
  2076 ;; *************** function _keyRead_pin_key1 *****************
  2077 ;; Defined at:
  2078 ;;		line 194 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      unsigned char 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2092 ;;      Params:         0       0       0       0       0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2095 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2096 ;;Total ram usage:        0 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    5
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_ikb_init
  2103 ;;		_ikey_scan
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text14
  2108  00205A                     __ptext14:
  2109                           	opt callstack 0
  2110  00205A                     _keyRead_pin_key1:
  2111                           	opt callstack 23
  2112                           
  2113                           ;ikb.c: 196: return ((PORTC & (1<<4))>>4);
  2114                           
  2115                           ;incstack = 0
  2116  00205A  3882               	swapf	3970,w,c	;volatile
  2117  00205C  0B0F               	andlw	15
  2118  00205E  0B01               	andlw	1
  2119  002060  0012               	return		;funcret
  2120  002062                     __end_of_keyRead_pin_key1:
  2121                           	opt callstack 0
  2122                           
  2123 ;; *************** function _keyRead_pin_key5 *****************
  2124 ;; Defined at:
  2125 ;;		line 210 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      unsigned char 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2142 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    5
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_ikb_init
  2150 ;;		_ikey_scan
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text15
  2155  002062                     __ptext15:
  2156                           	opt callstack 0
  2157  002062                     _keyRead_pin_key5:
  2158                           	opt callstack 23
  2159                           
  2160                           ;ikb.c: 212: return ((PORTD & (1<<4))>>4);
  2161                           
  2162                           ;incstack = 0
  2163  002062  3883               	swapf	3971,w,c	;volatile
  2164  002064  0B0F               	andlw	15
  2165  002066  0B01               	andlw	1
  2166  002068  0012               	return		;funcret
  2167  00206A                     __end_of_keyRead_pin_key5:
  2168                           	opt callstack 0
  2169                           
  2170 ;; *************** function _ikey_parsing *****************
  2171 ;; Defined at:
  2172 ;;		line 545 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  k               1   34[COMRAM] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2186 ;;      Params:         0       0       0       0       0       0       0       0       0
  2187 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2188 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2189 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2190 ;;Total ram usage:        5 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    7
  2193 ;; This function calls:
  2194 ;;		___ftge
  2195 ;;		___lwtoft
  2196 ;;		_ikey_is_accessible
  2197 ;; This function is called by:
  2198 ;;		_ikb_job
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text16
  2203  00080E                     __ptext16:
  2204                           	opt callstack 0
  2205  00080E                     _ikey_parsing:
  2206                           	opt callstack 22
  2207                           
  2208                           ;ikb.c: 547: uint8_t k;;ikb.c: 549: for (k=0; k < 5; k++)
  2209                           
  2210                           ;incstack = 0
  2211  00080E  0E00               	movlw	0
  2212  000810  6E23               	movwf	ikey_parsing@k,c
  2213  000812                     l3567:
  2214                           
  2215                           ;ikb.c: 550: {;ikb.c: 551: if ( key[k].sm1 == (0) )
  2216  000812  5023               	movf	ikey_parsing@k,w,c
  2217  000814  0D10               	mullw	16
  2218  000816  50F3               	movf	prodl,w,c
  2219  000818  0F66               	addlw	low (_key+6)
  2220  00081A  6ED9               	movwf	fsr2l,c
  2221  00081C  6ADA               	clrf	fsr2h,c
  2222  00081E  50DF               	movf	indf2,w,c
  2223  000820  A4D8               	btfss	status,2,c
  2224  000822  D08B               	goto	l285
  2225                           
  2226                           ;ikb.c: 552: {;ikb.c: 553: if ( ikey_is_accessible(k) )
  2227  000824  5023               	movf	ikey_parsing@k,w,c
  2228  000826  EC1A  F00E         	call	_ikey_is_accessible
  2229  00082A  0900               	iorlw	0
  2230  00082C  B4D8               	btfsc	status,2,c
  2231  00082E  D085               	goto	l285
  2232                           
  2233                           ;ikb.c: 554: {;ikb.c: 555: if (key[k].bf.state == 1)
  2234  000830  5023               	movf	ikey_parsing@k,w,c
  2235  000832  0D10               	mullw	16
  2236  000834  50F3               	movf	prodl,w,c
  2237  000836  0F6A               	addlw	low (_key+10)
  2238  000838  6ED9               	movwf	fsr2l,c
  2239  00083A  6ADA               	clrf	fsr2h,c
  2240  00083C  0100               	movlb	0	; () banked
  2241  00083E  A0DF               	btfss	indf2,0,c
  2242  000840  D07C               	goto	l285
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;ikb.c: 556: {;ikb.c: 558: if (key[k].bf.OnKeyPressed)
  2246  000842  5023               	movf	ikey_parsing@k,w,c
  2247  000844  0D10               	mullw	16
  2248  000846  50F3               	movf	prodl,w,c
  2249  000848  0F6A               	addlw	low (_key+10)
  2250  00084A  6ED9               	movwf	fsr2l,c
  2251  00084C  6ADA               	clrf	fsr2h,c
  2252  00084E  A2DF               	btfss	indf2,1,c
  2253  000850  D01F               	goto	l3581
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;ikb.c: 559: {;ikb.c: 560: key[k].bf.ReadyToRead = 1;
  2257  000852  5023               	movf	ikey_parsing@k,w,c
  2258  000854  0D10               	mullw	16
  2259  000856  50F3               	movf	prodl,w,c
  2260  000858  0F6A               	addlw	low (_key+10)
  2261  00085A  6ED9               	movwf	fsr2l,c
  2262  00085C  6ADA               	clrf	fsr2h,c
  2263  00085E  8CDF               	bsf	indf2,6,c
  2264                           
  2265                           ;ikb.c: 562: if (key[k].bf.Reptt)
  2266  000860  5023               	movf	ikey_parsing@k,w,c
  2267  000862  0D10               	mullw	16
  2268  000864  50F3               	movf	prodl,w,c
  2269  000866  0F6A               	addlw	low (_key+10)
  2270  000868  6ED9               	movwf	fsr2l,c
  2271  00086A  6ADA               	clrf	fsr2h,c
  2272  00086C  AADF               	btfss	indf2,5,c
  2273  00086E  D008               	goto	l3579
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;ikb.c: 563: {;ikb.c: 564: key[k].sm1 = (6);
  2277  000870  5023               	movf	ikey_parsing@k,w,c
  2278  000872  0D10               	mullw	16
  2279  000874  50F3               	movf	prodl,w,c
  2280  000876  0F66               	addlw	low (_key+6)
  2281  000878  6ED9               	movwf	fsr2l,c
  2282  00087A  6ADA               	clrf	fsr2h,c
  2283  00087C  0E06               	movlw	6
  2284  00087E  D037               	goto	L2
  2285  000880                     l3579:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;ikb.c: 566: else;ikb.c: 567: {;ikb.c: 568: key[k].sm1 = (1);
  2289  000880  5023               	movf	ikey_parsing@k,w,c
  2290  000882  0D10               	mullw	16
  2291  000884  50F3               	movf	prodl,w,c
  2292  000886  0F66               	addlw	low (_key+6)
  2293  000888  6ED9               	movwf	fsr2l,c
  2294  00088A  6ADA               	clrf	fsr2h,c
  2295  00088C  0E01               	movlw	1
  2296  00088E  D02F               	goto	L2
  2297  000890                     l3581:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;ikb.c: 571: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  2301  000890  5023               	movf	ikey_parsing@k,w,c
  2302  000892  0D10               	mullw	16
  2303  000894  50F3               	movf	prodl,w,c
  2304  000896  0F6A               	addlw	low (_key+10)
  2305  000898  6ED9               	movwf	fsr2l,c
  2306  00089A  6ADA               	clrf	fsr2h,c
  2307  00089C  A4DF               	btfss	indf2,2,c
  2308  00089E  D008               	goto	l3585
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;ikb.c: 572: {;ikb.c: 573: key[k].sm1 = (5);
  2312  0008A0  5023               	movf	ikey_parsing@k,w,c
  2313  0008A2  0D10               	mullw	16
  2314  0008A4  50F3               	movf	prodl,w,c
  2315  0008A6  0F66               	addlw	low (_key+6)
  2316  0008A8  6ED9               	movwf	fsr2l,c
  2317  0008AA  6ADA               	clrf	fsr2h,c
  2318  0008AC  0E05               	movlw	5
  2319  0008AE  D01F               	goto	L2
  2320  0008B0                     l3585:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;ikb.c: 576: else if (key[k].bf.AtTimeExpired)
  2324  0008B0  5023               	movf	ikey_parsing@k,w,c
  2325  0008B2  0D10               	mullw	16
  2326  0008B4  50F3               	movf	prodl,w,c
  2327  0008B6  0F6A               	addlw	low (_key+10)
  2328  0008B8  6ED9               	movwf	fsr2l,c
  2329  0008BA  6ADA               	clrf	fsr2h,c
  2330  0008BC  A6DF               	btfss	indf2,3,c
  2331  0008BE  D008               	goto	l3589
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;ikb.c: 577: {;ikb.c: 578: key[k].sm1 = (3);
  2335  0008C0  5023               	movf	ikey_parsing@k,w,c
  2336  0008C2  0D10               	mullw	16
  2337  0008C4  50F3               	movf	prodl,w,c
  2338  0008C6  0F66               	addlw	low (_key+6)
  2339  0008C8  6ED9               	movwf	fsr2l,c
  2340  0008CA  6ADA               	clrf	fsr2h,c
  2341  0008CC  0E03               	movlw	3
  2342  0008CE  D00F               	goto	L2
  2343  0008D0                     l3589:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;ikb.c: 580: else if (key[k].bf.AtTimeExpired2)
  2347  0008D0  5023               	movf	ikey_parsing@k,w,c
  2348  0008D2  0D10               	mullw	16
  2349  0008D4  50F3               	movf	prodl,w,c
  2350  0008D6  0F6A               	addlw	low (_key+10)
  2351  0008D8  6ED9               	movwf	fsr2l,c
  2352  0008DA  6ADA               	clrf	fsr2h,c
  2353  0008DC  A8DF               	btfss	indf2,4,c
  2354  0008DE  D008               	goto	l291
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;ikb.c: 581: {;ikb.c: 582: key[k].sm1 = (4);
  2358  0008E0  5023               	movf	ikey_parsing@k,w,c
  2359  0008E2  0D10               	mullw	16
  2360  0008E4  50F3               	movf	prodl,w,c
  2361  0008E6  0F66               	addlw	low (_key+6)
  2362  0008E8  6ED9               	movwf	fsr2l,c
  2363  0008EA  6ADA               	clrf	fsr2h,c
  2364  0008EC  0E04               	movlw	4
  2365  0008EE                     L2:
  2366  0008EE  6EDF               	movwf	indf2,c
  2367  0008F0                     l291:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;ikb.c: 583: };ikb.c: 586: key[k].bf.InProcessing = 1;
  2371  0008F0  5023               	movf	ikey_parsing@k,w,c
  2372  0008F2  0D10               	mullw	16
  2373  0008F4  50F3               	movf	prodl,w,c
  2374  0008F6  0F6B               	addlw	low (_key+11)
  2375  0008F8  6ED9               	movwf	fsr2l,c
  2376  0008FA  6ADA               	clrf	fsr2h,c
  2377  0008FC  82DF               	bsf	indf2,1,c
  2378                           
  2379                           ;ikb.c: 591: if (key[k].num_group_x != 0)
  2380  0008FE  5023               	movf	ikey_parsing@k,w,c
  2381  000900  0D10               	mullw	16
  2382  000902  50F3               	movf	prodl,w,c
  2383  000904  0F69               	addlw	low (_key+9)
  2384  000906  6ED9               	movwf	fsr2l,c
  2385  000908  6ADA               	clrf	fsr2h,c
  2386  00090A  50DF               	movf	indf2,w,c
  2387  00090C  B4D8               	btfsc	status,2,c
  2388  00090E  D015               	goto	l285
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;ikb.c: 592: {;ikb.c: 593: group_x[ key[k].num_group_x ] = 1;
  2392  000910  5023               	movf	ikey_parsing@k,w,c
  2393  000912  0D10               	mullw	16
  2394  000914  50F3               	movf	prodl,w,c
  2395  000916  0F69               	addlw	low (_key+9)
  2396  000918  6ED9               	movwf	fsr2l,c
  2397  00091A  6ADA               	clrf	fsr2h,c
  2398  00091C  50DF               	movf	indf2,w,c
  2399  00091E  6E1F               	movwf	??_ikey_parsing& (0+255),c
  2400  000920  501F               	movf	??_ikey_parsing,w,c
  2401  000922  0FB0               	addlw	low _group_x
  2402  000924  6ED9               	movwf	fsr2l,c
  2403  000926  6ADA               	clrf	fsr2h,c
  2404  000928  0E01               	movlw	1
  2405  00092A  6EDF               	movwf	indf2,c
  2406                           
  2407                           ;ikb.c: 594: key[k].bf.OwnerOfGroup = 1;
  2408  00092C  5023               	movf	ikey_parsing@k,w,c
  2409  00092E  0D10               	mullw	16
  2410  000930  50F3               	movf	prodl,w,c
  2411  000932  0F6B               	addlw	low (_key+11)
  2412  000934  6ED9               	movwf	fsr2l,c
  2413  000936  6ADA               	clrf	fsr2h,c
  2414  000938  80DF               	bsf	indf2,0,c
  2415  00093A                     l285:
  2416                           
  2417                           ;ikb.c: 595: };ikb.c: 597: };ikb.c: 598: };ikb.c: 599: };ikb.c: 603: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  2418  00093A  5023               	movf	ikey_parsing@k,w,c
  2419  00093C  0D10               	mullw	16
  2420  00093E  50F3               	movf	prodl,w,c
  2421  000940  0F66               	addlw	low (_key+6)
  2422  000942  6ED9               	movwf	fsr2l,c
  2423  000944  6ADA               	clrf	fsr2h,c
  2424  000946  0E05               	movlw	5
  2425  000948  64DF               	cpfsgt	indf2,c
  2426  00094A  D024               	goto	l298
  2427  00094C  5023               	movf	ikey_parsing@k,w,c
  2428  00094E  0D10               	mullw	16
  2429  000950  50F3               	movf	prodl,w,c
  2430  000952  0F66               	addlw	low (_key+6)
  2431  000954  6ED9               	movwf	fsr2l,c
  2432  000956  6ADA               	clrf	fsr2h,c
  2433  000958  0E09               	movlw	9
  2434  00095A  60DF               	cpfslt	indf2,c
  2435  00095C  D01B               	goto	l298
  2436                           
  2437                           ;ikb.c: 604: {;ikb.c: 605: if (key[k].bf.state == 0)
  2438  00095E  5023               	movf	ikey_parsing@k,w,c
  2439  000960  0D10               	mullw	16
  2440  000962  50F3               	movf	prodl,w,c
  2441  000964  0F6A               	addlw	low (_key+10)
  2442  000966  6ED9               	movwf	fsr2l,c
  2443  000968  6ADA               	clrf	fsr2h,c
  2444  00096A  0100               	movlb	0	; () banked
  2445  00096C  B0DF               	btfsc	indf2,0,c
  2446  00096E  D012               	goto	l298
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;ikb.c: 606: {;ikb.c: 607: key[k].counter1 = 0;
  2450  000970  5023               	movf	ikey_parsing@k,w,c
  2451  000972  0D10               	mullw	16
  2452  000974  50F3               	movf	prodl,w,c
  2453  000976  0F67               	addlw	low (_key+7)
  2454  000978  6ED9               	movwf	fsr2l,c
  2455  00097A  6ADA               	clrf	fsr2h,c
  2456  00097C  0E00               	movlw	0
  2457  00097E  6EDE               	movwf	postinc2,c
  2458  000980  0E00               	movlw	0
  2459  000982  6EDD               	movwf	postdec2,c
  2460                           
  2461                           ;ikb.c: 608: key[k].sm1 = (2);
  2462  000984  5023               	movf	ikey_parsing@k,w,c
  2463  000986  0D10               	mullw	16
  2464  000988  50F3               	movf	prodl,w,c
  2465  00098A  0F66               	addlw	low (_key+6)
  2466  00098C  6ED9               	movwf	fsr2l,c
  2467  00098E  6ADA               	clrf	fsr2h,c
  2468  000990  0E02               	movlw	2
  2469  000992  6EDF               	movwf	indf2,c
  2470  000994                     l298:
  2471                           
  2472                           ;ikb.c: 609: };ikb.c: 610: };ikb.c: 612: if (key[k].sm1 == (6) )
  2473  000994  5023               	movf	ikey_parsing@k,w,c
  2474  000996  0D10               	mullw	16
  2475  000998  50F3               	movf	prodl,w,c
  2476  00099A  0F66               	addlw	low (_key+6)
  2477  00099C  6ED9               	movwf	fsr2l,c
  2478  00099E  6ADA               	clrf	fsr2h,c
  2479  0009A0  0E06               	movlw	6
  2480  0009A2  18DE               	xorwf	postinc2,w,c
  2481  0009A4  A4D8               	btfss	status,2,c
  2482  0009A6  D027               	goto	l300
  2483                           
  2484                           ;ikb.c: 613: {;ikb.c: 614: if ( ++key[k].counter1 >= key[k].repp.to_start)
  2485  0009A8  5023               	movf	ikey_parsing@k,w,c
  2486  0009AA  0D10               	mullw	16
  2487  0009AC  50F3               	movf	prodl,w,c
  2488  0009AE  0F6C               	addlw	low (_key+12)
  2489  0009B0  6ED9               	movwf	fsr2l,c
  2490  0009B2  6ADA               	clrf	fsr2h,c
  2491  0009B4  5023               	movf	ikey_parsing@k,w,c
  2492  0009B6  0D10               	mullw	16
  2493  0009B8  50F3               	movf	prodl,w,c
  2494  0009BA  0F67               	addlw	low (_key+7)
  2495  0009BC  6EE1               	movwf	fsr1l,c
  2496  0009BE  6AE2               	clrf	fsr1h,c
  2497  0009C0  2AE6               	incf	postinc1,f,c
  2498  0009C2  0E00               	movlw	0
  2499  0009C4  22E5               	addwfc	postdec1,f,c
  2500  0009C6  50DE               	movf	postinc2,w,c
  2501  0009C8  5CE6               	subwf	postinc1,w,c
  2502  0009CA  50DE               	movf	postinc2,w,c
  2503  0009CC  58E6               	subwfb	postinc1,w,c
  2504  0009CE  A0D8               	btfss	status,0,c
  2505  0009D0  D012               	goto	l300
  2506                           
  2507                           ;ikb.c: 615: {;ikb.c: 616: key[k].counter1 =0;
  2508  0009D2  5023               	movf	ikey_parsing@k,w,c
  2509  0009D4  0D10               	mullw	16
  2510  0009D6  50F3               	movf	prodl,w,c
  2511  0009D8  0F67               	addlw	low (_key+7)
  2512  0009DA  6ED9               	movwf	fsr2l,c
  2513  0009DC  6ADA               	clrf	fsr2h,c
  2514  0009DE  0E00               	movlw	0
  2515  0009E0  6EDE               	movwf	postinc2,c
  2516  0009E2  0E00               	movlw	0
  2517  0009E4  6EDD               	movwf	postdec2,c
  2518                           
  2519                           ;ikb.c: 617: key[k].sm1 = (7);
  2520  0009E6  5023               	movf	ikey_parsing@k,w,c
  2521  0009E8  0D10               	mullw	16
  2522  0009EA  50F3               	movf	prodl,w,c
  2523  0009EC  0F66               	addlw	low (_key+6)
  2524  0009EE  6ED9               	movwf	fsr2l,c
  2525  0009F0  6ADA               	clrf	fsr2h,c
  2526  0009F2  0E07               	movlw	7
  2527  0009F4  6EDF               	movwf	indf2,c
  2528  0009F6                     l300:
  2529                           
  2530                           ;ikb.c: 618: };ikb.c: 619: };ikb.c: 620: if (key[k].sm1 == (7))
  2531  0009F6  5023               	movf	ikey_parsing@k,w,c
  2532  0009F8  0D10               	mullw	16
  2533  0009FA  50F3               	movf	prodl,w,c
  2534  0009FC  0F66               	addlw	low (_key+6)
  2535  0009FE  6ED9               	movwf	fsr2l,c
  2536  000A00  6ADA               	clrf	fsr2h,c
  2537  000A02  0E07               	movlw	7
  2538  000A04  18DE               	xorwf	postinc2,w,c
  2539  000A06  A4D8               	btfss	status,2,c
  2540  000A08  D018               	goto	l302
  2541                           
  2542                           ;ikb.c: 621: {;ikb.c: 622: if (key[k].bf.ReadyToRead == 0)
  2543  000A0A  5023               	movf	ikey_parsing@k,w,c
  2544  000A0C  0D10               	mullw	16
  2545  000A0E  50F3               	movf	prodl,w,c
  2546  000A10  0F6A               	addlw	low (_key+10)
  2547  000A12  6ED9               	movwf	fsr2l,c
  2548  000A14  6ADA               	clrf	fsr2h,c
  2549  000A16  0100               	movlb	0	; () banked
  2550  000A18  BCDF               	btfsc	indf2,6,c
  2551  000A1A  D00F               	goto	l302
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;ikb.c: 623: {;ikb.c: 624: key[k].bf.ReadyToRead = 1;
  2555  000A1C  5023               	movf	ikey_parsing@k,w,c
  2556  000A1E  0D10               	mullw	16
  2557  000A20  50F3               	movf	prodl,w,c
  2558  000A22  0F6A               	addlw	low (_key+10)
  2559  000A24  6ED9               	movwf	fsr2l,c
  2560  000A26  6ADA               	clrf	fsr2h,c
  2561  000A28  8CDF               	bsf	indf2,6,c
  2562                           
  2563                           ;ikb.c: 625: key[k].sm1 = (8);
  2564  000A2A  5023               	movf	ikey_parsing@k,w,c
  2565  000A2C  0D10               	mullw	16
  2566  000A2E  50F3               	movf	prodl,w,c
  2567  000A30  0F66               	addlw	low (_key+6)
  2568  000A32  6ED9               	movwf	fsr2l,c
  2569  000A34  6ADA               	clrf	fsr2h,c
  2570  000A36  0E08               	movlw	8
  2571  000A38  6EDF               	movwf	indf2,c
  2572  000A3A                     l302:
  2573                           
  2574                           ;ikb.c: 626: };ikb.c: 627: };ikb.c: 628: if (key[k].sm1 == (8))
  2575  000A3A  5023               	movf	ikey_parsing@k,w,c
  2576  000A3C  0D10               	mullw	16
  2577  000A3E  50F3               	movf	prodl,w,c
  2578  000A40  0F66               	addlw	low (_key+6)
  2579  000A42  6ED9               	movwf	fsr2l,c
  2580  000A44  6ADA               	clrf	fsr2h,c
  2581  000A46  0E08               	movlw	8
  2582  000A48  18DE               	xorwf	postinc2,w,c
  2583  000A4A  A4D8               	btfss	status,2,c
  2584  000A4C  D027               	goto	l304
  2585                           
  2586                           ;ikb.c: 629: {;ikb.c: 630: if ( ++key[k].counter1 >= key[k].repp.after_start)
  2587  000A4E  5023               	movf	ikey_parsing@k,w,c
  2588  000A50  0D10               	mullw	16
  2589  000A52  50F3               	movf	prodl,w,c
  2590  000A54  0F6E               	addlw	low (_key+14)
  2591  000A56  6ED9               	movwf	fsr2l,c
  2592  000A58  6ADA               	clrf	fsr2h,c
  2593  000A5A  5023               	movf	ikey_parsing@k,w,c
  2594  000A5C  0D10               	mullw	16
  2595  000A5E  50F3               	movf	prodl,w,c
  2596  000A60  0F67               	addlw	low (_key+7)
  2597  000A62  6EE1               	movwf	fsr1l,c
  2598  000A64  6AE2               	clrf	fsr1h,c
  2599  000A66  2AE6               	incf	postinc1,f,c
  2600  000A68  0E00               	movlw	0
  2601  000A6A  22E5               	addwfc	postdec1,f,c
  2602  000A6C  50DE               	movf	postinc2,w,c
  2603  000A6E  5CE6               	subwf	postinc1,w,c
  2604  000A70  50DE               	movf	postinc2,w,c
  2605  000A72  58E6               	subwfb	postinc1,w,c
  2606  000A74  A0D8               	btfss	status,0,c
  2607  000A76  D012               	goto	l304
  2608                           
  2609                           ;ikb.c: 631: {;ikb.c: 632: key[k].counter1 = 0;
  2610  000A78  5023               	movf	ikey_parsing@k,w,c
  2611  000A7A  0D10               	mullw	16
  2612  000A7C  50F3               	movf	prodl,w,c
  2613  000A7E  0F67               	addlw	low (_key+7)
  2614  000A80  6ED9               	movwf	fsr2l,c
  2615  000A82  6ADA               	clrf	fsr2h,c
  2616  000A84  0E00               	movlw	0
  2617  000A86  6EDE               	movwf	postinc2,c
  2618  000A88  0E00               	movlw	0
  2619  000A8A  6EDD               	movwf	postdec2,c
  2620                           
  2621                           ;ikb.c: 633: key[k].sm1 = (7);
  2622  000A8C  5023               	movf	ikey_parsing@k,w,c
  2623  000A8E  0D10               	mullw	16
  2624  000A90  50F3               	movf	prodl,w,c
  2625  000A92  0F66               	addlw	low (_key+6)
  2626  000A94  6ED9               	movwf	fsr2l,c
  2627  000A96  6ADA               	clrf	fsr2h,c
  2628  000A98  0E07               	movlw	7
  2629  000A9A  6EDF               	movwf	indf2,c
  2630  000A9C                     l304:
  2631                           
  2632                           ;ikb.c: 634: };ikb.c: 635: };ikb.c: 637: if (key[k].sm1 == (5) )
  2633  000A9C  5023               	movf	ikey_parsing@k,w,c
  2634  000A9E  0D10               	mullw	16
  2635  000AA0  50F3               	movf	prodl,w,c
  2636  000AA2  0F66               	addlw	low (_key+6)
  2637  000AA4  6ED9               	movwf	fsr2l,c
  2638  000AA6  6ADA               	clrf	fsr2h,c
  2639  000AA8  0E05               	movlw	5
  2640  000AAA  18DE               	xorwf	postinc2,w,c
  2641  000AAC  A4D8               	btfss	status,2,c
  2642  000AAE  D018               	goto	l306
  2643                           
  2644                           ;ikb.c: 638: {;ikb.c: 639: if (key[k].bf.state == 0)
  2645  000AB0  5023               	movf	ikey_parsing@k,w,c
  2646  000AB2  0D10               	mullw	16
  2647  000AB4  50F3               	movf	prodl,w,c
  2648  000AB6  0F6A               	addlw	low (_key+10)
  2649  000AB8  6ED9               	movwf	fsr2l,c
  2650  000ABA  6ADA               	clrf	fsr2h,c
  2651  000ABC  0100               	movlb	0	; () banked
  2652  000ABE  B0DF               	btfsc	indf2,0,c
  2653  000AC0  D00F               	goto	l306
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;ikb.c: 640: {;ikb.c: 641: key[k].bf.ReadyToRead = 1;
  2657  000AC2  5023               	movf	ikey_parsing@k,w,c
  2658  000AC4  0D10               	mullw	16
  2659  000AC6  50F3               	movf	prodl,w,c
  2660  000AC8  0F6A               	addlw	low (_key+10)
  2661  000ACA  6ED9               	movwf	fsr2l,c
  2662  000ACC  6ADA               	clrf	fsr2h,c
  2663  000ACE  8CDF               	bsf	indf2,6,c
  2664                           
  2665                           ;ikb.c: 642: key[k].sm1 = (2);
  2666  000AD0  5023               	movf	ikey_parsing@k,w,c
  2667  000AD2  0D10               	mullw	16
  2668  000AD4  50F3               	movf	prodl,w,c
  2669  000AD6  0F66               	addlw	low (_key+6)
  2670  000AD8  6ED9               	movwf	fsr2l,c
  2671  000ADA  6ADA               	clrf	fsr2h,c
  2672  000ADC  0E02               	movlw	2
  2673  000ADE  6EDF               	movwf	indf2,c
  2674  000AE0                     l306:
  2675                           
  2676                           ;ikb.c: 643: };ikb.c: 644: };ikb.c: 646: if (key[k].sm1 == (3) )
  2677  000AE0  5023               	movf	ikey_parsing@k,w,c
  2678  000AE2  0D10               	mullw	16
  2679  000AE4  50F3               	movf	prodl,w,c
  2680  000AE6  0F66               	addlw	low (_key+6)
  2681  000AE8  6ED9               	movwf	fsr2l,c
  2682  000AEA  6ADA               	clrf	fsr2h,c
  2683  000AEC  0E03               	movlw	3
  2684  000AEE  18DE               	xorwf	postinc2,w,c
  2685  000AF0  A4D8               	btfss	status,2,c
  2686  000AF2  D09C               	goto	l308
  2687                           
  2688                           ;ikb.c: 647: {;ikb.c: 648: key[k].counter1++;
  2689  000AF4  5023               	movf	ikey_parsing@k,w,c
  2690  000AF6  0D10               	mullw	16
  2691  000AF8  50F3               	movf	prodl,w,c
  2692  000AFA  0F67               	addlw	low (_key+7)
  2693  000AFC  6ED9               	movwf	fsr2l,c
  2694  000AFE  6ADA               	clrf	fsr2h,c
  2695  000B00  2ADE               	incf	postinc2,f,c
  2696  000B02  0E00               	movlw	0
  2697  000B04  22DD               	addwfc	postdec2,f,c
  2698                           
  2699                           ;ikb.c: 650: if (key[k].bf.state == 0)
  2700  000B06  5023               	movf	ikey_parsing@k,w,c
  2701  000B08  0D10               	mullw	16
  2702  000B0A  50F3               	movf	prodl,w,c
  2703  000B0C  0F6A               	addlw	low (_key+10)
  2704  000B0E  6ED9               	movwf	fsr2l,c
  2705  000B10  6ADA               	clrf	fsr2h,c
  2706  000B12  0100               	movlb	0	; () banked
  2707  000B14  B0DF               	btfsc	indf2,0,c
  2708  000B16  D03D               	goto	l3623
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;ikb.c: 651: {;ikb.c: 652: if (key[k].counter1 <= (1000E-3/5E-3) )
  2712  000B18  0E00               	movlw	0
  2713  000B1A  6E16               	movwf	___ftge@ff1,c
  2714  000B1C  0E48               	movlw	72
  2715  000B1E  6E17               	movwf	___ftge@ff1+1,c
  2716  000B20  0E43               	movlw	67
  2717  000B22  6E18               	movwf	___ftge@ff1+2,c
  2718  000B24  5023               	movf	ikey_parsing@k,w,c
  2719  000B26  0D10               	mullw	16
  2720  000B28  50F3               	movf	prodl,w,c
  2721  000B2A  0F67               	addlw	low (_key+7)
  2722  000B2C  6ED9               	movwf	fsr2l,c
  2723  000B2E  6ADA               	clrf	fsr2h,c
  2724  000B30  CFDE F013          	movff	postinc2,___lwtoft@c
  2725  000B34  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2726  000B38  ECB9  F00F         	call	___lwtoft	;wreg free
  2727  000B3C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2728  000B40  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2729  000B44  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2730  000B48  ECFF  F00C         	call	___ftge	;wreg free
  2731  000B4C  A0D8               	btfss	status,0,c
  2732  000B4E  D021               	goto	l3623
  2733                           
  2734                           ;ikb.c: 653: {;ikb.c: 654: key[k].counter1 = 0;
  2735  000B50  5023               	movf	ikey_parsing@k,w,c
  2736  000B52  0D10               	mullw	16
  2737  000B54  50F3               	movf	prodl,w,c
  2738  000B56  0F67               	addlw	low (_key+7)
  2739  000B58  6ED9               	movwf	fsr2l,c
  2740  000B5A  6ADA               	clrf	fsr2h,c
  2741  000B5C  0E00               	movlw	0
  2742  000B5E  6EDE               	movwf	postinc2,c
  2743  000B60  0E00               	movlw	0
  2744  000B62  6EDD               	movwf	postdec2,c
  2745                           
  2746                           ;ikb.c: 656: key[k].bf.ReadyToRead = 1;
  2747  000B64  5023               	movf	ikey_parsing@k,w,c
  2748  000B66  0D10               	mullw	16
  2749  000B68  50F3               	movf	prodl,w,c
  2750  000B6A  0F6A               	addlw	low (_key+10)
  2751  000B6C  6ED9               	movwf	fsr2l,c
  2752  000B6E  6ADA               	clrf	fsr2h,c
  2753  000B70  0100               	movlb	0	; () banked
  2754  000B72  8CDF               	bsf	indf2,6,c
  2755                           
  2756                           ;ikb.c: 657: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  2757  000B74  5023               	movf	ikey_parsing@k,w,c
  2758  000B76  0D10               	mullw	16
  2759  000B78  50F3               	movf	prodl,w,c
  2760  000B7A  0F6A               	addlw	low (_key+10)
  2761  000B7C  6ED9               	movwf	fsr2l,c
  2762  000B7E  6ADA               	clrf	fsr2h,c
  2763  000B80  9EDF               	bcf	indf2,7,c
  2764                           
  2765                           ;ikb.c: 659: key[k].sm1 = (2);
  2766  000B82  5023               	movf	ikey_parsing@k,w,c
  2767  000B84  0D10               	mullw	16
  2768  000B86  50F3               	movf	prodl,w,c
  2769  000B88  0F66               	addlw	low (_key+6)
  2770  000B8A  6ED9               	movwf	fsr2l,c
  2771  000B8C  6ADA               	clrf	fsr2h,c
  2772  000B8E  0E02               	movlw	2
  2773  000B90  6EDF               	movwf	indf2,c
  2774  000B92                     l3623:
  2775                           
  2776                           ;ikb.c: 660: };ikb.c: 661: };ikb.c: 663: if (key[k].counter1 > (1000E-3/5E-3) )
  2777  000B92  0E00               	movlw	0
  2778  000B94  6E16               	movwf	___ftge@ff1,c
  2779  000B96  0E48               	movlw	72
  2780  000B98  6E17               	movwf	___ftge@ff1+1,c
  2781  000B9A  0E43               	movlw	67
  2782  000B9C  6E18               	movwf	___ftge@ff1+2,c
  2783  000B9E  5023               	movf	ikey_parsing@k,w,c
  2784  000BA0  0D10               	mullw	16
  2785  000BA2  50F3               	movf	prodl,w,c
  2786  000BA4  0F67               	addlw	low (_key+7)
  2787  000BA6  6ED9               	movwf	fsr2l,c
  2788  000BA8  6ADA               	clrf	fsr2h,c
  2789  000BAA  CFDE F013          	movff	postinc2,___lwtoft@c
  2790  000BAE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2791  000BB2  ECB9  F00F         	call	___lwtoft	;wreg free
  2792  000BB6  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2793  000BBA  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2794  000BBE  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2795  000BC2  ECFF  F00C         	call	___ftge	;wreg free
  2796  000BC6  B0D8               	btfsc	status,0,c
  2797  000BC8  D031               	goto	l308
  2798                           
  2799                           ;ikb.c: 664: {;ikb.c: 665: key[k].counter1 = 0x0000;
  2800  000BCA  5023               	movf	ikey_parsing@k,w,c
  2801  000BCC  0D10               	mullw	16
  2802  000BCE  50F3               	movf	prodl,w,c
  2803  000BD0  0F67               	addlw	low (_key+7)
  2804  000BD2  6ED9               	movwf	fsr2l,c
  2805  000BD4  6ADA               	clrf	fsr2h,c
  2806  000BD6  0E00               	movlw	0
  2807  000BD8  6EDE               	movwf	postinc2,c
  2808  000BDA  0E00               	movlw	0
  2809  000BDC  6EDD               	movwf	postdec2,c
  2810                           
  2811                           ;ikb.c: 667: key[k].bf.ReadyToRead = 1;
  2812  000BDE  5023               	movf	ikey_parsing@k,w,c
  2813  000BE0  0D10               	mullw	16
  2814  000BE2  50F3               	movf	prodl,w,c
  2815  000BE4  0F6A               	addlw	low (_key+10)
  2816  000BE6  6ED9               	movwf	fsr2l,c
  2817  000BE8  6ADA               	clrf	fsr2h,c
  2818  000BEA  0100               	movlb	0	; () banked
  2819  000BEC  8CDF               	bsf	indf2,6,c
  2820                           
  2821                           ;ikb.c: 668: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  2822  000BEE  5023               	movf	ikey_parsing@k,w,c
  2823  000BF0  0D10               	mullw	16
  2824  000BF2  50F3               	movf	prodl,w,c
  2825  000BF4  0F6A               	addlw	low (_key+10)
  2826  000BF6  6ED9               	movwf	fsr2l,c
  2827  000BF8  6ADA               	clrf	fsr2h,c
  2828  000BFA  8EDF               	bsf	indf2,7,c
  2829                           
  2830                           ;ikb.c: 670: if (!key[k].bf.Reptt)
  2831  000BFC  5023               	movf	ikey_parsing@k,w,c
  2832  000BFE  0D10               	mullw	16
  2833  000C00  50F3               	movf	prodl,w,c
  2834  000C02  0F6A               	addlw	low (_key+10)
  2835  000C04  6ED9               	movwf	fsr2l,c
  2836  000C06  6ADA               	clrf	fsr2h,c
  2837  000C08  BADF               	btfsc	indf2,5,c
  2838  000C0A  D008               	goto	l3629
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;ikb.c: 671: {;ikb.c: 672: key[k].sm1 = (1);
  2842  000C0C  5023               	movf	ikey_parsing@k,w,c
  2843  000C0E  0D10               	mullw	16
  2844  000C10  50F3               	movf	prodl,w,c
  2845  000C12  0F66               	addlw	low (_key+6)
  2846  000C14  6ED9               	movwf	fsr2l,c
  2847  000C16  6ADA               	clrf	fsr2h,c
  2848  000C18  0E01               	movlw	1
  2849  000C1A  D007               	goto	L3
  2850  000C1C                     l3629:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;ikb.c: 674: else;ikb.c: 675: {;ikb.c: 676: key[k].sm1 = (8);
  2854  000C1C  5023               	movf	ikey_parsing@k,w,c
  2855  000C1E  0D10               	mullw	16
  2856  000C20  50F3               	movf	prodl,w,c
  2857  000C22  0F66               	addlw	low (_key+6)
  2858  000C24  6ED9               	movwf	fsr2l,c
  2859  000C26  6ADA               	clrf	fsr2h,c
  2860  000C28  0E08               	movlw	8
  2861  000C2A                     L3:
  2862  000C2A  6EDF               	movwf	indf2,c
  2863  000C2C                     l308:
  2864                           
  2865                           ;ikb.c: 677: };ikb.c: 678: };ikb.c: 679: };ikb.c: 684: if (key[k].sm1 == (4))
  2866  000C2C  5023               	movf	ikey_parsing@k,w,c
  2867  000C2E  0D10               	mullw	16
  2868  000C30  50F3               	movf	prodl,w,c
  2869  000C32  0F66               	addlw	low (_key+6)
  2870  000C34  6ED9               	movwf	fsr2l,c
  2871  000C36  6ADA               	clrf	fsr2h,c
  2872  000C38  0E04               	movlw	4
  2873  000C3A  18DE               	xorwf	postinc2,w,c
  2874  000C3C  A4D8               	btfss	status,2,c
  2875  000C3E  D08C               	goto	l314
  2876                           
  2877                           ;ikb.c: 685: {;ikb.c: 686: key[k].counter1++;
  2878  000C40  5023               	movf	ikey_parsing@k,w,c
  2879  000C42  0D10               	mullw	16
  2880  000C44  50F3               	movf	prodl,w,c
  2881  000C46  0F67               	addlw	low (_key+7)
  2882  000C48  6ED9               	movwf	fsr2l,c
  2883  000C4A  6ADA               	clrf	fsr2h,c
  2884  000C4C  2ADE               	incf	postinc2,f,c
  2885  000C4E  0E00               	movlw	0
  2886  000C50  22DD               	addwfc	postdec2,f,c
  2887                           
  2888                           ;ikb.c: 688: if (key[k].bf.state == 0)
  2889  000C52  5023               	movf	ikey_parsing@k,w,c
  2890  000C54  0D10               	mullw	16
  2891  000C56  50F3               	movf	prodl,w,c
  2892  000C58  0F6A               	addlw	low (_key+10)
  2893  000C5A  6ED9               	movwf	fsr2l,c
  2894  000C5C  6ADA               	clrf	fsr2h,c
  2895  000C5E  0100               	movlb	0	; () banked
  2896  000C60  B0DF               	btfsc	indf2,0,c
  2897  000C62  D03D               	goto	l3637
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;ikb.c: 689: {;ikb.c: 690: if (key[k].counter1 <= (1000E-3/5E-3))
  2901  000C64  0E00               	movlw	0
  2902  000C66  6E16               	movwf	___ftge@ff1,c
  2903  000C68  0E48               	movlw	72
  2904  000C6A  6E17               	movwf	___ftge@ff1+1,c
  2905  000C6C  0E43               	movlw	67
  2906  000C6E  6E18               	movwf	___ftge@ff1+2,c
  2907  000C70  5023               	movf	ikey_parsing@k,w,c
  2908  000C72  0D10               	mullw	16
  2909  000C74  50F3               	movf	prodl,w,c
  2910  000C76  0F67               	addlw	low (_key+7)
  2911  000C78  6ED9               	movwf	fsr2l,c
  2912  000C7A  6ADA               	clrf	fsr2h,c
  2913  000C7C  CFDE F013          	movff	postinc2,___lwtoft@c
  2914  000C80  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2915  000C84  ECB9  F00F         	call	___lwtoft	;wreg free
  2916  000C88  C013  F019         	movff	?___lwtoft,___ftge@ff2
  2917  000C8C  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  2918  000C90  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  2919  000C94  ECFF  F00C         	call	___ftge	;wreg free
  2920  000C98  A0D8               	btfss	status,0,c
  2921  000C9A  D021               	goto	l3637
  2922                           
  2923                           ;ikb.c: 691: {;ikb.c: 692: key[k].counter1 = 0;
  2924  000C9C  5023               	movf	ikey_parsing@k,w,c
  2925  000C9E  0D10               	mullw	16
  2926  000CA0  50F3               	movf	prodl,w,c
  2927  000CA2  0F67               	addlw	low (_key+7)
  2928  000CA4  6ED9               	movwf	fsr2l,c
  2929  000CA6  6ADA               	clrf	fsr2h,c
  2930  000CA8  0E00               	movlw	0
  2931  000CAA  6EDE               	movwf	postinc2,c
  2932  000CAC  0E00               	movlw	0
  2933  000CAE  6EDD               	movwf	postdec2,c
  2934                           
  2935                           ;ikb.c: 694: key[k].bf.ReadyToRead = 1;
  2936  000CB0  5023               	movf	ikey_parsing@k,w,c
  2937  000CB2  0D10               	mullw	16
  2938  000CB4  50F3               	movf	prodl,w,c
  2939  000CB6  0F6A               	addlw	low (_key+10)
  2940  000CB8  6ED9               	movwf	fsr2l,c
  2941  000CBA  6ADA               	clrf	fsr2h,c
  2942  000CBC  0100               	movlb	0	; () banked
  2943  000CBE  8CDF               	bsf	indf2,6,c
  2944                           
  2945                           ;ikb.c: 695: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  2946  000CC0  5023               	movf	ikey_parsing@k,w,c
  2947  000CC2  0D10               	mullw	16
  2948  000CC4  50F3               	movf	prodl,w,c
  2949  000CC6  0F6A               	addlw	low (_key+10)
  2950  000CC8  6ED9               	movwf	fsr2l,c
  2951  000CCA  6ADA               	clrf	fsr2h,c
  2952  000CCC  9EDF               	bcf	indf2,7,c
  2953                           
  2954                           ;ikb.c: 697: key[k].sm1 = (2);
  2955  000CCE  5023               	movf	ikey_parsing@k,w,c
  2956  000CD0  0D10               	mullw	16
  2957  000CD2  50F3               	movf	prodl,w,c
  2958  000CD4  0F66               	addlw	low (_key+6)
  2959  000CD6  6ED9               	movwf	fsr2l,c
  2960  000CD8  6ADA               	clrf	fsr2h,c
  2961  000CDA  0E02               	movlw	2
  2962  000CDC  6EDF               	movwf	indf2,c
  2963  000CDE                     l3637:
  2964                           
  2965                           ;ikb.c: 698: };ikb.c: 699: };ikb.c: 702: if (key[k].counter1 >= (3000E-3/5E-3))
  2966  000CDE  5023               	movf	ikey_parsing@k,w,c
  2967  000CE0  0D10               	mullw	16
  2968  000CE2  50F3               	movf	prodl,w,c
  2969  000CE4  0F67               	addlw	low (_key+7)
  2970  000CE6  6ED9               	movwf	fsr2l,c
  2971  000CE8  6ADA               	clrf	fsr2h,c
  2972  000CEA  CFDE F013          	movff	postinc2,___lwtoft@c
  2973  000CEE  CFDD F014          	movff	postdec2,___lwtoft@c+1
  2974  000CF2  ECB9  F00F         	call	___lwtoft	;wreg free
  2975  000CF6  C013  F016         	movff	?___lwtoft,___ftge@ff1
  2976  000CFA  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  2977  000CFE  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  2978  000D02  0E00               	movlw	0
  2979  000D04  6E19               	movwf	___ftge@ff2,c
  2980  000D06  0E16               	movlw	22
  2981  000D08  6E1A               	movwf	___ftge@ff2+1,c
  2982  000D0A  0E44               	movlw	68
  2983  000D0C  6E1B               	movwf	___ftge@ff2+2,c
  2984  000D0E  ECFF  F00C         	call	___ftge	;wreg free
  2985  000D12  A0D8               	btfss	status,0,c
  2986  000D14  D021               	goto	l314
  2987                           
  2988                           ;ikb.c: 703: {;ikb.c: 704: key[k].counter1 = 0x0000;
  2989  000D16  5023               	movf	ikey_parsing@k,w,c
  2990  000D18  0D10               	mullw	16
  2991  000D1A  50F3               	movf	prodl,w,c
  2992  000D1C  0F67               	addlw	low (_key+7)
  2993  000D1E  6ED9               	movwf	fsr2l,c
  2994  000D20  6ADA               	clrf	fsr2h,c
  2995  000D22  0E00               	movlw	0
  2996  000D24  6EDE               	movwf	postinc2,c
  2997  000D26  0E00               	movlw	0
  2998  000D28  6EDD               	movwf	postdec2,c
  2999                           
  3000                           ;ikb.c: 706: key[k].bf.ReadyToRead = 1;
  3001  000D2A  5023               	movf	ikey_parsing@k,w,c
  3002  000D2C  0D10               	mullw	16
  3003  000D2E  50F3               	movf	prodl,w,c
  3004  000D30  0F6A               	addlw	low (_key+10)
  3005  000D32  6ED9               	movwf	fsr2l,c
  3006  000D34  6ADA               	clrf	fsr2h,c
  3007  000D36  0100               	movlb	0	; () banked
  3008  000D38  8CDF               	bsf	indf2,6,c
  3009                           
  3010                           ;ikb.c: 707: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3011  000D3A  5023               	movf	ikey_parsing@k,w,c
  3012  000D3C  0D10               	mullw	16
  3013  000D3E  50F3               	movf	prodl,w,c
  3014  000D40  0F6A               	addlw	low (_key+10)
  3015  000D42  6ED9               	movwf	fsr2l,c
  3016  000D44  6ADA               	clrf	fsr2h,c
  3017  000D46  8EDF               	bsf	indf2,7,c
  3018                           
  3019                           ;ikb.c: 710: key[k].sm1 = (1);
  3020  000D48  5023               	movf	ikey_parsing@k,w,c
  3021  000D4A  0D10               	mullw	16
  3022  000D4C  50F3               	movf	prodl,w,c
  3023  000D4E  0F66               	addlw	low (_key+6)
  3024  000D50  6ED9               	movwf	fsr2l,c
  3025  000D52  6ADA               	clrf	fsr2h,c
  3026  000D54  0E01               	movlw	1
  3027  000D56  6EDF               	movwf	indf2,c
  3028  000D58                     l314:
  3029                           
  3030                           ;ikb.c: 711: };ikb.c: 712: };ikb.c: 715: if (key[k].sm1 == (1))
  3031  000D58  5023               	movf	ikey_parsing@k,w,c
  3032  000D5A  0D10               	mullw	16
  3033  000D5C  50F3               	movf	prodl,w,c
  3034  000D5E  0F66               	addlw	low (_key+6)
  3035  000D60  6ED9               	movwf	fsr2l,c
  3036  000D62  6ADA               	clrf	fsr2h,c
  3037  000D64  04DE               	decf	postinc2,w,c
  3038  000D66  A4D8               	btfss	status,2,c
  3039  000D68  D011               	goto	l318
  3040                           
  3041                           ;ikb.c: 716: {;ikb.c: 717: if (key[k].bf.state == 0)
  3042  000D6A  5023               	movf	ikey_parsing@k,w,c
  3043  000D6C  0D10               	mullw	16
  3044  000D6E  50F3               	movf	prodl,w,c
  3045  000D70  0F6A               	addlw	low (_key+10)
  3046  000D72  6ED9               	movwf	fsr2l,c
  3047  000D74  6ADA               	clrf	fsr2h,c
  3048  000D76  0100               	movlb	0	; () banked
  3049  000D78  B0DF               	btfsc	indf2,0,c
  3050  000D7A  D008               	goto	l318
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;ikb.c: 718: {;ikb.c: 719: key[k].sm1 = (2);
  3054  000D7C  5023               	movf	ikey_parsing@k,w,c
  3055  000D7E  0D10               	mullw	16
  3056  000D80  50F3               	movf	prodl,w,c
  3057  000D82  0F66               	addlw	low (_key+6)
  3058  000D84  6ED9               	movwf	fsr2l,c
  3059  000D86  6ADA               	clrf	fsr2h,c
  3060  000D88  0E02               	movlw	2
  3061  000D8A  6EDF               	movwf	indf2,c
  3062  000D8C                     l318:
  3063                           
  3064                           ;ikb.c: 720: };ikb.c: 721: };ikb.c: 723: if (key[k].sm1 == (2))
  3065  000D8C  5023               	movf	ikey_parsing@k,w,c
  3066  000D8E  0D10               	mullw	16
  3067  000D90  50F3               	movf	prodl,w,c
  3068  000D92  0F66               	addlw	low (_key+6)
  3069  000D94  6ED9               	movwf	fsr2l,c
  3070  000D96  6ADA               	clrf	fsr2h,c
  3071  000D98  0E02               	movlw	2
  3072  000D9A  18DE               	xorwf	postinc2,w,c
  3073  000D9C  A4D8               	btfss	status,2,c
  3074  000D9E  D011               	goto	l320
  3075                           
  3076                           ;ikb.c: 724: {;ikb.c: 725: if (key[k].bf.ReadyToRead == 0)
  3077  000DA0  5023               	movf	ikey_parsing@k,w,c
  3078  000DA2  0D10               	mullw	16
  3079  000DA4  50F3               	movf	prodl,w,c
  3080  000DA6  0F6A               	addlw	low (_key+10)
  3081  000DA8  6ED9               	movwf	fsr2l,c
  3082  000DAA  6ADA               	clrf	fsr2h,c
  3083  000DAC  0100               	movlb	0	; () banked
  3084  000DAE  BCDF               	btfsc	indf2,6,c
  3085  000DB0  D008               	goto	l320
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;ikb.c: 726: {;ikb.c: 727: key[k].sm1 = (9);
  3089  000DB2  5023               	movf	ikey_parsing@k,w,c
  3090  000DB4  0D10               	mullw	16
  3091  000DB6  50F3               	movf	prodl,w,c
  3092  000DB8  0F66               	addlw	low (_key+6)
  3093  000DBA  6ED9               	movwf	fsr2l,c
  3094  000DBC  6ADA               	clrf	fsr2h,c
  3095  000DBE  0E09               	movlw	9
  3096  000DC0  6EDF               	movwf	indf2,c
  3097  000DC2                     l320:
  3098                           
  3099                           ;ikb.c: 728: };ikb.c: 729: };ikb.c: 731: if (key[k].sm1 == (9))
  3100  000DC2  5023               	movf	ikey_parsing@k,w,c
  3101  000DC4  0D10               	mullw	16
  3102  000DC6  50F3               	movf	prodl,w,c
  3103  000DC8  0F66               	addlw	low (_key+6)
  3104  000DCA  6ED9               	movwf	fsr2l,c
  3105  000DCC  6ADA               	clrf	fsr2h,c
  3106  000DCE  0E09               	movlw	9
  3107  000DD0  18DE               	xorwf	postinc2,w,c
  3108  000DD2  A4D8               	btfss	status,2,c
  3109  000DD4  D02F               	goto	l3653
  3110                           
  3111                           ;ikb.c: 732: {;ikb.c: 733: if (key[k].num_group_x > 0)
  3112  000DD6  5023               	movf	ikey_parsing@k,w,c
  3113  000DD8  0D10               	mullw	16
  3114  000DDA  50F3               	movf	prodl,w,c
  3115  000DDC  0F69               	addlw	low (_key+9)
  3116  000DDE  6ED9               	movwf	fsr2l,c
  3117  000DE0  6ADA               	clrf	fsr2h,c
  3118  000DE2  50DF               	movf	indf2,w,c
  3119  000DE4  B4D8               	btfsc	status,2,c
  3120  000DE6  D016               	goto	l323
  3121                           
  3122                           ;ikb.c: 734: {;ikb.c: 735: group_x[key[k].num_group_x] = 0;
  3123  000DE8  5023               	movf	ikey_parsing@k,w,c
  3124  000DEA  0D10               	mullw	16
  3125  000DEC  50F3               	movf	prodl,w,c
  3126  000DEE  0F69               	addlw	low (_key+9)
  3127  000DF0  6ED9               	movwf	fsr2l,c
  3128  000DF2  6ADA               	clrf	fsr2h,c
  3129  000DF4  50DF               	movf	indf2,w,c
  3130  000DF6  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3131  000DF8  501F               	movf	??_ikey_parsing,w,c
  3132  000DFA  0FB0               	addlw	low _group_x
  3133  000DFC  6ED9               	movwf	fsr2l,c
  3134  000DFE  6ADA               	clrf	fsr2h,c
  3135  000E00  0E00               	movlw	0
  3136  000E02  6EDF               	movwf	indf2,c
  3137                           
  3138                           ;ikb.c: 736: key[k].bf.OwnerOfGroup = 0;
  3139  000E04  5023               	movf	ikey_parsing@k,w,c
  3140  000E06  0D10               	mullw	16
  3141  000E08  50F3               	movf	prodl,w,c
  3142  000E0A  0F6B               	addlw	low (_key+11)
  3143  000E0C  6ED9               	movwf	fsr2l,c
  3144  000E0E  6ADA               	clrf	fsr2h,c
  3145  000E10  0100               	movlb	0	; () banked
  3146  000E12  90DF               	bcf	indf2,0,c
  3147  000E14                     l323:
  3148                           
  3149                           ;ikb.c: 737: };ikb.c: 739: key[k].sm1 = (0);
  3150  000E14  5023               	movf	ikey_parsing@k,w,c
  3151  000E16  0D10               	mullw	16
  3152  000E18  50F3               	movf	prodl,w,c
  3153  000E1A  0F66               	addlw	low (_key+6)
  3154  000E1C  6ED9               	movwf	fsr2l,c
  3155  000E1E  6ADA               	clrf	fsr2h,c
  3156  000E20  0E00               	movlw	0
  3157  000E22  6EDF               	movwf	indf2,c
  3158                           
  3159                           ;ikb.c: 742: key[k].bf.InProcessing = 0;
  3160  000E24  5023               	movf	ikey_parsing@k,w,c
  3161  000E26  0D10               	mullw	16
  3162  000E28  50F3               	movf	prodl,w,c
  3163  000E2A  0F6B               	addlw	low (_key+11)
  3164  000E2C  6ED9               	movwf	fsr2l,c
  3165  000E2E  6ADA               	clrf	fsr2h,c
  3166  000E30  0100               	movlb	0	; () banked
  3167  000E32  92DF               	bcf	indf2,1,c
  3168  000E34                     l3653:
  3169  000E34  2A23               	incf	ikey_parsing@k,f,c
  3170  000E36  0E04               	movlw	4
  3171  000E38  6423               	cpfsgt	ikey_parsing@k,c
  3172  000E3A  D4EB               	goto	l3567
  3173  000E3C  0012               	return	
  3174  000E3E                     __end_of_ikey_parsing:
  3175                           	opt callstack 0
  3176                           
  3177 ;; *************** function _ikey_is_accessible *****************
  3178 ;; Defined at:
  3179 ;;		line 510 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  k               1    wreg     unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  k               1   12[COMRAM] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      unsigned char 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0
  3194 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3195 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3196 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3197 ;;Total ram usage:        3 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    5
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_ikey_parsing
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text17
  3208  001C34                     __ptext17:
  3209                           	opt callstack 0
  3210  001C34                     _ikey_is_accessible:
  3211                           	opt callstack 23
  3212                           
  3213                           ;incstack = 0
  3214                           ;ikey_is_accessible@k stored from wreg
  3215  001C34  6E0D               	movwf	ikey_is_accessible@k,c
  3216                           
  3217                           ;ikb.c: 512: if (key[k].num_group_x != 0)
  3218  001C36  500D               	movf	ikey_is_accessible@k,w,c
  3219  001C38  0D10               	mullw	16
  3220  001C3A  50F3               	movf	prodl,w,c
  3221  001C3C  0F69               	addlw	low (_key+9)
  3222  001C3E  6ED9               	movwf	fsr2l,c
  3223  001C40  6ADA               	clrf	fsr2h,c
  3224  001C42  50DF               	movf	indf2,w,c
  3225  001C44  B4D8               	btfsc	status,2,c
  3226  001C46  D01A               	goto	l2535
  3227                           
  3228                           ;ikb.c: 513: {;ikb.c: 515: if (group_x[key[k].num_group_x] == 1)
  3229  001C48  500D               	movf	ikey_is_accessible@k,w,c
  3230  001C4A  0D10               	mullw	16
  3231  001C4C  50F3               	movf	prodl,w,c
  3232  001C4E  0F69               	addlw	low (_key+9)
  3233  001C50  6ED9               	movwf	fsr2l,c
  3234  001C52  6ADA               	clrf	fsr2h,c
  3235  001C54  50DF               	movf	indf2,w,c
  3236  001C56  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  3237  001C58  500B               	movf	??_ikey_is_accessible,w,c
  3238  001C5A  0FB0               	addlw	low _group_x
  3239  001C5C  6ED9               	movwf	fsr2l,c
  3240  001C5E  6ADA               	clrf	fsr2h,c
  3241  001C60  04DE               	decf	postinc2,w,c
  3242  001C62  A4D8               	btfss	status,2,c
  3243  001C64  D00B               	goto	l2535
  3244                           
  3245                           ;ikb.c: 516: {;ikb.c: 518: if ( !key[k].bf.OwnerOfGroup)
  3246  001C66  500D               	movf	ikey_is_accessible@k,w,c
  3247  001C68  0D10               	mullw	16
  3248  001C6A  50F3               	movf	prodl,w,c
  3249  001C6C  0F6B               	addlw	low (_key+11)
  3250  001C6E  6ED9               	movwf	fsr2l,c
  3251  001C70  6ADA               	clrf	fsr2h,c
  3252  001C72  0100               	movlb	0	; () banked
  3253  001C74  B0DF               	btfsc	indf2,0,c
  3254  001C76  D002               	goto	l2535
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;ikb.c: 519: {;ikb.c: 520: return 0;
  3258  001C78  0E00               	movlw	0
  3259  001C7A  0012               	return	
  3260  001C7C                     l2535:
  3261                           
  3262                           ;ikb.c: 521: };ikb.c: 522: };ikb.c: 523: };ikb.c: 524: return 1;
  3263  001C7C  0E01               	movlw	1
  3264  001C7E  0012               	return		;funcret
  3265  001C80                     __end_of_ikey_is_accessible:
  3266                           	opt callstack 0
  3267                           
  3268 ;; *************** function ___lwtoft *****************
  3269 ;; Defined at:
  3270 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  c               2   18[COMRAM] unsigned int 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  3   18[COMRAM] float 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3284 ;;      Params:         3       0       0       0       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3287 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3288 ;;Total ram usage:        3 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    6
  3291 ;; This function calls:
  3292 ;;		___ftpack
  3293 ;; This function is called by:
  3294 ;;		_ikey_parsing
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text18
  3299  001F72                     __ptext18:
  3300                           	opt callstack 0
  3301  001F72                     ___lwtoft:
  3302                           	opt callstack 22
  3303                           
  3304                           ;incstack = 0
  3305  001F72  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  3306  001F76  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  3307  001F7A  6A0D               	clrf	___ftpack@arg+2,c
  3308  001F7C  0E8E               	movlw	142
  3309  001F7E  6E0E               	movwf	___ftpack@exp,c
  3310  001F80  0E00               	movlw	0
  3311  001F82  6E0F               	movwf	___ftpack@sign,c
  3312  001F84  ECCE  F00B         	call	___ftpack	;wreg free
  3313  001F88  C00B  F013         	movff	?___ftpack,?___lwtoft
  3314  001F8C  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  3315  001F90  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  3316  001F94  0012               	return		;funcret
  3317  001F96                     __end_of___lwtoft:
  3318                           	opt callstack 0
  3319                           
  3320 ;; *************** function _ikb_init *****************
  3321 ;; Defined at:
  3322 ;;		line 217 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  i               1   10[COMRAM] char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 3F/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0
  3337 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3339 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:        1 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    5
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_main
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text19
  3351  0016E6                     __ptext19:
  3352                           	opt callstack 0
  3353  0016E6                     _ikb_init:
  3354                           	opt callstack 25
  3355                           
  3356                           ;incstack = 0
  3357                           ;ikb.c: 219: int8_t i;;ikb.c: 389: do{TRISC |= 1<<4;}while(0);
  3358  0016E6  8894               	bsf	3988,4,c	;volatile
  3359                           
  3360                           ;ikb.c: 390: do{TRISC |= 1<<5;}while(0);
  3361  0016E8  8A94               	bsf	3988,5,c	;volatile
  3362                           
  3363                           ;ikb.c: 391: do{TRISC |= 1<<6;}while(0);
  3364  0016EA  8C94               	bsf	3988,6,c	;volatile
  3365                           
  3366                           ;ikb.c: 392: do{TRISC |= 1<<7;}while(0);
  3367  0016EC  8E94               	bsf	3988,7,c	;volatile
  3368                           
  3369                           ;ikb.c: 393: do{TRISD |= 1<<4;}while(0);
  3370  0016EE  8895               	bsf	3989,4,c	;volatile
  3371                           
  3372                           ;ikb.c: 394: key[0].keyRead = keyRead_pin_key1;
  3373  0016F0  0E5A               	movlw	low _keyRead_pin_key1
  3374  0016F2  0100               	movlb	0	; () banked
  3375  0016F4  6F60               	movwf	_key& (0+255),b	;volatile
  3376  0016F6  0E20               	movlw	high _keyRead_pin_key1
  3377  0016F8  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;ikb.c: 395: key[1].keyRead = keyRead_pin_key2;
  3381  0016FA  0E1E               	movlw	low _keyRead_pin_key2
  3382  0016FC  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  3383  0016FE  0E20               	movlw	high _keyRead_pin_key2
  3384  001700  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;ikb.c: 396: key[2].keyRead = keyRead_pin_key3;
  3388  001702  0E14               	movlw	low _keyRead_pin_key3
  3389  001704  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  3390  001706  0E20               	movlw	high _keyRead_pin_key3
  3391  001708  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;ikb.c: 397: key[3].keyRead = keyRead_pin_key4;
  3395  00170A  0E6A               	movlw	low _keyRead_pin_key4
  3396  00170C  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  3397  00170E  0E20               	movlw	high _keyRead_pin_key4
  3398  001710  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;ikb.c: 398: key[4].keyRead = keyRead_pin_key5;
  3402  001712  0E62               	movlw	low _keyRead_pin_key5
  3403  001714  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  3404  001716  0E20               	movlw	high _keyRead_pin_key5
  3405  001718  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;ikb.c: 401: for (i=0; i<5; i++)
  3409  00171A  0E00               	movlw	0
  3410  00171C  6E0B               	movwf	ikb_init@i,c
  3411  00171E                     l3073:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;ikb.c: 402: {;ikb.c: 403: key[i].bf.OnKeyPressed = 1;
  3415  00171E  500B               	movf	ikb_init@i,w,c
  3416  001720  0D10               	mullw	16
  3417  001722  50F3               	movf	prodl,w,c
  3418  001724  0F6A               	addlw	low (_key+10)
  3419  001726  6ED9               	movwf	fsr2l,c
  3420  001728  6ADA               	clrf	fsr2h,c
  3421  00172A  82DF               	bsf	indf2,1,c
  3422                           
  3423                           ;ikb.c: 404: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  3424  00172C  500B               	movf	ikb_init@i,w,c
  3425  00172E  0D10               	mullw	16
  3426  001730  50F3               	movf	prodl,w,c
  3427  001732  0F6A               	addlw	low (_key+10)
  3428  001734  6ED9               	movwf	fsr2l,c
  3429  001736  6ADA               	clrf	fsr2h,c
  3430  001738  94DF               	bcf	indf2,2,c
  3431                           
  3432                           ;ikb.c: 405: key[i].bf.AtTimeExpired = 0;
  3433  00173A  500B               	movf	ikb_init@i,w,c
  3434  00173C  0D10               	mullw	16
  3435  00173E  50F3               	movf	prodl,w,c
  3436  001740  0F6A               	addlw	low (_key+10)
  3437  001742  6ED9               	movwf	fsr2l,c
  3438  001744  6ADA               	clrf	fsr2h,c
  3439  001746  96DF               	bcf	indf2,3,c
  3440                           
  3441                           ;ikb.c: 406: key[i].bf.Reptt = 0;
  3442  001748  500B               	movf	ikb_init@i,w,c
  3443  00174A  0D10               	mullw	16
  3444  00174C  50F3               	movf	prodl,w,c
  3445  00174E  0F6A               	addlw	low (_key+10)
  3446  001750  6ED9               	movwf	fsr2l,c
  3447  001752  6ADA               	clrf	fsr2h,c
  3448  001754  9ADF               	bcf	indf2,5,c
  3449                           
  3450                           ;ikb.c: 407: key[i].num_group_x = 0;
  3451  001756  500B               	movf	ikb_init@i,w,c
  3452  001758  0D10               	mullw	16
  3453  00175A  50F3               	movf	prodl,w,c
  3454  00175C  0F69               	addlw	low (_key+9)
  3455  00175E  6ED9               	movwf	fsr2l,c
  3456  001760  6ADA               	clrf	fsr2h,c
  3457  001762  0E00               	movlw	0
  3458  001764  6EDF               	movwf	indf2,c
  3459                           
  3460                           ;ikb.c: 408: key[i].repp.to_start= (uint16_t)500.0/5;
  3461  001766  500B               	movf	ikb_init@i,w,c
  3462  001768  0D10               	mullw	16
  3463  00176A  50F3               	movf	prodl,w,c
  3464  00176C  0F6C               	addlw	low (_key+12)
  3465  00176E  6ED9               	movwf	fsr2l,c
  3466  001770  6ADA               	clrf	fsr2h,c
  3467  001772  0E64               	movlw	100
  3468  001774  6EDE               	movwf	postinc2,c
  3469  001776  0E00               	movlw	0
  3470  001778  6EDD               	movwf	postdec2,c
  3471                           
  3472                           ;ikb.c: 409: key[i].repp.after_start = (uint16_t)200.0/5;
  3473  00177A  500B               	movf	ikb_init@i,w,c
  3474  00177C  0D10               	mullw	16
  3475  00177E  50F3               	movf	prodl,w,c
  3476  001780  0F6E               	addlw	low (_key+14)
  3477  001782  6ED9               	movwf	fsr2l,c
  3478  001784  6ADA               	clrf	fsr2h,c
  3479  001786  0E28               	movlw	40
  3480  001788  6EDE               	movwf	postinc2,c
  3481  00178A  0E00               	movlw	0
  3482  00178C  6EDD               	movwf	postdec2,c
  3483                           
  3484                           ; BSR set to: 0
  3485  00178E  2A0B               	incf	ikb_init@i,f,c
  3486                           
  3487                           ; BSR set to: 0
  3488  001790  500B               	movf	ikb_init@i,w,c
  3489  001792  0A80               	xorlw	128
  3490  001794  0F7B               	addlw	-133
  3491  001796  B0D8               	btfsc	status,0,c
  3492  001798  0012               	return	
  3493  00179A  D7C1               	goto	l3073
  3494  00179C                     __end_of_ikb_init:
  3495                           	opt callstack 0
  3496                           
  3497 ;; *************** function _ikb_flush *****************
  3498 ;; Defined at:
  3499 ;;		line 419 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 3F/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    6
  3520 ;; This function calls:
  3521 ;;		_ikey_clear_all_flag
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text20
  3528  002070                     __ptext20:
  3529                           	opt callstack 0
  3530  002070                     _ikb_flush:
  3531                           	opt callstack 24
  3532                           
  3533                           ;ikb.c: 421: ikey_clear_all_flag();
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;incstack = 0
  3537  002070  ECDA  F00F         	call	_ikey_clear_all_flag	;wreg free
  3538                           
  3539                           ; BSR set to: 0
  3540  002074  0012               	return		;funcret
  3541  002076                     __end_of_ikb_flush:
  3542                           	opt callstack 0
  3543                           
  3544 ;; *************** function _ikey_clear_all_flag *****************
  3545 ;; Defined at:
  3546 ;;		line 761 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  i               1   10[COMRAM] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 3F/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0
  3561 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3563 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3564 ;;Total ram usage:        1 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    5
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_ikb_flush
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text21
  3575  001FB4                     __ptext21:
  3576                           	opt callstack 0
  3577  001FB4                     _ikey_clear_all_flag:
  3578                           	opt callstack 24
  3579                           
  3580                           ;ikb.c: 763: uint8_t i;;ikb.c: 764: for (i=0; i<5; i++)
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;incstack = 0
  3584  001FB4  0E00               	movlw	0
  3585  001FB6  6E0B               	movwf	ikey_clear_all_flag@i,c
  3586  001FB8                     l2833:
  3587                           
  3588                           ;ikb.c: 765: {;ikb.c: 767: key[i].bf.ReadyToRead = 0;
  3589  001FB8  500B               	movf	ikey_clear_all_flag@i,w,c
  3590  001FBA  0D10               	mullw	16
  3591  001FBC  50F3               	movf	prodl,w,c
  3592  001FBE  0F6A               	addlw	low (_key+10)
  3593  001FC0  6ED9               	movwf	fsr2l,c
  3594  001FC2  6ADA               	clrf	fsr2h,c
  3595  001FC4  0100               	movlb	0	; () banked
  3596  001FC6  9CDF               	bcf	indf2,6,c
  3597                           
  3598                           ; BSR set to: 0
  3599  001FC8  2A0B               	incf	ikey_clear_all_flag@i,f,c
  3600                           
  3601                           ; BSR set to: 0
  3602  001FCA  0E04               	movlw	4
  3603  001FCC  640B               	cpfsgt	ikey_clear_all_flag@i,c
  3604  001FCE  D7F4               	goto	l2833
  3605  001FD0  0012               	return	
  3606  001FD2                     __end_of_ikey_clear_all_flag:
  3607                           	opt callstack 0
  3608                           
  3609 ;; *************** function _display7s_job *****************
  3610 ;; Defined at:
  3611 ;;		line 174 in file "pulsonic.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    7
  3632 ;; This function calls:
  3633 ;;		_multiplexedDisp_job
  3634 ;; This function is called by:
  3635 ;;		_main
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text22
  3640  001F4C                     __ptext22:
  3641                           	opt callstack 0
  3642  001F4C                     _display7s_job:
  3643                           	opt callstack 23
  3644                           
  3645                           ;pulsonic.c: 176: static int8_t q;;pulsonic.c: 178: LATB = pulsonic.display7s[q];
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;incstack = 0
  3649  001F4C  0E76               	movlw	low (_pulsonic+118)
  3650  001F4E  2445               	addwf	display7s_job@q,w,c
  3651  001F50  6ED9               	movwf	fsr2l,c
  3652  001F52  6ADA               	clrf	fsr2h,c
  3653  001F54  0E01               	movlw	high (_pulsonic+118)
  3654  001F56  22DA               	addwfc	fsr2h,f,c
  3655  001F58  50DF               	movf	indf2,w,c
  3656  001F5A  6E8A               	movwf	3978,c	;volatile
  3657                           
  3658                           ;pulsonic.c: 179: multiplexedDisp_job(q);
  3659  001F5C  5045               	movf	display7s_job@q,w,c
  3660  001F5E  EC25  F00C         	call	_multiplexedDisp_job
  3661                           
  3662                           ;pulsonic.c: 181: if (++q == (2 + 3))
  3663  001F62  2A45               	incf	display7s_job@q,f,c
  3664  001F64  0E05               	movlw	5
  3665  001F66  1845               	xorwf	display7s_job@q,w,c
  3666  001F68  A4D8               	btfss	status,2,c
  3667  001F6A  0012               	return	
  3668                           
  3669                           ;pulsonic.c: 182: {q=0;}
  3670  001F6C  0E00               	movlw	0
  3671  001F6E  6E45               	movwf	display7s_job@q,c
  3672  001F70  0012               	return		;funcret
  3673  001F72                     __end_of_display7s_job:
  3674                           	opt callstack 0
  3675                           
  3676 ;; *************** function _multiplexedDisp_job *****************
  3677 ;; Defined at:
  3678 ;;		line 145 in file "pulsonic.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  q               1    wreg     char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  q               1   16[COMRAM] char 
  3683 ;;  i               1   17[COMRAM] char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0
  3694 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3695 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3696 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3697 ;;Total ram usage:        8 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    6
  3700 ;; This function calls:
  3701 ;;		_multiplexedDisp0_off
  3702 ;;		_multiplexedDisp0_on
  3703 ;;		_multiplexedDisp1_off
  3704 ;;		_multiplexedDisp1_on
  3705 ;;		_multiplexedDisp2_off
  3706 ;;		_multiplexedDisp2_on
  3707 ;;		_multiplexedDisp3_off
  3708 ;;		_multiplexedDisp3_on
  3709 ;;		_multiplexedDisp4_off
  3710 ;;		_multiplexedDisp4_on
  3711 ;; This function is called by:
  3712 ;;		_display7s_job
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text23
  3717  00184A                     __ptext23:
  3718                           	opt callstack 0
  3719  00184A                     _multiplexedDisp_job:
  3720                           	opt callstack 23
  3721                           
  3722                           ;incstack = 0
  3723                           ;multiplexedDisp_job@q stored from wreg
  3724  00184A  6E11               	movwf	multiplexedDisp_job@q,c
  3725                           
  3726                           ;pulsonic.c: 147: int8_t i;;pulsonic.c: 148: for (i=0; i< (2 + 3); i++)
  3727  00184C  0E00               	movlw	0
  3728  00184E  6E12               	movwf	multiplexedDisp_job@i,c
  3729  001850                     l2859:
  3730                           
  3731                           ;pulsonic.c: 149: {;pulsonic.c: 150: if ((0x01<<i) & (0x1<<q))
  3732  001850  C011  F00B         	movff	multiplexedDisp_job@q,??_multiplexedDisp_job
  3733  001854  0E01               	movlw	1
  3734  001856  6E0C               	movwf	(??_multiplexedDisp_job+1)& (0+255),c
  3735  001858  0E00               	movlw	0
  3736  00185A  6E0D               	movwf	(??_multiplexedDisp_job+2)& (0+255),c
  3737  00185C  2A0B               	incf	??_multiplexedDisp_job,f,c
  3738  00185E  D003               	goto	u2834
  3739  001860                     u2835:
  3740  001860  90D8               	bcf	status,0,c
  3741  001862  360C               	rlcf	??_multiplexedDisp_job+1,f,c
  3742  001864  360D               	rlcf	??_multiplexedDisp_job+2,f,c
  3743  001866                     u2834:
  3744  001866  2E0B               	decfsz	??_multiplexedDisp_job,f,c
  3745  001868  D7FB               	goto	u2835
  3746  00186A  C012  F00E         	movff	multiplexedDisp_job@i,??_multiplexedDisp_job+3
  3747  00186E  0E01               	movlw	1
  3748  001870  6E0F               	movwf	(??_multiplexedDisp_job+4)& (0+255),c
  3749  001872  0E00               	movlw	0
  3750  001874  6E10               	movwf	(??_multiplexedDisp_job+5)& (0+255),c
  3751  001876  2A0E               	incf	??_multiplexedDisp_job+3,f,c
  3752  001878  D003               	goto	u2844
  3753  00187A                     u2845:
  3754  00187A  90D8               	bcf	status,0,c
  3755  00187C  360F               	rlcf	??_multiplexedDisp_job+4,f,c
  3756  00187E  3610               	rlcf	??_multiplexedDisp_job+5,f,c
  3757  001880                     u2844:
  3758  001880  2E0E               	decfsz	??_multiplexedDisp_job+3,f,c
  3759  001882  D7FB               	goto	u2845
  3760  001884  500C               	movf	??_multiplexedDisp_job+1,w,c
  3761  001886  160F               	andwf	??_multiplexedDisp_job+4,f,c
  3762  001888  500D               	movf	??_multiplexedDisp_job+2,w,c
  3763  00188A  1610               	andwf	??_multiplexedDisp_job+5,f,c
  3764  00188C  500F               	movf	??_multiplexedDisp_job+4,w,c
  3765  00188E  1010               	iorwf	??_multiplexedDisp_job+5,w,c
  3766  001890  B4D8               	btfsc	status,2,c
  3767  001892  D012               	goto	l2863
  3768                           
  3769                           ;pulsonic.c: 151: multiplexedDisp[i].Qonoff[1]();
  3770  001894  5012               	movf	multiplexedDisp_job@i,w,c
  3771  001896  0D04               	mullw	4
  3772  001898  50F3               	movf	prodl,w,c
  3773  00189A  0FC1               	addlw	low (_multiplexedDisp+2)
  3774  00189C  6ED9               	movwf	fsr2l,c
  3775  00189E  6ADA               	clrf	fsr2h,c
  3776  0018A0  D801               	call	u2868
  3777  0018A2  D01C               	goto	u2879
  3778  0018A4                     u2868:
  3779  0018A4  0005               	push	
  3780  0018A6  6EFA               	movwf	pclath,c
  3781  0018A8  50DE               	movf	postinc2,w,c
  3782  0018AA  6EFD               	movwf	tosl,c
  3783  0018AC  50DE               	movf	postinc2,w,c
  3784  0018AE  6EFE               	movwf	tosh,c
  3785  0018B0  50F8               	movf	tblptru,w,c
  3786  0018B2  6EFF               	movwf	tosu,c
  3787  0018B4  50FA               	movf	pclath,w,c
  3788  0018B6  0012               	return		;indir
  3789  0018B8                     l2863:
  3790                           
  3791                           ;pulsonic.c: 152: else;pulsonic.c: 153: multiplexedDisp[i].Qonoff[0]();
  3792  0018B8  5012               	movf	multiplexedDisp_job@i,w,c
  3793  0018BA  0D04               	mullw	4
  3794  0018BC  50F3               	movf	prodl,w,c
  3795  0018BE  0FBF               	addlw	low _multiplexedDisp
  3796  0018C0  6ED9               	movwf	fsr2l,c
  3797  0018C2  6ADA               	clrf	fsr2h,c
  3798  0018C4  D801               	call	u2878
  3799  0018C6  D00A               	goto	u2879
  3800  0018C8                     u2878:
  3801  0018C8  0005               	push	
  3802  0018CA  6EFA               	movwf	pclath,c
  3803  0018CC  50DE               	movf	postinc2,w,c
  3804  0018CE  6EFD               	movwf	tosl,c
  3805  0018D0  50DE               	movf	postinc2,w,c
  3806  0018D2  6EFE               	movwf	tosh,c
  3807  0018D4  50F8               	movf	tblptru,w,c
  3808  0018D6  6EFF               	movwf	tosu,c
  3809  0018D8  50FA               	movf	pclath,w,c
  3810  0018DA  0012               	return		;indir
  3811  0018DC                     u2879:
  3812  0018DC  2A12               	incf	multiplexedDisp_job@i,f,c
  3813  0018DE  5012               	movf	multiplexedDisp_job@i,w,c
  3814  0018E0  0A80               	xorlw	128
  3815  0018E2  0F7B               	addlw	-133
  3816  0018E4  B0D8               	btfsc	status,0,c
  3817  0018E6  0012               	return	
  3818  0018E8  D7B3               	goto	l2859
  3819  0018EA                     __end_of_multiplexedDisp_job:
  3820                           	opt callstack 0
  3821                           
  3822 ;; *************** function _display7s_init *****************
  3823 ;; Defined at:
  3824 ;;		line 161 in file "pulsonic.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;		None
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3838 ;;      Params:         0       0       0       0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3841 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3842 ;;Total ram usage:        0 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    7
  3845 ;; This function calls:
  3846 ;;		_multiplexedDisp_init
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text24
  3853  001BE4                     __ptext24:
  3854                           	opt callstack 0
  3855  001BE4                     _display7s_init:
  3856                           	opt callstack 23
  3857                           
  3858                           ;pulsonic.c: 163: pulsonic.display7s[MODE_DIG_1] = DISP7S_NUMS[2];
  3859                           
  3860                           ;incstack = 0
  3861  001BE4  0E03               	movlw	low (_DISP7S_NUMS+2)
  3862  001BE6  6EF6               	movwf	tblptrl,c
  3863  001BE8                     	if	1	;There is more than 1 active tblptr byte
  3864  001BE8  0E08               	movlw	high __smallconst
  3865  001BEA  6EF7               	movwf	tblptrh,c
  3866  001BEC                     	endif
  3867  001BEC                     	if	0	;tblptru may be non-zero
  3868  001BEC                     	endif
  3869  001BEC                     	if	0	;tblptru may be non-zero
  3870  001BEC                     	endif
  3871  001BEC  0008               	tblrd		*
  3872  001BEE  CFF5 F177          	movff	tablat,_pulsonic+119
  3873                           
  3874                           ;pulsonic.c: 164: pulsonic.display7s[MODE_DIG_0] = DISP7S_NUMS[0];
  3875  001BF2  0E01               	movlw	low _DISP7S_NUMS
  3876  001BF4  6EF6               	movwf	tblptrl,c
  3877  001BF6                     	if	1	;There is more than 1 active tblptr byte
  3878  001BF6  0E08               	movlw	high _DISP7S_NUMS
  3879  001BF8  6EF7               	movwf	tblptrh,c
  3880  001BFA                     	endif
  3881  001BFA                     	if	0	;There are less than 3 active tblptr bytes
  3882  001BFA                     	endif
  3883  001BFA  0008               	tblrd		*
  3884  001BFC  CFF5 F176          	movff	tablat,_pulsonic+118
  3885                           
  3886                           ;pulsonic.c: 166: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[RAYA];
  3887  001C00  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3888  001C02  6EF6               	movwf	tblptrl,c
  3889  001C04                     	if	1	;There is more than 1 active tblptr byte
  3890  001C04  0E08               	movlw	high __smallconst
  3891  001C06  6EF7               	movwf	tblptrh,c
  3892  001C08                     	endif
  3893  001C08                     	if	0	;tblptru may be non-zero
  3894  001C08                     	endif
  3895  001C08                     	if	0	;tblptru may be non-zero
  3896  001C08                     	endif
  3897  001C08  0008               	tblrd		*
  3898  001C0A  CFF5 F178          	movff	tablat,_pulsonic+120
  3899                           
  3900                           ;pulsonic.c: 167: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[RAYA];
  3901  001C0E  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3902  001C10  6EF6               	movwf	tblptrl,c
  3903  001C12                     	if	1	;There is more than 1 active tblptr byte
  3904  001C12  0E08               	movlw	high __smallconst
  3905  001C14  6EF7               	movwf	tblptrh,c
  3906  001C16                     	endif
  3907  001C16                     	if	0	;tblptru may be non-zero
  3908  001C16                     	endif
  3909  001C16                     	if	0	;tblptru may be non-zero
  3910  001C16                     	endif
  3911  001C16  0008               	tblrd		*
  3912  001C18  CFF5 F177          	movff	tablat,_pulsonic+119
  3913                           
  3914                           ;pulsonic.c: 168: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[RAYA];
  3915  001C1C  0E0C               	movlw	low (_DISP7S_CHARS+1)
  3916  001C1E  6EF6               	movwf	tblptrl,c
  3917  001C20                     	if	1	;There is more than 1 active tblptr byte
  3918  001C20  0E08               	movlw	high __smallconst
  3919  001C22  6EF7               	movwf	tblptrh,c
  3920  001C24                     	endif
  3921  001C24                     	if	0	;tblptru may be non-zero
  3922  001C24                     	endif
  3923  001C24                     	if	0	;tblptru may be non-zero
  3924  001C24                     	endif
  3925  001C24  0008               	tblrd		*
  3926  001C26  CFF5 F176          	movff	tablat,_pulsonic+118
  3927                           
  3928                           ;pulsonic.c: 170: TRISB = 0x00;
  3929  001C2A  0E00               	movlw	0
  3930  001C2C  6E93               	movwf	3987,c	;volatile
  3931                           
  3932                           ;pulsonic.c: 171: multiplexedDisp_init();
  3933  001C2E  ECEF  F00E         	call	_multiplexedDisp_init	;wreg free
  3934  001C32  0012               	return		;funcret
  3935  001C34                     __end_of_display7s_init:
  3936                           	opt callstack 0
  3937                           
  3938 ;; *************** function _multiplexedDisp_init *****************
  3939 ;; Defined at:
  3940 ;;		line 130 in file "pulsonic.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  i               1   10[COMRAM] char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3954 ;;      Params:         0       0       0       0       0       0       0       0       0
  3955 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3957 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3958 ;;Total ram usage:        1 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    6
  3961 ;; This function calls:
  3962 ;;		_multiplexedDisp0_off
  3963 ;;		_multiplexedDisp0_on
  3964 ;;		_multiplexedDisp1_off
  3965 ;;		_multiplexedDisp1_on
  3966 ;;		_multiplexedDisp2_off
  3967 ;;		_multiplexedDisp2_on
  3968 ;;		_multiplexedDisp3_off
  3969 ;;		_multiplexedDisp3_on
  3970 ;;		_multiplexedDisp4_off
  3971 ;;		_multiplexedDisp4_on
  3972 ;; This function is called by:
  3973 ;;		_display7s_init
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text25
  3978  001DDE                     __ptext25:
  3979                           	opt callstack 0
  3980  001DDE                     _multiplexedDisp_init:
  3981                           	opt callstack 23
  3982                           
  3983                           ;pulsonic.c: 132: int8_t i;;pulsonic.c: 133: for (i=0; i< (2 + 3); i++)
  3984                           
  3985                           ;incstack = 0
  3986  001DDE  0E00               	movlw	0
  3987  001DE0  6E0B               	movwf	multiplexedDisp_init@i,c
  3988  001DE2                     l2845:
  3989                           
  3990                           ;pulsonic.c: 134: {;pulsonic.c: 135: multiplexedDisp[i].Qonoff[0]();
  3991  001DE2  500B               	movf	multiplexedDisp_init@i,w,c
  3992  001DE4  0D04               	mullw	4
  3993  001DE6  50F3               	movf	prodl,w,c
  3994  001DE8  0FBF               	addlw	low _multiplexedDisp
  3995  001DEA  6ED9               	movwf	fsr2l,c
  3996  001DEC  6ADA               	clrf	fsr2h,c
  3997  001DEE  D801               	call	u2818
  3998  001DF0  D00A               	goto	u2819
  3999  001DF2                     u2818:
  4000  001DF2  0005               	push	
  4001  001DF4  6EFA               	movwf	pclath,c
  4002  001DF6  50DE               	movf	postinc2,w,c
  4003  001DF8  6EFD               	movwf	tosl,c
  4004  001DFA  50DE               	movf	postinc2,w,c
  4005  001DFC  6EFE               	movwf	tosh,c
  4006  001DFE  50F8               	movf	tblptru,w,c
  4007  001E00  6EFF               	movwf	tosu,c
  4008  001E02  50FA               	movf	pclath,w,c
  4009  001E04  0012               	return		;indir
  4010  001E06                     u2819:
  4011  001E06  2A0B               	incf	multiplexedDisp_init@i,f,c
  4012  001E08  500B               	movf	multiplexedDisp_init@i,w,c
  4013  001E0A  0A80               	xorlw	128
  4014  001E0C  0F7B               	addlw	-133
  4015  001E0E  A0D8               	btfss	status,0,c
  4016  001E10  D7E8               	goto	l2845
  4017  001E12  9892               	bcf	3986,4,c	;volatile
  4018                           
  4019                           ;pulsonic.c: 139: do{TRISA &= ~(1<<3);}while(0);
  4020  001E14  9692               	bcf	3986,3,c	;volatile
  4021                           
  4022                           ;pulsonic.c: 140: do{TRISA &= ~(1<<2);}while(0);
  4023  001E16  9492               	bcf	3986,2,c	;volatile
  4024                           
  4025                           ;pulsonic.c: 141: do{TRISA &= ~(1<<1);}while(0);
  4026  001E18  9292               	bcf	3986,1,c	;volatile
  4027                           
  4028                           ;pulsonic.c: 142: do{TRISA &= ~(1<<0);}while(0);
  4029  001E1A  9092               	bcf	3986,0,c	;volatile
  4030  001E1C  0012               	return		;funcret
  4031  001E1E                     __end_of_multiplexedDisp_init:
  4032                           	opt callstack 0
  4033                           
  4034 ;; *************** function _multiplexedDisp4_off *****************
  4035 ;; Defined at:
  4036 ;;		line 91 in file "pulsonic.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;		None
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      void 
  4043 ;; Registers used:
  4044 ;;		status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4050 ;;      Params:         0       0       0       0       0       0       0       0       0
  4051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4053 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4054 ;;Total ram usage:        0 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    5
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_multiplexedDisp_init
  4061 ;;		_multiplexedDisp_job
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text26
  4066  002076                     __ptext26:
  4067                           	opt callstack 0
  4068  002076                     _multiplexedDisp4_off:
  4069                           	opt callstack 23
  4070                           
  4071                           ;incstack = 0
  4072                           ;pulsonic.c: 93: do{LATA |= 1<<0;}while(0);
  4073  002076  8089               	bsf	3977,0,c	;volatile
  4074  002078  0012               	return		;funcret
  4075  00207A                     __end_of_multiplexedDisp4_off:
  4076                           	opt callstack 0
  4077                           
  4078 ;; *************** function _multiplexedDisp3_on *****************
  4079 ;; Defined at:
  4080 ;;		line 86 in file "pulsonic.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		status,2, status,0
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4094 ;;      Params:         0       0       0       0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    5
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_multiplexedDisp_init
  4105 ;;		_multiplexedDisp_job
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text27
  4110  00207A                     __ptext27:
  4111                           	opt callstack 0
  4112  00207A                     _multiplexedDisp3_on:
  4113                           	opt callstack 23
  4114                           
  4115                           ;incstack = 0
  4116                           ;pulsonic.c: 88: do{LATA &= ~(1<<1);}while(0);
  4117  00207A  9289               	bcf	3977,1,c	;volatile
  4118  00207C  0012               	return		;funcret
  4119  00207E                     __end_of_multiplexedDisp3_on:
  4120                           	opt callstack 0
  4121                           
  4122 ;; *************** function _multiplexedDisp3_off *****************
  4123 ;; Defined at:
  4124 ;;		line 82 in file "pulsonic.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		status,2, status,0
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    5
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_multiplexedDisp_init
  4149 ;;		_multiplexedDisp_job
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text28
  4154  00207E                     __ptext28:
  4155                           	opt callstack 0
  4156  00207E                     _multiplexedDisp3_off:
  4157                           	opt callstack 23
  4158                           
  4159                           ;incstack = 0
  4160                           ;pulsonic.c: 84: do{LATA |= 1<<1;}while(0);
  4161  00207E  8289               	bsf	3977,1,c	;volatile
  4162  002080  0012               	return		;funcret
  4163  002082                     __end_of_multiplexedDisp3_off:
  4164                           	opt callstack 0
  4165                           
  4166 ;; *************** function _multiplexedDisp2_on *****************
  4167 ;; Defined at:
  4168 ;;		line 77 in file "pulsonic.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    5
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_multiplexedDisp_init
  4193 ;;		_multiplexedDisp_job
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text29
  4198  002082                     __ptext29:
  4199                           	opt callstack 0
  4200  002082                     _multiplexedDisp2_on:
  4201                           	opt callstack 23
  4202                           
  4203                           ;incstack = 0
  4204                           ;pulsonic.c: 79: do{LATA &= ~(1<<2);}while(0);
  4205  002082  9489               	bcf	3977,2,c	;volatile
  4206  002084  0012               	return		;funcret
  4207  002086                     __end_of_multiplexedDisp2_on:
  4208                           	opt callstack 0
  4209                           
  4210 ;; *************** function _multiplexedDisp2_off *****************
  4211 ;; Defined at:
  4212 ;;		line 73 in file "pulsonic.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		status,2, status,0
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    5
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_multiplexedDisp_init
  4237 ;;		_multiplexedDisp_job
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text30
  4242  002086                     __ptext30:
  4243                           	opt callstack 0
  4244  002086                     _multiplexedDisp2_off:
  4245                           	opt callstack 23
  4246                           
  4247                           ;incstack = 0
  4248                           ;pulsonic.c: 75: do{LATA |= 1<<2;}while(0);
  4249  002086  8489               	bsf	3977,2,c	;volatile
  4250  002088  0012               	return		;funcret
  4251  00208A                     __end_of_multiplexedDisp2_off:
  4252                           	opt callstack 0
  4253                           
  4254 ;; *************** function _multiplexedDisp1_on *****************
  4255 ;; Defined at:
  4256 ;;		line 68 in file "pulsonic.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		status,2, status,0
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4270 ;;      Params:         0       0       0       0       0       0       0       0       0
  4271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4274 ;;Total ram usage:        0 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    5
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_multiplexedDisp_init
  4281 ;;		_multiplexedDisp_job
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text31
  4286  00208A                     __ptext31:
  4287                           	opt callstack 0
  4288  00208A                     _multiplexedDisp1_on:
  4289                           	opt callstack 23
  4290                           
  4291                           ;incstack = 0
  4292                           ;pulsonic.c: 70: do{LATA &= ~(1<<3);}while(0);
  4293  00208A  9689               	bcf	3977,3,c	;volatile
  4294  00208C  0012               	return		;funcret
  4295  00208E                     __end_of_multiplexedDisp1_on:
  4296                           	opt callstack 0
  4297                           
  4298 ;; *************** function _multiplexedDisp1_off *****************
  4299 ;; Defined at:
  4300 ;;		line 64 in file "pulsonic.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		status,2, status,0
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0
  4315 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4317 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4318 ;;Total ram usage:        0 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    5
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_multiplexedDisp_init
  4325 ;;		_multiplexedDisp_job
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text32
  4330  00208E                     __ptext32:
  4331                           	opt callstack 0
  4332  00208E                     _multiplexedDisp1_off:
  4333                           	opt callstack 23
  4334                           
  4335                           ;incstack = 0
  4336                           ;pulsonic.c: 66: do{LATA |= 1<<3;}while(0);
  4337  00208E  8689               	bsf	3977,3,c	;volatile
  4338  002090  0012               	return		;funcret
  4339  002092                     __end_of_multiplexedDisp1_off:
  4340                           	opt callstack 0
  4341                           
  4342 ;; *************** function _multiplexedDisp0_on *****************
  4343 ;; Defined at:
  4344 ;;		line 59 in file "pulsonic.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4358 ;;      Params:         0       0       0       0       0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4361 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4362 ;;Total ram usage:        0 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    5
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_multiplexedDisp_init
  4369 ;;		_multiplexedDisp_job
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text33
  4374  002092                     __ptext33:
  4375                           	opt callstack 0
  4376  002092                     _multiplexedDisp0_on:
  4377                           	opt callstack 23
  4378                           
  4379                           ;incstack = 0
  4380                           ;pulsonic.c: 61: do{LATA &= ~(1<<4);}while(0);
  4381  002092  9889               	bcf	3977,4,c	;volatile
  4382  002094  0012               	return		;funcret
  4383  002096                     __end_of_multiplexedDisp0_on:
  4384                           	opt callstack 0
  4385                           
  4386 ;; *************** function _multiplexedDisp0_off *****************
  4387 ;; Defined at:
  4388 ;;		line 55 in file "pulsonic.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4405 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4406 ;;Total ram usage:        0 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    5
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_multiplexedDisp_init
  4413 ;;		_multiplexedDisp_job
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text34
  4418  002096                     __ptext34:
  4419                           	opt callstack 0
  4420  002096                     _multiplexedDisp0_off:
  4421                           	opt callstack 23
  4422                           
  4423                           ;incstack = 0
  4424                           ;pulsonic.c: 57: do{LATA |= 1<<4;}while(0);
  4425  002096  8889               	bsf	3977,4,c	;volatile
  4426  002098  0012               	return		;funcret
  4427  00209A                     __end_of_multiplexedDisp0_off:
  4428                           	opt callstack 0
  4429                           
  4430 ;; *************** function _multiplexedDisp4_on *****************
  4431 ;; Defined at:
  4432 ;;		line 95 in file "pulsonic.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4446 ;;      Params:         0       0       0       0       0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4449 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4450 ;;Total ram usage:        0 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    5
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_multiplexedDisp_init
  4457 ;;		_multiplexedDisp_job
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text35
  4462  00209A                     __ptext35:
  4463                           	opt callstack 0
  4464  00209A                     _multiplexedDisp4_on:
  4465                           	opt callstack 23
  4466                           
  4467                           ;incstack = 0
  4468                           ;pulsonic.c: 97: do{LATA &= ~(1<<0);}while(0);
  4469  00209A  9089               	bcf	3977,0,c	;volatile
  4470  00209C  0012               	return		;funcret
  4471  00209E                     __end_of_multiplexedDisp4_on:
  4472                           	opt callstack 0
  4473                           
  4474 ;; *************** function _disp_show_quantity *****************
  4475 ;; Defined at:
  4476 ;;		line 186 in file "pulsonic.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  f               3   48[COMRAM] void 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  buff           10    0[BANK0 ] unsigned char [10]
  4481 ;;  real            3   10[BANK0 ] unsigned char [10]
  4482 ;;  I               2   16[BANK0 ] int 
  4483 ;;  i               1   18[BANK0 ] char 
  4484 ;;  last_pos        1   15[BANK0 ] char 
  4485 ;;  q               1   14[BANK0 ] char 
  4486 ;;  num             1   13[BANK0 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 3F/0
  4493 ;;		On exit  : 3E/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4496 ;;      Params:         3       0       0       0       0       0       0       0       0
  4497 ;;      Locals:         0      19       0       0       0       0       0       0       0
  4498 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4499 ;;      Totals:         4      19       0       0       0       0       0       0       0
  4500 ;;Total ram usage:       23 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    8
  4503 ;; This function calls:
  4504 ;;		___awtoft
  4505 ;;		___ftge
  4506 ;;		___ftmul
  4507 ;;		___ftsub
  4508 ;;		___fttol
  4509 ;;		_itoa
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text36
  4516  000E3E                     __ptext36:
  4517                           	opt callstack 0
  4518  000E3E                     _disp_show_quantity:
  4519                           	opt callstack 22
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;pulsonic.c: 188: int16_t I;;pulsonic.c: 189: char buff[10];;pulsonic.c: 190: uint8_t nu
      +                          m;;pulsonic.c: 191: int8_t i;;pulsonic.c: 192: int8_t last_pos;;pulsonic.c: 193: int8_t 
      +                          q;;pulsonic.c: 194: double real;;pulsonic.c: 196: if (f>= 1000.0f)
  4523                           
  4524                           ;incstack = 0
  4525  000E3E  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4526  000E42  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4527  000E46  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4528  000E4A  0E00               	movlw	0
  4529  000E4C  6E19               	movwf	___ftge@ff2,c
  4530  000E4E  0E7A               	movlw	122
  4531  000E50  6E1A               	movwf	___ftge@ff2+1,c
  4532  000E52  0E44               	movlw	68
  4533  000E54  6E1B               	movwf	___ftge@ff2+2,c
  4534  000E56  ECFF  F00C         	call	___ftge	;wreg free
  4535  000E5A  A0D8               	btfss	status,0,c
  4536  000E5C  D006               	goto	l3787
  4537                           
  4538                           ;pulsonic.c: 197: f=999.0f;
  4539  000E5E  0EC0               	movlw	192
  4540  000E60  6E31               	movwf	disp_show_quantity@f,c
  4541  000E62  0E79               	movlw	121
  4542  000E64  6E32               	movwf	disp_show_quantity@f+1,c
  4543  000E66  0E44               	movlw	68
  4544  000E68  6E33               	movwf	disp_show_quantity@f+2,c
  4545  000E6A                     l3787:
  4546                           
  4547                           ;pulsonic.c: 199: I = (int16_t)f;
  4548  000E6A  C031  F022         	movff	disp_show_quantity@f,___fttol@f1
  4549  000E6E  C032  F023         	movff	disp_show_quantity@f+1,___fttol@f1+1
  4550  000E72  C033  F024         	movff	disp_show_quantity@f+2,___fttol@f1+2
  4551  000E76  EC0A  F00B         	call	___fttol	;wreg free
  4552  000E7A  C022  F0ED         	movff	?___fttol,disp_show_quantity@I
  4553  000E7E  C023  F0EE         	movff	?___fttol+1,disp_show_quantity@I+1
  4554                           
  4555                           ;pulsonic.c: 200: real = f-I;
  4556  000E82  C031  F01F         	movff	disp_show_quantity@f,___ftsub@f1
  4557  000E86  C032  F020         	movff	disp_show_quantity@f+1,___ftsub@f1+1
  4558  000E8A  C033  F021         	movff	disp_show_quantity@f+2,___ftsub@f1+2
  4559  000E8E  C0ED  F013         	movff	disp_show_quantity@I,___awtoft@c
  4560  000E92  C0EE  F014         	movff	disp_show_quantity@I+1,___awtoft@c+1
  4561  000E96  EC2F  F00F         	call	___awtoft	;wreg free
  4562  000E9A  C013  F022         	movff	?___awtoft,___ftsub@f2
  4563  000E9E  C014  F023         	movff	?___awtoft+1,___ftsub@f2+1
  4564  000EA2  C015  F024         	movff	?___awtoft+2,___ftsub@f2+2
  4565  000EA6  EC0F  F00F         	call	___ftsub	;wreg free
  4566  000EAA  C01F  F0E7         	movff	?___ftsub,disp_show_quantity@real
  4567  000EAE  C020  F0E8         	movff	?___ftsub+1,disp_show_quantity@real+1
  4568  000EB2  C021  F0E9         	movff	?___ftsub+2,disp_show_quantity@real+2
  4569                           
  4570                           ;pulsonic.c: 201: if (real > 0.0f)
  4571  000EB6  0E00               	movlw	0
  4572  000EB8  6E16               	movwf	___ftge@ff1,c
  4573  000EBA  0E00               	movlw	0
  4574  000EBC  6E17               	movwf	___ftge@ff1+1,c
  4575  000EBE  0E00               	movlw	0
  4576  000EC0  6E18               	movwf	___ftge@ff1+2,c
  4577  000EC2  C0E7  F019         	movff	disp_show_quantity@real,___ftge@ff2
  4578  000EC6  C0E8  F01A         	movff	disp_show_quantity@real+1,___ftge@ff2+1
  4579  000ECA  C0E9  F01B         	movff	disp_show_quantity@real+2,___ftge@ff2+2
  4580  000ECE  ECFF  F00C         	call	___ftge	;wreg free
  4581  000ED2  B0D8               	btfsc	status,0,c
  4582  000ED4  D02A               	goto	l3797
  4583                           
  4584                           ;pulsonic.c: 202: {;pulsonic.c: 203: if (f<100.0f)
  4585  000ED6  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4586  000EDA  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4587  000EDE  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4588  000EE2  0E00               	movlw	0
  4589  000EE4  6E19               	movwf	___ftge@ff2,c
  4590  000EE6  0EC8               	movlw	200
  4591  000EE8  6E1A               	movwf	___ftge@ff2+1,c
  4592  000EEA  0E42               	movlw	66
  4593  000EEC  6E1B               	movwf	___ftge@ff2+2,c
  4594  000EEE  ECFF  F00C         	call	___ftge	;wreg free
  4595  000EF2  B0D8               	btfsc	status,0,c
  4596  000EF4  D01A               	goto	l3797
  4597                           
  4598                           ;pulsonic.c: 204: {;pulsonic.c: 205: I = (int)(f*10);
  4599  000EF6  0E00               	movlw	0
  4600  000EF8  6E16               	movwf	___ftmul@f2,c
  4601  000EFA  0E20               	movlw	32
  4602  000EFC  6E17               	movwf	___ftmul@f2+1,c
  4603  000EFE  0E41               	movlw	65
  4604  000F00  6E18               	movwf	___ftmul@f2+2,c
  4605  000F02  C031  F013         	movff	disp_show_quantity@f,___ftmul@f1
  4606  000F06  C032  F014         	movff	disp_show_quantity@f+1,___ftmul@f1+1
  4607  000F0A  C033  F015         	movff	disp_show_quantity@f+2,___ftmul@f1+2
  4608  000F0E  EC90  F00A         	call	___ftmul	;wreg free
  4609  000F12  C013  F022         	movff	?___ftmul,___fttol@f1
  4610  000F16  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  4611  000F1A  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  4612  000F1E  EC0A  F00B         	call	___fttol	;wreg free
  4613  000F22  C022  F0ED         	movff	?___fttol,disp_show_quantity@I
  4614  000F26  C023  F0EE         	movff	?___fttol+1,disp_show_quantity@I+1
  4615  000F2A                     l3797:
  4616                           
  4617                           ;pulsonic.c: 206: };pulsonic.c: 208: };pulsonic.c: 209: itoa(buff, I, 10);
  4618  000F2A  0EDD               	movlw	low disp_show_quantity@buff
  4619  000F2C  6E1A               	movwf	itoa@buf,c
  4620  000F2E  C0ED  F01B         	movff	disp_show_quantity@I,itoa@val
  4621  000F32  C0EE  F01C         	movff	disp_show_quantity@I+1,itoa@val+1
  4622  000F36  0E00               	movlw	0
  4623  000F38  6E1E               	movwf	itoa@base+1,c
  4624  000F3A  0E0A               	movlw	10
  4625  000F3C  6E1D               	movwf	itoa@base,c
  4626  000F3E  EC4B  F00F         	call	_itoa	;wreg free
  4627                           
  4628                           ;pulsonic.c: 211: pulsonic.display7s[QUANT_DIG_2] = DISP7S_CHARS[OFF];
  4629  000F42  0E0B               	movlw	low _DISP7S_CHARS
  4630  000F44  6EF6               	movwf	tblptrl,c
  4631  000F46                     	if	1	;There is more than 1 active tblptr byte
  4632  000F46  0E08               	movlw	high _DISP7S_CHARS
  4633  000F48  6EF7               	movwf	tblptrh,c
  4634  000F4A                     	endif
  4635  000F4A                     	if	0	;There are less than 3 active tblptr bytes
  4636  000F4A                     	endif
  4637  000F4A  0008               	tblrd		*
  4638  000F4C  CFF5 F178          	movff	tablat,_pulsonic+120
  4639                           
  4640                           ;pulsonic.c: 212: pulsonic.display7s[QUANT_DIG_1] = DISP7S_CHARS[OFF];
  4641  000F50  0E0B               	movlw	low _DISP7S_CHARS
  4642  000F52  6EF6               	movwf	tblptrl,c
  4643  000F54                     	if	1	;There is more than 1 active tblptr byte
  4644  000F54  0E08               	movlw	high _DISP7S_CHARS
  4645  000F56  6EF7               	movwf	tblptrh,c
  4646  000F58                     	endif
  4647  000F58                     	if	0	;There are less than 3 active tblptr bytes
  4648  000F58                     	endif
  4649  000F58  0008               	tblrd		*
  4650  000F5A  CFF5 F177          	movff	tablat,_pulsonic+119
  4651                           
  4652                           ;pulsonic.c: 213: pulsonic.display7s[QUANT_DIG_0] = DISP7S_CHARS[OFF];
  4653  000F5E  0E0B               	movlw	low _DISP7S_CHARS
  4654  000F60  6EF6               	movwf	tblptrl,c
  4655  000F62                     	if	1	;There is more than 1 active tblptr byte
  4656  000F62  0E08               	movlw	high _DISP7S_CHARS
  4657  000F64  6EF7               	movwf	tblptrh,c
  4658  000F66                     	endif
  4659  000F66                     	if	0	;There are less than 3 active tblptr bytes
  4660  000F66                     	endif
  4661  000F66  0008               	tblrd		*
  4662  000F68  CFF5 F176          	movff	tablat,_pulsonic+118
  4663                           
  4664                           ;pulsonic.c: 215: if (real<0.01)
  4665  000F6C  C0E7  F016         	movff	disp_show_quantity@real,___ftge@ff1
  4666  000F70  C0E8  F017         	movff	disp_show_quantity@real+1,___ftge@ff1+1
  4667  000F74  C0E9  F018         	movff	disp_show_quantity@real+2,___ftge@ff1+2
  4668  000F78  0ED7               	movlw	215
  4669  000F7A  6E19               	movwf	___ftge@ff2,c
  4670  000F7C  0E23               	movlw	35
  4671  000F7E  6E1A               	movwf	___ftge@ff2+1,c
  4672  000F80  0E3C               	movlw	60
  4673  000F82  6E1B               	movwf	___ftge@ff2+2,c
  4674  000F84  ECFF  F00C         	call	___ftge	;wreg free
  4675  000F88  B0D8               	btfsc	status,0,c
  4676  000F8A  D037               	goto	l3833
  4677                           
  4678                           ;pulsonic.c: 216: {;pulsonic.c: 217: if (I>99)
  4679  000F8C  0100               	movlb	0	; () banked
  4680  000F8E  BFEE               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4681  000F90  D008               	goto	l3811
  4682  000F92  51EE               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4683  000F94  E104               	bnz	u4520
  4684  000F96  0E64               	movlw	100
  4685  000F98  5DED               	subwf	disp_show_quantity@I& (0+255),w,b
  4686  000F9A  A0D8               	btfss	status,0,c
  4687  000F9C  D002               	goto	l3811
  4688  000F9E                     u4520:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;pulsonic.c: 218: last_pos = 2;
  4692  000F9E  0E02               	movlw	2
  4693  000FA0  D00B               	goto	L4
  4694  000FA2                     l3811:
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;pulsonic.c: 219: else if (I>9)
  4698  000FA2  BFEE               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4699  000FA4  D008               	goto	l3815
  4700  000FA6  51EE               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4701  000FA8  E104               	bnz	u4530
  4702  000FAA  0E0A               	movlw	10
  4703  000FAC  5DED               	subwf	disp_show_quantity@I& (0+255),w,b
  4704  000FAE  A0D8               	btfss	status,0,c
  4705  000FB0  D002               	goto	l3815
  4706  000FB2                     u4530:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;pulsonic.c: 220: last_pos = 1;
  4710  000FB2  0E01               	movlw	1
  4711  000FB4  D001               	goto	L4
  4712  000FB6                     l3815:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;pulsonic.c: 221: else;pulsonic.c: 222: last_pos = 0;
  4716  000FB6  0E00               	movlw	0
  4717  000FB8                     L4:
  4718  000FB8  6FEC               	movwf	disp_show_quantity@last_pos& (0+255),b
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;pulsonic.c: 224: q = 0;
  4722  000FBA  0E00               	movlw	0
  4723  000FBC  6FEB               	movwf	disp_show_quantity@q& (0+255),b
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;pulsonic.c: 225: for (i=last_pos; i>=0; i--)
  4727  000FBE  C0EC  F0EF         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4728  000FC2                     l3819:
  4729                           
  4730                           ; BSR set to: 0
  4731  000FC2  BFEF               	btfsc	disp_show_quantity@i& (0+255),7,b
  4732  000FC4  0012               	return	
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;pulsonic.c: 226: {;pulsonic.c: 227: num = buff[i] - 0x30;
  4736  000FC6  51EF               	movf	disp_show_quantity@i& (0+255),w,b
  4737  000FC8  0FDD               	addlw	low disp_show_quantity@buff
  4738  000FCA  6ED9               	movwf	fsr2l,c
  4739  000FCC  6ADA               	clrf	fsr2h,c
  4740  000FCE  50DF               	movf	indf2,w,c
  4741  000FD0  0FD0               	addlw	208
  4742  000FD2  6FEA               	movwf	disp_show_quantity@num& (0+255),b
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;pulsonic.c: 228: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4746  000FD4  51EA               	movf	disp_show_quantity@num& (0+255),w,b
  4747  000FD6  0F01               	addlw	low _DISP7S_NUMS
  4748  000FD8  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4749  000FDA  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4750  000FDE                     	if	1	;There is more than 1 active tblptr byte
  4751  000FDE  0E08               	movlw	high __smallconst
  4752  000FE0  6EF7               	movwf	tblptrh,c
  4753  000FE2                     	endif
  4754  000FE2                     	if	0	;tblptru may be non-zero
  4755  000FE2                     	endif
  4756  000FE2                     	if	0	;tblptru may be non-zero
  4757  000FE2                     	endif
  4758  000FE2  0E76               	movlw	low (_pulsonic+118)
  4759  000FE4  25EB               	addwf	disp_show_quantity@q& (0+255),w,b
  4760  000FE6  6ED9               	movwf	fsr2l,c
  4761  000FE8  6ADA               	clrf	fsr2h,c
  4762  000FEA  0E01               	movlw	high (_pulsonic+118)
  4763  000FEC  22DA               	addwfc	fsr2h,f,c
  4764  000FEE  0008               	tblrd		*
  4765  000FF0  CFF5 FFDF          	movff	tablat,indf2
  4766                           
  4767                           ; BSR set to: 0
  4768  000FF4  2BEB               	incf	disp_show_quantity@q& (0+255),f,b
  4769                           
  4770                           ; BSR set to: 0
  4771  000FF6  07EF               	decf	disp_show_quantity@i& (0+255),f,b
  4772  000FF8  D7E4               	goto	l3819
  4773  000FFA                     l3833:
  4774                           
  4775                           ;pulsonic.c: 231: else;pulsonic.c: 232: {;pulsonic.c: 233: if (f<100.0)
  4776  000FFA  C031  F016         	movff	disp_show_quantity@f,___ftge@ff1
  4777  000FFE  C032  F017         	movff	disp_show_quantity@f+1,___ftge@ff1+1
  4778  001002  C033  F018         	movff	disp_show_quantity@f+2,___ftge@ff1+2
  4779  001006  0E00               	movlw	0
  4780  001008  6E19               	movwf	___ftge@ff2,c
  4781  00100A  0EC8               	movlw	200
  4782  00100C  6E1A               	movwf	___ftge@ff2+1,c
  4783  00100E  0E42               	movlw	66
  4784  001010  6E1B               	movwf	___ftge@ff2+2,c
  4785  001012  ECFF  F00C         	call	___ftge	;wreg free
  4786  001016  B0D8               	btfsc	status,0,c
  4787  001018  D041               	goto	l3867
  4788                           
  4789                           ;pulsonic.c: 234: {;pulsonic.c: 238: if (I>99)
  4790  00101A  0100               	movlb	0	; () banked
  4791  00101C  BFEE               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4792  00101E  D008               	goto	l3839
  4793  001020  51EE               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4794  001022  E104               	bnz	u4560
  4795  001024  0E64               	movlw	100
  4796  001026  5DED               	subwf	disp_show_quantity@I& (0+255),w,b
  4797  001028  A0D8               	btfss	status,0,c
  4798  00102A  D002               	goto	l3839
  4799  00102C                     u4560:
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;pulsonic.c: 239: {last_pos = 2;}
  4803  00102C  0E02               	movlw	2
  4804  00102E  D012               	goto	L5
  4805  001030                     l3839:
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;pulsonic.c: 240: else if (I>9)
  4809  001030  BFEE               	btfsc	(disp_show_quantity@I+1)& (0+255),7,b
  4810  001032  D008               	goto	l3843
  4811  001034  51EE               	movf	(disp_show_quantity@I+1)& (0+255),w,b
  4812  001036  E104               	bnz	u4570
  4813  001038  0E0A               	movlw	10
  4814  00103A  5DED               	subwf	disp_show_quantity@I& (0+255),w,b
  4815  00103C  A0D8               	btfss	status,0,c
  4816  00103E  D002               	goto	l3843
  4817  001040                     u4570:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;pulsonic.c: 241: {last_pos = 1;}
  4821  001040  0E01               	movlw	1
  4822  001042  D008               	goto	L5
  4823  001044                     l3843:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;pulsonic.c: 242: else;pulsonic.c: 243: {;pulsonic.c: 244: pulsonic.display7s[QUANT_DIG_
      +                          1] = DISP7S_NUMS[0];
  4827  001044  0E01               	movlw	low _DISP7S_NUMS
  4828  001046  6EF6               	movwf	tblptrl,c
  4829  001048                     	if	1	;There is more than 1 active tblptr byte
  4830  001048  0E08               	movlw	high _DISP7S_NUMS
  4831  00104A  6EF7               	movwf	tblptrh,c
  4832  00104C                     	endif
  4833  00104C                     	if	0	;There are less than 3 active tblptr bytes
  4834  00104C                     	endif
  4835  00104C  0008               	tblrd		*
  4836  00104E  CFF5 F177          	movff	tablat,_pulsonic+119
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;pulsonic.c: 245: last_pos = 0;
  4840  001052  0E00               	movlw	0
  4841  001054                     L5:
  4842  001054  6FEC               	movwf	disp_show_quantity@last_pos& (0+255),b
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;pulsonic.c: 246: };pulsonic.c: 248: q = 0;
  4846  001056  0E00               	movlw	0
  4847  001058  6FEB               	movwf	disp_show_quantity@q& (0+255),b
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;pulsonic.c: 249: for (i=last_pos; i>=0; i--)
  4851  00105A  C0EC  F0EF         	movff	disp_show_quantity@last_pos,disp_show_quantity@i
  4852  00105E                     l3851:
  4853                           
  4854                           ; BSR set to: 0
  4855  00105E  BFEF               	btfsc	disp_show_quantity@i& (0+255),7,b
  4856  001060  D01A               	goto	l3865
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;pulsonic.c: 250: {;pulsonic.c: 251: num = buff[i] - 0x30;
  4860  001062  51EF               	movf	disp_show_quantity@i& (0+255),w,b
  4861  001064  0FDD               	addlw	low disp_show_quantity@buff
  4862  001066  6ED9               	movwf	fsr2l,c
  4863  001068  6ADA               	clrf	fsr2h,c
  4864  00106A  50DF               	movf	indf2,w,c
  4865  00106C  0FD0               	addlw	208
  4866  00106E  6FEA               	movwf	disp_show_quantity@num& (0+255),b
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;pulsonic.c: 252: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4870  001070  51EA               	movf	disp_show_quantity@num& (0+255),w,b
  4871  001072  0F01               	addlw	low _DISP7S_NUMS
  4872  001074  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4873  001076  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4874  00107A                     	if	1	;There is more than 1 active tblptr byte
  4875  00107A  0E08               	movlw	high __smallconst
  4876  00107C  6EF7               	movwf	tblptrh,c
  4877  00107E                     	endif
  4878  00107E                     	if	0	;tblptru may be non-zero
  4879  00107E                     	endif
  4880  00107E                     	if	0	;tblptru may be non-zero
  4881  00107E                     	endif
  4882  00107E  0E76               	movlw	low (_pulsonic+118)
  4883  001080  25EB               	addwf	disp_show_quantity@q& (0+255),w,b
  4884  001082  6ED9               	movwf	fsr2l,c
  4885  001084  6ADA               	clrf	fsr2h,c
  4886  001086  0E01               	movlw	high (_pulsonic+118)
  4887  001088  22DA               	addwfc	fsr2h,f,c
  4888  00108A  0008               	tblrd		*
  4889  00108C  CFF5 FFDF          	movff	tablat,indf2
  4890                           
  4891                           ; BSR set to: 0
  4892  001090  2BEB               	incf	disp_show_quantity@q& (0+255),f,b
  4893                           
  4894                           ; BSR set to: 0
  4895  001092  07EF               	decf	disp_show_quantity@i& (0+255),f,b
  4896  001094  D7E4               	goto	l3851
  4897  001096                     l3865:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;pulsonic.c: 253: };pulsonic.c: 254: pulsonic.display7s[QUANT_DIG_1] |= 0x80;
  4901  001096  0101               	movlb	1	; () banked
  4902  001098  8F77               	bsf	(_pulsonic+119)& (0+255),7,b
  4903                           
  4904                           ;pulsonic.c: 255: }
  4905  00109A  0012               	return	
  4906  00109C                     l3867:
  4907                           
  4908                           ;pulsonic.c: 256: else;pulsonic.c: 257: {;pulsonic.c: 258: q = 0;
  4909  00109C  0E00               	movlw	0
  4910  00109E  0100               	movlb	0	; () banked
  4911  0010A0  6FEB               	movwf	disp_show_quantity@q& (0+255),b
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;pulsonic.c: 260: for (i=last_pos; i>=0; i--)
  4915  0010A2  0E02               	movlw	2
  4916  0010A4  6FEF               	movwf	disp_show_quantity@i& (0+255),b
  4917  0010A6                     l3875:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;pulsonic.c: 261: {;pulsonic.c: 262: num = buff[i] - 0x30;
  4921  0010A6  51EF               	movf	disp_show_quantity@i& (0+255),w,b
  4922  0010A8  0FDD               	addlw	low disp_show_quantity@buff
  4923  0010AA  6ED9               	movwf	fsr2l,c
  4924  0010AC  6ADA               	clrf	fsr2h,c
  4925  0010AE  50DF               	movf	indf2,w,c
  4926  0010B0  0FD0               	addlw	208
  4927  0010B2  6FEA               	movwf	disp_show_quantity@num& (0+255),b
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;pulsonic.c: 263: pulsonic.display7s[q++] = DISP7S_NUMS[num];
  4931  0010B4  51EA               	movf	disp_show_quantity@num& (0+255),w,b
  4932  0010B6  0F01               	addlw	low _DISP7S_NUMS
  4933  0010B8  6E34               	movwf	??_disp_show_quantity& (0+255),c
  4934  0010BA  C034  FFF6         	movff	??_disp_show_quantity,tblptrl
  4935  0010BE                     	if	1	;There is more than 1 active tblptr byte
  4936  0010BE  0E08               	movlw	high __smallconst
  4937  0010C0  6EF7               	movwf	tblptrh,c
  4938  0010C2                     	endif
  4939  0010C2                     	if	0	;tblptru may be non-zero
  4940  0010C2                     	endif
  4941  0010C2                     	if	0	;tblptru may be non-zero
  4942  0010C2                     	endif
  4943  0010C2  0E76               	movlw	low (_pulsonic+118)
  4944  0010C4  25EB               	addwf	disp_show_quantity@q& (0+255),w,b
  4945  0010C6  6ED9               	movwf	fsr2l,c
  4946  0010C8  6ADA               	clrf	fsr2h,c
  4947  0010CA  0E01               	movlw	high (_pulsonic+118)
  4948  0010CC  22DA               	addwfc	fsr2h,f,c
  4949  0010CE  0008               	tblrd		*
  4950  0010D0  CFF5 FFDF          	movff	tablat,indf2
  4951                           
  4952                           ; BSR set to: 0
  4953  0010D4  2BEB               	incf	disp_show_quantity@q& (0+255),f,b
  4954                           
  4955                           ; BSR set to: 0
  4956  0010D6  07EF               	decf	disp_show_quantity@i& (0+255),f,b
  4957                           
  4958                           ; BSR set to: 0
  4959  0010D8  BFEF               	btfsc	disp_show_quantity@i& (0+255),7,b
  4960  0010DA  0012               	return	
  4961  0010DC  D7E4               	goto	l3875
  4962  0010DE                     __end_of_disp_show_quantity:
  4963                           	opt callstack 0
  4964                           
  4965 ;; *************** function _itoa *****************
  4966 ;; Defined at:
  4967 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  buf             1   25[COMRAM] PTR unsigned char 
  4970 ;;		 -> disp_show_quantity@buff(10), 
  4971 ;;  val             2   26[COMRAM] int 
  4972 ;;  base            2   28[COMRAM] int 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  cp              1    0        PTR unsigned char 
  4975 ;;		 -> disp_show_quantity@buff(10), 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      PTR unsigned char 
  4978 ;; Registers used:
  4979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4985 ;;      Params:         5       0       0       0       0       0       0       0       0
  4986 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4988 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4989 ;;Total ram usage:        6 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    7
  4992 ;; This function calls:
  4993 ;;		_utoa
  4994 ;; This function is called by:
  4995 ;;		_disp_show_quantity
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text37
  5000  001E96                     __ptext37:
  5001                           	opt callstack 0
  5002  001E96                     _itoa:
  5003                           	opt callstack 22
  5004                           
  5005                           ;incstack = 0
  5006  001E96  AE1C               	btfss	itoa@val+1,7,c
  5007  001E98  D00A               	goto	l3665
  5008  001E9A  501A               	movf	itoa@buf,w,c
  5009  001E9C  6ED9               	movwf	fsr2l,c
  5010  001E9E  6ADA               	clrf	fsr2h,c
  5011  001EA0  0E2D               	movlw	45
  5012  001EA2  6EDF               	movwf	indf2,c
  5013  001EA4  2A1A               	incf	itoa@buf,f,c
  5014  001EA6  6C1B               	negf	itoa@val,c
  5015  001EA8  1E1C               	comf	itoa@val+1,f,c
  5016  001EAA  B0D8               	btfsc	status,0,c
  5017  001EAC  2A1C               	incf	itoa@val+1,f,c
  5018  001EAE                     l3665:
  5019  001EAE  C01A  F012         	movff	itoa@buf,utoa@buf
  5020  001EB2  C01B  F013         	movff	itoa@val,utoa@val
  5021  001EB6  C01C  F014         	movff	itoa@val+1,utoa@val+1
  5022  001EBA  C01D  F015         	movff	itoa@base,utoa@base
  5023  001EBE  C01E  F016         	movff	itoa@base+1,utoa@base+1
  5024  001EC2  EC75  F00C         	call	_utoa	;wreg free
  5025  001EC6  0012               	return		;funcret
  5026  001EC8                     __end_of_itoa:
  5027                           	opt callstack 0
  5028                           
  5029 ;; *************** function _utoa *****************
  5030 ;; Defined at:
  5031 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  buf             1   17[COMRAM] PTR unsigned char 
  5034 ;;		 -> disp_show_quantity@buff(10), 
  5035 ;;  val             2   18[COMRAM] unsigned int 
  5036 ;;  base            2   20[COMRAM] int 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  v               2   22[COMRAM] unsigned int 
  5039 ;;  c               1   24[COMRAM] unsigned char 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      PTR unsigned char 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5049 ;;      Params:         5       0       0       0       0       0       0       0       0
  5050 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5052 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5053 ;;Total ram usage:        8 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    6
  5056 ;; This function calls:
  5057 ;;		___lwdiv
  5058 ;;		___lwmod
  5059 ;; This function is called by:
  5060 ;;		_itoa
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text38
  5065  0018EA                     __ptext38:
  5066                           	opt callstack 0
  5067  0018EA                     _utoa:
  5068                           	opt callstack 22
  5069                           
  5070                           ;incstack = 0
  5071  0018EA  C013  F017         	movff	utoa@val,utoa@v
  5072  0018EE  C014  F018         	movff	utoa@val+1,utoa@v+1
  5073  0018F2                     l3533:
  5074  0018F2  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  5075  0018F6  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  5076  0018FA  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  5077  0018FE  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  5078  001902  ECC9  F00D         	call	___lwdiv	;wreg free
  5079  001906  C00B  F017         	movff	?___lwdiv,utoa@v
  5080  00190A  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  5081  00190E  2A12               	incf	utoa@buf,f,c
  5082  001910  5017               	movf	utoa@v,w,c
  5083  001912  1018               	iorwf	utoa@v+1,w,c
  5084  001914  A4D8               	btfss	status,2,c
  5085  001916  D7ED               	goto	l3533
  5086  001918  5012               	movf	utoa@buf,w,c
  5087  00191A  6ED9               	movwf	fsr2l,c
  5088  00191C  6ADA               	clrf	fsr2h,c
  5089  00191E  0E00               	movlw	0
  5090  001920  6EDF               	movwf	indf2,c
  5091  001922  0612               	decf	utoa@buf,f,c
  5092  001924                     l3543:
  5093  001924  C013  F00B         	movff	utoa@val,___lwmod@dividend
  5094  001928  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  5095  00192C  C015  F00D         	movff	utoa@base,___lwmod@divisor
  5096  001930  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  5097  001934  ECAD  F00E         	call	___lwmod	;wreg free
  5098  001938  500B               	movf	?___lwmod,w,c
  5099  00193A  6E19               	movwf	utoa@c,c
  5100  00193C  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  5101  001940  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  5102  001944  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  5103  001948  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  5104  00194C  ECC9  F00D         	call	___lwdiv	;wreg free
  5105  001950  C00B  F013         	movff	?___lwdiv,utoa@val
  5106  001954  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  5107  001958  0E09               	movlw	9
  5108  00195A  6419               	cpfsgt	utoa@c,c
  5109  00195C  D002               	goto	l1341
  5110  00195E  0E07               	movlw	7
  5111  001960  2619               	addwf	utoa@c,f,c
  5112  001962                     l1341:
  5113  001962  0E30               	movlw	48
  5114  001964  2619               	addwf	utoa@c,f,c
  5115  001966  5012               	movf	utoa@buf,w,c
  5116  001968  6ED9               	movwf	fsr2l,c
  5117  00196A  6ADA               	clrf	fsr2h,c
  5118  00196C  C019  FFDF         	movff	utoa@c,indf2
  5119  001970  0612               	decf	utoa@buf,f,c
  5120  001972  5013               	movf	utoa@val,w,c
  5121  001974  1014               	iorwf	utoa@val+1,w,c
  5122  001976  A4D8               	btfss	status,2,c
  5123  001978  D7D5               	goto	l3543
  5124                           
  5125                           ;	Return value of _utoa is never used
  5126  00197A  2A12               	incf	utoa@buf,f,c
  5127  00197C  0012               	return		;funcret
  5128  00197E                     __end_of_utoa:
  5129                           	opt callstack 0
  5130                           
  5131 ;; *************** function ___lwmod *****************
  5132 ;; Defined at:
  5133 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  dividend        2   10[COMRAM] unsigned int 
  5136 ;;  divisor         2   12[COMRAM] unsigned int 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  counter         1   14[COMRAM] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  2   10[COMRAM] unsigned int 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5148 ;;      Params:         4       0       0       0       0       0       0       0       0
  5149 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5151 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5152 ;;Total ram usage:        5 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    5
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_utoa
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text39
  5163  001D5A                     __ptext39:
  5164                           	opt callstack 0
  5165  001D5A                     ___lwmod:
  5166                           	opt callstack 22
  5167                           
  5168                           ;incstack = 0
  5169  001D5A  500D               	movf	___lwmod@divisor,w,c
  5170  001D5C  100E               	iorwf	___lwmod@divisor+1,w,c
  5171  001D5E  B4D8               	btfsc	status,2,c
  5172  001D60  D018               	goto	l1159
  5173  001D62  0E01               	movlw	1
  5174  001D64  6E0F               	movwf	___lwmod@counter,c
  5175  001D66  D004               	goto	l3429
  5176  001D68                     l3427:
  5177  001D68  90D8               	bcf	status,0,c
  5178  001D6A  360D               	rlcf	___lwmod@divisor,f,c
  5179  001D6C  360E               	rlcf	___lwmod@divisor+1,f,c
  5180  001D6E  2A0F               	incf	___lwmod@counter,f,c
  5181  001D70                     l3429:
  5182  001D70  AE0E               	btfss	___lwmod@divisor+1,7,c
  5183  001D72  D7FA               	goto	l3427
  5184  001D74                     u3660:
  5185  001D74  500D               	movf	___lwmod@divisor,w,c
  5186  001D76  5C0B               	subwf	___lwmod@dividend,w,c
  5187  001D78  500E               	movf	___lwmod@divisor+1,w,c
  5188  001D7A  580C               	subwfb	___lwmod@dividend+1,w,c
  5189  001D7C  A0D8               	btfss	status,0,c
  5190  001D7E  D004               	goto	l3435
  5191  001D80  500D               	movf	___lwmod@divisor,w,c
  5192  001D82  5E0B               	subwf	___lwmod@dividend,f,c
  5193  001D84  500E               	movf	___lwmod@divisor+1,w,c
  5194  001D86  5A0C               	subwfb	___lwmod@dividend+1,f,c
  5195  001D88                     l3435:
  5196  001D88  90D8               	bcf	status,0,c
  5197  001D8A  320E               	rrcf	___lwmod@divisor+1,f,c
  5198  001D8C  320D               	rrcf	___lwmod@divisor,f,c
  5199  001D8E  2E0F               	decfsz	___lwmod@counter,f,c
  5200  001D90  D7F1               	goto	u3660
  5201  001D92                     l1159:
  5202  001D92  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  5203  001D96  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  5204  001D9A  0012               	return		;funcret
  5205  001D9C                     __end_of___lwmod:
  5206                           	opt callstack 0
  5207                           
  5208 ;; *************** function ___lwdiv *****************
  5209 ;; Defined at:
  5210 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  dividend        2   10[COMRAM] unsigned int 
  5213 ;;  divisor         2   12[COMRAM] unsigned int 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  quotient        2   15[COMRAM] unsigned int 
  5216 ;;  counter         1   14[COMRAM] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  2   10[COMRAM] unsigned int 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5226 ;;      Params:         4       0       0       0       0       0       0       0       0
  5227 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5229 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5230 ;;Total ram usage:        7 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    5
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_utoa
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text40
  5241  001B92                     __ptext40:
  5242                           	opt callstack 0
  5243  001B92                     ___lwdiv:
  5244                           	opt callstack 22
  5245                           
  5246                           ;incstack = 0
  5247  001B92  0E00               	movlw	0
  5248  001B94  6E11               	movwf	___lwdiv@quotient+1,c
  5249  001B96  0E00               	movlw	0
  5250  001B98  6E10               	movwf	___lwdiv@quotient,c
  5251  001B9A  500D               	movf	___lwdiv@divisor,w,c
  5252  001B9C  100E               	iorwf	___lwdiv@divisor+1,w,c
  5253  001B9E  B4D8               	btfsc	status,2,c
  5254  001BA0  D01C               	goto	l1149
  5255  001BA2  0E01               	movlw	1
  5256  001BA4  6E0F               	movwf	___lwdiv@counter,c
  5257  001BA6  D004               	goto	l3409
  5258  001BA8                     l3407:
  5259  001BA8  90D8               	bcf	status,0,c
  5260  001BAA  360D               	rlcf	___lwdiv@divisor,f,c
  5261  001BAC  360E               	rlcf	___lwdiv@divisor+1,f,c
  5262  001BAE  2A0F               	incf	___lwdiv@counter,f,c
  5263  001BB0                     l3409:
  5264  001BB0  AE0E               	btfss	___lwdiv@divisor+1,7,c
  5265  001BB2  D7FA               	goto	l3407
  5266  001BB4                     u3630:
  5267  001BB4  90D8               	bcf	status,0,c
  5268  001BB6  3610               	rlcf	___lwdiv@quotient,f,c
  5269  001BB8  3611               	rlcf	___lwdiv@quotient+1,f,c
  5270  001BBA  500D               	movf	___lwdiv@divisor,w,c
  5271  001BBC  5C0B               	subwf	___lwdiv@dividend,w,c
  5272  001BBE  500E               	movf	___lwdiv@divisor+1,w,c
  5273  001BC0  580C               	subwfb	___lwdiv@dividend+1,w,c
  5274  001BC2  A0D8               	btfss	status,0,c
  5275  001BC4  D005               	goto	l3419
  5276  001BC6  500D               	movf	___lwdiv@divisor,w,c
  5277  001BC8  5E0B               	subwf	___lwdiv@dividend,f,c
  5278  001BCA  500E               	movf	___lwdiv@divisor+1,w,c
  5279  001BCC  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  5280  001BCE  8010               	bsf	___lwdiv@quotient,0,c
  5281  001BD0                     l3419:
  5282  001BD0  90D8               	bcf	status,0,c
  5283  001BD2  320E               	rrcf	___lwdiv@divisor+1,f,c
  5284  001BD4  320D               	rrcf	___lwdiv@divisor,f,c
  5285  001BD6  2E0F               	decfsz	___lwdiv@counter,f,c
  5286  001BD8  D7ED               	goto	u3630
  5287  001BDA                     l1149:
  5288  001BDA  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  5289  001BDE  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5290  001BE2  0012               	return		;funcret
  5291  001BE4                     __end_of___lwdiv:
  5292                           	opt callstack 0
  5293                           
  5294 ;; *************** function ___fttol *****************
  5295 ;; Defined at:
  5296 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  f1              3   33[COMRAM] float 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  lval            4   43[COMRAM] unsigned long 
  5301 ;;  exp1            1   47[COMRAM] unsigned char 
  5302 ;;  sign1           1   42[COMRAM] unsigned char 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  4   33[COMRAM] long 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5312 ;;      Params:         4       0       0       0       0       0       0       0       0
  5313 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5314 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5315 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5316 ;;Total ram usage:       15 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    5
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_disp_show_quantity
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text41
  5327  001614                     __ptext41:
  5328                           	opt callstack 0
  5329  001614                     ___fttol:
  5330                           	opt callstack 24
  5331                           
  5332                           ;incstack = 0
  5333  001614  C024  F026         	movff	___fttol@f1+2,??___fttol
  5334  001618  6A27               	clrf	(??___fttol+1)& (0+255),c
  5335  00161A  6A28               	clrf	(??___fttol+2)& (0+255),c
  5336  00161C  3423               	rlcf	___fttol@f1+1,w,c
  5337  00161E  3626               	rlcf	??___fttol& (0+255),f,c
  5338  001620  E301               	bnc	u4401
  5339  001622  8027               	bsf	(??___fttol+1)& (0+255),0,c
  5340  001624                     u4401:
  5341  001624  5026               	movf	??___fttol,w,c
  5342  001626  6E30               	movwf	___fttol@exp1,c
  5343  001628  5030               	movf	___fttol@exp1,w,c
  5344  00162A  A4D8               	btfss	status,2,c
  5345  00162C  D009               	goto	l3743
  5346  00162E                     u4410:
  5347  00162E  0E00               	movlw	0
  5348  001630  6E22               	movwf	?___fttol,c
  5349  001632  0E00               	movlw	0
  5350  001634  6E23               	movwf	?___fttol+1,c
  5351  001636  0E00               	movlw	0
  5352  001638  6E24               	movwf	?___fttol+2,c
  5353  00163A  0E00               	movlw	0
  5354  00163C  6E25               	movwf	?___fttol+3,c
  5355  00163E  0012               	return	
  5356  001640                     l3743:
  5357  001640  0E17               	movlw	23
  5358  001642  6E26               	movwf	??___fttol& (0+255),c
  5359  001644  C022  F027         	movff	___fttol@f1,??___fttol+1
  5360  001648  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  5361  00164C  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  5362  001650  2826               	incf	??___fttol,w,c
  5363  001652  6E2A               	movwf	(??___fttol+4)& (0+255),c
  5364  001654  D004               	goto	u4420
  5365  001656                     u4425:
  5366  001656  90D8               	bcf	status,0,c
  5367  001658  3229               	rrcf	??___fttol+3,f,c
  5368  00165A  3228               	rrcf	??___fttol+2,f,c
  5369  00165C  3227               	rrcf	??___fttol+1,f,c
  5370  00165E                     u4420:
  5371  00165E  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  5372  001660  D7FA               	goto	u4425
  5373  001662  5027               	movf	??___fttol+1,w,c
  5374  001664  6E2B               	movwf	___fttol@sign1,c
  5375  001666  8E23               	bsf	___fttol@f1+1,7,c
  5376  001668  0EFF               	movlw	255
  5377  00166A  1622               	andwf	___fttol@f1,f,c
  5378  00166C  0EFF               	movlw	255
  5379  00166E  1623               	andwf	___fttol@f1+1,f,c
  5380  001670  0E00               	movlw	0
  5381  001672  1624               	andwf	___fttol@f1+2,f,c
  5382  001674  5022               	movf	___fttol@f1,w,c
  5383  001676  6E2C               	movwf	___fttol@lval,c
  5384  001678  5023               	movf	___fttol@f1+1,w,c
  5385  00167A  6E2D               	movwf	___fttol@lval+1,c
  5386  00167C  5024               	movf	___fttol@f1+2,w,c
  5387  00167E  6E2E               	movwf	___fttol@lval+2,c
  5388  001680  6A2F               	clrf	___fttol@lval+3,c
  5389  001682  0E8E               	movlw	142
  5390  001684  5E30               	subwf	___fttol@exp1,f,c
  5391  001686  AE30               	btfss	___fttol@exp1,7,c
  5392  001688  D00D               	goto	l3765
  5393  00168A  5030               	movf	___fttol@exp1,w,c
  5394  00168C  0A80               	xorlw	128
  5395  00168E  0F8F               	addlw	143
  5396  001690  A0D8               	btfss	status,0,c
  5397  001692  D7CD               	goto	u4410
  5398  001694                     l3761:
  5399  001694  90D8               	bcf	status,0,c
  5400  001696  322F               	rrcf	___fttol@lval+3,f,c
  5401  001698  322E               	rrcf	___fttol@lval+2,f,c
  5402  00169A  322D               	rrcf	___fttol@lval+1,f,c
  5403  00169C  322C               	rrcf	___fttol@lval,f,c
  5404  00169E  3E30               	incfsz	___fttol@exp1,f,c
  5405  0016A0  D7F9               	goto	l3761
  5406  0016A2  D00D               	goto	u4460
  5407  0016A4                     l3765:
  5408  0016A4  0E17               	movlw	23
  5409  0016A6  6430               	cpfsgt	___fttol@exp1,c
  5410  0016A8  D007               	goto	l3773
  5411  0016AA  D7C1               	goto	u4410
  5412  0016AC                     l3771:
  5413  0016AC  90D8               	bcf	status,0,c
  5414  0016AE  362C               	rlcf	___fttol@lval,f,c
  5415  0016B0  362D               	rlcf	___fttol@lval+1,f,c
  5416  0016B2  362E               	rlcf	___fttol@lval+2,f,c
  5417  0016B4  362F               	rlcf	___fttol@lval+3,f,c
  5418  0016B6  0630               	decf	___fttol@exp1,f,c
  5419  0016B8                     l3773:
  5420  0016B8  5030               	movf	___fttol@exp1,w,c
  5421  0016BA  A4D8               	btfss	status,2,c
  5422  0016BC  D7F7               	goto	l3771
  5423  0016BE                     u4460:
  5424  0016BE  502B               	movf	___fttol@sign1,w,c
  5425  0016C0  B4D8               	btfsc	status,2,c
  5426  0016C2  D008               	goto	l3779
  5427  0016C4  1E2F               	comf	___fttol@lval+3,f,c
  5428  0016C6  1E2E               	comf	___fttol@lval+2,f,c
  5429  0016C8  1E2D               	comf	___fttol@lval+1,f,c
  5430  0016CA  6C2C               	negf	___fttol@lval,c
  5431  0016CC  0E00               	movlw	0
  5432  0016CE  222D               	addwfc	___fttol@lval+1,f,c
  5433  0016D0  222E               	addwfc	___fttol@lval+2,f,c
  5434  0016D2  222F               	addwfc	___fttol@lval+3,f,c
  5435  0016D4                     l3779:
  5436  0016D4  C02C  F022         	movff	___fttol@lval,?___fttol
  5437  0016D8  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  5438  0016DC  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  5439  0016E0  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  5440  0016E4  0012               	return		;funcret
  5441  0016E6                     __end_of___fttol:
  5442                           	opt callstack 0
  5443                           
  5444 ;; *************** function ___ftsub *****************
  5445 ;; Defined at:
  5446 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  f1              3   30[COMRAM] float 
  5449 ;;  f2              3   33[COMRAM] float 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  3   30[COMRAM] float 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5461 ;;      Params:         6       0       0       0       0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5464 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5465 ;;Total ram usage:        6 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    7
  5468 ;; This function calls:
  5469 ;;		___ftadd
  5470 ;; This function is called by:
  5471 ;;		_disp_show_quantity
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text42
  5476  001E1E                     __ptext42:
  5477                           	opt callstack 0
  5478  001E1E                     ___ftsub:
  5479                           	opt callstack 22
  5480                           
  5481                           ;incstack = 0
  5482  001E1E  5022               	movf	___ftsub@f2,w,c
  5483  001E20  1023               	iorwf	___ftsub@f2+1,w,c
  5484  001E22  1024               	iorwf	___ftsub@f2+2,w,c
  5485  001E24  B4D8               	btfsc	status,2,c
  5486  001E26  D006               	goto	l3721
  5487  001E28  0E00               	movlw	0
  5488  001E2A  1A22               	xorwf	___ftsub@f2,f,c
  5489  001E2C  0E00               	movlw	0
  5490  001E2E  1A23               	xorwf	___ftsub@f2+1,f,c
  5491  001E30  0E80               	movlw	128
  5492  001E32  1A24               	xorwf	___ftsub@f2+2,f,c
  5493  001E34                     l3721:
  5494  001E34  C01F  F013         	movff	___ftsub@f1,___ftadd@f1
  5495  001E38  C020  F014         	movff	___ftsub@f1+1,___ftadd@f1+1
  5496  001E3C  C021  F015         	movff	___ftsub@f1+2,___ftadd@f1+2
  5497  001E40  C022  F016         	movff	___ftsub@f2,___ftadd@f2
  5498  001E44  C023  F017         	movff	___ftsub@f2+1,___ftadd@f2+1
  5499  001E48  C024  F018         	movff	___ftsub@f2+2,___ftadd@f2+2
  5500  001E4C  EC6F  F008         	call	___ftadd	;wreg free
  5501  001E50  C013  F01F         	movff	?___ftadd,?___ftsub
  5502  001E54  C014  F020         	movff	?___ftadd+1,?___ftsub+1
  5503  001E58  C015  F021         	movff	?___ftadd+2,?___ftsub+2
  5504  001E5C  0012               	return		;funcret
  5505  001E5E                     __end_of___ftsub:
  5506                           	opt callstack 0
  5507                           
  5508 ;; *************** function ___ftadd *****************
  5509 ;; Defined at:
  5510 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  f1              3   18[COMRAM] float 
  5513 ;;  f2              3   21[COMRAM] float 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  exp1            1   29[COMRAM] unsigned char 
  5516 ;;  exp2            1   28[COMRAM] unsigned char 
  5517 ;;  sign            1   27[COMRAM] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  3   18[COMRAM] float 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5527 ;;      Params:         6       0       0       0       0       0       0       0       0
  5528 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5529 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5530 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5531 ;;Total ram usage:       12 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    6
  5534 ;; This function calls:
  5535 ;;		___ftpack
  5536 ;; This function is called by:
  5537 ;;		___ftsub
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text43
  5542  0010DE                     __ptext43:
  5543                           	opt callstack 0
  5544  0010DE                     ___ftadd:
  5545                           	opt callstack 22
  5546                           
  5547                           ;incstack = 0
  5548  0010DE  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  5549  0010E2  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  5550  0010E4  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  5551  0010E6  3414               	rlcf	___ftadd@f1+1,w,c
  5552  0010E8  3619               	rlcf	??___ftadd& (0+255),f,c
  5553  0010EA  E301               	bnc	u3681
  5554  0010EC  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  5555  0010EE                     u3681:
  5556  0010EE  5019               	movf	??___ftadd,w,c
  5557  0010F0  6E1E               	movwf	___ftadd@exp1,c
  5558  0010F2  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  5559  0010F6  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  5560  0010F8  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  5561  0010FA  3417               	rlcf	___ftadd@f2+1,w,c
  5562  0010FC  3619               	rlcf	??___ftadd& (0+255),f,c
  5563  0010FE  E301               	bnc	u3691
  5564  001100  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  5565  001102                     u3691:
  5566  001102  5019               	movf	??___ftadd,w,c
  5567  001104  6E1D               	movwf	___ftadd@exp2,c
  5568  001106  501E               	movf	___ftadd@exp1,w,c
  5569  001108  B4D8               	btfsc	status,2,c
  5570  00110A  D00A               	goto	u3720
  5571  00110C  501D               	movf	___ftadd@exp2,w,c
  5572  00110E  5C1E               	subwf	___ftadd@exp1,w,c
  5573  001110  B0D8               	btfsc	status,0,c
  5574  001112  D00D               	goto	l3447
  5575  001114  501E               	movf	___ftadd@exp1,w,c
  5576  001116  5C1D               	subwf	___ftadd@exp2,w,c
  5577  001118  6E19               	movwf	??___ftadd& (0+255),c
  5578  00111A  0E18               	movlw	24
  5579  00111C  6419               	cpfsgt	??___ftadd,c
  5580  00111E  D007               	goto	l3447
  5581  001120                     u3720:
  5582  001120  C016  F013         	movff	___ftadd@f2,?___ftadd
  5583  001124  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  5584  001128  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  5585  00112C  0012               	return	
  5586  00112E                     l3447:
  5587  00112E  501D               	movf	___ftadd@exp2,w,c
  5588  001130  B4D8               	btfsc	status,2,c
  5589  001132  D00A               	goto	u3750
  5590  001134  501E               	movf	___ftadd@exp1,w,c
  5591  001136  5C1D               	subwf	___ftadd@exp2,w,c
  5592  001138  B0D8               	btfsc	status,0,c
  5593  00113A  D00D               	goto	l3453
  5594  00113C  501D               	movf	___ftadd@exp2,w,c
  5595  00113E  5C1E               	subwf	___ftadd@exp1,w,c
  5596  001140  6E19               	movwf	??___ftadd& (0+255),c
  5597  001142  0E18               	movlw	24
  5598  001144  6419               	cpfsgt	??___ftadd,c
  5599  001146  D007               	goto	l3453
  5600  001148                     u3750:
  5601  001148  C013  F013         	movff	___ftadd@f1,?___ftadd
  5602  00114C  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  5603  001150  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  5604  001154  0012               	return	
  5605  001156                     l3453:
  5606  001156  0E06               	movlw	6
  5607  001158  6E1C               	movwf	___ftadd@sign,c
  5608  00115A  BE15               	btfsc	___ftadd@f1+2,7,c
  5609  00115C  8E1C               	bsf	___ftadd@sign,7,c
  5610  00115E  BE18               	btfsc	___ftadd@f2+2,7,c
  5611  001160  8C1C               	bsf	___ftadd@sign,6,c
  5612  001162  8E14               	bsf	___ftadd@f1+1,7,c
  5613  001164  0EFF               	movlw	255
  5614  001166  1613               	andwf	___ftadd@f1,f,c
  5615  001168  0EFF               	movlw	255
  5616  00116A  1614               	andwf	___ftadd@f1+1,f,c
  5617  00116C  0E00               	movlw	0
  5618  00116E  1615               	andwf	___ftadd@f1+2,f,c
  5619  001170  8E17               	bsf	___ftadd@f2+1,7,c
  5620  001172  0EFF               	movlw	255
  5621  001174  1616               	andwf	___ftadd@f2,f,c
  5622  001176  0EFF               	movlw	255
  5623  001178  1617               	andwf	___ftadd@f2+1,f,c
  5624  00117A  0E00               	movlw	0
  5625  00117C  1618               	andwf	___ftadd@f2+2,f,c
  5626  00117E  501D               	movf	___ftadd@exp2,w,c
  5627  001180  5C1E               	subwf	___ftadd@exp1,w,c
  5628  001182  B0D8               	btfsc	status,0,c
  5629  001184  D01B               	goto	l3479
  5630  001186                     u3780:
  5631  001186  90D8               	bcf	status,0,c
  5632  001188  3616               	rlcf	___ftadd@f2,f,c
  5633  00118A  3617               	rlcf	___ftadd@f2+1,f,c
  5634  00118C  3618               	rlcf	___ftadd@f2+2,f,c
  5635  00118E  061D               	decf	___ftadd@exp2,f,c
  5636  001190  501E               	movf	___ftadd@exp1,w,c
  5637  001192  181D               	xorwf	___ftadd@exp2,w,c
  5638  001194  B4D8               	btfsc	status,2,c
  5639  001196  D00D               	goto	l3477
  5640  001198  061C               	decf	___ftadd@sign,f,c
  5641  00119A  C01C  F019         	movff	___ftadd@sign,??___ftadd
  5642  00119E  0E07               	movlw	7
  5643  0011A0  1619               	andwf	??___ftadd,f,c
  5644  0011A2  B4D8               	btfsc	status,2,c
  5645  0011A4  D006               	goto	l3477
  5646  0011A6  D7EF               	goto	u3780
  5647  0011A8                     l3475:
  5648  0011A8  90D8               	bcf	status,0,c
  5649  0011AA  3215               	rrcf	___ftadd@f1+2,f,c
  5650  0011AC  3214               	rrcf	___ftadd@f1+1,f,c
  5651  0011AE  3213               	rrcf	___ftadd@f1,f,c
  5652  0011B0  2A1E               	incf	___ftadd@exp1,f,c
  5653  0011B2                     l3477:
  5654  0011B2  501D               	movf	___ftadd@exp2,w,c
  5655  0011B4  181E               	xorwf	___ftadd@exp1,w,c
  5656  0011B6  B4D8               	btfsc	status,2,c
  5657  0011B8  D01F               	goto	u3850
  5658  0011BA  D7F6               	goto	l3475
  5659  0011BC                     l3479:
  5660  0011BC  501E               	movf	___ftadd@exp1,w,c
  5661  0011BE  5C1D               	subwf	___ftadd@exp2,w,c
  5662  0011C0  B0D8               	btfsc	status,0,c
  5663  0011C2  D01A               	goto	u3850
  5664  0011C4                     u3820:
  5665  0011C4  90D8               	bcf	status,0,c
  5666  0011C6  3613               	rlcf	___ftadd@f1,f,c
  5667  0011C8  3614               	rlcf	___ftadd@f1+1,f,c
  5668  0011CA  3615               	rlcf	___ftadd@f1+2,f,c
  5669  0011CC  061E               	decf	___ftadd@exp1,f,c
  5670  0011CE  501E               	movf	___ftadd@exp1,w,c
  5671  0011D0  181D               	xorwf	___ftadd@exp2,w,c
  5672  0011D2  B4D8               	btfsc	status,2,c
  5673  0011D4  D00D               	goto	l3489
  5674  0011D6  061C               	decf	___ftadd@sign,f,c
  5675  0011D8  C01C  F019         	movff	___ftadd@sign,??___ftadd
  5676  0011DC  0E07               	movlw	7
  5677  0011DE  1619               	andwf	??___ftadd,f,c
  5678  0011E0  B4D8               	btfsc	status,2,c
  5679  0011E2  D006               	goto	l3489
  5680  0011E4  D7EF               	goto	u3820
  5681  0011E6                     l3487:
  5682  0011E6  90D8               	bcf	status,0,c
  5683  0011E8  3218               	rrcf	___ftadd@f2+2,f,c
  5684  0011EA  3217               	rrcf	___ftadd@f2+1,f,c
  5685  0011EC  3216               	rrcf	___ftadd@f2,f,c
  5686  0011EE  2A1D               	incf	___ftadd@exp2,f,c
  5687  0011F0                     l3489:
  5688  0011F0  501D               	movf	___ftadd@exp2,w,c
  5689  0011F2  181E               	xorwf	___ftadd@exp1,w,c
  5690  0011F4  A4D8               	btfss	status,2,c
  5691  0011F6  D7F7               	goto	l3487
  5692  0011F8                     u3850:
  5693  0011F8  AE1C               	btfss	___ftadd@sign,7,c
  5694  0011FA  D00C               	goto	l1000
  5695  0011FC  0EFF               	movlw	255
  5696  0011FE  1A13               	xorwf	___ftadd@f1,f,c
  5697  001200  0EFF               	movlw	255
  5698  001202  1A14               	xorwf	___ftadd@f1+1,f,c
  5699  001204  0EFF               	movlw	255
  5700  001206  1A15               	xorwf	___ftadd@f1+2,f,c
  5701  001208  0E01               	movlw	1
  5702  00120A  2613               	addwf	___ftadd@f1,f,c
  5703  00120C  0E00               	movlw	0
  5704  00120E  2214               	addwfc	___ftadd@f1+1,f,c
  5705  001210  0E00               	movlw	0
  5706  001212  2215               	addwfc	___ftadd@f1+2,f,c
  5707  001214                     l1000:
  5708  001214  AC1C               	btfss	___ftadd@sign,6,c
  5709  001216  D00C               	goto	l3495
  5710  001218  0EFF               	movlw	255
  5711  00121A  1A16               	xorwf	___ftadd@f2,f,c
  5712  00121C  0EFF               	movlw	255
  5713  00121E  1A17               	xorwf	___ftadd@f2+1,f,c
  5714  001220  0EFF               	movlw	255
  5715  001222  1A18               	xorwf	___ftadd@f2+2,f,c
  5716  001224  0E01               	movlw	1
  5717  001226  2616               	addwf	___ftadd@f2,f,c
  5718  001228  0E00               	movlw	0
  5719  00122A  2217               	addwfc	___ftadd@f2+1,f,c
  5720  00122C  0E00               	movlw	0
  5721  00122E  2218               	addwfc	___ftadd@f2+2,f,c
  5722  001230                     l3495:
  5723  001230  0E00               	movlw	0
  5724  001232  6E1C               	movwf	___ftadd@sign,c
  5725  001234  5013               	movf	___ftadd@f1,w,c
  5726  001236  2616               	addwf	___ftadd@f2,f,c
  5727  001238  5014               	movf	___ftadd@f1+1,w,c
  5728  00123A  2217               	addwfc	___ftadd@f2+1,f,c
  5729  00123C  5015               	movf	___ftadd@f1+2,w,c
  5730  00123E  2218               	addwfc	___ftadd@f2+2,f,c
  5731  001240  AE18               	btfss	___ftadd@f2+2,7,c
  5732  001242  D00E               	goto	l3505
  5733  001244  0EFF               	movlw	255
  5734  001246  1A16               	xorwf	___ftadd@f2,f,c
  5735  001248  0EFF               	movlw	255
  5736  00124A  1A17               	xorwf	___ftadd@f2+1,f,c
  5737  00124C  0EFF               	movlw	255
  5738  00124E  1A18               	xorwf	___ftadd@f2+2,f,c
  5739  001250  0E01               	movlw	1
  5740  001252  2616               	addwf	___ftadd@f2,f,c
  5741  001254  0E00               	movlw	0
  5742  001256  2217               	addwfc	___ftadd@f2+1,f,c
  5743  001258  0E00               	movlw	0
  5744  00125A  2218               	addwfc	___ftadd@f2+2,f,c
  5745  00125C  0E01               	movlw	1
  5746  00125E  6E1C               	movwf	___ftadd@sign,c
  5747  001260                     l3505:
  5748  001260  C016  F00B         	movff	___ftadd@f2,___ftpack@arg
  5749  001264  C017  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  5750  001268  C018  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  5751  00126C  C01E  F00E         	movff	___ftadd@exp1,___ftpack@exp
  5752  001270  C01C  F00F         	movff	___ftadd@sign,___ftpack@sign
  5753  001274  ECCE  F00B         	call	___ftpack	;wreg free
  5754  001278  C00B  F013         	movff	?___ftpack,?___ftadd
  5755  00127C  C00C  F014         	movff	?___ftpack+1,?___ftadd+1
  5756  001280  C00D  F015         	movff	?___ftpack+2,?___ftadd+2
  5757  001284  0012               	return		;funcret
  5758  001286                     __end_of___ftadd:
  5759                           	opt callstack 0
  5760                           
  5761 ;; *************** function ___ftmul *****************
  5762 ;; Defined at:
  5763 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  f1              3   18[COMRAM] float 
  5766 ;;  f2              3   21[COMRAM] float 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  5769 ;;  sign            1   32[COMRAM] unsigned char 
  5770 ;;  cntr            1   31[COMRAM] unsigned char 
  5771 ;;  exp             1   27[COMRAM] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  3   18[COMRAM] float 
  5774 ;; Registers used:
  5775 ;;		wreg, status,2, status,0, cstack
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5781 ;;      Params:         6       0       0       0       0       0       0       0       0
  5782 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5783 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5784 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5785 ;;Total ram usage:       15 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    6
  5788 ;; This function calls:
  5789 ;;		___ftpack
  5790 ;; This function is called by:
  5791 ;;		_disp_show_quantity
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text44
  5796  001520                     __ptext44:
  5797                           	opt callstack 0
  5798  001520                     ___ftmul:
  5799                           	opt callstack 23
  5800                           
  5801                           ;incstack = 0
  5802  001520  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  5803  001524  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  5804  001526  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  5805  001528  3414               	rlcf	___ftmul@f1+1,w,c
  5806  00152A  3619               	rlcf	??___ftmul& (0+255),f,c
  5807  00152C  E301               	bnc	u4321
  5808  00152E  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  5809  001530                     u4321:
  5810  001530  5019               	movf	??___ftmul,w,c
  5811  001532  6E1C               	movwf	___ftmul@exp,c
  5812  001534  501C               	movf	___ftmul@exp,w,c
  5813  001536  A4D8               	btfss	status,2,c
  5814  001538  D007               	goto	l3675
  5815  00153A  0E00               	movlw	0
  5816  00153C  6E13               	movwf	?___ftmul,c
  5817  00153E  0E00               	movlw	0
  5818  001540  6E14               	movwf	?___ftmul+1,c
  5819  001542  0E00               	movlw	0
  5820  001544  6E15               	movwf	?___ftmul+2,c
  5821  001546  0012               	return	
  5822  001548                     l3675:
  5823  001548  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  5824  00154C  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  5825  00154E  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  5826  001550  3417               	rlcf	___ftmul@f2+1,w,c
  5827  001552  3619               	rlcf	??___ftmul& (0+255),f,c
  5828  001554  E301               	bnc	u4341
  5829  001556  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  5830  001558                     u4341:
  5831  001558  5019               	movf	??___ftmul,w,c
  5832  00155A  6E21               	movwf	___ftmul@sign,c
  5833  00155C  5021               	movf	___ftmul@sign,w,c
  5834  00155E  A4D8               	btfss	status,2,c
  5835  001560  D007               	goto	l3681
  5836  001562  0E00               	movlw	0
  5837  001564  6E13               	movwf	?___ftmul,c
  5838  001566  0E00               	movlw	0
  5839  001568  6E14               	movwf	?___ftmul+1,c
  5840  00156A  0E00               	movlw	0
  5841  00156C  6E15               	movwf	?___ftmul+2,c
  5842  00156E  0012               	return	
  5843  001570                     l3681:
  5844  001570  5021               	movf	___ftmul@sign,w,c
  5845  001572  0F7B               	addlw	123
  5846  001574  261C               	addwf	___ftmul@exp,f,c
  5847  001576  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  5848  00157A  5018               	movf	___ftmul@f2+2,w,c
  5849  00157C  1A21               	xorwf	___ftmul@sign,f,c
  5850  00157E  0E80               	movlw	128
  5851  001580  1621               	andwf	___ftmul@sign,f,c
  5852  001582  8E14               	bsf	___ftmul@f1+1,7,c
  5853  001584  8E17               	bsf	___ftmul@f2+1,7,c
  5854  001586  0EFF               	movlw	255
  5855  001588  1616               	andwf	___ftmul@f2,f,c
  5856  00158A  0EFF               	movlw	255
  5857  00158C  1617               	andwf	___ftmul@f2+1,f,c
  5858  00158E  0E00               	movlw	0
  5859  001590  1618               	andwf	___ftmul@f2+2,f,c
  5860  001592  0E00               	movlw	0
  5861  001594  6E1D               	movwf	___ftmul@f3_as_product,c
  5862  001596  0E00               	movlw	0
  5863  001598  6E1E               	movwf	___ftmul@f3_as_product+1,c
  5864  00159A  0E00               	movlw	0
  5865  00159C  6E1F               	movwf	___ftmul@f3_as_product+2,c
  5866  00159E  0E07               	movlw	7
  5867  0015A0  6E20               	movwf	___ftmul@cntr,c
  5868  0015A2                     l3695:
  5869  0015A2  A013               	btfss	___ftmul@f1,0,c
  5870  0015A4  D006               	goto	l3699
  5871  0015A6  5016               	movf	___ftmul@f2,w,c
  5872  0015A8  261D               	addwf	___ftmul@f3_as_product,f,c
  5873  0015AA  5017               	movf	___ftmul@f2+1,w,c
  5874  0015AC  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  5875  0015AE  5018               	movf	___ftmul@f2+2,w,c
  5876  0015B0  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  5877  0015B2                     l3699:
  5878  0015B2  90D8               	bcf	status,0,c
  5879  0015B4  3215               	rrcf	___ftmul@f1+2,f,c
  5880  0015B6  3214               	rrcf	___ftmul@f1+1,f,c
  5881  0015B8  3213               	rrcf	___ftmul@f1,f,c
  5882  0015BA  90D8               	bcf	status,0,c
  5883  0015BC  3616               	rlcf	___ftmul@f2,f,c
  5884  0015BE  3617               	rlcf	___ftmul@f2+1,f,c
  5885  0015C0  3618               	rlcf	___ftmul@f2+2,f,c
  5886  0015C2  2E20               	decfsz	___ftmul@cntr,f,c
  5887  0015C4  D7EE               	goto	l3695
  5888  0015C6  0E09               	movlw	9
  5889  0015C8  6E20               	movwf	___ftmul@cntr,c
  5890  0015CA                     l3705:
  5891  0015CA  A013               	btfss	___ftmul@f1,0,c
  5892  0015CC  D006               	goto	l3709
  5893  0015CE  5016               	movf	___ftmul@f2,w,c
  5894  0015D0  261D               	addwf	___ftmul@f3_as_product,f,c
  5895  0015D2  5017               	movf	___ftmul@f2+1,w,c
  5896  0015D4  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  5897  0015D6  5018               	movf	___ftmul@f2+2,w,c
  5898  0015D8  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  5899  0015DA                     l3709:
  5900  0015DA  90D8               	bcf	status,0,c
  5901  0015DC  3215               	rrcf	___ftmul@f1+2,f,c
  5902  0015DE  3214               	rrcf	___ftmul@f1+1,f,c
  5903  0015E0  3213               	rrcf	___ftmul@f1,f,c
  5904  0015E2  90D8               	bcf	status,0,c
  5905  0015E4  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  5906  0015E6  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  5907  0015E8  321D               	rrcf	___ftmul@f3_as_product,f,c
  5908  0015EA  2E20               	decfsz	___ftmul@cntr,f,c
  5909  0015EC  D7EE               	goto	l3705
  5910  0015EE  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  5911  0015F2  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5912  0015F6  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5913  0015FA  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  5914  0015FE  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  5915  001602  ECCE  F00B         	call	___ftpack	;wreg free
  5916  001606  C00B  F013         	movff	?___ftpack,?___ftmul
  5917  00160A  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  5918  00160E  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  5919  001612  0012               	return		;funcret
  5920  001614                     __end_of___ftmul:
  5921                           	opt callstack 0
  5922                           
  5923 ;; *************** function ___ftge *****************
  5924 ;; Defined at:
  5925 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  ff1             3   21[COMRAM] float 
  5928 ;;  ff2             3   24[COMRAM] float 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;		None               void
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5940 ;;      Params:         6       0       0       0       0       0       0       0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5942 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5943 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5944 ;;Total ram usage:        9 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    5
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_ikey_parsing
  5951 ;;		_disp_show_quantity
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text45
  5956  0019FE                     __ptext45:
  5957                           	opt callstack 0
  5958  0019FE                     ___ftge:
  5959                           	opt callstack 23
  5960                           
  5961                           ;incstack = 0
  5962  0019FE  AE18               	btfss	___ftge@ff1+2,7,c
  5963  001A00  D00F               	goto	l3513
  5964  001A02  0E00               	movlw	0
  5965  001A04  6E1C               	movwf	??___ftge& (0+255),c
  5966  001A06  0E00               	movlw	0
  5967  001A08  6E1D               	movwf	(??___ftge+1)& (0+255),c
  5968  001A0A  0E80               	movlw	128
  5969  001A0C  6E1E               	movwf	(??___ftge+2)& (0+255),c
  5970  001A0E  5016               	movf	___ftge@ff1,w,c
  5971  001A10  5C1C               	subwf	??___ftge,w,c
  5972  001A12  6E16               	movwf	___ftge@ff1,c
  5973  001A14  5017               	movf	___ftge@ff1+1,w,c
  5974  001A16  581D               	subwfb	??___ftge+1,w,c
  5975  001A18  6E17               	movwf	___ftge@ff1+1,c
  5976  001A1A  5018               	movf	___ftge@ff1+2,w,c
  5977  001A1C  581E               	subwfb	??___ftge+2,w,c
  5978  001A1E  6E18               	movwf	___ftge@ff1+2,c
  5979  001A20                     l3513:
  5980  001A20  AE1B               	btfss	___ftge@ff2+2,7,c
  5981  001A22  D00F               	goto	l3517
  5982  001A24  0E00               	movlw	0
  5983  001A26  6E1C               	movwf	??___ftge& (0+255),c
  5984  001A28  0E00               	movlw	0
  5985  001A2A  6E1D               	movwf	(??___ftge+1)& (0+255),c
  5986  001A2C  0E80               	movlw	128
  5987  001A2E  6E1E               	movwf	(??___ftge+2)& (0+255),c
  5988  001A30  5019               	movf	___ftge@ff2,w,c
  5989  001A32  5C1C               	subwf	??___ftge,w,c
  5990  001A34  6E19               	movwf	___ftge@ff2,c
  5991  001A36  501A               	movf	___ftge@ff2+1,w,c
  5992  001A38  581D               	subwfb	??___ftge+1,w,c
  5993  001A3A  6E1A               	movwf	___ftge@ff2+1,c
  5994  001A3C  501B               	movf	___ftge@ff2+2,w,c
  5995  001A3E  581E               	subwfb	??___ftge+2,w,c
  5996  001A40  6E1B               	movwf	___ftge@ff2+2,c
  5997  001A42                     l3517:
  5998  001A42  0E00               	movlw	0
  5999  001A44  1A16               	xorwf	___ftge@ff1,f,c
  6000  001A46  0E00               	movlw	0
  6001  001A48  1A17               	xorwf	___ftge@ff1+1,f,c
  6002  001A4A  0E80               	movlw	128
  6003  001A4C  1A18               	xorwf	___ftge@ff1+2,f,c
  6004  001A4E  0E00               	movlw	0
  6005  001A50  1A19               	xorwf	___ftge@ff2,f,c
  6006  001A52  0E00               	movlw	0
  6007  001A54  1A1A               	xorwf	___ftge@ff2+1,f,c
  6008  001A56  0E80               	movlw	128
  6009  001A58  1A1B               	xorwf	___ftge@ff2+2,f,c
  6010  001A5A  5019               	movf	___ftge@ff2,w,c
  6011  001A5C  5C16               	subwf	___ftge@ff1,w,c
  6012  001A5E  501A               	movf	___ftge@ff2+1,w,c
  6013  001A60  5817               	subwfb	___ftge@ff1+1,w,c
  6014  001A62  501B               	movf	___ftge@ff2+2,w,c
  6015  001A64  5818               	subwfb	___ftge@ff1+2,w,c
  6016  001A66  B0D8               	btfsc	status,0,c
  6017  001A68  D002               	goto	l3523
  6018  001A6A  90D8               	bcf	status,0,c
  6019  001A6C  0012               	return	
  6020  001A6E                     l3523:
  6021  001A6E  80D8               	bsf	status,0,c
  6022  001A70  0012               	return		;funcret
  6023  001A72                     __end_of___ftge:
  6024                           	opt callstack 0
  6025                           
  6026 ;; *************** function ___awtoft *****************
  6027 ;; Defined at:
  6028 ;;		line 32 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/awtoft.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  c               2   18[COMRAM] int 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  sign            1   21[COMRAM] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  3   18[COMRAM] float 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6042 ;;      Params:         3       0       0       0       0       0       0       0       0
  6043 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6045 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:        4 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    6
  6049 ;; This function calls:
  6050 ;;		___ftpack
  6051 ;; This function is called by:
  6052 ;;		_disp_show_quantity
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text46
  6057  001E5E                     __ptext46:
  6058                           	opt callstack 0
  6059  001E5E                     ___awtoft:
  6060                           	opt callstack 23
  6061                           
  6062                           ;incstack = 0
  6063  001E5E  0E00               	movlw	0
  6064  001E60  6E16               	movwf	___awtoft@sign,c
  6065  001E62  AE14               	btfss	___awtoft@c+1,7,c
  6066  001E64  D006               	goto	l3733
  6067  001E66  6C13               	negf	___awtoft@c,c
  6068  001E68  1E14               	comf	___awtoft@c+1,f,c
  6069  001E6A  B0D8               	btfsc	status,0,c
  6070  001E6C  2A14               	incf	___awtoft@c+1,f,c
  6071  001E6E  0E01               	movlw	1
  6072  001E70  6E16               	movwf	___awtoft@sign,c
  6073  001E72                     l3733:
  6074  001E72  C013  F00B         	movff	___awtoft@c,___ftpack@arg
  6075  001E76  C014  F00C         	movff	___awtoft@c+1,___ftpack@arg+1
  6076  001E7A  6A0D               	clrf	___ftpack@arg+2,c
  6077  001E7C  0E8E               	movlw	142
  6078  001E7E  6E0E               	movwf	___ftpack@exp,c
  6079  001E80  C016  F00F         	movff	___awtoft@sign,___ftpack@sign
  6080  001E84  ECCE  F00B         	call	___ftpack	;wreg free
  6081  001E88  C00B  F013         	movff	?___ftpack,?___awtoft
  6082  001E8C  C00C  F014         	movff	?___ftpack+1,?___awtoft+1
  6083  001E90  C00D  F015         	movff	?___ftpack+2,?___awtoft+2
  6084  001E94  0012               	return		;funcret
  6085  001E96                     __end_of___awtoft:
  6086                           	opt callstack 0
  6087                           
  6088 ;; *************** function ___ftpack *****************
  6089 ;; Defined at:
  6090 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  arg             3   10[COMRAM] unsigned um
  6093 ;;  exp             1   13[COMRAM] unsigned char 
  6094 ;;  sign            1   14[COMRAM] unsigned char 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  3   10[COMRAM] float 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6106 ;;      Params:         5       0       0       0       0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6108 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6109 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6110 ;;Total ram usage:        8 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    5
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		___awtoft
  6117 ;;		___ftadd
  6118 ;;		___ftmul
  6119 ;;		___lwtoft
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text47
  6124  00179C                     __ptext47:
  6125                           	opt callstack 0
  6126  00179C                     ___ftpack:
  6127                           	opt callstack 22
  6128                           
  6129                           ;incstack = 0
  6130  00179C  500E               	movf	___ftpack@exp,w,c
  6131  00179E  B4D8               	btfsc	status,2,c
  6132  0017A0  D005               	goto	u3550
  6133  0017A2  500B               	movf	___ftpack@arg,w,c
  6134  0017A4  100C               	iorwf	___ftpack@arg+1,w,c
  6135  0017A6  100D               	iorwf	___ftpack@arg+2,w,c
  6136  0017A8  A4D8               	btfss	status,2,c
  6137  0017AA  D00C               	goto	l3375
  6138  0017AC                     u3550:
  6139  0017AC  0E00               	movlw	0
  6140  0017AE  6E0B               	movwf	?___ftpack,c
  6141  0017B0  0E00               	movlw	0
  6142  0017B2  6E0C               	movwf	?___ftpack+1,c
  6143  0017B4  0E00               	movlw	0
  6144  0017B6  6E0D               	movwf	?___ftpack+2,c
  6145  0017B8  0012               	return	
  6146  0017BA                     l3373:
  6147  0017BA  2A0E               	incf	___ftpack@exp,f,c
  6148  0017BC  90D8               	bcf	status,0,c
  6149  0017BE  320D               	rrcf	___ftpack@arg+2,f,c
  6150  0017C0  320C               	rrcf	___ftpack@arg+1,f,c
  6151  0017C2  320B               	rrcf	___ftpack@arg,f,c
  6152  0017C4                     l3375:
  6153  0017C4  0E00               	movlw	0
  6154  0017C6  140B               	andwf	___ftpack@arg,w,c
  6155  0017C8  6E10               	movwf	??___ftpack& (0+255),c
  6156  0017CA  0E00               	movlw	0
  6157  0017CC  140C               	andwf	___ftpack@arg+1,w,c
  6158  0017CE  6E11               	movwf	(??___ftpack+1)& (0+255),c
  6159  0017D0  0EFE               	movlw	254
  6160  0017D2  140D               	andwf	___ftpack@arg+2,w,c
  6161  0017D4  6E12               	movwf	(??___ftpack+2)& (0+255),c
  6162  0017D6  5010               	movf	??___ftpack,w,c
  6163  0017D8  1011               	iorwf	??___ftpack+1,w,c
  6164  0017DA  1012               	iorwf	??___ftpack+2,w,c
  6165  0017DC  B4D8               	btfsc	status,2,c
  6166  0017DE  D00C               	goto	l3381
  6167  0017E0  D7EC               	goto	l3373
  6168  0017E2                     l3377:
  6169  0017E2  2A0E               	incf	___ftpack@exp,f,c
  6170  0017E4  0E01               	movlw	1
  6171  0017E6  260B               	addwf	___ftpack@arg,f,c
  6172  0017E8  0E00               	movlw	0
  6173  0017EA  220C               	addwfc	___ftpack@arg+1,f,c
  6174  0017EC  0E00               	movlw	0
  6175  0017EE  220D               	addwfc	___ftpack@arg+2,f,c
  6176  0017F0  90D8               	bcf	status,0,c
  6177  0017F2  320D               	rrcf	___ftpack@arg+2,f,c
  6178  0017F4  320C               	rrcf	___ftpack@arg+1,f,c
  6179  0017F6  320B               	rrcf	___ftpack@arg,f,c
  6180  0017F8                     l3381:
  6181  0017F8  0E00               	movlw	0
  6182  0017FA  140B               	andwf	___ftpack@arg,w,c
  6183  0017FC  6E10               	movwf	??___ftpack& (0+255),c
  6184  0017FE  0E00               	movlw	0
  6185  001800  140C               	andwf	___ftpack@arg+1,w,c
  6186  001802  6E11               	movwf	(??___ftpack+1)& (0+255),c
  6187  001804  0EFF               	movlw	255
  6188  001806  140D               	andwf	___ftpack@arg+2,w,c
  6189  001808  6E12               	movwf	(??___ftpack+2)& (0+255),c
  6190  00180A  5010               	movf	??___ftpack,w,c
  6191  00180C  1011               	iorwf	??___ftpack+1,w,c
  6192  00180E  1012               	iorwf	??___ftpack+2,w,c
  6193  001810  B4D8               	btfsc	status,2,c
  6194  001812  D006               	goto	l3385
  6195  001814  D7E6               	goto	l3377
  6196  001816                     l3383:
  6197  001816  060E               	decf	___ftpack@exp,f,c
  6198  001818  90D8               	bcf	status,0,c
  6199  00181A  360B               	rlcf	___ftpack@arg,f,c
  6200  00181C  360C               	rlcf	___ftpack@arg+1,f,c
  6201  00181E  360D               	rlcf	___ftpack@arg+2,f,c
  6202  001820                     l3385:
  6203  001820  BE0C               	btfsc	___ftpack@arg+1,7,c
  6204  001822  D003               	goto	u3590
  6205  001824  0E02               	movlw	2
  6206  001826  600E               	cpfslt	___ftpack@exp,c
  6207  001828  D7F6               	goto	l3383
  6208  00182A                     u3590:
  6209  00182A  A00E               	btfss	___ftpack@exp,0,c
  6210  00182C  9E0C               	bcf	___ftpack@arg+1,7,c
  6211  00182E  90D8               	bcf	status,0,c
  6212  001830  320E               	rrcf	___ftpack@exp,f,c
  6213  001832  500E               	movf	___ftpack@exp,w,c
  6214  001834  120D               	iorwf	___ftpack@arg+2,f,c
  6215  001836  500F               	movf	___ftpack@sign,w,c
  6216  001838  A4D8               	btfss	status,2,c
  6217  00183A  8E0D               	bsf	___ftpack@arg+2,7,c
  6218  00183C  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  6219  001840  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  6220  001844  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  6221  001848  0012               	return		;funcret
  6222  00184A                     __end_of___ftpack:
  6223                           	opt callstack 0
  6224                           
  6225 ;; *************** function _INTERRUPCION *****************
  6226 ;; Defined at:
  6227 ;;		line 324 in file "main.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;		None
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6241 ;;      Params:         0       0       0       0       0       0       0       0       0
  6242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6243 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6244 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6245 ;;Total ram usage:        6 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    4
  6248 ;; This function calls:
  6249 ;;		_mpap_job
  6250 ;; This function is called by:
  6251 ;;		Interrupt level 2
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	intcode
  6256  000008                     __pintcode:
  6257                           	opt callstack 0
  6258  000008                     _INTERRUPCION:
  6259                           	opt callstack 22
  6260                           
  6261                           ;incstack = 0
  6262  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6263  00000A  ED65  F00E         	call	int_func,f	;refresh shadow registers
  6264                           
  6265                           	psect	intcode_body
  6266  001CCA                     __pintcode_body:
  6267                           	opt callstack 22
  6268  001CCA                     int_func:
  6269                           	opt callstack 22
  6270  001CCA  0006               	pop		; remove dummy address from shadow register refresh
  6271  001CCC  CFFA F005          	movff	pclath,??_INTERRUPCION
  6272  001CD0  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  6273  001CD4  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  6274  001CD8  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  6275  001CDC  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  6276  001CE0  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  6277                           
  6278                           ;main.c: 326: if (TMR0IF)
  6279  001CE4  A4F2               	btfss	4082,2,c	;volatile
  6280  001CE6  D007               	goto	i2l134
  6281                           
  6282                           ;main.c: 327: {;main.c: 328: isr_flag.f1ms = 1;
  6283  001CE8  804A               	bsf	_isr_flag,0,c	;volatile
  6284                           
  6285                           ;main.c: 329: mpap_job();
  6286  001CEA  EC40  F00E         	call	_mpap_job	;wreg free
  6287                           
  6288                           ;main.c: 331: TMR0IF = 0;
  6289  001CEE  94F2               	bcf	4082,2,c	;volatile
  6290                           
  6291                           ;main.c: 332: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  6292  001CF0  68D7               	setf	4055,c	;volatile
  6293                           
  6294                           ;main.c: 333: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  6295  001CF2  0ED1               	movlw	209
  6296  001CF4  6ED6               	movwf	4054,c	;volatile
  6297  001CF6                     i2l134:
  6298  001CF6  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  6299  001CFA  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  6300  001CFE  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  6301  001D02  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  6302  001D06  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  6303  001D0A  C005  FFFA         	movff	??_INTERRUPCION,pclath
  6304  001D0E  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6305  001D10  0011               	retfie		f
  6306  001D12                     __end_of_INTERRUPCION:
  6307                           	opt callstack 0
  6308                           
  6309 ;; *************** function _mpap_job *****************
  6310 ;; Defined at:
  6311 ;;		line 151 in file "mpap.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;		None
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  cod_ret         1    0        char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      char 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0
  6326 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6328 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6329 ;;Total ram usage:        1 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    3
  6332 ;; This function calls:
  6333 ;;		__mpap_off
  6334 ;;		_mpap_homming
  6335 ;;		_mpap_normal_mode
  6336 ;; This function is called by:
  6337 ;;		_INTERRUPCION
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text49
  6342  001C80                     __ptext49:
  6343                           	opt callstack 0
  6344  001C80                     _mpap_job:
  6345                           	opt callstack 22
  6346                           
  6347                           ;mpap.c: 153: int8_t cod_ret;;mpap.c: 155: if (mpap.mode == HOMMING_MODE)
  6348                           
  6349                           ;incstack = 0
  6350  001C80  0E02               	movlw	2
  6351  001C82  183E               	xorwf	_mpap+7,w,c	;volatile
  6352  001C84  A4D8               	btfss	status,2,c
  6353  001C86  D003               	goto	i2l3257
  6354  001C88  EC9D  F00D         	call	_mpap_homming	;wreg free
  6355  001C8C  0012               	return	
  6356  001C8E                     i2l3257:
  6357                           
  6358                           ;mpap.c: 158: else if (mpap.mode == NORMAL_MODE)
  6359  001C8E  0E03               	movlw	3
  6360  001C90  183E               	xorwf	_mpap+7,w,c	;volatile
  6361  001C92  A4D8               	btfss	status,2,c
  6362  001C94  D003               	goto	i2l3261
  6363  001C96  EC89  F00E         	call	_mpap_normal_mode	;wreg free
  6364  001C9A  0012               	return	
  6365  001C9C                     i2l3261:
  6366                           
  6367                           ;mpap.c: 161: else if (mpap.mode == STALL_MODE)
  6368  001C9C  043E               	decf	_mpap+7,w,c	;volatile
  6369  001C9E  A4D8               	btfss	status,2,c
  6370  001CA0  0012               	return	
  6371                           
  6372                           ;mpap.c: 162: {;mpap.c: 163: mpap.numSteps_tomove = 0x00;
  6373  001CA2  0E00               	movlw	0
  6374  001CA4  6E3C               	movwf	_mpap+5,c	;volatile
  6375  001CA6  0E00               	movlw	0
  6376  001CA8  6E3B               	movwf	_mpap+4,c	;volatile
  6377                           
  6378                           ;mpap.c: 164: mpap_off();
  6379  001CAA  D801               	call	i2u344_48
  6380  001CAC  D00B               	goto	i2u344_49
  6381  001CAE                     i2u344_48:
  6382  001CAE  0005               	push	
  6383  001CB0  0100               	movlb	0	; () banked
  6384  001CB2  6EFA               	movwf	pclath,c
  6385  001CB4  51DB               	movf	_mpap_off& (0+255),w,b
  6386  001CB6  6EFD               	movwf	tosl,c
  6387  001CB8  51DC               	movf	(_mpap_off+1)& (0+255),w,b
  6388  001CBA  6EFE               	movwf	tosh,c
  6389  001CBC  50F8               	movf	tblptru,w,c
  6390  001CBE  6EFF               	movwf	tosu,c
  6391  001CC0  50FA               	movf	pclath,w,c
  6392  001CC2  0012               	return		;indir
  6393  001CC4                     i2u344_49:
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;mpap.c: 166: mpap.mode = IDLE_MODE;
  6397  001CC4  0E00               	movlw	0
  6398  001CC6  6E3E               	movwf	_mpap+7,c	;volatile
  6399  001CC8  0012               	return	
  6400  001CCA                     __end_of_mpap_job:
  6401                           	opt callstack 0
  6402                           
  6403 ;; *************** function _mpap_normal_mode *****************
  6404 ;; Defined at:
  6405 ;;		line 131 in file "mpap.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  cod_ret         1    1[COMRAM] char 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      char 
  6412 ;; Registers used:
  6413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0
  6420 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6422 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6423 ;;Total ram usage:        1 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    2
  6426 ;; This function calls:
  6427 ;;		_mpap_do1step
  6428 ;; This function is called by:
  6429 ;;		_mpap_job
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text50
  6434  001D12                     __ptext50:
  6435                           	opt callstack 0
  6436  001D12                     _mpap_normal_mode:
  6437                           	opt callstack 22
  6438                           
  6439                           ;mpap.c: 133: int8_t cod_ret = 0;
  6440                           
  6441                           ;incstack = 0
  6442  001D12  0E00               	movlw	0
  6443  001D14  6E02               	movwf	mpap_normal_mode@cod_ret,c
  6444                           
  6445                           ;mpap.c: 134: if (mpap.numSteps_tomove!=0)
  6446  001D16  503B               	movf	_mpap+4,w,c	;volatile
  6447  001D18  103C               	iorwf	_mpap+5,w,c	;volatile
  6448  001D1A  B4D8               	btfsc	status,2,c
  6449  001D1C  D01C               	goto	i2l571
  6450                           
  6451                           ;mpap.c: 135: {;mpap.c: 136: mpap_do1step(mpap.KI);
  6452  001D1E  503D               	movf	_mpap+6,w,c	;volatile
  6453  001D20  ECCE  F00E         	call	_mpap_do1step
  6454                           
  6455                           ;mpap.c: 138: mpap.counter_steps+= mpap.KI;
  6456  001D24  503D               	movf	_mpap+6,w,c	;volatile
  6457  001D26  2639               	addwf	_mpap+2,f,c	;volatile
  6458  001D28  0E00               	movlw	0
  6459  001D2A  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6460  001D2C  0EFF               	movlw	255
  6461  001D2E  223A               	addwfc	_mpap+3,f,c	;volatile
  6462                           
  6463                           ;mpap.c: 140: mpap.numSteps_current+= mpap.KI;
  6464  001D30  503D               	movf	_mpap+6,w,c	;volatile
  6465  001D32  2637               	addwf	_mpap,f,c	;volatile
  6466  001D34  0E00               	movlw	0
  6467  001D36  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6468  001D38  0EFF               	movlw	255
  6469  001D3A  2238               	addwfc	_mpap+1,f,c	;volatile
  6470                           
  6471                           ;mpap.c: 142: if ( mpap.counter_steps== mpap.numSteps_tomove)
  6472  001D3C  503B               	movf	_mpap+4,w,c	;volatile
  6473  001D3E  1839               	xorwf	_mpap+2,w,c	;volatile
  6474  001D40  E10A               	bnz	i2l571
  6475  001D42  503C               	movf	_mpap+5,w,c	;volatile
  6476  001D44  183A               	xorwf	_mpap+3,w,c	;volatile
  6477  001D46  A4D8               	btfss	status,2,c
  6478  001D48  D006               	goto	i2l571
  6479                           
  6480                           ;mpap.c: 143: {;mpap.c: 144: mpap.numSteps_tomove = 0;
  6481  001D4A  0E00               	movlw	0
  6482  001D4C  6E3C               	movwf	_mpap+5,c	;volatile
  6483  001D4E  0E00               	movlw	0
  6484  001D50  6E3B               	movwf	_mpap+4,c	;volatile
  6485                           
  6486                           ;mpap.c: 145: cod_ret = 1;
  6487  001D52  0E01               	movlw	1
  6488  001D54  6E02               	movwf	mpap_normal_mode@cod_ret,c
  6489  001D56                     i2l571:
  6490                           
  6491                           ;mpap.c: 146: };mpap.c: 147: };mpap.c: 148: return cod_ret;
  6492  001D56  5002               	movf	mpap_normal_mode@cod_ret,w,c
  6493  001D58  0012               	return		;funcret
  6494  001D5A                     __end_of_mpap_normal_mode:
  6495                           	opt callstack 0
  6496                           
  6497 ;; *************** function _mpap_homming *****************
  6498 ;; Defined at:
  6499 ;;		line 108 in file "mpap.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;		None
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  cod_ret         1    2[COMRAM] char 
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      char 
  6506 ;; Registers used:
  6507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6513 ;;      Params:         0       0       0       0       0       0       0       0       0
  6514 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6515 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6516 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6517 ;;Total ram usage:        2 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:    2
  6520 ;; This function calls:
  6521 ;;		_mpap_do1step
  6522 ;; This function is called by:
  6523 ;;		_mpap_job
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text51
  6528  001B3A                     __ptext51:
  6529                           	opt callstack 0
  6530  001B3A                     _mpap_homming:
  6531                           	opt callstack 22
  6532                           
  6533                           ;mpap.c: 110: int8_t cod_ret = 0;
  6534                           
  6535                           ;incstack = 0
  6536  001B3A  0E00               	movlw	0
  6537  001B3C  6E03               	movwf	mpap_homming@cod_ret,c
  6538                           
  6539                           ;mpap.c: 111: if (mpap.numSteps_tomove!=0)
  6540  001B3E  503B               	movf	_mpap+4,w,c	;volatile
  6541  001B40  103C               	iorwf	_mpap+5,w,c	;volatile
  6542  001B42  B4D8               	btfsc	status,2,c
  6543  001B44  D024               	goto	i2l565
  6544                           
  6545                           ;mpap.c: 112: {;mpap.c: 113: mpap_do1step(mpap.KI);
  6546  001B46  503D               	movf	_mpap+6,w,c	;volatile
  6547  001B48  ECCE  F00E         	call	_mpap_do1step
  6548                           
  6549                           ;mpap.c: 115: mpap.counter_steps+= mpap.KI;
  6550  001B4C  503D               	movf	_mpap+6,w,c	;volatile
  6551  001B4E  2639               	addwf	_mpap+2,f,c	;volatile
  6552  001B50  0E00               	movlw	0
  6553  001B52  BE3D               	btfsc	_mpap+6,7,c	;volatile
  6554  001B54  0EFF               	movlw	255
  6555  001B56  223A               	addwfc	_mpap+3,f,c	;volatile
  6556                           
  6557                           ;mpap.c: 117: if (((PORTE & (1<<1))>>1) == 0)
  6558  001B58  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  6559  001B5C  90D8               	bcf	status,0,c
  6560  001B5E  3202               	rrcf	??_mpap_homming,f,c
  6561  001B60  B002               	btfsc	??_mpap_homming,0,c
  6562  001B62  D006               	goto	i2l2905
  6563                           
  6564                           ;mpap.c: 118: {;mpap.c: 119: mpap.numSteps_tomove = 0x0000;
  6565  001B64  0E00               	movlw	0
  6566  001B66  6E3C               	movwf	_mpap+5,c	;volatile
  6567  001B68  0E00               	movlw	0
  6568  001B6A  6E3B               	movwf	_mpap+4,c	;volatile
  6569                           
  6570                           ;mpap.c: 120: cod_ret = 1;
  6571  001B6C  0E01               	movlw	1
  6572  001B6E  6E03               	movwf	mpap_homming@cod_ret,c
  6573  001B70                     i2l2905:
  6574                           
  6575                           ;mpap.c: 121: };mpap.c: 122: if ( mpap.counter_steps == mpap.numSteps_tomove)
  6576  001B70  503B               	movf	_mpap+4,w,c	;volatile
  6577  001B72  1839               	xorwf	_mpap+2,w,c	;volatile
  6578  001B74  E10C               	bnz	i2l565
  6579  001B76  503C               	movf	_mpap+5,w,c	;volatile
  6580  001B78  183A               	xorwf	_mpap+3,w,c	;volatile
  6581  001B7A  A4D8               	btfss	status,2,c
  6582  001B7C  D008               	goto	i2l565
  6583                           
  6584                           ;mpap.c: 123: {;mpap.c: 124: mpap.numSteps_tomove = 0x0000;
  6585  001B7E  0E00               	movlw	0
  6586  001B80  6E3C               	movwf	_mpap+5,c	;volatile
  6587  001B82  0E00               	movlw	0
  6588  001B84  6E3B               	movwf	_mpap+4,c	;volatile
  6589                           
  6590                           ;mpap.c: 125: cod_ret = 1;
  6591  001B86  0E01               	movlw	1
  6592  001B88  6E03               	movwf	mpap_homming@cod_ret,c
  6593                           
  6594                           ;mpap.c: 126: pulsonic.errors.flag.mpap_home_sensor = 1;
  6595  001B8A  0101               	movlb	1	; () banked
  6596  001B8C  8175               	bsf	(_pulsonic+117)& (0+255),0,b
  6597  001B8E                     i2l565:
  6598                           
  6599                           ;mpap.c: 127: };mpap.c: 128: };mpap.c: 129: return cod_ret;
  6600  001B8E  5003               	movf	mpap_homming@cod_ret,w,c
  6601  001B90  0012               	return		;funcret
  6602  001B92                     __end_of_mpap_homming:
  6603                           	opt callstack 0
  6604                           
  6605 ;; *************** function _mpap_do1step *****************
  6606 ;; Defined at:
  6607 ;;		line 88 in file "mpap.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  KI              1    wreg     char 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  KI              1    0[COMRAM] char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0
  6622 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6624 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6625 ;;Total ram usage:        1 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:    1
  6628 ;; This function calls:
  6629 ;;		__mpap_step1
  6630 ;;		__mpap_step2
  6631 ;;		__mpap_step3
  6632 ;;		__mpap_step4
  6633 ;; This function is called by:
  6634 ;;		_mpap_homming
  6635 ;;		_mpap_normal_mode
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text52
  6640  001D9C                     __ptext52:
  6641                           	opt callstack 0
  6642  001D9C                     _mpap_do1step:
  6643                           	opt callstack 22
  6644                           
  6645                           ;incstack = 0
  6646                           ;mpap_do1step@KI stored from wreg
  6647  001D9C  6E01               	movwf	mpap_do1step@KI,c
  6648                           
  6649                           ;mpap.c: 90: static int8_t i = -1;;mpap.c: 92: i= i + KI;
  6650  001D9E  504B               	movf	mpap_do1step@i,w,c
  6651  001DA0  2401               	addwf	mpap_do1step@KI,w,c
  6652  001DA2  6E4B               	movwf	mpap_do1step@i,c
  6653                           
  6654                           ;mpap.c: 94: if (i>3){i=0;}
  6655  001DA4  504B               	movf	mpap_do1step@i,w,c
  6656  001DA6  0A80               	xorlw	128
  6657  001DA8  0F7C               	addlw	-132
  6658  001DAA  A0D8               	btfss	status,0,c
  6659  001DAC  D002               	goto	i2l2563
  6660  001DAE  0E00               	movlw	0
  6661  001DB0  6E4B               	movwf	mpap_do1step@i,c
  6662  001DB2                     i2l2563:
  6663                           
  6664                           ;mpap.c: 95: if (i<0){i=3;}
  6665  001DB2  AE4B               	btfss	mpap_do1step@i,7,c
  6666  001DB4  D002               	goto	i2l2567
  6667  001DB6  0E03               	movlw	3
  6668  001DB8  6E4B               	movwf	mpap_do1step@i,c
  6669  001DBA                     i2l2567:
  6670                           
  6671                           ;mpap.c: 97: mpap_step[i]();
  6672  001DBA  504B               	movf	mpap_do1step@i,w,c
  6673  001DBC  0D02               	mullw	2
  6674  001DBE  50F3               	movf	prodl,w,c
  6675  001DC0  0FD3               	addlw	low _mpap_step
  6676  001DC2  6ED9               	movwf	fsr2l,c
  6677  001DC4  6ADA               	clrf	fsr2h,c
  6678  001DC6  D801               	call	i2u201_48
  6679  001DC8  0012               	return	
  6680  001DCA                     i2u201_48:
  6681  001DCA  0005               	push	
  6682  001DCC  6EFA               	movwf	pclath,c
  6683  001DCE  50DE               	movf	postinc2,w,c
  6684  001DD0  6EFD               	movwf	tosl,c
  6685  001DD2  50DE               	movf	postinc2,w,c
  6686  001DD4  6EFE               	movwf	tosh,c
  6687  001DD6  50F8               	movf	tblptru,w,c
  6688  001DD8  6EFF               	movwf	tosu,c
  6689  001DDA  50FA               	movf	pclath,w,c
  6690  001DDC  0012               	return		;indir
  6691  001DDE                     __end_of_mpap_do1step:
  6692                           	opt callstack 0
  6693                           
  6694 ;; *************** function __mpap_step3 *****************
  6695 ;; Defined at:
  6696 ;;		line 23 in file "mpap.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		status,2, status,0
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_mpap_do1step
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text53
  6724  002028                     __ptext53:
  6725                           	opt callstack 0
  6726  002028                     __mpap_step3:
  6727                           	opt callstack 22
  6728                           
  6729                           ;incstack = 0
  6730                           ;mpap.c: 25: do{LATD &= ~(1<<0);}while(0);
  6731  002028  908C               	bcf	3980,0,c	;volatile
  6732                           
  6733                           ;mpap.c: 26: do{LATD |= 1<<1;}while(0);
  6734  00202A  828C               	bsf	3980,1,c	;volatile
  6735                           
  6736                           ;mpap.c: 27: do{LATD &= ~(1<<2);}while(0);
  6737  00202C  948C               	bcf	3980,2,c	;volatile
  6738                           
  6739                           ;mpap.c: 28: do{LATD &= ~(1<<3);}while(0);
  6740  00202E  968C               	bcf	3980,3,c	;volatile
  6741  002030  0012               	return		;funcret
  6742  002032                     __end_of__mpap_step3:
  6743                           	opt callstack 0
  6744                           
  6745 ;; *************** function __mpap_step2 *****************
  6746 ;; Defined at:
  6747 ;;		line 15 in file "mpap.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;		None
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;		None
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  1    wreg      void 
  6754 ;; Registers used:
  6755 ;;		status,2, status,0
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6761 ;;      Params:         0       0       0       0       0       0       0       0       0
  6762 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6764 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6765 ;;Total ram usage:        0 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_mpap_do1step
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text54
  6775  002032                     __ptext54:
  6776                           	opt callstack 0
  6777  002032                     __mpap_step2:
  6778                           	opt callstack 22
  6779                           
  6780                           ;incstack = 0
  6781                           ;mpap.c: 17: do{LATD &= ~(1<<0);}while(0);
  6782  002032  908C               	bcf	3980,0,c	;volatile
  6783                           
  6784                           ;mpap.c: 18: do{LATD &= ~(1<<1);}while(0);
  6785  002034  928C               	bcf	3980,1,c	;volatile
  6786                           
  6787                           ;mpap.c: 19: do{LATD |= 1<<2;}while(0);
  6788  002036  848C               	bsf	3980,2,c	;volatile
  6789                           
  6790                           ;mpap.c: 20: do{LATD &= ~(1<<3);}while(0);
  6791  002038  968C               	bcf	3980,3,c	;volatile
  6792  00203A  0012               	return		;funcret
  6793  00203C                     __end_of__mpap_step2:
  6794                           	opt callstack 0
  6795                           
  6796 ;; *************** function __mpap_step1 *****************
  6797 ;; Defined at:
  6798 ;;		line 7 in file "mpap.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_mpap_do1step
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text55
  6826  00203C                     __ptext55:
  6827                           	opt callstack 0
  6828  00203C                     __mpap_step1:
  6829                           	opt callstack 22
  6830                           
  6831                           ;incstack = 0
  6832                           ;mpap.c: 9: do{LATD &= ~(1<<0);}while(0);
  6833  00203C  908C               	bcf	3980,0,c	;volatile
  6834                           
  6835                           ;mpap.c: 10: do{LATD &= ~(1<<1);}while(0);
  6836  00203E  928C               	bcf	3980,1,c	;volatile
  6837                           
  6838                           ;mpap.c: 11: do{LATD &= ~(1<<2);}while(0);
  6839  002040  948C               	bcf	3980,2,c	;volatile
  6840                           
  6841                           ;mpap.c: 12: do{LATD |= 1<<3;}while(0);
  6842  002042  868C               	bsf	3980,3,c	;volatile
  6843  002044  0012               	return		;funcret
  6844  002046                     __end_of__mpap_step1:
  6845                           	opt callstack 0
  6846                           
  6847 ;; *************** function __mpap_step4 *****************
  6848 ;; Defined at:
  6849 ;;		line 31 in file "mpap.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_mpap_do1step
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text56
  6877  002046                     __ptext56:
  6878                           	opt callstack 0
  6879  002046                     __mpap_step4:
  6880                           	opt callstack 22
  6881                           
  6882                           ;incstack = 0
  6883                           ;mpap.c: 33: do{LATD |= 1<<0;}while(0);
  6884  002046  808C               	bsf	3980,0,c	;volatile
  6885                           
  6886                           ;mpap.c: 34: do{LATD &= ~(1<<1);}while(0);
  6887  002048  928C               	bcf	3980,1,c	;volatile
  6888                           
  6889                           ;mpap.c: 35: do{LATD &= ~(1<<2);}while(0);
  6890  00204A  948C               	bcf	3980,2,c	;volatile
  6891                           
  6892                           ;mpap.c: 36: do{LATD &= ~(1<<3);}while(0);
  6893  00204C  968C               	bcf	3980,3,c	;volatile
  6894  00204E  0012               	return		;funcret
  6895  002050                     __end_of__mpap_step4:
  6896                           	opt callstack 0
  6897                           
  6898 ;; *************** function __mpap_off *****************
  6899 ;; Defined at:
  6900 ;;		line 45 in file "mpap.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;		None
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  1    wreg      void 
  6907 ;; Registers used:
  6908 ;;		status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 3F/0
  6911 ;;		On exit  : 3F/0
  6912 ;;		Unchanged: 3F/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6914 ;;      Params:         0       0       0       0       0       0       0       0       0
  6915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6917 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6918 ;;Total ram usage:        0 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_mpap_job
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text57
  6928  002050                     __ptext57:
  6929                           	opt callstack 0
  6930  002050                     __mpap_off:
  6931                           	opt callstack 24
  6932                           
  6933                           ; BSR set to: 0
  6934                           
  6935                           ; BSR set to: 0
  6936                           
  6937                           ;incstack = 0
  6938                           ;mpap.c: 47: do{LATD &= ~(1<<0);}while(0);
  6939  002050  908C               	bcf	3980,0,c	;volatile
  6940                           
  6941                           ; BSR set to: 0
  6942                           
  6943                           ;mpap.c: 48: do{LATD &= ~(1<<1);}while(0);
  6944  002052  928C               	bcf	3980,1,c	;volatile
  6945                           
  6946                           ; BSR set to: 0
  6947                           
  6948                           ;mpap.c: 49: do{LATD &= ~(1<<2);}while(0);
  6949  002054  948C               	bcf	3980,2,c	;volatile
  6950                           
  6951                           ; BSR set to: 0
  6952                           
  6953                           ;mpap.c: 50: do{LATD &= ~(1<<3);}while(0);
  6954  002056  968C               	bcf	3980,3,c	;volatile
  6955                           
  6956                           ; BSR set to: 0
  6957  002058  0012               	return		;funcret
  6958  00205A                     __end_of__mpap_off:
  6959                           	opt callstack 0
  6960                           
  6961                           	psect	text58
  6962  000000                     __ptext58:
  6963                           	opt callstack 0
  6964                           
  6965                           	psect	rparam
  6966  0000                     
  6967                           	psect	temp
  6968  00004C                     btemp:
  6969                           	opt callstack 0
  6970  00004C                     	ds	1
  6971  0000                     int$flags	set	btemp
  6972  0000                     wtemp8	set	btemp+1
  6973  0000                     ttemp5	set	btemp+1
  6974  0000                     ttemp6	set	btemp+4
  6975  0000                     ttemp7	set	btemp+8
  6976                           tosu	equ	0xFFF
  6977                           tosh	equ	0xFFE
  6978                           tosl	equ	0xFFD
  6979                           stkptr	equ	0xFFC
  6980                           pclatu	equ	0xFFB
  6981                           pclath	equ	0xFFA
  6982                           pcl	equ	0xFF9
  6983                           tblptru	equ	0xFF8
  6984                           tblptrh	equ	0xFF7
  6985                           tblptrl	equ	0xFF6
  6986                           tablat	equ	0xFF5
  6987                           prodh	equ	0xFF4
  6988                           prodl	equ	0xFF3
  6989                           indf0	equ	0xFEF
  6990                           postinc0	equ	0xFEE
  6991                           postdec0	equ	0xFED
  6992                           preinc0	equ	0xFEC
  6993                           plusw0	equ	0xFEB
  6994                           fsr0h	equ	0xFEA
  6995                           fsr0l	equ	0xFE9
  6996                           wreg	equ	0xFE8
  6997                           indf1	equ	0xFE7
  6998                           postinc1	equ	0xFE6
  6999                           postdec1	equ	0xFE5
  7000                           preinc1	equ	0xFE4
  7001                           plusw1	equ	0xFE3
  7002                           fsr1h	equ	0xFE2
  7003                           fsr1l	equ	0xFE1
  7004                           bsr	equ	0xFE0
  7005                           indf2	equ	0xFDF
  7006                           postinc2	equ	0xFDE
  7007                           postdec2	equ	0xFDD
  7008                           preinc2	equ	0xFDC
  7009                           plusw2	equ	0xFDB
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    12
    Data        31
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      75
    BANK0           160     19     144
    BANK1           256      0     123
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp_show_quantity@buff(BANK0[10]), 

    S391_multiplexedDisp$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    multiplexedDisp.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> multiplexedDisp4_on(), multiplexedDisp4_off(), multiplexedDisp3_on(), multiplexedDisp3_off(), 
		 -> multiplexedDisp2_on(), multiplexedDisp2_off(), multiplexedDisp1_on(), multiplexedDisp1_off(), 
		 -> multiplexedDisp0_on(), multiplexedDisp0_off(), 

    S278_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S278_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key5(), keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), 
		 -> keyRead_pin_key1(), 


Critical Paths under _main in COMRAM

    _main->_disp_show_quantity
    _nozzle_moveto->_mpap_setupToTurn
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _ikb_flush->_ikey_clear_all_flag
    _display7s_job->_multiplexedDisp_job
    _display7s_init->_multiplexedDisp_init
    _disp_show_quantity->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___awtoft->___ftpack

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _main->_disp_show_quantity

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29665
                                             52 COMRAM     2     2      0
                 _disp_show_quantity
                     _display7s_init
                      _display7s_job
                          _ikb_flush
                           _ikb_init
                            _ikb_job
              _ikb_key_is_ready2read
                _mpap_setupToHomming
                          _mpap_sych
                      _nozzle_moveto
                           _pump_job
                       _pump_setTick
 ---------------------------------------------------------------------------------
 (1) _pump_setTick                                         2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pump_job                                             1     1      0       5
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _nozzle_moveto                                        1     1      0    1001
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     737
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mpap_setupToHomming                                  0     0      0     242
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToTurn                                     4     2      2     242
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ikb_key_is_ready2read                                1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8700
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
                   _keyRead_pin_key5 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key5                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    8237
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3774
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ikb_flush                                            0     0      0      68
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (2) _ikey_clear_all_flag                                  1     1      0      68
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display7s_job                                        0     0      0     134
                _multiplexedDisp_job
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_job                                  8     8      0     134
                                             10 COMRAM     8     8      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (1) _display7s_init                                       0     0      0      68
               _multiplexedDisp_init
 ---------------------------------------------------------------------------------
 (2) _multiplexedDisp_init                                 1     1      0      68
                                             10 COMRAM     1     1      0
               _multiplexedDisp0_off *
                _multiplexedDisp0_on *
               _multiplexedDisp1_off *
                _multiplexedDisp1_on *
               _multiplexedDisp2_off *
                _multiplexedDisp2_on *
               _multiplexedDisp3_off *
                _multiplexedDisp3_on *
               _multiplexedDisp4_off *
                _multiplexedDisp4_on *
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp4_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp3_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp2_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp1_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _multiplexedDisp0_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disp_show_quantity                                  23    20      3   19053
                                             48 COMRAM     4     1      3
                                              0 BANK0     19    19      0
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     1      5    2226
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     621
                                             33 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5414
                                             30 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4998
                                             18 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4127
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1818
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3536
                                             18 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3313
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (6) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (7) _mpap_normal_mode                                     1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (7) _mpap_homming                                         2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (8) _mpap_do1step                                         1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (9) __mpap_step4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) __mpap_step1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) __mpap_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disp_show_quantity
     ___awtoft
       ___ftpack
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _display7s_init
     _multiplexedDisp_init
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _display7s_job
     _multiplexedDisp_job
       _multiplexedDisp0_off *
       _multiplexedDisp0_on *
       _multiplexedDisp1_off *
       _multiplexedDisp1_on *
       _multiplexedDisp2_off *
       _multiplexedDisp2_on *
       _multiplexedDisp3_off *
       _multiplexedDisp3_on *
       _multiplexedDisp4_off *
       _multiplexedDisp4_on *
   _ikb_flush
     _ikey_clear_all_flag
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
       _keyRead_pin_key5 *
   _ikb_key_is_ready2read
   _mpap_setupToHomming
     _mpap_setupToTurn
       ___wmul (ARG)
   _mpap_sych
   _nozzle_moveto
     ___wmul
     _mpap_setupToTurn
       ___wmul (ARG)
   _pump_job
   _pump_setTick

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7B       7       48.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     156      20        0.0%
DATA                 0      0     156       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul 11 17:35:30 2019

          ??_mpap_setupToHomming 0015              ___wmul@multiplicand 000D  
                    __CFG_BORV$3 000000                     ___ftadd@exp1 001E  
                   ___ftadd@exp2 001D                     ___ftadd@sign 001C  
                            l300 09F6                              l302 0A3A  
                            l118 149A                              l320 0DC2  
                            l304 0A9C                              l314 0D58  
                            l306 0AE0                              l323 0E14  
                            l308 0C2C                              l318 0D8C  
                            l291 08F0                              l285 093A  
                            l298 0994                              l546 1EDE  
                            l548 1EE2                              _GIE 007F97  
                 ?_display7s_job 0001                     __CFG_BOR$OFF 000000  
                            _key 0060                              tosl 000FFD  
                            wreg 000FE8                     _pump_setTick 2000  
                   __CFG_LVP$OFF 000000                     __CFG_WDT$OFF 000000  
                           l1000 1214                             l1149 1BDA  
                           l1341 1962                             l1159 1D92  
                           l2251 1B0C                             l3231 19C6  
                           l3215 1998                             l2239 1AEE  
                           l3073 171E                             l3235 19CE  
                           l3219 19A4                             l3245 19EA  
                           l3229 19C4                             l3407 1BA8  
                           l2535 1C7C                             l2711 135A  
                           l3513 1A20                             l3505 1260  
                           l3409 1BB0                             l3523 1A6E  
                           l3419 1BD0                             l3435 1D88  
                           l3427 1D68                             l3381 17F8  
                           l3373 17BA                             l3517 1A42  
                           l3453 1156                             l3429 1D70  
                           l3533 18F2                             l2717 139A  
                           l2709 133A                             l3383 1816  
                           l3375 17C4                             l3447 112E  
                           l3543 1924                             l3623 0B92  
                           l3385 1820                             l3377 17E2  
                           l3705 15CA                             l3721 1E34  
                           l2833 1FB8                             l2729 141E  
                           l3475 11A8                             l3811 0FA2  
                           l3733 1E72                             l3709 15DA  
                           l3477 11B2                             l2845 1DE2  
                           l3653 0E34                             l3637 0CDE  
                           l3629 0C1C                             l3581 0890  
                           l2693 128A                             l3495 1230  
                           l3487 11E6                             l3479 11BC  
                           l3743 1640                             l3815 0FB6  
                           l2863 18B8                             l3567 0812  
                           l3681 1570                             l3489 11F0  
                           l3761 1694                             l3665 1EAE  
                           l3833 0FFA                             l3585 08B0  
                           l3675 1548                             l3771 16AC  
                           l3851 105E                             l3843 1044  
                           l3819 0FC2                             l2859 1850  
                           l3579 0880                             l2699 12C8  
                           l3773 16B8                             l3765 16A4  
                           l3589 08D0                             l3941 14C2  
                           l3695 15A2                             l3839 1030  
                           l3927 1492                             l3865 1096  
                           l3945 14D4                             l3953 14FE  
                           l3699 15B2                             l3779 16D4  
                           l3875 10A6                             l3867 109C  
                           l3787 0E6A                             l3797 0F2A  
                           l3949 14E6                             l3959 1510  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             u2308 12AC  
                           u3300 1994                             u2309 12C0  
                           u2350 132A                             u2418 13E4  
                           u2419 13F8                             u2348 1310  
                           u3260 1FEA                             u2349 1324  
                           u4321 1530                             u4401 1624  
                           u4410 162E                             u2378 137E  
                           u2379 1392                             u4420 165E  
                           u4341 1558                             u3550 17AC  
                           u3630 1BB4                             u3720 1120  
                           u4520 0F9E                             u4425 1656  
                           u4530 0FB2                             u2818 1DF2  
                           u2834 1866                             u2819 1E06  
                           u2835 1860                             u3820 11C4  
                           u4460 16BE                             u3660 1D74  
                           u2844 1880                             u2845 187A  
                           u3590 182A                             u3750 1148  
                           u4560 102C                             u3681 10EE  
                           u3850 11F8                             u4570 1040  
                           u3691 1102                             u3780 1186  
                           u2868 18A4                             u2878 18C8  
                           u2879 18DC                             _UCFG 000F6F  
                           _UCON 000F6D                     __CFG_PWRT$ON 000000  
          _ikb_key_is_ready2read 1FD2                  ?_display7s_init 0001  
    __size_of_disp_show_quantity 02A0                             _main 1426  
                   ___ftpack@arg 000B                             _lock 0048  
                           _itoa 1E96                             _mpap 0037  
                   ___ftpack@exp 000E                             fsr1h 000FE2  
                           fsr2h 000FDA                             _pump 003F  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 004C  
                           _utoa 18EA                    _nozzle_moveto 1EF8  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                    __CFG_IESO$OFF 000000  
            _multiplexedDisp0_on 2092              _multiplexedDisp1_on 208A  
            _multiplexedDisp2_on 2082              _multiplexedDisp3_on 207A  
            _multiplexedDisp4_on 209A                    __CFG_MCLRE$ON 000000  
                   ___ftmul@cntr 0020             __end_of_DISP7S_CHARS 080D  
                   ___param_bank 000000                     ___ftmul@sign 0021  
            _multiplexedDisp_job 184A                     ___fttol@exp1 0030  
                   ___fttol@lval 002C                    __CFG_PLLDIV$5 000000  
                          ?_main 0001                            ?_itoa 001A  
                __end_of___ftadd 1286                            _CMCON 000FB4  
                          ?_utoa 0012                  __end_of___ftmul 1614  
                          _T0CON 000FD5                  __end_of___ftsub 1E5E  
                __end_of___fttol 16E6                  __end_of___lwdiv 1BE4  
                __end_of___lwmod 1D9C                            i2l134 1CF6  
                          i2l571 1D56                            i2l565 1B8E  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _PORTC 000F82                            _PORTD 000F83  
                          _PORTE 000F84                    __CFG_USBDIV$2 000000  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96             ?_multiplexedDisp0_on 0001  
           ?_multiplexedDisp1_on 0001             ?_multiplexedDisp2_on 0001  
           ?_multiplexedDisp3_on 0001             ?_multiplexedDisp4_on 0001  
                 __CFG_FCMEN$OFF 000000                  __end_of_ikb_job 2014  
           ?_multiplexedDisp_job 0001                    ___awtoft@sign 0016  
                  ?_INTERRUPCION 0001                    ___ftpack@sign 000F  
                          pclath 000FFA                            tablat 000FF5  
                          ttemp5 004D                            ttemp6 0050  
                          ttemp7 0054                            utoa@c 0019  
                          utoa@v 0017                            status 000FD8  
                 ?_nozzle_moveto 0001                            wtemp8 004D  
    __size_of_ikey_is_accessible 004C             _multiplexedDisp0_off 2096  
           _multiplexedDisp1_off 208E             _multiplexedDisp2_off 2086  
           _multiplexedDisp3_off 207E             _multiplexedDisp4_off 2076  
                  ?_ikey_parsing 0001             __size_of__mpap_step1 000A  
           __size_of__mpap_step2 000A             __size_of__mpap_step3 000A  
           __size_of__mpap_step4 000A                  __initialization 1A72  
                   __end_of_main 1520                     __end_of_itoa 1EC8  
           _multiplexedDisp_init 1DDE                     __end_of_utoa 197E  
                ??_display7s_job 0013                           ??_main 0035  
                  ___fttol@sign1 002B                           ??_itoa 001F  
                         ??_utoa 0017                    mpap_do1step@i 004B  
                  __activetblptr 000002            ??_multiplexedDisp0_on 000B  
          ??_multiplexedDisp1_on 000B            ??_multiplexedDisp2_on 000B  
          ??_multiplexedDisp3_on 000B            ??_multiplexedDisp4_on 000B  
          ??_multiplexedDisp_job 000B                   ??_INTERRUPCION 0005  
                         _ADCON1 000FC1         __end_of_keyRead_pin_key1 2062  
       __end_of_keyRead_pin_key2 2028         __end_of_keyRead_pin_key3 201E  
       __end_of_keyRead_pin_key4 2070         __end_of_keyRead_pin_key5 206A  
         ?_ikb_key_is_ready2read 0001                 __end_of___awtoft 1E96  
               __end_of___ftpack 184A                           i2l3261 1C9C  
                         i2l3257 1C8E                           i2l2563 1DB2  
                         i2l2567 1DBA                           i2l2905 1B70  
               __end_of___lwtoft 1F96                           _TMR0IE 007F95  
                         _TMR0IF 007F92            ?_multiplexedDisp0_off 0001  
          ?_multiplexedDisp1_off 0001            ?_multiplexedDisp2_off 0001  
          ?_multiplexedDisp3_off 0001            ?_multiplexedDisp4_off 0001  
                 ??_ikey_parsing 001F                   __CFG_VREGEN$ON 000000  
       __end_of_mpap_normal_mode 1D5A         _error_requestToWriteDisp 00BE  
               __end_of_ikb_init 179C            ?_multiplexedDisp_init 0001  
                         ___ftge 19FE                           ___wmul 1F26  
                      ??___ftadd 0019                        ??___ftmul 0019  
                      ??___ftsub 0025                        ??___fttol 0026  
                      ??___lwdiv 000F                        ??___lwmod 000F  
                         clear_0 1AAA                           clear_1 1AB6  
                         clear_2 1AC2                 __end_of_mpap_job 1CCA  
                      ??_ikb_job 0024            ___ftmul@f3_as_product 001D  
       __end_of_mpap_setupToTurn 1EF8                     __pdataCOMRAM 004B  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
            ikey_is_accessible@k 000D                 __end_of_pump_job 1B3A  
                ??_nozzle_moveto 0015     __size_of_ikey_clear_all_flag 001E  
                     __accesstop 0060          __end_of__initialization 1AC8  
                __CFG_PBADEN$OFF 000000                    ?_mpap_do1step 0001  
                     ___ftadd@f1 0013                       ___ftadd@f2 0016  
                     ___ftge@ff1 0016                       ___ftge@ff2 0019  
                  ___rparam_used 000001                       ___awtoft@c 0013  
                     ___ftmul@f1 0013                       ___ftmul@f2 0016  
                     ___ftsub@f1 001F                       ___ftsub@f2 0022  
                     ___fttol@f1 0022                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1F96                    ?_mpap_homming 0001  
             __size_of__mpap_off 000A                       ___lwtoft@c 0013  
               ??_display7s_init 000C                     _DISP7S_CHARS 080B  
             __size_of_ikb_flush 0006                   mpap_do1step@KI 0001  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                 ??_mpap_do1step 0001           ??_multiplexedDisp0_off 000B  
         ??_multiplexedDisp1_off 000B           ??_multiplexedDisp2_off 000B  
         ??_multiplexedDisp3_off 000B           ??_multiplexedDisp4_off 000B  
             __size_of_ikey_scan 01A0      __end_of_mpap_setupToHomming 2000  
         ??_multiplexedDisp_init 000B                   ??_mpap_homming 0002  
                        ?___ftge 0016             __end_of_INTERRUPCION 1D12  
             __size_of_mpap_sych 0080                          ?___wmul 000B  
                      ?___awtoft 0013                        ?___ftpack 000B  
                      ?___lwtoft 0013             __end_of_ikey_parsing 0E3E  
                     _disp_owner 0046       __end_of_disp_show_quantity 10DE  
                      ?_ikb_init 0001                __end_of__mpap_off 205A  
                 display7s_job@q 0045                        ?_mpap_job 0001  
                        __Hparam 0000                          __Lparam 0000  
              __end_of_ikb_flush 2076                  __size_of___ftge 0074  
                        ___ftadd 10DE                  __size_of___wmul 0026  
                        ___ftmul 1520                          ___ftsub 1E1E  
                        ___fttol 1614                pump_setTick@ticks 000B  
                        ___lwdiv 1B92                        ?_pump_job 0001  
                        ___lwmod 1D5A                     __psmallconst 0800  
                        __pcinit 1A72                       ??___awtoft 0016  
                     ??___ftpack 0010                          __ramtop 0800  
                        __ptext0 1426                          __ptext1 2000  
                        __ptext2 1AD6                          __ptext3 1EF8  
                        __ptext4 1F26                          __ptext5 197E  
                        __ptext6 1FEE                          __ptext7 1EC8  
                        __ptext8 1FD2                          __ptext9 200A  
              __end_of_ikey_scan 1426                          _ikb_job 200A  
                     ??___lwtoft 0016                          _group_x 00B0  
       _error_grantedToWriteDisp 00BD          ??_ikb_key_is_ready2read 000B  
     disp_show_quantity@last_pos 00EC                __end_of_mpap_sych 19FE  
        mpap_normal_mode@cod_ret 0002                       ??_ikb_init 000B  
                 __pintcode_body 1CCA             end_of_initialization 1AC8  
     __end_of_ikey_is_accessible 1C80                ?_keyRead_pin_key1 0001  
              ?_keyRead_pin_key2 0001                ?_keyRead_pin_key3 0001  
              ?_keyRead_pin_key4 0001                ?_keyRead_pin_key5 0001  
                  ??__mpap_step1 0001                    ??__mpap_step2 0001  
                  ??__mpap_step3 0001                    ??__mpap_step4 0001  
                        itoa@buf 001A                          itoa@val 001B  
                  __Lmediumconst 0000                          int_func 1CCA  
             ??_keyRead_pin_key1 000B               ??_keyRead_pin_key2 000B  
             ??_keyRead_pin_key3 000B               ??_keyRead_pin_key4 000B  
             ??_keyRead_pin_key5 000B              errorHandler_queue@c 00B5  
            errorHandler_queue@i 00B8                       ??_mpap_job 0004  
              ?_mpap_normal_mode 0001                  main@c_access_kb 0035  
                        postdec1 000FE5                          postdec2 000FDD  
             ??_mpap_normal_mode 0002                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
         ikb_key_is_ready2read@k 000B                       ??_pump_job 000B  
                        utoa@buf 0012      __end_of_multiplexedDisp0_on 2096  
    __end_of_multiplexedDisp1_on 208E      __end_of_multiplexedDisp2_on 2086  
    __end_of_multiplexedDisp3_on 207E                          utoa@val 0013  
    __end_of_multiplexedDisp4_on 209E              _ikey_clear_all_flag 1FB4  
    __end_of_multiplexedDisp_job 18EA                     _machineState 0047  
           __end_of_mpap_do1step 1DDE            __end_of_display7s_job 1F72  
           ikey_clear_all_flag@i 000B                ?_mpap_setupToTurn 0011  
             ??_mpap_setupToTurn 0013             __end_of_mpap_homming 1B92  
            nozzle_moveto@nozzle 0015             ?_ikey_clear_all_flag 0001  
          __size_of_INTERRUPCION 1D0A                      ___ftmul@exp 001C  
            __end_of__mpap_step1 2046              __end_of__mpap_step2 203C  
            __end_of__mpap_step3 2032              __end_of__mpap_step4 2050  
            __end_of_DISP7S_NUMS 080B                   __end_of___ftge 1A72  
mpap_setupToTurn@numSteps_tomove 0011            __size_of_ikey_parsing 0630  
                 __end_of___wmul 1F4C                    __pidataCOMRAM 209E  
            start_initialization 1A72                    ?_pump_setTick 000B  
                   _INTERRUPCION 0008            ??_ikey_clear_all_flag 000B  
                     ikey_scan@k 000C            __end_of_nozzle_moveto 1F26  
                   _ikey_parsing 080E           disp_show_quantity@buff 00DD  
                       ??___ftge 001C           disp_show_quantity@real 00E7  
                       ??___wmul 000F                      __pdataBANK0 00BF  
              __size_of___awtoft 0038                __size_of___ftpack 00AE  
                 ??_pump_setTick 000D                      __pbssCOMRAM 0037  
              __size_of___lwtoft 0024                    __pcstackBANK0 00DD  
                   mpap_sych@sm0 0044                    ikey_parsing@k 0023  
              __size_of_ikb_init 00B6                      __mpap_step1 203C  
                    __mpap_step2 2032                      __mpap_step3 2028  
                    __mpap_step4 2046                      _DISP7S_NUMS 0801  
  __size_of_multiplexedDisp0_off 0004    __size_of_multiplexedDisp1_off 0004  
  __size_of_multiplexedDisp2_off 0004    __size_of_multiplexedDisp3_off 0004  
  __size_of_multiplexedDisp4_off 0004                       mpap_sych@c 0043  
                      __mpap_off 2050                 ___lwdiv@dividend 000B  
             _disp_show_quantity 0E3E                __size_of_mpap_job 004A  
                      __pintcode 0008    __size_of_multiplexedDisp_init 0040  
          __size_of_mpap_do1step 0042                         ?___ftadd 0013  
                       ?___ftmul 0013                         ?___ftsub 001F  
                       ?___fttol 0022                         ?___lwdiv 000B  
                       ?___lwmod 000B     __size_of_mpap_setupToHomming 0012  
            ?_disp_show_quantity 0031                        _ikb_flush 2070  
              __size_of_pump_job 0064                         ?_ikb_job 0001  
                    __smallconst 0800            __size_of_mpap_homming 0058  
                _multiplexedDisp 00BF                        _main_flag 0049  
          multiplexedDisp_init@i 000B                        _ikey_scan 1286  
 __size_of_ikb_key_is_ready2read 001C                 ___lwdiv@quotient 0010  
  __end_of_ikb_key_is_ready2read 1FEE             ??_disp_show_quantity 0034  
                      _mpap_step 00D3                        _mpap_sych 197E  
                 ___wmul@product 000F                     _mpap_do1step 1D9C  
        __size_of_display7s_init 0050                       ?__mpap_off 0001  
                       i2u201_48 1DCA                         i2u344_48 1CAE  
                       i2u344_49 1CC4               _ikey_is_accessible 1C34  
                   _mpap_homming 1B3A        __size_of_keyRead_pin_key1 0008  
      __size_of_keyRead_pin_key2 000A        __size_of_keyRead_pin_key3 000A  
      __size_of_keyRead_pin_key4 0006        __size_of_keyRead_pin_key5 0008  
                     ?_ikb_flush 0001                ___wmul@multiplier 000B  
            ?_ikey_is_accessible 0001                        ikb_init@i 000B  
      __size_of_mpap_normal_mode 0048                       ?_ikey_scan 0001  
                      copy_data0 1A86              mpap_homming@cod_ret 0003  
                     ?_mpap_sych 0001             ??_ikey_is_accessible 000B  
      __size_of_mpap_setupToTurn 0030                         __Hrparam 0000  
           __end_of_pump_setTick 200A                         __Lrparam 0000  
          disp_show_quantity@num 00EA             check_startSignal@sm0 00BC  
           check_startSignal@sm1 00BB                 __size_of___ftadd 01A8  
               __size_of___ftmul 00F4                 __size_of___ftsub 0040  
               __size_of___fttol 00D2                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042                         ___awtoft 1E5E  
                       ___ftpack 179C                         ___lwtoft 1F72  
               __size_of_ikb_job 000A     __size_of_multiplexedDisp0_on 0004  
   __size_of_multiplexedDisp1_on 0004     __size_of_multiplexedDisp2_on 0004  
   __size_of_multiplexedDisp3_on 0004     __size_of_multiplexedDisp4_on 0004  
          errorHandler_queue@sm0 00B7                  ___lwdiv@divisor 000D  
              check_oilLevel@sm0 00BA                check_oilLevel@sm1 00B9  
   __size_of_multiplexedDisp_job 00A0                  ___lwdiv@counter 000F  
                       __ptext10 1286                         __ptext11 206A  
                       __ptext20 2070                         __ptext12 2014  
                       __ptext21 1FB4                         __ptext13 201E  
                       __ptext30 2086                         __ptext22 1F4C  
                       __ptext14 205A                         __ptext31 208A  
                       __ptext23 184A                         __ptext15 2062  
                       __ptext40 1B92                         __ptext32 208E  
                       __ptext24 1BE4                         __ptext16 080E  
                       __ptext41 1614                         __ptext33 2092  
                       __ptext25 1DDE                         __ptext17 1C34  
                       __ptext50 1D12                         __ptext42 1E1E  
                       __ptext34 2096                         __ptext26 2076  
                       __ptext18 1F72                         __ptext51 1B3A  
                       __ptext43 10DE                         __ptext35 209A  
                       __ptext27 207A                         __ptext19 16E6  
                       __ptext52 1D9C                         __ptext44 1520  
                       __ptext36 0E3E                         __ptext28 207E  
                       __ptext53 2028                         __ptext45 19FE  
                       __ptext37 1E96                         __ptext29 2082  
                       __ptext54 2032                         __ptext46 1E5E  
                       __ptext38 18EA                         __ptext55 203C  
                       __ptext47 179C                         __ptext39 1D5A  
                       __ptext56 2046                         __ptext57 2050  
                       __ptext49 1C80                         __ptext58 0000  
                       _ikb_init 16E6             _mpap_setupToTurn$518 0013  
           multiplexedDisp_job@i 0012             multiplexedDisp_job@q 0011  
                  __size_of_main 00FA                    __size_of_itoa 0032  
                  __size_of_utoa 0094                         _isr_flag 004A  
                       _mpap_job 1C80                         _mpap_off 00DB  
                    ??__mpap_off 0001           __size_of_display7s_job 0026  
              main@c_access_disp 0036                         int$flags 004C  
                       _pump_job 1AD6                         _pulsonic 0100  
                    ??_ikb_flush 000C            __CFG_CPUDIV$OSC1_PLL2 000000  
    __end_of_ikey_clear_all_flag 1FD2                        pump_job@c 0042  
                    ??_ikey_scan 000B                         itoa@base 001D  
                       intlevel2 0000              _mpap_setupToHomming 1FEE  
                    ??_mpap_sych 000B                 ___lwmod@dividend 000B  
                   ?__mpap_step1 0001                     ?__mpap_step2 0001  
                   ?__mpap_step3 0001                     ?__mpap_step4 0001  
                 _display7s_init 1BE4                 _keyRead_pin_key1 205A  
               _keyRead_pin_key2 201E                 _keyRead_pin_key3 2014  
               _keyRead_pin_key4 206A                 _keyRead_pin_key5 2062  
           ?_mpap_setupToHomming 0001              disp_show_quantity@I 00ED  
            disp_show_quantity@f 0031              disp_show_quantity@i 00EF  
            disp_show_quantity@q 00EB                         utoa@base 0015  
   __end_of_multiplexedDisp0_off 209A     __end_of_multiplexedDisp1_off 2092  
   __end_of_multiplexedDisp2_off 208A     __end_of_multiplexedDisp3_off 2082  
   __end_of_multiplexedDisp4_off 207A           __size_of_nozzle_moveto 002E  
                ___lwmod@divisor 000D                 _mpap_normal_mode 1D12  
                  _display7s_job 1F4C                  ___lwmod@counter 000F  
   __end_of_multiplexedDisp_init 1E1E               __CFG_FOSC$HSPLL_HS 000000  
         __end_of_display7s_init 1C34            __size_of_pump_setTick 000A  
               _mpap_setupToTurn 1EC8  
