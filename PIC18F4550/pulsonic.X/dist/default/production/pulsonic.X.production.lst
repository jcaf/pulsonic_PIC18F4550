

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 16 20:34:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,keep,inline
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,keep,inline
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,keep,inline
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,keep,inline
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,keep,inline
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,keep,inline
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,keep,inline
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,keep,inline
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107  0000                     
   108                           ; Version 2.05
   109                           ; Generated 20/12/2018 GMT
   110                           ; 
   111                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F4550 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     
   143                           	psect	idataCOMRAM
   144  002A58                     __pidataCOMRAM:
   145                           	opt callstack 0
   146                           
   147                           ;initializer for mpap_do1step@i
   148  002A58  FF                 	db	255
   149                           
   150                           	psect	idataBANK0
   151  00280C                     __pidataBANK0:
   152                           	opt callstack 0
   153                           
   154                           ;initializer for _disp7s_mux
   155  00280C  50                 	db	low _disp7s_mux0_off
   156  00280D  2A                 	db	high _disp7s_mux0_off
   157  00280E  4C                 	db	low _disp7s_mux0_on
   158  00280F  2A                 	db	high _disp7s_mux0_on
   159  002810  48                 	db	low _disp7s_mux1_off
   160  002811  2A                 	db	high _disp7s_mux1_off
   161  002812  44                 	db	low _disp7s_mux1_on
   162  002813  2A                 	db	high _disp7s_mux1_on
   163  002814  40                 	db	low _disp7s_mux2_off
   164  002815  2A                 	db	high _disp7s_mux2_off
   165  002816  3C                 	db	low _disp7s_mux2_on
   166  002817  2A                 	db	high _disp7s_mux2_on
   167  002818  38                 	db	low _disp7s_mux3_off
   168  002819  2A                 	db	high _disp7s_mux3_off
   169  00281A  34                 	db	low _disp7s_mux3_on
   170  00281B  2A                 	db	high _disp7s_mux3_on
   171  00281C  30                 	db	low _disp7s_mux4_off
   172  00281D  2A                 	db	high _disp7s_mux4_off
   173  00281E  54                 	db	low _disp7s_mux4_on
   174  00281F  2A                 	db	high _disp7s_mux4_on
   175                           
   176                           ;initializer for _mpap_step
   177  002820  F6                 	db	low __mpap_step1
   178  002821  29                 	db	high __mpap_step1
   179  002822  EC                 	db	low __mpap_step2
   180  002823  29                 	db	high __mpap_step2
   181  002824  E2                 	db	low __mpap_step3
   182  002825  29                 	db	high __mpap_step3
   183  002826  00                 	db	low __mpap_step4
   184  002827  2A                 	db	high __mpap_step4
   185                           
   186                           ;initializer for _NOZZLE_QTY_DIFF
   187  002828  CD                 	db	205
   188  002829  CC                 	db	204
   189  00282A  3D                 	db	61
   190                           
   191                           ;initializer for _mpap_off
   192  00282B  0A                 	db	low __mpap_off
   193  00282C  2A                 	db	high __mpap_off
   194                           
   195                           ;initializer for errorHandler_queue@i
   196  00282D  FF                 	db	255
   197                           
   198                           	psect	smallconst
   199  000800                     __psmallconst:
   200                           	opt callstack 0
   201  000800  00                 	db	0
   202  000801                     _DISP7S_NUMS:
   203                           	opt callstack 0
   204  000801  3F                 	db	63
   205  000802  06                 	db	6
   206  000803  5B                 	db	91
   207  000804  4F                 	db	79
   208  000805  66                 	db	102
   209  000806  6D                 	db	109
   210  000807  7C                 	db	124
   211  000808  07                 	db	7
   212  000809  7F                 	db	127
   213  00080A  67                 	db	103
   214  00080B                     __end_of_DISP7S_NUMS:
   215                           	opt callstack 0
   216  00080B                     _OIL_VISCOSITY:
   217                           	opt callstack 0
   218  00080B  16                 	db	22
   219  00080C  20                 	db	32
   220  00080D  2E                 	db	46
   221  00080E  44                 	db	68
   222  00080F                     __end_of_OIL_VISCOSITY:
   223                           	opt callstack 0
   224  00080F                     _DISP7S_CHARS:
   225                           	opt callstack 0
   226  00080F  00                 	db	0
   227  000810  40                 	db	64
   228  000811                     __end_of_DISP7S_CHARS:
   229                           	opt callstack 0
   230  0000                     _TRISB	set	3987
   231  0000                     _TRISA	set	3986
   232  0000                     _PORTE	set	3972
   233  0000                     _PORTD	set	3971
   234  0000                     _PORTC	set	3970
   235  0000                     _TRISC	set	3988
   236  0000                     _TRISD	set	3989
   237  0000                     _TRISE	set	3990
   238  0000                     _TMR0L	set	4054
   239  0000                     _TMR0H	set	4055
   240  0000                     _T0CON	set	4053
   241  0000                     _UCFG	set	3951
   242  0000                     _UCON	set	3949
   243  0000                     _CMCON	set	4020
   244  0000                     _ADCON1	set	4033
   245  0000                     _LATB	set	3978
   246  0000                     _LATE	set	3981
   247  0000                     _LATD	set	3980
   248  0000                     _LATC	set	3979
   249  0000                     _LATA	set	3977
   250  0000                     _TMR0IF	set	32658
   251  0000                     _GIE	set	32663
   252  0000                     _TMR0IE	set	32661
   253                           
   254                           ; #config settings
   255  000811  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           	psect	cinit
   258  0021B4                     __pcinit:
   259                           	opt callstack 0
   260  0021B4                     start_initialization:
   261                           	opt callstack 0
   262  0021B4                     __initialization:
   263                           	opt callstack 0
   264                           
   265                           ; Initialize objects allocated to BANK0 (34 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  0021B4  0E0C               	movlw	low __pidataBANK0
   268  0021B6  6EF6               	movwf	tblptrl,c
   269  0021B8  0E28               	movlw	high __pidataBANK0
   270  0021BA  6EF7               	movwf	tblptrh,c
   271  0021BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  0021BE  6EF8               	movwf	tblptru,c
   273  0021C0  EE00  F0CD         	lfsr	0,__pdataBANK0
   274  0021C4  EE10 F022          	lfsr	1,34
   275  0021C8                     copy_data0:
   276  0021C8  0009               	tblrd		*+
   277  0021CA  CFF5 FFEE          	movff	tablat,postinc0
   278  0021CE  50E5               	movf	postdec1,w,c
   279  0021D0  50E1               	movf	fsr1l,w,c
   280  0021D2  E1FA               	bnz	copy_data0
   281                           
   282                           ; Initialize objects allocated to COMRAM (1 bytes)
   283                           ; load TBLPTR registers with __pidataCOMRAM
   284  0021D4  0E58               	movlw	low __pidataCOMRAM
   285  0021D6  6EF6               	movwf	tblptrl,c
   286  0021D8  0E2A               	movlw	high __pidataCOMRAM
   287  0021DA  6EF7               	movwf	tblptrh,c
   288  0021DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   289  0021DE  6EF8               	movwf	tblptru,c
   290  0021E0  0009               	tblrd		*+	;fetch initializer
   291  0021E2  CFF5 F052          	movff	tablat,__pdataCOMRAM
   292                           
   293                           ; Clear objects allocated to BANK1 (65 bytes)
   294  0021E6  EE01  F000         	lfsr	0,__pbssBANK1
   295  0021EA  0E41               	movlw	65
   296  0021EC                     clear_0:
   297  0021EC  6AEE               	clrf	postinc0,c
   298  0021EE  06E8               	decf	wreg,f,c
   299  0021F0  E1FD               	bnz	clear_0
   300                           
   301                           ; Clear objects allocated to BANK0 (109 bytes)
   302  0021F2  EE00  F060         	lfsr	0,__pbssBANK0
   303  0021F6  0E6D               	movlw	109
   304  0021F8                     clear_1:
   305  0021F8  6AEE               	clrf	postinc0,c
   306  0021FA  06E8               	decf	wreg,f,c
   307  0021FC  E1FD               	bnz	clear_1
   308                           
   309                           ; Clear objects allocated to COMRAM (14 bytes)
   310  0021FE  EE00  F044         	lfsr	0,__pbssCOMRAM
   311  002202  0E0E               	movlw	14
   312  002204                     clear_2:
   313  002204  6AEE               	clrf	postinc0,c
   314  002206  06E8               	decf	wreg,f,c
   315  002208  E1FD               	bnz	clear_2
   316  00220A                     end_of_initialization:
   317                           	opt callstack 0
   318  00220A                     __end_of__initialization:
   319                           	opt callstack 0
   320  00220A  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321  00220C  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322  00220E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   323  002210  6EF8               	movwf	tblptru,c
   324  002212  0100               	movlb	0
   325  002214  EF70  F00B         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMRAM
   328  000044                     __pbssCOMRAM:
   329                           	opt callstack 0
   330  000044                     _pump:
   331                           	opt callstack 0
   332  000044                     	ds	3
   333  000047                     _smain:
   334                           	opt callstack 0
   335  000047                     	ds	3
   336  00004A                     _configMode:
   337                           	opt callstack 0
   338  00004A                     	ds	2
   339  00004C                     _autoMode:
   340                           	opt callstack 0
   341  00004C                     	ds	2
   342  00004E                     disp7s_job@q:
   343                           	opt callstack 0
   344  00004E                     	ds	1
   345  00004F                     pump_job@c:
   346                           	opt callstack 0
   347  00004F                     	ds	1
   348  000050                     mpap_sych@sm0:
   349                           	opt callstack 0
   350  000050                     	ds	1
   351  000051                     _disp_owner:
   352                           	opt callstack 0
   353  000051                     	ds	1
   354                           
   355                           	psect	dataCOMRAM
   356  000052                     __pdataCOMRAM:
   357                           	opt callstack 0
   358  000052                     mpap_do1step@i:
   359                           	opt callstack 0
   360  000052                     	ds	1
   361                           
   362                           	psect	bssBANK0
   363  000060                     __pbssBANK0:
   364                           	opt callstack 0
   365  000060                     _key:
   366                           	opt callstack 0
   367  000060                     	ds	80
   368  0000B0                     _mpap:
   369                           	opt callstack 0
   370  0000B0                     	ds	8
   371  0000B8                     _group_x:
   372                           	opt callstack 0
   373  0000B8                     	ds	5
   374  0000BD                     _visMode:
   375                           	opt callstack 0
   376  0000BD                     	ds	2
   377  0000BF                     	ds	2
   378  0000C1                     mpap_sych@c:
   379                           	opt callstack 0
   380  0000C1                     	ds	1
   381  0000C2                     	ds	1
   382  0000C3                     	ds	1
   383  0000C4                     	ds	1
   384  0000C5                     	ds	1
   385  0000C6                     	ds	1
   386  0000C7                     	ds	1
   387  0000C8                     _error_grantedToWriteDisp:
   388                           	opt callstack 0
   389  0000C8                     	ds	1
   390  0000C9                     _error_requestToWriteDisp:
   391                           	opt callstack 0
   392  0000C9                     	ds	1
   393  0000CA                     _funcMach:
   394                           	opt callstack 0
   395  0000CA                     	ds	1
   396  0000CB                     _unlock:
   397                           	opt callstack 0
   398  0000CB                     	ds	1
   399  0000CC                     _isr_flag:
   400                           	opt callstack 0
   401  0000CC                     	ds	1
   402                           
   403                           	psect	dataBANK0
   404  0000CD                     __pdataBANK0:
   405                           	opt callstack 0
   406  0000CD                     _disp7s_mux:
   407                           	opt callstack 0
   408  0000CD                     	ds	20
   409  0000E1                     _mpap_step:
   410                           	opt callstack 0
   411  0000E1                     	ds	8
   412  0000E9                     _NOZZLE_QTY_DIFF:
   413                           	opt callstack 0
   414  0000E9                     	ds	3
   415  0000EC                     _mpap_off:
   416                           	opt callstack 0
   417  0000EC                     	ds	2
   418  0000EE                     	ds	1
   419                           
   420                           	psect	bssBANK1
   421  000100                     __pbssBANK1:
   422                           	opt callstack 0
   423  000100                     _pulsonic:
   424                           	opt callstack 0
   425  000100                     	ds	65
   426                           
   427                           	psect	cstackBANK1
   428  000141                     __pcstackBANK1:
   429                           	opt callstack 0
   430  000141                     disp7s_qtyDisp_writeFloat@num:
   431                           	opt callstack 0
   432                           
   433                           ; 3 bytes @ 0x0
   434  000141                     	ds	3
   435                           
   436                           	psect	cstackBANK0
   437  0000EF                     __pcstackBANK0:
   438                           	opt callstack 0
   439  0000EF                     disp7s_write_f@buff:
   440                           	opt callstack 0
   441                           
   442                           ; 10 bytes @ 0x0
   443  0000EF                     	ds	10
   444  0000F9                     disp7s_write_f@I:
   445                           	opt callstack 0
   446                           
   447                           ; 2 bytes @ 0xA
   448  0000F9                     	ds	2
   449  0000FB                     disp7s_write_f@pi:
   450                           	opt callstack 0
   451                           
   452                           ; 1 bytes @ 0xC
   453  0000FB                     	ds	1
   454  0000FC                     disp7s_write_f@K10MULT:
   455                           	opt callstack 0
   456                           
   457                           ; 3 bytes @ 0xD
   458  0000FC                     	ds	3
   459  0000FF                     disp7s_write_f@i:
   460                           	opt callstack 0
   461                           
   462                           ; 1 bytes @ 0x10
   463  0000FF                     	ds	1
   464                           
   465                           	psect	cstackCOMRAM
   466  000001                     __pcstackCOMRAM:
   467                           	opt callstack 0
   468  000001                     mpap_do1step@KI:
   469                           	opt callstack 0
   470                           
   471                           ; 1 bytes @ 0x0
   472  000001                     	ds	1
   473  000002                     ??_mpap_homming:
   474  000002                     mpap_normal_mode@cod_ret:
   475                           	opt callstack 0
   476                           
   477                           ; 1 bytes @ 0x1
   478  000002                     	ds	1
   479  000003                     mpap_homming@cod_ret:
   480                           	opt callstack 0
   481                           
   482                           ; 1 bytes @ 0x2
   483  000003                     	ds	1
   484  000004                     
   485                           ; 1 bytes @ 0x3
   486  000004                     	ds	1
   487  000005                     ??_INTERRUPCION:
   488                           
   489                           ; 1 bytes @ 0x4
   490  000005                     	ds	6
   491  00000B                     ??_ikey_is_accessible:
   492  00000B                     ??_disp7s_mux_Q:
   493  00000B                     ?_strlen:
   494                           	opt callstack 0
   495  00000B                     ?___wmul:
   496                           	opt callstack 0
   497  00000B                     ?___lwdiv:
   498                           	opt callstack 0
   499  00000B                     ?___lwmod:
   500                           	opt callstack 0
   501  00000B                     ?___ftpack:
   502                           	opt callstack 0
   503  00000B                     ikb_get_AtTimeExpired_BeforeOrAfter@k:
   504                           	opt callstack 0
   505  00000B                     ikb_key_is_ready2read@k:
   506                           	opt callstack 0
   507  00000B                     ikb_key_was_read@k:
   508                           	opt callstack 0
   509  00000B                     ikey_clear_all_flag@i:
   510                           	opt callstack 0
   511  00000B                     pulsonic_init@i:
   512                           	opt callstack 0
   513  00000B                     disp7s_mux_init@i:
   514                           	opt callstack 0
   515  00000B                     visMode_init@numVista:
   516                           	opt callstack 0
   517  00000B                     configMode_init@numRegistro:
   518                           	opt callstack 0
   519  00000B                     strlen@s:
   520                           	opt callstack 0
   521  00000B                     pump_setTick@ticks:
   522                           	opt callstack 0
   523  00000B                     disp7s_off@pDisp:
   524                           	opt callstack 0
   525  00000B                     ___wmul@multiplier:
   526                           	opt callstack 0
   527  00000B                     ___lwdiv@dividend:
   528                           	opt callstack 0
   529  00000B                     ___lwmod@dividend:
   530                           	opt callstack 0
   531  00000B                     ___ftpack@arg:
   532                           	opt callstack 0
   533                           
   534                           ; 3 bytes @ 0xA
   535  00000B                     	ds	1
   536  00000C                     ikey_scan@k:
   537                           	opt callstack 0
   538  00000C                     disp7s_init@i:
   539                           	opt callstack 0
   540  00000C                     autoMode_kb@cod_ret:
   541                           	opt callstack 0
   542  00000C                     visMode_kb@cod_ret:
   543                           	opt callstack 0
   544                           
   545                           ; 1 bytes @ 0xB
   546  00000C                     	ds	1
   547  00000D                     ikey_is_accessible@k:
   548                           	opt callstack 0
   549  00000D                     disp7s_off@NUM_OF_DISP:
   550                           	opt callstack 0
   551  00000D                     strlen@cp:
   552                           	opt callstack 0
   553  00000D                     ___wmul@multiplicand:
   554                           	opt callstack 0
   555  00000D                     ___lwdiv@divisor:
   556                           	opt callstack 0
   557  00000D                     ___lwmod@divisor:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0xC
   561  00000D                     	ds	1
   562  00000E                     ??_disp7s_off:
   563  00000E                     ___ftpack@exp:
   564                           	opt callstack 0
   565                           
   566                           ; 1 bytes @ 0xD
   567  00000E                     	ds	1
   568  00000F                     ___ftpack@sign:
   569                           	opt callstack 0
   570  00000F                     ___lwdiv@counter:
   571                           	opt callstack 0
   572  00000F                     ___lwmod@counter:
   573                           	opt callstack 0
   574  00000F                     ___wmul@product:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0xE
   578  00000F                     	ds	1
   579  000010                     ??___ftpack:
   580  000010                     disp7s_off@i:
   581                           	opt callstack 0
   582  000010                     ___lwdiv@quotient:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0xF
   586  000010                     	ds	1
   587  000011                     disp7s_mux_Q@q:
   588                           	opt callstack 0
   589  000011                     mpap_setupToTurn@numSteps_tomove:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x10
   593  000011                     	ds	1
   594  000012                     disp7s_mux_Q@i:
   595                           	opt callstack 0
   596  000012                     utoa@buf:
   597                           	opt callstack 0
   598                           
   599                           ; 1 bytes @ 0x11
   600  000012                     	ds	1
   601  000013                     ??_disp7s_job:
   602  000013                     ?___ftadd:
   603                           	opt callstack 0
   604  000013                     ?___ftmul:
   605                           	opt callstack 0
   606  000013                     ?___lwtoft:
   607                           	opt callstack 0
   608  000013                     _mpap_setupToTurn$522:
   609                           	opt callstack 0
   610  000013                     ___lwtoft@c:
   611                           	opt callstack 0
   612  000013                     utoa@val:
   613                           	opt callstack 0
   614  000013                     ___ftadd@f1:
   615                           	opt callstack 0
   616  000013                     ___ftmul@f1:
   617                           	opt callstack 0
   618                           
   619                           ; 3 bytes @ 0x12
   620  000013                     	ds	2
   621  000015                     mpap_movetoNozzle@numNozzle:
   622                           	opt callstack 0
   623  000015                     disp7s_job@pq:
   624                           	opt callstack 0
   625  000015                     utoa@base:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x14
   629  000015                     	ds	1
   630  000016                     ___ftadd@f2:
   631                           	opt callstack 0
   632  000016                     ___ftge@ff1:
   633                           	opt callstack 0
   634  000016                     ___ftmul@f2:
   635                           	opt callstack 0
   636                           
   637                           ; 3 bytes @ 0x15
   638  000016                     	ds	1
   639  000017                     utoa@v:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0x16
   643  000017                     	ds	2
   644  000019                     ??___ftadd:
   645  000019                     ??___ftmul:
   646  000019                     utoa@c:
   647                           	opt callstack 0
   648  000019                     ___ftge@ff2:
   649                           	opt callstack 0
   650                           
   651                           ; 3 bytes @ 0x18
   652  000019                     	ds	1
   653  00001A                     itoa@buf:
   654                           	opt callstack 0
   655                           
   656                           ; 1 bytes @ 0x19
   657  00001A                     	ds	1
   658  00001B                     itoa@val:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x1A
   662  00001B                     	ds	1
   663  00001C                     ??___ftge:
   664  00001C                     ___ftadd@sign:
   665                           	opt callstack 0
   666  00001C                     ___ftmul@exp:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x1B
   670  00001C                     	ds	1
   671  00001D                     ___ftadd@exp2:
   672                           	opt callstack 0
   673  00001D                     itoa@base:
   674                           	opt callstack 0
   675  00001D                     ___ftmul@f3_as_product:
   676                           	opt callstack 0
   677                           
   678                           ; 3 bytes @ 0x1C
   679  00001D                     	ds	1
   680  00001E                     ___ftadd@exp1:
   681                           	opt callstack 0
   682                           
   683                           ; 1 bytes @ 0x1D
   684  00001E                     	ds	1
   685  00001F                     ??_ikey_parsing:
   686  00001F                     ?___ftsub:
   687                           	opt callstack 0
   688  00001F                     ?_pulsonic_getTotalSum_mlh:
   689                           	opt callstack 0
   690  00001F                     nozzle_isEnabled@n:
   691                           	opt callstack 0
   692  00001F                     ___ftsub@f1:
   693                           	opt callstack 0
   694                           
   695                           ; 3 bytes @ 0x1E
   696  00001F                     	ds	1
   697  000020                     ___ftmul@cntr:
   698                           	opt callstack 0
   699  000020                     disp7s_write_i@pDisp:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x1F
   703  000020                     	ds	1
   704  000021                     autoMode_job@cod_ret:
   705                           	opt callstack 0
   706  000021                     ___ftmul@sign:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x20
   710  000021                     	ds	1
   711  000022                     ?___fttol:
   712                           	opt callstack 0
   713  000022                     disp7s_write_i@NUM_OF_DISP:
   714                           	opt callstack 0
   715  000022                     pulsonic_getTotalSum_mlh@acc:
   716                           	opt callstack 0
   717  000022                     ___ftsub@f2:
   718                           	opt callstack 0
   719  000022                     ___fttol@f1:
   720                           	opt callstack 0
   721                           
   722                           ; 3 bytes @ 0x21
   723  000022                     	ds	1
   724  000023                     ikey_parsing@k:
   725                           	opt callstack 0
   726  000023                     disp7s_write_i@num:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0x22
   730  000023                     	ds	1
   731  000024                     
   732                           ; 1 bytes @ 0x23
   733  000024                     	ds	1
   734  000025                     ??_configMode_kb:
   735  000025                     ??_disp7s_write_i:
   736  000025                     pulsonic_getTotalSum_mlh@i:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x24
   740  000025                     	ds	1
   741  000026                     ??___fttol:
   742                           
   743                           ; 1 bytes @ 0x25
   744  000026                     	ds	2
   745  000028                     configMode_kb@cod_ret:
   746                           	opt callstack 0
   747                           
   748                           ; 1 bytes @ 0x27
   749  000028                     	ds	2
   750  00002A                     disp7s_write_i@buff:
   751                           	opt callstack 0
   752                           
   753                           ; 10 bytes @ 0x29
   754  00002A                     	ds	1
   755  00002B                     ___fttol@sign1:
   756                           	opt callstack 0
   757                           
   758                           ; 1 bytes @ 0x2A
   759  00002B                     	ds	1
   760  00002C                     ___fttol@lval:
   761                           	opt callstack 0
   762                           
   763                           ; 4 bytes @ 0x2B
   764  00002C                     	ds	4
   765  000030                     ___fttol@exp1:
   766                           	opt callstack 0
   767                           
   768                           ; 1 bytes @ 0x2F
   769  000030                     	ds	1
   770  000031                     disp7s_write_f@pDisp:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x30
   774  000031                     	ds	2
   775  000033                     disp7s_write_f@NUM_OF_DISP:
   776                           	opt callstack 0
   777                           
   778                           ; 1 bytes @ 0x32
   779  000033                     	ds	1
   780  000034                     disp7s_write_i@pi:
   781                           	opt callstack 0
   782  000034                     disp7s_write_f@num:
   783                           	opt callstack 0
   784                           
   785                           ; 3 bytes @ 0x33
   786  000034                     	ds	1
   787  000035                     disp7s_write_i@K10MULT:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x34
   791  000035                     	ds	2
   792  000037                     ??_disp7s_write_f:
   793  000037                     disp7s_write_i@i:
   794                           	opt callstack 0
   795                           
   796                           ; 1 bytes @ 0x36
   797  000037                     	ds	1
   798  000038                     disp7s_qtyDisp_writeInt@num:
   799                           	opt callstack 0
   800  000038                     disp7s_modeDisp_writeInt@num:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x37
   804  000038                     	ds	2
   805  00003A                     
   806                           ; 1 bytes @ 0x39
   807  00003A                     	ds	2
   808  00003C                     autoMode_init@init:
   809                           	opt callstack 0
   810  00003C                     visMode_disp@qty:
   811                           	opt callstack 0
   812  00003C                     configMode_disp@qty:
   813                           	opt callstack 0
   814                           
   815                           ; 3 bytes @ 0x3B
   816  00003C                     	ds	1
   817  00003D                     
   818                           ; 1 bytes @ 0x3C
   819  00003D                     	ds	2
   820  00003F                     visMode_disp@numVista:
   821                           	opt callstack 0
   822  00003F                     configMode_disp@numRegistro:
   823                           	opt callstack 0
   824                           
   825                           ; 1 bytes @ 0x3E
   826  00003F                     	ds	1
   827  000040                     visMode_job@cod_ret:
   828                           	opt callstack 0
   829  000040                     configMode_job@cod_ret:
   830                           	opt callstack 0
   831                           
   832                           ; 1 bytes @ 0x3F
   833  000040                     	ds	1
   834  000041                     main@c_access_kb:
   835                           	opt callstack 0
   836                           
   837                           ; 1 bytes @ 0x40
   838  000041                     	ds	1
   839  000042                     main@c_access_disp:
   840                           	opt callstack 0
   841                           
   842                           ; 1 bytes @ 0x41
   843  000042                     	ds	1
   844  000043                     main@codapp:
   845                           	opt callstack 0
   846                           
   847                           ; 1 bytes @ 0x42
   848  000043                     	ds	1
   849                           
   850 ;;
   851 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   852 ;;
   853 ;; *************** function _main *****************
   854 ;; Defined at:
   855 ;;		line 94 in file "main.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  codapp          1   66[COMRAM] char 
   860 ;;  c_access_dis    1   65[COMRAM] char 
   861 ;;  c_access_kb     1   64[COMRAM] char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   871 ;;      Params:         0       0       0       0       0       0       0       0       0
   872 ;;      Locals:         3       0       0       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0       0       0
   874 ;;      Totals:         3       0       0       0       0       0       0       0       0
   875 ;;Total ram usage:        3 bytes
   876 ;; Hardware stack levels required when called:   12
   877 ;; This function calls:
   878 ;;		_autoMode_init
   879 ;;		_autoMode_job
   880 ;;		_configMode_init
   881 ;;		_configMode_job
   882 ;;		_disp7s_init
   883 ;;		_disp7s_job
   884 ;;		_ikb_init
   885 ;;		_ikb_job
   886 ;;		_mpap_sych
   887 ;;		_ps_autoMode_start
   888 ;;		_pulsonic_init
   889 ;;		_pump_job
   890 ;;		_visMode_job
   891 ;; This function is called by:
   892 ;;		Startup code after reset
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text0
   897  0016E0                     __ptext0:
   898                           	opt callstack 0
   899  0016E0                     _main:
   900                           	opt callstack 19
   901                           
   902                           ;main.c: 96: int8_t c_access_kb=0;
   903                           
   904                           ;incstack = 0
   905  0016E0  0E00               	movlw	0
   906  0016E2  6E41               	movwf	main@c_access_kb,c
   907                           
   908                           ;main.c: 97: int8_t c_access_disp=0;
   909  0016E4  0E00               	movlw	0
   910  0016E6  6E42               	movwf	main@c_access_disp,c
   911                           
   912                           ;main.c: 98: int8_t codapp;;main.c: 100: LATA = 0x00;
   913  0016E8  0E00               	movlw	0
   914  0016EA  6E89               	movwf	3977,c	;volatile
   915                           
   916                           ;main.c: 101: LATC = 0x00;
   917  0016EC  0E00               	movlw	0
   918  0016EE  6E8B               	movwf	3979,c	;volatile
   919                           
   920                           ;main.c: 102: LATD = 0x00;
   921  0016F0  0E00               	movlw	0
   922  0016F2  6E8C               	movwf	3980,c	;volatile
   923                           
   924                           ;main.c: 103: LATE = 0x00;
   925  0016F4  0E00               	movlw	0
   926  0016F6  6E8D               	movwf	3981,c	;volatile
   927                           
   928                           ;main.c: 104: LATB = 0x00;
   929  0016F8  0E00               	movlw	0
   930  0016FA  6E8A               	movwf	3978,c	;volatile
   931                           
   932                           ;main.c: 106: ADCON1 = 0x0F;
   933  0016FC  0E0F               	movlw	15
   934  0016FE  6EC1               	movwf	4033,c	;volatile
   935                           
   936                           ;main.c: 107: CMCON=0xCF;
   937  001700  0ECF               	movlw	207
   938  001702  6EB4               	movwf	4020,c	;volatile
   939                           
   940                           ;main.c: 110: UCON = 0;
   941  001704  0E00               	movlw	0
   942  001706  6E6D               	movwf	3949,c	;volatile
   943                           
   944                           ;main.c: 111: UCFG = 1<<3;
   945  001708  0E08               	movlw	8
   946  00170A  6E6F               	movwf	3951,c	;volatile
   947                           
   948                           ;main.c: 112: T0CON = 0B10000111;
   949  00170C  0E87               	movlw	135
   950  00170E  6ED5               	movwf	4053,c	;volatile
   951                           
   952                           ;main.c: 114: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
   953  001710  68D7               	setf	4055,c	;volatile
   954                           
   955                           ;main.c: 115: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
   956  001712  0ED1               	movlw	209
   957  001714  6ED6               	movwf	4054,c	;volatile
   958                           
   959                           ;main.c: 116: TMR0IE = 1;
   960  001716  8AF2               	bsf	4082,5,c	;volatile
   961  001718  808D               	bsf	3981,0,c	;volatile
   962  00171A  9096               	bcf	3990,0,c	;volatile
   963  00171C  9095               	bcf	3989,0,c	;volatile
   964  00171E  9295               	bcf	3989,1,c	;volatile
   965  001720  9495               	bcf	3989,2,c	;volatile
   966  001722  9695               	bcf	3989,3,c	;volatile
   967  001724  928B               	bcf	3979,1,c	;volatile
   968  001726  9294               	bcf	3988,1,c	;volatile
   969  001728  8296               	bsf	3990,1,c	;volatile
   970  00172A  8094               	bsf	3988,0,c	;volatile
   971  00172C  8496               	bsf	3990,2,c	;volatile
   972                           
   973                           ;main.c: 134: ikb_init();
   974  00172E  EC14  F00D         	call	_ikb_init	;wreg free
   975                           
   976                           ; BSR set to: 0
   977                           ;main.c: 135: disp7s_init();
   978  001732  EC9F  F011         	call	_disp7s_init	;wreg free
   979                           
   980                           ;main.c: 136: pulsonic_init();
   981  001736  EC6F  F011         	call	_pulsonic_init	;wreg free
   982                           
   983                           ; BSR set to: 1
   984                           ;main.c: 138: unlock.kb = 1;
   985  00173A  0100               	movlb	0	; () banked
   986  00173C  81CB               	bsf	_unlock& (0+255),0,b
   987                           
   988                           ; BSR set to: 0
   989                           ;main.c: 140: unlock.visMode = 0;
   990  00173E  95CB               	bcf	_unlock& (0+255),2,b
   991                           
   992                           ; BSR set to: 0
   993                           ;main.c: 143: unlock.autoMode = 1;
   994  001740  83CB               	bsf	_unlock& (0+255),1,b
   995                           
   996                           ; BSR set to: 0
   997                           ;main.c: 144: autoMode_init(AUTOMODE_INIT_RESTART);
   998  001742  0E00               	movlw	0
   999  001744  EC9B  F013         	call	_autoMode_init
  1000                           
  1001                           ;main.c: 145: smain.focus.kb = FOCUS_KB_AUTOMODE;
  1002  001748  0E01               	movlw	1
  1003  00174A  6E48               	movwf	_smain+1,c	;volatile
  1004                           
  1005                           ;main.c: 146: disp_owner = DISPOWNER_AUTOMODE;
  1006  00174C  0E00               	movlw	0
  1007  00174E  6E51               	movwf	_disp_owner,c
  1008                           
  1009                           ;main.c: 148: funcMach = FUNCMACH_NORMAL;
  1010  001750  0E01               	movlw	1
  1011  001752  0100               	movlb	0	; () banked
  1012  001754  6FCA               	movwf	_funcMach& (0+255),b
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;main.c: 151: GIE = 1;
  1016  001756  8EF2               	bsf	4082,7,c	;volatile
  1017  001758                     l6172:
  1018                           
  1019                           ;main.c: 153: {;main.c: 154: if (isr_flag.f1ms)
  1020  001758  0100               	movlb	0	; () banked
  1021  00175A  A1CC               	btfss	_isr_flag& (0+255),0,b	;volatile
  1022  00175C  D002               	goto	l125
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 155: {;main.c: 156: isr_flag.f1ms = 0;
  1026  00175E  91CC               	bcf	_isr_flag& (0+255),0,b	;volatile
  1027                           
  1028                           ;main.c: 157: smain.f.f1ms = 1;
  1029  001760  8047               	bsf	_smain,0,c	;volatile
  1030  001762                     l125:
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;main.c: 158: };main.c: 159: if (smain.f.f1ms)
  1034  001762  A047               	btfss	_smain,0,c	;volatile
  1035  001764  D013               	goto	l6190
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;main.c: 160: {;main.c: 161: if (++c_access_kb == 20)
  1039  001766  2A41               	incf	main@c_access_kb,f,c
  1040  001768  0E14               	movlw	20
  1041  00176A  1841               	xorwf	main@c_access_kb,w,c
  1042  00176C  A4D8               	btfss	status,2,c
  1043  00176E  D005               	goto	l6184
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;main.c: 162: {;main.c: 163: c_access_kb = 0;
  1047  001770  0E00               	movlw	0
  1048  001772  6E41               	movwf	main@c_access_kb,c
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;main.c: 164: if (unlock.kb)
  1052  001774  B1CB               	btfsc	_unlock& (0+255),0,b
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;main.c: 165: {ikb_job();}
  1056  001776  ECDD  F014         	call	_ikb_job	;wreg free
  1057  00177A                     l6184:
  1058                           
  1059                           ;main.c: 166: };main.c: 167: if (++c_access_disp == 3)
  1060  00177A  2A42               	incf	main@c_access_disp,f,c
  1061  00177C  0E03               	movlw	3
  1062  00177E  1842               	xorwf	main@c_access_disp,w,c
  1063  001780  A4D8               	btfss	status,2,c
  1064  001782  D004               	goto	l6190
  1065                           
  1066                           ;main.c: 168: {;main.c: 169: c_access_disp = 0;
  1067  001784  0E00               	movlw	0
  1068  001786  6E42               	movwf	main@c_access_disp,c
  1069                           
  1070                           ;main.c: 170: disp7s_job();
  1071  001788  ECF0  F00F         	call	_disp7s_job	;wreg free
  1072  00178C                     l6190:
  1073                           
  1074                           ;main.c: 171: };main.c: 172: };main.c: 179: if (funcMach == FUNCMACH_NORMAL)
  1075  00178C  0100               	movlb	0	; () banked
  1076  00178E  05CA               	decf	_funcMach& (0+255),w,b
  1077  001790  A4D8               	btfss	status,2,c
  1078  001792  D039               	goto	l6230
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;main.c: 180: {;main.c: 182: if (unlock.autoMode)
  1082  001794  A3CB               	btfss	_unlock& (0+255),1,b
  1083  001796  D01E               	goto	l6214
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 183: {;main.c: 184: codapp = autoMode_job();
  1087  001798  EC8B  F014         	call	_autoMode_job	;wreg free
  1088  00179C  6E43               	movwf	main@codapp,c
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;main.c: 186: if (codapp == 1)
  1092  00179E  0443               	decf	main@codapp,w,c
  1093  0017A0  A4D8               	btfss	status,2,c
  1094  0017A2  D006               	goto	l6202
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;main.c: 187: {;main.c: 188: smain.focus.kb = FOCUS_KB_VISMODE;
  1098  0017A4  0E02               	movlw	2
  1099  0017A6  6E48               	movwf	_smain+1,c	;volatile
  1100                           
  1101                           ;main.c: 189: disp_owner = DISPOWNER_VISMODE;
  1102  0017A8  0E01               	movlw	1
  1103  0017AA  6E51               	movwf	_disp_owner,c
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;main.c: 190: unlock.visMode = 1;
  1107  0017AC  85CB               	bsf	_unlock& (0+255),2,b
  1108                           
  1109                           ;main.c: 191: }
  1110  0017AE  D012               	goto	l6214
  1111  0017B0                     l6202:
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;main.c: 192: else if (codapp == 2)
  1115  0017B0  0E02               	movlw	2
  1116  0017B2  1843               	xorwf	main@codapp,w,c
  1117  0017B4  A4D8               	btfss	status,2,c
  1118  0017B6  D00E               	goto	l6214
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;main.c: 193: {;main.c: 194: mpap.mode = MPAP_STALL_MODE;
  1122  0017B8  0E01               	movlw	1
  1123  0017BA  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  1124                           
  1125                           ;main.c: 196: funcMach = FUNCMACH_CONFIG;
  1126  0017BC  0E02               	movlw	2
  1127  0017BE  6FCA               	movwf	_funcMach& (0+255),b
  1128                           
  1129                           ;main.c: 198: smain.focus.kb = FOCUS_KB_CONFIGMODE;
  1130  0017C0  0E03               	movlw	3
  1131  0017C2  6E48               	movwf	_smain+1,c	;volatile
  1132                           
  1133                           ;main.c: 199: disp_owner = DISPOWNER_CONFIGMODE;
  1134  0017C4  0E02               	movlw	2
  1135  0017C6  6E51               	movwf	_disp_owner,c
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;main.c: 200: unlock.visMode = 0;
  1139  0017C8  95CB               	bcf	_unlock& (0+255),2,b
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;main.c: 201: unlock.autoMode = 0;
  1143  0017CA  93CB               	bcf	_unlock& (0+255),1,b
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;main.c: 202: configMode_init(0x0);
  1147  0017CC  0E00               	movlw	0
  1148  0017CE  ECD7  F014         	call	_configMode_init
  1149  0017D2  8A89               	bsf	3977,5,c	;volatile
  1150  0017D4                     l6214:
  1151                           
  1152                           ;main.c: 204: };main.c: 205: };main.c: 206: if (unlock.visMode)
  1153  0017D4  0100               	movlb	0	; () banked
  1154  0017D6  A5CB               	btfss	_unlock& (0+255),2,b
  1155  0017D8  D022               	goto	l6238
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;main.c: 207: {;main.c: 208: codapp = visMode_job();
  1159  0017DA  ECB3  F013         	call	_visMode_job	;wreg free
  1160  0017DE  6E43               	movwf	main@codapp,c
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;main.c: 210: if (codapp == 1)
  1164  0017E0  0443               	decf	main@codapp,w,c
  1165  0017E2  A4D8               	btfss	status,2,c
  1166  0017E4  D009               	goto	l6226
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;main.c: 211: {;main.c: 212: smain.focus.kb = FOCUS_KB_AUTOMODE;
  1170  0017E6  0E01               	movlw	1
  1171  0017E8  6E48               	movwf	_smain+1,c	;volatile
  1172                           
  1173                           ;main.c: 213: disp_owner = DISPOWNER_AUTOMODE;
  1174  0017EA  0E00               	movlw	0
  1175  0017EC  6E51               	movwf	_disp_owner,c
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;main.c: 214: unlock.visMode = 0;
  1179  0017EE  95CB               	bcf	_unlock& (0+255),2,b
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;main.c: 216: autoMode_init(AUTOMODE_INIT_CONTINUE);
  1183  0017F0  0E01               	movlw	1
  1184  0017F2  EC9B  F013         	call	_autoMode_init
  1185                           
  1186                           ;main.c: 217: }
  1187  0017F6  D013               	goto	l6238
  1188  0017F8                     l6226:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;main.c: 218: else if (codapp == 2)
  1192  0017F8  0E02               	movlw	2
  1193  0017FA  1843               	xorwf	main@codapp,w,c
  1194  0017FC  A4D8               	btfss	status,2,c
  1195  0017FE  D00F               	goto	l6238
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;main.c: 219: {;main.c: 220: funcMach = FUNCMACH_CONFIG;
  1199  001800  0E02               	movlw	2
  1200  001802  6FCA               	movwf	_funcMach& (0+255),b
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 221: };main.c: 222: };main.c: 223: }
  1204  001804  D00C               	goto	l6238
  1205  001806                     l6230:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;main.c: 224: else if (funcMach == FUNCMACH_CONFIG)
  1209  001806  0E02               	movlw	2
  1210  001808  19CA               	xorwf	_funcMach& (0+255),w,b
  1211  00180A  A4D8               	btfss	status,2,c
  1212  00180C  D008               	goto	l6238
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 225: {;main.c: 226: if (configMode_job())
  1216  00180E  ECCA  F013         	call	_configMode_job	;wreg free
  1217  001812  0900               	iorlw	0
  1218  001814  B4D8               	btfsc	status,2,c
  1219  001816  D003               	goto	l6238
  1220                           
  1221                           ;main.c: 227: {;main.c: 228: ps_autoMode_start();
  1222  001818  EC28  F014         	call	_ps_autoMode_start	;wreg free
  1223                           
  1224                           ; BSR set to: 0
  1225  00181C  9A89               	bcf	3977,5,c	;volatile
  1226  00181E                     l6238:
  1227                           
  1228                           ;main.c: 231: };main.c: 232: };main.c: 235: pump_job();
  1229  00181E  EC0C  F011         	call	_pump_job	;wreg free
  1230                           
  1231                           ;main.c: 236: mpap_sych();
  1232  001822  EC6A  F00F         	call	_mpap_sych	;wreg free
  1233                           
  1234                           ;main.c: 238: smain.f.f1ms = 0;
  1235  001826  9047               	bcf	_smain,0,c	;volatile
  1236  001828  D797               	goto	l6172
  1237  00182A                     __end_of_main:
  1238                           	opt callstack 0
  1239                           
  1240 ;; *************** function _visMode_job *****************
  1241 ;; Defined at:
  1242 ;;		line 26 in file "visualizerMode.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  cod_ret         1   63[COMRAM] char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      char 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 3F/0
  1253 ;;		On exit  : 3F/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0
  1257 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1259 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1260 ;;Total ram usage:        1 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:   11
  1263 ;; This function calls:
  1264 ;;		_visMode_disp
  1265 ;;		_visMode_kb
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text1
  1272  002766                     __ptext1:
  1273                           	opt callstack 0
  1274  002766                     _visMode_job:
  1275                           	opt callstack 19
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;visualizerMode.c: 28: int8_t cod_ret = 0;
  1279                           
  1280                           ;incstack = 0
  1281  002766  0E00               	movlw	0
  1282  002768  6E40               	movwf	visMode_job@cod_ret,c
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;visualizerMode.c: 30: if (smain.focus.kb == FOCUS_KB_VISMODE)
  1286  00276A  0E02               	movlw	2
  1287  00276C  1848               	xorwf	_smain+1,w,c	;volatile
  1288  00276E  A4D8               	btfss	status,2,c
  1289  002770  D003               	goto	l6010
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;visualizerMode.c: 31: {;visualizerMode.c: 32: cod_ret = visMode_kb();
  1293  002772  EC22  F00F         	call	_visMode_kb	;wreg free
  1294  002776  6E40               	movwf	visMode_job@cod_ret,c
  1295  002778                     l6010:
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;visualizerMode.c: 33: };visualizerMode.c: 35: if ( visMode.disp7s_accessReq == 1)
  1299  002778  05BD               	decf	_visMode& (0+255),w,b
  1300  00277A  A4D8               	btfss	status,2,c
  1301  00277C  D009               	goto	l6018
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;visualizerMode.c: 36: {;visualizerMode.c: 37: if (disp_owner == DISPOWNER_VISMODE)
  1305  00277E  0451               	decf	_disp_owner,w,c
  1306  002780  A4D8               	btfss	status,2,c
  1307  002782  D003               	goto	l6016
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;visualizerMode.c: 38: {;visualizerMode.c: 39: visMode_disp(visMode.numVista);
  1311  002784  51BE               	movf	(_visMode+1)& (0+255),w,b
  1312  002786  EC2C  F010         	call	_visMode_disp
  1313  00278A                     l6016:
  1314                           
  1315                           ;visualizerMode.c: 40: };visualizerMode.c: 41: visMode.disp7s_accessReq = 0;
  1316  00278A  0E00               	movlw	0
  1317  00278C  0100               	movlb	0	; () banked
  1318  00278E  6FBD               	movwf	_visMode& (0+255),b
  1319  002790                     l6018:
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;visualizerMode.c: 42: };visualizerMode.c: 44: return cod_ret;
  1323  002790  5040               	movf	visMode_job@cod_ret,w,c
  1324                           
  1325                           ; BSR set to: 0
  1326  002792  0012               	return		;funcret
  1327  002794                     __end_of_visMode_job:
  1328                           	opt callstack 0
  1329                           
  1330 ;; *************** function _visMode_kb *****************
  1331 ;; Defined at:
  1332 ;;		line 46 in file "visualizerMode.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  cod_ret         1   11[COMRAM] char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      char 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 3F/0
  1343 ;;		On exit  : 3F/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0
  1347 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1349 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1350 ;;Total ram usage:        1 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    6
  1353 ;; This function calls:
  1354 ;;		_ikb_key_is_ready2read
  1355 ;;		_ikb_key_was_read
  1356 ;; This function is called by:
  1357 ;;		_visMode_job
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text2
  1362  001E44                     __ptext2:
  1363                           	opt callstack 0
  1364  001E44                     _visMode_kb:
  1365                           	opt callstack 23
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;visualizerMode.c: 48: int8_t cod_ret = 0;
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;incstack = 0
  1372  001E44  0E00               	movlw	0
  1373  001E46  6E0C               	movwf	visMode_kb@cod_ret,c
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;visualizerMode.c: 50: if (ikb_key_is_ready2read(0))
  1377  001E48  0E00               	movlw	0
  1378  001E4A  EC55  F014         	call	_ikb_key_is_ready2read
  1379  001E4E  0900               	iorlw	0
  1380  001E50  B4D8               	btfsc	status,2,c
  1381  001E52  D010               	goto	l5634
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;visualizerMode.c: 51: {;visualizerMode.c: 52: ikb_key_was_read(0);
  1385  001E54  0E00               	movlw	0
  1386  001E56  EC9F  F014         	call	_ikb_key_was_read
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;visualizerMode.c: 54: if (++visMode.numVista >= (8+1))
  1390  001E5A  2BBE               	incf	(_visMode+1)& (0+255),f,b
  1391  001E5C  51BE               	movf	(_visMode+1)& (0+255),w,b
  1392  001E5E  0A80               	xorlw	128
  1393  001E60  0F77               	addlw	-137
  1394  001E62  A0D8               	btfss	status,0,c
  1395  001E64  D005               	goto	l5632
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;visualizerMode.c: 55: {;visualizerMode.c: 56: visMode.numVista = 0x00;
  1399  001E66  0E00               	movlw	0
  1400  001E68  6FBE               	movwf	(_visMode+1)& (0+255),b
  1401                           
  1402                           ;visualizerMode.c: 57: cod_ret = 1;
  1403  001E6A  0E01               	movlw	1
  1404  001E6C  6E0C               	movwf	visMode_kb@cod_ret,c
  1405                           
  1406                           ;visualizerMode.c: 58: }
  1407  001E6E  D002               	goto	l5634
  1408  001E70                     l5632:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;visualizerMode.c: 59: else;visualizerMode.c: 60: {;visualizerMode.c: 61: visMode.disp7s
      +                          _accessReq = 1;
  1412  001E70  0E01               	movlw	1
  1413  001E72  6FBD               	movwf	_visMode& (0+255),b
  1414  001E74                     l5634:
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;visualizerMode.c: 62: };visualizerMode.c: 63: };visualizerMode.c: 65: if (ikb_key_is_re
      +                          ady2read(1))
  1418  001E74  0E01               	movlw	1
  1419  001E76  EC55  F014         	call	_ikb_key_is_ready2read
  1420  001E7A  0900               	iorlw	0
  1421  001E7C  B4D8               	btfsc	status,2,c
  1422  001E7E  D00D               	goto	l5644
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;visualizerMode.c: 66: {;visualizerMode.c: 67: ikb_key_was_read(1);
  1426  001E80  0E01               	movlw	1
  1427  001E82  EC9F  F014         	call	_ikb_key_was_read
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;visualizerMode.c: 69: if (--visMode.numVista < 0)
  1431  001E86  07BE               	decf	(_visMode+1)& (0+255),f,b
  1432  001E88  AFBE               	btfss	(_visMode+1)& (0+255),7,b
  1433  001E8A  D005               	goto	l5642
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;visualizerMode.c: 70: {;visualizerMode.c: 71: visMode.numVista = (8+1)-1;
  1437  001E8C  0E08               	movlw	8
  1438  001E8E  6FBE               	movwf	(_visMode+1)& (0+255),b
  1439                           
  1440                           ;visualizerMode.c: 72: cod_ret = 1;
  1441  001E90  0E01               	movlw	1
  1442  001E92  6E0C               	movwf	visMode_kb@cod_ret,c
  1443                           
  1444                           ;visualizerMode.c: 73: }
  1445  001E94  D002               	goto	l5644
  1446  001E96                     l5642:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;visualizerMode.c: 74: else;visualizerMode.c: 75: {;visualizerMode.c: 76: visMode.disp7s
      +                          _accessReq = 1;
  1450  001E96  0E01               	movlw	1
  1451  001E98  6FBD               	movwf	_visMode& (0+255),b
  1452  001E9A                     l5644:
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;visualizerMode.c: 77: };visualizerMode.c: 78: };visualizerMode.c: 79: if (ikb_key_is_re
      +                          ady2read(2))
  1456  001E9A  0E02               	movlw	2
  1457  001E9C  EC55  F014         	call	_ikb_key_is_ready2read
  1458  001EA0  0900               	iorlw	0
  1459  001EA2  B4D8               	btfsc	status,2,c
  1460  001EA4  D003               	goto	l909
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;visualizerMode.c: 80: {;visualizerMode.c: 81: ikb_key_was_read(2);
  1464  001EA6  0E02               	movlw	2
  1465  001EA8  EC9F  F014         	call	_ikb_key_was_read
  1466  001EAC                     l909:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;visualizerMode.c: 83: };visualizerMode.c: 84: if (ikb_key_is_ready2read(3))
  1470  001EAC  0E03               	movlw	3
  1471  001EAE  EC55  F014         	call	_ikb_key_is_ready2read
  1472  001EB2  0900               	iorlw	0
  1473  001EB4  B4D8               	btfsc	status,2,c
  1474  001EB6  D003               	goto	l910
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;visualizerMode.c: 85: {;visualizerMode.c: 86: ikb_key_was_read(3);
  1478  001EB8  0E03               	movlw	3
  1479  001EBA  EC9F  F014         	call	_ikb_key_was_read
  1480  001EBE                     l910:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;visualizerMode.c: 88: };visualizerMode.c: 89: if (ikb_key_is_ready2read(4))
  1484  001EBE  0E04               	movlw	4
  1485  001EC0  EC55  F014         	call	_ikb_key_is_ready2read
  1486  001EC4  0900               	iorlw	0
  1487  001EC6  B4D8               	btfsc	status,2,c
  1488  001EC8  D003               	goto	l5652
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;visualizerMode.c: 90: {;visualizerMode.c: 91: ikb_key_was_read(4);
  1492  001ECA  0E04               	movlw	4
  1493  001ECC  EC9F  F014         	call	_ikb_key_was_read
  1494  001ED0                     l5652:
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;visualizerMode.c: 93: };visualizerMode.c: 94: return cod_ret;
  1498  001ED0  500C               	movf	visMode_kb@cod_ret,w,c
  1499                           
  1500                           ; BSR set to: 0
  1501  001ED2  0012               	return		;funcret
  1502  001ED4                     __end_of_visMode_kb:
  1503                           	opt callstack 0
  1504                           
  1505 ;; *************** function _visMode_disp *****************
  1506 ;; Defined at:
  1507 ;;		line 96 in file "visualizerMode.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  numVista        1    wreg     char 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  numVista        1   62[COMRAM] char 
  1512 ;;  qty             3   59[COMRAM] char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 3F/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1522 ;;      Params:         0       0       0       0       0       0       0       0       0
  1523 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1525 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1526 ;;Total ram usage:        4 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:   10
  1529 ;; This function calls:
  1530 ;;		_disp7s_modeDisp_writeInt
  1531 ;;		_disp7s_modeDisp_writeText_oil
  1532 ;;		_disp7s_qtyDisp_writeFloat
  1533 ;;		_disp7s_qtyDisp_writeInt
  1534 ;;		_disp7s_qtyDisp_writeText_OFF
  1535 ;; This function is called by:
  1536 ;;		_visMode_job
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text3
  1541  002058                     __ptext3:
  1542                           	opt callstack 0
  1543  002058                     _visMode_disp:
  1544                           	opt callstack 19
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;incstack = 0
  1548                           ;visMode_disp@numVista stored from wreg
  1549  002058  6E3F               	movwf	visMode_disp@numVista,c
  1550                           
  1551                           ;visualizerMode.c: 98: double qty;;visualizerMode.c: 100: if (numVista < 8)
  1552  00205A  503F               	movf	visMode_disp@numVista,w,c
  1553  00205C  0A80               	xorlw	128
  1554  00205E  0F78               	addlw	-136
  1555  002060  B0D8               	btfsc	status,0,c
  1556  002062  D02A               	goto	l5668
  1557                           
  1558                           ;visualizerMode.c: 101: {;visualizerMode.c: 102: disp7s_modeDisp_writeInt(numVista+1);
  1559  002064  0E01               	movlw	1
  1560  002066  243F               	addwf	visMode_disp@numVista,w,c
  1561  002068  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  1562  00206A  6AE8               	clrf	wreg,c
  1563  00206C  B0D8               	btfsc	status,0,c
  1564  00206E  2AE8               	incf	wreg,f,c
  1565  002070  BE3F               	btfsc	visMode_disp@numVista,7,c
  1566  002072  06E8               	decf	wreg,f,c
  1567  002074  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  1568  002076  EC7E  F014         	call	_disp7s_modeDisp_writeInt	;wreg free
  1569                           
  1570                           ;visualizerMode.c: 104: qty = pulsonic.nozzle[numVista].Q_mlh;
  1571  00207A  503F               	movf	visMode_disp@numVista,w,c
  1572  00207C  0D06               	mullw	6
  1573  00207E  0E06               	movlw	low (_pulsonic+6)
  1574  002080  24F3               	addwf	prodl,w,c
  1575  002082  6ED9               	movwf	fsr2l,c
  1576  002084  0E01               	movlw	high (_pulsonic+6)
  1577  002086  20F4               	addwfc	prodh,w,c
  1578  002088  6EDA               	movwf	fsr2h,c
  1579  00208A  CFDE F03C          	movff	postinc2,visMode_disp@qty
  1580  00208E  CFDE F03D          	movff	postinc2,visMode_disp@qty+1
  1581  002092  CFDD F03E          	movff	postdec2,visMode_disp@qty+2
  1582                           
  1583                           ;visualizerMode.c: 105: if (qty == 0)
  1584  002096  503C               	movf	visMode_disp@qty,w,c
  1585  002098  103D               	iorwf	visMode_disp@qty+1,w,c
  1586  00209A  103E               	iorwf	visMode_disp@qty+2,w,c
  1587  00209C  A4D8               	btfss	status,2,c
  1588  00209E  D003               	goto	l5666
  1589                           
  1590                           ;visualizerMode.c: 106: {;visualizerMode.c: 107: disp7s_qtyDisp_writeText_OFF();
  1591  0020A0  ECB2  F014         	call	_disp7s_qtyDisp_writeText_OFF	;wreg free
  1592                           
  1593                           ;visualizerMode.c: 108: }
  1594  0020A4  0012               	return	
  1595  0020A6                     l5666:
  1596                           
  1597                           ;visualizerMode.c: 109: else;visualizerMode.c: 110: {;visualizerMode.c: 111: disp7s_qtyD
      +                          isp_writeFloat( qty );
  1598  0020A6  C03C  F141         	movff	visMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  1599  0020AA  C03D  F142         	movff	visMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  1600  0020AE  C03E  F143         	movff	visMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  1601  0020B2  EC38  F014         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  1602  0020B6  0012               	return	
  1603  0020B8                     l5668:
  1604                           
  1605                           ;visualizerMode.c: 114: else;visualizerMode.c: 115: {;visualizerMode.c: 116: disp7s_mode
      +                          Disp_writeText_oil();
  1606  0020B8  ECD1  F014         	call	_disp7s_modeDisp_writeText_oil	;wreg free
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;visualizerMode.c: 117: disp7s_qtyDisp_writeInt( pulsonic.oil.viscosity );
  1610  0020BC  5137               	movf	(_pulsonic+55)& (0+255),w,b
  1611  0020BE  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  1612  0020C0  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  1613  0020C2  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  1614  0020C4  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  1615  0020C6  EC71  F014         	call	_disp7s_qtyDisp_writeInt	;wreg free
  1616  0020CA  0012               	return		;funcret
  1617  0020CC                     __end_of_visMode_disp:
  1618                           	opt callstack 0
  1619                           
  1620 ;; *************** function _pump_job *****************
  1621 ;; Defined at:
  1622 ;;		line 22 in file "pump.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  cod_ret         1    0        char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      char 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1636 ;;      Params:         0       0       0       0       0       0       0       0       0
  1637 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1639 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1640 ;;Total ram usage:        1 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    5
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text4
  1651  002218                     __ptext4:
  1652                           	opt callstack 0
  1653  002218                     _pump_job:
  1654                           	opt callstack 25
  1655                           
  1656                           ;pump.c: 25: static int8_t c;;pump.c: 27: if (pump.ticks > 0)
  1657                           
  1658                           ;incstack = 0
  1659  002218  5044               	movf	_pump,w,c
  1660  00221A  1045               	iorwf	_pump+1,w,c
  1661  00221C  B4D8               	btfsc	status,2,c
  1662  00221E  0012               	return	
  1663                           
  1664                           ;pump.c: 28: {;pump.c: 29: if (pump.sm0 == 0)
  1665  002220  5046               	movf	_pump+2,w,c
  1666  002222  A4D8               	btfss	status,2,c
  1667  002224  D005               	goto	l6052
  1668  002226  908D               	bcf	3981,0,c	;volatile
  1669                           
  1670                           ;pump.c: 32: c = 0x0;
  1671  002228  0E00               	movlw	0
  1672  00222A  6E4F               	movwf	pump_job@c,c
  1673                           
  1674                           ;pump.c: 33: pump.sm0++;
  1675  00222C  2A46               	incf	_pump+2,f,c
  1676                           
  1677                           ;pump.c: 34: }
  1678  00222E  0012               	return	
  1679  002230                     l6052:
  1680                           
  1681                           ;pump.c: 35: else if (pump.sm0 == 1)
  1682  002230  0446               	decf	_pump+2,w,c
  1683  002232  A4D8               	btfss	status,2,c
  1684  002234  D00C               	goto	l6064
  1685                           
  1686                           ;pump.c: 36: {;pump.c: 37: if (smain.f.f1ms)
  1687  002236  A047               	btfss	_smain,0,c	;volatile
  1688  002238  0012               	return	
  1689                           
  1690                           ;pump.c: 38: {;pump.c: 39: if (++c == 50)
  1691  00223A  2A4F               	incf	pump_job@c,f,c
  1692  00223C  0E32               	movlw	50
  1693  00223E  184F               	xorwf	pump_job@c,w,c
  1694  002240  A4D8               	btfss	status,2,c
  1695  002242  0012               	return	
  1696                           
  1697                           ;pump.c: 40: {;pump.c: 41: c=0x00;
  1698  002244  0E00               	movlw	0
  1699  002246  6E4F               	movwf	pump_job@c,c
  1700                           
  1701                           ;pump.c: 42: pump.sm0++;
  1702  002248  2A46               	incf	_pump+2,f,c
  1703  00224A  808D               	bsf	3981,0,c	;volatile
  1704                           
  1705                           ;pump.c: 44: };pump.c: 45: };pump.c: 46: }
  1706  00224C  0012               	return	
  1707  00224E                     l6064:
  1708                           
  1709                           ;pump.c: 47: else if (pump.sm0 == 2)
  1710  00224E  0E02               	movlw	2
  1711  002250  1846               	xorwf	_pump+2,w,c
  1712  002252  A4D8               	btfss	status,2,c
  1713  002254  0012               	return	
  1714                           
  1715                           ;pump.c: 48: {;pump.c: 49: if (smain.f.f1ms)
  1716  002256  A047               	btfss	_smain,0,c	;volatile
  1717  002258  0012               	return	
  1718                           
  1719                           ;pump.c: 50: {;pump.c: 51: if (++c == 50)
  1720  00225A  2A4F               	incf	pump_job@c,f,c
  1721  00225C  0E32               	movlw	50
  1722  00225E  184F               	xorwf	pump_job@c,w,c
  1723  002260  A4D8               	btfss	status,2,c
  1724  002262  0012               	return	
  1725                           
  1726                           ;pump.c: 52: {;pump.c: 53: c=0x00;
  1727  002264  0E00               	movlw	0
  1728  002266  6E4F               	movwf	pump_job@c,c
  1729                           
  1730                           ;pump.c: 54: pump.sm0 = 0x00;
  1731  002268  0E00               	movlw	0
  1732  00226A  6E46               	movwf	_pump+2,c
  1733                           
  1734                           ;pump.c: 56: if (--pump.ticks == 0)
  1735  00226C  0644               	decf	_pump,f,c
  1736  00226E  A0D8               	btfss	status,0,c
  1737  002270  0645               	decf	_pump+1,f,c
  1738  002272  5044               	movf	_pump,w,c
  1739  002274  1045               	iorwf	_pump+1,w,c
  1740  002276  B4D8               	btfsc	status,2,c
  1741  002278  0012               	return	
  1742  00227A  0012               	return	
  1743  00227C                     __end_of_pump_job:
  1744                           	opt callstack 0
  1745                           
  1746 ;; *************** function _pulsonic_init *****************
  1747 ;; Defined at:
  1748 ;;		line 7 in file "pulsonic.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  i               1   10[COMRAM] char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 3F/1
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1762 ;;      Params:         0       0       0       0       0       0       0       0       0
  1763 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1765 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1766 ;;Total ram usage:        1 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    5
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text5
  1777  0022DE                     __ptext5:
  1778                           	opt callstack 0
  1779  0022DE                     _pulsonic_init:
  1780                           	opt callstack 25
  1781                           
  1782                           ;pulsonic.c: 9: int8_t i;;pulsonic.c: 10: pulsonic.dist_total_time = 60;
  1783                           
  1784                           ;incstack = 0
  1785  0022DE  0E00               	movlw	0
  1786  0022E0  0101               	movlb	1	; () banked
  1787  0022E2  6F03               	movwf	(_pulsonic+3)& (0+255),b
  1788  0022E4  0E3C               	movlw	60
  1789  0022E6  6F02               	movwf	(_pulsonic+2)& (0+255),b
  1790                           
  1791                           ;pulsonic.c: 14: for (i=0; i< 8; i++)
  1792  0022E8  0E00               	movlw	0
  1793  0022EA  6E0B               	movwf	pulsonic_init@i,c
  1794  0022EC                     l5912:
  1795                           
  1796                           ;pulsonic.c: 15: {;pulsonic.c: 16: pulsonic.nozzle[i].Q_mlh = 2.4f;
  1797  0022EC  500B               	movf	pulsonic_init@i,w,c
  1798  0022EE  0D06               	mullw	6
  1799  0022F0  0E06               	movlw	low (_pulsonic+6)
  1800  0022F2  24F3               	addwf	prodl,w,c
  1801  0022F4  6ED9               	movwf	fsr2l,c
  1802  0022F6  0E01               	movlw	high (_pulsonic+6)
  1803  0022F8  20F4               	addwfc	prodh,w,c
  1804  0022FA  6EDA               	movwf	fsr2h,c
  1805  0022FC  0E9A               	movlw	154
  1806  0022FE  6EDE               	movwf	postinc2,c
  1807  002300  0E19               	movlw	25
  1808  002302  6EDE               	movwf	postinc2,c
  1809  002304  0E40               	movlw	64
  1810  002306  6EDE               	movwf	postinc2,c
  1811  002308  2A0B               	incf	pulsonic_init@i,f,c
  1812  00230A  500B               	movf	pulsonic_init@i,w,c
  1813  00230C  0A80               	xorlw	128
  1814  00230E  0F78               	addlw	-136
  1815  002310  A0D8               	btfss	status,0,c
  1816  002312  D7EC               	goto	l5912
  1817                           
  1818                           ;pulsonic.c: 17: };pulsonic.c: 18: pulsonic.oil.viscosity = OIL_VISCOSITY[0];
  1819  002314  0E0B               	movlw	low _OIL_VISCOSITY
  1820  002316  6EF6               	movwf	tblptrl,c
  1821  002318                     	if	1	;There is more than 1 active tblptr byte
  1822  002318  0E08               	movlw	high _OIL_VISCOSITY
  1823  00231A  6EF7               	movwf	tblptrh,c
  1824  00231C                     	endif
  1825  00231C                     	if	0	;There are less than 3 active tblptr bytes
  1826  00231C                     	endif
  1827  00231C  0008               	tblrd		*
  1828  00231E  CFF5 F137          	movff	tablat,_pulsonic+55
  1829                           
  1830                           ;pulsonic.c: 20: pulsonic.nozzle[3].Q_mlh = 0;
  1831  002322  0E00               	movlw	0
  1832  002324  0101               	movlb	1	; () banked
  1833  002326  6F18               	movwf	(_pulsonic+24)& (0+255),b
  1834  002328  0E00               	movlw	0
  1835  00232A  6F19               	movwf	(_pulsonic+25)& (0+255),b
  1836  00232C  0E00               	movlw	0
  1837  00232E  6F1A               	movwf	(_pulsonic+26)& (0+255),b
  1838                           
  1839                           ; BSR set to: 1
  1840                           ;pulsonic.c: 21: pulsonic.nozzle[5].Q_mlh = 0;
  1841  002330  0E00               	movlw	0
  1842  002332  6F24               	movwf	(_pulsonic+36)& (0+255),b
  1843  002334  0E00               	movlw	0
  1844  002336  6F25               	movwf	(_pulsonic+37)& (0+255),b
  1845  002338  0E00               	movlw	0
  1846  00233A  6F26               	movwf	(_pulsonic+38)& (0+255),b
  1847                           
  1848                           ; BSR set to: 1
  1849  00233C  0012               	return		;funcret
  1850  00233E                     __end_of_pulsonic_init:
  1851                           	opt callstack 0
  1852                           
  1853 ;; *************** function _ps_autoMode_start *****************
  1854 ;; Defined at:
  1855 ;;		line 83 in file "main.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 3F/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:   11
  1876 ;; This function calls:
  1877 ;;		_autoMode_init
  1878 ;;		_ikb_flush
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text6
  1885  002850                     __ptext6:
  1886                           	opt callstack 0
  1887  002850                     _ps_autoMode_start:
  1888                           	opt callstack 19
  1889                           
  1890                           ;main.c: 85: unlock.autoMode = 1;
  1891                           
  1892                           ; BSR set to: 1
  1893                           ;incstack = 0
  1894  002850  0100               	movlb	0	; () banked
  1895  002852  83CB               	bsf	_unlock& (0+255),1,b
  1896                           
  1897                           ;main.c: 86: unlock.visMode = 0;
  1898  002854  95CB               	bcf	_unlock& (0+255),2,b
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;main.c: 87: autoMode_init(AUTOMODE_INIT_RESTART);
  1902  002856  0E00               	movlw	0
  1903  002858  EC9B  F013         	call	_autoMode_init
  1904                           
  1905                           ;main.c: 88: smain.focus.kb = FOCUS_KB_AUTOMODE;
  1906  00285C  0E01               	movlw	1
  1907  00285E  6E48               	movwf	_smain+1,c	;volatile
  1908                           
  1909                           ;main.c: 89: disp_owner = DISPOWNER_AUTOMODE;
  1910  002860  0E00               	movlw	0
  1911  002862  6E51               	movwf	_disp_owner,c
  1912                           
  1913                           ;main.c: 90: funcMach = FUNCMACH_NORMAL;
  1914  002864  0E01               	movlw	1
  1915  002866  0100               	movlb	0	; () banked
  1916  002868  6FCA               	movwf	_funcMach& (0+255),b
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 92: ikb_flush();
  1920  00286A  EC12  F015         	call	_ikb_flush	;wreg free
  1921                           
  1922                           ; BSR set to: 0
  1923  00286E  0012               	return		;funcret
  1924  002870                     __end_of_ps_autoMode_start:
  1925                           	opt callstack 0
  1926                           
  1927 ;; *************** function _ikb_flush *****************
  1928 ;; Defined at:
  1929 ;;		line 473 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 3F/0
  1940 ;;		On exit  : 3F/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1946 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    6
  1950 ;; This function calls:
  1951 ;;		_ikey_clear_all_flag
  1952 ;; This function is called by:
  1953 ;;		_ps_autoMode_start
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text7
  1958  002A24                     __ptext7:
  1959                           	opt callstack 0
  1960  002A24                     _ikb_flush:
  1961                           	opt callstack 23
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;ikb.c: 475: ikey_clear_all_flag();
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;incstack = 0
  1968  002A24  EC47  F014         	call	_ikey_clear_all_flag	;wreg free
  1969                           
  1970                           ; BSR set to: 0
  1971  002A28  0012               	return		;funcret
  1972  002A2A                     __end_of_ikb_flush:
  1973                           	opt callstack 0
  1974                           
  1975 ;; *************** function _ikey_clear_all_flag *****************
  1976 ;; Defined at:
  1977 ;;		line 842 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  i               1   10[COMRAM] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1986 ;; Tracked objects:
  1987 ;;		On entry : 3F/0
  1988 ;;		On exit  : 3F/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1991 ;;      Params:         0       0       0       0       0       0       0       0       0
  1992 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1994 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1995 ;;Total ram usage:        1 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    5
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_ikb_flush
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text8
  2006  00288E                     __ptext8:
  2007                           	opt callstack 0
  2008  00288E                     _ikey_clear_all_flag:
  2009                           	opt callstack 23
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;ikb.c: 844: uint8_t i;;ikb.c: 845: for (i=0; i<5; i++)
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;incstack = 0
  2016  00288E  0E00               	movlw	0
  2017  002890  6E0B               	movwf	ikey_clear_all_flag@i,c
  2018  002892                     l5254:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;ikb.c: 846: {;ikb.c: 848: key[i].bf.ReadyToRead = 0;
  2022  002892  500B               	movf	ikey_clear_all_flag@i,w,c
  2023  002894  0D10               	mullw	16
  2024  002896  50F3               	movf	prodl,w,c
  2025  002898  0F6A               	addlw	low (_key+10)
  2026  00289A  6ED9               	movwf	fsr2l,c
  2027  00289C  6ADA               	clrf	fsr2h,c
  2028  00289E  9EDF               	bcf	indf2,7,c
  2029                           
  2030                           ; BSR set to: 0
  2031  0028A0  2A0B               	incf	ikey_clear_all_flag@i,f,c
  2032                           
  2033                           ; BSR set to: 0
  2034  0028A2  0E04               	movlw	4
  2035  0028A4  640B               	cpfsgt	ikey_clear_all_flag@i,c
  2036  0028A6  D7F5               	goto	l5254
  2037  0028A8  0012               	return	
  2038  0028AA                     __end_of_ikey_clear_all_flag:
  2039                           	opt callstack 0
  2040                           
  2041 ;; *************** function _autoMode_init *****************
  2042 ;; Defined at:
  2043 ;;		line 16 in file "automode.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  init            1    wreg     char 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  init            1   59[COMRAM] char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 3F/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2057 ;;      Params:         0       0       0       0       0       0       0       0       0
  2058 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2060 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2061 ;;Total ram usage:        1 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:   10
  2064 ;; This function calls:
  2065 ;;		_disp7s_modeDisp_off
  2066 ;;		_disp7s_qtyDisp_writeFloat
  2067 ;;		_pulsonic_getTotalSum_mlh
  2068 ;; This function is called by:
  2069 ;;		_ps_autoMode_start
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text9
  2075  002736                     __ptext9:
  2076                           	opt callstack 0
  2077  002736                     _autoMode_init:
  2078                           	opt callstack 19
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;incstack = 0
  2082                           ;autoMode_init@init stored from wreg
  2083  002736  6E3C               	movwf	autoMode_init@init,c
  2084                           
  2085                           ;automode.c: 18: if (disp_owner == DISPOWNER_AUTOMODE)
  2086  002738  5051               	movf	_disp_owner,w,c
  2087  00273A  A4D8               	btfss	status,2,c
  2088  00273C  D00C               	goto	l5360
  2089                           
  2090                           ;automode.c: 19: {;automode.c: 20: disp7s_modeDisp_off();
  2091  00273E  ECA9  F014         	call	_disp7s_modeDisp_off	;wreg free
  2092                           
  2093                           ;automode.c: 21: disp7s_qtyDisp_writeFloat( pulsonic_getTotalSum_mlh() );
  2094  002742  ECB1  F00F         	call	_pulsonic_getTotalSum_mlh	;wreg free
  2095  002746  C01F  F141         	movff	?_pulsonic_getTotalSum_mlh,disp7s_qtyDisp_writeFloat@num
  2096  00274A  C020  F142         	movff	?_pulsonic_getTotalSum_mlh+1,disp7s_qtyDisp_writeFloat@num+1
  2097  00274E  C021  F143         	movff	?_pulsonic_getTotalSum_mlh+2,disp7s_qtyDisp_writeFloat@num+2
  2098  002752  EC38  F014         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  2099  002756                     l5360:
  2100                           
  2101                           ;automode.c: 22: };automode.c: 23: if (init == AUTOMODE_INIT_RESTART)
  2102  002756  503C               	movf	autoMode_init@init,w,c
  2103  002758  A4D8               	btfss	status,2,c
  2104  00275A  0012               	return	
  2105                           
  2106                           ;automode.c: 24: {;automode.c: 25: autoMode.numNozzle = 0x0;
  2107  00275C  0E00               	movlw	0
  2108  00275E  6E4C               	movwf	_autoMode,c
  2109                           
  2110                           ;automode.c: 26: autoMode.sm0 = 0x0;
  2111  002760  0E00               	movlw	0
  2112  002762  6E4D               	movwf	_autoMode+1,c
  2113  002764  0012               	return		;funcret
  2114  002766                     __end_of_autoMode_init:
  2115                           	opt callstack 0
  2116                           
  2117 ;; *************** function _pulsonic_getTotalSum_mlh *****************
  2118 ;; Defined at:
  2119 ;;		line 24 in file "pulsonic.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  acc             3   33[COMRAM] void 
  2124 ;;  i               2   36[COMRAM] int 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  3   30[COMRAM] int 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2134 ;;      Params:         3       0       0       0       0       0       0       0       0
  2135 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2137 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2138 ;;Total ram usage:        8 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    7
  2141 ;; This function calls:
  2142 ;;		___ftadd
  2143 ;;		___wmul
  2144 ;; This function is called by:
  2145 ;;		_autoMode_init
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text10
  2150  001F62                     __ptext10:
  2151                           	opt callstack 0
  2152  001F62                     _pulsonic_getTotalSum_mlh:
  2153                           	opt callstack 21
  2154                           
  2155                           ;pulsonic.c: 26: int i;;pulsonic.c: 27: double acc = 0;
  2156                           
  2157                           ;incstack = 0
  2158  001F62  0E00               	movlw	0
  2159  001F64  6E22               	movwf	pulsonic_getTotalSum_mlh@acc,c
  2160  001F66  0E00               	movlw	0
  2161  001F68  6E23               	movwf	pulsonic_getTotalSum_mlh@acc+1,c
  2162  001F6A  0E00               	movlw	0
  2163  001F6C  6E24               	movwf	pulsonic_getTotalSum_mlh@acc+2,c
  2164                           
  2165                           ;pulsonic.c: 29: for (i=0; i<8; i++)
  2166  001F6E  0E00               	movlw	0
  2167  001F70  6E26               	movwf	pulsonic_getTotalSum_mlh@i+1,c
  2168  001F72  0E00               	movlw	0
  2169  001F74  6E25               	movwf	pulsonic_getTotalSum_mlh@i,c
  2170  001F76                     l5290:
  2171                           
  2172                           ;pulsonic.c: 30: {;pulsonic.c: 31: acc += pulsonic.nozzle[i].Q_mlh;
  2173  001F76  C022  F013         	movff	pulsonic_getTotalSum_mlh@acc,___ftadd@f1
  2174  001F7A  C023  F014         	movff	pulsonic_getTotalSum_mlh@acc+1,___ftadd@f1+1
  2175  001F7E  C024  F015         	movff	pulsonic_getTotalSum_mlh@acc+2,___ftadd@f1+2
  2176  001F82  C025  F00B         	movff	pulsonic_getTotalSum_mlh@i,___wmul@multiplier
  2177  001F86  C026  F00C         	movff	pulsonic_getTotalSum_mlh@i+1,___wmul@multiplier+1
  2178  001F8A  0E00               	movlw	0
  2179  001F8C  6E0E               	movwf	___wmul@multiplicand+1,c
  2180  001F8E  0E06               	movlw	6
  2181  001F90  6E0D               	movwf	___wmul@multiplicand,c
  2182  001F92  ECE1  F013         	call	___wmul	;wreg free
  2183  001F96  0E06               	movlw	low (_pulsonic+6)
  2184  001F98  240B               	addwf	?___wmul,w,c
  2185  001F9A  6ED9               	movwf	fsr2l,c
  2186  001F9C  0E01               	movlw	high (_pulsonic+6)
  2187  001F9E  200C               	addwfc	?___wmul+1,w,c
  2188  001FA0  6EDA               	movwf	fsr2h,c
  2189  001FA2  CFDE F016          	movff	postinc2,___ftadd@f2
  2190  001FA6  CFDE F017          	movff	postinc2,___ftadd@f2+1
  2191  001FAA  CFDD F018          	movff	postdec2,___ftadd@f2+2
  2192  001FAE  ECCB  F009         	call	___ftadd	;wreg free
  2193  001FB2  C013  F022         	movff	?___ftadd,pulsonic_getTotalSum_mlh@acc
  2194  001FB6  C014  F023         	movff	?___ftadd+1,pulsonic_getTotalSum_mlh@acc+1
  2195  001FBA  C015  F024         	movff	?___ftadd+2,pulsonic_getTotalSum_mlh@acc+2
  2196  001FBE  4A25               	infsnz	pulsonic_getTotalSum_mlh@i,f,c
  2197  001FC0  2A26               	incf	pulsonic_getTotalSum_mlh@i+1,f,c
  2198  001FC2  BE26               	btfsc	pulsonic_getTotalSum_mlh@i+1,7,c
  2199  001FC4  D7D8               	goto	l5290
  2200  001FC6  5026               	movf	pulsonic_getTotalSum_mlh@i+1,w,c
  2201  001FC8  E104               	bnz	u5630
  2202  001FCA  0E08               	movlw	8
  2203  001FCC  5C25               	subwf	pulsonic_getTotalSum_mlh@i,w,c
  2204  001FCE  A0D8               	btfss	status,0,c
  2205  001FD0  D7D2               	goto	l5290
  2206  001FD2                     u5630:
  2207                           
  2208                           ;pulsonic.c: 32: };pulsonic.c: 33: return acc;
  2209  001FD2  C022  F01F         	movff	pulsonic_getTotalSum_mlh@acc,?_pulsonic_getTotalSum_mlh
  2210  001FD6  C023  F020         	movff	pulsonic_getTotalSum_mlh@acc+1,?_pulsonic_getTotalSum_mlh+1
  2211  001FDA  C024  F021         	movff	pulsonic_getTotalSum_mlh@acc+2,?_pulsonic_getTotalSum_mlh+2
  2212  001FDE  0012               	return		;funcret
  2213  001FE0                     __end_of_pulsonic_getTotalSum_mlh:
  2214                           	opt callstack 0
  2215                           
  2216 ;; *************** function _disp7s_modeDisp_off *****************
  2217 ;; Defined at:
  2218 ;;		line 156 in file "display.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    6
  2239 ;; This function calls:
  2240 ;;		_disp7s_off
  2241 ;; This function is called by:
  2242 ;;		_autoMode_init
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text11
  2247  002952                     __ptext11:
  2248                           	opt callstack 0
  2249  002952                     _disp7s_modeDisp_off:
  2250                           	opt callstack 22
  2251                           
  2252                           ;display.c: 158: disp7s_off(pulsonic.disp7s.mode, 2);
  2253                           
  2254                           ;incstack = 0
  2255  002952  0E3F               	movlw	low (_pulsonic+63)
  2256  002954  6E0B               	movwf	disp7s_off@pDisp,c
  2257  002956  0E01               	movlw	high (_pulsonic+63)
  2258  002958  6E0C               	movwf	disp7s_off@pDisp+1,c
  2259  00295A  0E02               	movlw	2
  2260  00295C  6E0D               	movwf	disp7s_off@NUM_OF_DISP,c
  2261  00295E  EC31  F013         	call	_disp7s_off	;wreg free
  2262  002962  0012               	return		;funcret
  2263  002964                     __end_of_disp7s_modeDisp_off:
  2264                           	opt callstack 0
  2265                           
  2266 ;; *************** function _mpap_sych *****************
  2267 ;; Defined at:
  2268 ;;		line 159 in file "mpap.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    5
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text12
  2297  001ED4                     __ptext12:
  2298                           	opt callstack 0
  2299  001ED4                     _mpap_sych:
  2300                           	opt callstack 25
  2301                           
  2302                           ;mpap.c: 161: static int8_t sm0;;mpap.c: 162: static int8_t c;;mpap.c: 163: if (sm0 == 0
      +                          )
  2303                           
  2304                           ;incstack = 0
  2305  001ED4  5050               	movf	mpap_sych@sm0,w,c
  2306  001ED6  A4D8               	btfss	status,2,c
  2307  001ED8  D011               	goto	l6090
  2308                           
  2309                           ;mpap.c: 164: {;mpap.c: 165: if ((mpap.mode == MPAP_NORMAL_MODE) || (mpap.mode == MPAP_H
      +                          OMMING_MODE))
  2310  001EDA  0E03               	movlw	3
  2311  001EDC  0100               	movlb	0	; () banked
  2312  001EDE  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  2313  001EE0  B4D8               	btfsc	status,2,c
  2314  001EE2  D004               	goto	u6940
  2315                           
  2316                           ; BSR set to: 0
  2317  001EE4  0E02               	movlw	2
  2318  001EE6  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  2319  001EE8  A4D8               	btfss	status,2,c
  2320  001EEA  D002               	goto	l6086
  2321  001EEC                     u6940:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;mpap.c: 166: {;mpap.c: 167: sm0++;
  2325  001EEC  2A50               	incf	mpap_sych@sm0,f,c
  2326                           
  2327                           ;mpap.c: 168: }
  2328  001EEE  0012               	return	
  2329  001EF0                     l6086:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;mpap.c: 169: else if (mpap.mode == MPAP_STALL_MODE)
  2333  001EF0  05B7               	decf	(_mpap+7)& (0+255),w,b	;volatile
  2334  001EF2  A4D8               	btfss	status,2,c
  2335  001EF4  0012               	return	
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;mpap.c: 170: {;mpap.c: 171: sm0 = 3;
  2339  001EF6  0E03               	movlw	3
  2340  001EF8  6E50               	movwf	mpap_sych@sm0,c
  2341  001EFA  0012               	return	
  2342  001EFC                     l6090:
  2343                           
  2344                           ;mpap.c: 174: else if (sm0 == 1)
  2345  001EFC  0450               	decf	mpap_sych@sm0,w,c
  2346  001EFE  A4D8               	btfss	status,2,c
  2347  001F00  D014               	goto	l6106
  2348                           
  2349                           ;mpap.c: 175: {;mpap.c: 176: if (mpap.numSteps_tomove == 0)
  2350  001F02  0100               	movlb	0	; () banked
  2351  001F04  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  2352  001F06  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
  2353  001F08  A4D8               	btfss	status,2,c
  2354  001F0A  0012               	return	
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;mpap.c: 177: {;mpap.c: 178: if (mpap.mode == MPAP_HOMMING_MODE)
  2358  001F0C  0E02               	movlw	2
  2359  001F0E  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  2360  001F10  A4D8               	btfss	status,2,c
  2361  001F12  D005               	goto	l6100
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;mpap.c: 179: {;mpap.c: 180: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  2365  001F14  0101               	movlb	1	; () banked
  2366  001F16  A13B               	btfss	(_pulsonic+59)& (0+255),0,b
  2367  001F18  D003               	goto	l6102
  2368                           
  2369                           ; BSR set to: 1
  2370                           ;mpap.c: 181: {;mpap.c: 182: pulsonic.errors.flag.mpap_home_sensor = 0;
  2371  001F1A  913B               	bcf	(_pulsonic+59)& (0+255),0,b
  2372  001F1C  D001               	goto	l6102
  2373  001F1E                     l6100:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;mpap.c: 186: else if (mpap.mode == MPAP_NORMAL_MODE)
  2377  001F1E  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  2378  001F20                     l6102:
  2379                           
  2380                           ;mpap.c: 188: };mpap.c: 189: sm0++;
  2381  001F20  2A50               	incf	mpap_sych@sm0,f,c
  2382                           
  2383                           ;mpap.c: 190: c = 0;
  2384  001F22  0E00               	movlw	0
  2385  001F24  0100               	movlb	0	; () banked
  2386  001F26  6FC1               	movwf	mpap_sych@c& (0+255),b
  2387  001F28  0012               	return	
  2388  001F2A                     l6106:
  2389                           
  2390                           ;mpap.c: 193: else if (sm0 == 2)
  2391  001F2A  0E02               	movlw	2
  2392  001F2C  1850               	xorwf	mpap_sych@sm0,w,c
  2393  001F2E  A4D8               	btfss	status,2,c
  2394  001F30  D00D               	goto	l6116
  2395                           
  2396                           ;mpap.c: 194: {;mpap.c: 195: if (smain.f.f1ms)
  2397  001F32  A047               	btfss	_smain,0,c	;volatile
  2398  001F34  0012               	return	
  2399                           
  2400                           ;mpap.c: 196: {;mpap.c: 197: if (++c == 10)
  2401  001F36  0100               	movlb	0	; () banked
  2402  001F38  2BC1               	incf	mpap_sych@c& (0+255),f,b
  2403  001F3A  0E0A               	movlw	10
  2404  001F3C  19C1               	xorwf	mpap_sych@c& (0+255),w,b
  2405  001F3E  A4D8               	btfss	status,2,c
  2406  001F40  0012               	return	
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;mpap.c: 198: {;mpap.c: 199: c = 0;
  2410  001F42  0E00               	movlw	0
  2411  001F44  6FC1               	movwf	mpap_sych@c& (0+255),b
  2412                           
  2413                           ;mpap.c: 200: mpap.mode = MPAP_STALL_MODE;
  2414  001F46  0E01               	movlw	1
  2415  001F48  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  2416  001F4A  D7D0               	goto	u6940
  2417  001F4C                     l6116:
  2418                           
  2419                           ;mpap.c: 205: else if (sm0 == 3)
  2420  001F4C  0E03               	movlw	3
  2421  001F4E  1850               	xorwf	mpap_sych@sm0,w,c
  2422  001F50  A4D8               	btfss	status,2,c
  2423  001F52  0012               	return	
  2424                           
  2425                           ;mpap.c: 206: {;mpap.c: 207: if (mpap.mode == MPAP_IDLE_MODE)
  2426  001F54  0100               	movlb	0	; () banked
  2427  001F56  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  2428  001F58  A4D8               	btfss	status,2,c
  2429  001F5A  0012               	return	
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;mpap.c: 208: {;mpap.c: 209: sm0 = 0;
  2433  001F5C  0E00               	movlw	0
  2434  001F5E  6E50               	movwf	mpap_sych@sm0,c
  2435  001F60  0012               	return		;funcret
  2436  001F62                     __end_of_mpap_sych:
  2437                           	opt callstack 0
  2438                           
  2439 ;; *************** function _ikb_job *****************
  2440 ;; Defined at:
  2441 ;;		line 468 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 3F/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    8
  2462 ;; This function calls:
  2463 ;;		_ikey_parsing
  2464 ;;		_ikey_scan
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text13
  2471  0029BA                     __ptext13:
  2472                           	opt callstack 0
  2473  0029BA                     _ikb_job:
  2474                           	opt callstack 22
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;ikb.c: 470: ikey_scan();
  2478                           
  2479                           ;incstack = 0
  2480  0029BA  EC9F  F00A         	call	_ikey_scan	;wreg free
  2481                           
  2482                           ;ikb.c: 471: ikey_parsing();
  2483  0029BE  EC09  F004         	call	_ikey_parsing	;wreg free
  2484  0029C2  0012               	return		;funcret
  2485  0029C4                     __end_of_ikb_job:
  2486                           	opt callstack 0
  2487                           
  2488 ;; *************** function _ikey_scan *****************
  2489 ;; Defined at:
  2490 ;;		line 505 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  k               1   11[COMRAM] char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 3F/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0
  2505 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2506 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2507 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    6
  2511 ;; This function calls:
  2512 ;;		_keyRead_pin_key0
  2513 ;;		_keyRead_pin_key1
  2514 ;;		_keyRead_pin_key2
  2515 ;;		_keyRead_pin_key3
  2516 ;;		_keyRead_pin_key4
  2517 ;; This function is called by:
  2518 ;;		_ikb_job
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text14
  2523  00153E                     __ptext14:
  2524                           	opt callstack 0
  2525  00153E                     _ikey_scan:
  2526                           	opt callstack 23
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;ikb.c: 507: int8_t k = 5-1;
  2530                           
  2531                           ;incstack = 0
  2532  00153E  0E04               	movlw	4
  2533  001540  6E0C               	movwf	ikey_scan@k,c
  2534  001542                     l5368:
  2535                           
  2536                           ;ikb.c: 509: {;ikb.c: 510: _delay((unsigned long)((5)*(48000000UL/4000000.0)));
  2537  001542  0E14               	movlw	20
  2538  001544                     u7197:
  2539  001544  2EE8               	decfsz	wreg,f,c
  2540  001546  D7FE               	bra	u7197
  2541                           
  2542                           ;ikb.c: 512: if (key[k].sm0 == 0)
  2543  001548  500C               	movf	ikey_scan@k,w,c
  2544  00154A  0D10               	mullw	16
  2545  00154C  50F3               	movf	prodl,w,c
  2546  00154E  0F64               	addlw	low (_key+4)
  2547  001550  6ED9               	movwf	fsr2l,c
  2548  001552  6ADA               	clrf	fsr2h,c
  2549  001554  50DF               	movf	indf2,w,c
  2550  001556  A4D8               	btfss	status,2,c
  2551  001558  D016               	goto	l5376
  2552                           
  2553                           ;ikb.c: 513: {;ikb.c: 514: if (key[k].keyRead() == 0)
  2554  00155A  500C               	movf	ikey_scan@k,w,c
  2555  00155C  0D10               	mullw	16
  2556  00155E  50F3               	movf	prodl,w,c
  2557  001560  0F60               	addlw	low _key
  2558  001562  6ED9               	movwf	fsr2l,c
  2559  001564  6ADA               	clrf	fsr2h,c
  2560  001566  D801               	call	u5708
  2561  001568  D00A               	goto	u5709
  2562  00156A                     u5708:
  2563  00156A  0005               	push	
  2564  00156C  6EFA               	movwf	pclath,c
  2565  00156E  50DE               	movf	postinc2,w,c
  2566  001570  6EFD               	movwf	tosl,c
  2567  001572  50DE               	movf	postinc2,w,c
  2568  001574  6EFE               	movwf	tosh,c
  2569  001576  50F8               	movf	tblptru,w,c
  2570  001578  6EFF               	movwf	tosu,c
  2571  00157A  50FA               	movf	pclath,w,c
  2572  00157C  0012               	return		;indir
  2573  00157E                     u5709:
  2574  00157E  0900               	iorlw	0
  2575  001580  A4D8               	btfss	status,2,c
  2576  001582  D0AA               	goto	l5406
  2577  001584  D040               	goto	L1
  2578  001586                     l5376:
  2579                           
  2580                           ;ikb.c: 519: else if (key[k].sm0 == 1)
  2581  001586  500C               	movf	ikey_scan@k,w,c
  2582  001588  0D10               	mullw	16
  2583  00158A  50F3               	movf	prodl,w,c
  2584  00158C  0F64               	addlw	low (_key+4)
  2585  00158E  6ED9               	movwf	fsr2l,c
  2586  001590  6ADA               	clrf	fsr2h,c
  2587  001592  04DE               	decf	postinc2,w,c
  2588  001594  A4D8               	btfss	status,2,c
  2589  001596  D03F               	goto	l5388
  2590                           
  2591                           ;ikb.c: 520: {;ikb.c: 521: if (++key[k].counter0 == 1)
  2592  001598  500C               	movf	ikey_scan@k,w,c
  2593  00159A  0D10               	mullw	16
  2594  00159C  50F3               	movf	prodl,w,c
  2595  00159E  0F65               	addlw	low (_key+5)
  2596  0015A0  6ED9               	movwf	fsr2l,c
  2597  0015A2  6ADA               	clrf	fsr2h,c
  2598  0015A4  2ADF               	incf	indf2,f,c
  2599  0015A6  04DE               	decf	postinc2,w,c
  2600  0015A8  A4D8               	btfss	status,2,c
  2601  0015AA  D096               	goto	l5406
  2602                           
  2603                           ;ikb.c: 522: {;ikb.c: 523: key[k].counter0 = 0x00;
  2604  0015AC  500C               	movf	ikey_scan@k,w,c
  2605  0015AE  0D10               	mullw	16
  2606  0015B0  50F3               	movf	prodl,w,c
  2607  0015B2  0F65               	addlw	low (_key+5)
  2608  0015B4  6ED9               	movwf	fsr2l,c
  2609  0015B6  6ADA               	clrf	fsr2h,c
  2610  0015B8  0E00               	movlw	0
  2611  0015BA  6EDF               	movwf	indf2,c
  2612                           
  2613                           ;ikb.c: 525: if (key[k].keyRead() != 0)
  2614  0015BC  500C               	movf	ikey_scan@k,w,c
  2615  0015BE  0D10               	mullw	16
  2616  0015C0  50F3               	movf	prodl,w,c
  2617  0015C2  0F60               	addlw	low _key
  2618  0015C4  6ED9               	movwf	fsr2l,c
  2619  0015C6  6ADA               	clrf	fsr2h,c
  2620  0015C8  D801               	call	u5748
  2621  0015CA  D00A               	goto	u5749
  2622  0015CC                     u5748:
  2623  0015CC  0005               	push	
  2624  0015CE  6EFA               	movwf	pclath,c
  2625  0015D0  50DE               	movf	postinc2,w,c
  2626  0015D2  6EFD               	movwf	tosl,c
  2627  0015D4  50DE               	movf	postinc2,w,c
  2628  0015D6  6EFE               	movwf	tosh,c
  2629  0015D8  50F8               	movf	tblptru,w,c
  2630  0015DA  6EFF               	movwf	tosu,c
  2631  0015DC  50FA               	movf	pclath,w,c
  2632  0015DE  0012               	return		;indir
  2633  0015E0                     u5749:
  2634  0015E0  0900               	iorlw	0
  2635  0015E2  B4D8               	btfsc	status,2,c
  2636  0015E4  D008               	goto	l5386
  2637  0015E6                     u5750:
  2638                           
  2639                           ;ikb.c: 526: {;ikb.c: 527: key[k].sm0--;
  2640  0015E6  500C               	movf	ikey_scan@k,w,c
  2641  0015E8  0D10               	mullw	16
  2642  0015EA  50F3               	movf	prodl,w,c
  2643  0015EC  0F64               	addlw	low (_key+4)
  2644  0015EE  6ED9               	movwf	fsr2l,c
  2645  0015F0  6ADA               	clrf	fsr2h,c
  2646  0015F2  06DF               	decf	indf2,f,c
  2647                           
  2648                           ;ikb.c: 528: }
  2649  0015F4  D071               	goto	l5406
  2650  0015F6                     l5386:
  2651                           
  2652                           ;ikb.c: 529: else;ikb.c: 530: {;ikb.c: 531: key[k].bf.state = 1;
  2653  0015F6  500C               	movf	ikey_scan@k,w,c
  2654  0015F8  0D10               	mullw	16
  2655  0015FA  50F3               	movf	prodl,w,c
  2656  0015FC  0F6A               	addlw	low (_key+10)
  2657  0015FE  6ED9               	movwf	fsr2l,c
  2658  001600  6ADA               	clrf	fsr2h,c
  2659  001602  0100               	movlb	0	; () banked
  2660  001604  80DF               	bsf	indf2,0,c
  2661  001606                     L1:
  2662                           
  2663                           ;ikb.c: 532: key[k].sm0++;
  2664  001606  500C               	movf	ikey_scan@k,w,c
  2665  001608  0D10               	mullw	16
  2666  00160A  50F3               	movf	prodl,w,c
  2667  00160C  0F64               	addlw	low (_key+4)
  2668  00160E  6ED9               	movwf	fsr2l,c
  2669  001610  6ADA               	clrf	fsr2h,c
  2670  001612  2ADF               	incf	indf2,f,c
  2671  001614  D061               	goto	l5406
  2672  001616                     l5388:
  2673                           
  2674                           ;ikb.c: 536: else if (key[k].sm0 == 2)
  2675  001616  500C               	movf	ikey_scan@k,w,c
  2676  001618  0D10               	mullw	16
  2677  00161A  50F3               	movf	prodl,w,c
  2678  00161C  0F64               	addlw	low (_key+4)
  2679  00161E  6ED9               	movwf	fsr2l,c
  2680  001620  6ADA               	clrf	fsr2h,c
  2681  001622  0E02               	movlw	2
  2682  001624  18DE               	xorwf	postinc2,w,c
  2683  001626  A4D8               	btfss	status,2,c
  2684  001628  D016               	goto	l5394
  2685                           
  2686                           ;ikb.c: 537: {;ikb.c: 538: if (key[k].keyRead() == 1)
  2687  00162A  500C               	movf	ikey_scan@k,w,c
  2688  00162C  0D10               	mullw	16
  2689  00162E  50F3               	movf	prodl,w,c
  2690  001630  0F60               	addlw	low _key
  2691  001632  6ED9               	movwf	fsr2l,c
  2692  001634  6ADA               	clrf	fsr2h,c
  2693  001636  D801               	call	u5778
  2694  001638  D00A               	goto	u5779
  2695  00163A                     u5778:
  2696  00163A  0005               	push	
  2697  00163C  6EFA               	movwf	pclath,c
  2698  00163E  50DE               	movf	postinc2,w,c
  2699  001640  6EFD               	movwf	tosl,c
  2700  001642  50DE               	movf	postinc2,w,c
  2701  001644  6EFE               	movwf	tosh,c
  2702  001646  50F8               	movf	tblptru,w,c
  2703  001648  6EFF               	movwf	tosu,c
  2704  00164A  50FA               	movf	pclath,w,c
  2705  00164C  0012               	return		;indir
  2706  00164E                     u5779:
  2707  00164E  06E8               	decf	wreg,f,c
  2708  001650  B4D8               	btfsc	status,2,c
  2709  001652  D7D9               	goto	L1
  2710  001654  D041               	goto	l5406
  2711  001656                     l5394:
  2712                           
  2713                           ;ikb.c: 541: else if (key[k].sm0 == 3)
  2714  001656  500C               	movf	ikey_scan@k,w,c
  2715  001658  0D10               	mullw	16
  2716  00165A  50F3               	movf	prodl,w,c
  2717  00165C  0F64               	addlw	low (_key+4)
  2718  00165E  6ED9               	movwf	fsr2l,c
  2719  001660  6ADA               	clrf	fsr2h,c
  2720  001662  0E03               	movlw	3
  2721  001664  18DE               	xorwf	postinc2,w,c
  2722  001666  A4D8               	btfss	status,2,c
  2723  001668  D037               	goto	l5406
  2724                           
  2725                           ;ikb.c: 542: {;ikb.c: 543: if (++key[k].counter0 == 1)
  2726  00166A  500C               	movf	ikey_scan@k,w,c
  2727  00166C  0D10               	mullw	16
  2728  00166E  50F3               	movf	prodl,w,c
  2729  001670  0F65               	addlw	low (_key+5)
  2730  001672  6ED9               	movwf	fsr2l,c
  2731  001674  6ADA               	clrf	fsr2h,c
  2732  001676  2ADF               	incf	indf2,f,c
  2733  001678  04DE               	decf	postinc2,w,c
  2734  00167A  A4D8               	btfss	status,2,c
  2735  00167C  D02D               	goto	l5406
  2736                           
  2737                           ;ikb.c: 544: {;ikb.c: 545: key[k].counter0 = 0x00;
  2738  00167E  500C               	movf	ikey_scan@k,w,c
  2739  001680  0D10               	mullw	16
  2740  001682  50F3               	movf	prodl,w,c
  2741  001684  0F65               	addlw	low (_key+5)
  2742  001686  6ED9               	movwf	fsr2l,c
  2743  001688  6ADA               	clrf	fsr2h,c
  2744  00168A  0E00               	movlw	0
  2745  00168C  6EDF               	movwf	indf2,c
  2746                           
  2747                           ;ikb.c: 547: if (key[k].keyRead() != 1)
  2748  00168E  500C               	movf	ikey_scan@k,w,c
  2749  001690  0D10               	mullw	16
  2750  001692  50F3               	movf	prodl,w,c
  2751  001694  0F60               	addlw	low _key
  2752  001696  6ED9               	movwf	fsr2l,c
  2753  001698  6ADA               	clrf	fsr2h,c
  2754  00169A  D801               	call	u5818
  2755  00169C  D00A               	goto	u5819
  2756  00169E                     u5818:
  2757  00169E  0005               	push	
  2758  0016A0  6EFA               	movwf	pclath,c
  2759  0016A2  50DE               	movf	postinc2,w,c
  2760  0016A4  6EFD               	movwf	tosl,c
  2761  0016A6  50DE               	movf	postinc2,w,c
  2762  0016A8  6EFE               	movwf	tosh,c
  2763  0016AA  50F8               	movf	tblptru,w,c
  2764  0016AC  6EFF               	movwf	tosu,c
  2765  0016AE  50FA               	movf	pclath,w,c
  2766  0016B0  0012               	return		;indir
  2767  0016B2                     u5819:
  2768  0016B2  06E8               	decf	wreg,f,c
  2769  0016B4  A4D8               	btfss	status,2,c
  2770  0016B6  D797               	goto	u5750
  2771                           
  2772                           ;ikb.c: 551: else;ikb.c: 552: {;ikb.c: 553: key[k].bf.state = 0;
  2773  0016B8  500C               	movf	ikey_scan@k,w,c
  2774  0016BA  0D10               	mullw	16
  2775  0016BC  50F3               	movf	prodl,w,c
  2776  0016BE  0F6A               	addlw	low (_key+10)
  2777  0016C0  6ED9               	movwf	fsr2l,c
  2778  0016C2  6ADA               	clrf	fsr2h,c
  2779  0016C4  0100               	movlb	0	; () banked
  2780  0016C6  90DF               	bcf	indf2,0,c
  2781                           
  2782                           ;ikb.c: 554: key[k].sm0 = 0x00;
  2783  0016C8  500C               	movf	ikey_scan@k,w,c
  2784  0016CA  0D10               	mullw	16
  2785  0016CC  50F3               	movf	prodl,w,c
  2786  0016CE  0F64               	addlw	low (_key+4)
  2787  0016D0  6ED9               	movwf	fsr2l,c
  2788  0016D2  6ADA               	clrf	fsr2h,c
  2789  0016D4  0E00               	movlw	0
  2790  0016D6  6EDF               	movwf	indf2,c
  2791  0016D8                     l5406:
  2792                           
  2793                           ;ikb.c: 555: };ikb.c: 556: };ikb.c: 557: };ikb.c: 559: }while (--k >= 0);
  2794  0016D8  060C               	decf	ikey_scan@k,f,c
  2795  0016DA  BE0C               	btfsc	ikey_scan@k,7,c
  2796  0016DC  0012               	return	
  2797  0016DE  D731               	goto	l5368
  2798  0016E0                     __end_of_ikey_scan:
  2799                           	opt callstack 0
  2800                           
  2801 ;; *************** function _keyRead_pin_key3 *****************
  2802 ;; Defined at:
  2803 ;;		line 208 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      unsigned char 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2820 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    5
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_ikb_init
  2828 ;;		_ikey_scan
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text15
  2833  002A2A                     __ptext15:
  2834                           	opt callstack 0
  2835  002A2A                     _keyRead_pin_key3:
  2836                           	opt callstack 23
  2837                           
  2838                           ;ikb.c: 210: return ((PORTC & (1<<7))>>7);
  2839                           
  2840                           ;incstack = 0
  2841  002A2A  4482               	rlncf	3970,w,c	;volatile
  2842  002A2C  0B01               	andlw	1
  2843  002A2E  0012               	return		;funcret
  2844  002A30                     __end_of_keyRead_pin_key3:
  2845                           	opt callstack 0
  2846                           
  2847 ;; *************** function _keyRead_pin_key2 *****************
  2848 ;; Defined at:
  2849 ;;		line 204 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      unsigned char 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    5
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_ikb_init
  2874 ;;		_ikey_scan
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text16
  2879  0029C4                     __ptext16:
  2880                           	opt callstack 0
  2881  0029C4                     _keyRead_pin_key2:
  2882                           	opt callstack 23
  2883                           
  2884                           ;ikb.c: 206: return ((PORTC & (1<<6))>>6);
  2885                           
  2886                           ;incstack = 0
  2887  0029C4  4482               	rlncf	3970,w,c	;volatile
  2888  0029C6  46E8               	rlncf	wreg,f,c
  2889  0029C8  0B03               	andlw	3
  2890  0029CA  0B01               	andlw	1
  2891  0029CC  0012               	return		;funcret
  2892  0029CE                     __end_of_keyRead_pin_key2:
  2893                           	opt callstack 0
  2894                           
  2895 ;; *************** function _keyRead_pin_key1 *****************
  2896 ;; Defined at:
  2897 ;;		line 200 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      unsigned char 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    5
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_ikb_init
  2922 ;;		_ikey_scan
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text17
  2927  0029CE                     __ptext17:
  2928                           	opt callstack 0
  2929  0029CE                     _keyRead_pin_key1:
  2930                           	opt callstack 23
  2931                           
  2932                           ;ikb.c: 202: return ((PORTC & (1<<5))>>5);
  2933                           
  2934                           ;incstack = 0
  2935  0029CE  3882               	swapf	3970,w,c	;volatile
  2936  0029D0  42E8               	rrncf	wreg,f,c
  2937  0029D2  0B07               	andlw	7
  2938  0029D4  0B01               	andlw	1
  2939  0029D6  0012               	return		;funcret
  2940  0029D8                     __end_of_keyRead_pin_key1:
  2941                           	opt callstack 0
  2942                           
  2943 ;; *************** function _keyRead_pin_key0 *****************
  2944 ;; Defined at:
  2945 ;;		line 196 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      unsigned char 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, status,0
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2959 ;;      Params:         0       0       0       0       0       0       0       0       0
  2960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2962 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2963 ;;Total ram usage:        0 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    5
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_ikb_init
  2970 ;;		_ikey_scan
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text18
  2975  002A14                     __ptext18:
  2976                           	opt callstack 0
  2977  002A14                     _keyRead_pin_key0:
  2978                           	opt callstack 23
  2979                           
  2980                           ;ikb.c: 198: return ((PORTC & (1<<4))>>4);
  2981                           
  2982                           ;incstack = 0
  2983  002A14  3882               	swapf	3970,w,c	;volatile
  2984  002A16  0B0F               	andlw	15
  2985  002A18  0B01               	andlw	1
  2986  002A1A  0012               	return		;funcret
  2987  002A1C                     __end_of_keyRead_pin_key0:
  2988                           	opt callstack 0
  2989                           
  2990 ;; *************** function _keyRead_pin_key4 *****************
  2991 ;; Defined at:
  2992 ;;		line 212 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      unsigned char 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    5
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_ikb_init
  3017 ;;		_ikey_scan
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text19
  3022  002A1C                     __ptext19:
  3023                           	opt callstack 0
  3024  002A1C                     _keyRead_pin_key4:
  3025                           	opt callstack 23
  3026                           
  3027                           ;ikb.c: 214: return ((PORTD & (1<<4))>>4);
  3028                           
  3029                           ;incstack = 0
  3030  002A1C  3883               	swapf	3971,w,c	;volatile
  3031  002A1E  0B0F               	andlw	15
  3032  002A20  0B01               	andlw	1
  3033  002A22  0012               	return		;funcret
  3034  002A24                     __end_of_keyRead_pin_key4:
  3035                           	opt callstack 0
  3036                           
  3037 ;; *************** function _ikey_parsing *****************
  3038 ;; Defined at:
  3039 ;;		line 610 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  k               1   34[COMRAM] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0
  3054 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3055 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3056 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3057 ;;Total ram usage:        5 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    7
  3060 ;; This function calls:
  3061 ;;		___ftge
  3062 ;;		___lwtoft
  3063 ;;		_ikey_is_accessible
  3064 ;; This function is called by:
  3065 ;;		_ikb_job
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text20
  3070  000812                     __ptext20:
  3071                           	opt callstack 0
  3072  000812                     _ikey_parsing:
  3073                           	opt callstack 22
  3074                           
  3075                           ;ikb.c: 612: uint8_t k;;ikb.c: 614: for (k=0; k < 5; k++)
  3076                           
  3077                           ;incstack = 0
  3078  000812  0E00               	movlw	0
  3079  000814  6E23               	movwf	ikey_parsing@k,c
  3080  000816                     l5414:
  3081                           
  3082                           ;ikb.c: 615: {;ikb.c: 616: if ( key[k].sm1 == _STAGE_START_PARSING_ )
  3083  000816  5023               	movf	ikey_parsing@k,w,c
  3084  000818  0D10               	mullw	16
  3085  00081A  50F3               	movf	prodl,w,c
  3086  00081C  0F66               	addlw	low (_key+6)
  3087  00081E  6ED9               	movwf	fsr2l,c
  3088  000820  6ADA               	clrf	fsr2h,c
  3089  000822  50DF               	movf	indf2,w,c
  3090  000824  A4D8               	btfss	status,2,c
  3091  000826  D09B               	goto	l331
  3092                           
  3093                           ;ikb.c: 617: {;ikb.c: 618: if ( ikey_is_accessible(k) )
  3094  000828  5023               	movf	ikey_parsing@k,w,c
  3095  00082A  ECF7  F011         	call	_ikey_is_accessible
  3096  00082E  0900               	iorlw	0
  3097  000830  B4D8               	btfsc	status,2,c
  3098  000832  D095               	goto	l331
  3099                           
  3100                           ;ikb.c: 619: {;ikb.c: 620: if (key[k].bf.state == 1)
  3101  000834  5023               	movf	ikey_parsing@k,w,c
  3102  000836  0D10               	mullw	16
  3103  000838  50F3               	movf	prodl,w,c
  3104  00083A  0F6A               	addlw	low (_key+10)
  3105  00083C  6ED9               	movwf	fsr2l,c
  3106  00083E  6ADA               	clrf	fsr2h,c
  3107  000840  0100               	movlb	0	; () banked
  3108  000842  A0DF               	btfss	indf2,0,c
  3109  000844  D08C               	goto	l331
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;ikb.c: 621: {;ikb.c: 623: if (key[k].bf.OnKeyPressed)
  3113  000846  5023               	movf	ikey_parsing@k,w,c
  3114  000848  0D10               	mullw	16
  3115  00084A  50F3               	movf	prodl,w,c
  3116  00084C  0F6A               	addlw	low (_key+10)
  3117  00084E  6ED9               	movwf	fsr2l,c
  3118  000850  6ADA               	clrf	fsr2h,c
  3119  000852  A2DF               	btfss	indf2,1,c
  3120  000854  D01F               	goto	l5428
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;ikb.c: 624: {;ikb.c: 625: key[k].bf.ReadyToRead = 1;
  3124  000856  5023               	movf	ikey_parsing@k,w,c
  3125  000858  0D10               	mullw	16
  3126  00085A  50F3               	movf	prodl,w,c
  3127  00085C  0F6A               	addlw	low (_key+10)
  3128  00085E  6ED9               	movwf	fsr2l,c
  3129  000860  6ADA               	clrf	fsr2h,c
  3130  000862  8EDF               	bsf	indf2,7,c
  3131                           
  3132                           ;ikb.c: 627: if (key[k].bf.Reptt)
  3133  000864  5023               	movf	ikey_parsing@k,w,c
  3134  000866  0D10               	mullw	16
  3135  000868  50F3               	movf	prodl,w,c
  3136  00086A  0F6A               	addlw	low (_key+10)
  3137  00086C  6ED9               	movwf	fsr2l,c
  3138  00086E  6ADA               	clrf	fsr2h,c
  3139  000870  A4DF               	btfss	indf2,2,c
  3140  000872  D008               	goto	l5426
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;ikb.c: 628: {;ikb.c: 629: key[k].sm1 = _STAGE_REPTT_;
  3144  000874  5023               	movf	ikey_parsing@k,w,c
  3145  000876  0D10               	mullw	16
  3146  000878  50F3               	movf	prodl,w,c
  3147  00087A  0F66               	addlw	low (_key+6)
  3148  00087C  6ED9               	movwf	fsr2l,c
  3149  00087E  6ADA               	clrf	fsr2h,c
  3150  000880  0E08               	movlw	8
  3151  000882  D047               	goto	L2
  3152  000884                     l5426:
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;ikb.c: 631: else;ikb.c: 632: {;ikb.c: 633: key[k].sm1 = _STAGE_ISKEY_RELEASED_;
  3156  000884  5023               	movf	ikey_parsing@k,w,c
  3157  000886  0D10               	mullw	16
  3158  000888  50F3               	movf	prodl,w,c
  3159  00088A  0F66               	addlw	low (_key+6)
  3160  00088C  6ED9               	movwf	fsr2l,c
  3161  00088E  6ADA               	clrf	fsr2h,c
  3162  000890  0E01               	movlw	1
  3163  000892  D03F               	goto	L2
  3164  000894                     l5428:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;ikb.c: 636: else if ( key[k].bf.OnKeyReleased)
  3168  000894  5023               	movf	ikey_parsing@k,w,c
  3169  000896  0D10               	mullw	16
  3170  000898  50F3               	movf	prodl,w,c
  3171  00089A  0F6A               	addlw	low (_key+10)
  3172  00089C  6ED9               	movwf	fsr2l,c
  3173  00089E  6ADA               	clrf	fsr2h,c
  3174  0008A0  A6DF               	btfss	indf2,3,c
  3175  0008A2  D008               	goto	l5432
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;ikb.c: 637: {;ikb.c: 638: key[k].sm1 = _STAGE_ONKEYRELEASED_;
  3179  0008A4  5023               	movf	ikey_parsing@k,w,c
  3180  0008A6  0D10               	mullw	16
  3181  0008A8  50F3               	movf	prodl,w,c
  3182  0008AA  0F66               	addlw	low (_key+6)
  3183  0008AC  6ED9               	movwf	fsr2l,c
  3184  0008AE  6ADA               	clrf	fsr2h,c
  3185  0008B0  0E06               	movlw	6
  3186  0008B2  D02F               	goto	L2
  3187  0008B4                     l5432:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;ikb.c: 640: else if ( key[k].bf.whilePressing)
  3191  0008B4  5023               	movf	ikey_parsing@k,w,c
  3192  0008B6  0D10               	mullw	16
  3193  0008B8  50F3               	movf	prodl,w,c
  3194  0008BA  0F6A               	addlw	low (_key+10)
  3195  0008BC  6ED9               	movwf	fsr2l,c
  3196  0008BE  6ADA               	clrf	fsr2h,c
  3197  0008C0  A8DF               	btfss	indf2,4,c
  3198  0008C2  D008               	goto	l5436
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;ikb.c: 641: {;ikb.c: 642: key[k].sm1 = _STAGE_WHILEPRESSING_;
  3202  0008C4  5023               	movf	ikey_parsing@k,w,c
  3203  0008C6  0D10               	mullw	16
  3204  0008C8  50F3               	movf	prodl,w,c
  3205  0008CA  0F66               	addlw	low (_key+6)
  3206  0008CC  6ED9               	movwf	fsr2l,c
  3207  0008CE  6ADA               	clrf	fsr2h,c
  3208  0008D0  0E07               	movlw	7
  3209  0008D2  D01F               	goto	L2
  3210  0008D4                     l5436:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;ikb.c: 644: else if (key[k].bf.AtTimeExpired)
  3214  0008D4  5023               	movf	ikey_parsing@k,w,c
  3215  0008D6  0D10               	mullw	16
  3216  0008D8  50F3               	movf	prodl,w,c
  3217  0008DA  0F6A               	addlw	low (_key+10)
  3218  0008DC  6ED9               	movwf	fsr2l,c
  3219  0008DE  6ADA               	clrf	fsr2h,c
  3220  0008E0  AADF               	btfss	indf2,5,c
  3221  0008E2  D008               	goto	l5440
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;ikb.c: 645: {;ikb.c: 646: key[k].sm1 = _STAGE_FIREATIMEEXPIRED_;
  3225  0008E4  5023               	movf	ikey_parsing@k,w,c
  3226  0008E6  0D10               	mullw	16
  3227  0008E8  50F3               	movf	prodl,w,c
  3228  0008EA  0F66               	addlw	low (_key+6)
  3229  0008EC  6ED9               	movwf	fsr2l,c
  3230  0008EE  6ADA               	clrf	fsr2h,c
  3231  0008F0  0E04               	movlw	4
  3232  0008F2  D00F               	goto	L2
  3233  0008F4                     l5440:
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;ikb.c: 648: else if (key[k].bf.AtTimeExpired2)
  3237  0008F4  5023               	movf	ikey_parsing@k,w,c
  3238  0008F6  0D10               	mullw	16
  3239  0008F8  50F3               	movf	prodl,w,c
  3240  0008FA  0F6A               	addlw	low (_key+10)
  3241  0008FC  6ED9               	movwf	fsr2l,c
  3242  0008FE  6ADA               	clrf	fsr2h,c
  3243  000900  ACDF               	btfss	indf2,6,c
  3244  000902  D008               	goto	l337
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;ikb.c: 649: {;ikb.c: 650: key[k].sm1 = _STAGE_FIREATIMEEXPIRED_2_;
  3248  000904  5023               	movf	ikey_parsing@k,w,c
  3249  000906  0D10               	mullw	16
  3250  000908  50F3               	movf	prodl,w,c
  3251  00090A  0F66               	addlw	low (_key+6)
  3252  00090C  6ED9               	movwf	fsr2l,c
  3253  00090E  6ADA               	clrf	fsr2h,c
  3254  000910  0E05               	movlw	5
  3255  000912                     L2:
  3256  000912  6EDF               	movwf	indf2,c
  3257  000914                     l337:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;ikb.c: 651: };ikb.c: 654: key[k].bf.InProcessing = 1;
  3261  000914  5023               	movf	ikey_parsing@k,w,c
  3262  000916  0D10               	mullw	16
  3263  000918  50F3               	movf	prodl,w,c
  3264  00091A  0F6B               	addlw	low (_key+11)
  3265  00091C  6ED9               	movwf	fsr2l,c
  3266  00091E  6ADA               	clrf	fsr2h,c
  3267  000920  84DF               	bsf	indf2,2,c
  3268                           
  3269                           ;ikb.c: 659: if (key[k].num_group_x > 0)
  3270  000922  5023               	movf	ikey_parsing@k,w,c
  3271  000924  0D10               	mullw	16
  3272  000926  50F3               	movf	prodl,w,c
  3273  000928  0F69               	addlw	low (_key+9)
  3274  00092A  6ED9               	movwf	fsr2l,c
  3275  00092C  6ADA               	clrf	fsr2h,c
  3276  00092E  50DF               	movf	indf2,w,c
  3277  000930  B4D8               	btfsc	status,2,c
  3278  000932  D015               	goto	l331
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;ikb.c: 660: {;ikb.c: 661: group_x[ key[k].num_group_x ] = 1;
  3282  000934  5023               	movf	ikey_parsing@k,w,c
  3283  000936  0D10               	mullw	16
  3284  000938  50F3               	movf	prodl,w,c
  3285  00093A  0F69               	addlw	low (_key+9)
  3286  00093C  6ED9               	movwf	fsr2l,c
  3287  00093E  6ADA               	clrf	fsr2h,c
  3288  000940  50DF               	movf	indf2,w,c
  3289  000942  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3290  000944  501F               	movf	??_ikey_parsing,w,c
  3291  000946  0FB8               	addlw	low _group_x
  3292  000948  6ED9               	movwf	fsr2l,c
  3293  00094A  6ADA               	clrf	fsr2h,c
  3294  00094C  0E01               	movlw	1
  3295  00094E  6EDF               	movwf	indf2,c
  3296                           
  3297                           ;ikb.c: 662: key[k].bf.OwnerOfGroup = 1;
  3298  000950  5023               	movf	ikey_parsing@k,w,c
  3299  000952  0D10               	mullw	16
  3300  000954  50F3               	movf	prodl,w,c
  3301  000956  0F6B               	addlw	low (_key+11)
  3302  000958  6ED9               	movwf	fsr2l,c
  3303  00095A  6ADA               	clrf	fsr2h,c
  3304  00095C  82DF               	bsf	indf2,1,c
  3305  00095E                     l331:
  3306                           
  3307                           ;ikb.c: 663: };ikb.c: 665: };ikb.c: 666: };ikb.c: 667: };ikb.c: 671: if ( (key[k].sm1 >=
      +                           _STAGE_REPTT_ ) && (key[k].sm1 <= _STAGE_REPTT_2_))
  3308  00095E  5023               	movf	ikey_parsing@k,w,c
  3309  000960  0D10               	mullw	16
  3310  000962  50F3               	movf	prodl,w,c
  3311  000964  0F66               	addlw	low (_key+6)
  3312  000966  6ED9               	movwf	fsr2l,c
  3313  000968  6ADA               	clrf	fsr2h,c
  3314  00096A  0E07               	movlw	7
  3315  00096C  64DF               	cpfsgt	indf2,c
  3316  00096E  D024               	goto	l346
  3317  000970  5023               	movf	ikey_parsing@k,w,c
  3318  000972  0D10               	mullw	16
  3319  000974  50F3               	movf	prodl,w,c
  3320  000976  0F66               	addlw	low (_key+6)
  3321  000978  6ED9               	movwf	fsr2l,c
  3322  00097A  6ADA               	clrf	fsr2h,c
  3323  00097C  0E0B               	movlw	11
  3324  00097E  60DF               	cpfslt	indf2,c
  3325  000980  D01B               	goto	l346
  3326                           
  3327                           ;ikb.c: 672: {;ikb.c: 673: if (key[k].bf.state == 0)
  3328  000982  5023               	movf	ikey_parsing@k,w,c
  3329  000984  0D10               	mullw	16
  3330  000986  50F3               	movf	prodl,w,c
  3331  000988  0F6A               	addlw	low (_key+10)
  3332  00098A  6ED9               	movwf	fsr2l,c
  3333  00098C  6ADA               	clrf	fsr2h,c
  3334  00098E  0100               	movlb	0	; () banked
  3335  000990  B0DF               	btfsc	indf2,0,c
  3336  000992  D012               	goto	l346
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;ikb.c: 674: {;ikb.c: 675: key[k].counter1 = 0;
  3340  000994  5023               	movf	ikey_parsing@k,w,c
  3341  000996  0D10               	mullw	16
  3342  000998  50F3               	movf	prodl,w,c
  3343  00099A  0F67               	addlw	low (_key+7)
  3344  00099C  6ED9               	movwf	fsr2l,c
  3345  00099E  6ADA               	clrf	fsr2h,c
  3346  0009A0  0E00               	movlw	0
  3347  0009A2  6EDE               	movwf	postinc2,c
  3348  0009A4  0E00               	movlw	0
  3349  0009A6  6EDD               	movwf	postdec2,c
  3350                           
  3351                           ;ikb.c: 676: key[k].sm1 = _STAGE_ISKEY_READFROMAPP_;
  3352  0009A8  5023               	movf	ikey_parsing@k,w,c
  3353  0009AA  0D10               	mullw	16
  3354  0009AC  50F3               	movf	prodl,w,c
  3355  0009AE  0F66               	addlw	low (_key+6)
  3356  0009B0  6ED9               	movwf	fsr2l,c
  3357  0009B2  6ADA               	clrf	fsr2h,c
  3358  0009B4  0E03               	movlw	3
  3359  0009B6  6EDF               	movwf	indf2,c
  3360  0009B8                     l346:
  3361                           
  3362                           ;ikb.c: 677: };ikb.c: 678: };ikb.c: 680: if (key[k].sm1 == _STAGE_REPTT_ )
  3363  0009B8  5023               	movf	ikey_parsing@k,w,c
  3364  0009BA  0D10               	mullw	16
  3365  0009BC  50F3               	movf	prodl,w,c
  3366  0009BE  0F66               	addlw	low (_key+6)
  3367  0009C0  6ED9               	movwf	fsr2l,c
  3368  0009C2  6ADA               	clrf	fsr2h,c
  3369  0009C4  0E08               	movlw	8
  3370  0009C6  18DE               	xorwf	postinc2,w,c
  3371  0009C8  A4D8               	btfss	status,2,c
  3372  0009CA  D027               	goto	l348
  3373                           
  3374                           ;ikb.c: 681: {;ikb.c: 682: if ( ++key[k].counter1 >= key[k].repp.breakTime)
  3375  0009CC  5023               	movf	ikey_parsing@k,w,c
  3376  0009CE  0D10               	mullw	16
  3377  0009D0  50F3               	movf	prodl,w,c
  3378  0009D2  0F6C               	addlw	low (_key+12)
  3379  0009D4  6ED9               	movwf	fsr2l,c
  3380  0009D6  6ADA               	clrf	fsr2h,c
  3381  0009D8  5023               	movf	ikey_parsing@k,w,c
  3382  0009DA  0D10               	mullw	16
  3383  0009DC  50F3               	movf	prodl,w,c
  3384  0009DE  0F67               	addlw	low (_key+7)
  3385  0009E0  6EE1               	movwf	fsr1l,c
  3386  0009E2  6AE2               	clrf	fsr1h,c
  3387  0009E4  2AE6               	incf	postinc1,f,c
  3388  0009E6  0E00               	movlw	0
  3389  0009E8  22E5               	addwfc	postdec1,f,c
  3390  0009EA  50DE               	movf	postinc2,w,c
  3391  0009EC  5CE6               	subwf	postinc1,w,c
  3392  0009EE  50DE               	movf	postinc2,w,c
  3393  0009F0  58E6               	subwfb	postinc1,w,c
  3394  0009F2  A0D8               	btfss	status,0,c
  3395  0009F4  D012               	goto	l348
  3396                           
  3397                           ;ikb.c: 683: {;ikb.c: 684: key[k].counter1 =0;
  3398  0009F6  5023               	movf	ikey_parsing@k,w,c
  3399  0009F8  0D10               	mullw	16
  3400  0009FA  50F3               	movf	prodl,w,c
  3401  0009FC  0F67               	addlw	low (_key+7)
  3402  0009FE  6ED9               	movwf	fsr2l,c
  3403  000A00  6ADA               	clrf	fsr2h,c
  3404  000A02  0E00               	movlw	0
  3405  000A04  6EDE               	movwf	postinc2,c
  3406  000A06  0E00               	movlw	0
  3407  000A08  6EDD               	movwf	postdec2,c
  3408                           
  3409                           ;ikb.c: 685: key[k].sm1 = _STAGE_REPTT_1_;
  3410  000A0A  5023               	movf	ikey_parsing@k,w,c
  3411  000A0C  0D10               	mullw	16
  3412  000A0E  50F3               	movf	prodl,w,c
  3413  000A10  0F66               	addlw	low (_key+6)
  3414  000A12  6ED9               	movwf	fsr2l,c
  3415  000A14  6ADA               	clrf	fsr2h,c
  3416  000A16  0E09               	movlw	9
  3417  000A18  6EDF               	movwf	indf2,c
  3418  000A1A                     l348:
  3419                           
  3420                           ;ikb.c: 686: };ikb.c: 687: };ikb.c: 688: if (key[k].sm1 == _STAGE_REPTT_1_)
  3421  000A1A  5023               	movf	ikey_parsing@k,w,c
  3422  000A1C  0D10               	mullw	16
  3423  000A1E  50F3               	movf	prodl,w,c
  3424  000A20  0F66               	addlw	low (_key+6)
  3425  000A22  6ED9               	movwf	fsr2l,c
  3426  000A24  6ADA               	clrf	fsr2h,c
  3427  000A26  0E09               	movlw	9
  3428  000A28  18DE               	xorwf	postinc2,w,c
  3429  000A2A  A4D8               	btfss	status,2,c
  3430  000A2C  D018               	goto	l350
  3431                           
  3432                           ;ikb.c: 689: {;ikb.c: 690: if (key[k].bf.ReadyToRead == 0)
  3433  000A2E  5023               	movf	ikey_parsing@k,w,c
  3434  000A30  0D10               	mullw	16
  3435  000A32  50F3               	movf	prodl,w,c
  3436  000A34  0F6A               	addlw	low (_key+10)
  3437  000A36  6ED9               	movwf	fsr2l,c
  3438  000A38  6ADA               	clrf	fsr2h,c
  3439  000A3A  0100               	movlb	0	; () banked
  3440  000A3C  BEDF               	btfsc	indf2,7,c
  3441  000A3E  D00F               	goto	l350
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;ikb.c: 691: {;ikb.c: 692: key[k].bf.ReadyToRead = 1;
  3445  000A40  5023               	movf	ikey_parsing@k,w,c
  3446  000A42  0D10               	mullw	16
  3447  000A44  50F3               	movf	prodl,w,c
  3448  000A46  0F6A               	addlw	low (_key+10)
  3449  000A48  6ED9               	movwf	fsr2l,c
  3450  000A4A  6ADA               	clrf	fsr2h,c
  3451  000A4C  8EDF               	bsf	indf2,7,c
  3452                           
  3453                           ;ikb.c: 693: key[k].sm1 = _STAGE_REPTT_2_;
  3454  000A4E  5023               	movf	ikey_parsing@k,w,c
  3455  000A50  0D10               	mullw	16
  3456  000A52  50F3               	movf	prodl,w,c
  3457  000A54  0F66               	addlw	low (_key+6)
  3458  000A56  6ED9               	movwf	fsr2l,c
  3459  000A58  6ADA               	clrf	fsr2h,c
  3460  000A5A  0E0A               	movlw	10
  3461  000A5C  6EDF               	movwf	indf2,c
  3462  000A5E                     l350:
  3463                           
  3464                           ;ikb.c: 694: };ikb.c: 695: };ikb.c: 696: if (key[k].sm1 == _STAGE_REPTT_2_)
  3465  000A5E  5023               	movf	ikey_parsing@k,w,c
  3466  000A60  0D10               	mullw	16
  3467  000A62  50F3               	movf	prodl,w,c
  3468  000A64  0F66               	addlw	low (_key+6)
  3469  000A66  6ED9               	movwf	fsr2l,c
  3470  000A68  6ADA               	clrf	fsr2h,c
  3471  000A6A  0E0A               	movlw	10
  3472  000A6C  18DE               	xorwf	postinc2,w,c
  3473  000A6E  A4D8               	btfss	status,2,c
  3474  000A70  D027               	goto	l352
  3475                           
  3476                           ;ikb.c: 697: {;ikb.c: 698: if ( ++key[k].counter1 >= key[k].repp.period)
  3477  000A72  5023               	movf	ikey_parsing@k,w,c
  3478  000A74  0D10               	mullw	16
  3479  000A76  50F3               	movf	prodl,w,c
  3480  000A78  0F6E               	addlw	low (_key+14)
  3481  000A7A  6ED9               	movwf	fsr2l,c
  3482  000A7C  6ADA               	clrf	fsr2h,c
  3483  000A7E  5023               	movf	ikey_parsing@k,w,c
  3484  000A80  0D10               	mullw	16
  3485  000A82  50F3               	movf	prodl,w,c
  3486  000A84  0F67               	addlw	low (_key+7)
  3487  000A86  6EE1               	movwf	fsr1l,c
  3488  000A88  6AE2               	clrf	fsr1h,c
  3489  000A8A  2AE6               	incf	postinc1,f,c
  3490  000A8C  0E00               	movlw	0
  3491  000A8E  22E5               	addwfc	postdec1,f,c
  3492  000A90  50DE               	movf	postinc2,w,c
  3493  000A92  5CE6               	subwf	postinc1,w,c
  3494  000A94  50DE               	movf	postinc2,w,c
  3495  000A96  58E6               	subwfb	postinc1,w,c
  3496  000A98  A0D8               	btfss	status,0,c
  3497  000A9A  D012               	goto	l352
  3498                           
  3499                           ;ikb.c: 699: {;ikb.c: 700: key[k].counter1 = 0;
  3500  000A9C  5023               	movf	ikey_parsing@k,w,c
  3501  000A9E  0D10               	mullw	16
  3502  000AA0  50F3               	movf	prodl,w,c
  3503  000AA2  0F67               	addlw	low (_key+7)
  3504  000AA4  6ED9               	movwf	fsr2l,c
  3505  000AA6  6ADA               	clrf	fsr2h,c
  3506  000AA8  0E00               	movlw	0
  3507  000AAA  6EDE               	movwf	postinc2,c
  3508  000AAC  0E00               	movlw	0
  3509  000AAE  6EDD               	movwf	postdec2,c
  3510                           
  3511                           ;ikb.c: 701: key[k].sm1 = _STAGE_REPTT_1_;
  3512  000AB0  5023               	movf	ikey_parsing@k,w,c
  3513  000AB2  0D10               	mullw	16
  3514  000AB4  50F3               	movf	prodl,w,c
  3515  000AB6  0F66               	addlw	low (_key+6)
  3516  000AB8  6ED9               	movwf	fsr2l,c
  3517  000ABA  6ADA               	clrf	fsr2h,c
  3518  000ABC  0E09               	movlw	9
  3519  000ABE  6EDF               	movwf	indf2,c
  3520  000AC0                     l352:
  3521                           
  3522                           ;ikb.c: 702: };ikb.c: 703: };ikb.c: 705: if (key[k].sm1 == _STAGE_ONKEYRELEASED_ )
  3523  000AC0  5023               	movf	ikey_parsing@k,w,c
  3524  000AC2  0D10               	mullw	16
  3525  000AC4  50F3               	movf	prodl,w,c
  3526  000AC6  0F66               	addlw	low (_key+6)
  3527  000AC8  6ED9               	movwf	fsr2l,c
  3528  000ACA  6ADA               	clrf	fsr2h,c
  3529  000ACC  0E06               	movlw	6
  3530  000ACE  18DE               	xorwf	postinc2,w,c
  3531  000AD0  A4D8               	btfss	status,2,c
  3532  000AD2  D018               	goto	l354
  3533                           
  3534                           ;ikb.c: 706: {;ikb.c: 707: if (key[k].bf.state == 0)
  3535  000AD4  5023               	movf	ikey_parsing@k,w,c
  3536  000AD6  0D10               	mullw	16
  3537  000AD8  50F3               	movf	prodl,w,c
  3538  000ADA  0F6A               	addlw	low (_key+10)
  3539  000ADC  6ED9               	movwf	fsr2l,c
  3540  000ADE  6ADA               	clrf	fsr2h,c
  3541  000AE0  0100               	movlb	0	; () banked
  3542  000AE2  B0DF               	btfsc	indf2,0,c
  3543  000AE4  D00F               	goto	l354
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;ikb.c: 708: {;ikb.c: 709: key[k].bf.ReadyToRead = 1;
  3547  000AE6  5023               	movf	ikey_parsing@k,w,c
  3548  000AE8  0D10               	mullw	16
  3549  000AEA  50F3               	movf	prodl,w,c
  3550  000AEC  0F6A               	addlw	low (_key+10)
  3551  000AEE  6ED9               	movwf	fsr2l,c
  3552  000AF0  6ADA               	clrf	fsr2h,c
  3553  000AF2  8EDF               	bsf	indf2,7,c
  3554                           
  3555                           ;ikb.c: 710: key[k].sm1 = _STAGE_ISKEY_READFROMAPP_;
  3556  000AF4  5023               	movf	ikey_parsing@k,w,c
  3557  000AF6  0D10               	mullw	16
  3558  000AF8  50F3               	movf	prodl,w,c
  3559  000AFA  0F66               	addlw	low (_key+6)
  3560  000AFC  6ED9               	movwf	fsr2l,c
  3561  000AFE  6ADA               	clrf	fsr2h,c
  3562  000B00  0E03               	movlw	3
  3563  000B02  6EDF               	movwf	indf2,c
  3564  000B04                     l354:
  3565                           
  3566                           ;ikb.c: 711: };ikb.c: 712: };ikb.c: 713: if (key[k].sm1 == _STAGE_WHILEPRESSING_ )
  3567  000B04  5023               	movf	ikey_parsing@k,w,c
  3568  000B06  0D10               	mullw	16
  3569  000B08  50F3               	movf	prodl,w,c
  3570  000B0A  0F66               	addlw	low (_key+6)
  3571  000B0C  6ED9               	movwf	fsr2l,c
  3572  000B0E  6ADA               	clrf	fsr2h,c
  3573  000B10  0E07               	movlw	7
  3574  000B12  18DE               	xorwf	postinc2,w,c
  3575  000B14  A4D8               	btfss	status,2,c
  3576  000B16  D010               	goto	l356
  3577                           
  3578                           ;ikb.c: 714: {;ikb.c: 715: key[k].bf.ReadyToRead = 1;
  3579  000B18  5023               	movf	ikey_parsing@k,w,c
  3580  000B1A  0D10               	mullw	16
  3581  000B1C  50F3               	movf	prodl,w,c
  3582  000B1E  0F6A               	addlw	low (_key+10)
  3583  000B20  6ED9               	movwf	fsr2l,c
  3584  000B22  6ADA               	clrf	fsr2h,c
  3585  000B24  0100               	movlb	0	; () banked
  3586  000B26  8EDF               	bsf	indf2,7,c
  3587                           
  3588                           ;ikb.c: 716: key[k].sm1 = _STAGE_ISKEY_RELEASED2_;
  3589  000B28  5023               	movf	ikey_parsing@k,w,c
  3590  000B2A  0D10               	mullw	16
  3591  000B2C  50F3               	movf	prodl,w,c
  3592  000B2E  0F66               	addlw	low (_key+6)
  3593  000B30  6ED9               	movwf	fsr2l,c
  3594  000B32  6ADA               	clrf	fsr2h,c
  3595  000B34  0E02               	movlw	2
  3596  000B36  6EDF               	movwf	indf2,c
  3597  000B38                     l356:
  3598                           
  3599                           ;ikb.c: 717: };ikb.c: 719: if (key[k].sm1 == _STAGE_FIREATIMEEXPIRED_ )
  3600  000B38  5023               	movf	ikey_parsing@k,w,c
  3601  000B3A  0D10               	mullw	16
  3602  000B3C  50F3               	movf	prodl,w,c
  3603  000B3E  0F66               	addlw	low (_key+6)
  3604  000B40  6ED9               	movwf	fsr2l,c
  3605  000B42  6ADA               	clrf	fsr2h,c
  3606  000B44  0E04               	movlw	4
  3607  000B46  18DE               	xorwf	postinc2,w,c
  3608  000B48  A4D8               	btfss	status,2,c
  3609  000B4A  D09C               	goto	l357
  3610                           
  3611                           ;ikb.c: 720: {;ikb.c: 721: key[k].counter1++;
  3612  000B4C  5023               	movf	ikey_parsing@k,w,c
  3613  000B4E  0D10               	mullw	16
  3614  000B50  50F3               	movf	prodl,w,c
  3615  000B52  0F67               	addlw	low (_key+7)
  3616  000B54  6ED9               	movwf	fsr2l,c
  3617  000B56  6ADA               	clrf	fsr2h,c
  3618  000B58  2ADE               	incf	postinc2,f,c
  3619  000B5A  0E00               	movlw	0
  3620  000B5C  22DD               	addwfc	postdec2,f,c
  3621                           
  3622                           ;ikb.c: 723: if (key[k].bf.state == 0)
  3623  000B5E  5023               	movf	ikey_parsing@k,w,c
  3624  000B60  0D10               	mullw	16
  3625  000B62  50F3               	movf	prodl,w,c
  3626  000B64  0F6A               	addlw	low (_key+10)
  3627  000B66  6ED9               	movwf	fsr2l,c
  3628  000B68  6ADA               	clrf	fsr2h,c
  3629  000B6A  0100               	movlb	0	; () banked
  3630  000B6C  B0DF               	btfsc	indf2,0,c
  3631  000B6E  D03D               	goto	l5476
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;ikb.c: 724: {;ikb.c: 725: if (key[k].counter1 <= ((300.0/20)) )
  3635  000B70  0E00               	movlw	0
  3636  000B72  6E16               	movwf	___ftge@ff1,c
  3637  000B74  0E70               	movlw	112
  3638  000B76  6E17               	movwf	___ftge@ff1+1,c
  3639  000B78  0E41               	movlw	65
  3640  000B7A  6E18               	movwf	___ftge@ff1+2,c
  3641  000B7C  5023               	movf	ikey_parsing@k,w,c
  3642  000B7E  0D10               	mullw	16
  3643  000B80  50F3               	movf	prodl,w,c
  3644  000B82  0F67               	addlw	low (_key+7)
  3645  000B84  6ED9               	movwf	fsr2l,c
  3646  000B86  6ADA               	clrf	fsr2h,c
  3647  000B88  CFDE F013          	movff	postinc2,___lwtoft@c
  3648  000B8C  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3649  000B90  ECF4  F013         	call	___lwtoft	;wreg free
  3650  000B94  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3651  000B98  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3652  000B9C  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3653  000BA0  ECA0  F010         	call	___ftge	;wreg free
  3654  000BA4  A0D8               	btfss	status,0,c
  3655  000BA6  D021               	goto	l5476
  3656                           
  3657                           ;ikb.c: 726: {;ikb.c: 727: key[k].counter1 = 0;
  3658  000BA8  5023               	movf	ikey_parsing@k,w,c
  3659  000BAA  0D10               	mullw	16
  3660  000BAC  50F3               	movf	prodl,w,c
  3661  000BAE  0F67               	addlw	low (_key+7)
  3662  000BB0  6ED9               	movwf	fsr2l,c
  3663  000BB2  6ADA               	clrf	fsr2h,c
  3664  000BB4  0E00               	movlw	0
  3665  000BB6  6EDE               	movwf	postinc2,c
  3666  000BB8  0E00               	movlw	0
  3667  000BBA  6EDD               	movwf	postdec2,c
  3668                           
  3669                           ;ikb.c: 729: key[k].bf.ReadyToRead = 1;
  3670  000BBC  5023               	movf	ikey_parsing@k,w,c
  3671  000BBE  0D10               	mullw	16
  3672  000BC0  50F3               	movf	prodl,w,c
  3673  000BC2  0F6A               	addlw	low (_key+10)
  3674  000BC4  6ED9               	movwf	fsr2l,c
  3675  000BC6  6ADA               	clrf	fsr2h,c
  3676  000BC8  0100               	movlb	0	; () banked
  3677  000BCA  8EDF               	bsf	indf2,7,c
  3678                           
  3679                           ;ikb.c: 730: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3680  000BCC  5023               	movf	ikey_parsing@k,w,c
  3681  000BCE  0D10               	mullw	16
  3682  000BD0  50F3               	movf	prodl,w,c
  3683  000BD2  0F6B               	addlw	low (_key+11)
  3684  000BD4  6ED9               	movwf	fsr2l,c
  3685  000BD6  6ADA               	clrf	fsr2h,c
  3686  000BD8  90DF               	bcf	indf2,0,c
  3687                           
  3688                           ;ikb.c: 732: key[k].sm1 = _STAGE_ISKEY_READFROMAPP_;
  3689  000BDA  5023               	movf	ikey_parsing@k,w,c
  3690  000BDC  0D10               	mullw	16
  3691  000BDE  50F3               	movf	prodl,w,c
  3692  000BE0  0F66               	addlw	low (_key+6)
  3693  000BE2  6ED9               	movwf	fsr2l,c
  3694  000BE4  6ADA               	clrf	fsr2h,c
  3695  000BE6  0E03               	movlw	3
  3696  000BE8  6EDF               	movwf	indf2,c
  3697  000BEA                     l5476:
  3698                           
  3699                           ;ikb.c: 733: };ikb.c: 734: };ikb.c: 736: if (key[k].counter1 > ((300.0/20)) )
  3700  000BEA  0E00               	movlw	0
  3701  000BEC  6E16               	movwf	___ftge@ff1,c
  3702  000BEE  0E70               	movlw	112
  3703  000BF0  6E17               	movwf	___ftge@ff1+1,c
  3704  000BF2  0E41               	movlw	65
  3705  000BF4  6E18               	movwf	___ftge@ff1+2,c
  3706  000BF6  5023               	movf	ikey_parsing@k,w,c
  3707  000BF8  0D10               	mullw	16
  3708  000BFA  50F3               	movf	prodl,w,c
  3709  000BFC  0F67               	addlw	low (_key+7)
  3710  000BFE  6ED9               	movwf	fsr2l,c
  3711  000C00  6ADA               	clrf	fsr2h,c
  3712  000C02  CFDE F013          	movff	postinc2,___lwtoft@c
  3713  000C06  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3714  000C0A  ECF4  F013         	call	___lwtoft	;wreg free
  3715  000C0E  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3716  000C12  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3717  000C16  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3718  000C1A  ECA0  F010         	call	___ftge	;wreg free
  3719  000C1E  B0D8               	btfsc	status,0,c
  3720  000C20  D031               	goto	l357
  3721                           
  3722                           ;ikb.c: 737: {;ikb.c: 738: key[k].counter1 = 0x0000;
  3723  000C22  5023               	movf	ikey_parsing@k,w,c
  3724  000C24  0D10               	mullw	16
  3725  000C26  50F3               	movf	prodl,w,c
  3726  000C28  0F67               	addlw	low (_key+7)
  3727  000C2A  6ED9               	movwf	fsr2l,c
  3728  000C2C  6ADA               	clrf	fsr2h,c
  3729  000C2E  0E00               	movlw	0
  3730  000C30  6EDE               	movwf	postinc2,c
  3731  000C32  0E00               	movlw	0
  3732  000C34  6EDD               	movwf	postdec2,c
  3733                           
  3734                           ;ikb.c: 740: key[k].bf.ReadyToRead = 1;
  3735  000C36  5023               	movf	ikey_parsing@k,w,c
  3736  000C38  0D10               	mullw	16
  3737  000C3A  50F3               	movf	prodl,w,c
  3738  000C3C  0F6A               	addlw	low (_key+10)
  3739  000C3E  6ED9               	movwf	fsr2l,c
  3740  000C40  6ADA               	clrf	fsr2h,c
  3741  000C42  0100               	movlb	0	; () banked
  3742  000C44  8EDF               	bsf	indf2,7,c
  3743                           
  3744                           ;ikb.c: 741: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3745  000C46  5023               	movf	ikey_parsing@k,w,c
  3746  000C48  0D10               	mullw	16
  3747  000C4A  50F3               	movf	prodl,w,c
  3748  000C4C  0F6B               	addlw	low (_key+11)
  3749  000C4E  6ED9               	movwf	fsr2l,c
  3750  000C50  6ADA               	clrf	fsr2h,c
  3751  000C52  80DF               	bsf	indf2,0,c
  3752                           
  3753                           ;ikb.c: 743: if (!key[k].bf.Reptt)
  3754  000C54  5023               	movf	ikey_parsing@k,w,c
  3755  000C56  0D10               	mullw	16
  3756  000C58  50F3               	movf	prodl,w,c
  3757  000C5A  0F6A               	addlw	low (_key+10)
  3758  000C5C  6ED9               	movwf	fsr2l,c
  3759  000C5E  6ADA               	clrf	fsr2h,c
  3760  000C60  B4DF               	btfsc	indf2,2,c
  3761  000C62  D008               	goto	l5482
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;ikb.c: 744: {;ikb.c: 745: key[k].sm1 = _STAGE_ISKEY_RELEASED_;
  3765  000C64  5023               	movf	ikey_parsing@k,w,c
  3766  000C66  0D10               	mullw	16
  3767  000C68  50F3               	movf	prodl,w,c
  3768  000C6A  0F66               	addlw	low (_key+6)
  3769  000C6C  6ED9               	movwf	fsr2l,c
  3770  000C6E  6ADA               	clrf	fsr2h,c
  3771  000C70  0E01               	movlw	1
  3772  000C72  D007               	goto	L4
  3773  000C74                     l5482:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;ikb.c: 747: else;ikb.c: 748: {;ikb.c: 749: key[k].sm1 = _STAGE_REPTT_2_;
  3777  000C74  5023               	movf	ikey_parsing@k,w,c
  3778  000C76  0D10               	mullw	16
  3779  000C78  50F3               	movf	prodl,w,c
  3780  000C7A  0F66               	addlw	low (_key+6)
  3781  000C7C  6ED9               	movwf	fsr2l,c
  3782  000C7E  6ADA               	clrf	fsr2h,c
  3783  000C80  0E0A               	movlw	10
  3784  000C82                     L4:
  3785  000C82  6EDF               	movwf	indf2,c
  3786  000C84                     l357:
  3787                           
  3788                           ;ikb.c: 750: };ikb.c: 751: };ikb.c: 752: };ikb.c: 757: if (key[k].sm1 == _STAGE_FIREATIM
      +                          EEXPIRED_2_)
  3789  000C84  5023               	movf	ikey_parsing@k,w,c
  3790  000C86  0D10               	mullw	16
  3791  000C88  50F3               	movf	prodl,w,c
  3792  000C8A  0F66               	addlw	low (_key+6)
  3793  000C8C  6ED9               	movwf	fsr2l,c
  3794  000C8E  6ADA               	clrf	fsr2h,c
  3795  000C90  0E05               	movlw	5
  3796  000C92  18DE               	xorwf	postinc2,w,c
  3797  000C94  A4D8               	btfss	status,2,c
  3798  000C96  D08C               	goto	l363
  3799                           
  3800                           ;ikb.c: 758: {;ikb.c: 759: key[k].counter1++;
  3801  000C98  5023               	movf	ikey_parsing@k,w,c
  3802  000C9A  0D10               	mullw	16
  3803  000C9C  50F3               	movf	prodl,w,c
  3804  000C9E  0F67               	addlw	low (_key+7)
  3805  000CA0  6ED9               	movwf	fsr2l,c
  3806  000CA2  6ADA               	clrf	fsr2h,c
  3807  000CA4  2ADE               	incf	postinc2,f,c
  3808  000CA6  0E00               	movlw	0
  3809  000CA8  22DD               	addwfc	postdec2,f,c
  3810                           
  3811                           ;ikb.c: 761: if (key[k].bf.state == 0)
  3812  000CAA  5023               	movf	ikey_parsing@k,w,c
  3813  000CAC  0D10               	mullw	16
  3814  000CAE  50F3               	movf	prodl,w,c
  3815  000CB0  0F6A               	addlw	low (_key+10)
  3816  000CB2  6ED9               	movwf	fsr2l,c
  3817  000CB4  6ADA               	clrf	fsr2h,c
  3818  000CB6  0100               	movlb	0	; () banked
  3819  000CB8  B0DF               	btfsc	indf2,0,c
  3820  000CBA  D03D               	goto	l5490
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;ikb.c: 762: {;ikb.c: 763: if (key[k].counter1 <= ((300.0/20)))
  3824  000CBC  0E00               	movlw	0
  3825  000CBE  6E16               	movwf	___ftge@ff1,c
  3826  000CC0  0E70               	movlw	112
  3827  000CC2  6E17               	movwf	___ftge@ff1+1,c
  3828  000CC4  0E41               	movlw	65
  3829  000CC6  6E18               	movwf	___ftge@ff1+2,c
  3830  000CC8  5023               	movf	ikey_parsing@k,w,c
  3831  000CCA  0D10               	mullw	16
  3832  000CCC  50F3               	movf	prodl,w,c
  3833  000CCE  0F67               	addlw	low (_key+7)
  3834  000CD0  6ED9               	movwf	fsr2l,c
  3835  000CD2  6ADA               	clrf	fsr2h,c
  3836  000CD4  CFDE F013          	movff	postinc2,___lwtoft@c
  3837  000CD8  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3838  000CDC  ECF4  F013         	call	___lwtoft	;wreg free
  3839  000CE0  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3840  000CE4  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3841  000CE8  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3842  000CEC  ECA0  F010         	call	___ftge	;wreg free
  3843  000CF0  A0D8               	btfss	status,0,c
  3844  000CF2  D021               	goto	l5490
  3845                           
  3846                           ;ikb.c: 764: {;ikb.c: 765: key[k].counter1 = 0;
  3847  000CF4  5023               	movf	ikey_parsing@k,w,c
  3848  000CF6  0D10               	mullw	16
  3849  000CF8  50F3               	movf	prodl,w,c
  3850  000CFA  0F67               	addlw	low (_key+7)
  3851  000CFC  6ED9               	movwf	fsr2l,c
  3852  000CFE  6ADA               	clrf	fsr2h,c
  3853  000D00  0E00               	movlw	0
  3854  000D02  6EDE               	movwf	postinc2,c
  3855  000D04  0E00               	movlw	0
  3856  000D06  6EDD               	movwf	postdec2,c
  3857                           
  3858                           ;ikb.c: 767: key[k].bf.ReadyToRead = 1;
  3859  000D08  5023               	movf	ikey_parsing@k,w,c
  3860  000D0A  0D10               	mullw	16
  3861  000D0C  50F3               	movf	prodl,w,c
  3862  000D0E  0F6A               	addlw	low (_key+10)
  3863  000D10  6ED9               	movwf	fsr2l,c
  3864  000D12  6ADA               	clrf	fsr2h,c
  3865  000D14  0100               	movlb	0	; () banked
  3866  000D16  8EDF               	bsf	indf2,7,c
  3867                           
  3868                           ;ikb.c: 768: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3869  000D18  5023               	movf	ikey_parsing@k,w,c
  3870  000D1A  0D10               	mullw	16
  3871  000D1C  50F3               	movf	prodl,w,c
  3872  000D1E  0F6B               	addlw	low (_key+11)
  3873  000D20  6ED9               	movwf	fsr2l,c
  3874  000D22  6ADA               	clrf	fsr2h,c
  3875  000D24  90DF               	bcf	indf2,0,c
  3876                           
  3877                           ;ikb.c: 770: key[k].sm1 = _STAGE_ISKEY_READFROMAPP_;
  3878  000D26  5023               	movf	ikey_parsing@k,w,c
  3879  000D28  0D10               	mullw	16
  3880  000D2A  50F3               	movf	prodl,w,c
  3881  000D2C  0F66               	addlw	low (_key+6)
  3882  000D2E  6ED9               	movwf	fsr2l,c
  3883  000D30  6ADA               	clrf	fsr2h,c
  3884  000D32  0E03               	movlw	3
  3885  000D34  6EDF               	movwf	indf2,c
  3886  000D36                     l5490:
  3887                           
  3888                           ;ikb.c: 771: };ikb.c: 772: };ikb.c: 775: if (key[k].counter1 >= ((2000.0/20)))
  3889  000D36  5023               	movf	ikey_parsing@k,w,c
  3890  000D38  0D10               	mullw	16
  3891  000D3A  50F3               	movf	prodl,w,c
  3892  000D3C  0F67               	addlw	low (_key+7)
  3893  000D3E  6ED9               	movwf	fsr2l,c
  3894  000D40  6ADA               	clrf	fsr2h,c
  3895  000D42  CFDE F013          	movff	postinc2,___lwtoft@c
  3896  000D46  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3897  000D4A  ECF4  F013         	call	___lwtoft	;wreg free
  3898  000D4E  C013  F016         	movff	?___lwtoft,___ftge@ff1
  3899  000D52  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  3900  000D56  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  3901  000D5A  0E00               	movlw	0
  3902  000D5C  6E19               	movwf	___ftge@ff2,c
  3903  000D5E  0EC8               	movlw	200
  3904  000D60  6E1A               	movwf	___ftge@ff2+1,c
  3905  000D62  0E42               	movlw	66
  3906  000D64  6E1B               	movwf	___ftge@ff2+2,c
  3907  000D66  ECA0  F010         	call	___ftge	;wreg free
  3908  000D6A  A0D8               	btfss	status,0,c
  3909  000D6C  D021               	goto	l363
  3910                           
  3911                           ;ikb.c: 776: {;ikb.c: 777: key[k].counter1 = 0x0000;
  3912  000D6E  5023               	movf	ikey_parsing@k,w,c
  3913  000D70  0D10               	mullw	16
  3914  000D72  50F3               	movf	prodl,w,c
  3915  000D74  0F67               	addlw	low (_key+7)
  3916  000D76  6ED9               	movwf	fsr2l,c
  3917  000D78  6ADA               	clrf	fsr2h,c
  3918  000D7A  0E00               	movlw	0
  3919  000D7C  6EDE               	movwf	postinc2,c
  3920  000D7E  0E00               	movlw	0
  3921  000D80  6EDD               	movwf	postdec2,c
  3922                           
  3923                           ;ikb.c: 779: key[k].bf.ReadyToRead = 1;
  3924  000D82  5023               	movf	ikey_parsing@k,w,c
  3925  000D84  0D10               	mullw	16
  3926  000D86  50F3               	movf	prodl,w,c
  3927  000D88  0F6A               	addlw	low (_key+10)
  3928  000D8A  6ED9               	movwf	fsr2l,c
  3929  000D8C  6ADA               	clrf	fsr2h,c
  3930  000D8E  0100               	movlb	0	; () banked
  3931  000D90  8EDF               	bsf	indf2,7,c
  3932                           
  3933                           ;ikb.c: 780: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3934  000D92  5023               	movf	ikey_parsing@k,w,c
  3935  000D94  0D10               	mullw	16
  3936  000D96  50F3               	movf	prodl,w,c
  3937  000D98  0F6B               	addlw	low (_key+11)
  3938  000D9A  6ED9               	movwf	fsr2l,c
  3939  000D9C  6ADA               	clrf	fsr2h,c
  3940  000D9E  80DF               	bsf	indf2,0,c
  3941                           
  3942                           ;ikb.c: 783: key[k].sm1 = _STAGE_ISKEY_RELEASED2_;
  3943  000DA0  5023               	movf	ikey_parsing@k,w,c
  3944  000DA2  0D10               	mullw	16
  3945  000DA4  50F3               	movf	prodl,w,c
  3946  000DA6  0F66               	addlw	low (_key+6)
  3947  000DA8  6ED9               	movwf	fsr2l,c
  3948  000DAA  6ADA               	clrf	fsr2h,c
  3949  000DAC  0E02               	movlw	2
  3950  000DAE  6EDF               	movwf	indf2,c
  3951  000DB0                     l363:
  3952                           
  3953                           ;ikb.c: 784: };ikb.c: 785: };ikb.c: 788: if (key[k].sm1 == _STAGE_ISKEY_RELEASED_)
  3954  000DB0  5023               	movf	ikey_parsing@k,w,c
  3955  000DB2  0D10               	mullw	16
  3956  000DB4  50F3               	movf	prodl,w,c
  3957  000DB6  0F66               	addlw	low (_key+6)
  3958  000DB8  6ED9               	movwf	fsr2l,c
  3959  000DBA  6ADA               	clrf	fsr2h,c
  3960  000DBC  04DE               	decf	postinc2,w,c
  3961  000DBE  A4D8               	btfss	status,2,c
  3962  000DC0  D011               	goto	l367
  3963                           
  3964                           ;ikb.c: 789: {;ikb.c: 790: if (key[k].bf.state == 0)
  3965  000DC2  5023               	movf	ikey_parsing@k,w,c
  3966  000DC4  0D10               	mullw	16
  3967  000DC6  50F3               	movf	prodl,w,c
  3968  000DC8  0F6A               	addlw	low (_key+10)
  3969  000DCA  6ED9               	movwf	fsr2l,c
  3970  000DCC  6ADA               	clrf	fsr2h,c
  3971  000DCE  0100               	movlb	0	; () banked
  3972  000DD0  B0DF               	btfsc	indf2,0,c
  3973  000DD2  D008               	goto	l367
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;ikb.c: 791: {;ikb.c: 792: key[k].sm1 = _STAGE_ISKEY_READFROMAPP_;
  3977  000DD4  5023               	movf	ikey_parsing@k,w,c
  3978  000DD6  0D10               	mullw	16
  3979  000DD8  50F3               	movf	prodl,w,c
  3980  000DDA  0F66               	addlw	low (_key+6)
  3981  000DDC  6ED9               	movwf	fsr2l,c
  3982  000DDE  6ADA               	clrf	fsr2h,c
  3983  000DE0  0E03               	movlw	3
  3984  000DE2  6EDF               	movwf	indf2,c
  3985  000DE4                     l367:
  3986                           
  3987                           ;ikb.c: 793: };ikb.c: 794: };ikb.c: 796: if (key[k].sm1 == _STAGE_ISKEY_RELEASED2_)
  3988  000DE4  5023               	movf	ikey_parsing@k,w,c
  3989  000DE6  0D10               	mullw	16
  3990  000DE8  50F3               	movf	prodl,w,c
  3991  000DEA  0F66               	addlw	low (_key+6)
  3992  000DEC  6ED9               	movwf	fsr2l,c
  3993  000DEE  6ADA               	clrf	fsr2h,c
  3994  000DF0  0E02               	movlw	2
  3995  000DF2  18DE               	xorwf	postinc2,w,c
  3996  000DF4  A4D8               	btfss	status,2,c
  3997  000DF6  D018               	goto	l369
  3998                           
  3999                           ;ikb.c: 797: {;ikb.c: 798: if (key[k].bf.state == 0)
  4000  000DF8  5023               	movf	ikey_parsing@k,w,c
  4001  000DFA  0D10               	mullw	16
  4002  000DFC  50F3               	movf	prodl,w,c
  4003  000DFE  0F6A               	addlw	low (_key+10)
  4004  000E00  6ED9               	movwf	fsr2l,c
  4005  000E02  6ADA               	clrf	fsr2h,c
  4006  000E04  0100               	movlb	0	; () banked
  4007  000E06  B0DF               	btfsc	indf2,0,c
  4008  000E08  D00F               	goto	l369
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;ikb.c: 799: {;ikb.c: 800: key[k].bf.ReadyToRead = 0;
  4012  000E0A  5023               	movf	ikey_parsing@k,w,c
  4013  000E0C  0D10               	mullw	16
  4014  000E0E  50F3               	movf	prodl,w,c
  4015  000E10  0F6A               	addlw	low (_key+10)
  4016  000E12  6ED9               	movwf	fsr2l,c
  4017  000E14  6ADA               	clrf	fsr2h,c
  4018  000E16  9EDF               	bcf	indf2,7,c
  4019                           
  4020                           ;ikb.c: 801: key[k].sm1 = _STAGE_END_PARSING_;
  4021  000E18  5023               	movf	ikey_parsing@k,w,c
  4022  000E1A  0D10               	mullw	16
  4023  000E1C  50F3               	movf	prodl,w,c
  4024  000E1E  0F66               	addlw	low (_key+6)
  4025  000E20  6ED9               	movwf	fsr2l,c
  4026  000E22  6ADA               	clrf	fsr2h,c
  4027  000E24  0E0B               	movlw	11
  4028  000E26  6EDF               	movwf	indf2,c
  4029  000E28                     l369:
  4030                           
  4031                           ;ikb.c: 802: };ikb.c: 803: };ikb.c: 805: if (key[k].sm1 == _STAGE_ISKEY_READFROMAPP_)
  4032  000E28  5023               	movf	ikey_parsing@k,w,c
  4033  000E2A  0D10               	mullw	16
  4034  000E2C  50F3               	movf	prodl,w,c
  4035  000E2E  0F66               	addlw	low (_key+6)
  4036  000E30  6ED9               	movwf	fsr2l,c
  4037  000E32  6ADA               	clrf	fsr2h,c
  4038  000E34  0E03               	movlw	3
  4039  000E36  18DE               	xorwf	postinc2,w,c
  4040  000E38  A4D8               	btfss	status,2,c
  4041  000E3A  D011               	goto	l371
  4042                           
  4043                           ;ikb.c: 806: {;ikb.c: 807: if (key[k].bf.ReadyToRead == 0)
  4044  000E3C  5023               	movf	ikey_parsing@k,w,c
  4045  000E3E  0D10               	mullw	16
  4046  000E40  50F3               	movf	prodl,w,c
  4047  000E42  0F6A               	addlw	low (_key+10)
  4048  000E44  6ED9               	movwf	fsr2l,c
  4049  000E46  6ADA               	clrf	fsr2h,c
  4050  000E48  0100               	movlb	0	; () banked
  4051  000E4A  BEDF               	btfsc	indf2,7,c
  4052  000E4C  D008               	goto	l371
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;ikb.c: 808: {;ikb.c: 809: key[k].sm1 = _STAGE_END_PARSING_;
  4056  000E4E  5023               	movf	ikey_parsing@k,w,c
  4057  000E50  0D10               	mullw	16
  4058  000E52  50F3               	movf	prodl,w,c
  4059  000E54  0F66               	addlw	low (_key+6)
  4060  000E56  6ED9               	movwf	fsr2l,c
  4061  000E58  6ADA               	clrf	fsr2h,c
  4062  000E5A  0E0B               	movlw	11
  4063  000E5C  6EDF               	movwf	indf2,c
  4064  000E5E                     l371:
  4065                           
  4066                           ;ikb.c: 810: };ikb.c: 811: };ikb.c: 813: if (key[k].sm1 == _STAGE_END_PARSING_)
  4067  000E5E  5023               	movf	ikey_parsing@k,w,c
  4068  000E60  0D10               	mullw	16
  4069  000E62  50F3               	movf	prodl,w,c
  4070  000E64  0F66               	addlw	low (_key+6)
  4071  000E66  6ED9               	movwf	fsr2l,c
  4072  000E68  6ADA               	clrf	fsr2h,c
  4073  000E6A  0E0B               	movlw	11
  4074  000E6C  18DE               	xorwf	postinc2,w,c
  4075  000E6E  A4D8               	btfss	status,2,c
  4076  000E70  D02F               	goto	l5510
  4077                           
  4078                           ;ikb.c: 814: {;ikb.c: 815: if (key[k].num_group_x > 0)
  4079  000E72  5023               	movf	ikey_parsing@k,w,c
  4080  000E74  0D10               	mullw	16
  4081  000E76  50F3               	movf	prodl,w,c
  4082  000E78  0F69               	addlw	low (_key+9)
  4083  000E7A  6ED9               	movwf	fsr2l,c
  4084  000E7C  6ADA               	clrf	fsr2h,c
  4085  000E7E  50DF               	movf	indf2,w,c
  4086  000E80  B4D8               	btfsc	status,2,c
  4087  000E82  D016               	goto	l374
  4088                           
  4089                           ;ikb.c: 816: {;ikb.c: 817: group_x[key[k].num_group_x] = 0;
  4090  000E84  5023               	movf	ikey_parsing@k,w,c
  4091  000E86  0D10               	mullw	16
  4092  000E88  50F3               	movf	prodl,w,c
  4093  000E8A  0F69               	addlw	low (_key+9)
  4094  000E8C  6ED9               	movwf	fsr2l,c
  4095  000E8E  6ADA               	clrf	fsr2h,c
  4096  000E90  50DF               	movf	indf2,w,c
  4097  000E92  6E1F               	movwf	??_ikey_parsing& (0+255),c
  4098  000E94  501F               	movf	??_ikey_parsing,w,c
  4099  000E96  0FB8               	addlw	low _group_x
  4100  000E98  6ED9               	movwf	fsr2l,c
  4101  000E9A  6ADA               	clrf	fsr2h,c
  4102  000E9C  0E00               	movlw	0
  4103  000E9E  6EDF               	movwf	indf2,c
  4104                           
  4105                           ;ikb.c: 818: key[k].bf.OwnerOfGroup = 0;
  4106  000EA0  5023               	movf	ikey_parsing@k,w,c
  4107  000EA2  0D10               	mullw	16
  4108  000EA4  50F3               	movf	prodl,w,c
  4109  000EA6  0F6B               	addlw	low (_key+11)
  4110  000EA8  6ED9               	movwf	fsr2l,c
  4111  000EAA  6ADA               	clrf	fsr2h,c
  4112  000EAC  0100               	movlb	0	; () banked
  4113  000EAE  92DF               	bcf	indf2,1,c
  4114  000EB0                     l374:
  4115                           
  4116                           ;ikb.c: 819: };ikb.c: 821: key[k].sm1 = _STAGE_START_PARSING_;
  4117  000EB0  5023               	movf	ikey_parsing@k,w,c
  4118  000EB2  0D10               	mullw	16
  4119  000EB4  50F3               	movf	prodl,w,c
  4120  000EB6  0F66               	addlw	low (_key+6)
  4121  000EB8  6ED9               	movwf	fsr2l,c
  4122  000EBA  6ADA               	clrf	fsr2h,c
  4123  000EBC  0E00               	movlw	0
  4124  000EBE  6EDF               	movwf	indf2,c
  4125                           
  4126                           ;ikb.c: 824: key[k].bf.InProcessing = 0;
  4127  000EC0  5023               	movf	ikey_parsing@k,w,c
  4128  000EC2  0D10               	mullw	16
  4129  000EC4  50F3               	movf	prodl,w,c
  4130  000EC6  0F6B               	addlw	low (_key+11)
  4131  000EC8  6ED9               	movwf	fsr2l,c
  4132  000ECA  6ADA               	clrf	fsr2h,c
  4133  000ECC  0100               	movlb	0	; () banked
  4134  000ECE  94DF               	bcf	indf2,2,c
  4135  000ED0                     l5510:
  4136  000ED0  2A23               	incf	ikey_parsing@k,f,c
  4137  000ED2  0E04               	movlw	4
  4138  000ED4  6423               	cpfsgt	ikey_parsing@k,c
  4139  000ED6  D49F               	goto	l5414
  4140  000ED8  0012               	return	
  4141  000EDA                     __end_of_ikey_parsing:
  4142                           	opt callstack 0
  4143                           
  4144 ;; *************** function _ikey_is_accessible *****************
  4145 ;; Defined at:
  4146 ;;		line 570 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  k               1    wreg     unsigned char 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  k               1   12[COMRAM] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      unsigned char 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0
  4161 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4162 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4163 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4164 ;;Total ram usage:        3 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    5
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_ikey_parsing
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text21
  4175  0023EE                     __ptext21:
  4176                           	opt callstack 0
  4177  0023EE                     _ikey_is_accessible:
  4178                           	opt callstack 23
  4179                           
  4180                           ;incstack = 0
  4181                           ;ikey_is_accessible@k stored from wreg
  4182  0023EE  6E0D               	movwf	ikey_is_accessible@k,c
  4183                           
  4184                           ;ikb.c: 572: if (key[k].num_group_x > 0)
  4185  0023F0  500D               	movf	ikey_is_accessible@k,w,c
  4186  0023F2  0D10               	mullw	16
  4187  0023F4  50F3               	movf	prodl,w,c
  4188  0023F6  0F69               	addlw	low (_key+9)
  4189  0023F8  6ED9               	movwf	fsr2l,c
  4190  0023FA  6ADA               	clrf	fsr2h,c
  4191  0023FC  50DF               	movf	indf2,w,c
  4192  0023FE  B4D8               	btfsc	status,2,c
  4193  002400  D01A               	goto	l5280
  4194                           
  4195                           ;ikb.c: 573: {;ikb.c: 575: if (group_x[key[k].num_group_x] == 1)
  4196  002402  500D               	movf	ikey_is_accessible@k,w,c
  4197  002404  0D10               	mullw	16
  4198  002406  50F3               	movf	prodl,w,c
  4199  002408  0F69               	addlw	low (_key+9)
  4200  00240A  6ED9               	movwf	fsr2l,c
  4201  00240C  6ADA               	clrf	fsr2h,c
  4202  00240E  50DF               	movf	indf2,w,c
  4203  002410  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  4204  002412  500B               	movf	??_ikey_is_accessible,w,c
  4205  002414  0FB8               	addlw	low _group_x
  4206  002416  6ED9               	movwf	fsr2l,c
  4207  002418  6ADA               	clrf	fsr2h,c
  4208  00241A  04DE               	decf	postinc2,w,c
  4209  00241C  A4D8               	btfss	status,2,c
  4210  00241E  D00B               	goto	l5280
  4211                           
  4212                           ;ikb.c: 576: {;ikb.c: 578: if ( !key[k].bf.OwnerOfGroup)
  4213  002420  500D               	movf	ikey_is_accessible@k,w,c
  4214  002422  0D10               	mullw	16
  4215  002424  50F3               	movf	prodl,w,c
  4216  002426  0F6B               	addlw	low (_key+11)
  4217  002428  6ED9               	movwf	fsr2l,c
  4218  00242A  6ADA               	clrf	fsr2h,c
  4219  00242C  0100               	movlb	0	; () banked
  4220  00242E  B2DF               	btfsc	indf2,1,c
  4221  002430  D002               	goto	l5280
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;ikb.c: 579: {;ikb.c: 580: return 0;
  4225  002432  0E00               	movlw	0
  4226  002434  0012               	return	
  4227  002436                     l5280:
  4228                           
  4229                           ;ikb.c: 581: };ikb.c: 582: };ikb.c: 583: };ikb.c: 584: return 1;
  4230  002436  0E01               	movlw	1
  4231  002438  0012               	return		;funcret
  4232  00243A                     __end_of_ikey_is_accessible:
  4233                           	opt callstack 0
  4234                           
  4235 ;; *************** function ___lwtoft *****************
  4236 ;; Defined at:
  4237 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  c               2   18[COMRAM] unsigned int 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  3   18[COMRAM] float 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4251 ;;      Params:         3       0       0       0       0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4254 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4255 ;;Total ram usage:        3 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    6
  4258 ;; This function calls:
  4259 ;;		___ftpack
  4260 ;; This function is called by:
  4261 ;;		_ikey_parsing
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text22
  4266  0027E8                     __ptext22:
  4267                           	opt callstack 0
  4268  0027E8                     ___lwtoft:
  4269                           	opt callstack 22
  4270                           
  4271                           ;incstack = 0
  4272  0027E8  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  4273  0027EC  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  4274  0027F0  6A0D               	clrf	___ftpack@arg+2,c
  4275  0027F2  0E8E               	movlw	142
  4276  0027F4  6E0E               	movwf	___ftpack@exp,c
  4277  0027F6  0E00               	movlw	0
  4278  0027F8  6E0F               	movwf	___ftpack@sign,c
  4279  0027FA  ECE8  F00D         	call	___ftpack	;wreg free
  4280  0027FE  C00B  F013         	movff	?___ftpack,?___lwtoft
  4281  002802  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  4282  002806  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  4283  00280A  0012               	return		;funcret
  4284  00280C                     __end_of___lwtoft:
  4285                           	opt callstack 0
  4286                           
  4287 ;; *************** function _ikb_init *****************
  4288 ;; Defined at:
  4289 ;;		line 219 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  i               1    0        char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 3F/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    5
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text23
  4318  001A28                     __ptext23:
  4319                           	opt callstack 0
  4320  001A28                     _ikb_init:
  4321                           	opt callstack 25
  4322                           
  4323                           ;incstack = 0
  4324                           ;ikb.c: 221: int8_t i;;ikb.c: 391: do{TRISC |= 1<<4;}while(0);
  4325  001A28  8894               	bsf	3988,4,c	;volatile
  4326                           
  4327                           ;ikb.c: 392: do{TRISC |= 1<<5;}while(0);
  4328  001A2A  8A94               	bsf	3988,5,c	;volatile
  4329                           
  4330                           ;ikb.c: 393: do{TRISC |= 1<<6;}while(0);
  4331  001A2C  8C94               	bsf	3988,6,c	;volatile
  4332                           
  4333                           ;ikb.c: 394: do{TRISC |= 1<<7;}while(0);
  4334  001A2E  8E94               	bsf	3988,7,c	;volatile
  4335                           
  4336                           ;ikb.c: 395: do{TRISD |= 1<<4;}while(0);
  4337  001A30  8895               	bsf	3989,4,c	;volatile
  4338                           
  4339                           ;ikb.c: 396: key[0].keyRead = keyRead_pin_key0;
  4340  001A32  0E14               	movlw	low _keyRead_pin_key0
  4341  001A34  0100               	movlb	0	; () banked
  4342  001A36  6F60               	movwf	_key& (0+255),b	;volatile
  4343  001A38  0E2A               	movlw	high _keyRead_pin_key0
  4344  001A3A  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;ikb.c: 397: key[1].keyRead = keyRead_pin_key1;
  4348  001A3C  0ECE               	movlw	low _keyRead_pin_key1
  4349  001A3E  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  4350  001A40  0E29               	movlw	high _keyRead_pin_key1
  4351  001A42  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;ikb.c: 398: key[2].keyRead = keyRead_pin_key2;
  4355  001A44  0EC4               	movlw	low _keyRead_pin_key2
  4356  001A46  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  4357  001A48  0E29               	movlw	high _keyRead_pin_key2
  4358  001A4A  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;ikb.c: 399: key[3].keyRead = keyRead_pin_key3;
  4362  001A4C  0E2A               	movlw	low _keyRead_pin_key3
  4363  001A4E  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  4364  001A50  0E2A               	movlw	high _keyRead_pin_key3
  4365  001A52  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;ikb.c: 400: key[4].keyRead = keyRead_pin_key4;
  4369  001A54  0E1C               	movlw	low _keyRead_pin_key4
  4370  001A56  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  4371  001A58  0E2A               	movlw	high _keyRead_pin_key4
  4372  001A5A  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;ikb.c: 403: key[0].bf.OnKeyPressed = 1;
  4376  001A5C  836A               	bsf	(_key+10)& (0+255),1,b	;volatile
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;ikb.c: 404: key[0].bf.OnKeyReleased = 0;
  4380  001A5E  976A               	bcf	(_key+10)& (0+255),3,b	;volatile
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;ikb.c: 405: key[0].bf.AtTimeExpired = 0;
  4384  001A60  9B6A               	bcf	(_key+10)& (0+255),5,b	;volatile
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;ikb.c: 406: key[0].bf.AtTimeExpired2 = 0;
  4388  001A62  9D6A               	bcf	(_key+10)& (0+255),6,b	;volatile
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;ikb.c: 407: key[0].bf.whilePressing = 0;
  4392  001A64  996A               	bcf	(_key+10)& (0+255),4,b	;volatile
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;ikb.c: 408: key[0].num_group_x = 1;
  4396  001A66  0E01               	movlw	1
  4397  001A68  6F69               	movwf	(_key+9)& (0+255),b	;volatile
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;ikb.c: 410: key[0].bf.Reptt = 1;
  4401  001A6A  856A               	bsf	(_key+10)& (0+255),2,b	;volatile
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;ikb.c: 411: key[0].repp.breakTime= (uint16_t)500.0/20;
  4405  001A6C  0E00               	movlw	0
  4406  001A6E  6F6D               	movwf	(_key+13)& (0+255),b	;volatile
  4407  001A70  0E19               	movlw	25
  4408  001A72  6F6C               	movwf	(_key+12)& (0+255),b	;volatile
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;ikb.c: 412: key[0].repp.period = (uint16_t)300.0/20;
  4412  001A74  0E00               	movlw	0
  4413  001A76  6F6F               	movwf	(_key+15)& (0+255),b	;volatile
  4414  001A78  0E0F               	movlw	15
  4415  001A7A  6F6E               	movwf	(_key+14)& (0+255),b	;volatile
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;ikb.c: 415: key[1].bf.OnKeyPressed = 1;
  4419  001A7C  837A               	bsf	(_key+26)& (0+255),1,b	;volatile
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;ikb.c: 416: key[1].bf.OnKeyReleased = 0;
  4423  001A7E  977A               	bcf	(_key+26)& (0+255),3,b	;volatile
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;ikb.c: 417: key[1].bf.AtTimeExpired = 0;
  4427  001A80  9B7A               	bcf	(_key+26)& (0+255),5,b	;volatile
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;ikb.c: 418: key[1].bf.AtTimeExpired2 = 0;
  4431  001A82  9D7A               	bcf	(_key+26)& (0+255),6,b	;volatile
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;ikb.c: 419: key[1].bf.whilePressing = 0;
  4435  001A84  997A               	bcf	(_key+26)& (0+255),4,b	;volatile
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;ikb.c: 420: key[1].num_group_x = 1;
  4439  001A86  0E01               	movlw	1
  4440  001A88  6F79               	movwf	(_key+25)& (0+255),b	;volatile
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;ikb.c: 422: key[1].bf.Reptt = 1;
  4444  001A8A  857A               	bsf	(_key+26)& (0+255),2,b	;volatile
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;ikb.c: 423: key[1].repp.breakTime= (uint16_t)500.0/20;
  4448  001A8C  0E00               	movlw	0
  4449  001A8E  6F7D               	movwf	(_key+29)& (0+255),b	;volatile
  4450  001A90  0E19               	movlw	25
  4451  001A92  6F7C               	movwf	(_key+28)& (0+255),b	;volatile
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;ikb.c: 424: key[1].repp.period = (uint16_t)300.0/20;
  4455  001A94  0E00               	movlw	0
  4456  001A96  6F7F               	movwf	(_key+31)& (0+255),b	;volatile
  4457  001A98  0E0F               	movlw	15
  4458  001A9A  6F7E               	movwf	(_key+30)& (0+255),b	;volatile
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;ikb.c: 427: key[2].bf.OnKeyPressed = 0;
  4462  001A9C  938A               	bcf	(_key+42)& (0+255),1,b	;volatile
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;ikb.c: 428: key[2].bf.OnKeyReleased = 0;
  4466  001A9E  978A               	bcf	(_key+42)& (0+255),3,b	;volatile
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;ikb.c: 429: key[2].bf.AtTimeExpired = 0;
  4470  001AA0  9B8A               	bcf	(_key+42)& (0+255),5,b	;volatile
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;ikb.c: 430: key[2].bf.AtTimeExpired2 = 1;
  4474  001AA2  8D8A               	bsf	(_key+42)& (0+255),6,b	;volatile
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;ikb.c: 431: key[2].bf.whilePressing = 0;
  4478  001AA4  998A               	bcf	(_key+42)& (0+255),4,b	;volatile
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;ikb.c: 432: key[2].num_group_x = 0;
  4482  001AA6  0E00               	movlw	0
  4483  001AA8  6F89               	movwf	(_key+41)& (0+255),b	;volatile
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;ikb.c: 434: key[2].bf.Reptt = 0;
  4487  001AAA  958A               	bcf	(_key+42)& (0+255),2,b	;volatile
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;ikb.c: 435: key[2].repp.breakTime= (uint16_t)300.0/20;
  4491  001AAC  0E00               	movlw	0
  4492  001AAE  6F8D               	movwf	(_key+45)& (0+255),b	;volatile
  4493  001AB0  0E0F               	movlw	15
  4494  001AB2  6F8C               	movwf	(_key+44)& (0+255),b	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;ikb.c: 436: key[2].repp.period = (uint16_t)800.0/20;
  4498  001AB4  0E00               	movlw	0
  4499  001AB6  6F8F               	movwf	(_key+47)& (0+255),b	;volatile
  4500  001AB8  0E28               	movlw	40
  4501  001ABA  6F8E               	movwf	(_key+46)& (0+255),b	;volatile
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;ikb.c: 439: key[3].bf.OnKeyPressed = 0;
  4505  001ABC  939A               	bcf	(_key+58)& (0+255),1,b	;volatile
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;ikb.c: 440: key[3].bf.OnKeyReleased = 0;
  4509  001ABE  979A               	bcf	(_key+58)& (0+255),3,b	;volatile
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;ikb.c: 441: key[3].bf.AtTimeExpired = 0;
  4513  001AC0  9B9A               	bcf	(_key+58)& (0+255),5,b	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;ikb.c: 442: key[3].bf.AtTimeExpired2 = 1;
  4517  001AC2  8D9A               	bsf	(_key+58)& (0+255),6,b	;volatile
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;ikb.c: 443: key[3].bf.whilePressing = 0;
  4521  001AC4  999A               	bcf	(_key+58)& (0+255),4,b	;volatile
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;ikb.c: 444: key[3].num_group_x = 0;
  4525  001AC6  0E00               	movlw	0
  4526  001AC8  6F99               	movwf	(_key+57)& (0+255),b	;volatile
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;ikb.c: 446: key[3].bf.Reptt = 0;
  4530  001ACA  959A               	bcf	(_key+58)& (0+255),2,b	;volatile
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;ikb.c: 447: key[3].repp.breakTime= (uint16_t)300.0/20;
  4534  001ACC  0E00               	movlw	0
  4535  001ACE  6F9D               	movwf	(_key+61)& (0+255),b	;volatile
  4536  001AD0  0E0F               	movlw	15
  4537  001AD2  6F9C               	movwf	(_key+60)& (0+255),b	;volatile
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;ikb.c: 448: key[3].repp.period = (uint16_t)800.0/20;
  4541  001AD4  0E00               	movlw	0
  4542  001AD6  6F9F               	movwf	(_key+63)& (0+255),b	;volatile
  4543  001AD8  0E28               	movlw	40
  4544  001ADA  6F9E               	movwf	(_key+62)& (0+255),b	;volatile
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;ikb.c: 452: key[4].bf.OnKeyPressed = 0;
  4548  001ADC  93AA               	bcf	(_key+74)& (0+255),1,b	;volatile
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;ikb.c: 453: key[4].bf.OnKeyReleased = 0;
  4552  001ADE  97AA               	bcf	(_key+74)& (0+255),3,b	;volatile
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;ikb.c: 454: key[4].bf.AtTimeExpired = 0;
  4556  001AE0  9BAA               	bcf	(_key+74)& (0+255),5,b	;volatile
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;ikb.c: 455: key[4].bf.AtTimeExpired2 = 0;
  4560  001AE2  9DAA               	bcf	(_key+74)& (0+255),6,b	;volatile
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;ikb.c: 456: key[4].bf.whilePressing = 1;
  4564  001AE4  89AA               	bsf	(_key+74)& (0+255),4,b	;volatile
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;ikb.c: 457: key[4].num_group_x = 0;
  4568  001AE6  0E00               	movlw	0
  4569  001AE8  6FA9               	movwf	(_key+73)& (0+255),b	;volatile
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;ikb.c: 459: key[4].bf.Reptt = 0;
  4573  001AEA  95AA               	bcf	(_key+74)& (0+255),2,b	;volatile
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;ikb.c: 460: key[4].repp.breakTime= (uint16_t)300.0/20;
  4577  001AEC  0E00               	movlw	0
  4578  001AEE  6FAD               	movwf	(_key+77)& (0+255),b	;volatile
  4579  001AF0  0E0F               	movlw	15
  4580  001AF2  6FAC               	movwf	(_key+76)& (0+255),b	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;ikb.c: 461: key[4].repp.period = (uint16_t)800.0/20;
  4584  001AF4  0E00               	movlw	0
  4585  001AF6  6FAF               	movwf	(_key+79)& (0+255),b	;volatile
  4586  001AF8  0E28               	movlw	40
  4587  001AFA  6FAE               	movwf	(_key+78)& (0+255),b	;volatile
  4588                           
  4589                           ; BSR set to: 0
  4590  001AFC  0012               	return		;funcret
  4591  001AFE                     __end_of_ikb_init:
  4592                           	opt callstack 0
  4593                           
  4594 ;; *************** function _disp7s_job *****************
  4595 ;; Defined at:
  4596 ;;		line 128 in file "display.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  pq              1   20[COMRAM] char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0
  4611 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4612 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4613 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4614 ;;Total ram usage:        3 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    7
  4617 ;; This function calls:
  4618 ;;		_disp7s_mux0_off
  4619 ;;		_disp7s_mux0_on
  4620 ;;		_disp7s_mux1_off
  4621 ;;		_disp7s_mux1_on
  4622 ;;		_disp7s_mux2_off
  4623 ;;		_disp7s_mux2_on
  4624 ;;		_disp7s_mux3_off
  4625 ;;		_disp7s_mux3_on
  4626 ;;		_disp7s_mux4_off
  4627 ;;		_disp7s_mux4_on
  4628 ;;		_disp7s_mux_Q
  4629 ;; This function is called by:
  4630 ;;		_main
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text24
  4635  001FE0                     __ptext24:
  4636                           	opt callstack 0
  4637  001FE0                     _disp7s_job:
  4638                           	opt callstack 23
  4639                           
  4640                           ;display.c: 134: pq= q-1;
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;incstack = 0
  4644  001FE0  044E               	decf	disp7s_job@q,w,c
  4645  001FE2  6E15               	movwf	disp7s_job@pq,c
  4646                           
  4647                           ;display.c: 135: if (pq<0)
  4648  001FE4  AE15               	btfss	disp7s_job@pq,7,c
  4649  001FE6  D002               	goto	l5936
  4650                           
  4651                           ;display.c: 136: {pq=(2 + 3)-1;}
  4652  001FE8  0E04               	movlw	4
  4653  001FEA  6E15               	movwf	disp7s_job@pq,c
  4654  001FEC                     l5936:
  4655                           
  4656                           ;display.c: 137: disp7s_mux[pq].Qonoff[0]();
  4657  001FEC  5015               	movf	disp7s_job@pq,w,c
  4658  001FEE  0D04               	mullw	4
  4659  001FF0  50F3               	movf	prodl,w,c
  4660  001FF2  0FCD               	addlw	low _disp7s_mux
  4661  001FF4  6ED9               	movwf	fsr2l,c
  4662  001FF6  6ADA               	clrf	fsr2h,c
  4663  001FF8  D801               	call	u6738
  4664  001FFA  D00A               	goto	u6739
  4665  001FFC                     u6738:
  4666  001FFC  0005               	push	
  4667  001FFE  6EFA               	movwf	pclath,c
  4668  002000  50DE               	movf	postinc2,w,c
  4669  002002  6EFD               	movwf	tosl,c
  4670  002004  50DE               	movf	postinc2,w,c
  4671  002006  6EFE               	movwf	tosh,c
  4672  002008  50F8               	movf	tblptru,w,c
  4673  00200A  6EFF               	movwf	tosu,c
  4674  00200C  50FA               	movf	pclath,w,c
  4675  00200E  0012               	return		;indir
  4676  002010                     u6739:
  4677                           
  4678                           ;display.c: 139: if (q < 3)
  4679  002010  504E               	movf	disp7s_job@q,w,c
  4680  002012  0A80               	xorlw	128
  4681  002014  0F7D               	addlw	-131
  4682  002016  B0D8               	btfsc	status,0,c
  4683  002018  D007               	goto	l5942
  4684                           
  4685                           ;display.c: 140: {LATB = pulsonic.disp7s.qty[q];}
  4686  00201A  0E3C               	movlw	low (_pulsonic+60)
  4687  00201C  244E               	addwf	disp7s_job@q,w,c
  4688  00201E  6ED9               	movwf	fsr2l,c
  4689  002020  6ADA               	clrf	fsr2h,c
  4690  002022  0E01               	movlw	high (_pulsonic+60)
  4691  002024  22DA               	addwfc	fsr2h,f,c
  4692  002026  D00B               	goto	L5
  4693  002028                     l5942:
  4694                           
  4695                           ;display.c: 141: else;display.c: 142: {LATB = pulsonic.disp7s.mode[q-3];}
  4696  002028  C04E  F013         	movff	disp7s_job@q,??_disp7s_job
  4697  00202C  6A14               	clrf	(??_disp7s_job+1)& (0+255),c
  4698  00202E  BE13               	btfsc	??_disp7s_job& (0+255),7,c
  4699  002030  0614               	decf	(??_disp7s_job+1)& (0+255),f,c
  4700  002032  0E3C               	movlw	low (_pulsonic+60)
  4701  002034  2413               	addwf	??_disp7s_job,w,c
  4702  002036  6ED9               	movwf	fsr2l,c
  4703  002038  0E01               	movlw	high (_pulsonic+60)
  4704  00203A  2014               	addwfc	??_disp7s_job+1,w,c
  4705  00203C  6EDA               	movwf	fsr2h,c
  4706  00203E                     L5:
  4707  00203E  50DF               	movf	indf2,w,c
  4708  002040  6E8A               	movwf	3978,c	;volatile
  4709                           
  4710                           ;display.c: 144: disp7s_mux_Q(q);
  4711  002042  504E               	movf	disp7s_job@q,w,c
  4712  002044  EC3F  F00E         	call	_disp7s_mux_Q
  4713                           
  4714                           ;display.c: 146: if (++q == (2 + 3))
  4715  002048  2A4E               	incf	disp7s_job@q,f,c
  4716  00204A  0E05               	movlw	5
  4717  00204C  184E               	xorwf	disp7s_job@q,w,c
  4718  00204E  A4D8               	btfss	status,2,c
  4719  002050  0012               	return	
  4720                           
  4721                           ;display.c: 147: {q=0x0;}
  4722  002052  0E00               	movlw	0
  4723  002054  6E4E               	movwf	disp7s_job@q,c
  4724  002056  0012               	return		;funcret
  4725  002058                     __end_of_disp7s_job:
  4726                           	opt callstack 0
  4727                           
  4728 ;; *************** function _disp7s_mux_Q *****************
  4729 ;; Defined at:
  4730 ;;		line 97 in file "display.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  q               1    wreg     char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  q               1   16[COMRAM] char 
  4735 ;;  i               1   17[COMRAM] char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4745 ;;      Params:         0       0       0       0       0       0       0       0       0
  4746 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4747 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4748 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4749 ;;Total ram usage:        8 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    6
  4752 ;; This function calls:
  4753 ;;		_disp7s_mux0_off
  4754 ;;		_disp7s_mux0_on
  4755 ;;		_disp7s_mux1_off
  4756 ;;		_disp7s_mux1_on
  4757 ;;		_disp7s_mux2_off
  4758 ;;		_disp7s_mux2_on
  4759 ;;		_disp7s_mux3_off
  4760 ;;		_disp7s_mux3_on
  4761 ;;		_disp7s_mux4_off
  4762 ;;		_disp7s_mux4_on
  4763 ;; This function is called by:
  4764 ;;		_disp7s_job
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text25
  4769  001C7E                     __ptext25:
  4770                           	opt callstack 0
  4771  001C7E                     _disp7s_mux_Q:
  4772                           	opt callstack 23
  4773                           
  4774                           ;incstack = 0
  4775                           ;disp7s_mux_Q@q stored from wreg
  4776  001C7E  6E11               	movwf	disp7s_mux_Q@q,c
  4777                           
  4778                           ;display.c: 99: int8_t i;;display.c: 100: for (i=0; i< (2 + 3); i++)
  4779  001C80  0E00               	movlw	0
  4780  001C82  6E12               	movwf	disp7s_mux_Q@i,c
  4781  001C84                     l5564:
  4782                           
  4783                           ;display.c: 101: {;display.c: 102: if ( (1<<i) & (1<<q) )
  4784  001C84  C011  F00B         	movff	disp7s_mux_Q@q,??_disp7s_mux_Q
  4785  001C88  0E01               	movlw	1
  4786  001C8A  6E0C               	movwf	(??_disp7s_mux_Q+1)& (0+255),c
  4787  001C8C  0E00               	movlw	0
  4788  001C8E  6E0D               	movwf	(??_disp7s_mux_Q+2)& (0+255),c
  4789  001C90  2A0B               	incf	??_disp7s_mux_Q,f,c
  4790  001C92  D003               	goto	u6284
  4791  001C94                     u6285:
  4792  001C94  90D8               	bcf	status,0,c
  4793  001C96  360C               	rlcf	??_disp7s_mux_Q+1,f,c
  4794  001C98  360D               	rlcf	??_disp7s_mux_Q+2,f,c
  4795  001C9A                     u6284:
  4796  001C9A  2E0B               	decfsz	??_disp7s_mux_Q,f,c
  4797  001C9C  D7FB               	goto	u6285
  4798  001C9E  C012  F00E         	movff	disp7s_mux_Q@i,??_disp7s_mux_Q+3
  4799  001CA2  0E01               	movlw	1
  4800  001CA4  6E0F               	movwf	(??_disp7s_mux_Q+4)& (0+255),c
  4801  001CA6  0E00               	movlw	0
  4802  001CA8  6E10               	movwf	(??_disp7s_mux_Q+5)& (0+255),c
  4803  001CAA  2A0E               	incf	??_disp7s_mux_Q+3,f,c
  4804  001CAC  D003               	goto	u6294
  4805  001CAE                     u6295:
  4806  001CAE  90D8               	bcf	status,0,c
  4807  001CB0  360F               	rlcf	??_disp7s_mux_Q+4,f,c
  4808  001CB2  3610               	rlcf	??_disp7s_mux_Q+5,f,c
  4809  001CB4                     u6294:
  4810  001CB4  2E0E               	decfsz	??_disp7s_mux_Q+3,f,c
  4811  001CB6  D7FB               	goto	u6295
  4812  001CB8  500C               	movf	??_disp7s_mux_Q+1,w,c
  4813  001CBA  160F               	andwf	??_disp7s_mux_Q+4,f,c
  4814  001CBC  500D               	movf	??_disp7s_mux_Q+2,w,c
  4815  001CBE  1610               	andwf	??_disp7s_mux_Q+5,f,c
  4816  001CC0  500F               	movf	??_disp7s_mux_Q+4,w,c
  4817  001CC2  1010               	iorwf	??_disp7s_mux_Q+5,w,c
  4818  001CC4  B4D8               	btfsc	status,2,c
  4819  001CC6  D012               	goto	l5568
  4820                           
  4821                           ;display.c: 103: disp7s_mux[i].Qonoff[1]();
  4822  001CC8  5012               	movf	disp7s_mux_Q@i,w,c
  4823  001CCA  0D04               	mullw	4
  4824  001CCC  50F3               	movf	prodl,w,c
  4825  001CCE  0FCF               	addlw	low (_disp7s_mux+2)
  4826  001CD0  6ED9               	movwf	fsr2l,c
  4827  001CD2  6ADA               	clrf	fsr2h,c
  4828  001CD4  D801               	call	u6318
  4829  001CD6  D01C               	goto	u6329
  4830  001CD8                     u6318:
  4831  001CD8  0005               	push	
  4832  001CDA  6EFA               	movwf	pclath,c
  4833  001CDC  50DE               	movf	postinc2,w,c
  4834  001CDE  6EFD               	movwf	tosl,c
  4835  001CE0  50DE               	movf	postinc2,w,c
  4836  001CE2  6EFE               	movwf	tosh,c
  4837  001CE4  50F8               	movf	tblptru,w,c
  4838  001CE6  6EFF               	movwf	tosu,c
  4839  001CE8  50FA               	movf	pclath,w,c
  4840  001CEA  0012               	return		;indir
  4841  001CEC                     l5568:
  4842                           
  4843                           ;display.c: 104: else;display.c: 105: disp7s_mux[i].Qonoff[0]();
  4844  001CEC  5012               	movf	disp7s_mux_Q@i,w,c
  4845  001CEE  0D04               	mullw	4
  4846  001CF0  50F3               	movf	prodl,w,c
  4847  001CF2  0FCD               	addlw	low _disp7s_mux
  4848  001CF4  6ED9               	movwf	fsr2l,c
  4849  001CF6  6ADA               	clrf	fsr2h,c
  4850  001CF8  D801               	call	u6328
  4851  001CFA  D00A               	goto	u6329
  4852  001CFC                     u6328:
  4853  001CFC  0005               	push	
  4854  001CFE  6EFA               	movwf	pclath,c
  4855  001D00  50DE               	movf	postinc2,w,c
  4856  001D02  6EFD               	movwf	tosl,c
  4857  001D04  50DE               	movf	postinc2,w,c
  4858  001D06  6EFE               	movwf	tosh,c
  4859  001D08  50F8               	movf	tblptru,w,c
  4860  001D0A  6EFF               	movwf	tosu,c
  4861  001D0C  50FA               	movf	pclath,w,c
  4862  001D0E  0012               	return		;indir
  4863  001D10                     u6329:
  4864  001D10  2A12               	incf	disp7s_mux_Q@i,f,c
  4865  001D12  5012               	movf	disp7s_mux_Q@i,w,c
  4866  001D14  0A80               	xorlw	128
  4867  001D16  0F7B               	addlw	-133
  4868  001D18  B0D8               	btfsc	status,0,c
  4869  001D1A  0012               	return	
  4870  001D1C  D7B3               	goto	l5564
  4871  001D1E                     __end_of_disp7s_mux_Q:
  4872                           	opt callstack 0
  4873                           
  4874 ;; *************** function _disp7s_init *****************
  4875 ;; Defined at:
  4876 ;;		line 112 in file "display.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  i               1   11[COMRAM] char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 3F/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0
  4891 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4893 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4894 ;;Total ram usage:        1 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    7
  4897 ;; This function calls:
  4898 ;;		_disp7s_mux_init
  4899 ;; This function is called by:
  4900 ;;		_main
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text26
  4905  00233E                     __ptext26:
  4906                           	opt callstack 0
  4907  00233E                     _disp7s_init:
  4908                           	opt callstack 23
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;display.c: 114: int8_t i;;display.c: 115: for (i=0; i<2; i++)
  4912                           
  4913                           ;incstack = 0
  4914  00233E  0E00               	movlw	0
  4915  002340  6E0C               	movwf	disp7s_init@i,c
  4916  002342                     l5884:
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;display.c: 116: {pulsonic.disp7s.mode[i] = DISP7S_CHARS[OFF];}
  4920  002342  0E0F               	movlw	low _DISP7S_CHARS
  4921  002344  6EF6               	movwf	tblptrl,c
  4922  002346                     	if	1	;There is more than 1 active tblptr byte
  4923  002346  0E08               	movlw	high _DISP7S_CHARS
  4924  002348  6EF7               	movwf	tblptrh,c
  4925  00234A                     	endif
  4926  00234A                     	if	0	;There are less than 3 active tblptr bytes
  4927  00234A                     	endif
  4928  00234A  0E3F               	movlw	low (_pulsonic+63)
  4929  00234C  240C               	addwf	disp7s_init@i,w,c
  4930  00234E  6ED9               	movwf	fsr2l,c
  4931  002350  6ADA               	clrf	fsr2h,c
  4932  002352  0E01               	movlw	high (_pulsonic+63)
  4933  002354  22DA               	addwfc	fsr2h,f,c
  4934  002356  0008               	tblrd		*
  4935  002358  CFF5 FFDF          	movff	tablat,indf2
  4936                           
  4937                           ; BSR set to: 0
  4938  00235C  2A0C               	incf	disp7s_init@i,f,c
  4939                           
  4940                           ; BSR set to: 0
  4941  00235E  500C               	movf	disp7s_init@i,w,c
  4942  002360  0A80               	xorlw	128
  4943  002362  0F7E               	addlw	-130
  4944  002364  A0D8               	btfss	status,0,c
  4945  002366  D7ED               	goto	l5884
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;display.c: 118: for (i=0; i<3; i++)
  4949  002368  0E00               	movlw	0
  4950  00236A  6E0C               	movwf	disp7s_init@i,c
  4951  00236C                     l5896:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;display.c: 119: {pulsonic.disp7s.qty[i] = DISP7S_CHARS[OFF];}
  4955  00236C  0E0F               	movlw	low _DISP7S_CHARS
  4956  00236E  6EF6               	movwf	tblptrl,c
  4957  002370                     	if	1	;There is more than 1 active tblptr byte
  4958  002370  0E08               	movlw	high _DISP7S_CHARS
  4959  002372  6EF7               	movwf	tblptrh,c
  4960  002374                     	endif
  4961  002374                     	if	0	;There are less than 3 active tblptr bytes
  4962  002374                     	endif
  4963  002374  0E3C               	movlw	low (_pulsonic+60)
  4964  002376  240C               	addwf	disp7s_init@i,w,c
  4965  002378  6ED9               	movwf	fsr2l,c
  4966  00237A  6ADA               	clrf	fsr2h,c
  4967  00237C  0E01               	movlw	high (_pulsonic+60)
  4968  00237E  22DA               	addwfc	fsr2h,f,c
  4969  002380  0008               	tblrd		*
  4970  002382  CFF5 FFDF          	movff	tablat,indf2
  4971                           
  4972                           ; BSR set to: 0
  4973  002386  2A0C               	incf	disp7s_init@i,f,c
  4974                           
  4975                           ; BSR set to: 0
  4976  002388  500C               	movf	disp7s_init@i,w,c
  4977  00238A  0A80               	xorlw	128
  4978  00238C  0F7D               	addlw	-131
  4979  00238E  A0D8               	btfss	status,0,c
  4980  002390  D7ED               	goto	l5896
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;display.c: 121: TRISB = 0x00;
  4984  002392  0E00               	movlw	0
  4985  002394  6E93               	movwf	3987,c	;volatile
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;display.c: 122: disp7s_mux_init();
  4989  002396  ECF1  F012         	call	_disp7s_mux_init	;wreg free
  4990  00239A  0012               	return		;funcret
  4991  00239C                     __end_of_disp7s_init:
  4992                           	opt callstack 0
  4993                           
  4994 ;; *************** function _disp7s_mux_init *****************
  4995 ;; Defined at:
  4996 ;;		line 83 in file "display.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  i               1   10[COMRAM] char 
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 3F/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5010 ;;      Params:         0       0       0       0       0       0       0       0       0
  5011 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5013 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5014 ;;Total ram usage:        1 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    6
  5017 ;; This function calls:
  5018 ;;		_disp7s_mux0_off
  5019 ;;		_disp7s_mux0_on
  5020 ;;		_disp7s_mux1_off
  5021 ;;		_disp7s_mux1_on
  5022 ;;		_disp7s_mux2_off
  5023 ;;		_disp7s_mux2_on
  5024 ;;		_disp7s_mux3_off
  5025 ;;		_disp7s_mux3_on
  5026 ;;		_disp7s_mux4_off
  5027 ;;		_disp7s_mux4_on
  5028 ;; This function is called by:
  5029 ;;		_disp7s_init
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text27
  5034  0025E2                     __ptext27:
  5035                           	opt callstack 0
  5036  0025E2                     _disp7s_mux_init:
  5037                           	opt callstack 23
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;display.c: 85: int8_t i;;display.c: 86: for (i=0; i< (2 + 3); i++)
  5041                           
  5042                           ;incstack = 0
  5043  0025E2  0E00               	movlw	0
  5044  0025E4  6E0B               	movwf	disp7s_mux_init@i,c
  5045  0025E6                     l5550:
  5046                           
  5047                           ;display.c: 87: {;display.c: 88: disp7s_mux[i].Qonoff[0]();
  5048  0025E6  500B               	movf	disp7s_mux_init@i,w,c
  5049  0025E8  0D04               	mullw	4
  5050  0025EA  50F3               	movf	prodl,w,c
  5051  0025EC  0FCD               	addlw	low _disp7s_mux
  5052  0025EE  6ED9               	movwf	fsr2l,c
  5053  0025F0  6ADA               	clrf	fsr2h,c
  5054  0025F2  D801               	call	u6268
  5055  0025F4  D00A               	goto	u6269
  5056  0025F6                     u6268:
  5057  0025F6  0005               	push	
  5058  0025F8  6EFA               	movwf	pclath,c
  5059  0025FA  50DE               	movf	postinc2,w,c
  5060  0025FC  6EFD               	movwf	tosl,c
  5061  0025FE  50DE               	movf	postinc2,w,c
  5062  002600  6EFE               	movwf	tosh,c
  5063  002602  50F8               	movf	tblptru,w,c
  5064  002604  6EFF               	movwf	tosu,c
  5065  002606  50FA               	movf	pclath,w,c
  5066  002608  0012               	return		;indir
  5067  00260A                     u6269:
  5068  00260A  2A0B               	incf	disp7s_mux_init@i,f,c
  5069  00260C  500B               	movf	disp7s_mux_init@i,w,c
  5070  00260E  0A80               	xorlw	128
  5071  002610  0F7B               	addlw	-133
  5072  002612  A0D8               	btfss	status,0,c
  5073  002614  D7E8               	goto	l5550
  5074  002616  9892               	bcf	3986,4,c	;volatile
  5075                           
  5076                           ;display.c: 91: do{TRISA &= ~(1<<3);}while(0);
  5077  002618  9692               	bcf	3986,3,c	;volatile
  5078                           
  5079                           ;display.c: 92: do{TRISA &= ~(1<<2);}while(0);
  5080  00261A  9492               	bcf	3986,2,c	;volatile
  5081                           
  5082                           ;display.c: 93: do{TRISA &= ~(1<<1);}while(0);
  5083  00261C  9292               	bcf	3986,1,c	;volatile
  5084                           
  5085                           ;display.c: 94: do{TRISA &= ~(1<<0);}while(0);
  5086  00261E  9092               	bcf	3986,0,c	;volatile
  5087  002620  0012               	return		;funcret
  5088  002622                     __end_of_disp7s_mux_init:
  5089                           	opt callstack 0
  5090                           
  5091 ;; *************** function _disp7s_mux4_off *****************
  5092 ;; Defined at:
  5093 ;;		line 41 in file "display.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		status,2, status,0
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5107 ;;      Params:         0       0       0       0       0       0       0       0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    5
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_disp7s_mux_init
  5118 ;;		_disp7s_mux_Q
  5119 ;;		_disp7s_job
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text28
  5124  002A30                     __ptext28:
  5125                           	opt callstack 0
  5126  002A30                     _disp7s_mux4_off:
  5127                           	opt callstack 23
  5128                           
  5129                           ;incstack = 0
  5130                           ;display.c: 43: do{LATA |= 1<<0;}while(0);
  5131  002A30  8089               	bsf	3977,0,c	;volatile
  5132  002A32  0012               	return		;funcret
  5133  002A34                     __end_of_disp7s_mux4_off:
  5134                           	opt callstack 0
  5135                           
  5136 ;; *************** function _disp7s_mux3_on *****************
  5137 ;; Defined at:
  5138 ;;		line 36 in file "display.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		status,2, status,0
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5152 ;;      Params:         0       0       0       0       0       0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5155 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    5
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_disp7s_mux_init
  5163 ;;		_disp7s_mux_Q
  5164 ;;		_disp7s_job
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text29
  5169  002A34                     __ptext29:
  5170                           	opt callstack 0
  5171  002A34                     _disp7s_mux3_on:
  5172                           	opt callstack 23
  5173                           
  5174                           ;incstack = 0
  5175                           ;display.c: 38: do{LATA &= ~(1<<1);}while(0);
  5176  002A34  9289               	bcf	3977,1,c	;volatile
  5177  002A36  0012               	return		;funcret
  5178  002A38                     __end_of_disp7s_mux3_on:
  5179                           	opt callstack 0
  5180                           
  5181 ;; *************** function _disp7s_mux3_off *****************
  5182 ;; Defined at:
  5183 ;;		line 32 in file "display.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		status,2, status,0
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    5
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_disp7s_mux_init
  5208 ;;		_disp7s_mux_Q
  5209 ;;		_disp7s_job
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text30
  5214  002A38                     __ptext30:
  5215                           	opt callstack 0
  5216  002A38                     _disp7s_mux3_off:
  5217                           	opt callstack 23
  5218                           
  5219                           ;incstack = 0
  5220                           ;display.c: 34: do{LATA |= 1<<1;}while(0);
  5221  002A38  8289               	bsf	3977,1,c	;volatile
  5222  002A3A  0012               	return		;funcret
  5223  002A3C                     __end_of_disp7s_mux3_off:
  5224                           	opt callstack 0
  5225                           
  5226 ;; *************** function _disp7s_mux2_on *****************
  5227 ;; Defined at:
  5228 ;;		line 27 in file "display.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      void 
  5235 ;; Registers used:
  5236 ;;		status,2, status,0
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5242 ;;      Params:         0       0       0       0       0       0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5245 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    5
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_disp7s_mux_init
  5253 ;;		_disp7s_mux_Q
  5254 ;;		_disp7s_job
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text31
  5259  002A3C                     __ptext31:
  5260                           	opt callstack 0
  5261  002A3C                     _disp7s_mux2_on:
  5262                           	opt callstack 23
  5263                           
  5264                           ;incstack = 0
  5265                           ;display.c: 29: do{LATA &= ~(1<<2);}while(0);
  5266  002A3C  9489               	bcf	3977,2,c	;volatile
  5267  002A3E  0012               	return		;funcret
  5268  002A40                     __end_of_disp7s_mux2_on:
  5269                           	opt callstack 0
  5270                           
  5271 ;; *************** function _disp7s_mux2_off *****************
  5272 ;; Defined at:
  5273 ;;		line 23 in file "display.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    5
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_disp7s_mux_init
  5298 ;;		_disp7s_mux_Q
  5299 ;;		_disp7s_job
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text32
  5304  002A40                     __ptext32:
  5305                           	opt callstack 0
  5306  002A40                     _disp7s_mux2_off:
  5307                           	opt callstack 23
  5308                           
  5309                           ;incstack = 0
  5310                           ;display.c: 25: do{LATA |= 1<<2;}while(0);
  5311  002A40  8489               	bsf	3977,2,c	;volatile
  5312  002A42  0012               	return		;funcret
  5313  002A44                     __end_of_disp7s_mux2_off:
  5314                           	opt callstack 0
  5315                           
  5316 ;; *************** function _disp7s_mux1_on *****************
  5317 ;; Defined at:
  5318 ;;		line 18 in file "display.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5332 ;;      Params:         0       0       0       0       0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5335 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5336 ;;Total ram usage:        0 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    5
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_disp7s_mux_init
  5343 ;;		_disp7s_mux_Q
  5344 ;;		_disp7s_job
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text33
  5349  002A44                     __ptext33:
  5350                           	opt callstack 0
  5351  002A44                     _disp7s_mux1_on:
  5352                           	opt callstack 23
  5353                           
  5354                           ;incstack = 0
  5355                           ;display.c: 20: do{LATA &= ~(1<<3);}while(0);
  5356  002A44  9689               	bcf	3977,3,c	;volatile
  5357  002A46  0012               	return		;funcret
  5358  002A48                     __end_of_disp7s_mux1_on:
  5359                           	opt callstack 0
  5360                           
  5361 ;; *************** function _disp7s_mux1_off *****************
  5362 ;; Defined at:
  5363 ;;		line 14 in file "display.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		status,2, status,0
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    5
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_disp7s_mux_init
  5388 ;;		_disp7s_mux_Q
  5389 ;;		_disp7s_job
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text34
  5394  002A48                     __ptext34:
  5395                           	opt callstack 0
  5396  002A48                     _disp7s_mux1_off:
  5397                           	opt callstack 23
  5398                           
  5399                           ;incstack = 0
  5400                           ;display.c: 16: do{LATA |= 1<<3;}while(0);
  5401  002A48  8689               	bsf	3977,3,c	;volatile
  5402  002A4A  0012               	return		;funcret
  5403  002A4C                     __end_of_disp7s_mux1_off:
  5404                           	opt callstack 0
  5405                           
  5406 ;; *************** function _disp7s_mux0_on *****************
  5407 ;; Defined at:
  5408 ;;		line 9 in file "display.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		status,2, status,0
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    5
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_disp7s_mux_init
  5433 ;;		_disp7s_mux_Q
  5434 ;;		_disp7s_job
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text35
  5439  002A4C                     __ptext35:
  5440                           	opt callstack 0
  5441  002A4C                     _disp7s_mux0_on:
  5442                           	opt callstack 23
  5443                           
  5444                           ;incstack = 0
  5445                           ;display.c: 11: do{LATA &= ~(1<<4);}while(0);
  5446  002A4C  9889               	bcf	3977,4,c	;volatile
  5447  002A4E  0012               	return		;funcret
  5448  002A50                     __end_of_disp7s_mux0_on:
  5449                           	opt callstack 0
  5450                           
  5451 ;; *************** function _disp7s_mux0_off *****************
  5452 ;; Defined at:
  5453 ;;		line 5 in file "display.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		status,2, status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    5
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_disp7s_mux_init
  5478 ;;		_disp7s_mux_Q
  5479 ;;		_disp7s_job
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text36
  5484  002A50                     __ptext36:
  5485                           	opt callstack 0
  5486  002A50                     _disp7s_mux0_off:
  5487                           	opt callstack 23
  5488                           
  5489                           ;incstack = 0
  5490                           ;display.c: 7: do{LATA |= 1<<4;}while(0);
  5491  002A50  8889               	bsf	3977,4,c	;volatile
  5492  002A52  0012               	return		;funcret
  5493  002A54                     __end_of_disp7s_mux0_off:
  5494                           	opt callstack 0
  5495                           
  5496 ;; *************** function _disp7s_mux4_on *****************
  5497 ;; Defined at:
  5498 ;;		line 45 in file "display.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		status,2, status,0
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5515 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    5
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_disp7s_mux_init
  5523 ;;		_disp7s_mux_Q
  5524 ;;		_disp7s_job
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text37
  5529  002A54                     __ptext37:
  5530                           	opt callstack 0
  5531  002A54                     _disp7s_mux4_on:
  5532                           	opt callstack 23
  5533                           
  5534                           ;incstack = 0
  5535                           ;display.c: 47: do{LATA &= ~(1<<0);}while(0);
  5536  002A54  9089               	bcf	3977,0,c	;volatile
  5537  002A56  0012               	return		;funcret
  5538  002A58                     __end_of_disp7s_mux4_on:
  5539                           	opt callstack 0
  5540                           
  5541 ;; *************** function _configMode_job *****************
  5542 ;; Defined at:
  5543 ;;		line 26 in file "configMode.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;		None
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  cod_ret         1   63[COMRAM] char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      char 
  5550 ;; Registers used:
  5551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 3F/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5557 ;;      Params:         0       0       0       0       0       0       0       0       0
  5558 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5560 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5561 ;;Total ram usage:        1 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:   11
  5564 ;; This function calls:
  5565 ;;		_configMode_disp
  5566 ;;		_configMode_kb
  5567 ;; This function is called by:
  5568 ;;		_main
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text38
  5573  002794                     __ptext38:
  5574                           	opt callstack 0
  5575  002794                     _configMode_job:
  5576                           	opt callstack 19
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;configMode.c: 28: int8_t cod_ret = 0;
  5580                           
  5581                           ;incstack = 0
  5582  002794  0E00               	movlw	0
  5583  002796  6E40               	movwf	configMode_job@cod_ret,c
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;configMode.c: 30: if (smain.focus.kb == FOCUS_KB_CONFIGMODE)
  5587  002798  0E03               	movlw	3
  5588  00279A  1848               	xorwf	_smain+1,w,c	;volatile
  5589  00279C  A4D8               	btfss	status,2,c
  5590  00279E  D003               	goto	l6028
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;configMode.c: 31: {;configMode.c: 32: cod_ret = configMode_kb();
  5594  0027A0  EC6D  F007         	call	_configMode_kb	;wreg free
  5595  0027A4  6E40               	movwf	configMode_job@cod_ret,c
  5596  0027A6                     l6028:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;configMode.c: 33: };configMode.c: 35: if ( configMode.disp7s_accessReq == 1)
  5600  0027A6  044A               	decf	_configMode,w,c
  5601  0027A8  A4D8               	btfss	status,2,c
  5602  0027AA  D009               	goto	l6036
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;configMode.c: 36: {;configMode.c: 37: if (disp_owner == DISPOWNER_CONFIGMODE)
  5606  0027AC  0E02               	movlw	2
  5607  0027AE  1851               	xorwf	_disp_owner,w,c
  5608  0027B0  A4D8               	btfss	status,2,c
  5609  0027B2  D003               	goto	l6034
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;configMode.c: 38: {;configMode.c: 39: configMode_disp(configMode.numRegistro);
  5613  0027B4  504B               	movf	_configMode+1,w,c
  5614  0027B6  EC66  F010         	call	_configMode_disp
  5615  0027BA                     l6034:
  5616                           
  5617                           ;configMode.c: 40: };configMode.c: 41: configMode.disp7s_accessReq = 0;
  5618  0027BA  0E00               	movlw	0
  5619  0027BC  6E4A               	movwf	_configMode,c
  5620  0027BE                     l6036:
  5621                           
  5622                           ;configMode.c: 42: };configMode.c: 44: return cod_ret;
  5623  0027BE  5040               	movf	configMode_job@cod_ret,w,c
  5624  0027C0  0012               	return		;funcret
  5625  0027C2                     __end_of_configMode_job:
  5626                           	opt callstack 0
  5627                           
  5628 ;; *************** function _configMode_kb *****************
  5629 ;; Defined at:
  5630 ;;		line 46 in file "configMode.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;		None
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  cod_ret         1   39[COMRAM] char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      char 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5639 ;; Tracked objects:
  5640 ;;		On entry : 3F/0
  5641 ;;		On exit  : 3F/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5644 ;;      Params:         0       0       0       0       0       0       0       0       0
  5645 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5646 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5647 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5648 ;;Total ram usage:        4 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    8
  5651 ;; This function calls:
  5652 ;;		___ftadd
  5653 ;;		___ftge
  5654 ;;		___ftsub
  5655 ;;		_ikb_key_is_ready2read
  5656 ;;		_ikb_key_was_read
  5657 ;; This function is called by:
  5658 ;;		_configMode_job
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text39
  5663  000EDA                     __ptext39:
  5664                           	opt callstack 0
  5665  000EDA                     _configMode_kb:
  5666                           	opt callstack 21
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;configMode.c: 48: int8_t cod_ret = 0;
  5670                           
  5671                           ;incstack = 0
  5672  000EDA  0E00               	movlw	0
  5673  000EDC  6E28               	movwf	configMode_kb@cod_ret,c
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;configMode.c: 50: if (ikb_key_is_ready2read(0))
  5677  000EDE  0E00               	movlw	0
  5678  000EE0  EC55  F014         	call	_ikb_key_is_ready2read
  5679  000EE4  0900               	iorlw	0
  5680  000EE6  B4D8               	btfsc	status,2,c
  5681  000EE8  D00D               	goto	l5682
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;configMode.c: 51: {;configMode.c: 52: ikb_key_was_read(0);
  5685  000EEA  0E00               	movlw	0
  5686  000EEC  EC9F  F014         	call	_ikb_key_was_read
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;configMode.c: 54: if (++configMode.numRegistro >= (8+1))
  5690  000EF0  2A4B               	incf	_configMode+1,f,c
  5691  000EF2  504B               	movf	_configMode+1,w,c
  5692  000EF4  0A80               	xorlw	128
  5693  000EF6  0F77               	addlw	-137
  5694  000EF8  A0D8               	btfss	status,0,c
  5695  000EFA  D002               	goto	l962
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;configMode.c: 55: {;configMode.c: 56: configMode.numRegistro = 0x00;
  5699  000EFC  0E00               	movlw	0
  5700  000EFE  6E4B               	movwf	_configMode+1,c
  5701  000F00                     l962:
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;configMode.c: 57: };configMode.c: 58: configMode.disp7s_accessReq = 1;
  5705  000F00  0E01               	movlw	1
  5706  000F02  6E4A               	movwf	_configMode,c
  5707  000F04                     l5682:
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;configMode.c: 60: };configMode.c: 62: if (ikb_key_is_ready2read(1))
  5711  000F04  0E01               	movlw	1
  5712  000F06  EC55  F014         	call	_ikb_key_is_ready2read
  5713  000F0A  0900               	iorlw	0
  5714  000F0C  B4D8               	btfsc	status,2,c
  5715  000F0E  D00A               	goto	l5690
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;configMode.c: 63: {;configMode.c: 64: ikb_key_was_read(1);
  5719  000F10  0E01               	movlw	1
  5720  000F12  EC9F  F014         	call	_ikb_key_was_read
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;configMode.c: 66: if (--configMode.numRegistro < 0)
  5724  000F16  064B               	decf	_configMode+1,f,c
  5725  000F18  AE4B               	btfss	_configMode+1,7,c
  5726  000F1A  D002               	goto	l964
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;configMode.c: 67: {;configMode.c: 68: configMode.numRegistro = (8+1)-1;
  5730  000F1C  0E08               	movlw	8
  5731  000F1E  6E4B               	movwf	_configMode+1,c
  5732  000F20                     l964:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;configMode.c: 69: };configMode.c: 70: configMode.disp7s_accessReq = 1;
  5736  000F20  0E01               	movlw	1
  5737  000F22  6E4A               	movwf	_configMode,c
  5738  000F24                     l5690:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;configMode.c: 71: };configMode.c: 73: if (ikb_key_is_ready2read(2))
  5742  000F24  0E02               	movlw	2
  5743  000F26  EC55  F014         	call	_ikb_key_is_ready2read
  5744  000F2A  0900               	iorlw	0
  5745  000F2C  B4D8               	btfsc	status,2,c
  5746  000F2E  D084               	goto	l5712
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;configMode.c: 74: {;configMode.c: 75: if (configMode.numRegistro < 8)
  5750  000F30  504B               	movf	_configMode+1,w,c
  5751  000F32  0A80               	xorlw	128
  5752  000F34  0F78               	addlw	-136
  5753  000F36  B0D8               	btfsc	status,0,c
  5754  000F38  D067               	goto	l5702
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;configMode.c: 76: {;configMode.c: 77: if (pulsonic.nozzle[configMode.numRegistro].Q_mlh
      +                           == 0)
  5758  000F3A  504B               	movf	_configMode+1,w,c
  5759  000F3C  0D06               	mullw	6
  5760  000F3E  0E06               	movlw	low (_pulsonic+6)
  5761  000F40  24F3               	addwf	prodl,w,c
  5762  000F42  6ED9               	movwf	fsr2l,c
  5763  000F44  0E01               	movlw	high (_pulsonic+6)
  5764  000F46  20F4               	addwfc	prodh,w,c
  5765  000F48  6EDA               	movwf	fsr2h,c
  5766  000F4A  50DE               	movf	postinc2,w,c
  5767  000F4C  10DE               	iorwf	postinc2,w,c
  5768  000F4E  10DE               	iorwf	postinc2,w,c
  5769  000F50  A4D8               	btfss	status,2,c
  5770  000F52  D00F               	goto	l5698
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;configMode.c: 78: {;configMode.c: 79: pulsonic.nozzle[configMode.numRegistro].Q_mlh = 0
      +                          .3;
  5774  000F54  504B               	movf	_configMode+1,w,c
  5775  000F56  0D06               	mullw	6
  5776  000F58  0E06               	movlw	low (_pulsonic+6)
  5777  000F5A  24F3               	addwf	prodl,w,c
  5778  000F5C  6ED9               	movwf	fsr2l,c
  5779  000F5E  0E01               	movlw	high (_pulsonic+6)
  5780  000F60  20F4               	addwfc	prodh,w,c
  5781  000F62  6EDA               	movwf	fsr2h,c
  5782  000F64  0E9A               	movlw	154
  5783  000F66  6EDE               	movwf	postinc2,c
  5784  000F68  0E99               	movlw	153
  5785  000F6A  6EDE               	movwf	postinc2,c
  5786  000F6C  0E3E               	movlw	62
  5787  000F6E  6EDE               	movwf	postinc2,c
  5788                           
  5789                           ;configMode.c: 80: }
  5790  000F70  D024               	goto	l968
  5791  000F72                     l5698:
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;configMode.c: 81: else;configMode.c: 82: {;configMode.c: 83: pulsonic.nozzle[configMode
      +                          .numRegistro].Q_mlh += NOZZLE_QTY_DIFF;
  5795  000F72  504B               	movf	_configMode+1,w,c
  5796  000F74  0D06               	mullw	6
  5797  000F76  0E06               	movlw	low (_pulsonic+6)
  5798  000F78  24F3               	addwf	prodl,w,c
  5799  000F7A  6ED9               	movwf	fsr2l,c
  5800  000F7C  0E01               	movlw	high (_pulsonic+6)
  5801  000F7E  20F4               	addwfc	prodh,w,c
  5802  000F80  6EDA               	movwf	fsr2h,c
  5803  000F82  CFDE F013          	movff	postinc2,___ftadd@f1
  5804  000F86  CFDE F014          	movff	postinc2,___ftadd@f1+1
  5805  000F8A  CFDD F015          	movff	postdec2,___ftadd@f1+2
  5806  000F8E  0ECD               	movlw	205
  5807  000F90  6E16               	movwf	___ftadd@f2,c
  5808  000F92  0ECC               	movlw	204
  5809  000F94  6E17               	movwf	___ftadd@f2+1,c
  5810  000F96  0E3D               	movlw	61
  5811  000F98  6E18               	movwf	___ftadd@f2+2,c
  5812  000F9A  ECCB  F009         	call	___ftadd	;wreg free
  5813  000F9E  504B               	movf	_configMode+1,w,c
  5814  000FA0  0D06               	mullw	6
  5815  000FA2  0E06               	movlw	low (_pulsonic+6)
  5816  000FA4  24F3               	addwf	prodl,w,c
  5817  000FA6  6ED9               	movwf	fsr2l,c
  5818  000FA8  0E01               	movlw	high (_pulsonic+6)
  5819  000FAA  20F4               	addwfc	prodh,w,c
  5820  000FAC  6EDA               	movwf	fsr2h,c
  5821  000FAE  C013  FFDE         	movff	?___ftadd,postinc2
  5822  000FB2  C014  FFDE         	movff	?___ftadd+1,postinc2
  5823  000FB6  C015  FFDE         	movff	?___ftadd+2,postinc2
  5824  000FBA                     l968:
  5825                           
  5826                           ;configMode.c: 84: };configMode.c: 86: if ( pulsonic.nozzle[configMode.numRegistro].Q_ml
      +                          h >= 12.0)
  5827  000FBA  504B               	movf	_configMode+1,w,c
  5828  000FBC  0D06               	mullw	6
  5829  000FBE  0E06               	movlw	low (_pulsonic+6)
  5830  000FC0  24F3               	addwf	prodl,w,c
  5831  000FC2  6ED9               	movwf	fsr2l,c
  5832  000FC4  0E01               	movlw	high (_pulsonic+6)
  5833  000FC6  20F4               	addwfc	prodh,w,c
  5834  000FC8  6EDA               	movwf	fsr2h,c
  5835  000FCA  CFDE F016          	movff	postinc2,___ftge@ff1
  5836  000FCE  CFDE F017          	movff	postinc2,___ftge@ff1+1
  5837  000FD2  CFDD F018          	movff	postdec2,___ftge@ff1+2
  5838  000FD6  0E00               	movlw	0
  5839  000FD8  6E19               	movwf	___ftge@ff2,c
  5840  000FDA  0E40               	movlw	64
  5841  000FDC  6E1A               	movwf	___ftge@ff2+1,c
  5842  000FDE  0E41               	movlw	65
  5843  000FE0  6E1B               	movwf	___ftge@ff2+2,c
  5844  000FE2  ECA0  F010         	call	___ftge	;wreg free
  5845  000FE6  A0D8               	btfss	status,0,c
  5846  000FE8  D022               	goto	l5708
  5847                           
  5848                           ;configMode.c: 87: {;configMode.c: 88: pulsonic.nozzle[configMode.numRegistro].Q_mlh = 1
      +                          2.0;
  5849  000FEA  504B               	movf	_configMode+1,w,c
  5850  000FEC  0D06               	mullw	6
  5851  000FEE  0E06               	movlw	low (_pulsonic+6)
  5852  000FF0  24F3               	addwf	prodl,w,c
  5853  000FF2  6ED9               	movwf	fsr2l,c
  5854  000FF4  0E01               	movlw	high (_pulsonic+6)
  5855  000FF6  20F4               	addwfc	prodh,w,c
  5856  000FF8  6EDA               	movwf	fsr2h,c
  5857  000FFA  0E00               	movlw	0
  5858  000FFC  6EDE               	movwf	postinc2,c
  5859  000FFE  0E40               	movlw	64
  5860  001000  6EDE               	movwf	postinc2,c
  5861  001002  0E41               	movlw	65
  5862  001004  6EDE               	movwf	postinc2,c
  5863  001006  D013               	goto	l5708
  5864  001008                     l5702:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;configMode.c: 92: else;configMode.c: 93: {;configMode.c: 94: if (++pulsonic.oil.i>=4)
  5868  001008  0101               	movlb	1	; () banked
  5869  00100A  2B36               	incf	(_pulsonic+54)& (0+255),f,b
  5870  00100C  5136               	movf	(_pulsonic+54)& (0+255),w,b
  5871  00100E  0A80               	xorlw	128
  5872  001010  0F7C               	addlw	-132
  5873  001012  A0D8               	btfss	status,0,c
  5874  001014  D002               	goto	l5706
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;configMode.c: 95: {;configMode.c: 96: pulsonic.oil.i=0;
  5878  001016  0E00               	movlw	0
  5879  001018  6F36               	movwf	(_pulsonic+54)& (0+255),b
  5880  00101A                     l5706:
  5881                           
  5882                           ; BSR set to: 1
  5883                           ;configMode.c: 97: };configMode.c: 98: pulsonic.oil.viscosity = OIL_VISCOSITY[pulsonic.o
      +                          il.i];
  5884  00101A  5136               	movf	(_pulsonic+54)& (0+255),w,b
  5885  00101C  0F0B               	addlw	low _OIL_VISCOSITY
  5886  00101E  6E25               	movwf	??_configMode_kb& (0+255),c
  5887  001020  C025  FFF6         	movff	??_configMode_kb,tblptrl
  5888  001024                     	if	1	;There is more than 1 active tblptr byte
  5889  001024  0E08               	movlw	high __smallconst
  5890  001026  6EF7               	movwf	tblptrh,c
  5891  001028                     	endif
  5892  001028                     	if	0	;tblptru may be non-zero
  5893  001028                     	endif
  5894  001028                     	if	0	;tblptru may be non-zero
  5895  001028                     	endif
  5896  001028  0008               	tblrd		*
  5897  00102A  CFF5 F137          	movff	tablat,_pulsonic+55
  5898  00102E                     l5708:
  5899                           
  5900                           ;configMode.c: 99: };configMode.c: 100: configMode.disp7s_accessReq = 1;
  5901  00102E  0E01               	movlw	1
  5902  001030  6E4A               	movwf	_configMode,c
  5903                           
  5904                           ;configMode.c: 102: ikb_key_was_read(2);
  5905  001032  0E02               	movlw	2
  5906  001034  EC9F  F014         	call	_ikb_key_was_read
  5907  001038                     l5712:
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;configMode.c: 104: };configMode.c: 105: if (ikb_key_is_ready2read(3))
  5911  001038  0E03               	movlw	3
  5912  00103A  EC55  F014         	call	_ikb_key_is_ready2read
  5913  00103E  0900               	iorlw	0
  5914  001040  B4D8               	btfsc	status,2,c
  5915  001042  D08E               	goto	l5738
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;configMode.c: 106: {;configMode.c: 107: if (configMode.numRegistro < 8)
  5919  001044  504B               	movf	_configMode+1,w,c
  5920  001046  0A80               	xorlw	128
  5921  001048  0F78               	addlw	-136
  5922  00104A  B0D8               	btfsc	status,0,c
  5923  00104C  D074               	goto	l5728
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;configMode.c: 108: {;configMode.c: 109: pulsonic.nozzle[configMode.numRegistro].Q_mlh -
      +                          = NOZZLE_QTY_DIFF;
  5927  00104E  504B               	movf	_configMode+1,w,c
  5928  001050  0D06               	mullw	6
  5929  001052  0E06               	movlw	low (_pulsonic+6)
  5930  001054  24F3               	addwf	prodl,w,c
  5931  001056  6ED9               	movwf	fsr2l,c
  5932  001058  0E01               	movlw	high (_pulsonic+6)
  5933  00105A  20F4               	addwfc	prodh,w,c
  5934  00105C  6EDA               	movwf	fsr2h,c
  5935  00105E  CFDE F01F          	movff	postinc2,___ftsub@f1
  5936  001062  CFDE F020          	movff	postinc2,___ftsub@f1+1
  5937  001066  CFDD F021          	movff	postdec2,___ftsub@f1+2
  5938  00106A  0ECD               	movlw	205
  5939  00106C  6E22               	movwf	___ftsub@f2,c
  5940  00106E  0ECC               	movlw	204
  5941  001070  6E23               	movwf	___ftsub@f2+1,c
  5942  001072  0E3D               	movlw	61
  5943  001074  6E24               	movwf	___ftsub@f2+2,c
  5944  001076  EC11  F013         	call	___ftsub	;wreg free
  5945  00107A  504B               	movf	_configMode+1,w,c
  5946  00107C  0D06               	mullw	6
  5947  00107E  0E06               	movlw	low (_pulsonic+6)
  5948  001080  24F3               	addwf	prodl,w,c
  5949  001082  6ED9               	movwf	fsr2l,c
  5950  001084  0E01               	movlw	high (_pulsonic+6)
  5951  001086  20F4               	addwfc	prodh,w,c
  5952  001088  6EDA               	movwf	fsr2h,c
  5953  00108A  C01F  FFDE         	movff	?___ftsub,postinc2
  5954  00108E  C020  FFDE         	movff	?___ftsub+1,postinc2
  5955  001092  C021  FFDE         	movff	?___ftsub+2,postinc2
  5956                           
  5957                           ;configMode.c: 111: if (configMode.numRegistro == 0)
  5958  001096  504B               	movf	_configMode+1,w,c
  5959  001098  A4D8               	btfss	status,2,c
  5960  00109A  D026               	goto	l5724
  5961                           
  5962                           ;configMode.c: 112: {;configMode.c: 113: if ( pulsonic.nozzle[configMode.numRegistro].Q_
      +                          mlh < 0.3)
  5963  00109C  504B               	movf	_configMode+1,w,c
  5964  00109E  0D06               	mullw	6
  5965  0010A0  0E06               	movlw	low (_pulsonic+6)
  5966  0010A2  24F3               	addwf	prodl,w,c
  5967  0010A4  6ED9               	movwf	fsr2l,c
  5968  0010A6  0E01               	movlw	high (_pulsonic+6)
  5969  0010A8  20F4               	addwfc	prodh,w,c
  5970  0010AA  6EDA               	movwf	fsr2h,c
  5971  0010AC  CFDE F016          	movff	postinc2,___ftge@ff1
  5972  0010B0  CFDE F017          	movff	postinc2,___ftge@ff1+1
  5973  0010B4  CFDD F018          	movff	postdec2,___ftge@ff1+2
  5974  0010B8  0E9A               	movlw	154
  5975  0010BA  6E19               	movwf	___ftge@ff2,c
  5976  0010BC  0E99               	movlw	153
  5977  0010BE  6E1A               	movwf	___ftge@ff2+1,c
  5978  0010C0  0E3E               	movlw	62
  5979  0010C2  6E1B               	movwf	___ftge@ff2+2,c
  5980  0010C4  ECA0  F010         	call	___ftge	;wreg free
  5981  0010C8  B0D8               	btfsc	status,0,c
  5982  0010CA  D045               	goto	l5734
  5983                           
  5984                           ;configMode.c: 114: {;configMode.c: 115: pulsonic.nozzle[configMode.numRegistro].Q_mlh =
      +                           0.3;
  5985  0010CC  504B               	movf	_configMode+1,w,c
  5986  0010CE  0D06               	mullw	6
  5987  0010D0  0E06               	movlw	low (_pulsonic+6)
  5988  0010D2  24F3               	addwf	prodl,w,c
  5989  0010D4  6ED9               	movwf	fsr2l,c
  5990  0010D6  0E01               	movlw	high (_pulsonic+6)
  5991  0010D8  20F4               	addwfc	prodh,w,c
  5992  0010DA  6EDA               	movwf	fsr2h,c
  5993  0010DC  0E9A               	movlw	154
  5994  0010DE  6EDE               	movwf	postinc2,c
  5995  0010E0  0E99               	movlw	153
  5996  0010E2  6EDE               	movwf	postinc2,c
  5997  0010E4  0E3E               	movlw	62
  5998  0010E6  D025               	goto	L6
  5999  0010E8                     l5724:
  6000                           
  6001                           ;configMode.c: 118: else;configMode.c: 119: {;configMode.c: 120: if ( pulsonic.nozzle[co
      +                          nfigMode.numRegistro].Q_mlh < 0.3)
  6002  0010E8  504B               	movf	_configMode+1,w,c
  6003  0010EA  0D06               	mullw	6
  6004  0010EC  0E06               	movlw	low (_pulsonic+6)
  6005  0010EE  24F3               	addwf	prodl,w,c
  6006  0010F0  6ED9               	movwf	fsr2l,c
  6007  0010F2  0E01               	movlw	high (_pulsonic+6)
  6008  0010F4  20F4               	addwfc	prodh,w,c
  6009  0010F6  6EDA               	movwf	fsr2h,c
  6010  0010F8  CFDE F016          	movff	postinc2,___ftge@ff1
  6011  0010FC  CFDE F017          	movff	postinc2,___ftge@ff1+1
  6012  001100  CFDD F018          	movff	postdec2,___ftge@ff1+2
  6013  001104  0E9A               	movlw	154
  6014  001106  6E19               	movwf	___ftge@ff2,c
  6015  001108  0E99               	movlw	153
  6016  00110A  6E1A               	movwf	___ftge@ff2+1,c
  6017  00110C  0E3E               	movlw	62
  6018  00110E  6E1B               	movwf	___ftge@ff2+2,c
  6019  001110  ECA0  F010         	call	___ftge	;wreg free
  6020  001114  B0D8               	btfsc	status,0,c
  6021  001116  D01F               	goto	l5734
  6022                           
  6023                           ;configMode.c: 121: {;configMode.c: 122: pulsonic.nozzle[configMode.numRegistro].Q_mlh =
      +                           0;
  6024  001118  504B               	movf	_configMode+1,w,c
  6025  00111A  0D06               	mullw	6
  6026  00111C  0E06               	movlw	low (_pulsonic+6)
  6027  00111E  24F3               	addwf	prodl,w,c
  6028  001120  6ED9               	movwf	fsr2l,c
  6029  001122  0E01               	movlw	high (_pulsonic+6)
  6030  001124  20F4               	addwfc	prodh,w,c
  6031  001126  6EDA               	movwf	fsr2h,c
  6032  001128  0E00               	movlw	0
  6033  00112A  6EDE               	movwf	postinc2,c
  6034  00112C  0E00               	movlw	0
  6035  00112E  6EDE               	movwf	postinc2,c
  6036  001130  0E00               	movlw	0
  6037  001132                     L6:
  6038  001132  6EDE               	movwf	postinc2,c
  6039  001134  D010               	goto	l5734
  6040  001136                     l5728:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;configMode.c: 126: else;configMode.c: 127: {;configMode.c: 128: if (--pulsonic.oil.i < 
      +                          0)
  6044  001136  0101               	movlb	1	; () banked
  6045  001138  0736               	decf	(_pulsonic+54)& (0+255),f,b
  6046  00113A  AF36               	btfss	(_pulsonic+54)& (0+255),7,b
  6047  00113C  D002               	goto	l5732
  6048                           
  6049                           ; BSR set to: 1
  6050                           ;configMode.c: 129: {;configMode.c: 130: pulsonic.oil.i= 4-1;
  6051  00113E  0E03               	movlw	3
  6052  001140  6F36               	movwf	(_pulsonic+54)& (0+255),b
  6053  001142                     l5732:
  6054                           
  6055                           ; BSR set to: 1
  6056                           ;configMode.c: 131: };configMode.c: 132: pulsonic.oil.viscosity = OIL_VISCOSITY[pulsonic
      +                          .oil.i];
  6057  001142  5136               	movf	(_pulsonic+54)& (0+255),w,b
  6058  001144  0F0B               	addlw	low _OIL_VISCOSITY
  6059  001146  6E25               	movwf	??_configMode_kb& (0+255),c
  6060  001148  C025  FFF6         	movff	??_configMode_kb,tblptrl
  6061  00114C                     	if	1	;There is more than 1 active tblptr byte
  6062  00114C  0E08               	movlw	high __smallconst
  6063  00114E  6EF7               	movwf	tblptrh,c
  6064  001150                     	endif
  6065  001150                     	if	0	;tblptru may be non-zero
  6066  001150                     	endif
  6067  001150                     	if	0	;tblptru may be non-zero
  6068  001150                     	endif
  6069  001150  0008               	tblrd		*
  6070  001152  CFF5 F137          	movff	tablat,_pulsonic+55
  6071  001156                     l5734:
  6072                           
  6073                           ;configMode.c: 133: };configMode.c: 134: configMode.disp7s_accessReq = 1;
  6074  001156  0E01               	movlw	1
  6075  001158  6E4A               	movwf	_configMode,c
  6076                           
  6077                           ;configMode.c: 136: ikb_key_was_read(3);
  6078  00115A  0E03               	movlw	3
  6079  00115C  EC9F  F014         	call	_ikb_key_was_read
  6080  001160                     l5738:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;configMode.c: 138: };configMode.c: 139: if (ikb_key_is_ready2read(4))
  6084  001160  0E04               	movlw	4
  6085  001162  EC55  F014         	call	_ikb_key_is_ready2read
  6086  001166  0900               	iorlw	0
  6087  001168  B4D8               	btfsc	status,2,c
  6088  00116A  D005               	goto	l5744
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;configMode.c: 140: {;configMode.c: 141: cod_ret = 1;
  6092  00116C  0E01               	movlw	1
  6093  00116E  6E28               	movwf	configMode_kb@cod_ret,c
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;configMode.c: 142: ikb_key_was_read(4);
  6097  001170  0E04               	movlw	4
  6098  001172  EC9F  F014         	call	_ikb_key_was_read
  6099  001176                     l5744:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;configMode.c: 144: };configMode.c: 145: return cod_ret;
  6103  001176  5028               	movf	configMode_kb@cod_ret,w,c
  6104                           
  6105                           ; BSR set to: 0
  6106  001178  0012               	return		;funcret
  6107  00117A                     __end_of_configMode_kb:
  6108                           	opt callstack 0
  6109                           
  6110 ;; *************** function ___ftsub *****************
  6111 ;; Defined at:
  6112 ;;		line 19 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftsub.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  f1              3   30[COMRAM] float 
  6115 ;;  f2              3   33[COMRAM] float 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  3   30[COMRAM] float 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 3F/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6127 ;;      Params:         6       0       0       0       0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6130 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6131 ;;Total ram usage:        6 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    7
  6134 ;; This function calls:
  6135 ;;		___ftadd
  6136 ;; This function is called by:
  6137 ;;		_configMode_kb
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text40
  6142  002622                     __ptext40:
  6143                           	opt callstack 0
  6144  002622                     ___ftsub:
  6145                           	opt callstack 21
  6146                           
  6147                           ; BSR set to: 0
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;incstack = 0
  6151  002622  5022               	movf	___ftsub@f2,w,c
  6152  002624  1023               	iorwf	___ftsub@f2+1,w,c
  6153  002626  1024               	iorwf	___ftsub@f2+2,w,c
  6154  002628  B4D8               	btfsc	status,2,c
  6155  00262A  D006               	goto	l5346
  6156                           
  6157                           ; BSR set to: 0
  6158  00262C  0E00               	movlw	0
  6159  00262E  1A22               	xorwf	___ftsub@f2,f,c
  6160  002630  0E00               	movlw	0
  6161  002632  1A23               	xorwf	___ftsub@f2+1,f,c
  6162  002634  0E80               	movlw	128
  6163  002636  1A24               	xorwf	___ftsub@f2+2,f,c
  6164  002638                     l5346:
  6165                           
  6166                           ; BSR set to: 0
  6167  002638  C01F  F013         	movff	___ftsub@f1,___ftadd@f1
  6168  00263C  C020  F014         	movff	___ftsub@f1+1,___ftadd@f1+1
  6169  002640  C021  F015         	movff	___ftsub@f1+2,___ftadd@f1+2
  6170  002644  C022  F016         	movff	___ftsub@f2,___ftadd@f2
  6171  002648  C023  F017         	movff	___ftsub@f2+1,___ftadd@f2+1
  6172  00264C  C024  F018         	movff	___ftsub@f2+2,___ftadd@f2+2
  6173  002650  ECCB  F009         	call	___ftadd	;wreg free
  6174  002654  C013  F01F         	movff	?___ftadd,?___ftsub
  6175  002658  C014  F020         	movff	?___ftadd+1,?___ftsub+1
  6176  00265C  C015  F021         	movff	?___ftadd+2,?___ftsub+2
  6177  002660  0012               	return		;funcret
  6178  002662                     __end_of___ftsub:
  6179                           	opt callstack 0
  6180                           
  6181 ;; *************** function _configMode_disp *****************
  6182 ;; Defined at:
  6183 ;;		line 147 in file "configMode.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  numRegistro     1    wreg     char 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  numRegistro     1   62[COMRAM] char 
  6188 ;;  qty             3   59[COMRAM] char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 3F/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0
  6199 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6201 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6202 ;;Total ram usage:        4 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:   10
  6205 ;; This function calls:
  6206 ;;		_disp7s_modeDisp_writeInt
  6207 ;;		_disp7s_modeDisp_writeText_oil
  6208 ;;		_disp7s_qtyDisp_writeFloat
  6209 ;;		_disp7s_qtyDisp_writeInt
  6210 ;;		_disp7s_qtyDisp_writeText_OFF
  6211 ;; This function is called by:
  6212 ;;		_configMode_job
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text41
  6217  0020CC                     __ptext41:
  6218                           	opt callstack 0
  6219  0020CC                     _configMode_disp:
  6220                           	opt callstack 19
  6221                           
  6222                           ;incstack = 0
  6223                           ;configMode_disp@numRegistro stored from wreg
  6224  0020CC  6E3F               	movwf	configMode_disp@numRegistro,c
  6225                           
  6226                           ;configMode.c: 149: double qty;;configMode.c: 151: if (numRegistro < 8)
  6227  0020CE  503F               	movf	configMode_disp@numRegistro,w,c
  6228  0020D0  0A80               	xorlw	128
  6229  0020D2  0F78               	addlw	-136
  6230  0020D4  B0D8               	btfsc	status,0,c
  6231  0020D6  D02A               	goto	l5760
  6232                           
  6233                           ;configMode.c: 152: {;configMode.c: 153: disp7s_modeDisp_writeInt(numRegistro+1);
  6234  0020D8  0E01               	movlw	1
  6235  0020DA  243F               	addwf	configMode_disp@numRegistro,w,c
  6236  0020DC  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  6237  0020DE  6AE8               	clrf	wreg,c
  6238  0020E0  B0D8               	btfsc	status,0,c
  6239  0020E2  2AE8               	incf	wreg,f,c
  6240  0020E4  BE3F               	btfsc	configMode_disp@numRegistro,7,c
  6241  0020E6  06E8               	decf	wreg,f,c
  6242  0020E8  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  6243  0020EA  EC7E  F014         	call	_disp7s_modeDisp_writeInt	;wreg free
  6244                           
  6245                           ;configMode.c: 155: qty = pulsonic.nozzle[numRegistro].Q_mlh;
  6246  0020EE  503F               	movf	configMode_disp@numRegistro,w,c
  6247  0020F0  0D06               	mullw	6
  6248  0020F2  0E06               	movlw	low (_pulsonic+6)
  6249  0020F4  24F3               	addwf	prodl,w,c
  6250  0020F6  6ED9               	movwf	fsr2l,c
  6251  0020F8  0E01               	movlw	high (_pulsonic+6)
  6252  0020FA  20F4               	addwfc	prodh,w,c
  6253  0020FC  6EDA               	movwf	fsr2h,c
  6254  0020FE  CFDE F03C          	movff	postinc2,configMode_disp@qty
  6255  002102  CFDE F03D          	movff	postinc2,configMode_disp@qty+1
  6256  002106  CFDD F03E          	movff	postdec2,configMode_disp@qty+2
  6257                           
  6258                           ;configMode.c: 156: if (qty == 0)
  6259  00210A  503C               	movf	configMode_disp@qty,w,c
  6260  00210C  103D               	iorwf	configMode_disp@qty+1,w,c
  6261  00210E  103E               	iorwf	configMode_disp@qty+2,w,c
  6262  002110  A4D8               	btfss	status,2,c
  6263  002112  D003               	goto	l5758
  6264                           
  6265                           ;configMode.c: 157: {;configMode.c: 158: disp7s_qtyDisp_writeText_OFF();
  6266  002114  ECB2  F014         	call	_disp7s_qtyDisp_writeText_OFF	;wreg free
  6267                           
  6268                           ;configMode.c: 159: }
  6269  002118  0012               	return	
  6270  00211A                     l5758:
  6271                           
  6272                           ;configMode.c: 160: else;configMode.c: 161: {;configMode.c: 162: disp7s_qtyDisp_writeFlo
      +                          at( qty );
  6273  00211A  C03C  F141         	movff	configMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  6274  00211E  C03D  F142         	movff	configMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  6275  002122  C03E  F143         	movff	configMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  6276  002126  EC38  F014         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  6277  00212A  0012               	return	
  6278  00212C                     l5760:
  6279                           
  6280                           ;configMode.c: 165: else;configMode.c: 166: {;configMode.c: 167: disp7s_modeDisp_writeTe
      +                          xt_oil();
  6281  00212C  ECD1  F014         	call	_disp7s_modeDisp_writeText_oil	;wreg free
  6282                           
  6283                           ; BSR set to: 1
  6284                           ;configMode.c: 168: disp7s_qtyDisp_writeInt( pulsonic.oil.viscosity );
  6285  002130  5137               	movf	(_pulsonic+55)& (0+255),w,b
  6286  002132  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  6287  002134  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  6288  002136  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  6289  002138  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  6290  00213A  EC71  F014         	call	_disp7s_qtyDisp_writeInt	;wreg free
  6291  00213E  0012               	return		;funcret
  6292  002140                     __end_of_configMode_disp:
  6293                           	opt callstack 0
  6294                           
  6295 ;; *************** function _disp7s_qtyDisp_writeText_OFF *****************
  6296 ;; Defined at:
  6297 ;;		line 169 in file "display.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;		None
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 3F/1
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6311 ;;      Params:         0       0       0       0       0       0       0       0       0
  6312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6314 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6315 ;;Total ram usage:        0 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    5
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_visMode_disp
  6322 ;;		_configMode_disp
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text42
  6327  002964                     __ptext42:
  6328                           	opt callstack 0
  6329  002964                     _disp7s_qtyDisp_writeText_OFF:
  6330                           	opt callstack 23
  6331                           
  6332                           ;display.c: 171: pulsonic.disp7s.qty[2] =0x3F;
  6333                           
  6334                           ;incstack = 0
  6335  002964  0E3F               	movlw	63
  6336  002966  0101               	movlb	1	; () banked
  6337  002968  6F3E               	movwf	(_pulsonic+62)& (0+255),b
  6338                           
  6339                           ;display.c: 172: pulsonic.disp7s.qty[1] =0x71;
  6340  00296A  0E71               	movlw	113
  6341  00296C  6F3D               	movwf	(_pulsonic+61)& (0+255),b
  6342                           
  6343                           ;display.c: 173: pulsonic.disp7s.qty[0] =0x71;
  6344  00296E  0E71               	movlw	113
  6345  002970  6F3C               	movwf	(_pulsonic+60)& (0+255),b
  6346                           
  6347                           ; BSR set to: 1
  6348  002972  0012               	return		;funcret
  6349  002974                     __end_of_disp7s_qtyDisp_writeText_OFF:
  6350                           	opt callstack 0
  6351                           
  6352 ;; *************** function _disp7s_qtyDisp_writeInt *****************
  6353 ;; Defined at:
  6354 ;;		line 300 in file "display.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  num             2   55[COMRAM] int 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 3F/1
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6368 ;;      Params:         2       0       0       0       0       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6371 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6372 ;;Total ram usage:        2 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    9
  6375 ;; This function calls:
  6376 ;;		_disp7s_write_i
  6377 ;; This function is called by:
  6378 ;;		_visMode_disp
  6379 ;;		_configMode_disp
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text43
  6384  0028E2                     __ptext43:
  6385                           	opt callstack 0
  6386  0028E2                     _disp7s_qtyDisp_writeInt:
  6387                           	opt callstack 19
  6388                           
  6389                           ; BSR set to: 1
  6390                           ;display.c: 302: disp7s_write_i(pulsonic.disp7s.qty, 3, num);
  6391                           
  6392                           ; BSR set to: 1
  6393                           ;incstack = 0
  6394  0028E2  0E3C               	movlw	low (_pulsonic+60)
  6395  0028E4  6E20               	movwf	disp7s_write_i@pDisp,c
  6396  0028E6  0E01               	movlw	high (_pulsonic+60)
  6397  0028E8  6E21               	movwf	disp7s_write_i@pDisp+1,c
  6398  0028EA  0E03               	movlw	3
  6399  0028EC  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  6400  0028EE  C038  F023         	movff	disp7s_qtyDisp_writeInt@num,disp7s_write_i@num
  6401  0028F2  C039  F024         	movff	disp7s_qtyDisp_writeInt@num+1,disp7s_write_i@num+1
  6402  0028F6  EC15  F00C         	call	_disp7s_write_i	;wreg free
  6403  0028FA  0012               	return		;funcret
  6404  0028FC                     __end_of_disp7s_qtyDisp_writeInt:
  6405                           	opt callstack 0
  6406                           
  6407 ;; *************** function _disp7s_qtyDisp_writeFloat *****************
  6408 ;; Defined at:
  6409 ;;		line 261 in file "display.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  num             3    0[BANK1 ] float 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      void 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 3F/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6423 ;;      Params:         0       0       3       0       0       0       0       0       0
  6424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6426 ;;      Totals:         0       0       3       0       0       0       0       0       0
  6427 ;;Total ram usage:        3 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    9
  6430 ;; This function calls:
  6431 ;;		_disp7s_write_f
  6432 ;; This function is called by:
  6433 ;;		_autoMode_init
  6434 ;;		_visMode_disp
  6435 ;;		_configMode_disp
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text44
  6440  002870                     __ptext44:
  6441                           	opt callstack 0
  6442  002870                     _disp7s_qtyDisp_writeFloat:
  6443                           	opt callstack 19
  6444                           
  6445                           ;display.c: 263: disp7s_write_f(pulsonic.disp7s.qty, 3, num);
  6446                           
  6447                           ;incstack = 0
  6448  002870  0E3C               	movlw	low (_pulsonic+60)
  6449  002872  6E31               	movwf	disp7s_write_f@pDisp,c
  6450  002874  0E01               	movlw	high (_pulsonic+60)
  6451  002876  6E32               	movwf	disp7s_write_f@pDisp+1,c
  6452  002878  0E03               	movlw	3
  6453  00287A  6E33               	movwf	disp7s_write_f@NUM_OF_DISP,c
  6454  00287C  C141  F034         	movff	disp7s_qtyDisp_writeFloat@num,disp7s_write_f@num
  6455  002880  C142  F035         	movff	disp7s_qtyDisp_writeFloat@num+1,disp7s_write_f@num+1
  6456  002884  C143  F036         	movff	disp7s_qtyDisp_writeFloat@num+2,disp7s_write_f@num+2
  6457  002888  ECBD  F008         	call	_disp7s_write_f	;wreg free
  6458                           
  6459                           ; BSR set to: 0
  6460  00288C  0012               	return		;funcret
  6461  00288E                     __end_of_disp7s_qtyDisp_writeFloat:
  6462                           	opt callstack 0
  6463                           
  6464 ;; *************** function _disp7s_write_f *****************
  6465 ;; Defined at:
  6466 ;;		line 206 in file "display.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  pDisp           2   48[COMRAM] PTR unsigned char 
  6469 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  6470 ;;  NUM_OF_DISP     1   50[COMRAM] char 
  6471 ;;  num             3   51[COMRAM] char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  buff           10    0[BANK0 ] unsigned char [10]
  6474 ;;  K10MULT         3   13[BANK0 ] unsigned char [10]
  6475 ;;  I               2   10[BANK0 ] int 
  6476 ;;  i               1   16[BANK0 ] char 
  6477 ;;  pi              1   12[BANK0 ] char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 3F/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6487 ;;      Params:         6       0       0       0       0       0       0       0       0
  6488 ;;      Locals:         0      17       0       0       0       0       0       0       0
  6489 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6490 ;;      Totals:        11      17       0       0       0       0       0       0       0
  6491 ;;Total ram usage:       28 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    8
  6494 ;; This function calls:
  6495 ;;		___ftadd
  6496 ;;		___ftge
  6497 ;;		___ftmul
  6498 ;;		___fttol
  6499 ;;		_disp7s_off
  6500 ;;		_itoa
  6501 ;; This function is called by:
  6502 ;;		_disp7s_qtyDisp_writeFloat
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text45
  6507  00117A                     __ptext45:
  6508                           	opt callstack 0
  6509  00117A                     _disp7s_write_f:
  6510                           	opt callstack 19
  6511                           
  6512                           ;display.c: 208: double K10MULT;;display.c: 209: int16_t I;;display.c: 210: char buff[10
      +                          ];;display.c: 211: int8_t i;;display.c: 212: int8_t pi;;display.c: 214: K10MULT = 1;
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;incstack = 0
  6516  00117A  0E00               	movlw	0
  6517  00117C  0100               	movlb	0	; () banked
  6518  00117E  6FFC               	movwf	disp7s_write_f@K10MULT& (0+255),b
  6519  001180  0E80               	movlw	128
  6520  001182  6FFD               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  6521  001184  0E3F               	movlw	63
  6522  001186  6FFE               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;display.c: 215: i = NUM_OF_DISP;
  6526  001188  C033  F0FF         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_write_f@i
  6527                           
  6528                           ;display.c: 216: while (i--)
  6529  00118C  D014               	goto	l5144
  6530  00118E                     l5142:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;display.c: 217: {K10MULT *=10;}
  6534  00118E  C0FC  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  6535  001192  C0FD  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  6536  001196  C0FE  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  6537  00119A  0E00               	movlw	0
  6538  00119C  6E16               	movwf	___ftmul@f2,c
  6539  00119E  0E20               	movlw	32
  6540  0011A0  6E17               	movwf	___ftmul@f2+1,c
  6541  0011A2  0E41               	movlw	65
  6542  0011A4  6E18               	movwf	___ftmul@f2+2,c
  6543  0011A6  EC9A  F00C         	call	___ftmul	;wreg free
  6544  0011AA  C013  F0FC         	movff	?___ftmul,disp7s_write_f@K10MULT
  6545  0011AE  C014  F0FD         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  6546  0011B2  C015  F0FE         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  6547  0011B6                     l5144:
  6548  0011B6  0100               	movlb	0	; () banked
  6549  0011B8  07FF               	decf	disp7s_write_f@i& (0+255),f,b
  6550  0011BA  29FF               	incf	disp7s_write_f@i& (0+255),w,b
  6551  0011BC  A4D8               	btfss	status,2,c
  6552  0011BE  D7E7               	goto	l5142
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;display.c: 218: if (num >= K10MULT)
  6556  0011C0  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  6557  0011C4  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  6558  0011C8  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  6559  0011CC  C0FC  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  6560  0011D0  C0FD  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  6561  0011D4  C0FE  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  6562  0011D8  ECA0  F010         	call	___ftge	;wreg free
  6563  0011DC  A0D8               	btfss	status,0,c
  6564  0011DE  D014               	goto	l5150
  6565                           
  6566                           ;display.c: 219: {num= K10MULT-1;}
  6567  0011E0  C0FC  F013         	movff	disp7s_write_f@K10MULT,___ftadd@f1
  6568  0011E4  C0FD  F014         	movff	disp7s_write_f@K10MULT+1,___ftadd@f1+1
  6569  0011E8  C0FE  F015         	movff	disp7s_write_f@K10MULT+2,___ftadd@f1+2
  6570  0011EC  0E00               	movlw	0
  6571  0011EE  6E16               	movwf	___ftadd@f2,c
  6572  0011F0  0E80               	movlw	128
  6573  0011F2  6E17               	movwf	___ftadd@f2+1,c
  6574  0011F4  0EBF               	movlw	191
  6575  0011F6  6E18               	movwf	___ftadd@f2+2,c
  6576  0011F8  ECCB  F009         	call	___ftadd	;wreg free
  6577  0011FC  C013  F034         	movff	?___ftadd,disp7s_write_f@num
  6578  001200  C014  F035         	movff	?___ftadd+1,disp7s_write_f@num+1
  6579  001204  C015  F036         	movff	?___ftadd+2,disp7s_write_f@num+2
  6580  001208                     l5150:
  6581                           
  6582                           ;display.c: 221: disp7s_off(pDisp, NUM_OF_DISP);
  6583  001208  C031  F00B         	movff	disp7s_write_f@pDisp,disp7s_off@pDisp
  6584  00120C  C032  F00C         	movff	disp7s_write_f@pDisp+1,disp7s_off@pDisp+1
  6585  001210  C033  F00D         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_off@NUM_OF_DISP
  6586  001214  EC31  F013         	call	_disp7s_off	;wreg free
  6587                           
  6588                           ;display.c: 225: K10MULT = 1;
  6589  001218  0E00               	movlw	0
  6590  00121A  0100               	movlb	0	; () banked
  6591  00121C  6FFC               	movwf	disp7s_write_f@K10MULT& (0+255),b
  6592  00121E  0E80               	movlw	128
  6593  001220  6FFD               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  6594  001222  0E3F               	movlw	63
  6595  001224  6FFE               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;display.c: 226: for (i=0; i<=NUM_OF_DISP; i++)
  6599  001226  0E00               	movlw	0
  6600  001228  6FFF               	movwf	disp7s_write_f@i& (0+255),b
  6601  00122A  D074               	goto	l5180
  6602  00122C                     l5156:
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;display.c: 227: {;display.c: 228: if (num< K10MULT)
  6606  00122C  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  6607  001230  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  6608  001234  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  6609  001238  C0FC  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  6610  00123C  C0FD  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  6611  001240  C0FE  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  6612  001244  ECA0  F010         	call	___ftge	;wreg free
  6613  001248  B0D8               	btfsc	status,0,c
  6614  00124A  D04E               	goto	l5176
  6615                           
  6616                           ;display.c: 229: {;display.c: 230: if (i<NUM_OF_DISP)
  6617  00124C  0100               	movlb	0	; () banked
  6618  00124E  51FF               	movf	disp7s_write_f@i& (0+255),w,b
  6619  001250  0A80               	xorlw	128
  6620  001252  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6621  001254  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  6622  001256  0A80               	xorlw	128
  6623  001258  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  6624  00125A  B0D8               	btfsc	status,0,c
  6625  00125C  D036               	goto	l5172
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;display.c: 231: {;display.c: 232: I = (int16_t)(num*10);
  6629  00125E  0E00               	movlw	0
  6630  001260  6E16               	movwf	___ftmul@f2,c
  6631  001262  0E20               	movlw	32
  6632  001264  6E17               	movwf	___ftmul@f2+1,c
  6633  001266  0E41               	movlw	65
  6634  001268  6E18               	movwf	___ftmul@f2+2,c
  6635  00126A  C034  F013         	movff	disp7s_write_f@num,___ftmul@f1
  6636  00126E  C035  F014         	movff	disp7s_write_f@num+1,___ftmul@f1+1
  6637  001272  C036  F015         	movff	disp7s_write_f@num+2,___ftmul@f1+2
  6638  001276  EC9A  F00C         	call	___ftmul	;wreg free
  6639  00127A  C013  F022         	movff	?___ftmul,___fttol@f1
  6640  00127E  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  6641  001282  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  6642  001286  EC7F  F00D         	call	___fttol	;wreg free
  6643  00128A  C022  F0F9         	movff	?___fttol,disp7s_write_f@I
  6644  00128E  C023  F0FA         	movff	?___fttol+1,disp7s_write_f@I+1
  6645                           
  6646                           ;display.c: 235: if (i==0)
  6647  001292  0100               	movlb	0	; () banked
  6648  001294  51FF               	movf	disp7s_write_f@i& (0+255),w,b
  6649  001296  A4D8               	btfss	status,2,c
  6650  001298  D00D               	goto	l5166
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;display.c: 236: {pDisp[1]= DISP7S_NUMS[0];}
  6654  00129A  0E01               	movlw	low _DISP7S_NUMS
  6655  00129C  6EF6               	movwf	tblptrl,c
  6656  00129E                     	if	1	;There is more than 1 active tblptr byte
  6657  00129E  0E08               	movlw	high _DISP7S_NUMS
  6658  0012A0  6EF7               	movwf	tblptrh,c
  6659  0012A2                     	endif
  6660  0012A2                     	if	0	;There are less than 3 active tblptr bytes
  6661  0012A2                     	endif
  6662  0012A2  EE20 F001          	lfsr	2,1
  6663  0012A6  5031               	movf	disp7s_write_f@pDisp,w,c
  6664  0012A8  26D9               	addwf	fsr2l,f,c
  6665  0012AA  5032               	movf	disp7s_write_f@pDisp+1,w,c
  6666  0012AC  22DA               	addwfc	fsr2h,f,c
  6667  0012AE  0008               	tblrd		*
  6668  0012B0  CFF5 FFDF          	movff	tablat,indf2
  6669  0012B4                     l5166:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;display.c: 238: pDisp[1] |= 0x80;
  6673  0012B4  EE20 F001          	lfsr	2,1
  6674  0012B8  5031               	movf	disp7s_write_f@pDisp,w,c
  6675  0012BA  26D9               	addwf	fsr2l,f,c
  6676  0012BC  5032               	movf	disp7s_write_f@pDisp+1,w,c
  6677  0012BE  22DA               	addwfc	fsr2h,f,c
  6678  0012C0  0E00               	movlw	0
  6679  0012C2  8EDB               	bsf	plusw2,7,c
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;display.c: 239: pi = i;
  6683  0012C4  C0FF  F0FB         	movff	disp7s_write_f@i,disp7s_write_f@pi
  6684                           
  6685                           ;display.c: 240: break;
  6686  0012C8  D02D               	goto	u5510
  6687  0012CA                     l5172:
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;display.c: 242: else;display.c: 243: {;display.c: 244: I = (int16_t)(num);
  6691  0012CA  C034  F022         	movff	disp7s_write_f@num,___fttol@f1
  6692  0012CE  C035  F023         	movff	disp7s_write_f@num+1,___fttol@f1+1
  6693  0012D2  C036  F024         	movff	disp7s_write_f@num+2,___fttol@f1+2
  6694  0012D6  EC7F  F00D         	call	___fttol	;wreg free
  6695  0012DA  C022  F0F9         	movff	?___fttol,disp7s_write_f@I
  6696  0012DE  C023  F0FA         	movff	?___fttol+1,disp7s_write_f@I+1
  6697                           
  6698                           ;display.c: 245: pi = i-1;
  6699  0012E2  0100               	movlb	0	; () banked
  6700  0012E4  05FF               	decf	disp7s_write_f@i& (0+255),w,b
  6701  0012E6  6FFB               	movwf	disp7s_write_f@pi& (0+255),b
  6702  0012E8                     l5176:
  6703                           
  6704                           ;display.c: 246: };display.c: 247: };display.c: 248: K10MULT *= 10;
  6705  0012E8  C0FC  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  6706  0012EC  C0FD  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  6707  0012F0  C0FE  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  6708  0012F4  0E00               	movlw	0
  6709  0012F6  6E16               	movwf	___ftmul@f2,c
  6710  0012F8  0E20               	movlw	32
  6711  0012FA  6E17               	movwf	___ftmul@f2+1,c
  6712  0012FC  0E41               	movlw	65
  6713  0012FE  6E18               	movwf	___ftmul@f2+2,c
  6714  001300  EC9A  F00C         	call	___ftmul	;wreg free
  6715  001304  C013  F0FC         	movff	?___ftmul,disp7s_write_f@K10MULT
  6716  001308  C014  F0FD         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  6717  00130C  C015  F0FE         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  6718  001310  0100               	movlb	0	; () banked
  6719  001312  2BFF               	incf	disp7s_write_f@i& (0+255),f,b
  6720  001314                     l5180:
  6721                           
  6722                           ; BSR set to: 0
  6723  001314  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  6724  001316  0A80               	xorlw	128
  6725  001318  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6726  00131A  51FF               	movf	disp7s_write_f@i& (0+255),w,b
  6727  00131C  0A80               	xorlw	128
  6728  00131E  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  6729  001320  B0D8               	btfsc	status,0,c
  6730  001322  D784               	goto	l5156
  6731  001324                     u5510:
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;display.c: 249: };display.c: 251: itoa(buff, I, 10);
  6735  001324  0EEF               	movlw	low disp7s_write_f@buff
  6736  001326  6E1A               	movwf	itoa@buf,c
  6737  001328  C0F9  F01B         	movff	disp7s_write_f@I,itoa@val
  6738  00132C  C0FA  F01C         	movff	disp7s_write_f@I+1,itoa@val+1
  6739  001330  0E00               	movlw	0
  6740  001332  6E1E               	movwf	itoa@base+1,c
  6741  001334  0E0A               	movlw	10
  6742  001336  6E1D               	movwf	itoa@base,c
  6743  001338  EC50  F013         	call	_itoa	;wreg free
  6744                           
  6745                           ;display.c: 253: i=0;
  6746  00133C  0E00               	movlw	0
  6747  00133E  0100               	movlb	0	; () banked
  6748  001340  6FFF               	movwf	disp7s_write_f@i& (0+255),b
  6749                           
  6750                           ;display.c: 254: while (buff[i] != '\0')
  6751  001342  D021               	goto	l5192
  6752  001344                     l5186:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;display.c: 255: {;display.c: 256: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  6756  001344  51FF               	movf	disp7s_write_f@i& (0+255),w,b
  6757  001346  0FEF               	addlw	low disp7s_write_f@buff
  6758  001348  6ED9               	movwf	fsr2l,c
  6759  00134A  6ADA               	clrf	fsr2h,c
  6760  00134C  50DF               	movf	indf2,w,c
  6761  00134E  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6762  001350  0ED0               	movlw	208
  6763  001352  2637               	addwf	??_disp7s_write_f,f,c
  6764  001354  5037               	movf	??_disp7s_write_f,w,c
  6765  001356  0F01               	addlw	low _DISP7S_NUMS
  6766  001358  6E38               	movwf	(??_disp7s_write_f+1)& (0+255),c
  6767  00135A  C038  FFF6         	movff	??_disp7s_write_f+1,tblptrl
  6768  00135E                     	if	1	;There is more than 1 active tblptr byte
  6769  00135E  0E08               	movlw	high __smallconst
  6770  001360  6EF7               	movwf	tblptrh,c
  6771  001362                     	endif
  6772  001362                     	if	0	;tblptru may be non-zero
  6773  001362                     	endif
  6774  001362                     	if	0	;tblptru may be non-zero
  6775  001362                     	endif
  6776  001362  0008               	tblrd		*
  6777  001364  CFF5 F039          	movff	tablat,??_disp7s_write_f+2
  6778  001368  C0FB  F03A         	movff	disp7s_write_f@pi,??_disp7s_write_f+3
  6779  00136C  6A3B               	clrf	(??_disp7s_write_f+4)& (0+255),c
  6780  00136E  BE3A               	btfsc	(??_disp7s_write_f+3)& (0+255),7,c
  6781  001370  063B               	decf	(??_disp7s_write_f+4)& (0+255),f,c
  6782  001372  503A               	movf	??_disp7s_write_f+3,w,c
  6783  001374  2431               	addwf	disp7s_write_f@pDisp,w,c
  6784  001376  6ED9               	movwf	fsr2l,c
  6785  001378  503B               	movf	??_disp7s_write_f+4,w,c
  6786  00137A  2032               	addwfc	disp7s_write_f@pDisp+1,w,c
  6787  00137C  6EDA               	movwf	fsr2h,c
  6788  00137E  5039               	movf	??_disp7s_write_f+2,w,c
  6789  001380  12DF               	iorwf	indf2,f,c
  6790                           
  6791                           ; BSR set to: 0
  6792  001382  07FB               	decf	disp7s_write_f@pi& (0+255),f,b
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;display.c: 257: i++;
  6796  001384  2BFF               	incf	disp7s_write_f@i& (0+255),f,b
  6797  001386                     l5192:
  6798                           
  6799                           ; BSR set to: 0
  6800  001386  51FF               	movf	disp7s_write_f@i& (0+255),w,b
  6801  001388  0FEF               	addlw	low disp7s_write_f@buff
  6802  00138A  6ED9               	movwf	fsr2l,c
  6803  00138C  6ADA               	clrf	fsr2h,c
  6804  00138E  50DF               	movf	indf2,w,c
  6805  001390  B4D8               	btfsc	status,2,c
  6806  001392  0012               	return	
  6807  001394  D7D7               	goto	l5186
  6808  001396                     __end_of_disp7s_write_f:
  6809                           	opt callstack 0
  6810                           
  6811 ;; *************** function _disp7s_off *****************
  6812 ;; Defined at:
  6813 ;;		line 150 in file "display.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  pDisp           2   10[COMRAM] PTR unsigned char 
  6816 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  6817 ;;  NUM_OF_DISP     1   12[COMRAM] char 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  i               1   15[COMRAM] char 
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      void 
  6822 ;; Registers used:
  6823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6829 ;;      Params:         3       0       0       0       0       0       0       0       0
  6830 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6831 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6832 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6833 ;;Total ram usage:        6 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    5
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_disp7s_modeDisp_off
  6840 ;;		_disp7s_write_f
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text46
  6845  002662                     __ptext46:
  6846                           	opt callstack 0
  6847  002662                     _disp7s_off:
  6848                           	opt callstack 21
  6849                           
  6850                           ;display.c: 152: int8_t i;;display.c: 153: for (i=0; i<NUM_OF_DISP; i++)
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;incstack = 0
  6854  002662  0E00               	movlw	0
  6855  002664  6E10               	movwf	disp7s_off@i,c
  6856  002666  D013               	goto	l4926
  6857  002668                     l4922:
  6858                           
  6859                           ;display.c: 154: {pDisp[i] = DISP7S_CHARS[OFF];}
  6860  002668  0E0F               	movlw	low _DISP7S_CHARS
  6861  00266A  6EF6               	movwf	tblptrl,c
  6862  00266C                     	if	1	;There is more than 1 active tblptr byte
  6863  00266C  0E08               	movlw	high _DISP7S_CHARS
  6864  00266E  6EF7               	movwf	tblptrh,c
  6865  002670                     	endif
  6866  002670                     	if	0	;There are less than 3 active tblptr bytes
  6867  002670                     	endif
  6868  002670  C010  F00E         	movff	disp7s_off@i,??_disp7s_off
  6869  002674  6A0F               	clrf	(??_disp7s_off+1)& (0+255),c
  6870  002676  BE0E               	btfsc	??_disp7s_off& (0+255),7,c
  6871  002678  060F               	decf	(??_disp7s_off+1)& (0+255),f,c
  6872  00267A  500E               	movf	??_disp7s_off,w,c
  6873  00267C  240B               	addwf	disp7s_off@pDisp,w,c
  6874  00267E  6ED9               	movwf	fsr2l,c
  6875  002680  500F               	movf	??_disp7s_off+1,w,c
  6876  002682  200C               	addwfc	disp7s_off@pDisp+1,w,c
  6877  002684  6EDA               	movwf	fsr2h,c
  6878  002686  0008               	tblrd		*
  6879  002688  CFF5 FFDF          	movff	tablat,indf2
  6880  00268C  2A10               	incf	disp7s_off@i,f,c
  6881  00268E                     l4926:
  6882  00268E  5010               	movf	disp7s_off@i,w,c
  6883  002690  0A80               	xorlw	128
  6884  002692  6E0E               	movwf	??_disp7s_off& (0+255),c
  6885  002694  500D               	movf	disp7s_off@NUM_OF_DISP,w,c
  6886  002696  0A80               	xorlw	128
  6887  002698  5C0E               	subwf	??_disp7s_off& (0+255),w,c
  6888  00269A  B0D8               	btfsc	status,0,c
  6889  00269C  0012               	return	
  6890  00269E  D7E4               	goto	l4922
  6891  0026A0                     __end_of_disp7s_off:
  6892                           	opt callstack 0
  6893                           
  6894 ;; *************** function ___fttol *****************
  6895 ;; Defined at:
  6896 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  f1              3   33[COMRAM] float 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  lval            4   43[COMRAM] unsigned long 
  6901 ;;  exp1            1   47[COMRAM] unsigned char 
  6902 ;;  sign1           1   42[COMRAM] unsigned char 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  4   33[COMRAM] long 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6912 ;;      Params:         4       0       0       0       0       0       0       0       0
  6913 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6914 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6915 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6916 ;;Total ram usage:       15 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    5
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_disp7s_write_f
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text47
  6927  001AFE                     __ptext47:
  6928                           	opt callstack 0
  6929  001AFE                     ___fttol:
  6930                           	opt callstack 21
  6931                           
  6932                           ;incstack = 0
  6933  001AFE  C024  F026         	movff	___fttol@f1+2,??___fttol
  6934  001B02  6A27               	clrf	(??___fttol+1)& (0+255),c
  6935  001B04  6A28               	clrf	(??___fttol+2)& (0+255),c
  6936  001B06  3423               	rlcf	___fttol@f1+1,w,c
  6937  001B08  3626               	rlcf	??___fttol& (0+255),f,c
  6938  001B0A  E301               	bnc	u5381
  6939  001B0C  8027               	bsf	(??___fttol+1)& (0+255),0,c
  6940  001B0E                     u5381:
  6941  001B0E  5026               	movf	??___fttol,w,c
  6942  001B10  6E30               	movwf	___fttol@exp1,c
  6943  001B12  5030               	movf	___fttol@exp1,w,c
  6944  001B14  A4D8               	btfss	status,2,c
  6945  001B16  D009               	goto	l5098
  6946  001B18                     u5390:
  6947  001B18  0E00               	movlw	0
  6948  001B1A  6E22               	movwf	?___fttol,c
  6949  001B1C  0E00               	movlw	0
  6950  001B1E  6E23               	movwf	?___fttol+1,c
  6951  001B20  0E00               	movlw	0
  6952  001B22  6E24               	movwf	?___fttol+2,c
  6953  001B24  0E00               	movlw	0
  6954  001B26  6E25               	movwf	?___fttol+3,c
  6955  001B28  0012               	return	
  6956  001B2A                     l5098:
  6957  001B2A  0E17               	movlw	23
  6958  001B2C  6E26               	movwf	??___fttol& (0+255),c
  6959  001B2E  C022  F027         	movff	___fttol@f1,??___fttol+1
  6960  001B32  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  6961  001B36  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  6962  001B3A  2826               	incf	??___fttol,w,c
  6963  001B3C  6E2A               	movwf	(??___fttol+4)& (0+255),c
  6964  001B3E  D004               	goto	u5400
  6965  001B40                     u5405:
  6966  001B40  90D8               	bcf	status,0,c
  6967  001B42  3229               	rrcf	??___fttol+3,f,c
  6968  001B44  3228               	rrcf	??___fttol+2,f,c
  6969  001B46  3227               	rrcf	??___fttol+1,f,c
  6970  001B48                     u5400:
  6971  001B48  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  6972  001B4A  D7FA               	goto	u5405
  6973  001B4C  5027               	movf	??___fttol+1,w,c
  6974  001B4E  6E2B               	movwf	___fttol@sign1,c
  6975  001B50  8E23               	bsf	___fttol@f1+1,7,c
  6976  001B52  0EFF               	movlw	255
  6977  001B54  1622               	andwf	___fttol@f1,f,c
  6978  001B56  0EFF               	movlw	255
  6979  001B58  1623               	andwf	___fttol@f1+1,f,c
  6980  001B5A  0E00               	movlw	0
  6981  001B5C  1624               	andwf	___fttol@f1+2,f,c
  6982  001B5E  5022               	movf	___fttol@f1,w,c
  6983  001B60  6E2C               	movwf	___fttol@lval,c
  6984  001B62  5023               	movf	___fttol@f1+1,w,c
  6985  001B64  6E2D               	movwf	___fttol@lval+1,c
  6986  001B66  5024               	movf	___fttol@f1+2,w,c
  6987  001B68  6E2E               	movwf	___fttol@lval+2,c
  6988  001B6A  6A2F               	clrf	___fttol@lval+3,c
  6989  001B6C  0E8E               	movlw	142
  6990  001B6E  5E30               	subwf	___fttol@exp1,f,c
  6991  001B70  AE30               	btfss	___fttol@exp1,7,c
  6992  001B72  D00D               	goto	l5120
  6993  001B74  5030               	movf	___fttol@exp1,w,c
  6994  001B76  0A80               	xorlw	128
  6995  001B78  0F8F               	addlw	143
  6996  001B7A  A0D8               	btfss	status,0,c
  6997  001B7C  D7CD               	goto	u5390
  6998  001B7E                     l5116:
  6999  001B7E  90D8               	bcf	status,0,c
  7000  001B80  322F               	rrcf	___fttol@lval+3,f,c
  7001  001B82  322E               	rrcf	___fttol@lval+2,f,c
  7002  001B84  322D               	rrcf	___fttol@lval+1,f,c
  7003  001B86  322C               	rrcf	___fttol@lval,f,c
  7004  001B88  3E30               	incfsz	___fttol@exp1,f,c
  7005  001B8A  D7F9               	goto	l5116
  7006  001B8C  D00D               	goto	u5440
  7007  001B8E                     l5120:
  7008  001B8E  0E17               	movlw	23
  7009  001B90  6430               	cpfsgt	___fttol@exp1,c
  7010  001B92  D007               	goto	l5128
  7011  001B94  D7C1               	goto	u5390
  7012  001B96                     l5126:
  7013  001B96  90D8               	bcf	status,0,c
  7014  001B98  362C               	rlcf	___fttol@lval,f,c
  7015  001B9A  362D               	rlcf	___fttol@lval+1,f,c
  7016  001B9C  362E               	rlcf	___fttol@lval+2,f,c
  7017  001B9E  362F               	rlcf	___fttol@lval+3,f,c
  7018  001BA0  0630               	decf	___fttol@exp1,f,c
  7019  001BA2                     l5128:
  7020  001BA2  5030               	movf	___fttol@exp1,w,c
  7021  001BA4  A4D8               	btfss	status,2,c
  7022  001BA6  D7F7               	goto	l5126
  7023  001BA8                     u5440:
  7024  001BA8  502B               	movf	___fttol@sign1,w,c
  7025  001BAA  B4D8               	btfsc	status,2,c
  7026  001BAC  D008               	goto	l5134
  7027  001BAE  1E2F               	comf	___fttol@lval+3,f,c
  7028  001BB0  1E2E               	comf	___fttol@lval+2,f,c
  7029  001BB2  1E2D               	comf	___fttol@lval+1,f,c
  7030  001BB4  6C2C               	negf	___fttol@lval,c
  7031  001BB6  0E00               	movlw	0
  7032  001BB8  222D               	addwfc	___fttol@lval+1,f,c
  7033  001BBA  222E               	addwfc	___fttol@lval+2,f,c
  7034  001BBC  222F               	addwfc	___fttol@lval+3,f,c
  7035  001BBE                     l5134:
  7036  001BBE  C02C  F022         	movff	___fttol@lval,?___fttol
  7037  001BC2  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  7038  001BC6  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  7039  001BCA  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  7040  001BCE  0012               	return		;funcret
  7041  001BD0                     __end_of___fttol:
  7042                           	opt callstack 0
  7043                           
  7044 ;; *************** function ___ftmul *****************
  7045 ;; Defined at:
  7046 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  f1              3   18[COMRAM] float 
  7049 ;;  f2              3   21[COMRAM] float 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  7052 ;;  sign            1   32[COMRAM] unsigned char 
  7053 ;;  cntr            1   31[COMRAM] unsigned char 
  7054 ;;  exp             1   27[COMRAM] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  3   18[COMRAM] float 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7064 ;;      Params:         6       0       0       0       0       0       0       0       0
  7065 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7066 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7067 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7068 ;;Total ram usage:       15 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    6
  7071 ;; This function calls:
  7072 ;;		___ftpack
  7073 ;; This function is called by:
  7074 ;;		_disp7s_write_f
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text48
  7079  001934                     __ptext48:
  7080                           	opt callstack 0
  7081  001934                     ___ftmul:
  7082                           	opt callstack 20
  7083                           
  7084                           ;incstack = 0
  7085  001934  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  7086  001938  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  7087  00193A  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  7088  00193C  3414               	rlcf	___ftmul@f1+1,w,c
  7089  00193E  3619               	rlcf	??___ftmul& (0+255),f,c
  7090  001940  E301               	bnc	u5291
  7091  001942  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  7092  001944                     u5291:
  7093  001944  5019               	movf	??___ftmul,w,c
  7094  001946  6E1C               	movwf	___ftmul@exp,c
  7095  001948  501C               	movf	___ftmul@exp,w,c
  7096  00194A  A4D8               	btfss	status,2,c
  7097  00194C  D007               	goto	l5032
  7098  00194E  0E00               	movlw	0
  7099  001950  6E13               	movwf	?___ftmul,c
  7100  001952  0E00               	movlw	0
  7101  001954  6E14               	movwf	?___ftmul+1,c
  7102  001956  0E00               	movlw	0
  7103  001958  6E15               	movwf	?___ftmul+2,c
  7104  00195A  0012               	return	
  7105  00195C                     l5032:
  7106  00195C  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  7107  001960  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  7108  001962  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  7109  001964  3417               	rlcf	___ftmul@f2+1,w,c
  7110  001966  3619               	rlcf	??___ftmul& (0+255),f,c
  7111  001968  E301               	bnc	u5311
  7112  00196A  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  7113  00196C                     u5311:
  7114  00196C  5019               	movf	??___ftmul,w,c
  7115  00196E  6E21               	movwf	___ftmul@sign,c
  7116  001970  5021               	movf	___ftmul@sign,w,c
  7117  001972  A4D8               	btfss	status,2,c
  7118  001974  D007               	goto	l5038
  7119  001976  0E00               	movlw	0
  7120  001978  6E13               	movwf	?___ftmul,c
  7121  00197A  0E00               	movlw	0
  7122  00197C  6E14               	movwf	?___ftmul+1,c
  7123  00197E  0E00               	movlw	0
  7124  001980  6E15               	movwf	?___ftmul+2,c
  7125  001982  0012               	return	
  7126  001984                     l5038:
  7127  001984  5021               	movf	___ftmul@sign,w,c
  7128  001986  0F7B               	addlw	123
  7129  001988  261C               	addwf	___ftmul@exp,f,c
  7130  00198A  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  7131  00198E  5018               	movf	___ftmul@f2+2,w,c
  7132  001990  1A21               	xorwf	___ftmul@sign,f,c
  7133  001992  0E80               	movlw	128
  7134  001994  1621               	andwf	___ftmul@sign,f,c
  7135  001996  8E14               	bsf	___ftmul@f1+1,7,c
  7136  001998  8E17               	bsf	___ftmul@f2+1,7,c
  7137  00199A  0EFF               	movlw	255
  7138  00199C  1616               	andwf	___ftmul@f2,f,c
  7139  00199E  0EFF               	movlw	255
  7140  0019A0  1617               	andwf	___ftmul@f2+1,f,c
  7141  0019A2  0E00               	movlw	0
  7142  0019A4  1618               	andwf	___ftmul@f2+2,f,c
  7143  0019A6  0E00               	movlw	0
  7144  0019A8  6E1D               	movwf	___ftmul@f3_as_product,c
  7145  0019AA  0E00               	movlw	0
  7146  0019AC  6E1E               	movwf	___ftmul@f3_as_product+1,c
  7147  0019AE  0E00               	movlw	0
  7148  0019B0  6E1F               	movwf	___ftmul@f3_as_product+2,c
  7149  0019B2  0E07               	movlw	7
  7150  0019B4  6E20               	movwf	___ftmul@cntr,c
  7151  0019B6                     l5052:
  7152  0019B6  A013               	btfss	___ftmul@f1,0,c
  7153  0019B8  D006               	goto	l5056
  7154  0019BA  5016               	movf	___ftmul@f2,w,c
  7155  0019BC  261D               	addwf	___ftmul@f3_as_product,f,c
  7156  0019BE  5017               	movf	___ftmul@f2+1,w,c
  7157  0019C0  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  7158  0019C2  5018               	movf	___ftmul@f2+2,w,c
  7159  0019C4  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  7160  0019C6                     l5056:
  7161  0019C6  90D8               	bcf	status,0,c
  7162  0019C8  3215               	rrcf	___ftmul@f1+2,f,c
  7163  0019CA  3214               	rrcf	___ftmul@f1+1,f,c
  7164  0019CC  3213               	rrcf	___ftmul@f1,f,c
  7165  0019CE  90D8               	bcf	status,0,c
  7166  0019D0  3616               	rlcf	___ftmul@f2,f,c
  7167  0019D2  3617               	rlcf	___ftmul@f2+1,f,c
  7168  0019D4  3618               	rlcf	___ftmul@f2+2,f,c
  7169  0019D6  2E20               	decfsz	___ftmul@cntr,f,c
  7170  0019D8  D7EE               	goto	l5052
  7171  0019DA  0E09               	movlw	9
  7172  0019DC  6E20               	movwf	___ftmul@cntr,c
  7173  0019DE                     l5062:
  7174  0019DE  A013               	btfss	___ftmul@f1,0,c
  7175  0019E0  D006               	goto	l5066
  7176  0019E2  5016               	movf	___ftmul@f2,w,c
  7177  0019E4  261D               	addwf	___ftmul@f3_as_product,f,c
  7178  0019E6  5017               	movf	___ftmul@f2+1,w,c
  7179  0019E8  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  7180  0019EA  5018               	movf	___ftmul@f2+2,w,c
  7181  0019EC  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  7182  0019EE                     l5066:
  7183  0019EE  90D8               	bcf	status,0,c
  7184  0019F0  3215               	rrcf	___ftmul@f1+2,f,c
  7185  0019F2  3214               	rrcf	___ftmul@f1+1,f,c
  7186  0019F4  3213               	rrcf	___ftmul@f1,f,c
  7187  0019F6  90D8               	bcf	status,0,c
  7188  0019F8  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  7189  0019FA  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  7190  0019FC  321D               	rrcf	___ftmul@f3_as_product,f,c
  7191  0019FE  2E20               	decfsz	___ftmul@cntr,f,c
  7192  001A00  D7EE               	goto	l5062
  7193  001A02  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  7194  001A06  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7195  001A0A  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7196  001A0E  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  7197  001A12  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  7198  001A16  ECE8  F00D         	call	___ftpack	;wreg free
  7199  001A1A  C00B  F013         	movff	?___ftpack,?___ftmul
  7200  001A1E  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  7201  001A22  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  7202  001A26  0012               	return		;funcret
  7203  001A28                     __end_of___ftmul:
  7204                           	opt callstack 0
  7205                           
  7206 ;; *************** function ___ftadd *****************
  7207 ;; Defined at:
  7208 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  f1              3   18[COMRAM] float 
  7211 ;;  f2              3   21[COMRAM] float 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  exp1            1   29[COMRAM] unsigned char 
  7214 ;;  exp2            1   28[COMRAM] unsigned char 
  7215 ;;  sign            1   27[COMRAM] unsigned char 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  3   18[COMRAM] float 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0, cstack
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7225 ;;      Params:         6       0       0       0       0       0       0       0       0
  7226 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7227 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7228 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7229 ;;Total ram usage:       12 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    6
  7232 ;; This function calls:
  7233 ;;		___ftpack
  7234 ;; This function is called by:
  7235 ;;		_pulsonic_getTotalSum_mlh
  7236 ;;		_disp7s_write_f
  7237 ;;		_configMode_kb
  7238 ;;		___ftsub
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text49
  7243  001396                     __ptext49:
  7244                           	opt callstack 0
  7245  001396                     ___ftadd:
  7246                           	opt callstack 20
  7247                           
  7248                           ;incstack = 0
  7249  001396  C015  F019         	movff	___ftadd@f1+2,??___ftadd
  7250  00139A  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  7251  00139C  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  7252  00139E  3414               	rlcf	___ftadd@f1+1,w,c
  7253  0013A0  3619               	rlcf	??___ftadd& (0+255),f,c
  7254  0013A2  E301               	bnc	u5081
  7255  0013A4  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  7256  0013A6                     u5081:
  7257  0013A6  5019               	movf	??___ftadd,w,c
  7258  0013A8  6E1E               	movwf	___ftadd@exp1,c
  7259  0013AA  C018  F019         	movff	___ftadd@f2+2,??___ftadd
  7260  0013AE  6A1A               	clrf	(??___ftadd+1)& (0+255),c
  7261  0013B0  6A1B               	clrf	(??___ftadd+2)& (0+255),c
  7262  0013B2  3417               	rlcf	___ftadd@f2+1,w,c
  7263  0013B4  3619               	rlcf	??___ftadd& (0+255),f,c
  7264  0013B6  E301               	bnc	u5091
  7265  0013B8  801A               	bsf	(??___ftadd+1)& (0+255),0,c
  7266  0013BA                     u5091:
  7267  0013BA  5019               	movf	??___ftadd,w,c
  7268  0013BC  6E1D               	movwf	___ftadd@exp2,c
  7269  0013BE  501E               	movf	___ftadd@exp1,w,c
  7270  0013C0  B4D8               	btfsc	status,2,c
  7271  0013C2  D00A               	goto	u5120
  7272  0013C4  501D               	movf	___ftadd@exp2,w,c
  7273  0013C6  5C1E               	subwf	___ftadd@exp1,w,c
  7274  0013C8  B0D8               	btfsc	status,0,c
  7275  0013CA  D00D               	goto	l4964
  7276  0013CC  501E               	movf	___ftadd@exp1,w,c
  7277  0013CE  5C1D               	subwf	___ftadd@exp2,w,c
  7278  0013D0  6E19               	movwf	??___ftadd& (0+255),c
  7279  0013D2  0E18               	movlw	24
  7280  0013D4  6419               	cpfsgt	??___ftadd,c
  7281  0013D6  D007               	goto	l4964
  7282  0013D8                     u5120:
  7283  0013D8  C016  F013         	movff	___ftadd@f2,?___ftadd
  7284  0013DC  C017  F014         	movff	___ftadd@f2+1,?___ftadd+1
  7285  0013E0  C018  F015         	movff	___ftadd@f2+2,?___ftadd+2
  7286  0013E4  0012               	return	
  7287  0013E6                     l4964:
  7288  0013E6  501D               	movf	___ftadd@exp2,w,c
  7289  0013E8  B4D8               	btfsc	status,2,c
  7290  0013EA  D00A               	goto	u5150
  7291  0013EC  501E               	movf	___ftadd@exp1,w,c
  7292  0013EE  5C1D               	subwf	___ftadd@exp2,w,c
  7293  0013F0  B0D8               	btfsc	status,0,c
  7294  0013F2  D00D               	goto	l4970
  7295  0013F4  501D               	movf	___ftadd@exp2,w,c
  7296  0013F6  5C1E               	subwf	___ftadd@exp1,w,c
  7297  0013F8  6E19               	movwf	??___ftadd& (0+255),c
  7298  0013FA  0E18               	movlw	24
  7299  0013FC  6419               	cpfsgt	??___ftadd,c
  7300  0013FE  D007               	goto	l4970
  7301  001400                     u5150:
  7302  001400  C013  F013         	movff	___ftadd@f1,?___ftadd
  7303  001404  C014  F014         	movff	___ftadd@f1+1,?___ftadd+1
  7304  001408  C015  F015         	movff	___ftadd@f1+2,?___ftadd+2
  7305  00140C  0012               	return	
  7306  00140E                     l4970:
  7307  00140E  0E06               	movlw	6
  7308  001410  6E1C               	movwf	___ftadd@sign,c
  7309  001412  BE15               	btfsc	___ftadd@f1+2,7,c
  7310  001414  8E1C               	bsf	___ftadd@sign,7,c
  7311  001416  BE18               	btfsc	___ftadd@f2+2,7,c
  7312  001418  8C1C               	bsf	___ftadd@sign,6,c
  7313  00141A  8E14               	bsf	___ftadd@f1+1,7,c
  7314  00141C  0EFF               	movlw	255
  7315  00141E  1613               	andwf	___ftadd@f1,f,c
  7316  001420  0EFF               	movlw	255
  7317  001422  1614               	andwf	___ftadd@f1+1,f,c
  7318  001424  0E00               	movlw	0
  7319  001426  1615               	andwf	___ftadd@f1+2,f,c
  7320  001428  8E17               	bsf	___ftadd@f2+1,7,c
  7321  00142A  0EFF               	movlw	255
  7322  00142C  1616               	andwf	___ftadd@f2,f,c
  7323  00142E  0EFF               	movlw	255
  7324  001430  1617               	andwf	___ftadd@f2+1,f,c
  7325  001432  0E00               	movlw	0
  7326  001434  1618               	andwf	___ftadd@f2+2,f,c
  7327  001436  501D               	movf	___ftadd@exp2,w,c
  7328  001438  5C1E               	subwf	___ftadd@exp1,w,c
  7329  00143A  B0D8               	btfsc	status,0,c
  7330  00143C  D01B               	goto	l4996
  7331  00143E                     u5180:
  7332  00143E  90D8               	bcf	status,0,c
  7333  001440  3616               	rlcf	___ftadd@f2,f,c
  7334  001442  3617               	rlcf	___ftadd@f2+1,f,c
  7335  001444  3618               	rlcf	___ftadd@f2+2,f,c
  7336  001446  061D               	decf	___ftadd@exp2,f,c
  7337  001448  501E               	movf	___ftadd@exp1,w,c
  7338  00144A  181D               	xorwf	___ftadd@exp2,w,c
  7339  00144C  B4D8               	btfsc	status,2,c
  7340  00144E  D00D               	goto	l4994
  7341  001450  061C               	decf	___ftadd@sign,f,c
  7342  001452  C01C  F019         	movff	___ftadd@sign,??___ftadd
  7343  001456  0E07               	movlw	7
  7344  001458  1619               	andwf	??___ftadd,f,c
  7345  00145A  B4D8               	btfsc	status,2,c
  7346  00145C  D006               	goto	l4994
  7347  00145E  D7EF               	goto	u5180
  7348  001460                     l4992:
  7349  001460  90D8               	bcf	status,0,c
  7350  001462  3215               	rrcf	___ftadd@f1+2,f,c
  7351  001464  3214               	rrcf	___ftadd@f1+1,f,c
  7352  001466  3213               	rrcf	___ftadd@f1,f,c
  7353  001468  2A1E               	incf	___ftadd@exp1,f,c
  7354  00146A                     l4994:
  7355  00146A  501D               	movf	___ftadd@exp2,w,c
  7356  00146C  181E               	xorwf	___ftadd@exp1,w,c
  7357  00146E  B4D8               	btfsc	status,2,c
  7358  001470  D01F               	goto	u5250
  7359  001472  D7F6               	goto	l4992
  7360  001474                     l4996:
  7361  001474  501E               	movf	___ftadd@exp1,w,c
  7362  001476  5C1D               	subwf	___ftadd@exp2,w,c
  7363  001478  B0D8               	btfsc	status,0,c
  7364  00147A  D01A               	goto	u5250
  7365  00147C                     u5220:
  7366  00147C  90D8               	bcf	status,0,c
  7367  00147E  3613               	rlcf	___ftadd@f1,f,c
  7368  001480  3614               	rlcf	___ftadd@f1+1,f,c
  7369  001482  3615               	rlcf	___ftadd@f1+2,f,c
  7370  001484  061E               	decf	___ftadd@exp1,f,c
  7371  001486  501E               	movf	___ftadd@exp1,w,c
  7372  001488  181D               	xorwf	___ftadd@exp2,w,c
  7373  00148A  B4D8               	btfsc	status,2,c
  7374  00148C  D00D               	goto	l5006
  7375  00148E  061C               	decf	___ftadd@sign,f,c
  7376  001490  C01C  F019         	movff	___ftadd@sign,??___ftadd
  7377  001494  0E07               	movlw	7
  7378  001496  1619               	andwf	??___ftadd,f,c
  7379  001498  B4D8               	btfsc	status,2,c
  7380  00149A  D006               	goto	l5006
  7381  00149C  D7EF               	goto	u5220
  7382  00149E                     l5004:
  7383  00149E  90D8               	bcf	status,0,c
  7384  0014A0  3218               	rrcf	___ftadd@f2+2,f,c
  7385  0014A2  3217               	rrcf	___ftadd@f2+1,f,c
  7386  0014A4  3216               	rrcf	___ftadd@f2,f,c
  7387  0014A6  2A1D               	incf	___ftadd@exp2,f,c
  7388  0014A8                     l5006:
  7389  0014A8  501D               	movf	___ftadd@exp2,w,c
  7390  0014AA  181E               	xorwf	___ftadd@exp1,w,c
  7391  0014AC  A4D8               	btfss	status,2,c
  7392  0014AE  D7F7               	goto	l5004
  7393  0014B0                     u5250:
  7394  0014B0  AE1C               	btfss	___ftadd@sign,7,c
  7395  0014B2  D00C               	goto	l1321
  7396  0014B4  0EFF               	movlw	255
  7397  0014B6  1A13               	xorwf	___ftadd@f1,f,c
  7398  0014B8  0EFF               	movlw	255
  7399  0014BA  1A14               	xorwf	___ftadd@f1+1,f,c
  7400  0014BC  0EFF               	movlw	255
  7401  0014BE  1A15               	xorwf	___ftadd@f1+2,f,c
  7402  0014C0  0E01               	movlw	1
  7403  0014C2  2613               	addwf	___ftadd@f1,f,c
  7404  0014C4  0E00               	movlw	0
  7405  0014C6  2214               	addwfc	___ftadd@f1+1,f,c
  7406  0014C8  0E00               	movlw	0
  7407  0014CA  2215               	addwfc	___ftadd@f1+2,f,c
  7408  0014CC                     l1321:
  7409  0014CC  AC1C               	btfss	___ftadd@sign,6,c
  7410  0014CE  D00C               	goto	l5012
  7411  0014D0  0EFF               	movlw	255
  7412  0014D2  1A16               	xorwf	___ftadd@f2,f,c
  7413  0014D4  0EFF               	movlw	255
  7414  0014D6  1A17               	xorwf	___ftadd@f2+1,f,c
  7415  0014D8  0EFF               	movlw	255
  7416  0014DA  1A18               	xorwf	___ftadd@f2+2,f,c
  7417  0014DC  0E01               	movlw	1
  7418  0014DE  2616               	addwf	___ftadd@f2,f,c
  7419  0014E0  0E00               	movlw	0
  7420  0014E2  2217               	addwfc	___ftadd@f2+1,f,c
  7421  0014E4  0E00               	movlw	0
  7422  0014E6  2218               	addwfc	___ftadd@f2+2,f,c
  7423  0014E8                     l5012:
  7424  0014E8  0E00               	movlw	0
  7425  0014EA  6E1C               	movwf	___ftadd@sign,c
  7426  0014EC  5013               	movf	___ftadd@f1,w,c
  7427  0014EE  2616               	addwf	___ftadd@f2,f,c
  7428  0014F0  5014               	movf	___ftadd@f1+1,w,c
  7429  0014F2  2217               	addwfc	___ftadd@f2+1,f,c
  7430  0014F4  5015               	movf	___ftadd@f1+2,w,c
  7431  0014F6  2218               	addwfc	___ftadd@f2+2,f,c
  7432  0014F8  AE18               	btfss	___ftadd@f2+2,7,c
  7433  0014FA  D00E               	goto	l5022
  7434  0014FC  0EFF               	movlw	255
  7435  0014FE  1A16               	xorwf	___ftadd@f2,f,c
  7436  001500  0EFF               	movlw	255
  7437  001502  1A17               	xorwf	___ftadd@f2+1,f,c
  7438  001504  0EFF               	movlw	255
  7439  001506  1A18               	xorwf	___ftadd@f2+2,f,c
  7440  001508  0E01               	movlw	1
  7441  00150A  2616               	addwf	___ftadd@f2,f,c
  7442  00150C  0E00               	movlw	0
  7443  00150E  2217               	addwfc	___ftadd@f2+1,f,c
  7444  001510  0E00               	movlw	0
  7445  001512  2218               	addwfc	___ftadd@f2+2,f,c
  7446  001514  0E01               	movlw	1
  7447  001516  6E1C               	movwf	___ftadd@sign,c
  7448  001518                     l5022:
  7449  001518  C016  F00B         	movff	___ftadd@f2,___ftpack@arg
  7450  00151C  C017  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  7451  001520  C018  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  7452  001524  C01E  F00E         	movff	___ftadd@exp1,___ftpack@exp
  7453  001528  C01C  F00F         	movff	___ftadd@sign,___ftpack@sign
  7454  00152C  ECE8  F00D         	call	___ftpack	;wreg free
  7455  001530  C00B  F013         	movff	?___ftpack,?___ftadd
  7456  001534  C00C  F014         	movff	?___ftpack+1,?___ftadd+1
  7457  001538  C00D  F015         	movff	?___ftpack+2,?___ftadd+2
  7458  00153C  0012               	return		;funcret
  7459  00153E                     __end_of___ftadd:
  7460                           	opt callstack 0
  7461                           
  7462 ;; *************** function ___ftpack *****************
  7463 ;; Defined at:
  7464 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  arg             3   10[COMRAM] unsigned um
  7467 ;;  exp             1   13[COMRAM] unsigned char 
  7468 ;;  sign            1   14[COMRAM] unsigned char 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  3   10[COMRAM] float 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7480 ;;      Params:         5       0       0       0       0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7482 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7483 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7484 ;;Total ram usage:        8 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:    5
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		___ftadd
  7491 ;;		___ftmul
  7492 ;;		___lwtoft
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text50
  7497  001BD0                     __ptext50:
  7498                           	opt callstack 0
  7499  001BD0                     ___ftpack:
  7500                           	opt callstack 20
  7501                           
  7502                           ;incstack = 0
  7503  001BD0  500E               	movf	___ftpack@exp,w,c
  7504  001BD2  B4D8               	btfsc	status,2,c
  7505  001BD4  D005               	goto	u4950
  7506  001BD6  500B               	movf	___ftpack@arg,w,c
  7507  001BD8  100C               	iorwf	___ftpack@arg+1,w,c
  7508  001BDA  100D               	iorwf	___ftpack@arg+2,w,c
  7509  001BDC  A4D8               	btfss	status,2,c
  7510  001BDE  D00C               	goto	l4864
  7511  001BE0                     u4950:
  7512  001BE0  0E00               	movlw	0
  7513  001BE2  6E0B               	movwf	?___ftpack,c
  7514  001BE4  0E00               	movlw	0
  7515  001BE6  6E0C               	movwf	?___ftpack+1,c
  7516  001BE8  0E00               	movlw	0
  7517  001BEA  6E0D               	movwf	?___ftpack+2,c
  7518  001BEC  0012               	return	
  7519  001BEE                     l4862:
  7520  001BEE  2A0E               	incf	___ftpack@exp,f,c
  7521  001BF0  90D8               	bcf	status,0,c
  7522  001BF2  320D               	rrcf	___ftpack@arg+2,f,c
  7523  001BF4  320C               	rrcf	___ftpack@arg+1,f,c
  7524  001BF6  320B               	rrcf	___ftpack@arg,f,c
  7525  001BF8                     l4864:
  7526  001BF8  0E00               	movlw	0
  7527  001BFA  140B               	andwf	___ftpack@arg,w,c
  7528  001BFC  6E10               	movwf	??___ftpack& (0+255),c
  7529  001BFE  0E00               	movlw	0
  7530  001C00  140C               	andwf	___ftpack@arg+1,w,c
  7531  001C02  6E11               	movwf	(??___ftpack+1)& (0+255),c
  7532  001C04  0EFE               	movlw	254
  7533  001C06  140D               	andwf	___ftpack@arg+2,w,c
  7534  001C08  6E12               	movwf	(??___ftpack+2)& (0+255),c
  7535  001C0A  5010               	movf	??___ftpack,w,c
  7536  001C0C  1011               	iorwf	??___ftpack+1,w,c
  7537  001C0E  1012               	iorwf	??___ftpack+2,w,c
  7538  001C10  B4D8               	btfsc	status,2,c
  7539  001C12  D00C               	goto	l4870
  7540  001C14  D7EC               	goto	l4862
  7541  001C16                     l4866:
  7542  001C16  2A0E               	incf	___ftpack@exp,f,c
  7543  001C18  0E01               	movlw	1
  7544  001C1A  260B               	addwf	___ftpack@arg,f,c
  7545  001C1C  0E00               	movlw	0
  7546  001C1E  220C               	addwfc	___ftpack@arg+1,f,c
  7547  001C20  0E00               	movlw	0
  7548  001C22  220D               	addwfc	___ftpack@arg+2,f,c
  7549  001C24  90D8               	bcf	status,0,c
  7550  001C26  320D               	rrcf	___ftpack@arg+2,f,c
  7551  001C28  320C               	rrcf	___ftpack@arg+1,f,c
  7552  001C2A  320B               	rrcf	___ftpack@arg,f,c
  7553  001C2C                     l4870:
  7554  001C2C  0E00               	movlw	0
  7555  001C2E  140B               	andwf	___ftpack@arg,w,c
  7556  001C30  6E10               	movwf	??___ftpack& (0+255),c
  7557  001C32  0E00               	movlw	0
  7558  001C34  140C               	andwf	___ftpack@arg+1,w,c
  7559  001C36  6E11               	movwf	(??___ftpack+1)& (0+255),c
  7560  001C38  0EFF               	movlw	255
  7561  001C3A  140D               	andwf	___ftpack@arg+2,w,c
  7562  001C3C  6E12               	movwf	(??___ftpack+2)& (0+255),c
  7563  001C3E  5010               	movf	??___ftpack,w,c
  7564  001C40  1011               	iorwf	??___ftpack+1,w,c
  7565  001C42  1012               	iorwf	??___ftpack+2,w,c
  7566  001C44  B4D8               	btfsc	status,2,c
  7567  001C46  D006               	goto	l4874
  7568  001C48  D7E6               	goto	l4866
  7569  001C4A                     l4872:
  7570  001C4A  060E               	decf	___ftpack@exp,f,c
  7571  001C4C  90D8               	bcf	status,0,c
  7572  001C4E  360B               	rlcf	___ftpack@arg,f,c
  7573  001C50  360C               	rlcf	___ftpack@arg+1,f,c
  7574  001C52  360D               	rlcf	___ftpack@arg+2,f,c
  7575  001C54                     l4874:
  7576  001C54  BE0C               	btfsc	___ftpack@arg+1,7,c
  7577  001C56  D003               	goto	u4990
  7578  001C58  0E02               	movlw	2
  7579  001C5A  600E               	cpfslt	___ftpack@exp,c
  7580  001C5C  D7F6               	goto	l4872
  7581  001C5E                     u4990:
  7582  001C5E  A00E               	btfss	___ftpack@exp,0,c
  7583  001C60  9E0C               	bcf	___ftpack@arg+1,7,c
  7584  001C62  90D8               	bcf	status,0,c
  7585  001C64  320E               	rrcf	___ftpack@exp,f,c
  7586  001C66  500E               	movf	___ftpack@exp,w,c
  7587  001C68  120D               	iorwf	___ftpack@arg+2,f,c
  7588  001C6A  500F               	movf	___ftpack@sign,w,c
  7589  001C6C  A4D8               	btfss	status,2,c
  7590  001C6E  8E0D               	bsf	___ftpack@arg+2,7,c
  7591  001C70  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  7592  001C74  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  7593  001C78  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  7594  001C7C  0012               	return		;funcret
  7595  001C7E                     __end_of___ftpack:
  7596                           	opt callstack 0
  7597                           
  7598 ;; *************** function _disp7s_modeDisp_writeText_oil *****************
  7599 ;; Defined at:
  7600 ;;		line 164 in file "display.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;		None
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 3F/1
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7614 ;;      Params:         0       0       0       0       0       0       0       0       0
  7615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7617 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7618 ;;Total ram usage:        0 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    5
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_visMode_disp
  7625 ;;		_configMode_disp
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text51
  7630  0029A2                     __ptext51:
  7631                           	opt callstack 0
  7632  0029A2                     _disp7s_modeDisp_writeText_oil:
  7633                           	opt callstack 23
  7634                           
  7635                           ;display.c: 166: pulsonic.disp7s.mode[1] =0x5C;
  7636                           
  7637                           ;incstack = 0
  7638  0029A2  0E5C               	movlw	92
  7639  0029A4  0101               	movlb	1	; () banked
  7640  0029A6  6F40               	movwf	(_pulsonic+64)& (0+255),b
  7641                           
  7642                           ;display.c: 167: pulsonic.disp7s.mode[0] =0x16;
  7643  0029A8  0E16               	movlw	22
  7644  0029AA  6F3F               	movwf	(_pulsonic+63)& (0+255),b
  7645                           
  7646                           ; BSR set to: 1
  7647  0029AC  0012               	return		;funcret
  7648  0029AE                     __end_of_disp7s_modeDisp_writeText_oil:
  7649                           	opt callstack 0
  7650                           
  7651 ;; *************** function _disp7s_modeDisp_writeInt *****************
  7652 ;; Defined at:
  7653 ;;		line 304 in file "display.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  num             2   55[COMRAM] int 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7667 ;;      Params:         2       0       0       0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7670 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7671 ;;Total ram usage:        2 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:    9
  7674 ;; This function calls:
  7675 ;;		_disp7s_write_i
  7676 ;; This function is called by:
  7677 ;;		_visMode_disp
  7678 ;;		_configMode_disp
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text52
  7683  0028FC                     __ptext52:
  7684                           	opt callstack 0
  7685  0028FC                     _disp7s_modeDisp_writeInt:
  7686                           	opt callstack 19
  7687                           
  7688                           ;display.c: 306: disp7s_write_i(pulsonic.disp7s.mode, 2, num);
  7689                           
  7690                           ; BSR set to: 1
  7691                           ;incstack = 0
  7692  0028FC  0E3F               	movlw	low (_pulsonic+63)
  7693  0028FE  6E20               	movwf	disp7s_write_i@pDisp,c
  7694  002900  0E01               	movlw	high (_pulsonic+63)
  7695  002902  6E21               	movwf	disp7s_write_i@pDisp+1,c
  7696  002904  0E02               	movlw	2
  7697  002906  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  7698  002908  C038  F023         	movff	disp7s_modeDisp_writeInt@num,disp7s_write_i@num
  7699  00290C  C039  F024         	movff	disp7s_modeDisp_writeInt@num+1,disp7s_write_i@num+1
  7700  002910  EC15  F00C         	call	_disp7s_write_i	;wreg free
  7701  002914  0012               	return		;funcret
  7702  002916                     __end_of_disp7s_modeDisp_writeInt:
  7703                           	opt callstack 0
  7704                           
  7705 ;; *************** function _disp7s_write_i *****************
  7706 ;; Defined at:
  7707 ;;		line 270 in file "display.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  pDisp           2   31[COMRAM] PTR unsigned char 
  7710 ;;		 -> pulsonic.disp7s(5), pulsonic(65), 
  7711 ;;  NUM_OF_DISP     1   33[COMRAM] char 
  7712 ;;  num             2   34[COMRAM] int 
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;  buff           10   41[COMRAM] unsigned char [10]
  7715 ;;  K10MULT         2   52[COMRAM] int 
  7716 ;;  i               1   54[COMRAM] char 
  7717 ;;  pi              1   51[COMRAM] char 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1    wreg      void 
  7720 ;; Registers used:
  7721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/1
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7727 ;;      Params:         5       0       0       0       0       0       0       0       0
  7728 ;;      Locals:        14       0       0       0       0       0       0       0       0
  7729 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7730 ;;      Totals:        24       0       0       0       0       0       0       0       0
  7731 ;;Total ram usage:       24 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    8
  7734 ;; This function calls:
  7735 ;;		___wmul
  7736 ;;		_itoa
  7737 ;;		_strlen
  7738 ;; This function is called by:
  7739 ;;		_disp7s_qtyDisp_writeInt
  7740 ;;		_disp7s_modeDisp_writeInt
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text53
  7745  00182A                     __ptext53:
  7746                           	opt callstack 0
  7747  00182A                     _disp7s_write_i:
  7748                           	opt callstack 19
  7749                           
  7750                           ;display.c: 272: int16_t K10MULT;;display.c: 273: char buff[10];;display.c: 274: int8_t 
      +                          i;;display.c: 275: int8_t pi;;display.c: 277: K10MULT = 1;
  7751                           
  7752                           ;incstack = 0
  7753  00182A  0E00               	movlw	0
  7754  00182C  6E36               	movwf	disp7s_write_i@K10MULT+1,c
  7755  00182E  0E01               	movlw	1
  7756  001830  6E35               	movwf	disp7s_write_i@K10MULT,c
  7757                           
  7758                           ;display.c: 278: i = NUM_OF_DISP;
  7759  001832  C022  F037         	movff	disp7s_write_i@NUM_OF_DISP,disp7s_write_i@i
  7760                           
  7761                           ;display.c: 279: while (i--)
  7762  001836  D00E               	goto	l5200
  7763  001838                     l5198:
  7764                           
  7765                           ;display.c: 280: {K10MULT *=10;}
  7766  001838  C035  F00B         	movff	disp7s_write_i@K10MULT,___wmul@multiplier
  7767  00183C  C036  F00C         	movff	disp7s_write_i@K10MULT+1,___wmul@multiplier+1
  7768  001840  0E00               	movlw	0
  7769  001842  6E0E               	movwf	___wmul@multiplicand+1,c
  7770  001844  0E0A               	movlw	10
  7771  001846  6E0D               	movwf	___wmul@multiplicand,c
  7772  001848  ECE1  F013         	call	___wmul	;wreg free
  7773  00184C  C00B  F035         	movff	?___wmul,disp7s_write_i@K10MULT
  7774  001850  C00C  F036         	movff	?___wmul+1,disp7s_write_i@K10MULT+1
  7775  001854                     l5200:
  7776  001854  0637               	decf	disp7s_write_i@i,f,c
  7777  001856  2837               	incf	disp7s_write_i@i,w,c
  7778  001858  A4D8               	btfss	status,2,c
  7779  00185A  D7EE               	goto	l5198
  7780                           
  7781                           ;display.c: 282: if (num >= K10MULT)
  7782  00185C  5035               	movf	disp7s_write_i@K10MULT,w,c
  7783  00185E  5C23               	subwf	disp7s_write_i@num,w,c
  7784  001860  5024               	movf	disp7s_write_i@num+1,w,c
  7785  001862  0A80               	xorlw	128
  7786  001864  6E25               	movwf	??_disp7s_write_i& (0+255),c
  7787  001866  5036               	movf	disp7s_write_i@K10MULT+1,w,c
  7788  001868  0A80               	xorlw	128
  7789  00186A  5825               	subwfb	??_disp7s_write_i& (0+255),w,c
  7790  00186C  A0D8               	btfss	status,0,c
  7791  00186E  D006               	goto	l5206
  7792                           
  7793                           ;display.c: 283: {num= K10MULT-1;}
  7794  001870  0EFF               	movlw	255
  7795  001872  2435               	addwf	disp7s_write_i@K10MULT,w,c
  7796  001874  6E23               	movwf	disp7s_write_i@num,c
  7797  001876  0EFF               	movlw	255
  7798  001878  2036               	addwfc	disp7s_write_i@K10MULT+1,w,c
  7799  00187A  6E24               	movwf	disp7s_write_i@num+1,c
  7800  00187C                     l5206:
  7801                           
  7802                           ;display.c: 285: itoa(buff, num, 10);
  7803  00187C  0E2A               	movlw	low disp7s_write_i@buff
  7804  00187E  6E1A               	movwf	itoa@buf,c
  7805  001880  C023  F01B         	movff	disp7s_write_i@num,itoa@val
  7806  001884  C024  F01C         	movff	disp7s_write_i@num+1,itoa@val+1
  7807  001888  0E00               	movlw	0
  7808  00188A  6E1E               	movwf	itoa@base+1,c
  7809  00188C  0E0A               	movlw	10
  7810  00188E  6E1D               	movwf	itoa@base,c
  7811  001890  EC50  F013         	call	_itoa	;wreg free
  7812                           
  7813                           ;display.c: 288: for (i=0; i<NUM_OF_DISP; i++)
  7814  001894  0E00               	movlw	0
  7815  001896  6E37               	movwf	disp7s_write_i@i,c
  7816  001898  D013               	goto	l5214
  7817  00189A                     l5210:
  7818                           
  7819                           ;display.c: 289: {pDisp[i] = DISP7S_CHARS[OFF];}
  7820  00189A  0E0F               	movlw	low _DISP7S_CHARS
  7821  00189C  6EF6               	movwf	tblptrl,c
  7822  00189E                     	if	1	;There is more than 1 active tblptr byte
  7823  00189E  0E08               	movlw	high _DISP7S_CHARS
  7824  0018A0  6EF7               	movwf	tblptrh,c
  7825  0018A2                     	endif
  7826  0018A2                     	if	0	;There are less than 3 active tblptr bytes
  7827  0018A2                     	endif
  7828  0018A2  C037  F025         	movff	disp7s_write_i@i,??_disp7s_write_i
  7829  0018A6  6A26               	clrf	(??_disp7s_write_i+1)& (0+255),c
  7830  0018A8  BE25               	btfsc	??_disp7s_write_i& (0+255),7,c
  7831  0018AA  0626               	decf	(??_disp7s_write_i+1)& (0+255),f,c
  7832  0018AC  5025               	movf	??_disp7s_write_i,w,c
  7833  0018AE  2420               	addwf	disp7s_write_i@pDisp,w,c
  7834  0018B0  6ED9               	movwf	fsr2l,c
  7835  0018B2  5026               	movf	??_disp7s_write_i+1,w,c
  7836  0018B4  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  7837  0018B6  6EDA               	movwf	fsr2h,c
  7838  0018B8  0008               	tblrd		*
  7839  0018BA  CFF5 FFDF          	movff	tablat,indf2
  7840  0018BE  2A37               	incf	disp7s_write_i@i,f,c
  7841  0018C0                     l5214:
  7842  0018C0  5037               	movf	disp7s_write_i@i,w,c
  7843  0018C2  0A80               	xorlw	128
  7844  0018C4  6E25               	movwf	??_disp7s_write_i& (0+255),c
  7845  0018C6  5022               	movf	disp7s_write_i@NUM_OF_DISP,w,c
  7846  0018C8  0A80               	xorlw	128
  7847  0018CA  5C25               	subwf	??_disp7s_write_i& (0+255),w,c
  7848  0018CC  A0D8               	btfss	status,0,c
  7849  0018CE  D7E5               	goto	l5210
  7850                           
  7851                           ;display.c: 291: i=0;
  7852  0018D0  0E00               	movlw	0
  7853  0018D2  6E37               	movwf	disp7s_write_i@i,c
  7854                           
  7855                           ;display.c: 292: pi = strlen(buff)-1;
  7856  0018D4  0E2A               	movlw	low disp7s_write_i@buff
  7857  0018D6  6E0B               	movwf	strlen@s,c
  7858  0018D8  EC17  F014         	call	_strlen	;wreg free
  7859  0018DC  040B               	decf	?_strlen,w,c
  7860  0018DE  6E34               	movwf	disp7s_write_i@pi,c
  7861                           
  7862                           ;display.c: 293: while (buff[i] != '\0')
  7863  0018E0  D021               	goto	l5226
  7864  0018E2                     l5220:
  7865                           
  7866                           ;display.c: 294: {;display.c: 295: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  7867  0018E2  5037               	movf	disp7s_write_i@i,w,c
  7868  0018E4  0F2A               	addlw	low disp7s_write_i@buff
  7869  0018E6  6ED9               	movwf	fsr2l,c
  7870  0018E8  6ADA               	clrf	fsr2h,c
  7871  0018EA  50DF               	movf	indf2,w,c
  7872  0018EC  6E25               	movwf	??_disp7s_write_i& (0+255),c
  7873  0018EE  0ED0               	movlw	208
  7874  0018F0  2625               	addwf	??_disp7s_write_i,f,c
  7875  0018F2  5025               	movf	??_disp7s_write_i,w,c
  7876  0018F4  0F01               	addlw	low _DISP7S_NUMS
  7877  0018F6  6E26               	movwf	(??_disp7s_write_i+1)& (0+255),c
  7878  0018F8  C026  FFF6         	movff	??_disp7s_write_i+1,tblptrl
  7879  0018FC                     	if	1	;There is more than 1 active tblptr byte
  7880  0018FC  0E08               	movlw	high __smallconst
  7881  0018FE  6EF7               	movwf	tblptrh,c
  7882  001900                     	endif
  7883  001900                     	if	0	;tblptru may be non-zero
  7884  001900                     	endif
  7885  001900                     	if	0	;tblptru may be non-zero
  7886  001900                     	endif
  7887  001900  0008               	tblrd		*
  7888  001902  CFF5 F027          	movff	tablat,??_disp7s_write_i+2
  7889  001906  C034  F028         	movff	disp7s_write_i@pi,??_disp7s_write_i+3
  7890  00190A  6A29               	clrf	(??_disp7s_write_i+4)& (0+255),c
  7891  00190C  BE28               	btfsc	(??_disp7s_write_i+3)& (0+255),7,c
  7892  00190E  0629               	decf	(??_disp7s_write_i+4)& (0+255),f,c
  7893  001910  5028               	movf	??_disp7s_write_i+3,w,c
  7894  001912  2420               	addwf	disp7s_write_i@pDisp,w,c
  7895  001914  6ED9               	movwf	fsr2l,c
  7896  001916  5029               	movf	??_disp7s_write_i+4,w,c
  7897  001918  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  7898  00191A  6EDA               	movwf	fsr2h,c
  7899  00191C  5027               	movf	??_disp7s_write_i+2,w,c
  7900  00191E  12DF               	iorwf	indf2,f,c
  7901  001920  0634               	decf	disp7s_write_i@pi,f,c
  7902                           
  7903                           ;display.c: 296: i++;
  7904  001922  2A37               	incf	disp7s_write_i@i,f,c
  7905  001924                     l5226:
  7906  001924  5037               	movf	disp7s_write_i@i,w,c
  7907  001926  0F2A               	addlw	low disp7s_write_i@buff
  7908  001928  6ED9               	movwf	fsr2l,c
  7909  00192A  6ADA               	clrf	fsr2h,c
  7910  00192C  50DF               	movf	indf2,w,c
  7911  00192E  B4D8               	btfsc	status,2,c
  7912  001930  0012               	return	
  7913  001932  D7D7               	goto	l5220
  7914  001934                     __end_of_disp7s_write_i:
  7915                           	opt callstack 0
  7916                           
  7917 ;; *************** function _strlen *****************
  7918 ;; Defined at:
  7919 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/strlen.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  s               1   10[COMRAM] PTR const unsigned char 
  7922 ;;		 -> disp7s_write_i@buff(10), 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  cp              1   12[COMRAM] PTR const unsigned char 
  7925 ;;		 -> disp7s_write_i@buff(10), 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  2   10[COMRAM] unsigned int 
  7928 ;; Registers used:
  7929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/1
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7935 ;;      Params:         2       0       0       0       0       0       0       0       0
  7936 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7938 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7939 ;;Total ram usage:        3 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    5
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		_disp7s_write_i
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text54
  7950  00282E                     __ptext54:
  7951                           	opt callstack 0
  7952  00282E                     _strlen:
  7953                           	opt callstack 21
  7954                           
  7955                           ;incstack = 0
  7956  00282E  C00B  F00D         	movff	strlen@s,strlen@cp
  7957  002832  D001               	goto	l4944
  7958  002834                     l4942:
  7959  002834  2A0D               	incf	strlen@cp,f,c
  7960  002836                     l4944:
  7961  002836  500D               	movf	strlen@cp,w,c
  7962  002838  6ED9               	movwf	fsr2l,c
  7963  00283A  6ADA               	clrf	fsr2h,c
  7964  00283C  50DF               	movf	indf2,w,c
  7965  00283E  A4D8               	btfss	status,2,c
  7966  002840  D7F9               	goto	l4942
  7967  002842  500B               	movf	strlen@s,w,c
  7968  002844  5C0D               	subwf	strlen@cp,w,c
  7969  002846  6E0B               	movwf	?_strlen,c
  7970  002848  6A0C               	clrf	?_strlen+1,c
  7971  00284A  BE0B               	btfsc	?_strlen,7,c
  7972  00284C  060C               	decf	?_strlen+1,f,c
  7973  00284E  0012               	return		;funcret
  7974  002850                     __end_of_strlen:
  7975                           	opt callstack 0
  7976                           
  7977 ;; *************** function _itoa *****************
  7978 ;; Defined at:
  7979 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  buf             1   25[COMRAM] PTR unsigned char 
  7982 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  7983 ;;  val             2   26[COMRAM] int 
  7984 ;;  base            2   28[COMRAM] int 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  cp              1    0        PTR unsigned char 
  7987 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      PTR unsigned char 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7997 ;;      Params:         5       0       0       0       0       0       0       0       0
  7998 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8000 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8001 ;;Total ram usage:        6 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    7
  8004 ;; This function calls:
  8005 ;;		_utoa
  8006 ;; This function is called by:
  8007 ;;		_disp7s_write_f
  8008 ;;		_disp7s_write_i
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text55
  8013  0026A0                     __ptext55:
  8014                           	opt callstack 0
  8015  0026A0                     _itoa:
  8016                           	opt callstack 19
  8017                           
  8018                           ;incstack = 0
  8019  0026A0  AE1C               	btfss	itoa@val+1,7,c
  8020  0026A2  D00A               	goto	l4936
  8021  0026A4  501A               	movf	itoa@buf,w,c
  8022  0026A6  6ED9               	movwf	fsr2l,c
  8023  0026A8  6ADA               	clrf	fsr2h,c
  8024  0026AA  0E2D               	movlw	45
  8025  0026AC  6EDF               	movwf	indf2,c
  8026  0026AE  2A1A               	incf	itoa@buf,f,c
  8027  0026B0  6C1B               	negf	itoa@val,c
  8028  0026B2  1E1C               	comf	itoa@val+1,f,c
  8029  0026B4  B0D8               	btfsc	status,0,c
  8030  0026B6  2A1C               	incf	itoa@val+1,f,c
  8031  0026B8                     l4936:
  8032  0026B8  C01A  F012         	movff	itoa@buf,utoa@buf
  8033  0026BC  C01B  F013         	movff	itoa@val,utoa@val
  8034  0026C0  C01C  F014         	movff	itoa@val+1,utoa@val+1
  8035  0026C4  C01D  F015         	movff	itoa@base,utoa@base
  8036  0026C8  C01E  F016         	movff	itoa@base+1,utoa@base+1
  8037  0026CC  EC8F  F00E         	call	_utoa	;wreg free
  8038  0026D0  0012               	return		;funcret
  8039  0026D2                     __end_of_itoa:
  8040                           	opt callstack 0
  8041                           
  8042 ;; *************** function _utoa *****************
  8043 ;; Defined at:
  8044 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;  buf             1   17[COMRAM] PTR unsigned char 
  8047 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  8048 ;;  val             2   18[COMRAM] unsigned int 
  8049 ;;  base            2   20[COMRAM] int 
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  v               2   22[COMRAM] unsigned int 
  8052 ;;  c               1   24[COMRAM] unsigned char 
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      PTR unsigned char 
  8055 ;; Registers used:
  8056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8062 ;;      Params:         5       0       0       0       0       0       0       0       0
  8063 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8065 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8066 ;;Total ram usage:        8 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    6
  8069 ;; This function calls:
  8070 ;;		___lwdiv
  8071 ;;		___lwmod
  8072 ;; This function is called by:
  8073 ;;		_itoa
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text56
  8078  001D1E                     __ptext56:
  8079                           	opt callstack 0
  8080  001D1E                     _utoa:
  8081                           	opt callstack 19
  8082                           
  8083                           ;incstack = 0
  8084  001D1E  C013  F017         	movff	utoa@val,utoa@v
  8085  001D22  C014  F018         	movff	utoa@val+1,utoa@v+1
  8086  001D26                     l4892:
  8087  001D26  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  8088  001D2A  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  8089  001D2E  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  8090  001D32  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  8091  001D36  ECCE  F011         	call	___lwdiv	;wreg free
  8092  001D3A  C00B  F017         	movff	?___lwdiv,utoa@v
  8093  001D3E  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  8094  001D42  2A12               	incf	utoa@buf,f,c
  8095  001D44  5017               	movf	utoa@v,w,c
  8096  001D46  1018               	iorwf	utoa@v+1,w,c
  8097  001D48  A4D8               	btfss	status,2,c
  8098  001D4A  D7ED               	goto	l4892
  8099  001D4C  5012               	movf	utoa@buf,w,c
  8100  001D4E  6ED9               	movwf	fsr2l,c
  8101  001D50  6ADA               	clrf	fsr2h,c
  8102  001D52  0E00               	movlw	0
  8103  001D54  6EDF               	movwf	indf2,c
  8104  001D56  0612               	decf	utoa@buf,f,c
  8105  001D58                     l4902:
  8106  001D58  C013  F00B         	movff	utoa@val,___lwmod@dividend
  8107  001D5C  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  8108  001D60  C015  F00D         	movff	utoa@base,___lwmod@divisor
  8109  001D64  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  8110  001D68  ECAF  F012         	call	___lwmod	;wreg free
  8111  001D6C  500B               	movf	?___lwmod,w,c
  8112  001D6E  6E19               	movwf	utoa@c,c
  8113  001D70  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  8114  001D74  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  8115  001D78  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  8116  001D7C  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  8117  001D80  ECCE  F011         	call	___lwdiv	;wreg free
  8118  001D84  C00B  F013         	movff	?___lwdiv,utoa@val
  8119  001D88  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  8120  001D8C  0E09               	movlw	9
  8121  001D8E  6419               	cpfsgt	utoa@c,c
  8122  001D90  D002               	goto	l1662
  8123  001D92  0E07               	movlw	7
  8124  001D94  2619               	addwf	utoa@c,f,c
  8125  001D96                     l1662:
  8126  001D96  0E30               	movlw	48
  8127  001D98  2619               	addwf	utoa@c,f,c
  8128  001D9A  5012               	movf	utoa@buf,w,c
  8129  001D9C  6ED9               	movwf	fsr2l,c
  8130  001D9E  6ADA               	clrf	fsr2h,c
  8131  001DA0  C019  FFDF         	movff	utoa@c,indf2
  8132  001DA4  0612               	decf	utoa@buf,f,c
  8133  001DA6  5013               	movf	utoa@val,w,c
  8134  001DA8  1014               	iorwf	utoa@val+1,w,c
  8135  001DAA  A4D8               	btfss	status,2,c
  8136  001DAC  D7D5               	goto	l4902
  8137                           
  8138                           ;	Return value of _utoa is never used
  8139  001DAE  2A12               	incf	utoa@buf,f,c
  8140  001DB0  0012               	return		;funcret
  8141  001DB2                     __end_of_utoa:
  8142                           	opt callstack 0
  8143                           
  8144 ;; *************** function ___lwmod *****************
  8145 ;; Defined at:
  8146 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  dividend        2   10[COMRAM] unsigned int 
  8149 ;;  divisor         2   12[COMRAM] unsigned int 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;  counter         1   14[COMRAM] unsigned char 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  2   10[COMRAM] unsigned int 
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8161 ;;      Params:         4       0       0       0       0       0       0       0       0
  8162 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8164 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8165 ;;Total ram usage:        5 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:    5
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_utoa
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text57
  8176  00255E                     __ptext57:
  8177                           	opt callstack 0
  8178  00255E                     ___lwmod:
  8179                           	opt callstack 19
  8180                           
  8181                           ;incstack = 0
  8182  00255E  500D               	movf	___lwmod@divisor,w,c
  8183  002560  100E               	iorwf	___lwmod@divisor+1,w,c
  8184  002562  B4D8               	btfsc	status,2,c
  8185  002564  D018               	goto	l1480
  8186  002566  0E01               	movlw	1
  8187  002568  6E0F               	movwf	___lwmod@counter,c
  8188  00256A  D004               	goto	l4844
  8189  00256C                     l4842:
  8190  00256C  90D8               	bcf	status,0,c
  8191  00256E  360D               	rlcf	___lwmod@divisor,f,c
  8192  002570  360E               	rlcf	___lwmod@divisor+1,f,c
  8193  002572  2A0F               	incf	___lwmod@counter,f,c
  8194  002574                     l4844:
  8195  002574  AE0E               	btfss	___lwmod@divisor+1,7,c
  8196  002576  D7FA               	goto	l4842
  8197  002578                     u4920:
  8198  002578  500D               	movf	___lwmod@divisor,w,c
  8199  00257A  5C0B               	subwf	___lwmod@dividend,w,c
  8200  00257C  500E               	movf	___lwmod@divisor+1,w,c
  8201  00257E  580C               	subwfb	___lwmod@dividend+1,w,c
  8202  002580  A0D8               	btfss	status,0,c
  8203  002582  D004               	goto	l4850
  8204  002584  500D               	movf	___lwmod@divisor,w,c
  8205  002586  5E0B               	subwf	___lwmod@dividend,f,c
  8206  002588  500E               	movf	___lwmod@divisor+1,w,c
  8207  00258A  5A0C               	subwfb	___lwmod@dividend+1,f,c
  8208  00258C                     l4850:
  8209  00258C  90D8               	bcf	status,0,c
  8210  00258E  320E               	rrcf	___lwmod@divisor+1,f,c
  8211  002590  320D               	rrcf	___lwmod@divisor,f,c
  8212  002592  2E0F               	decfsz	___lwmod@counter,f,c
  8213  002594  D7F1               	goto	u4920
  8214  002596                     l1480:
  8215  002596  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  8216  00259A  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  8217  00259E  0012               	return		;funcret
  8218  0025A0                     __end_of___lwmod:
  8219                           	opt callstack 0
  8220                           
  8221 ;; *************** function ___lwdiv *****************
  8222 ;; Defined at:
  8223 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  dividend        2   10[COMRAM] unsigned int 
  8226 ;;  divisor         2   12[COMRAM] unsigned int 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  quotient        2   15[COMRAM] unsigned int 
  8229 ;;  counter         1   14[COMRAM] unsigned char 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  2   10[COMRAM] unsigned int 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2, status,0
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8239 ;;      Params:         4       0       0       0       0       0       0       0       0
  8240 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8242 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8243 ;;Total ram usage:        7 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:    5
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_utoa
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text58
  8254  00239C                     __ptext58:
  8255                           	opt callstack 0
  8256  00239C                     ___lwdiv:
  8257                           	opt callstack 19
  8258                           
  8259                           ;incstack = 0
  8260  00239C  0E00               	movlw	0
  8261  00239E  6E11               	movwf	___lwdiv@quotient+1,c
  8262  0023A0  0E00               	movlw	0
  8263  0023A2  6E10               	movwf	___lwdiv@quotient,c
  8264  0023A4  500D               	movf	___lwdiv@divisor,w,c
  8265  0023A6  100E               	iorwf	___lwdiv@divisor+1,w,c
  8266  0023A8  B4D8               	btfsc	status,2,c
  8267  0023AA  D01C               	goto	l1470
  8268  0023AC  0E01               	movlw	1
  8269  0023AE  6E0F               	movwf	___lwdiv@counter,c
  8270  0023B0  D004               	goto	l4824
  8271  0023B2                     l4822:
  8272  0023B2  90D8               	bcf	status,0,c
  8273  0023B4  360D               	rlcf	___lwdiv@divisor,f,c
  8274  0023B6  360E               	rlcf	___lwdiv@divisor+1,f,c
  8275  0023B8  2A0F               	incf	___lwdiv@counter,f,c
  8276  0023BA                     l4824:
  8277  0023BA  AE0E               	btfss	___lwdiv@divisor+1,7,c
  8278  0023BC  D7FA               	goto	l4822
  8279  0023BE                     u4890:
  8280  0023BE  90D8               	bcf	status,0,c
  8281  0023C0  3610               	rlcf	___lwdiv@quotient,f,c
  8282  0023C2  3611               	rlcf	___lwdiv@quotient+1,f,c
  8283  0023C4  500D               	movf	___lwdiv@divisor,w,c
  8284  0023C6  5C0B               	subwf	___lwdiv@dividend,w,c
  8285  0023C8  500E               	movf	___lwdiv@divisor+1,w,c
  8286  0023CA  580C               	subwfb	___lwdiv@dividend+1,w,c
  8287  0023CC  A0D8               	btfss	status,0,c
  8288  0023CE  D005               	goto	l4834
  8289  0023D0  500D               	movf	___lwdiv@divisor,w,c
  8290  0023D2  5E0B               	subwf	___lwdiv@dividend,f,c
  8291  0023D4  500E               	movf	___lwdiv@divisor+1,w,c
  8292  0023D6  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  8293  0023D8  8010               	bsf	___lwdiv@quotient,0,c
  8294  0023DA                     l4834:
  8295  0023DA  90D8               	bcf	status,0,c
  8296  0023DC  320E               	rrcf	___lwdiv@divisor+1,f,c
  8297  0023DE  320D               	rrcf	___lwdiv@divisor,f,c
  8298  0023E0  2E0F               	decfsz	___lwdiv@counter,f,c
  8299  0023E2  D7ED               	goto	u4890
  8300  0023E4                     l1470:
  8301  0023E4  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  8302  0023E8  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8303  0023EC  0012               	return		;funcret
  8304  0023EE                     __end_of___lwdiv:
  8305                           	opt callstack 0
  8306                           
  8307 ;; *************** function _configMode_init *****************
  8308 ;; Defined at:
  8309 ;;		line 14 in file "configMode.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  numRegistro     1    wreg     char 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  numRegistro     1   10[COMRAM] char 
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1    wreg      void 
  8316 ;; Registers used:
  8317 ;;		wreg, status,2
  8318 ;; Tracked objects:
  8319 ;;		On entry : 3F/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0
  8324 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8326 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8327 ;;Total ram usage:        1 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:    5
  8330 ;; This function calls:
  8331 ;;		Nothing
  8332 ;; This function is called by:
  8333 ;;		_main
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text59
  8338  0029AE                     __ptext59:
  8339                           	opt callstack 0
  8340  0029AE                     _configMode_init:
  8341                           	opt callstack 25
  8342                           
  8343                           ;incstack = 0
  8344                           ;configMode_init@numRegistro stored from wreg
  8345  0029AE  6E0B               	movwf	configMode_init@numRegistro,c
  8346                           
  8347                           ;configMode.c: 16: configMode.numRegistro = numRegistro;
  8348  0029B0  C00B  F04B         	movff	configMode_init@numRegistro,_configMode+1
  8349                           
  8350                           ;configMode.c: 17: configMode.disp7s_accessReq = 1;
  8351  0029B4  0E01               	movlw	1
  8352  0029B6  6E4A               	movwf	_configMode,c
  8353  0029B8  0012               	return		;funcret
  8354  0029BA                     __end_of_configMode_init:
  8355                           	opt callstack 0
  8356                           
  8357 ;; *************** function _autoMode_job *****************
  8358 ;; Defined at:
  8359 ;;		line 30 in file "automode.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  cod_ret         1   32[COMRAM] char 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      char 
  8366 ;; Registers used:
  8367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 3F/0
  8370 ;;		On exit  : 3F/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8373 ;;      Params:         0       0       0       0       0       0       0       0       0
  8374 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8376 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8377 ;;Total ram usage:        1 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    7
  8380 ;; This function calls:
  8381 ;;		_autoMode_kb
  8382 ;;		_mpap_isIdle
  8383 ;;		_mpap_movetoNozzle
  8384 ;;		_mpap_setupToHomming
  8385 ;;		_nozzle_isEnabled
  8386 ;;		_pump_isIdle
  8387 ;;		_pump_setTick
  8388 ;; This function is called by:
  8389 ;;		_main
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text60
  8394  002916                     __ptext60:
  8395                           	opt callstack 0
  8396  002916                     _autoMode_job:
  8397                           	opt callstack 23
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;automode.c: 32: int8_t cod_ret = 0;
  8401                           
  8402                           ;incstack = 0
  8403  002916  0E00               	movlw	0
  8404  002918  6E21               	movwf	autoMode_job@cod_ret,c
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;automode.c: 34: if (smain.focus.kb == FOCUS_KB_AUTOMODE)
  8408  00291A  0448               	decf	_smain+1,w,c	;volatile
  8409  00291C  A4D8               	btfss	status,2,c
  8410  00291E  D003               	goto	l5956
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;automode.c: 35: {;automode.c: 36: cod_ret = autoMode_kb();
  8414  002920  ECD9  F00E         	call	_autoMode_kb	;wreg free
  8415  002924  6E21               	movwf	autoMode_job@cod_ret,c
  8416  002926                     l5956:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;automode.c: 37: };automode.c: 38: return cod_ret;
  8420  002926  5021               	movf	autoMode_job@cod_ret,w,c
  8421                           
  8422                           ; BSR set to: 0
  8423  002928  0012               	return		;funcret
  8424  00292A                     __end_of_autoMode_job:
  8425                           	opt callstack 0
  8426                           
  8427 ;; *************** function _pump_setTick *****************
  8428 ;; Defined at:
  8429 ;;		line 8 in file "pump.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  ticks           2   10[COMRAM] unsigned int 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1    wreg      void 
  8436 ;; Registers used:
  8437 ;;		None
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8443 ;;      Params:         2       0       0       0       0       0       0       0       0
  8444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8446 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8447 ;;Total ram usage:        2 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:    5
  8450 ;; This function calls:
  8451 ;;		Nothing
  8452 ;; This function is called by:
  8453 ;;		_autoMode_job
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text61
  8458  0029D8                     __ptext61:
  8459                           	opt callstack 0
  8460  0029D8                     _pump_setTick:
  8461                           	opt callstack 24
  8462                           
  8463                           ;pump.c: 10: pump.ticks = ticks;
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;incstack = 0
  8467  0029D8  C00B  F044         	movff	pump_setTick@ticks,_pump
  8468  0029DC  C00C  F045         	movff	pump_setTick@ticks+1,_pump+1
  8469  0029E0  0012               	return		;funcret
  8470  0029E2                     __end_of_pump_setTick:
  8471                           	opt callstack 0
  8472                           
  8473 ;; *************** function _pump_isIdle *****************
  8474 ;; Defined at:
  8475 ;;		line 66 in file "pump.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;		None
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;		None
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  1    wreg      char 
  8482 ;; Registers used:
  8483 ;;		wreg, status,2, status,0
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8489 ;;      Params:         0       0       0       0       0       0       0       0       0
  8490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8493 ;;Total ram usage:        0 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    5
  8496 ;; This function calls:
  8497 ;;		Nothing
  8498 ;; This function is called by:
  8499 ;;		_autoMode_job
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text62
  8504  002974                     __ptext62:
  8505                           	opt callstack 0
  8506  002974                     _pump_isIdle:
  8507                           	opt callstack 24
  8508                           
  8509                           ;pump.c: 68: if (pump.ticks == 0)
  8510                           
  8511                           ;incstack = 0
  8512  002974  5044               	movf	_pump,w,c
  8513  002976  1045               	iorwf	_pump+1,w,c
  8514  002978  A4D8               	btfss	status,2,c
  8515  00297A  D002               	goto	l5540
  8516                           
  8517                           ;pump.c: 69: {return 1;}
  8518  00297C  0E01               	movlw	1
  8519  00297E  0012               	return	
  8520  002980                     l5540:
  8521                           
  8522                           ;pump.c: 70: return 0;
  8523  002980  0E00               	movlw	0
  8524  002982  0012               	return		;funcret
  8525  002984                     __end_of_pump_isIdle:
  8526                           	opt callstack 0
  8527                           
  8528 ;; *************** function _nozzle_isEnabled *****************
  8529 ;; Defined at:
  8530 ;;		line 7 in file "nozzle.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;  n               2   30[COMRAM] int 
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;		None
  8535 ;; Return value:  Size  Location     Type
  8536 ;;                  1    wreg      char 
  8537 ;; Registers used:
  8538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8539 ;; Tracked objects:
  8540 ;;		On entry : 0/0
  8541 ;;		On exit  : 0/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8544 ;;      Params:         2       0       0       0       0       0       0       0       0
  8545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8547 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8548 ;;Total ram usage:        2 bytes
  8549 ;; Hardware stack levels used:    1
  8550 ;; Hardware stack levels required when called:    6
  8551 ;; This function calls:
  8552 ;;		___ftge
  8553 ;;		___wmul
  8554 ;; This function is called by:
  8555 ;;		_autoMode_job
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           	psect	text63
  8560  0024CE                     __ptext63:
  8561                           	opt callstack 0
  8562  0024CE                     _nozzle_isEnabled:
  8563                           	opt callstack 23
  8564                           
  8565                           ;nozzle.c: 9: if (pulsonic.nozzle[n].Q_mlh > 0.0)
  8566                           
  8567                           ;incstack = 0
  8568  0024CE  0E00               	movlw	0
  8569  0024D0  6E16               	movwf	___ftge@ff1,c
  8570  0024D2  0E00               	movlw	0
  8571  0024D4  6E17               	movwf	___ftge@ff1+1,c
  8572  0024D6  0E00               	movlw	0
  8573  0024D8  6E18               	movwf	___ftge@ff1+2,c
  8574  0024DA  C01F  F00B         	movff	nozzle_isEnabled@n,___wmul@multiplier
  8575  0024DE  C020  F00C         	movff	nozzle_isEnabled@n+1,___wmul@multiplier+1
  8576  0024E2  0E00               	movlw	0
  8577  0024E4  6E0E               	movwf	___wmul@multiplicand+1,c
  8578  0024E6  0E06               	movlw	6
  8579  0024E8  6E0D               	movwf	___wmul@multiplicand,c
  8580  0024EA  ECE1  F013         	call	___wmul	;wreg free
  8581  0024EE  0E06               	movlw	low (_pulsonic+6)
  8582  0024F0  240B               	addwf	?___wmul,w,c
  8583  0024F2  6ED9               	movwf	fsr2l,c
  8584  0024F4  0E01               	movlw	high (_pulsonic+6)
  8585  0024F6  200C               	addwfc	?___wmul+1,w,c
  8586  0024F8  6EDA               	movwf	fsr2h,c
  8587  0024FA  CFDE F019          	movff	postinc2,___ftge@ff2
  8588  0024FE  CFDE F01A          	movff	postinc2,___ftge@ff2+1
  8589  002502  CFDD F01B          	movff	postdec2,___ftge@ff2+2
  8590  002506  ECA0  F010         	call	___ftge	;wreg free
  8591  00250A  B0D8               	btfsc	status,0,c
  8592  00250C  D002               	goto	l5618
  8593                           
  8594                           ;nozzle.c: 10: return 1;
  8595  00250E  0E01               	movlw	1
  8596  002510  0012               	return	
  8597  002512                     l5618:
  8598                           
  8599                           ;nozzle.c: 11: return 0;
  8600  002512  0E00               	movlw	0
  8601  002514  0012               	return		;funcret
  8602  002516                     __end_of_nozzle_isEnabled:
  8603                           	opt callstack 0
  8604                           
  8605 ;; *************** function ___ftge *****************
  8606 ;; Defined at:
  8607 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  ff1             3   21[COMRAM] float 
  8610 ;;  ff2             3   24[COMRAM] float 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;		None
  8613 ;; Return value:  Size  Location     Type
  8614 ;;		None               void
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8622 ;;      Params:         6       0       0       0       0       0       0       0       0
  8623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8624 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8625 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8626 ;;Total ram usage:        9 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; Hardware stack levels required when called:    5
  8629 ;; This function calls:
  8630 ;;		Nothing
  8631 ;; This function is called by:
  8632 ;;		_ikey_parsing
  8633 ;;		_disp7s_write_f
  8634 ;;		_nozzle_isEnabled
  8635 ;;		_configMode_kb
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	text64
  8640  002140                     __ptext64:
  8641                           	opt callstack 0
  8642  002140                     ___ftge:
  8643                           	opt callstack 21
  8644                           
  8645                           ;incstack = 0
  8646  002140  AE18               	btfss	___ftge@ff1+2,7,c
  8647  002142  D00F               	goto	l5078
  8648  002144  0E00               	movlw	0
  8649  002146  6E1C               	movwf	??___ftge& (0+255),c
  8650  002148  0E00               	movlw	0
  8651  00214A  6E1D               	movwf	(??___ftge+1)& (0+255),c
  8652  00214C  0E80               	movlw	128
  8653  00214E  6E1E               	movwf	(??___ftge+2)& (0+255),c
  8654  002150  5016               	movf	___ftge@ff1,w,c
  8655  002152  5C1C               	subwf	??___ftge,w,c
  8656  002154  6E16               	movwf	___ftge@ff1,c
  8657  002156  5017               	movf	___ftge@ff1+1,w,c
  8658  002158  581D               	subwfb	??___ftge+1,w,c
  8659  00215A  6E17               	movwf	___ftge@ff1+1,c
  8660  00215C  5018               	movf	___ftge@ff1+2,w,c
  8661  00215E  581E               	subwfb	??___ftge+2,w,c
  8662  002160  6E18               	movwf	___ftge@ff1+2,c
  8663  002162                     l5078:
  8664  002162  AE1B               	btfss	___ftge@ff2+2,7,c
  8665  002164  D00F               	goto	l5082
  8666  002166  0E00               	movlw	0
  8667  002168  6E1C               	movwf	??___ftge& (0+255),c
  8668  00216A  0E00               	movlw	0
  8669  00216C  6E1D               	movwf	(??___ftge+1)& (0+255),c
  8670  00216E  0E80               	movlw	128
  8671  002170  6E1E               	movwf	(??___ftge+2)& (0+255),c
  8672  002172  5019               	movf	___ftge@ff2,w,c
  8673  002174  5C1C               	subwf	??___ftge,w,c
  8674  002176  6E19               	movwf	___ftge@ff2,c
  8675  002178  501A               	movf	___ftge@ff2+1,w,c
  8676  00217A  581D               	subwfb	??___ftge+1,w,c
  8677  00217C  6E1A               	movwf	___ftge@ff2+1,c
  8678  00217E  501B               	movf	___ftge@ff2+2,w,c
  8679  002180  581E               	subwfb	??___ftge+2,w,c
  8680  002182  6E1B               	movwf	___ftge@ff2+2,c
  8681  002184                     l5082:
  8682  002184  0E00               	movlw	0
  8683  002186  1A16               	xorwf	___ftge@ff1,f,c
  8684  002188  0E00               	movlw	0
  8685  00218A  1A17               	xorwf	___ftge@ff1+1,f,c
  8686  00218C  0E80               	movlw	128
  8687  00218E  1A18               	xorwf	___ftge@ff1+2,f,c
  8688  002190  0E00               	movlw	0
  8689  002192  1A19               	xorwf	___ftge@ff2,f,c
  8690  002194  0E00               	movlw	0
  8691  002196  1A1A               	xorwf	___ftge@ff2+1,f,c
  8692  002198  0E80               	movlw	128
  8693  00219A  1A1B               	xorwf	___ftge@ff2+2,f,c
  8694  00219C  5019               	movf	___ftge@ff2,w,c
  8695  00219E  5C16               	subwf	___ftge@ff1,w,c
  8696  0021A0  501A               	movf	___ftge@ff2+1,w,c
  8697  0021A2  5817               	subwfb	___ftge@ff1+1,w,c
  8698  0021A4  501B               	movf	___ftge@ff2+2,w,c
  8699  0021A6  5818               	subwfb	___ftge@ff1+2,w,c
  8700  0021A8  B0D8               	btfsc	status,0,c
  8701  0021AA  D002               	goto	l5088
  8702  0021AC  90D8               	bcf	status,0,c
  8703  0021AE  0012               	return	
  8704  0021B0                     l5088:
  8705  0021B0  80D8               	bsf	status,0,c
  8706  0021B2  0012               	return		;funcret
  8707  0021B4                     __end_of___ftge:
  8708                           	opt callstack 0
  8709                           
  8710 ;; *************** function _mpap_setupToHomming *****************
  8711 ;; Defined at:
  8712 ;;		line 64 in file "mpap.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;		None
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg, status,2, status,0, cstack
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 3F/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8726 ;;      Params:         0       0       0       0       0       0       0       0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8729 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8730 ;;Total ram usage:        0 bytes
  8731 ;; Hardware stack levels used:    1
  8732 ;; Hardware stack levels required when called:    6
  8733 ;; This function calls:
  8734 ;;		_mpap_setupToTurn
  8735 ;; This function is called by:
  8736 ;;		_autoMode_job
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text65
  8741  00292A                     __ptext65:
  8742                           	opt callstack 0
  8743  00292A                     _mpap_setupToHomming:
  8744                           	opt callstack 23
  8745                           
  8746                           ;mpap.c: 67: mpap_setupToTurn( -1 *( (18*200) +20));
  8747                           
  8748                           ;incstack = 0
  8749  00292A  0EF1               	movlw	241
  8750  00292C  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  8751  00292E  0EDC               	movlw	220
  8752  002930  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  8753  002932  EC82  F013         	call	_mpap_setupToTurn	;wreg free
  8754                           
  8755                           ;mpap.c: 69: mpap.mode = MPAP_HOMMING_MODE;
  8756  002936  0E02               	movlw	2
  8757  002938  0100               	movlb	0	; () banked
  8758  00293A  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  8759                           
  8760                           ; BSR set to: 0
  8761  00293C  0012               	return		;funcret
  8762  00293E                     __end_of_mpap_setupToHomming:
  8763                           	opt callstack 0
  8764                           
  8765 ;; *************** function _mpap_movetoNozzle *****************
  8766 ;; Defined at:
  8767 ;;		line 213 in file "mpap.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  numNozzle       1    wreg     char 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  numNozzle       1   20[COMRAM] char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1    wreg      void 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 3F/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0
  8782 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8784 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8785 ;;Total ram usage:        1 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    6
  8788 ;; This function calls:
  8789 ;;		___wmul
  8790 ;;		_mpap_setupToTurn
  8791 ;; This function is called by:
  8792 ;;		_autoMode_job
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text66
  8797  0026D2                     __ptext66:
  8798                           	opt callstack 0
  8799  0026D2                     _mpap_movetoNozzle:
  8800                           	opt callstack 23
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;incstack = 0
  8804                           ;mpap_movetoNozzle@numNozzle stored from wreg
  8805  0026D2  6E15               	movwf	mpap_movetoNozzle@numNozzle,c
  8806                           
  8807                           ;mpap.c: 216: mpap_setupToTurn( (numNozzle*200) - mpap.numSteps_current);
  8808  0026D4  5015               	movf	mpap_movetoNozzle@numNozzle,w,c
  8809  0026D6  6E0B               	movwf	___wmul@multiplier,c
  8810  0026D8  6A0C               	clrf	___wmul@multiplier+1,c
  8811  0026DA  BE0B               	btfsc	___wmul@multiplier,7,c
  8812  0026DC  060C               	decf	___wmul@multiplier+1,f,c
  8813  0026DE  0E00               	movlw	0
  8814  0026E0  6E0E               	movwf	___wmul@multiplicand+1,c
  8815  0026E2  0EC8               	movlw	200
  8816  0026E4  6E0D               	movwf	___wmul@multiplicand,c
  8817  0026E6  ECE1  F013         	call	___wmul	;wreg free
  8818  0026EA  0100               	movlb	0	; () banked
  8819  0026EC  51B0               	movf	_mpap& (0+255),w,b	;volatile
  8820  0026EE  5C0B               	subwf	?___wmul,w,c
  8821  0026F0  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  8822  0026F2  51B1               	movf	(_mpap+1)& (0+255),w,b	;volatile
  8823  0026F4  580C               	subwfb	?___wmul+1,w,c
  8824  0026F6  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  8825  0026F8  EC82  F013         	call	_mpap_setupToTurn	;wreg free
  8826                           
  8827                           ;mpap.c: 218: mpap.mode = MPAP_NORMAL_MODE;
  8828  0026FC  0E03               	movlw	3
  8829  0026FE  0100               	movlb	0	; () banked
  8830  002700  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  8831                           
  8832                           ; BSR set to: 0
  8833  002702  0012               	return		;funcret
  8834  002704                     __end_of_mpap_movetoNozzle:
  8835                           	opt callstack 0
  8836                           
  8837 ;; *************** function _mpap_setupToTurn *****************
  8838 ;; Defined at:
  8839 ;;		line 55 in file "mpap.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  numSteps_tom    2   16[COMRAM] int 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8853 ;;      Params:         2       0       0       0       0       0       0       0       0
  8854 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8856 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8857 ;;Total ram usage:        4 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    5
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_mpap_setupToHomming
  8864 ;;		_mpap_movetoNozzle
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text67
  8869  002704                     __ptext67:
  8870                           	opt callstack 0
  8871  002704                     _mpap_setupToTurn:
  8872                           	opt callstack 23
  8873                           
  8874                           ;mpap.c: 57: if (numSteps_tomove !=0)
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;incstack = 0
  8878  002704  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  8879  002706  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  8880  002708  B4D8               	btfsc	status,2,c
  8881  00270A  0012               	return	
  8882                           
  8883                           ;mpap.c: 58: {;mpap.c: 59: mpap.KI = (numSteps_tomove<0)? -1: 1;
  8884  00270C  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  8885  00270E  D005               	goto	l480
  8886  002710  0E00               	movlw	0
  8887  002712  6E14               	movwf	_mpap_setupToTurn$522+1,c
  8888  002714  0E01               	movlw	1
  8889  002716  6E13               	movwf	_mpap_setupToTurn$522,c
  8890  002718  D002               	goto	l482
  8891  00271A                     l480:
  8892  00271A  6813               	setf	_mpap_setupToTurn$522,c
  8893  00271C  6814               	setf	_mpap_setupToTurn$522+1,c
  8894  00271E                     l482:
  8895  00271E  C013  F0B6         	movff	_mpap_setupToTurn$522,_mpap+6	;volatile
  8896                           
  8897                           ;mpap.c: 60: mpap.counter_steps = 0;
  8898  002722  0E00               	movlw	0
  8899  002724  0100               	movlb	0	; () banked
  8900  002726  6FB3               	movwf	(_mpap+3)& (0+255),b	;volatile
  8901  002728  0E00               	movlw	0
  8902  00272A  6FB2               	movwf	(_mpap+2)& (0+255),b	;volatile
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;mpap.c: 61: mpap.numSteps_tomove = numSteps_tomove;
  8906  00272C  C011  F0B4         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  8907  002730  C012  F0B5         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  8908  002734  0012               	return		;funcret
  8909  002736                     __end_of_mpap_setupToTurn:
  8910                           	opt callstack 0
  8911                           
  8912 ;; *************** function ___wmul *****************
  8913 ;; Defined at:
  8914 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  multiplier      2   10[COMRAM] unsigned int 
  8917 ;;  multiplicand    2   12[COMRAM] unsigned int 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  product         2   14[COMRAM] unsigned int 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  2   10[COMRAM] unsigned int 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0, prodl, prodh
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8929 ;;      Params:         4       0       0       0       0       0       0       0       0
  8930 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8932 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8933 ;;Total ram usage:        6 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:    5
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_mpap_movetoNozzle
  8940 ;;		_disp7s_write_i
  8941 ;;		_nozzle_isEnabled
  8942 ;;		_pulsonic_getTotalSum_mlh
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text68
  8947  0027C2                     __ptext68:
  8948                           	opt callstack 0
  8949  0027C2                     ___wmul:
  8950                           	opt callstack 21
  8951                           
  8952                           ;incstack = 0
  8953  0027C2  500B               	movf	___wmul@multiplier,w,c
  8954  0027C4  020D               	mulwf	___wmul@multiplicand,c
  8955  0027C6  CFF3 F00F          	movff	prodl,___wmul@product
  8956  0027CA  CFF4 F010          	movff	prodh,___wmul@product+1
  8957  0027CE  500B               	movf	___wmul@multiplier,w,c
  8958  0027D0  020E               	mulwf	___wmul@multiplicand+1,c
  8959  0027D2  50F3               	movf	prodl,w,c
  8960  0027D4  2610               	addwf	___wmul@product+1,f,c
  8961  0027D6  500C               	movf	___wmul@multiplier+1,w,c
  8962  0027D8  020D               	mulwf	___wmul@multiplicand,c
  8963  0027DA  50F3               	movf	prodl,w,c
  8964  0027DC  2610               	addwf	___wmul@product+1,f,c
  8965  0027DE  C00F  F00B         	movff	___wmul@product,?___wmul
  8966  0027E2  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  8967  0027E6  0012               	return		;funcret
  8968  0027E8                     __end_of___wmul:
  8969                           	opt callstack 0
  8970                           
  8971 ;; *************** function _mpap_isIdle *****************
  8972 ;; Defined at:
  8973 ;;		line 220 in file "mpap.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;		None
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;		None
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  1    wreg      char 
  8980 ;; Registers used:
  8981 ;;		wreg, status,2
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 3F/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8987 ;;      Params:         0       0       0       0       0       0       0       0       0
  8988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8990 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8991 ;;Total ram usage:        0 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    5
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_autoMode_job
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text69
  9002  002984                     __ptext69:
  9003                           	opt callstack 0
  9004  002984                     _mpap_isIdle:
  9005                           	opt callstack 24
  9006                           
  9007                           ;mpap.c: 222: if (mpap.mode == MPAP_IDLE_MODE)
  9008                           
  9009                           ;incstack = 0
  9010  002984  0100               	movlb	0	; () banked
  9011  002986  51B7               	movf	(_mpap+7)& (0+255),w,b	;volatile
  9012  002988  A4D8               	btfss	status,2,c
  9013  00298A  D002               	goto	l5528
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;mpap.c: 223: {return 1;}
  9017  00298C  0E01               	movlw	1
  9018  00298E  0012               	return	
  9019  002990                     l5528:
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;mpap.c: 224: return 0;
  9023  002990  0E00               	movlw	0
  9024                           
  9025                           ; BSR set to: 0
  9026  002992  0012               	return		;funcret
  9027  002994                     __end_of_mpap_isIdle:
  9028                           	opt callstack 0
  9029                           
  9030 ;; *************** function _autoMode_kb *****************
  9031 ;; Defined at:
  9032 ;;		line 85 in file "automode.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;		None
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;  cod_ret         1   11[COMRAM] char 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  1    wreg      char 
  9039 ;; Registers used:
  9040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 3F/0
  9043 ;;		On exit  : 3F/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9046 ;;      Params:         0       0       0       0       0       0       0       0       0
  9047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9049 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9050 ;;Total ram usage:        1 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    6
  9053 ;; This function calls:
  9054 ;;		_ikb_get_AtTimeExpired_BeforeOrAfter
  9055 ;;		_ikb_key_is_ready2read
  9056 ;;		_ikb_key_was_read
  9057 ;;		_visMode_init
  9058 ;; This function is called by:
  9059 ;;		_autoMode_job
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text70
  9064  001DB2                     __ptext70:
  9065                           	opt callstack 0
  9066  001DB2                     _autoMode_kb:
  9067                           	opt callstack 23
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;automode.c: 87: int8_t cod_ret = 0;
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;incstack = 0
  9074  001DB2  0E00               	movlw	0
  9075  001DB4  6E0C               	movwf	autoMode_kb@cod_ret,c
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;automode.c: 89: if (ikb_key_is_ready2read(0))
  9079  001DB6  0E00               	movlw	0
  9080  001DB8  EC55  F014         	call	_ikb_key_is_ready2read
  9081  001DBC  0900               	iorlw	0
  9082  001DBE  B4D8               	btfsc	status,2,c
  9083  001DC0  D008               	goto	l5584
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;automode.c: 90: {;automode.c: 91: ikb_key_was_read(0);
  9087  001DC2  0E00               	movlw	0
  9088  001DC4  EC9F  F014         	call	_ikb_key_was_read
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;automode.c: 93: visMode_init(0x00);
  9092  001DC8  0E00               	movlw	0
  9093  001DCA  ECCA  F014         	call	_visMode_init
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;automode.c: 94: cod_ret = 1;
  9097  001DCE  0E01               	movlw	1
  9098  001DD0  6E0C               	movwf	autoMode_kb@cod_ret,c
  9099  001DD2                     l5584:
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;automode.c: 95: };automode.c: 96: if (ikb_key_is_ready2read(1))
  9103  001DD2  0E01               	movlw	1
  9104  001DD4  EC55  F014         	call	_ikb_key_is_ready2read
  9105  001DD8  0900               	iorlw	0
  9106  001DDA  B4D8               	btfsc	status,2,c
  9107  001DDC  D008               	goto	l5592
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;automode.c: 97: {;automode.c: 98: ikb_key_was_read(1);
  9111  001DDE  0E01               	movlw	1
  9112  001DE0  EC9F  F014         	call	_ikb_key_was_read
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;automode.c: 100: visMode_init((8+1)-1);
  9116  001DE4  0E08               	movlw	8
  9117  001DE6  ECCA  F014         	call	_visMode_init
  9118                           
  9119                           ; BSR set to: 0
  9120                           ;automode.c: 101: cod_ret = 1;
  9121  001DEA  0E01               	movlw	1
  9122  001DEC  6E0C               	movwf	autoMode_kb@cod_ret,c
  9123  001DEE                     l5592:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;automode.c: 102: };automode.c: 103: if ((ikb_get_AtTimeExpired_BeforeOrAfter(2)==1) &&;
      +                          automode.c: 104: ikb_key_is_ready2read(2) &&;automode.c: 105: (ikb_get_AtTimeExpired_Bef
      +                          oreOrAfter(3)==1) &&;automode.c: 106: ikb_key_is_ready2read(3))
  9127  001DEE  0E02               	movlw	2
  9128  001DF0  EC63  F014         	call	_ikb_get_AtTimeExpired_BeforeOrAfter
  9129  001DF4  06E8               	decf	wreg,f,c
  9130  001DF6  A4D8               	btfss	status,2,c
  9131  001DF8  D01A               	goto	l5604
  9132                           
  9133                           ; BSR set to: 0
  9134  001DFA  0E02               	movlw	2
  9135  001DFC  EC55  F014         	call	_ikb_key_is_ready2read
  9136  001E00  0900               	iorlw	0
  9137  001E02  B4D8               	btfsc	status,2,c
  9138  001E04  D014               	goto	l5604
  9139                           
  9140                           ; BSR set to: 0
  9141  001E06  0E03               	movlw	3
  9142  001E08  EC63  F014         	call	_ikb_get_AtTimeExpired_BeforeOrAfter
  9143  001E0C  06E8               	decf	wreg,f,c
  9144  001E0E  A4D8               	btfss	status,2,c
  9145  001E10  D00E               	goto	l5604
  9146                           
  9147                           ; BSR set to: 0
  9148  001E12  0E03               	movlw	3
  9149  001E14  EC55  F014         	call	_ikb_key_is_ready2read
  9150  001E18  0900               	iorlw	0
  9151  001E1A  B4D8               	btfsc	status,2,c
  9152  001E1C  D008               	goto	l5604
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;automode.c: 107: {;automode.c: 108: ikb_key_was_read(2);
  9156  001E1E  0E02               	movlw	2
  9157  001E20  EC9F  F014         	call	_ikb_key_was_read
  9158                           
  9159                           ;automode.c: 109: ikb_key_was_read(3);
  9160  001E24  0E03               	movlw	3
  9161  001E26  EC9F  F014         	call	_ikb_key_was_read
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;automode.c: 111: cod_ret = 2;
  9165  001E2A  0E02               	movlw	2
  9166  001E2C  6E0C               	movwf	autoMode_kb@cod_ret,c
  9167  001E2E                     l5604:
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;automode.c: 112: };automode.c: 114: if (ikb_key_is_ready2read(4))
  9171  001E2E  0E04               	movlw	4
  9172  001E30  EC55  F014         	call	_ikb_key_is_ready2read
  9173  001E34  0900               	iorlw	0
  9174  001E36  B4D8               	btfsc	status,2,c
  9175  001E38  D003               	goto	l5608
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;automode.c: 115: {;automode.c: 117: ikb_key_was_read(4);
  9179  001E3A  0E04               	movlw	4
  9180  001E3C  EC9F  F014         	call	_ikb_key_was_read
  9181  001E40                     l5608:
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;automode.c: 119: };automode.c: 120: return cod_ret;
  9185  001E40  500C               	movf	autoMode_kb@cod_ret,w,c
  9186                           
  9187                           ; BSR set to: 0
  9188  001E42  0012               	return		;funcret
  9189  001E44                     __end_of_autoMode_kb:
  9190                           	opt callstack 0
  9191                           
  9192 ;; *************** function _visMode_init *****************
  9193 ;; Defined at:
  9194 ;;		line 14 in file "visualizerMode.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  numVista        1    wreg     char 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  numVista        1   10[COMRAM] char 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2
  9203 ;; Tracked objects:
  9204 ;;		On entry : 3F/0
  9205 ;;		On exit  : 3F/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0
  9209 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9211 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9212 ;;Total ram usage:        1 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:    5
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_autoMode_kb
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text71
  9223  002994                     __ptext71:
  9224                           	opt callstack 0
  9225  002994                     _visMode_init:
  9226                           	opt callstack 23
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;incstack = 0
  9230                           ;visMode_init@numVista stored from wreg
  9231  002994  6E0B               	movwf	visMode_init@numVista,c
  9232                           
  9233                           ;visualizerMode.c: 16: visMode.numVista = numVista;
  9234  002996  C00B  F0BE         	movff	visMode_init@numVista,_visMode+1
  9235                           
  9236                           ;visualizerMode.c: 17: visMode.disp7s_accessReq = 1;
  9237  00299A  0E01               	movlw	1
  9238  00299C  0100               	movlb	0	; () banked
  9239  00299E  6FBD               	movwf	_visMode& (0+255),b
  9240                           
  9241                           ; BSR set to: 0
  9242  0029A0  0012               	return		;funcret
  9243  0029A2                     __end_of_visMode_init:
  9244                           	opt callstack 0
  9245                           
  9246 ;; *************** function _ikb_key_was_read *****************
  9247 ;; Defined at:
  9248 ;;		line 489 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  k               1    wreg     unsigned char 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;  k               1   10[COMRAM] unsigned char 
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 3F/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9262 ;;      Params:         0       0       0       0       0       0       0       0       0
  9263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9265 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9266 ;;Total ram usage:        1 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:    5
  9269 ;; This function calls:
  9270 ;;		Nothing
  9271 ;; This function is called by:
  9272 ;;		_autoMode_kb
  9273 ;;		_visMode_kb
  9274 ;;		_configMode_kb
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           	psect	text72
  9279  00293E                     __ptext72:
  9280                           	opt callstack 0
  9281  00293E                     _ikb_key_was_read:
  9282                           	opt callstack 23
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;incstack = 0
  9286                           ;ikb_key_was_read@k stored from wreg
  9287  00293E  6E0B               	movwf	ikb_key_was_read@k,c
  9288                           
  9289                           ;ikb.c: 491: key[k].bf.ReadyToRead = 0;
  9290  002940  500B               	movf	ikb_key_was_read@k,w,c
  9291  002942  0D10               	mullw	16
  9292  002944  50F3               	movf	prodl,w,c
  9293  002946  0F6A               	addlw	low (_key+10)
  9294  002948  6ED9               	movwf	fsr2l,c
  9295  00294A  6ADA               	clrf	fsr2h,c
  9296  00294C  0100               	movlb	0	; () banked
  9297  00294E  9EDF               	bcf	indf2,7,c
  9298                           
  9299                           ; BSR set to: 0
  9300  002950  0012               	return		;funcret
  9301  002952                     __end_of_ikb_key_was_read:
  9302                           	opt callstack 0
  9303                           
  9304 ;; *************** function _ikb_key_is_ready2read *****************
  9305 ;; Defined at:
  9306 ;;		line 481 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  k               1    wreg     unsigned char 
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;  k               1   10[COMRAM] unsigned char 
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      unsigned char 
  9313 ;; Registers used:
  9314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9315 ;; Tracked objects:
  9316 ;;		On entry : 3F/0
  9317 ;;		On exit  : 3F/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0
  9321 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9323 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9324 ;;Total ram usage:        1 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:    5
  9327 ;; This function calls:
  9328 ;;		Nothing
  9329 ;; This function is called by:
  9330 ;;		_autoMode_kb
  9331 ;;		_visMode_kb
  9332 ;;		_configMode_kb
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text73
  9337  0028AA                     __ptext73:
  9338                           	opt callstack 0
  9339  0028AA                     _ikb_key_is_ready2read:
  9340                           	opt callstack 23
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;incstack = 0
  9344                           ;ikb_key_is_ready2read@k stored from wreg
  9345  0028AA  6E0B               	movwf	ikb_key_is_ready2read@k,c
  9346                           
  9347                           ;ikb.c: 483: return key[k].bf.ReadyToRead;
  9348  0028AC  500B               	movf	ikb_key_is_ready2read@k,w,c
  9349  0028AE  0D10               	mullw	16
  9350  0028B0  50F3               	movf	prodl,w,c
  9351  0028B2  0F6A               	addlw	low (_key+10)
  9352  0028B4  6ED9               	movwf	fsr2l,c
  9353  0028B6  6ADA               	clrf	fsr2h,c
  9354  0028B8  0100               	movlb	0	; () banked
  9355  0028BA  AEDF               	btfss	indf2,7,c
  9356  0028BC  D002               	goto	u5590
  9357  0028BE  0E01               	movlw	1
  9358  0028C0  0012               	return	
  9359  0028C2                     u5590:
  9360  0028C2  0E00               	movlw	0
  9361                           
  9362                           ; BSR set to: 0
  9363  0028C4  0012               	return		;funcret
  9364  0028C6                     __end_of_ikb_key_is_ready2read:
  9365                           	opt callstack 0
  9366                           
  9367 ;; *************** function _ikb_get_AtTimeExpired_BeforeOrAfter *****************
  9368 ;; Defined at:
  9369 ;;		line 477 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  k               1    wreg     unsigned char 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  k               1   10[COMRAM] unsigned char 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      unsigned char 
  9376 ;; Registers used:
  9377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9378 ;; Tracked objects:
  9379 ;;		On entry : 3F/0
  9380 ;;		On exit  : 3F/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0
  9384 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9386 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9387 ;;Total ram usage:        1 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:    5
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_autoMode_kb
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text74
  9398  0028C6                     __ptext74:
  9399                           	opt callstack 0
  9400  0028C6                     _ikb_get_AtTimeExpired_BeforeOrAfter:
  9401                           	opt callstack 23
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;incstack = 0
  9405                           ;ikb_get_AtTimeExpired_BeforeOrAfter@k stored from wreg
  9406  0028C6  6E0B               	movwf	ikb_get_AtTimeExpired_BeforeOrAfter@k,c
  9407                           
  9408                           ;ikb.c: 479: return key[k].bf.AtTimeExpired_BeforeOrAfter;
  9409  0028C8  500B               	movf	ikb_get_AtTimeExpired_BeforeOrAfter@k,w,c
  9410  0028CA  0D10               	mullw	16
  9411  0028CC  50F3               	movf	prodl,w,c
  9412  0028CE  0F6B               	addlw	low (_key+11)
  9413  0028D0  6ED9               	movwf	fsr2l,c
  9414  0028D2  6ADA               	clrf	fsr2h,c
  9415  0028D4  0100               	movlb	0	; () banked
  9416  0028D6  A0DF               	btfss	indf2,0,c
  9417  0028D8  D002               	goto	u5580
  9418  0028DA  0E01               	movlw	1
  9419  0028DC  0012               	return	
  9420  0028DE                     u5580:
  9421  0028DE  0E00               	movlw	0
  9422                           
  9423                           ; BSR set to: 0
  9424  0028E0  0012               	return		;funcret
  9425  0028E2                     __end_of_ikb_get_AtTimeExpired_BeforeOrAfter:
  9426                           	opt callstack 0
  9427                           
  9428 ;; *************** function _INTERRUPCION *****************
  9429 ;; Defined at:
  9430 ;;		line 243 in file "main.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;		None
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;		None
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0
  9445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9446 ;;      Temps:          6       0       0       0       0       0       0       0       0
  9447 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9448 ;;Total ram usage:        6 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    4
  9451 ;; This function calls:
  9452 ;;		_mpap_job
  9453 ;; This function is called by:
  9454 ;;		Interrupt level 2
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	intcode
  9459  000008                     __pintcode:
  9460                           	opt callstack 0
  9461  000008                     _INTERRUPCION:
  9462                           	opt callstack 19
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;incstack = 0
  9466  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9467  00000A  ED1D  F012         	call	int_func,f	;refresh shadow registers
  9468                           
  9469                           	psect	intcode_body
  9470  00243A                     __pintcode_body:
  9471                           	opt callstack 19
  9472  00243A                     int_func:
  9473                           	opt callstack 19
  9474  00243A  0006               	pop		; remove dummy address from shadow register refresh
  9475  00243C  CFFA F005          	movff	pclath,??_INTERRUPCION
  9476  002440  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  9477  002444  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  9478  002448  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  9479  00244C  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  9480  002450  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  9481                           
  9482                           ;main.c: 245: if (TMR0IF)
  9483  002454  A4F2               	btfss	4082,2,c	;volatile
  9484  002456  D008               	goto	i2l158
  9485                           
  9486                           ;main.c: 246: {;main.c: 247: isr_flag.f1ms = 1;
  9487  002458  0100               	movlb	0	; () banked
  9488  00245A  81CC               	bsf	_isr_flag& (0+255),0,b	;volatile
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;main.c: 248: mpap_job();
  9492  00245C  EC8B  F012         	call	_mpap_job	;wreg free
  9493                           
  9494                           ;main.c: 250: TMR0IF = 0;
  9495  002460  94F2               	bcf	4082,2,c	;volatile
  9496                           
  9497                           ;main.c: 251: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  9498  002462  68D7               	setf	4055,c	;volatile
  9499                           
  9500                           ;main.c: 252: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  9501  002464  0ED1               	movlw	209
  9502  002466  6ED6               	movwf	4054,c	;volatile
  9503  002468                     i2l158:
  9504  002468  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  9505  00246C  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  9506  002470  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  9507  002474  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  9508  002478  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  9509  00247C  C005  FFFA         	movff	??_INTERRUPCION,pclath
  9510  002480  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9511  002482  0011               	retfie		f
  9512  002484                     __end_of_INTERRUPCION:
  9513                           	opt callstack 0
  9514                           
  9515 ;; *************** function _mpap_job *****************
  9516 ;; Defined at:
  9517 ;;		line 139 in file "mpap.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;		None
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;  cod_ret         1    0        char 
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1    wreg      char 
  9524 ;; Registers used:
  9525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9526 ;; Tracked objects:
  9527 ;;		On entry : 3F/0
  9528 ;;		On exit  : 3E/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9531 ;;      Params:         0       0       0       0       0       0       0       0       0
  9532 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9534 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9535 ;;Total ram usage:        1 bytes
  9536 ;; Hardware stack levels used:    1
  9537 ;; Hardware stack levels required when called:    3
  9538 ;; This function calls:
  9539 ;;		__mpap_off
  9540 ;;		_mpap_homming
  9541 ;;		_mpap_normal_mode
  9542 ;; This function is called by:
  9543 ;;		_INTERRUPCION
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           	psect	text76
  9548  002516                     __ptext76:
  9549                           	opt callstack 0
  9550  002516                     _mpap_job:
  9551                           	opt callstack 19
  9552                           
  9553                           ; BSR set to: 0
  9554                           ;mpap.c: 141: int8_t cod_ret;;mpap.c: 143: if (mpap.mode == MPAP_HOMMING_MODE)
  9555                           
  9556                           ;incstack = 0
  9557  002516  0E02               	movlw	2
  9558  002518  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  9559  00251A  A4D8               	btfss	status,2,c
  9560  00251C  D003               	goto	i2l4664
  9561                           
  9562                           ; BSR set to: 0
  9563  00251E  EC3E  F011         	call	_mpap_homming	;wreg free
  9564  002522  0012               	return	
  9565  002524                     i2l4664:
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;mpap.c: 146: else if (mpap.mode == MPAP_NORMAL_MODE)
  9569  002524  0E03               	movlw	3
  9570  002526  19B7               	xorwf	(_mpap+7)& (0+255),w,b	;volatile
  9571  002528  A4D8               	btfss	status,2,c
  9572  00252A  D003               	goto	i2l4668
  9573                           
  9574                           ; BSR set to: 0
  9575  00252C  EC42  F012         	call	_mpap_normal_mode	;wreg free
  9576  002530  0012               	return	
  9577  002532                     i2l4668:
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;mpap.c: 149: else if (mpap.mode == MPAP_STALL_MODE)
  9581  002532  05B7               	decf	(_mpap+7)& (0+255),w,b	;volatile
  9582  002534  A4D8               	btfss	status,2,c
  9583  002536  0012               	return	
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;mpap.c: 150: {;mpap.c: 151: mpap.numSteps_tomove = 0x00;
  9587  002538  0E00               	movlw	0
  9588  00253A  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
  9589  00253C  0E00               	movlw	0
  9590  00253E  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;mpap.c: 152: mpap_off();
  9594  002540  D801               	call	i2u472_48
  9595  002542  D00A               	goto	i2u472_49
  9596  002544                     i2u472_48:
  9597  002544  0005               	push	
  9598  002546  6EFA               	movwf	pclath,c
  9599  002548  51EC               	movf	_mpap_off& (0+255),w,b
  9600  00254A  6EFD               	movwf	tosl,c
  9601  00254C  51ED               	movf	(_mpap_off+1)& (0+255),w,b
  9602  00254E  6EFE               	movwf	tosh,c
  9603  002550  50F8               	movf	tblptru,w,c
  9604  002552  6EFF               	movwf	tosu,c
  9605  002554  50FA               	movf	pclath,w,c
  9606  002556  0012               	return		;indir
  9607  002558                     i2u472_49:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;mpap.c: 154: mpap.mode = MPAP_IDLE_MODE;
  9611  002558  0E00               	movlw	0
  9612  00255A  6FB7               	movwf	(_mpap+7)& (0+255),b	;volatile
  9613  00255C  0012               	return	
  9614  00255E                     __end_of_mpap_job:
  9615                           	opt callstack 0
  9616                           
  9617 ;; *************** function _mpap_normal_mode *****************
  9618 ;; Defined at:
  9619 ;;		line 119 in file "mpap.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  cod_ret         1    1[COMRAM] char 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      char 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 3F/0
  9630 ;;		On exit  : 3F/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0
  9634 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9636 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9637 ;;Total ram usage:        1 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    2
  9640 ;; This function calls:
  9641 ;;		_mpap_do1step
  9642 ;; This function is called by:
  9643 ;;		_mpap_job
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text77
  9648  002484                     __ptext77:
  9649                           	opt callstack 0
  9650  002484                     _mpap_normal_mode:
  9651                           	opt callstack 19
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;mpap.c: 121: int8_t cod_ret = 0;
  9655                           
  9656                           ;incstack = 0
  9657  002484  0E00               	movlw	0
  9658  002486  6E02               	movwf	mpap_normal_mode@cod_ret,c
  9659                           
  9660                           ; BSR set to: 0
  9661                           ;mpap.c: 122: if (mpap.numSteps_tomove!=0)
  9662  002488  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  9663  00248A  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
  9664  00248C  B4D8               	btfsc	status,2,c
  9665  00248E  D01D               	goto	i2l502
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;mpap.c: 123: {;mpap.c: 124: mpap_do1step(mpap.KI);
  9669  002490  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9670  002492  ECD0  F012         	call	_mpap_do1step
  9671                           
  9672                           ;mpap.c: 126: mpap.counter_steps+= mpap.KI;
  9673  002496  0100               	movlb	0	; () banked
  9674  002498  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9675  00249A  27B2               	addwf	(_mpap+2)& (0+255),f,b	;volatile
  9676  00249C  0E00               	movlw	0
  9677  00249E  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
  9678  0024A0  0EFF               	movlw	255
  9679  0024A2  23B3               	addwfc	(_mpap+3)& (0+255),f,b	;volatile
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;mpap.c: 128: mpap.numSteps_current+= mpap.KI;
  9683  0024A4  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9684  0024A6  27B0               	addwf	_mpap& (0+255),f,b	;volatile
  9685  0024A8  0E00               	movlw	0
  9686  0024AA  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
  9687  0024AC  0EFF               	movlw	255
  9688  0024AE  23B1               	addwfc	(_mpap+1)& (0+255),f,b	;volatile
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;mpap.c: 130: if ( mpap.counter_steps== mpap.numSteps_tomove)
  9692  0024B0  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  9693  0024B2  19B2               	xorwf	(_mpap+2)& (0+255),w,b	;volatile
  9694  0024B4  E10A               	bnz	i2l502
  9695  0024B6  51B5               	movf	(_mpap+5)& (0+255),w,b	;volatile
  9696  0024B8  19B3               	xorwf	(_mpap+3)& (0+255),w,b	;volatile
  9697  0024BA  A4D8               	btfss	status,2,c
  9698  0024BC  D006               	goto	i2l502
  9699                           
  9700                           ; BSR set to: 0
  9701                           ;mpap.c: 131: {;mpap.c: 132: mpap.numSteps_tomove = 0;
  9702  0024BE  0E00               	movlw	0
  9703  0024C0  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
  9704  0024C2  0E00               	movlw	0
  9705  0024C4  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
  9706                           
  9707                           ;mpap.c: 133: cod_ret = 1;
  9708  0024C6  0E01               	movlw	1
  9709  0024C8  6E02               	movwf	mpap_normal_mode@cod_ret,c
  9710  0024CA                     i2l502:
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;mpap.c: 134: };mpap.c: 135: };mpap.c: 136: return cod_ret;
  9714  0024CA  5002               	movf	mpap_normal_mode@cod_ret,w,c
  9715                           
  9716                           ; BSR set to: 0
  9717  0024CC  0012               	return		;funcret
  9718  0024CE                     __end_of_mpap_normal_mode:
  9719                           	opt callstack 0
  9720                           
  9721 ;; *************** function _mpap_homming *****************
  9722 ;; Defined at:
  9723 ;;		line 94 in file "mpap.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;		None
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;  cod_ret         1    2[COMRAM] char 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      char 
  9730 ;; Registers used:
  9731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 3F/0
  9734 ;;		On exit  : 3E/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9737 ;;      Params:         0       0       0       0       0       0       0       0       0
  9738 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9739 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9740 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9741 ;;Total ram usage:        2 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:    2
  9744 ;; This function calls:
  9745 ;;		_mpap_do1step
  9746 ;; This function is called by:
  9747 ;;		_mpap_job
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text78
  9752  00227C                     __ptext78:
  9753                           	opt callstack 0
  9754  00227C                     _mpap_homming:
  9755                           	opt callstack 19
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;mpap.c: 96: int8_t cod_ret = 0;
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;incstack = 0
  9762  00227C  0E00               	movlw	0
  9763  00227E  6E03               	movwf	mpap_homming@cod_ret,c
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;mpap.c: 97: if (mpap.numSteps_tomove!=0)
  9767  002280  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  9768  002282  11B5               	iorwf	(_mpap+5)& (0+255),w,b	;volatile
  9769  002284  B4D8               	btfsc	status,2,c
  9770  002286  D029               	goto	i2l496
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;mpap.c: 98: {;mpap.c: 99: mpap_do1step(mpap.KI);
  9774  002288  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9775  00228A  ECD0  F012         	call	_mpap_do1step
  9776                           
  9777                           ;mpap.c: 101: mpap.counter_steps+= mpap.KI;
  9778  00228E  0100               	movlb	0	; () banked
  9779  002290  51B6               	movf	(_mpap+6)& (0+255),w,b	;volatile
  9780  002292  27B2               	addwf	(_mpap+2)& (0+255),f,b	;volatile
  9781  002294  0E00               	movlw	0
  9782  002296  BFB6               	btfsc	(_mpap+6)& (0+255),7,b	;volatile
  9783  002298  0EFF               	movlw	255
  9784  00229A  23B3               	addwfc	(_mpap+3)& (0+255),f,b	;volatile
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;mpap.c: 103: if (((PORTE & (1<<1))>>1) == 0)
  9788  00229C  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  9789  0022A0  90D8               	bcf	status,0,c
  9790  0022A2  3202               	rrcf	??_mpap_homming,f,c
  9791  0022A4  B002               	btfsc	??_mpap_homming,0,c
  9792  0022A6  D00A               	goto	i2l4032
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;mpap.c: 104: {;mpap.c: 105: mpap.numSteps_tomove = 0x0000;
  9796  0022A8  0E00               	movlw	0
  9797  0022AA  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
  9798  0022AC  0E00               	movlw	0
  9799  0022AE  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
  9800                           
  9801                           ;mpap.c: 106: mpap.numSteps_current = 0x0000;
  9802  0022B0  0E00               	movlw	0
  9803  0022B2  6FB1               	movwf	(_mpap+1)& (0+255),b	;volatile
  9804  0022B4  0E00               	movlw	0
  9805  0022B6  6FB0               	movwf	_mpap& (0+255),b	;volatile
  9806                           
  9807                           ;mpap.c: 107: cod_ret = 1;
  9808  0022B8  0E01               	movlw	1
  9809  0022BA  6E03               	movwf	mpap_homming@cod_ret,c
  9810  0022BC                     i2l4032:
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;mpap.c: 108: };mpap.c: 109: if ( mpap.counter_steps == mpap.numSteps_tomove)
  9814  0022BC  51B4               	movf	(_mpap+4)& (0+255),w,b	;volatile
  9815  0022BE  19B2               	xorwf	(_mpap+2)& (0+255),w,b	;volatile
  9816  0022C0  E10C               	bnz	i2l496
  9817  0022C2  51B5               	movf	(_mpap+5)& (0+255),w,b	;volatile
  9818  0022C4  19B3               	xorwf	(_mpap+3)& (0+255),w,b	;volatile
  9819  0022C6  A4D8               	btfss	status,2,c
  9820  0022C8  D008               	goto	i2l496
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;mpap.c: 110: {;mpap.c: 111: mpap.numSteps_tomove = 0x0000;
  9824  0022CA  0E00               	movlw	0
  9825  0022CC  6FB5               	movwf	(_mpap+5)& (0+255),b	;volatile
  9826  0022CE  0E00               	movlw	0
  9827  0022D0  6FB4               	movwf	(_mpap+4)& (0+255),b	;volatile
  9828                           
  9829                           ;mpap.c: 112: cod_ret = 1;
  9830  0022D2  0E01               	movlw	1
  9831  0022D4  6E03               	movwf	mpap_homming@cod_ret,c
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;mpap.c: 113: pulsonic.errors.flag.mpap_home_sensor = 1;
  9835  0022D6  0101               	movlb	1	; () banked
  9836  0022D8  813B               	bsf	(_pulsonic+59)& (0+255),0,b
  9837  0022DA                     i2l496:
  9838                           
  9839                           ;mpap.c: 114: };mpap.c: 115: };mpap.c: 116: return cod_ret;
  9840  0022DA  5003               	movf	mpap_homming@cod_ret,w,c
  9841  0022DC  0012               	return		;funcret
  9842  0022DE                     __end_of_mpap_homming:
  9843                           	opt callstack 0
  9844                           
  9845 ;; *************** function _mpap_do1step *****************
  9846 ;; Defined at:
  9847 ;;		line 75 in file "mpap.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;  KI              1    wreg     char 
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;  KI              1    0[COMRAM] char 
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      void 
  9854 ;; Registers used:
  9855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9856 ;; Tracked objects:
  9857 ;;		On entry : 3F/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9861 ;;      Params:         0       0       0       0       0       0       0       0       0
  9862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9864 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9865 ;;Total ram usage:        1 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; Hardware stack levels required when called:    1
  9868 ;; This function calls:
  9869 ;;		__mpap_step1
  9870 ;;		__mpap_step2
  9871 ;;		__mpap_step3
  9872 ;;		__mpap_step4
  9873 ;; This function is called by:
  9874 ;;		_mpap_homming
  9875 ;;		_mpap_normal_mode
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           	psect	text79
  9880  0025A0                     __ptext79:
  9881                           	opt callstack 0
  9882  0025A0                     _mpap_do1step:
  9883                           	opt callstack 19
  9884                           
  9885                           ;incstack = 0
  9886                           ;mpap_do1step@KI stored from wreg
  9887  0025A0  6E01               	movwf	mpap_do1step@KI,c
  9888                           
  9889                           ;mpap.c: 77: static int8_t i = -1;;mpap.c: 79: i= i + KI;
  9890  0025A2  5052               	movf	mpap_do1step@i,w,c
  9891  0025A4  2401               	addwf	mpap_do1step@KI,w,c
  9892  0025A6  6E52               	movwf	mpap_do1step@i,c
  9893                           
  9894                           ;mpap.c: 80: if (i>3){i=0;}
  9895  0025A8  5052               	movf	mpap_do1step@i,w,c
  9896  0025AA  0A80               	xorlw	128
  9897  0025AC  0F7C               	addlw	-132
  9898  0025AE  A0D8               	btfss	status,0,c
  9899  0025B0  D002               	goto	i2l3800
  9900  0025B2  0E00               	movlw	0
  9901  0025B4  6E52               	movwf	mpap_do1step@i,c
  9902  0025B6                     i2l3800:
  9903                           
  9904                           ;mpap.c: 81: if (i<0){i=3;}
  9905  0025B6  AE52               	btfss	mpap_do1step@i,7,c
  9906  0025B8  D002               	goto	i2l3804
  9907  0025BA  0E03               	movlw	3
  9908  0025BC  6E52               	movwf	mpap_do1step@i,c
  9909  0025BE                     i2l3804:
  9910                           
  9911                           ;mpap.c: 83: mpap_step[i]();
  9912  0025BE  5052               	movf	mpap_do1step@i,w,c
  9913  0025C0  0D02               	mullw	2
  9914  0025C2  50F3               	movf	prodl,w,c
  9915  0025C4  0FE1               	addlw	low _mpap_step
  9916  0025C6  6ED9               	movwf	fsr2l,c
  9917  0025C8  6ADA               	clrf	fsr2h,c
  9918  0025CA  D801               	call	i2u324_48
  9919  0025CC  0012               	return	
  9920  0025CE                     i2u324_48:
  9921  0025CE  0005               	push	
  9922  0025D0  6EFA               	movwf	pclath,c
  9923  0025D2  50DE               	movf	postinc2,w,c
  9924  0025D4  6EFD               	movwf	tosl,c
  9925  0025D6  50DE               	movf	postinc2,w,c
  9926  0025D8  6EFE               	movwf	tosh,c
  9927  0025DA  50F8               	movf	tblptru,w,c
  9928  0025DC  6EFF               	movwf	tosu,c
  9929  0025DE  50FA               	movf	pclath,w,c
  9930  0025E0  0012               	return		;indir
  9931  0025E2                     __end_of_mpap_do1step:
  9932                           	opt callstack 0
  9933                           
  9934 ;; *************** function __mpap_step3 *****************
  9935 ;; Defined at:
  9936 ;;		line 21 in file "mpap.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;		None
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      void 
  9943 ;; Registers used:
  9944 ;;		status,2, status,0
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9950 ;;      Params:         0       0       0       0       0       0       0       0       0
  9951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9953 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9954 ;;Total ram usage:        0 bytes
  9955 ;; Hardware stack levels used:    1
  9956 ;; This function calls:
  9957 ;;		Nothing
  9958 ;; This function is called by:
  9959 ;;		_mpap_do1step
  9960 ;; This function uses a non-reentrant model
  9961 ;;
  9962                           
  9963                           	psect	text80
  9964  0029E2                     __ptext80:
  9965                           	opt callstack 0
  9966  0029E2                     __mpap_step3:
  9967                           	opt callstack 19
  9968                           
  9969                           ;incstack = 0
  9970                           ;mpap.c: 23: do{LATD &= ~(1<<0);}while(0);
  9971  0029E2  908C               	bcf	3980,0,c	;volatile
  9972                           
  9973                           ;mpap.c: 24: do{LATD |= 1<<1;}while(0);
  9974  0029E4  828C               	bsf	3980,1,c	;volatile
  9975                           
  9976                           ;mpap.c: 25: do{LATD &= ~(1<<2);}while(0);
  9977  0029E6  948C               	bcf	3980,2,c	;volatile
  9978                           
  9979                           ;mpap.c: 26: do{LATD &= ~(1<<3);}while(0);
  9980  0029E8  968C               	bcf	3980,3,c	;volatile
  9981  0029EA  0012               	return		;funcret
  9982  0029EC                     __end_of__mpap_step3:
  9983                           	opt callstack 0
  9984                           
  9985 ;; *************** function __mpap_step2 *****************
  9986 ;; Defined at:
  9987 ;;		line 13 in file "mpap.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;		None
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		status,2, status,0
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10001 ;;      Params:         0       0       0       0       0       0       0       0       0
 10002 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10004 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10005 ;;Total ram usage:        0 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; This function calls:
 10008 ;;		Nothing
 10009 ;; This function is called by:
 10010 ;;		_mpap_do1step
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           	psect	text81
 10015  0029EC                     __ptext81:
 10016                           	opt callstack 0
 10017  0029EC                     __mpap_step2:
 10018                           	opt callstack 19
 10019                           
 10020                           ;incstack = 0
 10021                           ;mpap.c: 15: do{LATD &= ~(1<<0);}while(0);
 10022  0029EC  908C               	bcf	3980,0,c	;volatile
 10023                           
 10024                           ;mpap.c: 16: do{LATD &= ~(1<<1);}while(0);
 10025  0029EE  928C               	bcf	3980,1,c	;volatile
 10026                           
 10027                           ;mpap.c: 17: do{LATD |= 1<<2;}while(0);
 10028  0029F0  848C               	bsf	3980,2,c	;volatile
 10029                           
 10030                           ;mpap.c: 18: do{LATD &= ~(1<<3);}while(0);
 10031  0029F2  968C               	bcf	3980,3,c	;volatile
 10032  0029F4  0012               	return		;funcret
 10033  0029F6                     __end_of__mpap_step2:
 10034                           	opt callstack 0
 10035                           
 10036 ;; *************** function __mpap_step1 *****************
 10037 ;; Defined at:
 10038 ;;		line 5 in file "mpap.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;		None
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;		None
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      void 
 10045 ;; Registers used:
 10046 ;;		status,2, status,0
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10052 ;;      Params:         0       0       0       0       0       0       0       0       0
 10053 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10055 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10056 ;;Total ram usage:        0 bytes
 10057 ;; Hardware stack levels used:    1
 10058 ;; This function calls:
 10059 ;;		Nothing
 10060 ;; This function is called by:
 10061 ;;		_mpap_do1step
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text82
 10066  0029F6                     __ptext82:
 10067                           	opt callstack 0
 10068  0029F6                     __mpap_step1:
 10069                           	opt callstack 19
 10070                           
 10071                           ;incstack = 0
 10072                           ;mpap.c: 7: do{LATD &= ~(1<<0);}while(0);
 10073  0029F6  908C               	bcf	3980,0,c	;volatile
 10074                           
 10075                           ;mpap.c: 8: do{LATD &= ~(1<<1);}while(0);
 10076  0029F8  928C               	bcf	3980,1,c	;volatile
 10077                           
 10078                           ;mpap.c: 9: do{LATD &= ~(1<<2);}while(0);
 10079  0029FA  948C               	bcf	3980,2,c	;volatile
 10080                           
 10081                           ;mpap.c: 10: do{LATD |= 1<<3;}while(0);
 10082  0029FC  868C               	bsf	3980,3,c	;volatile
 10083  0029FE  0012               	return		;funcret
 10084  002A00                     __end_of__mpap_step1:
 10085                           	opt callstack 0
 10086                           
 10087 ;; *************** function __mpap_step4 *****************
 10088 ;; Defined at:
 10089 ;;		line 29 in file "mpap.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;		None
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  1    wreg      void 
 10096 ;; Registers used:
 10097 ;;		status,2, status,0
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10103 ;;      Params:         0       0       0       0       0       0       0       0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10106 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10107 ;;Total ram usage:        0 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; This function calls:
 10110 ;;		Nothing
 10111 ;; This function is called by:
 10112 ;;		_mpap_do1step
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text83
 10117  002A00                     __ptext83:
 10118                           	opt callstack 0
 10119  002A00                     __mpap_step4:
 10120                           	opt callstack 19
 10121                           
 10122                           ;incstack = 0
 10123                           ;mpap.c: 31: do{LATD |= 1<<0;}while(0);
 10124  002A00  808C               	bsf	3980,0,c	;volatile
 10125                           
 10126                           ;mpap.c: 32: do{LATD &= ~(1<<1);}while(0);
 10127  002A02  928C               	bcf	3980,1,c	;volatile
 10128                           
 10129                           ;mpap.c: 33: do{LATD &= ~(1<<2);}while(0);
 10130  002A04  948C               	bcf	3980,2,c	;volatile
 10131                           
 10132                           ;mpap.c: 34: do{LATD &= ~(1<<3);}while(0);
 10133  002A06  968C               	bcf	3980,3,c	;volatile
 10134  002A08  0012               	return		;funcret
 10135  002A0A                     __end_of__mpap_step4:
 10136                           	opt callstack 0
 10137                           
 10138 ;; *************** function __mpap_off *****************
 10139 ;; Defined at:
 10140 ;;		line 43 in file "mpap.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;		None
 10143 ;; Auto vars:     Size  Location     Type
 10144 ;;		None
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  1    wreg      void 
 10147 ;; Registers used:
 10148 ;;		status,2, status,0
 10149 ;; Tracked objects:
 10150 ;;		On entry : 3F/0
 10151 ;;		On exit  : 3F/0
 10152 ;;		Unchanged: 3F/0
 10153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10154 ;;      Params:         0       0       0       0       0       0       0       0       0
 10155 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10156 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10157 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10158 ;;Total ram usage:        0 bytes
 10159 ;; Hardware stack levels used:    1
 10160 ;; This function calls:
 10161 ;;		Nothing
 10162 ;; This function is called by:
 10163 ;;		_mpap_job
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text84
 10168  002A0A                     __ptext84:
 10169                           	opt callstack 0
 10170  002A0A                     __mpap_off:
 10171                           	opt callstack 21
 10172                           
 10173                           ; BSR set to: 0
 10174                           
 10175                           ; BSR set to: 0
 10176                           
 10177                           ;incstack = 0
 10178                           ;mpap.c: 45: do{LATD &= ~(1<<0);}while(0);
 10179  002A0A  908C               	bcf	3980,0,c	;volatile
 10180                           
 10181                           ; BSR set to: 0
 10182                           
 10183                           ;mpap.c: 46: do{LATD &= ~(1<<1);}while(0);
 10184  002A0C  928C               	bcf	3980,1,c	;volatile
 10185                           
 10186                           ; BSR set to: 0
 10187                           
 10188                           ;mpap.c: 47: do{LATD &= ~(1<<2);}while(0);
 10189  002A0E  948C               	bcf	3980,2,c	;volatile
 10190                           
 10191                           ; BSR set to: 0
 10192                           
 10193                           ;mpap.c: 48: do{LATD &= ~(1<<3);}while(0);
 10194  002A10  968C               	bcf	3980,3,c	;volatile
 10195                           
 10196                           ; BSR set to: 0
 10197  002A12  0012               	return		;funcret
 10198  002A14                     __end_of__mpap_off:
 10199                           	opt callstack 0
 10200                           
 10201                           	psect	text85
 10202  000000                     __ptext85:
 10203                           	opt callstack 0
 10204                           
 10205                           	psect	rparam
 10206  0000                     
 10207                           	psect	temp
 10208  000053                     btemp:
 10209                           	opt callstack 0
 10210  000053                     	ds	1
 10211  0000                     int$flags	set	btemp
 10212  0000                     wtemp8	set	btemp+1
 10213  0000                     ttemp5	set	btemp+1
 10214  0000                     ttemp6	set	btemp+4
 10215  0000                     ttemp7	set	btemp+8
 10216                           tosu	equ	0xFFF
 10217                           tosh	equ	0xFFE
 10218                           tosl	equ	0xFFD
 10219                           stkptr	equ	0xFFC
 10220                           pclatu	equ	0xFFB
 10221                           pclath	equ	0xFFA
 10222                           pcl	equ	0xFF9
 10223                           tblptru	equ	0xFF8
 10224                           tblptrh	equ	0xFF7
 10225                           tblptrl	equ	0xFF6
 10226                           tablat	equ	0xFF5
 10227                           prodh	equ	0xFF4
 10228                           prodl	equ	0xFF3
 10229                           indf0	equ	0xFEF
 10230                           postinc0	equ	0xFEE
 10231                           postdec0	equ	0xFED
 10232                           preinc0	equ	0xFEC
 10233                           plusw0	equ	0xFEB
 10234                           fsr0h	equ	0xFEA
 10235                           fsr0l	equ	0xFE9
 10236                           wreg	equ	0xFE8
 10237                           indf1	equ	0xFE7
 10238                           postinc1	equ	0xFE6
 10239                           postdec1	equ	0xFE5
 10240                           preinc1	equ	0xFE4
 10241                           plusw1	equ	0xFE3
 10242                           fsr1h	equ	0xFE2
 10243                           fsr1l	equ	0xFE1
 10244                           bsr	equ	0xFE0
 10245                           indf2	equ	0xFDF
 10246                           postinc2	equ	0xFDE
 10247                           postdec2	equ	0xFDD
 10248                           preinc2	equ	0xFDC
 10249                           plusw2	equ	0xFDB
 10250                           fsr2h	equ	0xFDA
 10251                           fsr2l	equ	0xFD9
 10252                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        35
    BSS         188
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      82
    BANK0           160     17     160
    BANK1           256      3      68
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_i@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_f@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    disp7s_off@pDisp	PTR unsigned char  size(2) Largest target is 65
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[65]), 

    S574_disp7s_mux$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    disp7s_mux.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    S298_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S298_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 


Critical Paths under _main in COMRAM

    _main->_configMode_job
    _main->_visMode_job
    _visMode_job->_visMode_disp
    _visMode_kb->_ikb_key_is_ready2read
    _visMode_kb->_ikb_key_was_read
    _ps_autoMode_start->_autoMode_init
    _ikb_flush->_ikey_clear_all_flag
    _pulsonic_getTotalSum_mlh->___ftadd
    _disp7s_modeDisp_off->_disp7s_off
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    ___lwtoft->___ftpack
    _disp7s_job->_disp7s_mux_Q
    _disp7s_init->_disp7s_mux_init
    _configMode_job->_configMode_disp
    _configMode_kb->___ftsub
    ___ftsub->___ftadd
    _disp7s_qtyDisp_writeInt->_disp7s_write_i
    _disp7s_qtyDisp_writeFloat->_disp7s_write_f
    _disp7s_write_f->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftpack
    ___ftadd->___ftpack
    _disp7s_modeDisp_writeInt->_disp7s_write_i
    _disp7s_write_i->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _autoMode_job->_nozzle_isEnabled
    _nozzle_isEnabled->___ftge
    ___ftge->___lwtoft
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_movetoNozzle->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _autoMode_kb->_ikb_get_AtTimeExpired_BeforeOrAfter
    _autoMode_kb->_ikb_key_is_ready2read
    _autoMode_kb->_ikb_key_was_read
    _autoMode_kb->_visMode_init

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _disp7s_qtyDisp_writeFloat->_disp7s_write_f

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    _visMode_disp->_disp7s_qtyDisp_writeFloat
    _autoMode_init->_disp7s_qtyDisp_writeFloat
    _configMode_disp->_disp7s_qtyDisp_writeFloat

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  136608
                                             64 COMRAM     3     3      0
                      _autoMode_init
                       _autoMode_job
                    _configMode_init
                     _configMode_job
                        _disp7s_init
                         _disp7s_job
                           _ikb_init
                            _ikb_job
                          _mpap_sych
                  _ps_autoMode_start
                      _pulsonic_init
                           _pump_job
                        _visMode_job
 ---------------------------------------------------------------------------------
 (1) _visMode_job                                          1     1      0   28749
                                             63 COMRAM     1     1      0
                       _visMode_disp
                         _visMode_kb
 ---------------------------------------------------------------------------------
 (2) _visMode_kb                                           1     1      0     102
                                             11 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
 ---------------------------------------------------------------------------------
 (2) _visMode_disp                                         4     4      0   28610
                                             59 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
      _disp7s_modeDisp_writeText_oil
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
       _disp7s_qtyDisp_writeText_OFF
 ---------------------------------------------------------------------------------
 (1) _pump_job                                             1     1      0      13
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulsonic_init                                        1     1      0      99
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ps_autoMode_start                                    0     0      0   24953
                      _autoMode_init
                          _ikb_flush
 ---------------------------------------------------------------------------------
 (2) _ikb_flush                                            0     0      0      99
                _ikey_clear_all_flag
 ---------------------------------------------------------------------------------
 (3) _ikey_clear_all_flag                                  1     1      0      99
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _autoMode_init                                        1     1      0   24854
                                             59 COMRAM     1     1      0
                _disp7s_modeDisp_off
          _disp7s_qtyDisp_writeFloat
           _pulsonic_getTotalSum_mlh
 ---------------------------------------------------------------------------------
 (3) _pulsonic_getTotalSum_mlh                             8     5      3    6973
                                             30 COMRAM     8     5      3
                            ___ftadd
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_off                                  0     0      0     630
                         _disp7s_off
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    9247
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     654
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key0 *
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    8593
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      93
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3644
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _disp7s_job                                           3     3      0     263
                                             18 COMRAM     3     3      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
                       _disp7s_mux_Q
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_Q                                         8     8      0     192
                                             10 COMRAM     8     8      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (1) _disp7s_init                                          1     1      0     297
                                             11 COMRAM     1     1      0
                    _disp7s_mux_init
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_init                                      1     1      0      99
                                             10 COMRAM     1     1      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configMode_job                                       1     1      0   41836
                                             63 COMRAM     1     1      0
                    _configMode_disp
                      _configMode_kb
 ---------------------------------------------------------------------------------
 (2) _configMode_kb                                        4     4      0   13189
                                             36 COMRAM     4     4      0
                            ___ftadd
                             ___ftge
                            ___ftsub
              _ikb_key_is_ready2read
                   _ikb_key_was_read
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5754
                                             30 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _configMode_disp                                      4     4      0   28610
                                             59 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
      _disp7s_modeDisp_writeText_oil
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
       _disp7s_qtyDisp_writeText_OFF
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeText_OFF                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeInt                              2     0      2    5581
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeFloat                            3     0      3   17220
                                              0 BANK1      3     0      3
                     _disp7s_write_f
           _pulsonic_getTotalSum_mlh (ARG)
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_f                                      28    22      6   16919
                                             48 COMRAM    11     5      6
                                              0 BANK0     17    17      0
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                         _disp7s_off
                               _itoa
 ---------------------------------------------------------------------------------
 (5) _disp7s_off                                           6     3      3     630
                                             10 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     551
                                             33 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4427
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5338
                                             18 COMRAM    12     6      6
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3253
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeText_oil                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeInt                             2     0      2    5651
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_i                                      24    19      5    5370
                                             31 COMRAM    24    19      5
                             ___wmul
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               3     1      2     220
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 6     1      5    2496
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _configMode_init                                      1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _autoMode_job                                         1     1      0    6062
                                             32 COMRAM     1     1      0
                        _autoMode_kb
                        _mpap_isIdle
                  _mpap_movetoNozzle
                _mpap_setupToHomming
                   _nozzle_isEnabled
                        _pump_isIdle
                       _pump_setTick
 ---------------------------------------------------------------------------------
 (2) _pump_setTick                                         2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _pump_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nozzle_isEnabled                                     2     0      2    3587
                                             30 COMRAM     2     0      2
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    1998
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToHomming                                  0     0      0     310
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_movetoNozzle                                    1     1      0    1809
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (3) _mpap_setupToTurn                                     4     2      2     310
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1468
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _mpap_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _autoMode_kb                                          1     1      0     167
                                             11 COMRAM     1     1      0
_ikb_get_AtTimeExpired_BeforeOrAfter
              _ikb_key_is_ready2read
                   _ikb_key_was_read
                       _visMode_init
 ---------------------------------------------------------------------------------
 (3) _visMode_init                                         1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_key_was_read                                     1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_key_is_ready2read                                1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_get_AtTimeExpired_BeforeOrAfter                  1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (9) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (10) _mpap_normal_mode                                    1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (10) _mpap_homming                                        2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (11) _mpap_do1step                                        1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (12) __mpap_step4                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) __mpap_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autoMode_init
     _disp7s_modeDisp_off
       _disp7s_off
     _disp7s_qtyDisp_writeFloat
       _disp7s_write_f
         ___ftadd
           ___ftpack
           ___wmul (ARG)
         ___ftge
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         _disp7s_off
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _pulsonic_getTotalSum_mlh (ARG)
         ___ftadd
           ___ftpack
           ___wmul (ARG)
         ___wmul
     _pulsonic_getTotalSum_mlh
       ___ftadd
         ___ftpack
         ___wmul (ARG)
       ___wmul
   _autoMode_job
     _autoMode_kb
       _ikb_get_AtTimeExpired_BeforeOrAfter
       _ikb_key_is_ready2read
       _ikb_key_was_read
       _visMode_init
     _mpap_isIdle
     _mpap_movetoNozzle
       ___wmul
       _mpap_setupToTurn
         ___wmul (ARG)
     _mpap_setupToHomming
       _mpap_setupToTurn
         ___wmul (ARG)
     _nozzle_isEnabled
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _pump_isIdle
     _pump_setTick
   _configMode_init
   _configMode_job
     _configMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_modeDisp_writeText_oil
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeText_OFF
     _configMode_kb
       ___ftadd
         ___ftpack
         ___wmul (ARG)
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftsub
         ___ftadd
           ___ftpack
           ___wmul (ARG)
       _ikb_key_is_ready2read
       _ikb_key_was_read
   _disp7s_init
     _disp7s_mux_init
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _disp7s_job
     _disp7s_mux0_off *
     _disp7s_mux0_on *
     _disp7s_mux1_off *
     _disp7s_mux1_on *
     _disp7s_mux2_off *
     _disp7s_mux2_on *
     _disp7s_mux3_off *
     _disp7s_mux3_on *
     _disp7s_mux4_off *
     _disp7s_mux4_on *
     _disp7s_mux_Q *
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key0 *
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
   _mpap_sych
   _ps_autoMode_start
     _autoMode_init
       _disp7s_modeDisp_off
         _disp7s_off
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _pulsonic_getTotalSum_mlh
         ___ftadd
           ___ftpack
           ___wmul (ARG)
         ___wmul
     _ikb_flush
       _ikey_clear_all_flag
   _pulsonic_init
   _pump_job
   _visMode_job
     _visMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_modeDisp_writeText_oil
       _disp7s_qtyDisp_writeFloat
         _disp7s_write_f
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___wmul (ARG)
           ___wmul
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeText_OFF
     _visMode_kb
       _ikb_key_is_ready2read
       _ikb_key_was_read

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3      44       7       26.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     136      20        0.0%
DATA                 0      0     136       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 16 20:34:58 2019

                       disp7s_write_f@K10MULT 00FC                            autoMode_kb@cod_ret 000C  
                       ??_mpap_setupToHomming 0015                                   _pump_isIdle 2974  
                         ___wmul@multiplicand 000D                                   __CFG_BORV$3 000000  
                       disp7s_write_i@K10MULT 0035                                  ___ftadd@exp1 001E  
                                ___ftadd@exp2 001D                                  ___ftadd@sign 001C  
                                         l125 1762                                           l331 095E  
                                         l350 0A5E                                           l352 0AC0  
                                         l337 0914                                           l354 0B04  
                                         l346 09B8                                           l371 0E5E  
                                         l363 0DB0                                           l356 0B38  
                                         l348 0A1A                                           l357 0C84  
                                         l374 0EB0                                           l367 0DE4  
                                         l480 271A                                           l369 0E28  
                                         l482 271E                                           l910 1EBE  
                                         l909 1EAC                                           l962 0F00  
                                         l964 0F20                                           l968 0FBA  
                                         _GIE 007F97                                  __CFG_BOR$OFF 000000  
                                         _key 0060                                           prod 000FF3  
                                         tosl 000FFD                                           wreg 000FE8  
                      __size_of_pulsonic_init 0060                                  _pump_setTick 29D8  
                                ?_autoMode_kb 0001                                  __CFG_LVP$OFF 000000  
                                __CFG_WDT$OFF 000000                                          l1321 14CC  
                                        l1470 23E4                                          l1480 2596  
                                        l5012 14E8                                          l5004 149E  
                                        l1662 1D96                                          l5022 1518  
                                        l5006 14A8                                          l5200 1854  
                                        l5032 195C                                          l5120 1B8E  
                                        l5210 189A                                          l6010 2778  
                                        l5220 18E2                                          l5052 19B6  
                                        l5116 1B7E                                          l6100 1F1E  
                                        l5214 18C0                                          l5206 187C  
                                        l5062 19DE                                          l5038 1984  
                                        l5134 1BBE                                          l5126 1B96  
                                        l5150 1208                                          l5142 118E  
                                        l6102 1F20                                          l5056 19C6  
                                        l5128 1BA2                                          l5144 11B6  
                                        l6016 278A                                          l5082 2184  
                                        l5226 1924                                          l5066 19EE  
                                        l6034 27BA                                          l6106 1F2A  
                                        l6018 2790                                          l6202 17B0  
                                        l5172 12CA                                          l5156 122C  
                                        l5180 1314                                          l6036 27BE  
                                        l6028 27A6                                          l6116 1F4C  
                                        l6052 2230                                          l5078 2162  
                                        l5166 12B4                                          l5510 0ED0  
                                        l5414 0816                                          l5406 16D8  
                                        l5254 2892                                          l6214 17D4  
                                        l6230 1806                                          l5088 21B0  
                                        l5192 1386                                          l5176 12E8  
                                        l5280 2436                                          l5440 08F4  
                                        l5432 08B4                                          l5360 2756  
                                        l6064 224E                                          l5098 1B2A  
                                        l5186 1344                                          l5346 2638  
                                        l5426 0884                                          l6090 1EFC  
                                        l5290 1F76                                          l6226 17F8  
                                        l5604 1E2E                                          l5540 2980  
                                        l5436 08D4                                          l5428 0894  
                                        l6172 1758                                          l4822 23B2  
                                        l4902 1D58                                          l5198 1838  
                                        l5702 1008                                          l5550 25E6  
                                        l6086 1EF0                                          l6238 181E  
                                        l6190 178C                                          l5608 1E40  
                                        l5528 2990                                          l4824 23BA  
                                        l5712 1038                                          l5376 1586  
                                        l5368 1542                                          l5632 1E70  
                                        l6184 177A                                          l5618 2512  
                                        l4834 23DA                                          l4850 258C  
                                        l4842 256C                                          l4922 2668  
                                        l5706 101A                                          l5490 0D36  
                                        l5482 0C74                                          l5394 1656  
                                        l5386 15F6                                          l5642 1E96  
                                        l5634 1E74                                          l4844 2574  
                                        l5732 1142                                          l5724 10E8  
                                        l5708 102E                                          l5564 1C84  
                                        l5476 0BEA                                          l5388 1616  
                                        l5652 1ED0                                          l5644 1E9A  
                                        l4942 2834                                          l4870 1C2C  
                                        l4862 1BEE                                          l4926 268E  
                                        l5734 1156                                          l5592 1DEE  
                                        l5584 1DD2                                          l4936 26B8  
                                        l4944 2836                                          l4872 1C4A  
                                        l4864 1BF8                                          l5760 212C  
                                        l5744 1176                                          l5728 1136  
                                        l5568 1CEC                                          l5912 22EC  
                                        l4874 1C54                                          l4866 1C16  
                                        l4970 140E                                          l5738 1160  
                                        l5690 0F24                                          l5682 0F04  
                                        l5666 20A6                                          l4892 1D26  
                                        l4964 13E6                                          l5668 20B8  
                                        l5758 211A                                          l5942 2028  
                                        l4992 1460                                          l5936 1FEC  
                                        l4994 146A                                          l5698 0F72  
                                        l5956 2926                                          l4996 1474  
                                        l5884 2342                                          l5896 236C  
                                        _LATA 000F89                                          _LATB 000F8A  
                                        _LATC 000F8B                                          _LATD 000F8C  
                                        _LATE 000F8D                                          u5120 13D8  
                                        u5220 147C                                          u5150 1400  
                                        u5311 196C                                          u5400 1B48  
                                        u5081 13A6                                          u5250 14B0  
                                        u5091 13BA                                          u5180 143E  
                                        u5405 1B40                                          u5510 1324  
                                        u5440 1BA8                                          u5291 1944  
                                        u5381 1B0E                                          u5390 1B18  
                                        u6318 1CD8                                          u5630 1FD2  
                                        u4920 2578                                          u6328 1CFC  
                                        u6329 1D10                                          u5580 28DE  
                                        u6268 25F6                                          u6284 1C9A  
                                        u5708 156A                                          u6269 260A  
                                        u6285 1C94                                          u5709 157E  
                                        u5590 28C2                                          u4950 1BE0  
                                        u6294 1CB4                                          u5750 15E6  
                                        u6295 1CAE                                          u4890 23BE  
                                        u5818 169E                                          u5819 16B2  
                                        u5748 15CC                                          u5749 15E0  
                                        u7197 1544                                          u4990 1C5E  
                                        _UCFG 000F6F                                          u6738 1FFC  
                                        u5778 163A                                          u6739 2010  
                                        u5779 164E                                          u6940 1EEC  
              ?_disp7s_modeDisp_writeText_oil 0001                                          _UCON 000F6D  
                                __CFG_PWRT$ON 000000                         _ikb_key_is_ready2read 28AA  
                             _NOZZLE_QTY_DIFF 00E9                                          _main 16E0  
                                ___ftpack@arg 000B                                          _itoa 26A0  
                                        _mpap 00B0                                  ___ftpack@exp 000E  
                                        fsr1h 000FE2                                          fsr2h 000FDA  
                                        _pump 0044                                          indf2 000FDF  
                                        fsr1l 000FE1                                          fsr2l 000FD9  
                                        btemp 0053                                          _utoa 1D1E  
             __end_of_disp7s_qtyDisp_writeInt 28FC                                          prodh 000FF4  
                                        prodl 000FF3                                          start 000E  
                              pulsonic_init@i 000B                                 __CFG_IESO$OFF 000000  
                               __CFG_MCLRE$ON 000000                                 ?_autoMode_job 0001  
                                ___ftmul@cntr 0020                          __end_of_DISP7S_CHARS 0811  
                                ___param_bank 000000                                  ___ftmul@sign 0021  
                               _autoMode_init 2736                                  ___fttol@exp1 0030  
                                ___fttol@lval 002C                             visMode_kb@cod_ret 000C  
                               __CFG_PLLDIV$5 000000                                         ?_main 0001  
                                       ?_itoa 001A                               __end_of___ftadd 153E  
                                       _CMCON 000FB4                                         ?_utoa 0012  
                             __end_of___ftmul 1A28                                         _T0CON 000FD5  
                             __end_of___ftsub 2662                               __end_of___fttol 1BD0  
                             __end_of___lwdiv 23EE                               __end_of___lwmod 25A0  
                                       i2l502 24CA                                         i2l158 2468  
                                       i2l496 22DA                                         _TMR0H 000FD7  
                                       _TMR0L 000FD6                                         _PORTC 000F82  
                                       _PORTD 000F83                                         _PORTE 000F84  
                               __CFG_USBDIV$2 000000                                         _TRISA 000F92  
                                       _TRISB 000F93                                         _TRISC 000F94  
                                       _TRISD 000F95                                         _TRISE 000F96  
                             ??_configMode_kb 0025                                __CFG_FCMEN$OFF 000000  
                             __end_of_ikb_job 29C4                                 ?_INTERRUPCION 0001  
                             _disp7s_mux0_off 2A50                               _disp7s_mux1_off 2A48  
                             _disp7s_mux2_off 2A40                               _disp7s_mux3_off 2A38  
                             _disp7s_mux4_off 2A30                                         _smain 0047  
                               ___ftpack@sign 000F                                         pclath 000FFA  
                                       tablat 000FF5                                         plusw2 000FDB  
                  __size_of_mpap_movetoNozzle 0032          ikb_get_AtTimeExpired_BeforeOrAfter@k 000B  
                                       ttemp5 0054                                         ttemp6 0057  
                                       ttemp7 005B                                         utoa@c 0019  
                             _disp7s_mux_init 25E2                                         utoa@v 0017  
                                       status 000FD8                                         wtemp8 0054  
            __end_of_disp7s_modeDisp_writeInt 2916                   __size_of_ikey_is_accessible 004C  
                               ?_ikey_parsing 0001                          __size_of__mpap_step1 000A  
                        __size_of__mpap_step2 000A                          __size_of__mpap_step3 000A  
                        __size_of__mpap_step4 000A                                ??_autoMode_job 0021  
                               _pulsonic_init 22DE                                  ?_mpap_isIdle 0001  
                              ?_autoMode_init 0001                               __initialization 21B4  
                                __end_of_main 182A                                  __end_of_itoa 26D2  
                                __end_of_utoa 1DB2                             ikb_key_was_read@k 000B  
          __size_of_disp7s_qtyDisp_writeFloat 001E                                        ??_main 0041  
                               ___fttol@sign1 002B                                        ??_itoa 001F  
                        __end_of_disp7s_mux_Q 1D1E                                        ??_utoa 0017  
                               mpap_do1step@i 0052                                 __activetblptr 000002  
                              ??_INTERRUPCION 0005                          __size_of_disp7s_init 005E  
                         autoMode_job@cod_ret 0021                                        _ADCON1 000FC1  
                    __end_of_keyRead_pin_key0 2A1C                      __end_of_keyRead_pin_key1 29D8  
                    __end_of_keyRead_pin_key2 29CE                      __end_of_keyRead_pin_key3 2A30  
                    __end_of_keyRead_pin_key4 2A24                        ?_ikb_key_is_ready2read 0001  
                            __end_of___ftpack 1C7E                                        i2l4032 22BC  
                                      i2l3800 25B6                                        i2l3804 25BE  
                                      i2l4664 2524                                        i2l4668 2532  
                            __end_of___lwtoft 280C                                        _TMR0IE 007F95  
                                      _TMR0IF 007F92                                ??_ikey_parsing 001F  
                              __CFG_VREGEN$ON 000000                              ??_configMode_job 0040  
                   __size_of_nozzle_isEnabled 0048                                ?_pulsonic_init 0001  
                    __end_of_mpap_normal_mode 24CE                    configMode_init@numRegistro 000B  
                   disp7s_write_f@NUM_OF_DISP 0033                      _error_requestToWriteDisp 00C9  
                    _pulsonic_getTotalSum_mlh 1F62                              __end_of_ikb_init 1AFE  
                                      ___ftge 2140                          visMode_disp@numVista 003F  
                                      ___wmul 27C2                                     ??___ftadd 0019  
                                   ??___ftmul 0019                                     ??___ftsub 0025  
                                   ??___fttol 0026                                     ??___lwdiv 000F  
                                   ??___lwmod 000F                             ?_ikb_key_was_read 0001  
                                      clear_0 21EC                                        clear_1 21F8  
                                      clear_2 2204                    configMode_disp@numRegistro 003F  
                            __end_of_mpap_job 255E                            ??_ikb_key_was_read 000B  
                                      _unlock 00CB                                     ??_ikb_job 0024  
                                      _strlen 282E                       __end_of_disp7s_mux0_off 2A54  
                     __end_of_disp7s_mux1_off 2A4C                         ___ftmul@f3_as_product 001D  
                     __end_of_disp7s_mux2_off 2A44                       __end_of_disp7s_mux3_off 2A3C  
                     __end_of_disp7s_mux4_off 2A34             __end_of_disp7s_qtyDisp_writeFloat 288E  
                    __end_of_mpap_setupToTurn 2736                                  __pdataCOMRAM 0052  
                                __mediumconst 0000                                        tblptrh 000FF7  
                                      tblptrl 000FF6                                        tblptru 000FF8  
                    __size_of_configMode_disp 0074                      __size_of_configMode_init 000C  
                         ikey_is_accessible@k 000D                       __end_of_disp7s_mux_init 2622  
                            __end_of_pump_job 227C                                  ?_visMode_job 0001  
                        __size_of_autoMode_kb 0092                  __size_of_ikey_clear_all_flag 001C  
                                  __accesstop 0060                       __end_of__initialization 220A  
                             __CFG_PBADEN$OFF 000000                                 ?_mpap_do1step 0001  
                                  ___ftadd@f1 0013                                    ___ftadd@f2 0016  
                                  ___ftge@ff1 0016                                    ___ftge@ff2 0019  
                             disp7s_off@pDisp 000B                                 ___rparam_used 000001  
                             ??_autoMode_init 003C                                    ___ftmul@f1 0013  
                                  ___ftmul@f2 0016                                    ___ftsub@f1 001F  
                                  ___ftsub@f2 0022                                    ___fttol@f1 0022  
                              __pcstackCOMRAM 0001                                  __pidataBANK0 280C  
                               ?_mpap_homming 0001                                  ?_pump_isIdle 0001  
                          __size_of__mpap_off 000A                                    ___lwtoft@c 0013  
                             visMode_disp@qty 003C             __size_of_disp7s_modeDisp_writeInt 001A  
                   ?_disp7s_modeDisp_writeInt 0038                          __end_of_autoMode_job 292A  
                                _DISP7S_CHARS 080F                            __size_of_ikb_flush 0006  
                              mpap_do1step@KI 0001                                    __pbssBANK0 0060  
                                  __pbssBANK1 0100                            visMode_job@cod_ret 0040  
                              ??_mpap_do1step 0001                            __size_of_ikey_scan 01A2  
                             ??_pulsonic_init 000B                   __end_of_mpap_setupToHomming 293E  
                              ??_mpap_homming 0002                                       ?___ftge 0016  
                        __end_of_INTERRUPCION 2484                            __size_of_mpap_sych 008E  
                                     ?___wmul 000B                         __size_of_disp7s_mux_Q 00A0  
                        __size_of_mpap_isIdle 0010                               disp7s_write_f@I 00F9  
                             disp7s_write_f@i 00FF                               disp7s_write_i@i 0037  
                    ?_disp7s_qtyDisp_writeInt 0038                                    _disp7s_job 1FE0  
                                  _disp7s_off 2662                                    _disp7s_mux 00CD  
                __size_of_disp7s_modeDisp_off 0012                                     ?___ftpack 000B  
                                     ?_strlen 000B                                     ?___lwtoft 0013  
                     __size_of_disp7s_mux0_on 0004                       __size_of_disp7s_mux1_on 0004  
                     __size_of_disp7s_mux2_on 0004                       __size_of_disp7s_mux3_on 0004  
                     __size_of_disp7s_mux4_on 0004                              ?_disp7s_mux0_off 0001  
                            ?_disp7s_mux1_off 0001                              ?_disp7s_mux2_off 0001  
                            ?_disp7s_mux3_off 0001                              ?_disp7s_mux4_off 0001  
                        __end_of_ikey_parsing 0EDA                                    _configMode 004A  
                 pulsonic_getTotalSum_mlh@acc 0022                       __size_of_disp7s_write_f 021C  
                     __size_of_disp7s_write_i 010A                                    _disp_owner 0051  
                            ?_disp7s_mux_init 0001                                     ?_ikb_init 0001  
                           disp7s_write_f@num 0034                             disp7s_write_i@num 0023  
                           __end_of__mpap_off 2A14                             ??_configMode_disp 003C  
                           ??_configMode_init 000B                                  _disp7s_mux_Q 1C7E  
                 check_inductiveSensorRPM@sm0 00C6                   check_inductiveSensorRPM@sm1 00C5  
                            _nozzle_isEnabled 24CE                                     ?_mpap_job 0001  
                                     __Hparam 0000                                       __Lparam 0000  
                 disp7s_modeDisp_writeInt@num 0038                     disp7s_write_i@NUM_OF_DISP 0022  
                           __end_of_ikb_flush 2A2A                               __size_of___ftge 0074  
                                     ___ftadd 1396                               __size_of___wmul 0026  
                                     ___ftmul 1934                                       ___ftsub 2622  
                                     ___fttol 1AFE                             pump_setTick@ticks 000B  
                                     ___lwdiv 239C                                     ?_pump_job 0001  
                                     ___lwmod 255E                                  __psmallconst 0800  
                                     __pcinit 21B4                                    ??___ftpack 0010  
                                     __ramtop 0800                                       __ptext0 16E0  
                                     __ptext1 2766                                       __ptext2 1E44  
                                     __ptext3 2058                                       __ptext4 2218  
                                     __ptext5 22DE                                       __ptext6 2850  
                                     __ptext7 2A24                                       __ptext8 288E  
                                     __ptext9 2736                             __end_of_ikey_scan 16E0  
                                     _ikb_job 29BA                                    ??___lwtoft 0016  
                             __size_of_strlen 0022                                       _group_x 00B8  
                    _error_grantedToWriteDisp 00C8                       ??_ikb_key_is_ready2read 000B  
                                     _visMode 00BD                         __end_of_configMode_kb 117A  
                           __end_of_mpap_sych 1F62                       mpap_normal_mode@cod_ret 0002  
                                  ??_ikb_init 000B                                __pintcode_body 243A  
                        end_of_initialization 220A                    __end_of_ikey_is_accessible 243A  
                           ?_keyRead_pin_key0 0001                             ?_keyRead_pin_key1 0001  
                           ?_keyRead_pin_key2 0001                             ?_keyRead_pin_key3 0001  
                           ?_keyRead_pin_key4 0001                    ??_pulsonic_getTotalSum_mlh 0022  
                               ??__mpap_step1 0001                                 ??__mpap_step2 0001  
                               ??__mpap_step3 0001                                 ??__mpap_step4 0001  
                        __size_of_visMode_job 002E                                       itoa@buf 001A  
                                     itoa@val 001B                                 __Lmediumconst 0000  
                                     int_func 243A                            ??_keyRead_pin_key0 000B  
                          ??_keyRead_pin_key1 000B                            ??_keyRead_pin_key2 000B  
                          ??_keyRead_pin_key3 000B                            ??_keyRead_pin_key4 000B  
              ??_disp7s_qtyDisp_writeText_OFF 000B                           errorHandler_queue@c 00BF  
                         errorHandler_queue@i 00EE                                    ??_mpap_job 0004  
                               _OIL_VISCOSITY 080B                             ?_mpap_normal_mode 0001  
                             main@c_access_kb 0041                                       postdec1 000FE5  
                                     postdec2 000FDD                            ??_mpap_normal_mode 0002  
                                     postinc0 000FEE                                       postinc1 000FE6  
                                     postinc2 000FDE                        ikb_key_is_ready2read@k 000B  
                                  ??_pump_job 000B                                       utoa@buf 0012  
                                     utoa@val 0013                                   ?_disp7s_job 0001  
                                 ?_disp7s_off 000B                           _ikey_clear_all_flag 288E  
                                     strlen@s 000B                                 ?_visMode_disp 0001  
                               ?_visMode_init 0001                          __size_of_pump_isIdle 0010  
                       __size_of_autoMode_job 0014                          __end_of_mpap_do1step 25E2  
                                  _visMode_kb 1E44                                 ??_disp7s_init 000C  
                        ikey_clear_all_flag@i 000B                         configMode_job@cod_ret 0040  
                           ?_mpap_setupToTurn 0011                            ??_mpap_setupToTurn 0013  
                        __end_of_mpap_homming 22DE                     __size_of_ikb_key_was_read 0014  
                        ?_ikey_clear_all_flag 0001                  disp7s_qtyDisp_writeFloat@num 0141  
                                  main@codapp 0043                           disp7s_write_f@pDisp 0031  
                         disp7s_write_i@pDisp 0020                         __size_of_INTERRUPCION 247C  
                                 ___ftmul@exp 001C                                  _autoMode_job 2916  
                         __end_of__mpap_step1 2A00                           __end_of__mpap_step2 29F6  
                         __end_of__mpap_step3 29EC                           __end_of__mpap_step4 2A0A  
                         __end_of_DISP7S_NUMS 080B                                __end_of___ftge 21B4  
             mpap_setupToTurn@numSteps_tomove 0011                                ??_visMode_disp 003C  
                              ??_visMode_init 000B                         __size_of_ikey_parsing 06C8  
                              __end_of___wmul 27E8                                 __pidataCOMRAM 2A58  
                              _disp7s_mux0_on 2A4C                                _disp7s_mux1_on 2A44  
                              _disp7s_mux2_on 2A3C                                _disp7s_mux3_on 2A34  
                              _disp7s_mux4_on 2A54                                __end_of_strlen 2850  
                           autoMode_init@init 003C                           start_initialization 21B4  
                  ?_disp7s_qtyDisp_writeFloat 0141                                 ?_pump_setTick 000B  
                               ??_autoMode_kb 000C                                _disp7s_write_f 117A  
                              _disp7s_write_i 182A                                  _INTERRUPCION 0008  
                         __end_of_disp7s_init 239C                         ??_ikey_clear_all_flag 000B  
                        visMode_init@numVista 000B                                    ikey_scan@k 000C  
                         _disp7s_modeDisp_off 2952                           __size_of_disp7s_job 0078  
                         __size_of_disp7s_off 003E                                  _ikey_parsing 0812  
                       __end_of_autoMode_init 2766                                      ??___ftge 001C  
                                    ??___wmul 000F                                   __pdataBANK0 00CD  
                      __end_of_disp7s_mux0_on 2A50                        __end_of_disp7s_mux1_on 2A48  
                       check_startSignal@lock 00C7                        __end_of_disp7s_mux2_on 2A40  
                      __end_of_disp7s_mux3_on 2A38                        __end_of_disp7s_mux4_on 2A58  
                           _ps_autoMode_start 2850                          ?_disp7s_modeDisp_off 0001  
                     __size_of_configMode_job 002E                                   ?_visMode_kb 0001  
                                    ??_strlen 000D                            ?_ps_autoMode_start 0001  
                      __end_of_disp7s_write_f 1396                        __end_of_disp7s_write_i 1934  
                           __size_of___ftpack 00AE                      __end_of_nozzle_isEnabled 2516  
                              ??_pump_setTick 000D                               _configMode_disp 20CC  
                             _configMode_init 29AE                                   __pbssCOMRAM 0044  
                           __size_of___lwtoft 0024                                 __pcstackBANK0 00EF  
                               __pcstackBANK1 0141                    disp7s_qtyDisp_writeInt@num 0038  
                            disp7s_mux_init@i 000B                           ??_ps_autoMode_start 003D  
                                mpap_sych@sm0 0050              __size_of_disp7s_qtyDisp_writeInt 001A  
            __end_of_pulsonic_getTotalSum_mlh 1FE0                     pulsonic_getTotalSum_mlh@i 0025  
                         __end_of_autoMode_kb 1E44                                 ikey_parsing@k 0023  
                           __size_of_ikb_init 00D6                                   __mpap_step1 29F6  
                                 __mpap_step2 29EC                                   __mpap_step3 29E2  
                                 __mpap_step4 2A00                                   _DISP7S_NUMS 0801  
                                  mpap_sych@c 00C1                         __end_of_pulsonic_init 233E  
                                   __mpap_off 2A0A                                 ??_mpap_isIdle 000B  
                            ___lwdiv@dividend 000B                             __size_of_mpap_job 0048  
                        configMode_kb@cod_ret 0028                                     __pintcode 0008  
                   __end_of_ps_autoMode_start 2870                         __size_of_mpap_do1step 0042  
                                    ?___ftadd 0013                                      ?___ftmul 0013  
                                    ?___ftsub 001F                                      ?___fttol 0022  
                                    ?___lwdiv 000B                                      ?___lwmod 000B  
                       ??_disp7s_modeDisp_off 0011                      _disp7s_modeDisp_writeInt 28FC  
                             ?_disp7s_mux0_on 0001                               ?_disp7s_mux1_on 0001  
                             ?_disp7s_mux2_on 0001                               ?_disp7s_mux3_on 0001  
                             ?_disp7s_mux4_on 0001                  __size_of_mpap_setupToHomming 0014  
                                   _ikb_flush 2A24                            configMode_disp@qty 003C  
                           __size_of_pump_job 0064                                      ?_ikb_job 0001  
                            disp7s_write_f@pi 00FB                              disp7s_write_i@pi 0034  
                                 __smallconst 0800                         __size_of_mpap_homming 0062  
                             ?_disp7s_write_f 0031                               ?_disp7s_write_i 0020  
                                 _disp7s_init 233E                                     _ikey_scan 153E  
              __size_of_ikb_key_is_ready2read 001C                              ___lwdiv@quotient 0010  
               __end_of_ikb_key_is_ready2read 28C6                              _ikb_key_was_read 293E  
                    __size_of_disp7s_mux0_off 0004                      __size_of_disp7s_mux1_off 0004  
                    __size_of_disp7s_mux2_off 0004                      __size_of_disp7s_mux3_off 0004  
                    __size_of_disp7s_mux4_off 0004                          __end_of_visMode_disp 20CC  
                        __end_of_visMode_init 29A2                                     _mpap_step 00E1  
                                   _mpap_sych 1ED4                                ___wmul@product 000F  
                                _mpap_do1step 25A0                      __size_of_disp7s_mux_init 0040  
                         __size_of_visMode_kb 0090                                    ?__mpap_off 0001  
                                    i2u324_48 25CE                                      i2u472_48 2544  
                                    i2u472_49 2558                            _ikey_is_accessible 23EE  
                                _mpap_homming 227C                     __size_of_keyRead_pin_key0 0008  
                   __size_of_keyRead_pin_key1 000A                     __size_of_keyRead_pin_key2 000A  
                   __size_of_keyRead_pin_key3 0006                     __size_of_keyRead_pin_key4 0008  
                     __end_of_configMode_disp 2140                                  ??_disp7s_job 0013  
                                ??_disp7s_off 000E                       __end_of_configMode_init 29BA  
                         __end_of_mpap_isIdle 2994               ??_disp7s_modeDisp_writeText_oil 000B  
                                  ?_ikb_flush 0001                             ___wmul@multiplier 000B  
                         ?_ikey_is_accessible 0001                            disp7s_write_f@buff 00EF  
                   __size_of_mpap_normal_mode 004A                            disp7s_write_i@buff 002A  
                       disp7s_off@NUM_OF_DISP 000D                                    ?_ikey_scan 0001  
                                 _autoMode_kb 1DB2                                 ??_visMode_job 0040  
                                   copy_data0 21C8                           mpap_homming@cod_ret 0003  
                                  ?_mpap_sych 0001                          ??_ikey_is_accessible 000B  
                          __end_of_disp7s_job 2058                            __end_of_disp7s_off 26A0  
                   __size_of_mpap_setupToTurn 0032                                      __Hrparam 0000  
                        __end_of_pump_setTick 29E2                                      __Lrparam 0000  
                  __size_of_ps_autoMode_start 0020                                 ??_pump_isIdle 000B  
                      __size_of_configMode_kb 02A0                              __size_of___ftadd 01A8  
           __size_of_pulsonic_getTotalSum_mlh 007E                              __size_of___ftmul 00F4  
                            __size_of___ftsub 0040                              __size_of___fttol 00D2  
                              _configMode_job 2794                              __size_of___lwdiv 0052  
                   ?_pulsonic_getTotalSum_mlh 001F                              __size_of___lwmod 0042  
                                    ___ftpack 1BD0                                      ___lwtoft 27E8  
        __end_of_disp7s_qtyDisp_writeText_OFF 2974         __size_of_disp7s_qtyDisp_writeText_OFF 0010  
                _disp7s_qtyDisp_writeText_OFF 2964                              __size_of_ikb_job 000A  
                               disp7s_mux_Q@i 0012                                 disp7s_mux_Q@q 0011  
                 ??_disp7s_qtyDisp_writeFloat 003C                         errorHandler_queue@sm0 00C2  
                             ___lwdiv@divisor 000D                       _disp7s_qtyDisp_writeInt 28E2  
                           check_oilLevel@sm0 00C4                             check_oilLevel@sm1 00C3  
                             ___lwdiv@counter 000F                                      __ptext10 1F62  
                                    __ptext11 2952                                      __ptext20 0812  
                                    __ptext12 1ED4                                      __ptext21 23EE  
                                    __ptext13 29BA                                      __ptext30 2A38  
                                    __ptext22 27E8                                      __ptext14 153E  
                                    __ptext31 2A3C                                      __ptext23 1A28  
                                    __ptext15 2A2A                                      __ptext40 2622  
                                    __ptext32 2A40                                      __ptext24 1FE0  
                                    __ptext16 29C4                                      __ptext41 20CC  
                                    __ptext33 2A44                                      __ptext25 1C7E  
                                    __ptext17 29CE                                      __ptext50 1BD0  
                                    __ptext42 2964                                      __ptext34 2A48  
                                    __ptext26 233E                                      __ptext18 2A14  
                                    __ptext51 29A2                                      __ptext43 28E2  
                                    __ptext35 2A4C                                      __ptext27 25E2  
                                    __ptext19 2A1C                                      __ptext60 2916  
                                    __ptext52 28FC                                      __ptext44 2870  
                                    __ptext36 2A50                                      __ptext28 2A30  
                                    __ptext61 29D8                                      __ptext53 182A  
                                    __ptext45 117A                                      __ptext37 2A54  
                                    __ptext29 2A34                                      __ptext70 1DB2  
                                    __ptext62 2974                                      __ptext54 282E  
                                    __ptext46 2662                                      __ptext38 2794  
                                    __ptext71 2994                                      __ptext63 24CE  
                                    __ptext55 26A0                                      __ptext47 1AFE  
                                    __ptext39 0EDA                                      __ptext80 29E2  
                                    __ptext72 293E                                      __ptext64 2140  
                                    __ptext56 1D1E                                      __ptext48 1934  
                                    __ptext81 29EC                                      __ptext73 28AA  
                                    __ptext65 292A                                      __ptext57 255E  
                                    __ptext49 1396                                      __ptext82 29F6  
                                    __ptext74 28C6                                      __ptext66 26D2  
                                    __ptext58 239C                                      __ptext83 2A00  
                                    __ptext67 2704                                      __ptext59 29AE  
                                    __ptext84 2A0A                                      __ptext76 2516  
                                    __ptext68 27C2                                      __ptext85 0000  
                                    __ptext77 2484                                      __ptext69 2984  
                                    __ptext78 227C                                      __ptext79 25A0  
                                    _ikb_init 1A28                          _mpap_setupToTurn$522 0013  
                                    _autoMode 004C                                      _funcMach 00CA  
                               __size_of_main 014A                                 __size_of_itoa 0032  
                               __size_of_utoa 0094                           __end_of_visMode_job 2794  
                                    _isr_flag 00CC                                      _mpap_job 2516  
                                    _mpap_off 00EC                             ??_disp7s_mux0_off 000B  
                           ??_disp7s_mux1_off 000B                             ??_disp7s_mux2_off 000B  
                           ??_disp7s_mux3_off 000B                                   ??__mpap_off 0001  
                           ??_disp7s_mux4_off 000B                             main@c_access_disp 0042  
                                 _mpap_isIdle 2984                        __end_of_configMode_job 27C2  
                                    int$flags 0053                             ??_disp7s_mux_init 000B  
                                    _pump_job 2218                                      _pulsonic 0100  
                            ?_configMode_disp 0001                              ?_configMode_init 0001  
                                 ??_ikb_flush 000C                             nozzle_isEnabled@n 001F  
                                ??_visMode_kb 000C                         __CFG_CPUDIV$OSC1_PLL2 000000  
                         __end_of_pump_isIdle 2984                   __end_of_ikey_clear_all_flag 28AA  
                           ?_nozzle_isEnabled 001F                                     pump_job@c 004F  
               ?_disp7s_qtyDisp_writeText_OFF 0001         __end_of_disp7s_modeDisp_writeText_oil 29AE  
      __size_of_disp7s_modeDisp_writeText_oil 000C                 _disp7s_modeDisp_writeText_oil 29A2  
                                 ??_ikey_scan 000B                         __size_of_visMode_disp 0074  
                                    itoa@base 001D                         __size_of_visMode_init 000E  
                          ??_nozzle_isEnabled 0021                                  disp7s_job@pq 0015  
                               _configMode_kb 0EDA                                  disp7s_init@i 000C  
                                    intlevel2 0000                           _mpap_setupToHomming 292A  
                                 ??_mpap_sych 000B                              ___lwmod@dividend 000B  
                                ?__mpap_step1 0001                                  ?__mpap_step2 0001  
                                ?__mpap_step3 0001                                  ?__mpap_step4 0001  
                               ?_disp7s_mux_Q 0001                    ??_disp7s_modeDisp_writeInt 003A  
                           _mpap_movetoNozzle 26D2                            __end_of_visMode_kb 1ED4  
                   _disp7s_qtyDisp_writeFloat 2870                              ??_disp7s_mux0_on 000B  
                            ??_disp7s_mux1_on 000B                              ??_disp7s_mux2_on 000B  
                            ??_disp7s_mux3_on 000B                              ??_disp7s_mux4_on 000B  
                          ?_mpap_movetoNozzle 0001                               ?_configMode_job 0001  
                    __end_of_ikb_key_was_read 2952                              _keyRead_pin_key0 2A14  
                            _keyRead_pin_key1 29CE                              _keyRead_pin_key2 29C4  
                            _keyRead_pin_key3 2A2A                              _keyRead_pin_key4 2A1C  
                            ??_disp7s_write_f 0037                              ??_disp7s_write_i 0025  
                        ?_mpap_setupToHomming 0001                           ??_mpap_movetoNozzle 0015  
                                _visMode_disp 2058                                  _visMode_init 2994  
                                    utoa@base 0015                                   disp7s_job@q 004E  
                                 disp7s_off@i 0010                     ??_disp7s_qtyDisp_writeInt 003A  
                                ?_disp7s_init 0001                               ___lwmod@divisor 000D  
                            _mpap_normal_mode 2484                                      strlen@cp 000D  
                  mpap_movetoNozzle@numNozzle 0015                               ___lwmod@counter 000F  
                              ?_configMode_kb 0001                        __size_of_autoMode_init 0030  
                                 _visMode_job 2766                            __CFG_FOSC$HSPLL_HS 000000  
                       __size_of_pump_setTick 000A                                ??_disp7s_mux_Q 000B  
                   __end_of_mpap_movetoNozzle 2704   __end_of_ikb_get_AtTimeExpired_BeforeOrAfter 28E2  
__size_of_ikb_get_AtTimeExpired_BeforeOrAfter 001C         ??_ikb_get_AtTimeExpired_BeforeOrAfter 000B  
        ?_ikb_get_AtTimeExpired_BeforeOrAfter 0001           _ikb_get_AtTimeExpired_BeforeOrAfter 28C6  
                       __end_of_OIL_VISCOSITY 080F                              _mpap_setupToTurn 2704  
                 __end_of_disp7s_modeDisp_off 2964  
