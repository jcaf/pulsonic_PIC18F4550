

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 14 17:54:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,keep,inline
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,keep,inline
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,keep,inline
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,keep,inline
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,keep,inline
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,keep,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,keep,inline
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,keep,inline
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,keep,inline
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,keep,inline
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,keep,inline
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,keep,inline
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,keep,inline
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,keep,inline
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,keep,inline
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97  0000                     
    98                           ; Version 2.05
    99                           ; Generated 20/12/2018 GMT
   100                           ; 
   101                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F4550 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	idataCOMRAM
   134  0025EE                     __pidataCOMRAM:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for mpap_do1step@i
   138  0025EE  FF                 	db	255
   139                           
   140                           	psect	idataBANK0
   141  00244A                     __pidataBANK0:
   142                           	opt callstack 0
   143                           
   144                           ;initializer for _disp7s_mux
   145  00244A  E6                 	db	low _disp7s_mux0_off
   146  00244B  25                 	db	high _disp7s_mux0_off
   147  00244C  E2                 	db	low _disp7s_mux0_on
   148  00244D  25                 	db	high _disp7s_mux0_on
   149  00244E  DE                 	db	low _disp7s_mux1_off
   150  00244F  25                 	db	high _disp7s_mux1_off
   151  002450  DA                 	db	low _disp7s_mux1_on
   152  002451  25                 	db	high _disp7s_mux1_on
   153  002452  D6                 	db	low _disp7s_mux2_off
   154  002453  25                 	db	high _disp7s_mux2_off
   155  002454  D2                 	db	low _disp7s_mux2_on
   156  002455  25                 	db	high _disp7s_mux2_on
   157  002456  CE                 	db	low _disp7s_mux3_off
   158  002457  25                 	db	high _disp7s_mux3_off
   159  002458  CA                 	db	low _disp7s_mux3_on
   160  002459  25                 	db	high _disp7s_mux3_on
   161  00245A  C6                 	db	low _disp7s_mux4_off
   162  00245B  25                 	db	high _disp7s_mux4_off
   163  00245C  EA                 	db	low _disp7s_mux4_on
   164  00245D  25                 	db	high _disp7s_mux4_on
   165                           
   166                           ;initializer for _mpap_step
   167  00245E  92                 	db	low __mpap_step1
   168  00245F  25                 	db	high __mpap_step1
   169  002460  88                 	db	low __mpap_step2
   170  002461  25                 	db	high __mpap_step2
   171  002462  7E                 	db	low __mpap_step3
   172  002463  25                 	db	high __mpap_step3
   173  002464  9C                 	db	low __mpap_step4
   174  002465  25                 	db	high __mpap_step4
   175                           
   176                           ;initializer for _mpap_off
   177  002466  A6                 	db	low __mpap_off
   178  002467  25                 	db	high __mpap_off
   179                           
   180                           	psect	smallconst
   181  000800                     __psmallconst:
   182                           	opt callstack 0
   183  000800  00                 	db	0
   184  000801                     _DISP7S_NUMS:
   185                           	opt callstack 0
   186  000801  3F                 	db	63
   187  000802  06                 	db	6
   188  000803  5B                 	db	91
   189  000804  4F                 	db	79
   190  000805  66                 	db	102
   191  000806  6D                 	db	109
   192  000807  7C                 	db	124
   193  000808  07                 	db	7
   194  000809  7F                 	db	127
   195  00080A  67                 	db	103
   196  00080B                     __end_of_DISP7S_NUMS:
   197                           	opt callstack 0
   198  00080B                     _OIL_VISCOSITY:
   199                           	opt callstack 0
   200  00080B  16                 	db	22
   201  00080C  20                 	db	32
   202  00080D  2E                 	db	46
   203  00080E  44                 	db	68
   204  00080F                     __end_of_OIL_VISCOSITY:
   205                           	opt callstack 0
   206  00080F                     _DISP7S_CHARS:
   207                           	opt callstack 0
   208  00080F  00                 	db	0
   209  000810  40                 	db	64
   210  000811                     __end_of_DISP7S_CHARS:
   211                           	opt callstack 0
   212  0000                     _TRISB	set	3987
   213  0000                     _TRISA	set	3986
   214  0000                     _PORTE	set	3972
   215  0000                     _PORTD	set	3971
   216  0000                     _PORTC	set	3970
   217  0000                     _TRISC	set	3988
   218  0000                     _TRISD	set	3989
   219  0000                     _TRISE	set	3990
   220  0000                     _TMR0L	set	4054
   221  0000                     _TMR0H	set	4055
   222  0000                     _T0CON	set	4053
   223  0000                     _UCFG	set	3951
   224  0000                     _UCON	set	3949
   225  0000                     _CMCON	set	4020
   226  0000                     _ADCON1	set	4033
   227  0000                     _LATB	set	3978
   228  0000                     _LATE	set	3981
   229  0000                     _LATD	set	3980
   230  0000                     _LATC	set	3979
   231  0000                     _LATA	set	3977
   232  0000                     _TMR0IF	set	32658
   233  0000                     _GIE	set	32663
   234  0000                     _TMR0IE	set	32661
   235                           
   236                           ; #config settings
   237  000811  00                 	db	0	; dummy byte at the end
   238  0000                     
   239                           	psect	cinit
   240  001E44                     __pcinit:
   241                           	opt callstack 0
   242  001E44                     start_initialization:
   243                           	opt callstack 0
   244  001E44                     __initialization:
   245                           	opt callstack 0
   246                           
   247                           ; Initialize objects allocated to BANK0 (30 bytes)
   248                           ; load TBLPTR registers with __pidataBANK0
   249  001E44  0E4A               	movlw	low __pidataBANK0
   250  001E46  6EF6               	movwf	tblptrl,c
   251  001E48  0E24               	movlw	high __pidataBANK0
   252  001E4A  6EF7               	movwf	tblptrh,c
   253  001E4C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   254  001E4E  6EF8               	movwf	tblptru,c
   255  001E50  EE00  F0D0         	lfsr	0,__pdataBANK0
   256  001E54  EE10 F01E          	lfsr	1,30
   257  001E58                     copy_data0:
   258  001E58  0009               	tblrd		*+
   259  001E5A  CFF5 FFEE          	movff	tablat,postinc0
   260  001E5E  50E5               	movf	postdec1,w,c
   261  001E60  50E1               	movf	fsr1l,w,c
   262  001E62  E1FA               	bnz	copy_data0
   263                           
   264                           ; Initialize objects allocated to COMRAM (1 bytes)
   265                           ; load TBLPTR registers with __pidataCOMRAM
   266  001E64  0EEE               	movlw	low __pidataCOMRAM
   267  001E66  6EF6               	movwf	tblptrl,c
   268  001E68  0E25               	movlw	high __pidataCOMRAM
   269  001E6A  6EF7               	movwf	tblptrh,c
   270  001E6C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   271  001E6E  6EF8               	movwf	tblptru,c
   272  001E70  0009               	tblrd		*+	;fetch initializer
   273  001E72  CFF5 F050          	movff	tablat,__pdataCOMRAM
   274                           
   275                           ; Clear objects allocated to BANK1 (64 bytes)
   276  001E76  EE01  F000         	lfsr	0,__pbssBANK1
   277  001E7A  0E40               	movlw	64
   278  001E7C                     clear_0:
   279  001E7C  6AEE               	clrf	postinc0,c
   280  001E7E  06E8               	decf	wreg,f,c
   281  001E80  E1FD               	bnz	clear_0
   282                           
   283                           ; Clear objects allocated to BANK0 (112 bytes)
   284  001E82  EE00  F060         	lfsr	0,__pbssBANK0
   285  001E86  0E70               	movlw	112
   286  001E88                     clear_1:
   287  001E88  6AEE               	clrf	postinc0,c
   288  001E8A  06E8               	decf	wreg,f,c
   289  001E8C  E1FD               	bnz	clear_1
   290                           
   291                           ; Clear objects allocated to COMRAM (9 bytes)
   292  001E8E  EE00  F047         	lfsr	0,__pbssCOMRAM
   293  001E92  0E09               	movlw	9
   294  001E94                     clear_2:
   295  001E94  6AEE               	clrf	postinc0,c
   296  001E96  06E8               	decf	wreg,f,c
   297  001E98  E1FD               	bnz	clear_2
   298  001E9A                     end_of_initialization:
   299                           	opt callstack 0
   300  001E9A                     __end_of__initialization:
   301                           	opt callstack 0
   302  001E9A  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   303  001E9C  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   304  001E9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   305  001EA0  6EF8               	movwf	tblptru,c
   306  001EA2  0100               	movlb	0
   307  001EA4  EFD3  F009         	goto	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMRAM
   310  000047                     __pbssCOMRAM:
   311                           	opt callstack 0
   312  000047                     _mpap:
   313                           	opt callstack 0
   314  000047                     	ds	8
   315  00004F                     disp7s_job@q:
   316                           	opt callstack 0
   317  00004F                     	ds	1
   318                           
   319                           	psect	dataCOMRAM
   320  000050                     __pdataCOMRAM:
   321                           	opt callstack 0
   322  000050                     mpap_do1step@i:
   323                           	opt callstack 0
   324  000050                     	ds	1
   325                           
   326                           	psect	bssBANK0
   327  000060                     __pbssBANK0:
   328                           	opt callstack 0
   329  000060                     _key:
   330                           	opt callstack 0
   331  000060                     	ds	80
   332  0000B0                     _group_x:
   333                           	opt callstack 0
   334  0000B0                     	ds	5
   335  0000B5                     _pump:
   336                           	opt callstack 0
   337  0000B5                     	ds	3
   338  0000B8                     _smain:
   339                           	opt callstack 0
   340  0000B8                     	ds	3
   341  0000BB                     _visMode:
   342                           	opt callstack 0
   343  0000BB                     	ds	2
   344  0000BD                     _autoMode:
   345                           	opt callstack 0
   346  0000BD                     	ds	2
   347  0000BF                     	ds	2
   348  0000C1                     pump_job@c:
   349                           	opt callstack 0
   350  0000C1                     	ds	1
   351  0000C2                     mpap_sych@c:
   352                           	opt callstack 0
   353  0000C2                     	ds	1
   354  0000C3                     mpap_sych@sm0:
   355                           	opt callstack 0
   356  0000C3                     	ds	1
   357  0000C4                     	ds	1
   358  0000C5                     	ds	1
   359  0000C6                     	ds	1
   360  0000C7                     	ds	1
   361  0000C8                     	ds	1
   362  0000C9                     	ds	1
   363  0000CA                     _error_grantedToWriteDisp:
   364                           	opt callstack 0
   365  0000CA                     	ds	1
   366  0000CB                     _error_requestToWriteDisp:
   367                           	opt callstack 0
   368  0000CB                     	ds	1
   369  0000CC                     _disp_owner:
   370                           	opt callstack 0
   371  0000CC                     	ds	1
   372  0000CD                     _machState:
   373                           	opt callstack 0
   374  0000CD                     	ds	1
   375  0000CE                     _unlock:
   376                           	opt callstack 0
   377  0000CE                     	ds	1
   378  0000CF                     _isr_flag:
   379                           	opt callstack 0
   380  0000CF                     	ds	1
   381                           
   382                           	psect	dataBANK0
   383  0000D0                     __pdataBANK0:
   384                           	opt callstack 0
   385  0000D0                     _disp7s_mux:
   386                           	opt callstack 0
   387  0000D0                     	ds	20
   388  0000E4                     _mpap_step:
   389                           	opt callstack 0
   390  0000E4                     	ds	8
   391  0000EC                     _mpap_off:
   392                           	opt callstack 0
   393  0000EC                     	ds	2
   394                           
   395                           	psect	bssBANK1
   396  000100                     __pbssBANK1:
   397                           	opt callstack 0
   398  000100                     _pulsonic:
   399                           	opt callstack 0
   400  000100                     	ds	64
   401                           
   402                           	psect	cstackBANK0
   403  0000EE                     __pcstackBANK0:
   404                           	opt callstack 0
   405  0000EE                     disp7s_write_f@buff:
   406                           	opt callstack 0
   407                           
   408                           ; 10 bytes @ 0x0
   409  0000EE                     	ds	10
   410  0000F8                     disp7s_write_f@I:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0xA
   414  0000F8                     	ds	2
   415  0000FA                     disp7s_write_f@pi:
   416                           	opt callstack 0
   417                           
   418                           ; 1 bytes @ 0xC
   419  0000FA                     	ds	1
   420  0000FB                     disp7s_write_f@K10MULT:
   421                           	opt callstack 0
   422                           
   423                           ; 3 bytes @ 0xD
   424  0000FB                     	ds	3
   425  0000FE                     disp7s_write_f@i:
   426                           	opt callstack 0
   427                           
   428                           ; 1 bytes @ 0x10
   429  0000FE                     	ds	1
   430                           
   431                           	psect	cstackCOMRAM
   432  000001                     __pcstackCOMRAM:
   433                           	opt callstack 0
   434  000001                     mpap_do1step@KI:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x0
   438  000001                     	ds	1
   439  000002                     ??_mpap_homming:
   440  000002                     mpap_normal_mode@cod_ret:
   441                           	opt callstack 0
   442                           
   443                           ; 1 bytes @ 0x1
   444  000002                     	ds	1
   445  000003                     mpap_homming@cod_ret:
   446                           	opt callstack 0
   447                           
   448                           ; 1 bytes @ 0x2
   449  000003                     	ds	1
   450  000004                     
   451                           ; 1 bytes @ 0x3
   452  000004                     	ds	1
   453  000005                     ??_INTERRUPCION:
   454                           
   455                           ; 1 bytes @ 0x4
   456  000005                     	ds	6
   457  00000B                     ??_ikey_is_accessible:
   458  00000B                     ??_disp7s_mux_Q:
   459  00000B                     ?_strlen:
   460                           	opt callstack 0
   461  00000B                     ?___wmul:
   462                           	opt callstack 0
   463  00000B                     ?___lwdiv:
   464                           	opt callstack 0
   465  00000B                     ?___lwmod:
   466                           	opt callstack 0
   467  00000B                     ?___ftpack:
   468                           	opt callstack 0
   469  00000B                     ikb_init@i:
   470                           	opt callstack 0
   471  00000B                     ikb_key_is_ready2read@k:
   472                           	opt callstack 0
   473  00000B                     ikb_key_was_read@k:
   474                           	opt callstack 0
   475  00000B                     pulsonic_init@i:
   476                           	opt callstack 0
   477  00000B                     disp7s_mux_init@i:
   478                           	opt callstack 0
   479  00000B                     visMode_init@numVista:
   480                           	opt callstack 0
   481  00000B                     strlen@s:
   482                           	opt callstack 0
   483  00000B                     pump_setTick@ticks:
   484                           	opt callstack 0
   485  00000B                     disp7s_off@pDisp:
   486                           	opt callstack 0
   487  00000B                     ___wmul@multiplier:
   488                           	opt callstack 0
   489  00000B                     ___lwdiv@dividend:
   490                           	opt callstack 0
   491  00000B                     ___lwmod@dividend:
   492                           	opt callstack 0
   493  00000B                     ___ftpack@arg:
   494                           	opt callstack 0
   495                           
   496                           ; 3 bytes @ 0xA
   497  00000B                     	ds	1
   498  00000C                     ikey_scan@k:
   499                           	opt callstack 0
   500  00000C                     disp7s_init@i:
   501                           	opt callstack 0
   502  00000C                     autoMode_kb@cod_ret:
   503                           	opt callstack 0
   504  00000C                     visMode_kb@cod_ret:
   505                           	opt callstack 0
   506                           
   507                           ; 1 bytes @ 0xB
   508  00000C                     	ds	1
   509  00000D                     ikey_is_accessible@k:
   510                           	opt callstack 0
   511  00000D                     disp7s_off@NUM_OF_DISP:
   512                           	opt callstack 0
   513  00000D                     strlen@cp:
   514                           	opt callstack 0
   515  00000D                     ___wmul@multiplicand:
   516                           	opt callstack 0
   517  00000D                     ___lwdiv@divisor:
   518                           	opt callstack 0
   519  00000D                     ___lwmod@divisor:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0xC
   523  00000D                     	ds	1
   524  00000E                     ??_disp7s_off:
   525  00000E                     ___ftpack@exp:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0xD
   529  00000E                     	ds	1
   530  00000F                     ___ftpack@sign:
   531                           	opt callstack 0
   532  00000F                     ___lwdiv@counter:
   533                           	opt callstack 0
   534  00000F                     ___lwmod@counter:
   535                           	opt callstack 0
   536  00000F                     ___wmul@product:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0xE
   540  00000F                     	ds	1
   541  000010                     ??___ftpack:
   542  000010                     disp7s_off@i:
   543                           	opt callstack 0
   544  000010                     ___lwdiv@quotient:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0xF
   548  000010                     	ds	1
   549  000011                     disp7s_mux_Q@q:
   550                           	opt callstack 0
   551  000011                     mpap_setupToTurn@numSteps_tomove:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x10
   555  000011                     	ds	1
   556  000012                     disp7s_mux_Q@i:
   557                           	opt callstack 0
   558  000012                     utoa@buf:
   559                           	opt callstack 0
   560                           
   561                           ; 1 bytes @ 0x11
   562  000012                     	ds	1
   563  000013                     ??_disp7s_job:
   564  000013                     ?___ftmul:
   565                           	opt callstack 0
   566  000013                     ?___lwtoft:
   567                           	opt callstack 0
   568  000013                     _mpap_setupToTurn$450:
   569                           	opt callstack 0
   570  000013                     ___lwtoft@c:
   571                           	opt callstack 0
   572  000013                     utoa@val:
   573                           	opt callstack 0
   574  000013                     ___ftmul@f1:
   575                           	opt callstack 0
   576                           
   577                           ; 3 bytes @ 0x12
   578  000013                     	ds	2
   579  000015                     mpap_movetoNozzle@n:
   580                           	opt callstack 0
   581  000015                     disp7s_job@pq:
   582                           	opt callstack 0
   583  000015                     utoa@base:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587  000015                     	ds	1
   588  000016                     ?___ftadd:
   589                           	opt callstack 0
   590  000016                     ___ftadd@f1:
   591                           	opt callstack 0
   592  000016                     ___ftge@ff1:
   593                           	opt callstack 0
   594  000016                     ___ftmul@f2:
   595                           	opt callstack 0
   596                           
   597                           ; 3 bytes @ 0x15
   598  000016                     	ds	1
   599  000017                     utoa@v:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x16
   603  000017                     	ds	2
   604  000019                     ??___ftmul:
   605  000019                     utoa@c:
   606                           	opt callstack 0
   607  000019                     ___ftadd@f2:
   608                           	opt callstack 0
   609  000019                     ___ftge@ff2:
   610                           	opt callstack 0
   611                           
   612                           ; 3 bytes @ 0x18
   613  000019                     	ds	1
   614  00001A                     itoa@buf:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0x19
   618  00001A                     	ds	1
   619  00001B                     itoa@val:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x1A
   623  00001B                     	ds	1
   624  00001C                     ??___ftadd:
   625  00001C                     ??___ftge:
   626  00001C                     ___ftmul@exp:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0x1B
   630  00001C                     	ds	1
   631  00001D                     itoa@base:
   632                           	opt callstack 0
   633  00001D                     ___ftmul@f3_as_product:
   634                           	opt callstack 0
   635                           
   636                           ; 3 bytes @ 0x1C
   637  00001D                     	ds	2
   638  00001F                     ??_ikey_parsing:
   639  00001F                     ___ftadd@sign:
   640                           	opt callstack 0
   641  00001F                     nozzle_isEnabled@n:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0x1E
   645  00001F                     	ds	1
   646  000020                     ___ftadd@exp2:
   647                           	opt callstack 0
   648  000020                     ___ftmul@cntr:
   649                           	opt callstack 0
   650  000020                     disp7s_write_i@pDisp:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x1F
   654  000020                     	ds	1
   655  000021                     autoMode_job@cod_ret:
   656                           	opt callstack 0
   657  000021                     ___ftadd@exp1:
   658                           	opt callstack 0
   659  000021                     ___ftmul@sign:
   660                           	opt callstack 0
   661                           
   662                           ; 1 bytes @ 0x20
   663  000021                     	ds	1
   664  000022                     ?___fttol:
   665                           	opt callstack 0
   666  000022                     disp7s_write_i@NUM_OF_DISP:
   667                           	opt callstack 0
   668  000022                     ___fttol@f1:
   669                           	opt callstack 0
   670                           
   671                           ; 3 bytes @ 0x21
   672  000022                     	ds	1
   673  000023                     ikey_parsing@k:
   674                           	opt callstack 0
   675  000023                     disp7s_write_i@num:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x22
   679  000023                     	ds	1
   680  000024                     
   681                           ; 1 bytes @ 0x23
   682  000024                     	ds	1
   683  000025                     ??_disp7s_write_i:
   684                           
   685                           ; 1 bytes @ 0x24
   686  000025                     	ds	1
   687  000026                     ??___fttol:
   688                           
   689                           ; 1 bytes @ 0x25
   690  000026                     	ds	4
   691  00002A                     disp7s_write_i@buff:
   692                           	opt callstack 0
   693                           
   694                           ; 10 bytes @ 0x29
   695  00002A                     	ds	1
   696  00002B                     ___fttol@sign1:
   697                           	opt callstack 0
   698                           
   699                           ; 1 bytes @ 0x2A
   700  00002B                     	ds	1
   701  00002C                     ___fttol@lval:
   702                           	opt callstack 0
   703                           
   704                           ; 4 bytes @ 0x2B
   705  00002C                     	ds	4
   706  000030                     ___fttol@exp1:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x2F
   710  000030                     	ds	1
   711  000031                     ?_pulsonic_getTotalSum_mlh:
   712                           	opt callstack 0
   713  000031                     disp7s_write_f@pDisp:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x30
   717  000031                     	ds	2
   718  000033                     disp7s_write_f@NUM_OF_DISP:
   719                           	opt callstack 0
   720  000033                     pulsonic_getTotalSum_mlh@acc:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x32
   724  000033                     	ds	1
   725  000034                     disp7s_write_i@pi:
   726                           	opt callstack 0
   727  000034                     disp7s_write_f@num:
   728                           	opt callstack 0
   729                           
   730                           ; 3 bytes @ 0x33
   731  000034                     	ds	1
   732  000035                     pulsonic_getTotalSum_mlh@i:
   733                           	opt callstack 0
   734  000035                     disp7s_write_i@K10MULT:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x34
   738  000035                     	ds	2
   739  000037                     ??_disp7s_write_f:
   740  000037                     disp7s_write_i@i:
   741                           	opt callstack 0
   742                           
   743                           ; 1 bytes @ 0x36
   744  000037                     	ds	1
   745  000038                     disp7s_qtyDisp_writeInt@num:
   746                           	opt callstack 0
   747  000038                     disp7s_modeDisp_writeInt@num:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x37
   751  000038                     	ds	2
   752  00003A                     
   753                           ; 1 bytes @ 0x39
   754  00003A                     	ds	2
   755  00003C                     disp7s_qtyDisp_writeFloat@num:
   756                           	opt callstack 0
   757                           
   758                           ; 3 bytes @ 0x3B
   759  00003C                     	ds	3
   760  00003F                     autoMode_init@init:
   761                           	opt callstack 0
   762  00003F                     visMode_disp@qty:
   763                           	opt callstack 0
   764                           
   765                           ; 3 bytes @ 0x3E
   766  00003F                     	ds	1
   767  000040                     _autoMode_init$1603:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x3F
   771  000040                     	ds	2
   772  000042                     visMode_disp@c:
   773                           	opt callstack 0
   774                           
   775                           ; 1 bytes @ 0x41
   776  000042                     	ds	1
   777  000043                     visMode_job@cod_ret:
   778                           	opt callstack 0
   779                           
   780                           ; 1 bytes @ 0x42
   781  000043                     	ds	1
   782  000044                     main@c_access_kb:
   783                           	opt callstack 0
   784                           
   785                           ; 1 bytes @ 0x43
   786  000044                     	ds	1
   787  000045                     main@c_access_disp:
   788                           	opt callstack 0
   789                           
   790                           ; 1 bytes @ 0x44
   791  000045                     	ds	1
   792  000046                     main@codapp:
   793                           	opt callstack 0
   794                           
   795                           ; 1 bytes @ 0x45
   796  000046                     	ds	1
   797                           
   798 ;;
   799 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   800 ;;
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 81 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  codapp          1   69[COMRAM] char 
   808 ;;  c_access_dis    1   68[COMRAM] char 
   809 ;;  c_access_kb     1   67[COMRAM] char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 3F/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   819 ;;      Params:         0       0       0       0       0       0       0       0       0
   820 ;;      Locals:         3       0       0       0       0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0
   822 ;;      Totals:         3       0       0       0       0       0       0       0       0
   823 ;;Total ram usage:        3 bytes
   824 ;; Hardware stack levels required when called:   12
   825 ;; This function calls:
   826 ;;		_autoMode_init
   827 ;;		_autoMode_job
   828 ;;		_disp7s_init
   829 ;;		_disp7s_job
   830 ;;		_ikb_init
   831 ;;		_ikb_job
   832 ;;		_mpap_sych
   833 ;;		_pulsonic_init
   834 ;;		_pump_job
   835 ;;		_visMode_job
   836 ;; This function is called by:
   837 ;;		Startup code after reset
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text0
   842  0013A6                     __ptext0:
   843                           	opt callstack 0
   844  0013A6                     _main:
   845                           	opt callstack 19
   846                           
   847                           ;main.c: 83: int8_t c_access_kb=0;
   848                           
   849                           ;incstack = 0
   850  0013A6  0E00               	movlw	0
   851  0013A8  6E44               	movwf	main@c_access_kb,c
   852                           
   853                           ;main.c: 84: int8_t c_access_disp=0;
   854  0013AA  0E00               	movlw	0
   855  0013AC  6E45               	movwf	main@c_access_disp,c
   856                           
   857                           ;main.c: 86: int8_t codapp;;main.c: 88: LATA = 0x00;
   858  0013AE  0E00               	movlw	0
   859  0013B0  6E89               	movwf	3977,c	;volatile
   860                           
   861                           ;main.c: 89: LATC = 0x00;
   862  0013B2  0E00               	movlw	0
   863  0013B4  6E8B               	movwf	3979,c	;volatile
   864                           
   865                           ;main.c: 90: LATD = 0x00;
   866  0013B6  0E00               	movlw	0
   867  0013B8  6E8C               	movwf	3980,c	;volatile
   868                           
   869                           ;main.c: 91: LATE = 0x00;
   870  0013BA  0E00               	movlw	0
   871  0013BC  6E8D               	movwf	3981,c	;volatile
   872                           
   873                           ;main.c: 92: LATB = 0x00;
   874  0013BE  0E00               	movlw	0
   875  0013C0  6E8A               	movwf	3978,c	;volatile
   876                           
   877                           ;main.c: 94: ADCON1 = 0x0F;
   878  0013C2  0E0F               	movlw	15
   879  0013C4  6EC1               	movwf	4033,c	;volatile
   880                           
   881                           ;main.c: 95: CMCON=0xCF;
   882  0013C6  0ECF               	movlw	207
   883  0013C8  6EB4               	movwf	4020,c	;volatile
   884                           
   885                           ;main.c: 98: UCON = 0;
   886  0013CA  0E00               	movlw	0
   887  0013CC  6E6D               	movwf	3949,c	;volatile
   888                           
   889                           ;main.c: 99: UCFG = 1<<3;
   890  0013CE  0E08               	movlw	8
   891  0013D0  6E6F               	movwf	3951,c	;volatile
   892                           
   893                           ;main.c: 100: T0CON = 0B10000111;
   894  0013D2  0E87               	movlw	135
   895  0013D4  6ED5               	movwf	4053,c	;volatile
   896                           
   897                           ;main.c: 102: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
   898  0013D6  68D7               	setf	4055,c	;volatile
   899                           
   900                           ;main.c: 103: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
   901  0013D8  0ED1               	movlw	209
   902  0013DA  6ED6               	movwf	4054,c	;volatile
   903                           
   904                           ;main.c: 104: TMR0IE = 1;
   905  0013DC  8AF2               	bsf	4082,5,c	;volatile
   906  0013DE  808D               	bsf	3981,0,c	;volatile
   907  0013E0  9096               	bcf	3990,0,c	;volatile
   908  0013E2  9095               	bcf	3989,0,c	;volatile
   909  0013E4  9295               	bcf	3989,1,c	;volatile
   910  0013E6  9495               	bcf	3989,2,c	;volatile
   911  0013E8  9695               	bcf	3989,3,c	;volatile
   912  0013EA  928B               	bcf	3979,1,c	;volatile
   913  0013EC  9294               	bcf	3988,1,c	;volatile
   914  0013EE  8296               	bsf	3990,1,c	;volatile
   915  0013F0  8094               	bsf	3988,0,c	;volatile
   916  0013F2  8496               	bsf	3990,2,c	;volatile
   917                           
   918                           ;main.c: 122: ikb_init();
   919  0013F4  ECC4  F00B         	call	_ikb_init	;wreg free
   920                           
   921                           ; BSR set to: 0
   922                           ;main.c: 123: disp7s_init();
   923  0013F8  ECB6  F00F         	call	_disp7s_init	;wreg free
   924                           
   925                           ;main.c: 124: pulsonic_init();
   926  0013FC  EC86  F00F         	call	_pulsonic_init	;wreg free
   927                           
   928                           ; BSR set to: 1
   929                           ;main.c: 127: unlock.kb = 1;
   930  001400  0100               	movlb	0	; () banked
   931  001402  81CE               	bsf	_unlock& (0+255),0,b
   932                           
   933                           ; BSR set to: 0
   934                           ;main.c: 128: unlock.autoMode = 1;
   935  001404  83CE               	bsf	_unlock& (0+255),1,b
   936                           
   937                           ; BSR set to: 0
   938                           ;main.c: 129: unlock.visMode = 0;
   939  001406  95CE               	bcf	_unlock& (0+255),2,b
   940                           
   941                           ; BSR set to: 0
   942                           ;main.c: 131: autoMode_init(AUTOMODE_INIT_RESTART);
   943  001408  0E00               	movlw	0
   944  00140A  ECF1  F010         	call	_autoMode_init
   945                           
   946                           ; BSR set to: 0
   947                           ;main.c: 132: disp_owner = DISPOWNER_AUTOMODE;
   948  00140E  0E00               	movlw	0
   949  001410  6FCC               	movwf	_disp_owner& (0+255),b
   950                           
   951                           ; BSR set to: 0
   952                           ;main.c: 134: machState = MACHSTATE_RUNNING;
   953  001412  0E01               	movlw	1
   954  001414  6FCD               	movwf	_machState& (0+255),b
   955                           
   956                           ; BSR set to: 0
   957                           ;main.c: 136: smain.focus.kb = FOCUS_KB_AUTOMODE;
   958  001416  0E01               	movlw	1
   959  001418  6FB9               	movwf	(_smain+1)& (0+255),b	;volatile
   960                           
   961                           ; BSR set to: 0
   962                           ;main.c: 138: GIE = 1;
   963  00141A  8EF2               	bsf	4082,7,c	;volatile
   964  00141C                     l4812:
   965                           
   966                           ; BSR set to: 0
   967                           ;main.c: 140: {;main.c: 141: if (isr_flag.f1ms)
   968  00141C  A1CF               	btfss	_isr_flag& (0+255),0,b	;volatile
   969  00141E  D002               	goto	l108
   970                           
   971                           ; BSR set to: 0
   972                           ;main.c: 142: {;main.c: 143: isr_flag.f1ms = 0;
   973  001420  91CF               	bcf	_isr_flag& (0+255),0,b	;volatile
   974                           
   975                           ;main.c: 144: smain.f.f1ms = 1;
   976  001422  81B8               	bsf	_smain& (0+255),0,b	;volatile
   977  001424                     l108:
   978                           
   979                           ; BSR set to: 0
   980                           ;main.c: 145: };main.c: 147: if (smain.f.f1ms)
   981  001424  A1B8               	btfss	_smain& (0+255),0,b	;volatile
   982  001426  D013               	goto	l4830
   983                           
   984                           ; BSR set to: 0
   985                           ;main.c: 148: {;main.c: 149: if (++c_access_kb == 20)
   986  001428  2A44               	incf	main@c_access_kb,f,c
   987  00142A  0E14               	movlw	20
   988  00142C  1844               	xorwf	main@c_access_kb,w,c
   989  00142E  A4D8               	btfss	status,2,c
   990  001430  D005               	goto	l4824
   991                           
   992                           ; BSR set to: 0
   993                           ;main.c: 150: {;main.c: 151: c_access_kb = 0;
   994  001432  0E00               	movlw	0
   995  001434  6E44               	movwf	main@c_access_kb,c
   996                           
   997                           ; BSR set to: 0
   998                           ;main.c: 153: if (unlock.kb)
   999  001436  B1CE               	btfsc	_unlock& (0+255),0,b
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 154: {;main.c: 155: ikb_job();
  1003  001438  ECAB  F012         	call	_ikb_job	;wreg free
  1004  00143C                     l4824:
  1005                           
  1006                           ;main.c: 156: };main.c: 157: };main.c: 160: if (++c_access_disp == 3)
  1007  00143C  2A45               	incf	main@c_access_disp,f,c
  1008  00143E  0E03               	movlw	3
  1009  001440  1845               	xorwf	main@c_access_disp,w,c
  1010  001442  A4D8               	btfss	status,2,c
  1011  001444  D004               	goto	l4830
  1012                           
  1013                           ;main.c: 161: {;main.c: 162: c_access_disp = 0;
  1014  001446  0E00               	movlw	0
  1015  001448  6E45               	movwf	main@c_access_disp,c
  1016                           
  1017                           ;main.c: 163: disp7s_job();
  1018  00144A  EC71  F00E         	call	_disp7s_job	;wreg free
  1019  00144E                     l4830:
  1020                           
  1021                           ;main.c: 164: };main.c: 165: };main.c: 169: if (machState == MACHSTATE_RUNNING)
  1022  00144E  0100               	movlb	0	; () banked
  1023  001450  05CD               	decf	_machState& (0+255),w,b
  1024  001452  A4D8               	btfss	status,2,c
  1025  001454  D02B               	goto	l118
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;main.c: 170: {;main.c: 172: if (unlock.autoMode)
  1029  001456  A3CE               	btfss	_unlock& (0+255),1,b
  1030  001458  D012               	goto	l4846
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;main.c: 173: {;main.c: 174: codapp = autoMode_job();
  1034  00145A  EC76  F00C         	call	_autoMode_job	;wreg free
  1035  00145E  6E46               	movwf	main@codapp,c
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;main.c: 176: if (codapp == 1)
  1039  001460  0446               	decf	main@codapp,w,c
  1040  001462  A4D8               	btfss	status,2,c
  1041  001464  D006               	goto	l4842
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;main.c: 177: {;main.c: 178: smain.focus.kb = FOCUS_KB_VISMODE;
  1045  001466  0E02               	movlw	2
  1046  001468  6FB9               	movwf	(_smain+1)& (0+255),b	;volatile
  1047                           
  1048                           ;main.c: 179: disp_owner = DISPOWNER_VISMODE;
  1049  00146A  0E01               	movlw	1
  1050  00146C  6FCC               	movwf	_disp_owner& (0+255),b
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;main.c: 180: unlock.visMode = 1;
  1054  00146E  85CE               	bsf	_unlock& (0+255),2,b
  1055                           
  1056                           ;main.c: 181: }
  1057  001470  D006               	goto	l4846
  1058  001472                     l4842:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;main.c: 182: else if (codapp == 2)
  1062  001472  0E02               	movlw	2
  1063  001474  1846               	xorwf	main@codapp,w,c
  1064  001476  A4D8               	btfss	status,2,c
  1065  001478  D002               	goto	l4846
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;main.c: 183: {;main.c: 184: machState = MACHSTATE_CONFIG;
  1069  00147A  0E02               	movlw	2
  1070  00147C  6FCD               	movwf	_machState& (0+255),b
  1071  00147E                     l4846:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;main.c: 185: };main.c: 186: };main.c: 187: if (unlock.visMode)
  1075  00147E  A5CE               	btfss	_unlock& (0+255),2,b
  1076  001480  D015               	goto	l118
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;main.c: 188: {;main.c: 189: codapp = visMode_job();
  1080  001482  ECDB  F011         	call	_visMode_job	;wreg free
  1081  001486  6E46               	movwf	main@codapp,c
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;main.c: 191: if (codapp == 1)
  1085  001488  0446               	decf	main@codapp,w,c
  1086  00148A  A4D8               	btfss	status,2,c
  1087  00148C  D009               	goto	l4858
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;main.c: 192: {;main.c: 193: smain.focus.kb = FOCUS_KB_AUTOMODE;
  1091  00148E  0E01               	movlw	1
  1092  001490  6FB9               	movwf	(_smain+1)& (0+255),b	;volatile
  1093                           
  1094                           ;main.c: 194: disp_owner = DISPOWNER_AUTOMODE;
  1095  001492  0E00               	movlw	0
  1096  001494  6FCC               	movwf	_disp_owner& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;main.c: 195: unlock.visMode = 0;
  1100  001496  95CE               	bcf	_unlock& (0+255),2,b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;main.c: 197: autoMode_init(AUTOMODE_INIT_CONTINUE);
  1104  001498  0E01               	movlw	1
  1105  00149A  ECF1  F010         	call	_autoMode_init
  1106                           
  1107                           ;main.c: 198: }
  1108  00149E  D006               	goto	l118
  1109  0014A0                     l4858:
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;main.c: 199: else if (codapp == 2)
  1113  0014A0  0E02               	movlw	2
  1114  0014A2  1846               	xorwf	main@codapp,w,c
  1115  0014A4  A4D8               	btfss	status,2,c
  1116  0014A6  D002               	goto	l118
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 200: {;main.c: 201: machState = MACHSTATE_CONFIG;
  1120  0014A8  0E02               	movlw	2
  1121  0014AA  6FCD               	movwf	_machState& (0+255),b
  1122  0014AC                     l118:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;main.c: 213: };main.c: 214: };main.c: 216: pump_job();
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;main.c: 202: };main.c: 203: };main.c: 204: }
  1129  0014AC  EC54  F00F         	call	_pump_job	;wreg free
  1130                           
  1131                           ;main.c: 217: mpap_sych();
  1132  0014B0  ECF2  F00D         	call	_mpap_sych	;wreg free
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;main.c: 220: smain.f.f1ms = 0;
  1136  0014B4  91B8               	bcf	_smain& (0+255),0,b	;volatile
  1137  0014B6  D7B2               	goto	l4812
  1138  0014B8                     __end_of_main:
  1139                           	opt callstack 0
  1140                           
  1141 ;; *************** function _visMode_job *****************
  1142 ;; Defined at:
  1143 ;;		line 26 in file "visualizerMode.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  cod_ret         1   66[COMRAM] char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      char 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 3F/0
  1154 ;;		On exit  : 3F/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0
  1158 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1160 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1161 ;;Total ram usage:        1 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:   11
  1164 ;; This function calls:
  1165 ;;		_visMode_disp
  1166 ;;		_visMode_kb
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text1
  1173  0023B6                     __ptext1:
  1174                           	opt callstack 0
  1175  0023B6                     _visMode_job:
  1176                           	opt callstack 19
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;visualizerMode.c: 28: int8_t cod_ret = 0;
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;incstack = 0
  1183  0023B6  0E00               	movlw	0
  1184  0023B8  6E43               	movwf	visMode_job@cod_ret,c
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;visualizerMode.c: 30: if (smain.focus.kb == FOCUS_KB_VISMODE)
  1188  0023BA  0E02               	movlw	2
  1189  0023BC  19B9               	xorwf	(_smain+1)& (0+255),w,b	;volatile
  1190  0023BE  A4D8               	btfss	status,2,c
  1191  0023C0  D003               	goto	l4752
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;visualizerMode.c: 31: {;visualizerMode.c: 32: cod_ret = visMode_kb();
  1195  0023C2  EC63  F00D         	call	_visMode_kb	;wreg free
  1196  0023C6  6E43               	movwf	visMode_job@cod_ret,c
  1197  0023C8                     l4752:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;visualizerMode.c: 33: };visualizerMode.c: 35: if ( visMode.disp7s_accessReq == 1)
  1201  0023C8  05BB               	decf	_visMode& (0+255),w,b
  1202  0023CA  A4D8               	btfss	status,2,c
  1203  0023CC  D006               	goto	l4758
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;visualizerMode.c: 36: {;visualizerMode.c: 37: visMode_disp(visMode.numVista);
  1207  0023CE  51BC               	movf	(_visMode+1)& (0+255),w,b
  1208  0023D0  EC33  F00E         	call	_visMode_disp
  1209                           
  1210                           ;visualizerMode.c: 38: visMode.disp7s_accessReq = 0;
  1211  0023D4  0E00               	movlw	0
  1212  0023D6  0100               	movlb	0	; () banked
  1213  0023D8  6FBB               	movwf	_visMode& (0+255),b
  1214  0023DA                     l4758:
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;visualizerMode.c: 39: };visualizerMode.c: 41: return cod_ret;
  1218  0023DA  5043               	movf	visMode_job@cod_ret,w,c
  1219                           
  1220                           ; BSR set to: 0
  1221  0023DC  0012               	return		;funcret
  1222  0023DE                     __end_of_visMode_job:
  1223                           	opt callstack 0
  1224                           
  1225 ;; *************** function _visMode_kb *****************
  1226 ;; Defined at:
  1227 ;;		line 43 in file "visualizerMode.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  cod_ret         1   11[COMRAM] char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      char 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 3F/0
  1238 ;;		On exit  : 3F/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0
  1242 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1244 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1245 ;;Total ram usage:        1 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    6
  1248 ;; This function calls:
  1249 ;;		_ikb_key_is_ready2read
  1250 ;;		_ikb_key_was_read
  1251 ;; This function is called by:
  1252 ;;		_visMode_job
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text2
  1257  001AC6                     __ptext2:
  1258                           	opt callstack 0
  1259  001AC6                     _visMode_kb:
  1260                           	opt callstack 23
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;visualizerMode.c: 45: int8_t cod_ret = 0;
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;incstack = 0
  1267  001AC6  0E00               	movlw	0
  1268  001AC8  6E0C               	movwf	visMode_kb@cod_ret,c
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;visualizerMode.c: 47: if (ikb_key_is_ready2read(0))
  1272  001ACA  0E00               	movlw	0
  1273  001ACC  EC43  F012         	call	_ikb_key_is_ready2read
  1274  001AD0  0900               	iorlw	0
  1275  001AD2  B4D8               	btfsc	status,2,c
  1276  001AD4  D010               	goto	l3706
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;visualizerMode.c: 48: {;visualizerMode.c: 49: ikb_key_was_read(0);
  1280  001AD6  0E00               	movlw	0
  1281  001AD8  EC6B  F012         	call	_ikb_key_was_read
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;visualizerMode.c: 51: if (++visMode.numVista >= (8+1))
  1285  001ADC  2BBC               	incf	(_visMode+1)& (0+255),f,b
  1286  001ADE  51BC               	movf	(_visMode+1)& (0+255),w,b
  1287  001AE0  0A80               	xorlw	128
  1288  001AE2  0F77               	addlw	-137
  1289  001AE4  A0D8               	btfss	status,0,c
  1290  001AE6  D005               	goto	l3704
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;visualizerMode.c: 52: {;visualizerMode.c: 53: visMode.numVista = 0x00;
  1294  001AE8  0E00               	movlw	0
  1295  001AEA  6FBC               	movwf	(_visMode+1)& (0+255),b
  1296                           
  1297                           ;visualizerMode.c: 54: cod_ret = 1;
  1298  001AEC  0E01               	movlw	1
  1299  001AEE  6E0C               	movwf	visMode_kb@cod_ret,c
  1300                           
  1301                           ;visualizerMode.c: 55: }
  1302  001AF0  D002               	goto	l3706
  1303  001AF2                     l3704:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;visualizerMode.c: 56: else;visualizerMode.c: 57: {;visualizerMode.c: 58: visMode.disp7s
      +                          _accessReq = 1;
  1307  001AF2  0E01               	movlw	1
  1308  001AF4  6FBB               	movwf	_visMode& (0+255),b
  1309  001AF6                     l3706:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;visualizerMode.c: 59: };visualizerMode.c: 60: };visualizerMode.c: 62: if (ikb_key_is_re
      +                          ady2read(1))
  1313  001AF6  0E01               	movlw	1
  1314  001AF8  EC43  F012         	call	_ikb_key_is_ready2read
  1315  001AFC  0900               	iorlw	0
  1316  001AFE  B4D8               	btfsc	status,2,c
  1317  001B00  D00D               	goto	l3716
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;visualizerMode.c: 63: {;visualizerMode.c: 64: ikb_key_was_read(1);
  1321  001B02  0E01               	movlw	1
  1322  001B04  EC6B  F012         	call	_ikb_key_was_read
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;visualizerMode.c: 66: if (--visMode.numVista < 0)
  1326  001B08  07BC               	decf	(_visMode+1)& (0+255),f,b
  1327  001B0A  AFBC               	btfss	(_visMode+1)& (0+255),7,b
  1328  001B0C  D005               	goto	l3714
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;visualizerMode.c: 67: {;visualizerMode.c: 68: visMode.numVista = (8+1)-1;
  1332  001B0E  0E08               	movlw	8
  1333  001B10  6FBC               	movwf	(_visMode+1)& (0+255),b
  1334                           
  1335                           ;visualizerMode.c: 69: cod_ret = 1;
  1336  001B12  0E01               	movlw	1
  1337  001B14  6E0C               	movwf	visMode_kb@cod_ret,c
  1338                           
  1339                           ;visualizerMode.c: 70: }
  1340  001B16  D002               	goto	l3716
  1341  001B18                     l3714:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;visualizerMode.c: 71: else;visualizerMode.c: 72: {;visualizerMode.c: 73: visMode.disp7s
      +                          _accessReq = 1;
  1345  001B18  0E01               	movlw	1
  1346  001B1A  6FBB               	movwf	_visMode& (0+255),b
  1347  001B1C                     l3716:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;visualizerMode.c: 74: };visualizerMode.c: 75: };visualizerMode.c: 76: if (ikb_key_is_re
      +                          ady2read(2))
  1351  001B1C  0E02               	movlw	2
  1352  001B1E  EC43  F012         	call	_ikb_key_is_ready2read
  1353  001B22  0900               	iorlw	0
  1354  001B24  B4D8               	btfsc	status,2,c
  1355  001B26  D003               	goto	l845
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;visualizerMode.c: 77: {;visualizerMode.c: 78: ikb_key_was_read(2);
  1359  001B28  0E02               	movlw	2
  1360  001B2A  EC6B  F012         	call	_ikb_key_was_read
  1361  001B2E                     l845:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;visualizerMode.c: 80: };visualizerMode.c: 81: if (ikb_key_is_ready2read(3))
  1365  001B2E  0E03               	movlw	3
  1366  001B30  EC43  F012         	call	_ikb_key_is_ready2read
  1367  001B34  0900               	iorlw	0
  1368  001B36  B4D8               	btfsc	status,2,c
  1369  001B38  D003               	goto	l846
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;visualizerMode.c: 82: {;visualizerMode.c: 83: ikb_key_was_read(3);
  1373  001B3A  0E03               	movlw	3
  1374  001B3C  EC6B  F012         	call	_ikb_key_was_read
  1375  001B40                     l846:
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;visualizerMode.c: 85: };visualizerMode.c: 86: if (ikb_key_is_ready2read(4))
  1379  001B40  0E04               	movlw	4
  1380  001B42  EC43  F012         	call	_ikb_key_is_ready2read
  1381  001B46  0900               	iorlw	0
  1382  001B48  B4D8               	btfsc	status,2,c
  1383  001B4A  D003               	goto	l3724
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;visualizerMode.c: 87: {;visualizerMode.c: 88: ikb_key_was_read(4);
  1387  001B4C  0E04               	movlw	4
  1388  001B4E  EC6B  F012         	call	_ikb_key_was_read
  1389  001B52                     l3724:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;visualizerMode.c: 90: };visualizerMode.c: 91: return cod_ret;
  1393  001B52  500C               	movf	visMode_kb@cod_ret,w,c
  1394                           
  1395                           ; BSR set to: 0
  1396  001B54  0012               	return		;funcret
  1397  001B56                     __end_of_visMode_kb:
  1398                           	opt callstack 0
  1399                           
  1400 ;; *************** function _visMode_disp *****************
  1401 ;; Defined at:
  1402 ;;		line 93 in file "visualizerMode.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  c               1    wreg     char 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  c               1   65[COMRAM] char 
  1407 ;;  qty             3   62[COMRAM] char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 3F/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0
  1418 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1420 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1421 ;;Total ram usage:        4 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:   10
  1424 ;; This function calls:
  1425 ;;		_disp7s_modeDisp_writeInt
  1426 ;;		_disp7s_modeDisp_writeText_oil
  1427 ;;		_disp7s_qtyDisp_writeFloat
  1428 ;;		_disp7s_qtyDisp_writeInt
  1429 ;;		_disp7s_qtyDisp_writeText_OFF
  1430 ;; This function is called by:
  1431 ;;		_visMode_job
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text3
  1436  001C66                     __ptext3:
  1437                           	opt callstack 0
  1438  001C66                     _visMode_disp:
  1439                           	opt callstack 19
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;incstack = 0
  1443                           ;visMode_disp@c stored from wreg
  1444  001C66  6E42               	movwf	visMode_disp@c,c
  1445                           
  1446                           ;visualizerMode.c: 95: double qty;;visualizerMode.c: 98: if (disp_owner == DISPOWNER_VIS
      +                          MODE)
  1447  001C68  0100               	movlb	0	; () banked
  1448  001C6A  05CC               	decf	_disp_owner& (0+255),w,b
  1449  001C6C  A4D8               	btfss	status,2,c
  1450  001C6E  0012               	return	
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;visualizerMode.c: 99: {;visualizerMode.c: 100: disp7s_modeDisp_writeInt(c+1);
  1454  001C70  0E01               	movlw	1
  1455  001C72  2442               	addwf	visMode_disp@c,w,c
  1456  001C74  6E38               	movwf	disp7s_modeDisp_writeInt@num,c
  1457  001C76  6AE8               	clrf	wreg,c
  1458  001C78  B0D8               	btfsc	status,0,c
  1459  001C7A  2AE8               	incf	wreg,f,c
  1460  001C7C  BE42               	btfsc	visMode_disp@c,7,c
  1461  001C7E  06E8               	decf	wreg,f,c
  1462  001C80  6E39               	movwf	disp7s_modeDisp_writeInt@num+1,c
  1463  001C82  EC5E  F012         	call	_disp7s_modeDisp_writeInt	;wreg free
  1464                           
  1465                           ;visualizerMode.c: 102: if (c < 8)
  1466  001C86  5042               	movf	visMode_disp@c,w,c
  1467  001C88  0A80               	xorlw	128
  1468  001C8A  0F78               	addlw	-136
  1469  001C8C  B0D8               	btfsc	status,0,c
  1470  001C8E  D01F               	goto	l4680
  1471                           
  1472                           ;visualizerMode.c: 103: {;visualizerMode.c: 104: qty = pulsonic.nozzle[c].Q_mlh;
  1473  001C90  5042               	movf	visMode_disp@c,w,c
  1474  001C92  0D06               	mullw	6
  1475  001C94  0E06               	movlw	low (_pulsonic+6)
  1476  001C96  24F3               	addwf	prodl,w,c
  1477  001C98  6ED9               	movwf	fsr2l,c
  1478  001C9A  0E01               	movlw	high (_pulsonic+6)
  1479  001C9C  20F4               	addwfc	prodh,w,c
  1480  001C9E  6EDA               	movwf	fsr2h,c
  1481  001CA0  CFDE F03F          	movff	postinc2,visMode_disp@qty
  1482  001CA4  CFDE F040          	movff	postinc2,visMode_disp@qty+1
  1483  001CA8  CFDD F041          	movff	postdec2,visMode_disp@qty+2
  1484                           
  1485                           ;visualizerMode.c: 105: if (qty == 0)
  1486  001CAC  503F               	movf	visMode_disp@qty,w,c
  1487  001CAE  1040               	iorwf	visMode_disp@qty+1,w,c
  1488  001CB0  1041               	iorwf	visMode_disp@qty+2,w,c
  1489  001CB2  A4D8               	btfss	status,2,c
  1490  001CB4  D003               	goto	l4678
  1491                           
  1492                           ;visualizerMode.c: 106: {;visualizerMode.c: 107: disp7s_qtyDisp_writeText_OFF();
  1493  001CB6  EC87  F012         	call	_disp7s_qtyDisp_writeText_OFF	;wreg free
  1494                           
  1495                           ;visualizerMode.c: 108: }
  1496  001CBA  0012               	return	
  1497  001CBC                     l4678:
  1498                           
  1499                           ;visualizerMode.c: 109: else;visualizerMode.c: 110: {;visualizerMode.c: 111: disp7s_qtyD
      +                          isp_writeFloat( qty );
  1500  001CBC  C03F  F03C         	movff	visMode_disp@qty,disp7s_qtyDisp_writeFloat@num
  1501  001CC0  C040  F03D         	movff	visMode_disp@qty+1,disp7s_qtyDisp_writeFloat@num+1
  1502  001CC4  C041  F03E         	movff	visMode_disp@qty+2,disp7s_qtyDisp_writeFloat@num+2
  1503  001CC8  EC34  F012         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  1504  001CCC  0012               	return	
  1505  001CCE                     l4680:
  1506                           
  1507                           ;visualizerMode.c: 114: else;visualizerMode.c: 115: {;visualizerMode.c: 116: disp7s_mode
      +                          Disp_writeText_oil();
  1508  001CCE  ECA5  F012         	call	_disp7s_modeDisp_writeText_oil	;wreg free
  1509                           
  1510                           ; BSR set to: 1
  1511                           ;visualizerMode.c: 117: disp7s_qtyDisp_writeInt( pulsonic.oil.viscosity );
  1512  001CD2  5136               	movf	(_pulsonic+54)& (0+255),w,b
  1513  001CD4  6E38               	movwf	disp7s_qtyDisp_writeInt@num,c
  1514  001CD6  6A39               	clrf	disp7s_qtyDisp_writeInt@num+1,c
  1515  001CD8  BE38               	btfsc	disp7s_qtyDisp_writeInt@num,7,c
  1516  001CDA  0639               	decf	disp7s_qtyDisp_writeInt@num+1,f,c
  1517  001CDC  EC51  F012         	call	_disp7s_qtyDisp_writeInt	;wreg free
  1518  001CE0  0012               	return		;funcret
  1519  001CE2                     __end_of_visMode_disp:
  1520                           	opt callstack 0
  1521                           
  1522 ;; *************** function _disp7s_qtyDisp_writeText_OFF *****************
  1523 ;; Defined at:
  1524 ;;		line 169 in file "display.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 3F/1
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    5
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_visMode_disp
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text4
  1553  00250E                     __ptext4:
  1554                           	opt callstack 0
  1555  00250E                     _disp7s_qtyDisp_writeText_OFF:
  1556                           	opt callstack 23
  1557                           
  1558                           ;display.c: 171: pulsonic.disp7s.qty[2] =0x3F;
  1559                           
  1560                           ;incstack = 0
  1561  00250E  0E3F               	movlw	63
  1562  002510  0101               	movlb	1	; () banked
  1563  002512  6F3D               	movwf	(_pulsonic+61)& (0+255),b
  1564                           
  1565                           ;display.c: 172: pulsonic.disp7s.qty[1] =0x71;
  1566  002514  0E71               	movlw	113
  1567  002516  6F3C               	movwf	(_pulsonic+60)& (0+255),b
  1568                           
  1569                           ;display.c: 173: pulsonic.disp7s.qty[0] =0x71;
  1570  002518  0E71               	movlw	113
  1571  00251A  6F3B               	movwf	(_pulsonic+59)& (0+255),b
  1572                           
  1573                           ; BSR set to: 1
  1574  00251C  0012               	return		;funcret
  1575  00251E                     __end_of_disp7s_qtyDisp_writeText_OFF:
  1576                           	opt callstack 0
  1577                           
  1578 ;; *************** function _disp7s_qtyDisp_writeInt *****************
  1579 ;; Defined at:
  1580 ;;		line 281 in file "display.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  num             2   55[COMRAM] int 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 3F/1
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1594 ;;      Params:         2       0       0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1597 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1598 ;;Total ram usage:        2 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    9
  1601 ;; This function calls:
  1602 ;;		_disp7s_write_i
  1603 ;; This function is called by:
  1604 ;;		_visMode_disp
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text5
  1609  0024A2                     __ptext5:
  1610                           	opt callstack 0
  1611  0024A2                     _disp7s_qtyDisp_writeInt:
  1612                           	opt callstack 19
  1613                           
  1614                           ; BSR set to: 1
  1615                           ;display.c: 283: disp7s_write_i(pulsonic.disp7s.qty, 3, num);
  1616                           
  1617                           ; BSR set to: 1
  1618                           ;incstack = 0
  1619  0024A2  0E3B               	movlw	low (_pulsonic+59)
  1620  0024A4  6E20               	movwf	disp7s_write_i@pDisp,c
  1621  0024A6  0E01               	movlw	high (_pulsonic+59)
  1622  0024A8  6E21               	movwf	disp7s_write_i@pDisp+1,c
  1623  0024AA  0E03               	movlw	3
  1624  0024AC  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  1625  0024AE  C038  F023         	movff	disp7s_qtyDisp_writeInt@num,disp7s_write_i@num
  1626  0024B2  C039  F024         	movff	disp7s_qtyDisp_writeInt@num+1,disp7s_write_i@num+1
  1627  0024B6  EC5C  F00A         	call	_disp7s_write_i	;wreg free
  1628  0024BA  0012               	return		;funcret
  1629  0024BC                     __end_of_disp7s_qtyDisp_writeInt:
  1630                           	opt callstack 0
  1631                           
  1632 ;; *************** function _disp7s_modeDisp_writeText_oil *****************
  1633 ;; Defined at:
  1634 ;;		line 164 in file "display.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 3F/1
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1648 ;;      Params:         0       0       0       0       0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    5
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_visMode_disp
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text6
  1663  00254A                     __ptext6:
  1664                           	opt callstack 0
  1665  00254A                     _disp7s_modeDisp_writeText_oil:
  1666                           	opt callstack 23
  1667                           
  1668                           ;display.c: 166: pulsonic.disp7s.mode[1] =0x5C;
  1669                           
  1670                           ;incstack = 0
  1671  00254A  0E5C               	movlw	92
  1672  00254C  0101               	movlb	1	; () banked
  1673  00254E  6F3F               	movwf	(_pulsonic+63)& (0+255),b
  1674                           
  1675                           ;display.c: 167: pulsonic.disp7s.mode[0] =0x16;
  1676  002550  0E16               	movlw	22
  1677  002552  6F3E               	movwf	(_pulsonic+62)& (0+255),b
  1678                           
  1679                           ; BSR set to: 1
  1680  002554  0012               	return		;funcret
  1681  002556                     __end_of_disp7s_modeDisp_writeText_oil:
  1682                           	opt callstack 0
  1683                           
  1684 ;; *************** function _disp7s_modeDisp_writeInt *****************
  1685 ;; Defined at:
  1686 ;;		line 285 in file "display.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  num             2   55[COMRAM] int 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 3F/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1700 ;;      Params:         2       0       0       0       0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1703 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1704 ;;Total ram usage:        2 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    9
  1707 ;; This function calls:
  1708 ;;		_disp7s_write_i
  1709 ;; This function is called by:
  1710 ;;		_visMode_disp
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text7
  1715  0024BC                     __ptext7:
  1716                           	opt callstack 0
  1717  0024BC                     _disp7s_modeDisp_writeInt:
  1718                           	opt callstack 19
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;display.c: 287: disp7s_write_i(pulsonic.disp7s.mode, 2, num);
  1722                           
  1723                           ; BSR set to: 1
  1724                           ;incstack = 0
  1725  0024BC  0E3E               	movlw	low (_pulsonic+62)
  1726  0024BE  6E20               	movwf	disp7s_write_i@pDisp,c
  1727  0024C0  0E01               	movlw	high (_pulsonic+62)
  1728  0024C2  6E21               	movwf	disp7s_write_i@pDisp+1,c
  1729  0024C4  0E02               	movlw	2
  1730  0024C6  6E22               	movwf	disp7s_write_i@NUM_OF_DISP,c
  1731  0024C8  C038  F023         	movff	disp7s_modeDisp_writeInt@num,disp7s_write_i@num
  1732  0024CC  C039  F024         	movff	disp7s_modeDisp_writeInt@num+1,disp7s_write_i@num+1
  1733  0024D0  EC5C  F00A         	call	_disp7s_write_i	;wreg free
  1734  0024D4  0012               	return		;funcret
  1735  0024D6                     __end_of_disp7s_modeDisp_writeInt:
  1736                           	opt callstack 0
  1737                           
  1738 ;; *************** function _disp7s_write_i *****************
  1739 ;; Defined at:
  1740 ;;		line 251 in file "display.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  pDisp           2   31[COMRAM] PTR unsigned char 
  1743 ;;		 -> pulsonic.disp7s(5), pulsonic(64), 
  1744 ;;  NUM_OF_DISP     1   33[COMRAM] char 
  1745 ;;  num             2   34[COMRAM] int 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  buff           10   41[COMRAM] unsigned char [10]
  1748 ;;  K10MULT         2   52[COMRAM] int 
  1749 ;;  i               1   54[COMRAM] char 
  1750 ;;  pi              1   51[COMRAM] char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 3E/1
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1760 ;;      Params:         5       0       0       0       0       0       0       0       0
  1761 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1762 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1763 ;;      Totals:        24       0       0       0       0       0       0       0       0
  1764 ;;Total ram usage:       24 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    8
  1767 ;; This function calls:
  1768 ;;		___wmul
  1769 ;;		_itoa
  1770 ;;		_strlen
  1771 ;; This function is called by:
  1772 ;;		_disp7s_qtyDisp_writeInt
  1773 ;;		_disp7s_modeDisp_writeInt
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text8
  1778  0014B8                     __ptext8:
  1779                           	opt callstack 0
  1780  0014B8                     _disp7s_write_i:
  1781                           	opt callstack 19
  1782                           
  1783                           ;display.c: 253: int16_t K10MULT;;display.c: 254: char buff[10];;display.c: 255: int8_t 
      +                          i;;display.c: 256: int8_t pi;;display.c: 258: K10MULT = 1;
  1784                           
  1785                           ;incstack = 0
  1786  0014B8  0E00               	movlw	0
  1787  0014BA  6E36               	movwf	disp7s_write_i@K10MULT+1,c
  1788  0014BC  0E01               	movlw	1
  1789  0014BE  6E35               	movwf	disp7s_write_i@K10MULT,c
  1790                           
  1791                           ;display.c: 259: i = NUM_OF_DISP;
  1792  0014C0  C022  F037         	movff	disp7s_write_i@NUM_OF_DISP,disp7s_write_i@i
  1793                           
  1794                           ;display.c: 260: while (i--)
  1795  0014C4  D00E               	goto	l4508
  1796  0014C6                     l4506:
  1797                           
  1798                           ;display.c: 261: {K10MULT *=10;}
  1799  0014C6  C035  F00B         	movff	disp7s_write_i@K10MULT,___wmul@multiplier
  1800  0014CA  C036  F00C         	movff	disp7s_write_i@K10MULT+1,___wmul@multiplier+1
  1801  0014CE  0E00               	movlw	0
  1802  0014D0  6E0E               	movwf	___wmul@multiplicand+1,c
  1803  0014D2  0E0A               	movlw	10
  1804  0014D4  6E0D               	movwf	___wmul@multiplicand,c
  1805  0014D6  ECEF  F011         	call	___wmul	;wreg free
  1806  0014DA  C00B  F035         	movff	?___wmul,disp7s_write_i@K10MULT
  1807  0014DE  C00C  F036         	movff	?___wmul+1,disp7s_write_i@K10MULT+1
  1808  0014E2                     l4508:
  1809  0014E2  0637               	decf	disp7s_write_i@i,f,c
  1810  0014E4  2837               	incf	disp7s_write_i@i,w,c
  1811  0014E6  A4D8               	btfss	status,2,c
  1812  0014E8  D7EE               	goto	l4506
  1813                           
  1814                           ;display.c: 263: if (num >= K10MULT)
  1815  0014EA  5035               	movf	disp7s_write_i@K10MULT,w,c
  1816  0014EC  5C23               	subwf	disp7s_write_i@num,w,c
  1817  0014EE  5024               	movf	disp7s_write_i@num+1,w,c
  1818  0014F0  0A80               	xorlw	128
  1819  0014F2  6E25               	movwf	??_disp7s_write_i& (0+255),c
  1820  0014F4  5036               	movf	disp7s_write_i@K10MULT+1,w,c
  1821  0014F6  0A80               	xorlw	128
  1822  0014F8  5825               	subwfb	??_disp7s_write_i& (0+255),w,c
  1823  0014FA  A0D8               	btfss	status,0,c
  1824  0014FC  D006               	goto	l4514
  1825                           
  1826                           ;display.c: 264: {num= K10MULT-1;}
  1827  0014FE  0EFF               	movlw	255
  1828  001500  2435               	addwf	disp7s_write_i@K10MULT,w,c
  1829  001502  6E23               	movwf	disp7s_write_i@num,c
  1830  001504  0EFF               	movlw	255
  1831  001506  2036               	addwfc	disp7s_write_i@K10MULT+1,w,c
  1832  001508  6E24               	movwf	disp7s_write_i@num+1,c
  1833  00150A                     l4514:
  1834                           
  1835                           ;display.c: 266: itoa(buff, num, 10);
  1836  00150A  0E2A               	movlw	low disp7s_write_i@buff
  1837  00150C  6E1A               	movwf	itoa@buf,c
  1838  00150E  C023  F01B         	movff	disp7s_write_i@num,itoa@val
  1839  001512  C024  F01C         	movff	disp7s_write_i@num+1,itoa@val+1
  1840  001516  0E00               	movlw	0
  1841  001518  6E1E               	movwf	itoa@base+1,c
  1842  00151A  0E0A               	movlw	10
  1843  00151C  6E1D               	movwf	itoa@base,c
  1844  00151E  EC93  F011         	call	_itoa	;wreg free
  1845                           
  1846                           ;display.c: 269: for (i=0; i<NUM_OF_DISP; i++)
  1847  001522  0E00               	movlw	0
  1848  001524  6E37               	movwf	disp7s_write_i@i,c
  1849  001526  D013               	goto	l4522
  1850  001528                     l4518:
  1851                           
  1852                           ;display.c: 270: {pDisp[i] = DISP7S_CHARS[OFF];}
  1853  001528  0E0F               	movlw	low _DISP7S_CHARS
  1854  00152A  6EF6               	movwf	tblptrl,c
  1855  00152C                     	if	1	;There is more than 1 active tblptr byte
  1856  00152C  0E08               	movlw	high _DISP7S_CHARS
  1857  00152E  6EF7               	movwf	tblptrh,c
  1858  001530                     	endif
  1859  001530                     	if	0	;There are less than 3 active tblptr bytes
  1860  001530                     	endif
  1861  001530  C037  F025         	movff	disp7s_write_i@i,??_disp7s_write_i
  1862  001534  6A26               	clrf	(??_disp7s_write_i+1)& (0+255),c
  1863  001536  BE25               	btfsc	??_disp7s_write_i& (0+255),7,c
  1864  001538  0626               	decf	(??_disp7s_write_i+1)& (0+255),f,c
  1865  00153A  5025               	movf	??_disp7s_write_i,w,c
  1866  00153C  2420               	addwf	disp7s_write_i@pDisp,w,c
  1867  00153E  6ED9               	movwf	fsr2l,c
  1868  001540  5026               	movf	??_disp7s_write_i+1,w,c
  1869  001542  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  1870  001544  6EDA               	movwf	fsr2h,c
  1871  001546  0008               	tblrd		*
  1872  001548  CFF5 FFDF          	movff	tablat,indf2
  1873  00154C  2A37               	incf	disp7s_write_i@i,f,c
  1874  00154E                     l4522:
  1875  00154E  5037               	movf	disp7s_write_i@i,w,c
  1876  001550  0A80               	xorlw	128
  1877  001552  6E25               	movwf	??_disp7s_write_i& (0+255),c
  1878  001554  5022               	movf	disp7s_write_i@NUM_OF_DISP,w,c
  1879  001556  0A80               	xorlw	128
  1880  001558  5C25               	subwf	??_disp7s_write_i& (0+255),w,c
  1881  00155A  A0D8               	btfss	status,0,c
  1882  00155C  D7E5               	goto	l4518
  1883                           
  1884                           ;display.c: 272: i=0;
  1885  00155E  0E00               	movlw	0
  1886  001560  6E37               	movwf	disp7s_write_i@i,c
  1887                           
  1888                           ;display.c: 273: pi = strlen(buff)-1;
  1889  001562  0E2A               	movlw	low disp7s_write_i@buff
  1890  001564  6E0B               	movwf	strlen@s,c
  1891  001566  EC14  F012         	call	_strlen	;wreg free
  1892  00156A  040B               	decf	?_strlen,w,c
  1893  00156C  6E34               	movwf	disp7s_write_i@pi,c
  1894                           
  1895                           ;display.c: 274: while (buff[i] != '\0')
  1896  00156E  D021               	goto	l4534
  1897  001570                     l4528:
  1898                           
  1899                           ;display.c: 275: {;display.c: 276: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  1900  001570  5037               	movf	disp7s_write_i@i,w,c
  1901  001572  0F2A               	addlw	low disp7s_write_i@buff
  1902  001574  6ED9               	movwf	fsr2l,c
  1903  001576  6ADA               	clrf	fsr2h,c
  1904  001578  50DF               	movf	indf2,w,c
  1905  00157A  6E25               	movwf	??_disp7s_write_i& (0+255),c
  1906  00157C  0ED0               	movlw	208
  1907  00157E  2625               	addwf	??_disp7s_write_i,f,c
  1908  001580  5025               	movf	??_disp7s_write_i,w,c
  1909  001582  0F01               	addlw	low _DISP7S_NUMS
  1910  001584  6E26               	movwf	(??_disp7s_write_i+1)& (0+255),c
  1911  001586  C026  FFF6         	movff	??_disp7s_write_i+1,tblptrl
  1912  00158A                     	if	1	;There is more than 1 active tblptr byte
  1913  00158A  0E08               	movlw	high __smallconst
  1914  00158C  6EF7               	movwf	tblptrh,c
  1915  00158E                     	endif
  1916  00158E                     	if	0	;tblptru may be non-zero
  1917  00158E                     	endif
  1918  00158E                     	if	0	;tblptru may be non-zero
  1919  00158E                     	endif
  1920  00158E  0008               	tblrd		*
  1921  001590  CFF5 F027          	movff	tablat,??_disp7s_write_i+2
  1922  001594  C034  F028         	movff	disp7s_write_i@pi,??_disp7s_write_i+3
  1923  001598  6A29               	clrf	(??_disp7s_write_i+4)& (0+255),c
  1924  00159A  BE28               	btfsc	(??_disp7s_write_i+3)& (0+255),7,c
  1925  00159C  0629               	decf	(??_disp7s_write_i+4)& (0+255),f,c
  1926  00159E  5028               	movf	??_disp7s_write_i+3,w,c
  1927  0015A0  2420               	addwf	disp7s_write_i@pDisp,w,c
  1928  0015A2  6ED9               	movwf	fsr2l,c
  1929  0015A4  5029               	movf	??_disp7s_write_i+4,w,c
  1930  0015A6  2021               	addwfc	disp7s_write_i@pDisp+1,w,c
  1931  0015A8  6EDA               	movwf	fsr2h,c
  1932  0015AA  5027               	movf	??_disp7s_write_i+2,w,c
  1933  0015AC  12DF               	iorwf	indf2,f,c
  1934  0015AE  0634               	decf	disp7s_write_i@pi,f,c
  1935                           
  1936                           ;display.c: 277: i++;
  1937  0015B0  2A37               	incf	disp7s_write_i@i,f,c
  1938  0015B2                     l4534:
  1939  0015B2  5037               	movf	disp7s_write_i@i,w,c
  1940  0015B4  0F2A               	addlw	low disp7s_write_i@buff
  1941  0015B6  6ED9               	movwf	fsr2l,c
  1942  0015B8  6ADA               	clrf	fsr2h,c
  1943  0015BA  50DF               	movf	indf2,w,c
  1944  0015BC  B4D8               	btfsc	status,2,c
  1945  0015BE  0012               	return	
  1946  0015C0  D7D7               	goto	l4528
  1947  0015C2                     __end_of_disp7s_write_i:
  1948                           	opt callstack 0
  1949                           
  1950 ;; *************** function _strlen *****************
  1951 ;; Defined at:
  1952 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/strlen.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  s               1   10[COMRAM] PTR const unsigned char 
  1955 ;;		 -> disp7s_write_i@buff(10), 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  cp              1   12[COMRAM] PTR const unsigned char 
  1958 ;;		 -> disp7s_write_i@buff(10), 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  2   10[COMRAM] unsigned int 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/1
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1968 ;;      Params:         2       0       0       0       0       0       0       0       0
  1969 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1971 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1972 ;;Total ram usage:        3 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    5
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_disp7s_write_i
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text9
  1983  002428                     __ptext9:
  1984                           	opt callstack 0
  1985  002428                     _strlen:
  1986                           	opt callstack 21
  1987                           
  1988                           ;incstack = 0
  1989  002428  C00B  F00D         	movff	strlen@s,strlen@cp
  1990  00242C  D001               	goto	l3016
  1991  00242E                     l3014:
  1992  00242E  2A0D               	incf	strlen@cp,f,c
  1993  002430                     l3016:
  1994  002430  500D               	movf	strlen@cp,w,c
  1995  002432  6ED9               	movwf	fsr2l,c
  1996  002434  6ADA               	clrf	fsr2h,c
  1997  002436  50DF               	movf	indf2,w,c
  1998  002438  A4D8               	btfss	status,2,c
  1999  00243A  D7F9               	goto	l3014
  2000  00243C  500B               	movf	strlen@s,w,c
  2001  00243E  5C0D               	subwf	strlen@cp,w,c
  2002  002440  6E0B               	movwf	?_strlen,c
  2003  002442  6A0C               	clrf	?_strlen+1,c
  2004  002444  BE0B               	btfsc	?_strlen,7,c
  2005  002446  060C               	decf	?_strlen+1,f,c
  2006  002448  0012               	return		;funcret
  2007  00244A                     __end_of_strlen:
  2008                           	opt callstack 0
  2009                           
  2010 ;; *************** function _pump_job *****************
  2011 ;; Defined at:
  2012 ;;		line 22 in file "pump.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  cod_ret         1    0        char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      char 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 3F/0
  2023 ;;		On exit  : 3F/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0
  2027 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2029 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2030 ;;Total ram usage:        1 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    5
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text10
  2041  001EA8                     __ptext10:
  2042                           	opt callstack 0
  2043  001EA8                     _pump_job:
  2044                           	opt callstack 25
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;pump.c: 25: static int8_t c;;pump.c: 27: if (pump.ticks > 0)
  2048                           
  2049                           ; BSR set to: 0
  2050                           
  2051                           ;incstack = 0
  2052  001EA8  51B5               	movf	_pump& (0+255),w,b
  2053  001EAA  11B6               	iorwf	(_pump+1)& (0+255),w,b
  2054  001EAC  B4D8               	btfsc	status,2,c
  2055  001EAE  0012               	return	
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;pump.c: 28: {;pump.c: 29: if (pump.sm0 == 0)
  2059  001EB0  51B7               	movf	(_pump+2)& (0+255),w,b
  2060  001EB2  A4D8               	btfss	status,2,c
  2061  001EB4  D005               	goto	l3928
  2062                           
  2063                           ; BSR set to: 0
  2064  001EB6  908D               	bcf	3981,0,c	;volatile
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;pump.c: 32: c = 0x0;
  2068  001EB8  0E00               	movlw	0
  2069  001EBA  6FC1               	movwf	pump_job@c& (0+255),b
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;pump.c: 33: pump.sm0++;
  2073  001EBC  2BB7               	incf	(_pump+2)& (0+255),f,b
  2074                           
  2075                           ;pump.c: 34: }
  2076  001EBE  0012               	return	
  2077  001EC0                     l3928:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;pump.c: 35: else if (pump.sm0 == 1)
  2081  001EC0  05B7               	decf	(_pump+2)& (0+255),w,b
  2082  001EC2  A4D8               	btfss	status,2,c
  2083  001EC4  D00C               	goto	l3940
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;pump.c: 36: {;pump.c: 37: if (smain.f.f1ms)
  2087  001EC6  A1B8               	btfss	_smain& (0+255),0,b	;volatile
  2088  001EC8  0012               	return	
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;pump.c: 38: {;pump.c: 39: if (++c == 50)
  2092  001ECA  2BC1               	incf	pump_job@c& (0+255),f,b
  2093  001ECC  0E32               	movlw	50
  2094  001ECE  19C1               	xorwf	pump_job@c& (0+255),w,b
  2095  001ED0  A4D8               	btfss	status,2,c
  2096  001ED2  0012               	return	
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;pump.c: 40: {;pump.c: 41: c=0x00;
  2100  001ED4  0E00               	movlw	0
  2101  001ED6  6FC1               	movwf	pump_job@c& (0+255),b
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;pump.c: 42: pump.sm0++;
  2105  001ED8  2BB7               	incf	(_pump+2)& (0+255),f,b
  2106                           
  2107                           ; BSR set to: 0
  2108  001EDA  808D               	bsf	3981,0,c	;volatile
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;pump.c: 44: };pump.c: 45: };pump.c: 46: }
  2112  001EDC  0012               	return	
  2113  001EDE                     l3940:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;pump.c: 47: else if (pump.sm0 == 2)
  2117  001EDE  0E02               	movlw	2
  2118  001EE0  19B7               	xorwf	(_pump+2)& (0+255),w,b
  2119  001EE2  A4D8               	btfss	status,2,c
  2120  001EE4  0012               	return	
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;pump.c: 48: {;pump.c: 49: if (smain.f.f1ms)
  2124  001EE6  A1B8               	btfss	_smain& (0+255),0,b	;volatile
  2125  001EE8  0012               	return	
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;pump.c: 50: {;pump.c: 51: if (++c == 50)
  2129  001EEA  2BC1               	incf	pump_job@c& (0+255),f,b
  2130  001EEC  0E32               	movlw	50
  2131  001EEE  19C1               	xorwf	pump_job@c& (0+255),w,b
  2132  001EF0  A4D8               	btfss	status,2,c
  2133  001EF2  0012               	return	
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;pump.c: 52: {;pump.c: 53: c=0x00;
  2137  001EF4  0E00               	movlw	0
  2138  001EF6  6FC1               	movwf	pump_job@c& (0+255),b
  2139                           
  2140                           ;pump.c: 54: pump.sm0 = 0x00;
  2141  001EF8  0E00               	movlw	0
  2142  001EFA  6FB7               	movwf	(_pump+2)& (0+255),b
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;pump.c: 56: if (--pump.ticks == 0)
  2146  001EFC  07B5               	decf	_pump& (0+255),f,b
  2147  001EFE  A0D8               	btfss	status,0,c
  2148  001F00  07B6               	decf	(_pump+1)& (0+255),f,b
  2149  001F02  51B5               	movf	_pump& (0+255),w,b
  2150  001F04  11B6               	iorwf	(_pump+1)& (0+255),w,b
  2151  001F06  B4D8               	btfsc	status,2,c
  2152  001F08  0012               	return	
  2153  001F0A  0012               	return	
  2154  001F0C                     __end_of_pump_job:
  2155                           	opt callstack 0
  2156                           
  2157 ;; *************** function _pulsonic_init *****************
  2158 ;; Defined at:
  2159 ;;		line 8 in file "pulsonic.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  i               1   10[COMRAM] char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 3F/1
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2176 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:        1 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    5
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text11
  2188  001F0C                     __ptext11:
  2189                           	opt callstack 0
  2190  001F0C                     _pulsonic_init:
  2191                           	opt callstack 25
  2192                           
  2193                           ;pulsonic.c: 10: int8_t i;;pulsonic.c: 11: pulsonic.dist_total_time = 60;
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;incstack = 0
  2197  001F0C  0E00               	movlw	0
  2198  001F0E  0101               	movlb	1	; () banked
  2199  001F10  6F03               	movwf	(_pulsonic+3)& (0+255),b
  2200  001F12  0E3C               	movlw	60
  2201  001F14  6F02               	movwf	(_pulsonic+2)& (0+255),b
  2202                           
  2203                           ;pulsonic.c: 15: for (i=0; i< 8; i++)
  2204  001F16  0E00               	movlw	0
  2205  001F18  6E0B               	movwf	pulsonic_init@i,c
  2206  001F1A                     l3804:
  2207                           
  2208                           ;pulsonic.c: 16: {;pulsonic.c: 17: pulsonic.nozzle[i].Q_mlh = 12.0;
  2209  001F1A  500B               	movf	pulsonic_init@i,w,c
  2210  001F1C  0D06               	mullw	6
  2211  001F1E  0E06               	movlw	low (_pulsonic+6)
  2212  001F20  24F3               	addwf	prodl,w,c
  2213  001F22  6ED9               	movwf	fsr2l,c
  2214  001F24  0E01               	movlw	high (_pulsonic+6)
  2215  001F26  20F4               	addwfc	prodh,w,c
  2216  001F28  6EDA               	movwf	fsr2h,c
  2217  001F2A  0E00               	movlw	0
  2218  001F2C  6EDE               	movwf	postinc2,c
  2219  001F2E  0E40               	movlw	64
  2220  001F30  6EDE               	movwf	postinc2,c
  2221  001F32  0E41               	movlw	65
  2222  001F34  6EDE               	movwf	postinc2,c
  2223  001F36  2A0B               	incf	pulsonic_init@i,f,c
  2224  001F38  500B               	movf	pulsonic_init@i,w,c
  2225  001F3A  0A80               	xorlw	128
  2226  001F3C  0F78               	addlw	-136
  2227  001F3E  A0D8               	btfss	status,0,c
  2228  001F40  D7EC               	goto	l3804
  2229                           
  2230                           ;pulsonic.c: 18: };pulsonic.c: 19: pulsonic.oil.viscosity = OIL_VISCOSITY[0];
  2231  001F42  0E0B               	movlw	low _OIL_VISCOSITY
  2232  001F44  6EF6               	movwf	tblptrl,c
  2233  001F46                     	if	1	;There is more than 1 active tblptr byte
  2234  001F46  0E08               	movlw	high _OIL_VISCOSITY
  2235  001F48  6EF7               	movwf	tblptrh,c
  2236  001F4A                     	endif
  2237  001F4A                     	if	0	;There are less than 3 active tblptr bytes
  2238  001F4A                     	endif
  2239  001F4A  0008               	tblrd		*
  2240  001F4C  CFF5 F136          	movff	tablat,_pulsonic+54
  2241                           
  2242                           ;pulsonic.c: 21: pulsonic.nozzle[3].Q_mlh = 0;
  2243  001F50  0E00               	movlw	0
  2244  001F52  0101               	movlb	1	; () banked
  2245  001F54  6F18               	movwf	(_pulsonic+24)& (0+255),b
  2246  001F56  0E00               	movlw	0
  2247  001F58  6F19               	movwf	(_pulsonic+25)& (0+255),b
  2248  001F5A  0E00               	movlw	0
  2249  001F5C  6F1A               	movwf	(_pulsonic+26)& (0+255),b
  2250                           
  2251                           ; BSR set to: 1
  2252                           ;pulsonic.c: 22: pulsonic.nozzle[5].Q_mlh = 0;
  2253  001F5E  0E00               	movlw	0
  2254  001F60  6F24               	movwf	(_pulsonic+36)& (0+255),b
  2255  001F62  0E00               	movlw	0
  2256  001F64  6F25               	movwf	(_pulsonic+37)& (0+255),b
  2257  001F66  0E00               	movlw	0
  2258  001F68  6F26               	movwf	(_pulsonic+38)& (0+255),b
  2259                           
  2260                           ; BSR set to: 1
  2261  001F6A  0012               	return		;funcret
  2262  001F6C                     __end_of_pulsonic_init:
  2263                           	opt callstack 0
  2264                           
  2265 ;; *************** function _mpap_sych *****************
  2266 ;; Defined at:
  2267 ;;		line 160 in file "mpap.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 3F/0
  2278 ;;		On exit  : 3F/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2281 ;;      Params:         0       0       0       0       0       0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2284 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    5
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text12
  2296  001BE4                     __ptext12:
  2297                           	opt callstack 0
  2298  001BE4                     _mpap_sych:
  2299                           	opt callstack 25
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;mpap.c: 162: static int8_t sm0;;mpap.c: 163: static int8_t c;;mpap.c: 164: if (sm0 == 0
      +                          )
  2303                           
  2304                           ; BSR set to: 1
  2305                           ;incstack = 0
  2306  001BE4  51C3               	movf	mpap_sych@sm0& (0+255),w,b
  2307  001BE6  A4D8               	btfss	status,2,c
  2308  001BE8  D010               	goto	l3966
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;mpap.c: 165: {;mpap.c: 166: if ((mpap.mode == MPAP_NORMAL_MODE) || (mpap.mode == MPAP_H
      +                          OMMING_MODE))
  2312  001BEA  0E03               	movlw	3
  2313  001BEC  184E               	xorwf	_mpap+7,w,c	;volatile
  2314  001BEE  B4D8               	btfsc	status,2,c
  2315  001BF0  D004               	goto	u4180
  2316                           
  2317                           ; BSR set to: 0
  2318  001BF2  0E02               	movlw	2
  2319  001BF4  184E               	xorwf	_mpap+7,w,c	;volatile
  2320  001BF6  A4D8               	btfss	status,2,c
  2321  001BF8  D002               	goto	l3962
  2322  001BFA                     u4180:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;mpap.c: 167: {;mpap.c: 168: sm0++;
  2326  001BFA  2BC3               	incf	mpap_sych@sm0& (0+255),f,b
  2327                           
  2328                           ;mpap.c: 169: }
  2329  001BFC  0012               	return	
  2330  001BFE                     l3962:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;mpap.c: 170: else if (mpap.mode == MPAP_STALL_MODE)
  2334  001BFE  044E               	decf	_mpap+7,w,c	;volatile
  2335  001C00  A4D8               	btfss	status,2,c
  2336  001C02  0012               	return	
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;mpap.c: 171: {;mpap.c: 172: sm0 = 2;
  2340  001C04  0E02               	movlw	2
  2341  001C06  6FC3               	movwf	mpap_sych@sm0& (0+255),b
  2342  001C08  0012               	return	
  2343  001C0A                     l3966:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;mpap.c: 175: else if (sm0 == 1)
  2347  001C0A  05C3               	decf	mpap_sych@sm0& (0+255),w,b
  2348  001C0C  A4D8               	btfss	status,2,c
  2349  001C0E  D013               	goto	l3982
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;mpap.c: 176: {;mpap.c: 177: if (mpap.numSteps_tomove == 0)
  2353  001C10  504B               	movf	_mpap+4,w,c	;volatile
  2354  001C12  104C               	iorwf	_mpap+5,w,c	;volatile
  2355  001C14  A4D8               	btfss	status,2,c
  2356  001C16  0012               	return	
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;mpap.c: 178: {;mpap.c: 179: if (mpap.mode == MPAP_HOMMING_MODE)
  2360  001C18  0E02               	movlw	2
  2361  001C1A  184E               	xorwf	_mpap+7,w,c	;volatile
  2362  001C1C  A4D8               	btfss	status,2,c
  2363  001C1E  D005               	goto	l3976
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;mpap.c: 180: {;mpap.c: 181: if ( pulsonic.errors.flag.mpap_home_sensor == 1)
  2367  001C20  0101               	movlb	1	; () banked
  2368  001C22  A13A               	btfss	(_pulsonic+58)& (0+255),0,b
  2369  001C24  D003               	goto	l3978
  2370                           
  2371                           ; BSR set to: 1
  2372                           ;mpap.c: 182: {;mpap.c: 183: pulsonic.errors.flag.mpap_home_sensor = 0;
  2373  001C26  913A               	bcf	(_pulsonic+58)& (0+255),0,b
  2374  001C28  D001               	goto	l3978
  2375  001C2A                     l3976:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;mpap.c: 187: else if (mpap.mode == MPAP_NORMAL_MODE)
  2379  001C2A  504E               	movf	_mpap+7,w,c	;volatile
  2380  001C2C                     l3978:
  2381                           
  2382                           ;mpap.c: 189: };mpap.c: 190: sm0++;
  2383  001C2C  0100               	movlb	0	; () banked
  2384  001C2E  2BC3               	incf	mpap_sych@sm0& (0+255),f,b
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;mpap.c: 191: c = 0;
  2388  001C30  0E00               	movlw	0
  2389  001C32  6FC2               	movwf	mpap_sych@c& (0+255),b
  2390  001C34  0012               	return	
  2391  001C36                     l3982:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;mpap.c: 194: else if (sm0 == 2)
  2395  001C36  0E02               	movlw	2
  2396  001C38  19C3               	xorwf	mpap_sych@sm0& (0+255),w,b
  2397  001C3A  A4D8               	btfss	status,2,c
  2398  001C3C  D00A               	goto	l3992
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;mpap.c: 195: {;mpap.c: 196: if (smain.f.f1ms)
  2402  001C3E  A1B8               	btfss	_smain& (0+255),0,b	;volatile
  2403  001C40  0012               	return	
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;mpap.c: 197: {;mpap.c: 198: if (++c == 10)
  2407  001C42  2BC2               	incf	mpap_sych@c& (0+255),f,b
  2408  001C44  0E0A               	movlw	10
  2409  001C46  19C2               	xorwf	mpap_sych@c& (0+255),w,b
  2410  001C48  A4D8               	btfss	status,2,c
  2411  001C4A  0012               	return	
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;mpap.c: 199: {;mpap.c: 201: mpap.mode = MPAP_STALL_MODE;
  2415  001C4C  0E01               	movlw	1
  2416  001C4E  6E4E               	movwf	_mpap+7,c	;volatile
  2417  001C50  D7D4               	goto	u4180
  2418  001C52                     l3992:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;mpap.c: 206: else if (sm0 == 3)
  2422  001C52  0E03               	movlw	3
  2423  001C54  19C3               	xorwf	mpap_sych@sm0& (0+255),w,b
  2424  001C56  A4D8               	btfss	status,2,c
  2425  001C58  0012               	return	
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;mpap.c: 207: {;mpap.c: 208: if (mpap.mode == MPAP_IDLE_MODE)
  2429  001C5A  504E               	movf	_mpap+7,w,c	;volatile
  2430  001C5C  A4D8               	btfss	status,2,c
  2431  001C5E  0012               	return	
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;mpap.c: 209: {;mpap.c: 211: sm0 = 0;
  2435  001C60  0E00               	movlw	0
  2436  001C62  6FC3               	movwf	mpap_sych@sm0& (0+255),b
  2437                           
  2438                           ; BSR set to: 0
  2439  001C64  0012               	return		;funcret
  2440  001C66                     __end_of_mpap_sych:
  2441                           	opt callstack 0
  2442                           
  2443 ;; *************** function _ikb_job *****************
  2444 ;; Defined at:
  2445 ;;		line 413 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 3F/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    8
  2466 ;; This function calls:
  2467 ;;		_ikey_parsing
  2468 ;;		_ikey_scan
  2469 ;; This function is called by:
  2470 ;;		_main
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text13
  2475  002556                     __ptext13:
  2476                           	opt callstack 0
  2477  002556                     _ikb_job:
  2478                           	opt callstack 22
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;ikb.c: 415: ikey_scan();
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;incstack = 0
  2485  002556  EC03  F009         	call	_ikey_scan	;wreg free
  2486                           
  2487                           ;ikb.c: 416: ikey_parsing();
  2488  00255A  EC09  F004         	call	_ikey_parsing	;wreg free
  2489  00255E  0012               	return		;funcret
  2490  002560                     __end_of_ikb_job:
  2491                           	opt callstack 0
  2492                           
  2493 ;; *************** function _ikey_scan *****************
  2494 ;; Defined at:
  2495 ;;		line 448 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  k               1   11[COMRAM] char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 3F/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0
  2510 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2511 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2512 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2513 ;;Total ram usage:        2 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    6
  2516 ;; This function calls:
  2517 ;;		_keyRead_pin_key0
  2518 ;;		_keyRead_pin_key1
  2519 ;;		_keyRead_pin_key2
  2520 ;;		_keyRead_pin_key3
  2521 ;;		_keyRead_pin_key4
  2522 ;; This function is called by:
  2523 ;;		_ikb_job
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text14
  2528  001206                     __ptext14:
  2529                           	opt callstack 0
  2530  001206                     _ikey_scan:
  2531                           	opt callstack 23
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;ikb.c: 450: int8_t k = 5-1;
  2535                           
  2536                           ;incstack = 0
  2537  001206  0E04               	movlw	4
  2538  001208  6E0C               	movwf	ikey_scan@k,c
  2539  00120A                     l3408:
  2540                           
  2541                           ;ikb.c: 452: {;ikb.c: 453: if (key[k].sm0 == 0)
  2542  00120A  500C               	movf	ikey_scan@k,w,c
  2543  00120C  0D10               	mullw	16
  2544  00120E  50F3               	movf	prodl,w,c
  2545  001210  0F64               	addlw	low (_key+4)
  2546  001212  6ED9               	movwf	fsr2l,c
  2547  001214  6ADA               	clrf	fsr2h,c
  2548  001216  50DF               	movf	indf2,w,c
  2549  001218  A4D8               	btfss	status,2,c
  2550  00121A  D016               	goto	l3414
  2551                           
  2552                           ;ikb.c: 454: {;ikb.c: 455: if (key[k].keyRead() == 0)
  2553  00121C  500C               	movf	ikey_scan@k,w,c
  2554  00121E  0D10               	mullw	16
  2555  001220  50F3               	movf	prodl,w,c
  2556  001222  0F60               	addlw	low _key
  2557  001224  6ED9               	movwf	fsr2l,c
  2558  001226  6ADA               	clrf	fsr2h,c
  2559  001228  D801               	call	u3028
  2560  00122A  D00A               	goto	u3029
  2561  00122C                     u3028:
  2562  00122C  0005               	push	
  2563  00122E  6EFA               	movwf	pclath,c
  2564  001230  50DE               	movf	postinc2,w,c
  2565  001232  6EFD               	movwf	tosl,c
  2566  001234  50DE               	movf	postinc2,w,c
  2567  001236  6EFE               	movwf	tosh,c
  2568  001238  50F8               	movf	tblptru,w,c
  2569  00123A  6EFF               	movwf	tosu,c
  2570  00123C  50FA               	movf	pclath,w,c
  2571  00123E  0012               	return		;indir
  2572  001240                     u3029:
  2573  001240  0900               	iorlw	0
  2574  001242  A4D8               	btfss	status,2,c
  2575  001244  D0AC               	goto	l3444
  2576  001246  D041               	goto	L1
  2577  001248                     l3414:
  2578                           
  2579                           ;ikb.c: 460: else if (key[k].sm0 == 1)
  2580  001248  500C               	movf	ikey_scan@k,w,c
  2581  00124A  0D10               	mullw	16
  2582  00124C  50F3               	movf	prodl,w,c
  2583  00124E  0F64               	addlw	low (_key+4)
  2584  001250  6ED9               	movwf	fsr2l,c
  2585  001252  6ADA               	clrf	fsr2h,c
  2586  001254  04DE               	decf	postinc2,w,c
  2587  001256  A4D8               	btfss	status,2,c
  2588  001258  D040               	goto	l3426
  2589                           
  2590                           ;ikb.c: 461: {;ikb.c: 462: if (++key[k].counter0 == 4)
  2591  00125A  500C               	movf	ikey_scan@k,w,c
  2592  00125C  0D10               	mullw	16
  2593  00125E  50F3               	movf	prodl,w,c
  2594  001260  0F65               	addlw	low (_key+5)
  2595  001262  6ED9               	movwf	fsr2l,c
  2596  001264  6ADA               	clrf	fsr2h,c
  2597  001266  2ADF               	incf	indf2,f,c
  2598  001268  0E04               	movlw	4
  2599  00126A  18DE               	xorwf	postinc2,w,c
  2600  00126C  A4D8               	btfss	status,2,c
  2601  00126E  D097               	goto	l3444
  2602                           
  2603                           ;ikb.c: 463: {;ikb.c: 464: key[k].counter0 = 0x00;
  2604  001270  500C               	movf	ikey_scan@k,w,c
  2605  001272  0D10               	mullw	16
  2606  001274  50F3               	movf	prodl,w,c
  2607  001276  0F65               	addlw	low (_key+5)
  2608  001278  6ED9               	movwf	fsr2l,c
  2609  00127A  6ADA               	clrf	fsr2h,c
  2610  00127C  0E00               	movlw	0
  2611  00127E  6EDF               	movwf	indf2,c
  2612                           
  2613                           ;ikb.c: 466: if (key[k].keyRead() != 0)
  2614  001280  500C               	movf	ikey_scan@k,w,c
  2615  001282  0D10               	mullw	16
  2616  001284  50F3               	movf	prodl,w,c
  2617  001286  0F60               	addlw	low _key
  2618  001288  6ED9               	movwf	fsr2l,c
  2619  00128A  6ADA               	clrf	fsr2h,c
  2620  00128C  D801               	call	u3068
  2621  00128E  D00A               	goto	u3069
  2622  001290                     u3068:
  2623  001290  0005               	push	
  2624  001292  6EFA               	movwf	pclath,c
  2625  001294  50DE               	movf	postinc2,w,c
  2626  001296  6EFD               	movwf	tosl,c
  2627  001298  50DE               	movf	postinc2,w,c
  2628  00129A  6EFE               	movwf	tosh,c
  2629  00129C  50F8               	movf	tblptru,w,c
  2630  00129E  6EFF               	movwf	tosu,c
  2631  0012A0  50FA               	movf	pclath,w,c
  2632  0012A2  0012               	return		;indir
  2633  0012A4                     u3069:
  2634  0012A4  0900               	iorlw	0
  2635  0012A6  B4D8               	btfsc	status,2,c
  2636  0012A8  D008               	goto	l3424
  2637  0012AA                     u3070:
  2638                           
  2639                           ;ikb.c: 467: {;ikb.c: 468: key[k].sm0--;
  2640  0012AA  500C               	movf	ikey_scan@k,w,c
  2641  0012AC  0D10               	mullw	16
  2642  0012AE  50F3               	movf	prodl,w,c
  2643  0012B0  0F64               	addlw	low (_key+4)
  2644  0012B2  6ED9               	movwf	fsr2l,c
  2645  0012B4  6ADA               	clrf	fsr2h,c
  2646  0012B6  06DF               	decf	indf2,f,c
  2647                           
  2648                           ;ikb.c: 469: }
  2649  0012B8  D072               	goto	l3444
  2650  0012BA                     l3424:
  2651                           
  2652                           ;ikb.c: 470: else;ikb.c: 471: {;ikb.c: 472: key[k].bf.state = 1;
  2653  0012BA  500C               	movf	ikey_scan@k,w,c
  2654  0012BC  0D10               	mullw	16
  2655  0012BE  50F3               	movf	prodl,w,c
  2656  0012C0  0F6A               	addlw	low (_key+10)
  2657  0012C2  6ED9               	movwf	fsr2l,c
  2658  0012C4  6ADA               	clrf	fsr2h,c
  2659  0012C6  0100               	movlb	0	; () banked
  2660  0012C8  80DF               	bsf	indf2,0,c
  2661  0012CA                     L1:
  2662                           
  2663                           ;ikb.c: 473: key[k].sm0++;
  2664  0012CA  500C               	movf	ikey_scan@k,w,c
  2665  0012CC  0D10               	mullw	16
  2666  0012CE  50F3               	movf	prodl,w,c
  2667  0012D0  0F64               	addlw	low (_key+4)
  2668  0012D2  6ED9               	movwf	fsr2l,c
  2669  0012D4  6ADA               	clrf	fsr2h,c
  2670  0012D6  2ADF               	incf	indf2,f,c
  2671  0012D8  D062               	goto	l3444
  2672  0012DA                     l3426:
  2673                           
  2674                           ;ikb.c: 477: else if (key[k].sm0 == 2)
  2675  0012DA  500C               	movf	ikey_scan@k,w,c
  2676  0012DC  0D10               	mullw	16
  2677  0012DE  50F3               	movf	prodl,w,c
  2678  0012E0  0F64               	addlw	low (_key+4)
  2679  0012E2  6ED9               	movwf	fsr2l,c
  2680  0012E4  6ADA               	clrf	fsr2h,c
  2681  0012E6  0E02               	movlw	2
  2682  0012E8  18DE               	xorwf	postinc2,w,c
  2683  0012EA  A4D8               	btfss	status,2,c
  2684  0012EC  D016               	goto	l3432
  2685                           
  2686                           ;ikb.c: 478: {;ikb.c: 479: if (key[k].keyRead() == 1)
  2687  0012EE  500C               	movf	ikey_scan@k,w,c
  2688  0012F0  0D10               	mullw	16
  2689  0012F2  50F3               	movf	prodl,w,c
  2690  0012F4  0F60               	addlw	low _key
  2691  0012F6  6ED9               	movwf	fsr2l,c
  2692  0012F8  6ADA               	clrf	fsr2h,c
  2693  0012FA  D801               	call	u3098
  2694  0012FC  D00A               	goto	u3099
  2695  0012FE                     u3098:
  2696  0012FE  0005               	push	
  2697  001300  6EFA               	movwf	pclath,c
  2698  001302  50DE               	movf	postinc2,w,c
  2699  001304  6EFD               	movwf	tosl,c
  2700  001306  50DE               	movf	postinc2,w,c
  2701  001308  6EFE               	movwf	tosh,c
  2702  00130A  50F8               	movf	tblptru,w,c
  2703  00130C  6EFF               	movwf	tosu,c
  2704  00130E  50FA               	movf	pclath,w,c
  2705  001310  0012               	return		;indir
  2706  001312                     u3099:
  2707  001312  06E8               	decf	wreg,f,c
  2708  001314  B4D8               	btfsc	status,2,c
  2709  001316  D7D9               	goto	L1
  2710  001318  D042               	goto	l3444
  2711  00131A                     l3432:
  2712                           
  2713                           ;ikb.c: 482: else if (key[k].sm0 == 3)
  2714  00131A  500C               	movf	ikey_scan@k,w,c
  2715  00131C  0D10               	mullw	16
  2716  00131E  50F3               	movf	prodl,w,c
  2717  001320  0F64               	addlw	low (_key+4)
  2718  001322  6ED9               	movwf	fsr2l,c
  2719  001324  6ADA               	clrf	fsr2h,c
  2720  001326  0E03               	movlw	3
  2721  001328  18DE               	xorwf	postinc2,w,c
  2722  00132A  A4D8               	btfss	status,2,c
  2723  00132C  D038               	goto	l3444
  2724                           
  2725                           ;ikb.c: 483: {;ikb.c: 484: if (++key[k].counter0 == 4)
  2726  00132E  500C               	movf	ikey_scan@k,w,c
  2727  001330  0D10               	mullw	16
  2728  001332  50F3               	movf	prodl,w,c
  2729  001334  0F65               	addlw	low (_key+5)
  2730  001336  6ED9               	movwf	fsr2l,c
  2731  001338  6ADA               	clrf	fsr2h,c
  2732  00133A  2ADF               	incf	indf2,f,c
  2733  00133C  0E04               	movlw	4
  2734  00133E  18DE               	xorwf	postinc2,w,c
  2735  001340  A4D8               	btfss	status,2,c
  2736  001342  D02D               	goto	l3444
  2737                           
  2738                           ;ikb.c: 485: {;ikb.c: 486: key[k].counter0 = 0x00;
  2739  001344  500C               	movf	ikey_scan@k,w,c
  2740  001346  0D10               	mullw	16
  2741  001348  50F3               	movf	prodl,w,c
  2742  00134A  0F65               	addlw	low (_key+5)
  2743  00134C  6ED9               	movwf	fsr2l,c
  2744  00134E  6ADA               	clrf	fsr2h,c
  2745  001350  0E00               	movlw	0
  2746  001352  6EDF               	movwf	indf2,c
  2747                           
  2748                           ;ikb.c: 488: if (key[k].keyRead() != 1)
  2749  001354  500C               	movf	ikey_scan@k,w,c
  2750  001356  0D10               	mullw	16
  2751  001358  50F3               	movf	prodl,w,c
  2752  00135A  0F60               	addlw	low _key
  2753  00135C  6ED9               	movwf	fsr2l,c
  2754  00135E  6ADA               	clrf	fsr2h,c
  2755  001360  D801               	call	u3138
  2756  001362  D00A               	goto	u3139
  2757  001364                     u3138:
  2758  001364  0005               	push	
  2759  001366  6EFA               	movwf	pclath,c
  2760  001368  50DE               	movf	postinc2,w,c
  2761  00136A  6EFD               	movwf	tosl,c
  2762  00136C  50DE               	movf	postinc2,w,c
  2763  00136E  6EFE               	movwf	tosh,c
  2764  001370  50F8               	movf	tblptru,w,c
  2765  001372  6EFF               	movwf	tosu,c
  2766  001374  50FA               	movf	pclath,w,c
  2767  001376  0012               	return		;indir
  2768  001378                     u3139:
  2769  001378  06E8               	decf	wreg,f,c
  2770  00137A  A4D8               	btfss	status,2,c
  2771  00137C  D796               	goto	u3070
  2772                           
  2773                           ;ikb.c: 492: else;ikb.c: 493: {;ikb.c: 494: key[k].bf.state = 0;
  2774  00137E  500C               	movf	ikey_scan@k,w,c
  2775  001380  0D10               	mullw	16
  2776  001382  50F3               	movf	prodl,w,c
  2777  001384  0F6A               	addlw	low (_key+10)
  2778  001386  6ED9               	movwf	fsr2l,c
  2779  001388  6ADA               	clrf	fsr2h,c
  2780  00138A  0100               	movlb	0	; () banked
  2781  00138C  90DF               	bcf	indf2,0,c
  2782                           
  2783                           ;ikb.c: 495: key[k].sm0 = 0x00;
  2784  00138E  500C               	movf	ikey_scan@k,w,c
  2785  001390  0D10               	mullw	16
  2786  001392  50F3               	movf	prodl,w,c
  2787  001394  0F64               	addlw	low (_key+4)
  2788  001396  6ED9               	movwf	fsr2l,c
  2789  001398  6ADA               	clrf	fsr2h,c
  2790  00139A  0E00               	movlw	0
  2791  00139C  6EDF               	movwf	indf2,c
  2792  00139E                     l3444:
  2793                           
  2794                           ;ikb.c: 496: };ikb.c: 497: };ikb.c: 498: };ikb.c: 499: }while (--k >= 0);
  2795  00139E  060C               	decf	ikey_scan@k,f,c
  2796  0013A0  BE0C               	btfsc	ikey_scan@k,7,c
  2797  0013A2  0012               	return	
  2798  0013A4  D732               	goto	l3408
  2799  0013A6                     __end_of_ikey_scan:
  2800                           	opt callstack 0
  2801                           
  2802 ;; *************** function _keyRead_pin_key3 *****************
  2803 ;; Defined at:
  2804 ;;		line 205 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      unsigned char 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    5
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_ikb_init
  2829 ;;		_ikey_scan
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text15
  2834  0025C0                     __ptext15:
  2835                           	opt callstack 0
  2836  0025C0                     _keyRead_pin_key3:
  2837                           	opt callstack 23
  2838                           
  2839                           ;ikb.c: 207: return ((PORTC & (1<<7))>>7);
  2840                           
  2841                           ;incstack = 0
  2842  0025C0  4482               	rlncf	3970,w,c	;volatile
  2843  0025C2  0B01               	andlw	1
  2844  0025C4  0012               	return		;funcret
  2845  0025C6                     __end_of_keyRead_pin_key3:
  2846                           	opt callstack 0
  2847                           
  2848 ;; *************** function _keyRead_pin_key2 *****************
  2849 ;; Defined at:
  2850 ;;		line 201 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      unsigned char 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    5
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_ikb_init
  2875 ;;		_ikey_scan
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text16
  2880  002560                     __ptext16:
  2881                           	opt callstack 0
  2882  002560                     _keyRead_pin_key2:
  2883                           	opt callstack 23
  2884                           
  2885                           ;ikb.c: 203: return ((PORTC & (1<<6))>>6);
  2886                           
  2887                           ;incstack = 0
  2888  002560  4482               	rlncf	3970,w,c	;volatile
  2889  002562  46E8               	rlncf	wreg,f,c
  2890  002564  0B03               	andlw	3
  2891  002566  0B01               	andlw	1
  2892  002568  0012               	return		;funcret
  2893  00256A                     __end_of_keyRead_pin_key2:
  2894                           	opt callstack 0
  2895                           
  2896 ;; *************** function _keyRead_pin_key1 *****************
  2897 ;; Defined at:
  2898 ;;		line 197 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      unsigned char 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    5
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_ikb_init
  2923 ;;		_ikey_scan
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text17
  2928  00256A                     __ptext17:
  2929                           	opt callstack 0
  2930  00256A                     _keyRead_pin_key1:
  2931                           	opt callstack 23
  2932                           
  2933                           ;ikb.c: 199: return ((PORTC & (1<<5))>>5);
  2934                           
  2935                           ;incstack = 0
  2936  00256A  3882               	swapf	3970,w,c	;volatile
  2937  00256C  42E8               	rrncf	wreg,f,c
  2938  00256E  0B07               	andlw	7
  2939  002570  0B01               	andlw	1
  2940  002572  0012               	return		;funcret
  2941  002574                     __end_of_keyRead_pin_key1:
  2942                           	opt callstack 0
  2943                           
  2944 ;; *************** function _keyRead_pin_key0 *****************
  2945 ;; Defined at:
  2946 ;;		line 193 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      unsigned char 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    5
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_ikb_init
  2971 ;;		_ikey_scan
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text18
  2976  0025B0                     __ptext18:
  2977                           	opt callstack 0
  2978  0025B0                     _keyRead_pin_key0:
  2979                           	opt callstack 23
  2980                           
  2981                           ;ikb.c: 195: return ((PORTC & (1<<4))>>4);
  2982                           
  2983                           ;incstack = 0
  2984  0025B0  3882               	swapf	3970,w,c	;volatile
  2985  0025B2  0B0F               	andlw	15
  2986  0025B4  0B01               	andlw	1
  2987  0025B6  0012               	return		;funcret
  2988  0025B8                     __end_of_keyRead_pin_key0:
  2989                           	opt callstack 0
  2990                           
  2991 ;; *************** function _keyRead_pin_key4 *****************
  2992 ;; Defined at:
  2993 ;;		line 209 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      unsigned char 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    5
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_ikb_init
  3018 ;;		_ikey_scan
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text19
  3023  0025B8                     __ptext19:
  3024                           	opt callstack 0
  3025  0025B8                     _keyRead_pin_key4:
  3026                           	opt callstack 23
  3027                           
  3028                           ;ikb.c: 211: return ((PORTD & (1<<4))>>4);
  3029                           
  3030                           ;incstack = 0
  3031  0025B8  3883               	swapf	3971,w,c	;volatile
  3032  0025BA  0B0F               	andlw	15
  3033  0025BC  0B01               	andlw	1
  3034  0025BE  0012               	return		;funcret
  3035  0025C0                     __end_of_keyRead_pin_key4:
  3036                           	opt callstack 0
  3037                           
  3038 ;; *************** function _ikey_parsing *****************
  3039 ;; Defined at:
  3040 ;;		line 544 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  k               1   34[COMRAM] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0
  3055 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3056 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3057 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3058 ;;Total ram usage:        5 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    7
  3061 ;; This function calls:
  3062 ;;		___ftge
  3063 ;;		___lwtoft
  3064 ;;		_ikey_is_accessible
  3065 ;; This function is called by:
  3066 ;;		_ikb_job
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text20
  3071  000812                     __ptext20:
  3072                           	opt callstack 0
  3073  000812                     _ikey_parsing:
  3074                           	opt callstack 22
  3075                           
  3076                           ;ikb.c: 546: uint8_t k;;ikb.c: 548: for (k=0; k < 5; k++)
  3077                           
  3078                           ;incstack = 0
  3079  000812  0E00               	movlw	0
  3080  000814  6E23               	movwf	ikey_parsing@k,c
  3081  000816                     l4552:
  3082                           
  3083                           ;ikb.c: 549: {;ikb.c: 550: if ( key[k].sm1 == (0) )
  3084  000816  5023               	movf	ikey_parsing@k,w,c
  3085  000818  0D10               	mullw	16
  3086  00081A  50F3               	movf	prodl,w,c
  3087  00081C  0F66               	addlw	low (_key+6)
  3088  00081E  6ED9               	movwf	fsr2l,c
  3089  000820  6ADA               	clrf	fsr2h,c
  3090  000822  50DF               	movf	indf2,w,c
  3091  000824  A4D8               	btfss	status,2,c
  3092  000826  D08B               	goto	l284
  3093                           
  3094                           ;ikb.c: 551: {;ikb.c: 552: if ( ikey_is_accessible(k) )
  3095  000828  5023               	movf	ikey_parsing@k,w,c
  3096  00082A  EC3A  F010         	call	_ikey_is_accessible
  3097  00082E  0900               	iorlw	0
  3098  000830  B4D8               	btfsc	status,2,c
  3099  000832  D085               	goto	l284
  3100                           
  3101                           ;ikb.c: 553: {;ikb.c: 554: if (key[k].bf.state == 1)
  3102  000834  5023               	movf	ikey_parsing@k,w,c
  3103  000836  0D10               	mullw	16
  3104  000838  50F3               	movf	prodl,w,c
  3105  00083A  0F6A               	addlw	low (_key+10)
  3106  00083C  6ED9               	movwf	fsr2l,c
  3107  00083E  6ADA               	clrf	fsr2h,c
  3108  000840  0100               	movlb	0	; () banked
  3109  000842  A0DF               	btfss	indf2,0,c
  3110  000844  D07C               	goto	l284
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;ikb.c: 555: {;ikb.c: 557: if (key[k].bf.OnKeyPressed)
  3114  000846  5023               	movf	ikey_parsing@k,w,c
  3115  000848  0D10               	mullw	16
  3116  00084A  50F3               	movf	prodl,w,c
  3117  00084C  0F6A               	addlw	low (_key+10)
  3118  00084E  6ED9               	movwf	fsr2l,c
  3119  000850  6ADA               	clrf	fsr2h,c
  3120  000852  A2DF               	btfss	indf2,1,c
  3121  000854  D01F               	goto	l4566
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;ikb.c: 558: {;ikb.c: 559: key[k].bf.ReadyToRead = 1;
  3125  000856  5023               	movf	ikey_parsing@k,w,c
  3126  000858  0D10               	mullw	16
  3127  00085A  50F3               	movf	prodl,w,c
  3128  00085C  0F6A               	addlw	low (_key+10)
  3129  00085E  6ED9               	movwf	fsr2l,c
  3130  000860  6ADA               	clrf	fsr2h,c
  3131  000862  8CDF               	bsf	indf2,6,c
  3132                           
  3133                           ;ikb.c: 561: if (key[k].bf.Reptt)
  3134  000864  5023               	movf	ikey_parsing@k,w,c
  3135  000866  0D10               	mullw	16
  3136  000868  50F3               	movf	prodl,w,c
  3137  00086A  0F6A               	addlw	low (_key+10)
  3138  00086C  6ED9               	movwf	fsr2l,c
  3139  00086E  6ADA               	clrf	fsr2h,c
  3140  000870  AADF               	btfss	indf2,5,c
  3141  000872  D008               	goto	l4564
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;ikb.c: 562: {;ikb.c: 563: key[k].sm1 = (6);
  3145  000874  5023               	movf	ikey_parsing@k,w,c
  3146  000876  0D10               	mullw	16
  3147  000878  50F3               	movf	prodl,w,c
  3148  00087A  0F66               	addlw	low (_key+6)
  3149  00087C  6ED9               	movwf	fsr2l,c
  3150  00087E  6ADA               	clrf	fsr2h,c
  3151  000880  0E06               	movlw	6
  3152  000882  D037               	goto	L2
  3153  000884                     l4564:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;ikb.c: 565: else;ikb.c: 566: {;ikb.c: 567: key[k].sm1 = (1);
  3157  000884  5023               	movf	ikey_parsing@k,w,c
  3158  000886  0D10               	mullw	16
  3159  000888  50F3               	movf	prodl,w,c
  3160  00088A  0F66               	addlw	low (_key+6)
  3161  00088C  6ED9               	movwf	fsr2l,c
  3162  00088E  6ADA               	clrf	fsr2h,c
  3163  000890  0E01               	movlw	1
  3164  000892  D02F               	goto	L2
  3165  000894                     l4566:
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;ikb.c: 570: else if ( key[k].bf.OnKeyPressedAndKeyRelease)
  3169  000894  5023               	movf	ikey_parsing@k,w,c
  3170  000896  0D10               	mullw	16
  3171  000898  50F3               	movf	prodl,w,c
  3172  00089A  0F6A               	addlw	low (_key+10)
  3173  00089C  6ED9               	movwf	fsr2l,c
  3174  00089E  6ADA               	clrf	fsr2h,c
  3175  0008A0  A4DF               	btfss	indf2,2,c
  3176  0008A2  D008               	goto	l4570
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;ikb.c: 571: {;ikb.c: 572: key[k].sm1 = (5);
  3180  0008A4  5023               	movf	ikey_parsing@k,w,c
  3181  0008A6  0D10               	mullw	16
  3182  0008A8  50F3               	movf	prodl,w,c
  3183  0008AA  0F66               	addlw	low (_key+6)
  3184  0008AC  6ED9               	movwf	fsr2l,c
  3185  0008AE  6ADA               	clrf	fsr2h,c
  3186  0008B0  0E05               	movlw	5
  3187  0008B2  D01F               	goto	L2
  3188  0008B4                     l4570:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;ikb.c: 575: else if (key[k].bf.AtTimeExpired)
  3192  0008B4  5023               	movf	ikey_parsing@k,w,c
  3193  0008B6  0D10               	mullw	16
  3194  0008B8  50F3               	movf	prodl,w,c
  3195  0008BA  0F6A               	addlw	low (_key+10)
  3196  0008BC  6ED9               	movwf	fsr2l,c
  3197  0008BE  6ADA               	clrf	fsr2h,c
  3198  0008C0  A6DF               	btfss	indf2,3,c
  3199  0008C2  D008               	goto	l4574
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;ikb.c: 576: {;ikb.c: 577: key[k].sm1 = (3);
  3203  0008C4  5023               	movf	ikey_parsing@k,w,c
  3204  0008C6  0D10               	mullw	16
  3205  0008C8  50F3               	movf	prodl,w,c
  3206  0008CA  0F66               	addlw	low (_key+6)
  3207  0008CC  6ED9               	movwf	fsr2l,c
  3208  0008CE  6ADA               	clrf	fsr2h,c
  3209  0008D0  0E03               	movlw	3
  3210  0008D2  D00F               	goto	L2
  3211  0008D4                     l4574:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;ikb.c: 579: else if (key[k].bf.AtTimeExpired2)
  3215  0008D4  5023               	movf	ikey_parsing@k,w,c
  3216  0008D6  0D10               	mullw	16
  3217  0008D8  50F3               	movf	prodl,w,c
  3218  0008DA  0F6A               	addlw	low (_key+10)
  3219  0008DC  6ED9               	movwf	fsr2l,c
  3220  0008DE  6ADA               	clrf	fsr2h,c
  3221  0008E0  A8DF               	btfss	indf2,4,c
  3222  0008E2  D008               	goto	l290
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;ikb.c: 580: {;ikb.c: 581: key[k].sm1 = (4);
  3226  0008E4  5023               	movf	ikey_parsing@k,w,c
  3227  0008E6  0D10               	mullw	16
  3228  0008E8  50F3               	movf	prodl,w,c
  3229  0008EA  0F66               	addlw	low (_key+6)
  3230  0008EC  6ED9               	movwf	fsr2l,c
  3231  0008EE  6ADA               	clrf	fsr2h,c
  3232  0008F0  0E04               	movlw	4
  3233  0008F2                     L2:
  3234  0008F2  6EDF               	movwf	indf2,c
  3235  0008F4                     l290:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;ikb.c: 582: };ikb.c: 585: key[k].bf.InProcessing = 1;
  3239  0008F4  5023               	movf	ikey_parsing@k,w,c
  3240  0008F6  0D10               	mullw	16
  3241  0008F8  50F3               	movf	prodl,w,c
  3242  0008FA  0F6B               	addlw	low (_key+11)
  3243  0008FC  6ED9               	movwf	fsr2l,c
  3244  0008FE  6ADA               	clrf	fsr2h,c
  3245  000900  82DF               	bsf	indf2,1,c
  3246                           
  3247                           ;ikb.c: 590: if (key[k].num_group_x != 0)
  3248  000902  5023               	movf	ikey_parsing@k,w,c
  3249  000904  0D10               	mullw	16
  3250  000906  50F3               	movf	prodl,w,c
  3251  000908  0F69               	addlw	low (_key+9)
  3252  00090A  6ED9               	movwf	fsr2l,c
  3253  00090C  6ADA               	clrf	fsr2h,c
  3254  00090E  50DF               	movf	indf2,w,c
  3255  000910  B4D8               	btfsc	status,2,c
  3256  000912  D015               	goto	l284
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;ikb.c: 591: {;ikb.c: 592: group_x[ key[k].num_group_x ] = 1;
  3260  000914  5023               	movf	ikey_parsing@k,w,c
  3261  000916  0D10               	mullw	16
  3262  000918  50F3               	movf	prodl,w,c
  3263  00091A  0F69               	addlw	low (_key+9)
  3264  00091C  6ED9               	movwf	fsr2l,c
  3265  00091E  6ADA               	clrf	fsr2h,c
  3266  000920  50DF               	movf	indf2,w,c
  3267  000922  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3268  000924  501F               	movf	??_ikey_parsing,w,c
  3269  000926  0FB0               	addlw	low _group_x
  3270  000928  6ED9               	movwf	fsr2l,c
  3271  00092A  6ADA               	clrf	fsr2h,c
  3272  00092C  0E01               	movlw	1
  3273  00092E  6EDF               	movwf	indf2,c
  3274                           
  3275                           ;ikb.c: 593: key[k].bf.OwnerOfGroup = 1;
  3276  000930  5023               	movf	ikey_parsing@k,w,c
  3277  000932  0D10               	mullw	16
  3278  000934  50F3               	movf	prodl,w,c
  3279  000936  0F6B               	addlw	low (_key+11)
  3280  000938  6ED9               	movwf	fsr2l,c
  3281  00093A  6ADA               	clrf	fsr2h,c
  3282  00093C  80DF               	bsf	indf2,0,c
  3283  00093E                     l284:
  3284                           
  3285                           ;ikb.c: 594: };ikb.c: 596: };ikb.c: 597: };ikb.c: 598: };ikb.c: 602: if ( (key[k].sm1 >=
      +                           (6) ) && (key[k].sm1 <= (8)))
  3286  00093E  5023               	movf	ikey_parsing@k,w,c
  3287  000940  0D10               	mullw	16
  3288  000942  50F3               	movf	prodl,w,c
  3289  000944  0F66               	addlw	low (_key+6)
  3290  000946  6ED9               	movwf	fsr2l,c
  3291  000948  6ADA               	clrf	fsr2h,c
  3292  00094A  0E05               	movlw	5
  3293  00094C  64DF               	cpfsgt	indf2,c
  3294  00094E  D024               	goto	l297
  3295  000950  5023               	movf	ikey_parsing@k,w,c
  3296  000952  0D10               	mullw	16
  3297  000954  50F3               	movf	prodl,w,c
  3298  000956  0F66               	addlw	low (_key+6)
  3299  000958  6ED9               	movwf	fsr2l,c
  3300  00095A  6ADA               	clrf	fsr2h,c
  3301  00095C  0E09               	movlw	9
  3302  00095E  60DF               	cpfslt	indf2,c
  3303  000960  D01B               	goto	l297
  3304                           
  3305                           ;ikb.c: 603: {;ikb.c: 604: if (key[k].bf.state == 0)
  3306  000962  5023               	movf	ikey_parsing@k,w,c
  3307  000964  0D10               	mullw	16
  3308  000966  50F3               	movf	prodl,w,c
  3309  000968  0F6A               	addlw	low (_key+10)
  3310  00096A  6ED9               	movwf	fsr2l,c
  3311  00096C  6ADA               	clrf	fsr2h,c
  3312  00096E  0100               	movlb	0	; () banked
  3313  000970  B0DF               	btfsc	indf2,0,c
  3314  000972  D012               	goto	l297
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;ikb.c: 605: {;ikb.c: 606: key[k].counter1 = 0;
  3318  000974  5023               	movf	ikey_parsing@k,w,c
  3319  000976  0D10               	mullw	16
  3320  000978  50F3               	movf	prodl,w,c
  3321  00097A  0F67               	addlw	low (_key+7)
  3322  00097C  6ED9               	movwf	fsr2l,c
  3323  00097E  6ADA               	clrf	fsr2h,c
  3324  000980  0E00               	movlw	0
  3325  000982  6EDE               	movwf	postinc2,c
  3326  000984  0E00               	movlw	0
  3327  000986  6EDD               	movwf	postdec2,c
  3328                           
  3329                           ;ikb.c: 607: key[k].sm1 = (2);
  3330  000988  5023               	movf	ikey_parsing@k,w,c
  3331  00098A  0D10               	mullw	16
  3332  00098C  50F3               	movf	prodl,w,c
  3333  00098E  0F66               	addlw	low (_key+6)
  3334  000990  6ED9               	movwf	fsr2l,c
  3335  000992  6ADA               	clrf	fsr2h,c
  3336  000994  0E02               	movlw	2
  3337  000996  6EDF               	movwf	indf2,c
  3338  000998                     l297:
  3339                           
  3340                           ;ikb.c: 608: };ikb.c: 609: };ikb.c: 611: if (key[k].sm1 == (6) )
  3341  000998  5023               	movf	ikey_parsing@k,w,c
  3342  00099A  0D10               	mullw	16
  3343  00099C  50F3               	movf	prodl,w,c
  3344  00099E  0F66               	addlw	low (_key+6)
  3345  0009A0  6ED9               	movwf	fsr2l,c
  3346  0009A2  6ADA               	clrf	fsr2h,c
  3347  0009A4  0E06               	movlw	6
  3348  0009A6  18DE               	xorwf	postinc2,w,c
  3349  0009A8  A4D8               	btfss	status,2,c
  3350  0009AA  D027               	goto	l299
  3351                           
  3352                           ;ikb.c: 612: {;ikb.c: 613: if ( ++key[k].counter1 >= key[k].repp.to_start)
  3353  0009AC  5023               	movf	ikey_parsing@k,w,c
  3354  0009AE  0D10               	mullw	16
  3355  0009B0  50F3               	movf	prodl,w,c
  3356  0009B2  0F6C               	addlw	low (_key+12)
  3357  0009B4  6ED9               	movwf	fsr2l,c
  3358  0009B6  6ADA               	clrf	fsr2h,c
  3359  0009B8  5023               	movf	ikey_parsing@k,w,c
  3360  0009BA  0D10               	mullw	16
  3361  0009BC  50F3               	movf	prodl,w,c
  3362  0009BE  0F67               	addlw	low (_key+7)
  3363  0009C0  6EE1               	movwf	fsr1l,c
  3364  0009C2  6AE2               	clrf	fsr1h,c
  3365  0009C4  2AE6               	incf	postinc1,f,c
  3366  0009C6  0E00               	movlw	0
  3367  0009C8  22E5               	addwfc	postdec1,f,c
  3368  0009CA  50DE               	movf	postinc2,w,c
  3369  0009CC  5CE6               	subwf	postinc1,w,c
  3370  0009CE  50DE               	movf	postinc2,w,c
  3371  0009D0  58E6               	subwfb	postinc1,w,c
  3372  0009D2  A0D8               	btfss	status,0,c
  3373  0009D4  D012               	goto	l299
  3374                           
  3375                           ;ikb.c: 614: {;ikb.c: 615: key[k].counter1 =0;
  3376  0009D6  5023               	movf	ikey_parsing@k,w,c
  3377  0009D8  0D10               	mullw	16
  3378  0009DA  50F3               	movf	prodl,w,c
  3379  0009DC  0F67               	addlw	low (_key+7)
  3380  0009DE  6ED9               	movwf	fsr2l,c
  3381  0009E0  6ADA               	clrf	fsr2h,c
  3382  0009E2  0E00               	movlw	0
  3383  0009E4  6EDE               	movwf	postinc2,c
  3384  0009E6  0E00               	movlw	0
  3385  0009E8  6EDD               	movwf	postdec2,c
  3386                           
  3387                           ;ikb.c: 616: key[k].sm1 = (7);
  3388  0009EA  5023               	movf	ikey_parsing@k,w,c
  3389  0009EC  0D10               	mullw	16
  3390  0009EE  50F3               	movf	prodl,w,c
  3391  0009F0  0F66               	addlw	low (_key+6)
  3392  0009F2  6ED9               	movwf	fsr2l,c
  3393  0009F4  6ADA               	clrf	fsr2h,c
  3394  0009F6  0E07               	movlw	7
  3395  0009F8  6EDF               	movwf	indf2,c
  3396  0009FA                     l299:
  3397                           
  3398                           ;ikb.c: 617: };ikb.c: 618: };ikb.c: 619: if (key[k].sm1 == (7))
  3399  0009FA  5023               	movf	ikey_parsing@k,w,c
  3400  0009FC  0D10               	mullw	16
  3401  0009FE  50F3               	movf	prodl,w,c
  3402  000A00  0F66               	addlw	low (_key+6)
  3403  000A02  6ED9               	movwf	fsr2l,c
  3404  000A04  6ADA               	clrf	fsr2h,c
  3405  000A06  0E07               	movlw	7
  3406  000A08  18DE               	xorwf	postinc2,w,c
  3407  000A0A  A4D8               	btfss	status,2,c
  3408  000A0C  D018               	goto	l301
  3409                           
  3410                           ;ikb.c: 620: {;ikb.c: 621: if (key[k].bf.ReadyToRead == 0)
  3411  000A0E  5023               	movf	ikey_parsing@k,w,c
  3412  000A10  0D10               	mullw	16
  3413  000A12  50F3               	movf	prodl,w,c
  3414  000A14  0F6A               	addlw	low (_key+10)
  3415  000A16  6ED9               	movwf	fsr2l,c
  3416  000A18  6ADA               	clrf	fsr2h,c
  3417  000A1A  0100               	movlb	0	; () banked
  3418  000A1C  BCDF               	btfsc	indf2,6,c
  3419  000A1E  D00F               	goto	l301
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;ikb.c: 622: {;ikb.c: 623: key[k].bf.ReadyToRead = 1;
  3423  000A20  5023               	movf	ikey_parsing@k,w,c
  3424  000A22  0D10               	mullw	16
  3425  000A24  50F3               	movf	prodl,w,c
  3426  000A26  0F6A               	addlw	low (_key+10)
  3427  000A28  6ED9               	movwf	fsr2l,c
  3428  000A2A  6ADA               	clrf	fsr2h,c
  3429  000A2C  8CDF               	bsf	indf2,6,c
  3430                           
  3431                           ;ikb.c: 624: key[k].sm1 = (8);
  3432  000A2E  5023               	movf	ikey_parsing@k,w,c
  3433  000A30  0D10               	mullw	16
  3434  000A32  50F3               	movf	prodl,w,c
  3435  000A34  0F66               	addlw	low (_key+6)
  3436  000A36  6ED9               	movwf	fsr2l,c
  3437  000A38  6ADA               	clrf	fsr2h,c
  3438  000A3A  0E08               	movlw	8
  3439  000A3C  6EDF               	movwf	indf2,c
  3440  000A3E                     l301:
  3441                           
  3442                           ;ikb.c: 625: };ikb.c: 626: };ikb.c: 627: if (key[k].sm1 == (8))
  3443  000A3E  5023               	movf	ikey_parsing@k,w,c
  3444  000A40  0D10               	mullw	16
  3445  000A42  50F3               	movf	prodl,w,c
  3446  000A44  0F66               	addlw	low (_key+6)
  3447  000A46  6ED9               	movwf	fsr2l,c
  3448  000A48  6ADA               	clrf	fsr2h,c
  3449  000A4A  0E08               	movlw	8
  3450  000A4C  18DE               	xorwf	postinc2,w,c
  3451  000A4E  A4D8               	btfss	status,2,c
  3452  000A50  D027               	goto	l303
  3453                           
  3454                           ;ikb.c: 628: {;ikb.c: 629: if ( ++key[k].counter1 >= key[k].repp.after_start)
  3455  000A52  5023               	movf	ikey_parsing@k,w,c
  3456  000A54  0D10               	mullw	16
  3457  000A56  50F3               	movf	prodl,w,c
  3458  000A58  0F6E               	addlw	low (_key+14)
  3459  000A5A  6ED9               	movwf	fsr2l,c
  3460  000A5C  6ADA               	clrf	fsr2h,c
  3461  000A5E  5023               	movf	ikey_parsing@k,w,c
  3462  000A60  0D10               	mullw	16
  3463  000A62  50F3               	movf	prodl,w,c
  3464  000A64  0F67               	addlw	low (_key+7)
  3465  000A66  6EE1               	movwf	fsr1l,c
  3466  000A68  6AE2               	clrf	fsr1h,c
  3467  000A6A  2AE6               	incf	postinc1,f,c
  3468  000A6C  0E00               	movlw	0
  3469  000A6E  22E5               	addwfc	postdec1,f,c
  3470  000A70  50DE               	movf	postinc2,w,c
  3471  000A72  5CE6               	subwf	postinc1,w,c
  3472  000A74  50DE               	movf	postinc2,w,c
  3473  000A76  58E6               	subwfb	postinc1,w,c
  3474  000A78  A0D8               	btfss	status,0,c
  3475  000A7A  D012               	goto	l303
  3476                           
  3477                           ;ikb.c: 630: {;ikb.c: 631: key[k].counter1 = 0;
  3478  000A7C  5023               	movf	ikey_parsing@k,w,c
  3479  000A7E  0D10               	mullw	16
  3480  000A80  50F3               	movf	prodl,w,c
  3481  000A82  0F67               	addlw	low (_key+7)
  3482  000A84  6ED9               	movwf	fsr2l,c
  3483  000A86  6ADA               	clrf	fsr2h,c
  3484  000A88  0E00               	movlw	0
  3485  000A8A  6EDE               	movwf	postinc2,c
  3486  000A8C  0E00               	movlw	0
  3487  000A8E  6EDD               	movwf	postdec2,c
  3488                           
  3489                           ;ikb.c: 632: key[k].sm1 = (7);
  3490  000A90  5023               	movf	ikey_parsing@k,w,c
  3491  000A92  0D10               	mullw	16
  3492  000A94  50F3               	movf	prodl,w,c
  3493  000A96  0F66               	addlw	low (_key+6)
  3494  000A98  6ED9               	movwf	fsr2l,c
  3495  000A9A  6ADA               	clrf	fsr2h,c
  3496  000A9C  0E07               	movlw	7
  3497  000A9E  6EDF               	movwf	indf2,c
  3498  000AA0                     l303:
  3499                           
  3500                           ;ikb.c: 633: };ikb.c: 634: };ikb.c: 636: if (key[k].sm1 == (5) )
  3501  000AA0  5023               	movf	ikey_parsing@k,w,c
  3502  000AA2  0D10               	mullw	16
  3503  000AA4  50F3               	movf	prodl,w,c
  3504  000AA6  0F66               	addlw	low (_key+6)
  3505  000AA8  6ED9               	movwf	fsr2l,c
  3506  000AAA  6ADA               	clrf	fsr2h,c
  3507  000AAC  0E05               	movlw	5
  3508  000AAE  18DE               	xorwf	postinc2,w,c
  3509  000AB0  A4D8               	btfss	status,2,c
  3510  000AB2  D018               	goto	l305
  3511                           
  3512                           ;ikb.c: 637: {;ikb.c: 638: if (key[k].bf.state == 0)
  3513  000AB4  5023               	movf	ikey_parsing@k,w,c
  3514  000AB6  0D10               	mullw	16
  3515  000AB8  50F3               	movf	prodl,w,c
  3516  000ABA  0F6A               	addlw	low (_key+10)
  3517  000ABC  6ED9               	movwf	fsr2l,c
  3518  000ABE  6ADA               	clrf	fsr2h,c
  3519  000AC0  0100               	movlb	0	; () banked
  3520  000AC2  B0DF               	btfsc	indf2,0,c
  3521  000AC4  D00F               	goto	l305
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;ikb.c: 639: {;ikb.c: 640: key[k].bf.ReadyToRead = 1;
  3525  000AC6  5023               	movf	ikey_parsing@k,w,c
  3526  000AC8  0D10               	mullw	16
  3527  000ACA  50F3               	movf	prodl,w,c
  3528  000ACC  0F6A               	addlw	low (_key+10)
  3529  000ACE  6ED9               	movwf	fsr2l,c
  3530  000AD0  6ADA               	clrf	fsr2h,c
  3531  000AD2  8CDF               	bsf	indf2,6,c
  3532                           
  3533                           ;ikb.c: 641: key[k].sm1 = (2);
  3534  000AD4  5023               	movf	ikey_parsing@k,w,c
  3535  000AD6  0D10               	mullw	16
  3536  000AD8  50F3               	movf	prodl,w,c
  3537  000ADA  0F66               	addlw	low (_key+6)
  3538  000ADC  6ED9               	movwf	fsr2l,c
  3539  000ADE  6ADA               	clrf	fsr2h,c
  3540  000AE0  0E02               	movlw	2
  3541  000AE2  6EDF               	movwf	indf2,c
  3542  000AE4                     l305:
  3543                           
  3544                           ;ikb.c: 642: };ikb.c: 643: };ikb.c: 645: if (key[k].sm1 == (3) )
  3545  000AE4  5023               	movf	ikey_parsing@k,w,c
  3546  000AE6  0D10               	mullw	16
  3547  000AE8  50F3               	movf	prodl,w,c
  3548  000AEA  0F66               	addlw	low (_key+6)
  3549  000AEC  6ED9               	movwf	fsr2l,c
  3550  000AEE  6ADA               	clrf	fsr2h,c
  3551  000AF0  0E03               	movlw	3
  3552  000AF2  18DE               	xorwf	postinc2,w,c
  3553  000AF4  A4D8               	btfss	status,2,c
  3554  000AF6  D09C               	goto	l307
  3555                           
  3556                           ;ikb.c: 646: {;ikb.c: 647: key[k].counter1++;
  3557  000AF8  5023               	movf	ikey_parsing@k,w,c
  3558  000AFA  0D10               	mullw	16
  3559  000AFC  50F3               	movf	prodl,w,c
  3560  000AFE  0F67               	addlw	low (_key+7)
  3561  000B00  6ED9               	movwf	fsr2l,c
  3562  000B02  6ADA               	clrf	fsr2h,c
  3563  000B04  2ADE               	incf	postinc2,f,c
  3564  000B06  0E00               	movlw	0
  3565  000B08  22DD               	addwfc	postdec2,f,c
  3566                           
  3567                           ;ikb.c: 649: if (key[k].bf.state == 0)
  3568  000B0A  5023               	movf	ikey_parsing@k,w,c
  3569  000B0C  0D10               	mullw	16
  3570  000B0E  50F3               	movf	prodl,w,c
  3571  000B10  0F6A               	addlw	low (_key+10)
  3572  000B12  6ED9               	movwf	fsr2l,c
  3573  000B14  6ADA               	clrf	fsr2h,c
  3574  000B16  0100               	movlb	0	; () banked
  3575  000B18  B0DF               	btfsc	indf2,0,c
  3576  000B1A  D03D               	goto	l4608
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;ikb.c: 650: {;ikb.c: 651: if (key[k].counter1 <= ((1000E-3/5E-3)) )
  3580  000B1C  0E00               	movlw	0
  3581  000B1E  6E16               	movwf	___ftge@ff1,c
  3582  000B20  0E48               	movlw	72
  3583  000B22  6E17               	movwf	___ftge@ff1+1,c
  3584  000B24  0E43               	movlw	67
  3585  000B26  6E18               	movwf	___ftge@ff1+2,c
  3586  000B28  5023               	movf	ikey_parsing@k,w,c
  3587  000B2A  0D10               	mullw	16
  3588  000B2C  50F3               	movf	prodl,w,c
  3589  000B2E  0F67               	addlw	low (_key+7)
  3590  000B30  6ED9               	movwf	fsr2l,c
  3591  000B32  6ADA               	clrf	fsr2h,c
  3592  000B34  CFDE F013          	movff	postinc2,___lwtoft@c
  3593  000B38  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3594  000B3C  EC02  F012         	call	___lwtoft	;wreg free
  3595  000B40  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3596  000B44  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3597  000B48  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3598  000B4C  ECE8  F00E         	call	___ftge	;wreg free
  3599  000B50  A0D8               	btfss	status,0,c
  3600  000B52  D021               	goto	l4608
  3601                           
  3602                           ;ikb.c: 652: {;ikb.c: 653: key[k].counter1 = 0;
  3603  000B54  5023               	movf	ikey_parsing@k,w,c
  3604  000B56  0D10               	mullw	16
  3605  000B58  50F3               	movf	prodl,w,c
  3606  000B5A  0F67               	addlw	low (_key+7)
  3607  000B5C  6ED9               	movwf	fsr2l,c
  3608  000B5E  6ADA               	clrf	fsr2h,c
  3609  000B60  0E00               	movlw	0
  3610  000B62  6EDE               	movwf	postinc2,c
  3611  000B64  0E00               	movlw	0
  3612  000B66  6EDD               	movwf	postdec2,c
  3613                           
  3614                           ;ikb.c: 655: key[k].bf.ReadyToRead = 1;
  3615  000B68  5023               	movf	ikey_parsing@k,w,c
  3616  000B6A  0D10               	mullw	16
  3617  000B6C  50F3               	movf	prodl,w,c
  3618  000B6E  0F6A               	addlw	low (_key+10)
  3619  000B70  6ED9               	movwf	fsr2l,c
  3620  000B72  6ADA               	clrf	fsr2h,c
  3621  000B74  0100               	movlb	0	; () banked
  3622  000B76  8CDF               	bsf	indf2,6,c
  3623                           
  3624                           ;ikb.c: 656: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3625  000B78  5023               	movf	ikey_parsing@k,w,c
  3626  000B7A  0D10               	mullw	16
  3627  000B7C  50F3               	movf	prodl,w,c
  3628  000B7E  0F6A               	addlw	low (_key+10)
  3629  000B80  6ED9               	movwf	fsr2l,c
  3630  000B82  6ADA               	clrf	fsr2h,c
  3631  000B84  9EDF               	bcf	indf2,7,c
  3632                           
  3633                           ;ikb.c: 658: key[k].sm1 = (2);
  3634  000B86  5023               	movf	ikey_parsing@k,w,c
  3635  000B88  0D10               	mullw	16
  3636  000B8A  50F3               	movf	prodl,w,c
  3637  000B8C  0F66               	addlw	low (_key+6)
  3638  000B8E  6ED9               	movwf	fsr2l,c
  3639  000B90  6ADA               	clrf	fsr2h,c
  3640  000B92  0E02               	movlw	2
  3641  000B94  6EDF               	movwf	indf2,c
  3642  000B96                     l4608:
  3643                           
  3644                           ;ikb.c: 659: };ikb.c: 660: };ikb.c: 662: if (key[k].counter1 > ((1000E-3/5E-3)) )
  3645  000B96  0E00               	movlw	0
  3646  000B98  6E16               	movwf	___ftge@ff1,c
  3647  000B9A  0E48               	movlw	72
  3648  000B9C  6E17               	movwf	___ftge@ff1+1,c
  3649  000B9E  0E43               	movlw	67
  3650  000BA0  6E18               	movwf	___ftge@ff1+2,c
  3651  000BA2  5023               	movf	ikey_parsing@k,w,c
  3652  000BA4  0D10               	mullw	16
  3653  000BA6  50F3               	movf	prodl,w,c
  3654  000BA8  0F67               	addlw	low (_key+7)
  3655  000BAA  6ED9               	movwf	fsr2l,c
  3656  000BAC  6ADA               	clrf	fsr2h,c
  3657  000BAE  CFDE F013          	movff	postinc2,___lwtoft@c
  3658  000BB2  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3659  000BB6  EC02  F012         	call	___lwtoft	;wreg free
  3660  000BBA  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3661  000BBE  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3662  000BC2  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3663  000BC6  ECE8  F00E         	call	___ftge	;wreg free
  3664  000BCA  B0D8               	btfsc	status,0,c
  3665  000BCC  D031               	goto	l307
  3666                           
  3667                           ;ikb.c: 663: {;ikb.c: 664: key[k].counter1 = 0x0000;
  3668  000BCE  5023               	movf	ikey_parsing@k,w,c
  3669  000BD0  0D10               	mullw	16
  3670  000BD2  50F3               	movf	prodl,w,c
  3671  000BD4  0F67               	addlw	low (_key+7)
  3672  000BD6  6ED9               	movwf	fsr2l,c
  3673  000BD8  6ADA               	clrf	fsr2h,c
  3674  000BDA  0E00               	movlw	0
  3675  000BDC  6EDE               	movwf	postinc2,c
  3676  000BDE  0E00               	movlw	0
  3677  000BE0  6EDD               	movwf	postdec2,c
  3678                           
  3679                           ;ikb.c: 666: key[k].bf.ReadyToRead = 1;
  3680  000BE2  5023               	movf	ikey_parsing@k,w,c
  3681  000BE4  0D10               	mullw	16
  3682  000BE6  50F3               	movf	prodl,w,c
  3683  000BE8  0F6A               	addlw	low (_key+10)
  3684  000BEA  6ED9               	movwf	fsr2l,c
  3685  000BEC  6ADA               	clrf	fsr2h,c
  3686  000BEE  0100               	movlb	0	; () banked
  3687  000BF0  8CDF               	bsf	indf2,6,c
  3688                           
  3689                           ;ikb.c: 667: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3690  000BF2  5023               	movf	ikey_parsing@k,w,c
  3691  000BF4  0D10               	mullw	16
  3692  000BF6  50F3               	movf	prodl,w,c
  3693  000BF8  0F6A               	addlw	low (_key+10)
  3694  000BFA  6ED9               	movwf	fsr2l,c
  3695  000BFC  6ADA               	clrf	fsr2h,c
  3696  000BFE  8EDF               	bsf	indf2,7,c
  3697                           
  3698                           ;ikb.c: 669: if (!key[k].bf.Reptt)
  3699  000C00  5023               	movf	ikey_parsing@k,w,c
  3700  000C02  0D10               	mullw	16
  3701  000C04  50F3               	movf	prodl,w,c
  3702  000C06  0F6A               	addlw	low (_key+10)
  3703  000C08  6ED9               	movwf	fsr2l,c
  3704  000C0A  6ADA               	clrf	fsr2h,c
  3705  000C0C  BADF               	btfsc	indf2,5,c
  3706  000C0E  D008               	goto	l4614
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;ikb.c: 670: {;ikb.c: 671: key[k].sm1 = (1);
  3710  000C10  5023               	movf	ikey_parsing@k,w,c
  3711  000C12  0D10               	mullw	16
  3712  000C14  50F3               	movf	prodl,w,c
  3713  000C16  0F66               	addlw	low (_key+6)
  3714  000C18  6ED9               	movwf	fsr2l,c
  3715  000C1A  6ADA               	clrf	fsr2h,c
  3716  000C1C  0E01               	movlw	1
  3717  000C1E  D007               	goto	L3
  3718  000C20                     l4614:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;ikb.c: 673: else;ikb.c: 674: {;ikb.c: 675: key[k].sm1 = (8);
  3722  000C20  5023               	movf	ikey_parsing@k,w,c
  3723  000C22  0D10               	mullw	16
  3724  000C24  50F3               	movf	prodl,w,c
  3725  000C26  0F66               	addlw	low (_key+6)
  3726  000C28  6ED9               	movwf	fsr2l,c
  3727  000C2A  6ADA               	clrf	fsr2h,c
  3728  000C2C  0E08               	movlw	8
  3729  000C2E                     L3:
  3730  000C2E  6EDF               	movwf	indf2,c
  3731  000C30                     l307:
  3732                           
  3733                           ;ikb.c: 676: };ikb.c: 677: };ikb.c: 678: };ikb.c: 683: if (key[k].sm1 == (4))
  3734  000C30  5023               	movf	ikey_parsing@k,w,c
  3735  000C32  0D10               	mullw	16
  3736  000C34  50F3               	movf	prodl,w,c
  3737  000C36  0F66               	addlw	low (_key+6)
  3738  000C38  6ED9               	movwf	fsr2l,c
  3739  000C3A  6ADA               	clrf	fsr2h,c
  3740  000C3C  0E04               	movlw	4
  3741  000C3E  18DE               	xorwf	postinc2,w,c
  3742  000C40  A4D8               	btfss	status,2,c
  3743  000C42  D08C               	goto	l313
  3744                           
  3745                           ;ikb.c: 684: {;ikb.c: 685: key[k].counter1++;
  3746  000C44  5023               	movf	ikey_parsing@k,w,c
  3747  000C46  0D10               	mullw	16
  3748  000C48  50F3               	movf	prodl,w,c
  3749  000C4A  0F67               	addlw	low (_key+7)
  3750  000C4C  6ED9               	movwf	fsr2l,c
  3751  000C4E  6ADA               	clrf	fsr2h,c
  3752  000C50  2ADE               	incf	postinc2,f,c
  3753  000C52  0E00               	movlw	0
  3754  000C54  22DD               	addwfc	postdec2,f,c
  3755                           
  3756                           ;ikb.c: 687: if (key[k].bf.state == 0)
  3757  000C56  5023               	movf	ikey_parsing@k,w,c
  3758  000C58  0D10               	mullw	16
  3759  000C5A  50F3               	movf	prodl,w,c
  3760  000C5C  0F6A               	addlw	low (_key+10)
  3761  000C5E  6ED9               	movwf	fsr2l,c
  3762  000C60  6ADA               	clrf	fsr2h,c
  3763  000C62  0100               	movlb	0	; () banked
  3764  000C64  B0DF               	btfsc	indf2,0,c
  3765  000C66  D03D               	goto	l4622
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;ikb.c: 688: {;ikb.c: 689: if (key[k].counter1 <= ((1000E-3/5E-3)))
  3769  000C68  0E00               	movlw	0
  3770  000C6A  6E16               	movwf	___ftge@ff1,c
  3771  000C6C  0E48               	movlw	72
  3772  000C6E  6E17               	movwf	___ftge@ff1+1,c
  3773  000C70  0E43               	movlw	67
  3774  000C72  6E18               	movwf	___ftge@ff1+2,c
  3775  000C74  5023               	movf	ikey_parsing@k,w,c
  3776  000C76  0D10               	mullw	16
  3777  000C78  50F3               	movf	prodl,w,c
  3778  000C7A  0F67               	addlw	low (_key+7)
  3779  000C7C  6ED9               	movwf	fsr2l,c
  3780  000C7E  6ADA               	clrf	fsr2h,c
  3781  000C80  CFDE F013          	movff	postinc2,___lwtoft@c
  3782  000C84  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3783  000C88  EC02  F012         	call	___lwtoft	;wreg free
  3784  000C8C  C013  F019         	movff	?___lwtoft,___ftge@ff2
  3785  000C90  C014  F01A         	movff	?___lwtoft+1,___ftge@ff2+1
  3786  000C94  C015  F01B         	movff	?___lwtoft+2,___ftge@ff2+2
  3787  000C98  ECE8  F00E         	call	___ftge	;wreg free
  3788  000C9C  A0D8               	btfss	status,0,c
  3789  000C9E  D021               	goto	l4622
  3790                           
  3791                           ;ikb.c: 690: {;ikb.c: 691: key[k].counter1 = 0;
  3792  000CA0  5023               	movf	ikey_parsing@k,w,c
  3793  000CA2  0D10               	mullw	16
  3794  000CA4  50F3               	movf	prodl,w,c
  3795  000CA6  0F67               	addlw	low (_key+7)
  3796  000CA8  6ED9               	movwf	fsr2l,c
  3797  000CAA  6ADA               	clrf	fsr2h,c
  3798  000CAC  0E00               	movlw	0
  3799  000CAE  6EDE               	movwf	postinc2,c
  3800  000CB0  0E00               	movlw	0
  3801  000CB2  6EDD               	movwf	postdec2,c
  3802                           
  3803                           ;ikb.c: 693: key[k].bf.ReadyToRead = 1;
  3804  000CB4  5023               	movf	ikey_parsing@k,w,c
  3805  000CB6  0D10               	mullw	16
  3806  000CB8  50F3               	movf	prodl,w,c
  3807  000CBA  0F6A               	addlw	low (_key+10)
  3808  000CBC  6ED9               	movwf	fsr2l,c
  3809  000CBE  6ADA               	clrf	fsr2h,c
  3810  000CC0  0100               	movlb	0	; () banked
  3811  000CC2  8CDF               	bsf	indf2,6,c
  3812                           
  3813                           ;ikb.c: 694: key[k].bf.AtTimeExpired_BeforeOrAfter = 0;
  3814  000CC4  5023               	movf	ikey_parsing@k,w,c
  3815  000CC6  0D10               	mullw	16
  3816  000CC8  50F3               	movf	prodl,w,c
  3817  000CCA  0F6A               	addlw	low (_key+10)
  3818  000CCC  6ED9               	movwf	fsr2l,c
  3819  000CCE  6ADA               	clrf	fsr2h,c
  3820  000CD0  9EDF               	bcf	indf2,7,c
  3821                           
  3822                           ;ikb.c: 696: key[k].sm1 = (2);
  3823  000CD2  5023               	movf	ikey_parsing@k,w,c
  3824  000CD4  0D10               	mullw	16
  3825  000CD6  50F3               	movf	prodl,w,c
  3826  000CD8  0F66               	addlw	low (_key+6)
  3827  000CDA  6ED9               	movwf	fsr2l,c
  3828  000CDC  6ADA               	clrf	fsr2h,c
  3829  000CDE  0E02               	movlw	2
  3830  000CE0  6EDF               	movwf	indf2,c
  3831  000CE2                     l4622:
  3832                           
  3833                           ;ikb.c: 697: };ikb.c: 698: };ikb.c: 701: if (key[k].counter1 >= ((3000E-3/5E-3)))
  3834  000CE2  5023               	movf	ikey_parsing@k,w,c
  3835  000CE4  0D10               	mullw	16
  3836  000CE6  50F3               	movf	prodl,w,c
  3837  000CE8  0F67               	addlw	low (_key+7)
  3838  000CEA  6ED9               	movwf	fsr2l,c
  3839  000CEC  6ADA               	clrf	fsr2h,c
  3840  000CEE  CFDE F013          	movff	postinc2,___lwtoft@c
  3841  000CF2  CFDD F014          	movff	postdec2,___lwtoft@c+1
  3842  000CF6  EC02  F012         	call	___lwtoft	;wreg free
  3843  000CFA  C013  F016         	movff	?___lwtoft,___ftge@ff1
  3844  000CFE  C014  F017         	movff	?___lwtoft+1,___ftge@ff1+1
  3845  000D02  C015  F018         	movff	?___lwtoft+2,___ftge@ff1+2
  3846  000D06  0E00               	movlw	0
  3847  000D08  6E19               	movwf	___ftge@ff2,c
  3848  000D0A  0E16               	movlw	22
  3849  000D0C  6E1A               	movwf	___ftge@ff2+1,c
  3850  000D0E  0E44               	movlw	68
  3851  000D10  6E1B               	movwf	___ftge@ff2+2,c
  3852  000D12  ECE8  F00E         	call	___ftge	;wreg free
  3853  000D16  A0D8               	btfss	status,0,c
  3854  000D18  D021               	goto	l313
  3855                           
  3856                           ;ikb.c: 702: {;ikb.c: 703: key[k].counter1 = 0x0000;
  3857  000D1A  5023               	movf	ikey_parsing@k,w,c
  3858  000D1C  0D10               	mullw	16
  3859  000D1E  50F3               	movf	prodl,w,c
  3860  000D20  0F67               	addlw	low (_key+7)
  3861  000D22  6ED9               	movwf	fsr2l,c
  3862  000D24  6ADA               	clrf	fsr2h,c
  3863  000D26  0E00               	movlw	0
  3864  000D28  6EDE               	movwf	postinc2,c
  3865  000D2A  0E00               	movlw	0
  3866  000D2C  6EDD               	movwf	postdec2,c
  3867                           
  3868                           ;ikb.c: 705: key[k].bf.ReadyToRead = 1;
  3869  000D2E  5023               	movf	ikey_parsing@k,w,c
  3870  000D30  0D10               	mullw	16
  3871  000D32  50F3               	movf	prodl,w,c
  3872  000D34  0F6A               	addlw	low (_key+10)
  3873  000D36  6ED9               	movwf	fsr2l,c
  3874  000D38  6ADA               	clrf	fsr2h,c
  3875  000D3A  0100               	movlb	0	; () banked
  3876  000D3C  8CDF               	bsf	indf2,6,c
  3877                           
  3878                           ;ikb.c: 706: key[k].bf.AtTimeExpired_BeforeOrAfter = 1;
  3879  000D3E  5023               	movf	ikey_parsing@k,w,c
  3880  000D40  0D10               	mullw	16
  3881  000D42  50F3               	movf	prodl,w,c
  3882  000D44  0F6A               	addlw	low (_key+10)
  3883  000D46  6ED9               	movwf	fsr2l,c
  3884  000D48  6ADA               	clrf	fsr2h,c
  3885  000D4A  8EDF               	bsf	indf2,7,c
  3886                           
  3887                           ;ikb.c: 709: key[k].sm1 = (1);
  3888  000D4C  5023               	movf	ikey_parsing@k,w,c
  3889  000D4E  0D10               	mullw	16
  3890  000D50  50F3               	movf	prodl,w,c
  3891  000D52  0F66               	addlw	low (_key+6)
  3892  000D54  6ED9               	movwf	fsr2l,c
  3893  000D56  6ADA               	clrf	fsr2h,c
  3894  000D58  0E01               	movlw	1
  3895  000D5A  6EDF               	movwf	indf2,c
  3896  000D5C                     l313:
  3897                           
  3898                           ;ikb.c: 710: };ikb.c: 711: };ikb.c: 714: if (key[k].sm1 == (1))
  3899  000D5C  5023               	movf	ikey_parsing@k,w,c
  3900  000D5E  0D10               	mullw	16
  3901  000D60  50F3               	movf	prodl,w,c
  3902  000D62  0F66               	addlw	low (_key+6)
  3903  000D64  6ED9               	movwf	fsr2l,c
  3904  000D66  6ADA               	clrf	fsr2h,c
  3905  000D68  04DE               	decf	postinc2,w,c
  3906  000D6A  A4D8               	btfss	status,2,c
  3907  000D6C  D011               	goto	l317
  3908                           
  3909                           ;ikb.c: 715: {;ikb.c: 716: if (key[k].bf.state == 0)
  3910  000D6E  5023               	movf	ikey_parsing@k,w,c
  3911  000D70  0D10               	mullw	16
  3912  000D72  50F3               	movf	prodl,w,c
  3913  000D74  0F6A               	addlw	low (_key+10)
  3914  000D76  6ED9               	movwf	fsr2l,c
  3915  000D78  6ADA               	clrf	fsr2h,c
  3916  000D7A  0100               	movlb	0	; () banked
  3917  000D7C  B0DF               	btfsc	indf2,0,c
  3918  000D7E  D008               	goto	l317
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;ikb.c: 717: {;ikb.c: 718: key[k].sm1 = (2);
  3922  000D80  5023               	movf	ikey_parsing@k,w,c
  3923  000D82  0D10               	mullw	16
  3924  000D84  50F3               	movf	prodl,w,c
  3925  000D86  0F66               	addlw	low (_key+6)
  3926  000D88  6ED9               	movwf	fsr2l,c
  3927  000D8A  6ADA               	clrf	fsr2h,c
  3928  000D8C  0E02               	movlw	2
  3929  000D8E  6EDF               	movwf	indf2,c
  3930  000D90                     l317:
  3931                           
  3932                           ;ikb.c: 719: };ikb.c: 720: };ikb.c: 722: if (key[k].sm1 == (2))
  3933  000D90  5023               	movf	ikey_parsing@k,w,c
  3934  000D92  0D10               	mullw	16
  3935  000D94  50F3               	movf	prodl,w,c
  3936  000D96  0F66               	addlw	low (_key+6)
  3937  000D98  6ED9               	movwf	fsr2l,c
  3938  000D9A  6ADA               	clrf	fsr2h,c
  3939  000D9C  0E02               	movlw	2
  3940  000D9E  18DE               	xorwf	postinc2,w,c
  3941  000DA0  A4D8               	btfss	status,2,c
  3942  000DA2  D011               	goto	l319
  3943                           
  3944                           ;ikb.c: 723: {;ikb.c: 724: if (key[k].bf.ReadyToRead == 0)
  3945  000DA4  5023               	movf	ikey_parsing@k,w,c
  3946  000DA6  0D10               	mullw	16
  3947  000DA8  50F3               	movf	prodl,w,c
  3948  000DAA  0F6A               	addlw	low (_key+10)
  3949  000DAC  6ED9               	movwf	fsr2l,c
  3950  000DAE  6ADA               	clrf	fsr2h,c
  3951  000DB0  0100               	movlb	0	; () banked
  3952  000DB2  BCDF               	btfsc	indf2,6,c
  3953  000DB4  D008               	goto	l319
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;ikb.c: 725: {;ikb.c: 726: key[k].sm1 = (9);
  3957  000DB6  5023               	movf	ikey_parsing@k,w,c
  3958  000DB8  0D10               	mullw	16
  3959  000DBA  50F3               	movf	prodl,w,c
  3960  000DBC  0F66               	addlw	low (_key+6)
  3961  000DBE  6ED9               	movwf	fsr2l,c
  3962  000DC0  6ADA               	clrf	fsr2h,c
  3963  000DC2  0E09               	movlw	9
  3964  000DC4  6EDF               	movwf	indf2,c
  3965  000DC6                     l319:
  3966                           
  3967                           ;ikb.c: 727: };ikb.c: 728: };ikb.c: 730: if (key[k].sm1 == (9))
  3968  000DC6  5023               	movf	ikey_parsing@k,w,c
  3969  000DC8  0D10               	mullw	16
  3970  000DCA  50F3               	movf	prodl,w,c
  3971  000DCC  0F66               	addlw	low (_key+6)
  3972  000DCE  6ED9               	movwf	fsr2l,c
  3973  000DD0  6ADA               	clrf	fsr2h,c
  3974  000DD2  0E09               	movlw	9
  3975  000DD4  18DE               	xorwf	postinc2,w,c
  3976  000DD6  A4D8               	btfss	status,2,c
  3977  000DD8  D02F               	goto	l4638
  3978                           
  3979                           ;ikb.c: 731: {;ikb.c: 732: if (key[k].num_group_x > 0)
  3980  000DDA  5023               	movf	ikey_parsing@k,w,c
  3981  000DDC  0D10               	mullw	16
  3982  000DDE  50F3               	movf	prodl,w,c
  3983  000DE0  0F69               	addlw	low (_key+9)
  3984  000DE2  6ED9               	movwf	fsr2l,c
  3985  000DE4  6ADA               	clrf	fsr2h,c
  3986  000DE6  50DF               	movf	indf2,w,c
  3987  000DE8  B4D8               	btfsc	status,2,c
  3988  000DEA  D016               	goto	l322
  3989                           
  3990                           ;ikb.c: 733: {;ikb.c: 734: group_x[key[k].num_group_x] = 0;
  3991  000DEC  5023               	movf	ikey_parsing@k,w,c
  3992  000DEE  0D10               	mullw	16
  3993  000DF0  50F3               	movf	prodl,w,c
  3994  000DF2  0F69               	addlw	low (_key+9)
  3995  000DF4  6ED9               	movwf	fsr2l,c
  3996  000DF6  6ADA               	clrf	fsr2h,c
  3997  000DF8  50DF               	movf	indf2,w,c
  3998  000DFA  6E1F               	movwf	??_ikey_parsing& (0+255),c
  3999  000DFC  501F               	movf	??_ikey_parsing,w,c
  4000  000DFE  0FB0               	addlw	low _group_x
  4001  000E00  6ED9               	movwf	fsr2l,c
  4002  000E02  6ADA               	clrf	fsr2h,c
  4003  000E04  0E00               	movlw	0
  4004  000E06  6EDF               	movwf	indf2,c
  4005                           
  4006                           ;ikb.c: 735: key[k].bf.OwnerOfGroup = 0;
  4007  000E08  5023               	movf	ikey_parsing@k,w,c
  4008  000E0A  0D10               	mullw	16
  4009  000E0C  50F3               	movf	prodl,w,c
  4010  000E0E  0F6B               	addlw	low (_key+11)
  4011  000E10  6ED9               	movwf	fsr2l,c
  4012  000E12  6ADA               	clrf	fsr2h,c
  4013  000E14  0100               	movlb	0	; () banked
  4014  000E16  90DF               	bcf	indf2,0,c
  4015  000E18                     l322:
  4016                           
  4017                           ;ikb.c: 736: };ikb.c: 738: key[k].sm1 = (0);
  4018  000E18  5023               	movf	ikey_parsing@k,w,c
  4019  000E1A  0D10               	mullw	16
  4020  000E1C  50F3               	movf	prodl,w,c
  4021  000E1E  0F66               	addlw	low (_key+6)
  4022  000E20  6ED9               	movwf	fsr2l,c
  4023  000E22  6ADA               	clrf	fsr2h,c
  4024  000E24  0E00               	movlw	0
  4025  000E26  6EDF               	movwf	indf2,c
  4026                           
  4027                           ;ikb.c: 741: key[k].bf.InProcessing = 0;
  4028  000E28  5023               	movf	ikey_parsing@k,w,c
  4029  000E2A  0D10               	mullw	16
  4030  000E2C  50F3               	movf	prodl,w,c
  4031  000E2E  0F6B               	addlw	low (_key+11)
  4032  000E30  6ED9               	movwf	fsr2l,c
  4033  000E32  6ADA               	clrf	fsr2h,c
  4034  000E34  0100               	movlb	0	; () banked
  4035  000E36  92DF               	bcf	indf2,1,c
  4036  000E38                     l4638:
  4037  000E38  2A23               	incf	ikey_parsing@k,f,c
  4038  000E3A  0E04               	movlw	4
  4039  000E3C  6423               	cpfsgt	ikey_parsing@k,c
  4040  000E3E  D4EB               	goto	l4552
  4041  000E40  0012               	return	
  4042  000E42                     __end_of_ikey_parsing:
  4043                           	opt callstack 0
  4044                           
  4045 ;; *************** function _ikey_is_accessible *****************
  4046 ;; Defined at:
  4047 ;;		line 509 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  k               1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  k               1   12[COMRAM] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      unsigned char 
  4054 ;; Registers used:
  4055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4061 ;;      Params:         0       0       0       0       0       0       0       0       0
  4062 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4063 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4064 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4065 ;;Total ram usage:        3 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    5
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_ikey_parsing
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text21
  4076  002074                     __ptext21:
  4077                           	opt callstack 0
  4078  002074                     _ikey_is_accessible:
  4079                           	opt callstack 23
  4080                           
  4081                           ;incstack = 0
  4082                           ;ikey_is_accessible@k stored from wreg
  4083  002074  6E0D               	movwf	ikey_is_accessible@k,c
  4084                           
  4085                           ;ikb.c: 511: if (key[k].num_group_x != 0)
  4086  002076  500D               	movf	ikey_is_accessible@k,w,c
  4087  002078  0D10               	mullw	16
  4088  00207A  50F3               	movf	prodl,w,c
  4089  00207C  0F69               	addlw	low (_key+9)
  4090  00207E  6ED9               	movwf	fsr2l,c
  4091  002080  6ADA               	clrf	fsr2h,c
  4092  002082  50DF               	movf	indf2,w,c
  4093  002084  B4D8               	btfsc	status,2,c
  4094  002086  D01A               	goto	l3344
  4095                           
  4096                           ;ikb.c: 512: {;ikb.c: 514: if (group_x[key[k].num_group_x] == 1)
  4097  002088  500D               	movf	ikey_is_accessible@k,w,c
  4098  00208A  0D10               	mullw	16
  4099  00208C  50F3               	movf	prodl,w,c
  4100  00208E  0F69               	addlw	low (_key+9)
  4101  002090  6ED9               	movwf	fsr2l,c
  4102  002092  6ADA               	clrf	fsr2h,c
  4103  002094  50DF               	movf	indf2,w,c
  4104  002096  6E0B               	movwf	??_ikey_is_accessible& (0+255),c
  4105  002098  500B               	movf	??_ikey_is_accessible,w,c
  4106  00209A  0FB0               	addlw	low _group_x
  4107  00209C  6ED9               	movwf	fsr2l,c
  4108  00209E  6ADA               	clrf	fsr2h,c
  4109  0020A0  04DE               	decf	postinc2,w,c
  4110  0020A2  A4D8               	btfss	status,2,c
  4111  0020A4  D00B               	goto	l3344
  4112                           
  4113                           ;ikb.c: 515: {;ikb.c: 517: if ( !key[k].bf.OwnerOfGroup)
  4114  0020A6  500D               	movf	ikey_is_accessible@k,w,c
  4115  0020A8  0D10               	mullw	16
  4116  0020AA  50F3               	movf	prodl,w,c
  4117  0020AC  0F6B               	addlw	low (_key+11)
  4118  0020AE  6ED9               	movwf	fsr2l,c
  4119  0020B0  6ADA               	clrf	fsr2h,c
  4120  0020B2  0100               	movlb	0	; () banked
  4121  0020B4  B0DF               	btfsc	indf2,0,c
  4122  0020B6  D002               	goto	l3344
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;ikb.c: 518: {;ikb.c: 519: return 0;
  4126  0020B8  0E00               	movlw	0
  4127  0020BA  0012               	return	
  4128  0020BC                     l3344:
  4129                           
  4130                           ;ikb.c: 520: };ikb.c: 521: };ikb.c: 522: };ikb.c: 523: return 1;
  4131  0020BC  0E01               	movlw	1
  4132  0020BE  0012               	return		;funcret
  4133  0020C0                     __end_of_ikey_is_accessible:
  4134                           	opt callstack 0
  4135                           
  4136 ;; *************** function _ikb_init *****************
  4137 ;; Defined at:
  4138 ;;		line 216 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  i               1   10[COMRAM] char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 3F/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0
  4153 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4155 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4156 ;;Total ram usage:        1 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    5
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text22
  4167  001788                     __ptext22:
  4168                           	opt callstack 0
  4169  001788                     _ikb_init:
  4170                           	opt callstack 25
  4171                           
  4172                           ;incstack = 0
  4173                           ;ikb.c: 218: int8_t i;;ikb.c: 388: do{TRISC |= 1<<4;}while(0);
  4174  001788  8894               	bsf	3988,4,c	;volatile
  4175                           
  4176                           ;ikb.c: 389: do{TRISC |= 1<<5;}while(0);
  4177  00178A  8A94               	bsf	3988,5,c	;volatile
  4178                           
  4179                           ;ikb.c: 390: do{TRISC |= 1<<6;}while(0);
  4180  00178C  8C94               	bsf	3988,6,c	;volatile
  4181                           
  4182                           ;ikb.c: 391: do{TRISC |= 1<<7;}while(0);
  4183  00178E  8E94               	bsf	3988,7,c	;volatile
  4184                           
  4185                           ;ikb.c: 392: do{TRISD |= 1<<4;}while(0);
  4186  001790  8895               	bsf	3989,4,c	;volatile
  4187                           
  4188                           ;ikb.c: 393: key[0].keyRead = keyRead_pin_key0;
  4189  001792  0EB0               	movlw	low _keyRead_pin_key0
  4190  001794  0100               	movlb	0	; () banked
  4191  001796  6F60               	movwf	_key& (0+255),b	;volatile
  4192  001798  0E25               	movlw	high _keyRead_pin_key0
  4193  00179A  6F61               	movwf	(_key+1)& (0+255),b	;volatile
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;ikb.c: 394: key[1].keyRead = keyRead_pin_key1;
  4197  00179C  0E6A               	movlw	low _keyRead_pin_key1
  4198  00179E  6F70               	movwf	(_key+16)& (0+255),b	;volatile
  4199  0017A0  0E25               	movlw	high _keyRead_pin_key1
  4200  0017A2  6F71               	movwf	(_key+17)& (0+255),b	;volatile
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;ikb.c: 395: key[2].keyRead = keyRead_pin_key2;
  4204  0017A4  0E60               	movlw	low _keyRead_pin_key2
  4205  0017A6  6F80               	movwf	(_key+32)& (0+255),b	;volatile
  4206  0017A8  0E25               	movlw	high _keyRead_pin_key2
  4207  0017AA  6F81               	movwf	(_key+33)& (0+255),b	;volatile
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;ikb.c: 396: key[3].keyRead = keyRead_pin_key3;
  4211  0017AC  0EC0               	movlw	low _keyRead_pin_key3
  4212  0017AE  6F90               	movwf	(_key+48)& (0+255),b	;volatile
  4213  0017B0  0E25               	movlw	high _keyRead_pin_key3
  4214  0017B2  6F91               	movwf	(_key+49)& (0+255),b	;volatile
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;ikb.c: 397: key[4].keyRead = keyRead_pin_key4;
  4218  0017B4  0EB8               	movlw	low _keyRead_pin_key4
  4219  0017B6  6FA0               	movwf	(_key+64)& (0+255),b	;volatile
  4220  0017B8  0E25               	movlw	high _keyRead_pin_key4
  4221  0017BA  6FA1               	movwf	(_key+65)& (0+255),b	;volatile
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;ikb.c: 400: for (i=0; i<5; i++)
  4225  0017BC  0E00               	movlw	0
  4226  0017BE  6E0B               	movwf	ikb_init@i,c
  4227  0017C0                     l3764:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;ikb.c: 401: {;ikb.c: 402: key[i].bf.OnKeyPressed = 1;
  4231  0017C0  500B               	movf	ikb_init@i,w,c
  4232  0017C2  0D10               	mullw	16
  4233  0017C4  50F3               	movf	prodl,w,c
  4234  0017C6  0F6A               	addlw	low (_key+10)
  4235  0017C8  6ED9               	movwf	fsr2l,c
  4236  0017CA  6ADA               	clrf	fsr2h,c
  4237  0017CC  82DF               	bsf	indf2,1,c
  4238                           
  4239                           ;ikb.c: 403: key[i].bf.OnKeyPressedAndKeyRelease = 0;
  4240  0017CE  500B               	movf	ikb_init@i,w,c
  4241  0017D0  0D10               	mullw	16
  4242  0017D2  50F3               	movf	prodl,w,c
  4243  0017D4  0F6A               	addlw	low (_key+10)
  4244  0017D6  6ED9               	movwf	fsr2l,c
  4245  0017D8  6ADA               	clrf	fsr2h,c
  4246  0017DA  94DF               	bcf	indf2,2,c
  4247                           
  4248                           ;ikb.c: 404: key[i].bf.AtTimeExpired = 0;
  4249  0017DC  500B               	movf	ikb_init@i,w,c
  4250  0017DE  0D10               	mullw	16
  4251  0017E0  50F3               	movf	prodl,w,c
  4252  0017E2  0F6A               	addlw	low (_key+10)
  4253  0017E4  6ED9               	movwf	fsr2l,c
  4254  0017E6  6ADA               	clrf	fsr2h,c
  4255  0017E8  96DF               	bcf	indf2,3,c
  4256                           
  4257                           ;ikb.c: 405: key[i].bf.Reptt = 0;
  4258  0017EA  500B               	movf	ikb_init@i,w,c
  4259  0017EC  0D10               	mullw	16
  4260  0017EE  50F3               	movf	prodl,w,c
  4261  0017F0  0F6A               	addlw	low (_key+10)
  4262  0017F2  6ED9               	movwf	fsr2l,c
  4263  0017F4  6ADA               	clrf	fsr2h,c
  4264  0017F6  9ADF               	bcf	indf2,5,c
  4265                           
  4266                           ;ikb.c: 406: key[i].num_group_x = 0;
  4267  0017F8  500B               	movf	ikb_init@i,w,c
  4268  0017FA  0D10               	mullw	16
  4269  0017FC  50F3               	movf	prodl,w,c
  4270  0017FE  0F69               	addlw	low (_key+9)
  4271  001800  6ED9               	movwf	fsr2l,c
  4272  001802  6ADA               	clrf	fsr2h,c
  4273  001804  0E00               	movlw	0
  4274  001806  6EDF               	movwf	indf2,c
  4275                           
  4276                           ;ikb.c: 407: key[i].repp.to_start= (uint16_t)500.0/5;
  4277  001808  500B               	movf	ikb_init@i,w,c
  4278  00180A  0D10               	mullw	16
  4279  00180C  50F3               	movf	prodl,w,c
  4280  00180E  0F6C               	addlw	low (_key+12)
  4281  001810  6ED9               	movwf	fsr2l,c
  4282  001812  6ADA               	clrf	fsr2h,c
  4283  001814  0E64               	movlw	100
  4284  001816  6EDE               	movwf	postinc2,c
  4285  001818  0E00               	movlw	0
  4286  00181A  6EDD               	movwf	postdec2,c
  4287                           
  4288                           ;ikb.c: 408: key[i].repp.after_start = (uint16_t)200.0/5;
  4289  00181C  500B               	movf	ikb_init@i,w,c
  4290  00181E  0D10               	mullw	16
  4291  001820  50F3               	movf	prodl,w,c
  4292  001822  0F6E               	addlw	low (_key+14)
  4293  001824  6ED9               	movwf	fsr2l,c
  4294  001826  6ADA               	clrf	fsr2h,c
  4295  001828  0E28               	movlw	40
  4296  00182A  6EDE               	movwf	postinc2,c
  4297  00182C  0E00               	movlw	0
  4298  00182E  6EDD               	movwf	postdec2,c
  4299                           
  4300                           ; BSR set to: 0
  4301  001830  2A0B               	incf	ikb_init@i,f,c
  4302                           
  4303                           ; BSR set to: 0
  4304  001832  500B               	movf	ikb_init@i,w,c
  4305  001834  0A80               	xorlw	128
  4306  001836  0F7B               	addlw	-133
  4307  001838  B0D8               	btfsc	status,0,c
  4308  00183A  0012               	return	
  4309  00183C  D7C1               	goto	l3764
  4310  00183E                     __end_of_ikb_init:
  4311                           	opt callstack 0
  4312                           
  4313 ;; *************** function _disp7s_job *****************
  4314 ;; Defined at:
  4315 ;;		line 128 in file "display.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  pq              1   20[COMRAM] char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0
  4330 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4331 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4332 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4333 ;;Total ram usage:        3 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    7
  4336 ;; This function calls:
  4337 ;;		_disp7s_mux0_off
  4338 ;;		_disp7s_mux0_on
  4339 ;;		_disp7s_mux1_off
  4340 ;;		_disp7s_mux1_on
  4341 ;;		_disp7s_mux2_off
  4342 ;;		_disp7s_mux2_on
  4343 ;;		_disp7s_mux3_off
  4344 ;;		_disp7s_mux3_on
  4345 ;;		_disp7s_mux4_off
  4346 ;;		_disp7s_mux4_on
  4347 ;;		_disp7s_mux_Q
  4348 ;; This function is called by:
  4349 ;;		_main
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text23
  4354  001CE2                     __ptext23:
  4355                           	opt callstack 0
  4356  001CE2                     _disp7s_job:
  4357                           	opt callstack 23
  4358                           
  4359                           ;display.c: 134: pq= q-1;
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;incstack = 0
  4363  001CE2  044F               	decf	disp7s_job@q,w,c
  4364  001CE4  6E15               	movwf	disp7s_job@pq,c
  4365                           
  4366                           ;display.c: 135: if (pq<0)
  4367  001CE6  AE15               	btfss	disp7s_job@pq,7,c
  4368  001CE8  D002               	goto	l3840
  4369                           
  4370                           ;display.c: 136: {pq=(2 + 3)-1;}
  4371  001CEA  0E04               	movlw	4
  4372  001CEC  6E15               	movwf	disp7s_job@pq,c
  4373  001CEE                     l3840:
  4374                           
  4375                           ;display.c: 137: disp7s_mux[pq].Qonoff[0]();
  4376  001CEE  5015               	movf	disp7s_job@pq,w,c
  4377  001CF0  0D04               	mullw	4
  4378  001CF2  50F3               	movf	prodl,w,c
  4379  001CF4  0FD0               	addlw	low _disp7s_mux
  4380  001CF6  6ED9               	movwf	fsr2l,c
  4381  001CF8  6ADA               	clrf	fsr2h,c
  4382  001CFA  D801               	call	u3918
  4383  001CFC  D00A               	goto	u3919
  4384  001CFE                     u3918:
  4385  001CFE  0005               	push	
  4386  001D00  6EFA               	movwf	pclath,c
  4387  001D02  50DE               	movf	postinc2,w,c
  4388  001D04  6EFD               	movwf	tosl,c
  4389  001D06  50DE               	movf	postinc2,w,c
  4390  001D08  6EFE               	movwf	tosh,c
  4391  001D0A  50F8               	movf	tblptru,w,c
  4392  001D0C  6EFF               	movwf	tosu,c
  4393  001D0E  50FA               	movf	pclath,w,c
  4394  001D10  0012               	return		;indir
  4395  001D12                     u3919:
  4396                           
  4397                           ;display.c: 139: if (q < 3)
  4398  001D12  504F               	movf	disp7s_job@q,w,c
  4399  001D14  0A80               	xorlw	128
  4400  001D16  0F7D               	addlw	-131
  4401  001D18  B0D8               	btfsc	status,0,c
  4402  001D1A  D007               	goto	l3846
  4403                           
  4404                           ;display.c: 140: {LATB = pulsonic.disp7s.qty[q];}
  4405  001D1C  0E3B               	movlw	low (_pulsonic+59)
  4406  001D1E  244F               	addwf	disp7s_job@q,w,c
  4407  001D20  6ED9               	movwf	fsr2l,c
  4408  001D22  6ADA               	clrf	fsr2h,c
  4409  001D24  0E01               	movlw	high (_pulsonic+59)
  4410  001D26  22DA               	addwfc	fsr2h,f,c
  4411  001D28  D00B               	goto	L4
  4412  001D2A                     l3846:
  4413                           
  4414                           ;display.c: 141: else;display.c: 142: {LATB = pulsonic.disp7s.mode[q-3];}
  4415  001D2A  C04F  F013         	movff	disp7s_job@q,??_disp7s_job
  4416  001D2E  6A14               	clrf	(??_disp7s_job+1)& (0+255),c
  4417  001D30  BE13               	btfsc	??_disp7s_job& (0+255),7,c
  4418  001D32  0614               	decf	(??_disp7s_job+1)& (0+255),f,c
  4419  001D34  0E3B               	movlw	low (_pulsonic+59)
  4420  001D36  2413               	addwf	??_disp7s_job,w,c
  4421  001D38  6ED9               	movwf	fsr2l,c
  4422  001D3A  0E01               	movlw	high (_pulsonic+59)
  4423  001D3C  2014               	addwfc	??_disp7s_job+1,w,c
  4424  001D3E  6EDA               	movwf	fsr2h,c
  4425  001D40                     L4:
  4426  001D40  50DF               	movf	indf2,w,c
  4427  001D42  6E8A               	movwf	3978,c	;volatile
  4428                           
  4429                           ;display.c: 144: disp7s_mux_Q(q);
  4430  001D44  504F               	movf	disp7s_job@q,w,c
  4431  001D46  ECC9  F00C         	call	_disp7s_mux_Q
  4432                           
  4433                           ;display.c: 146: if (++q == (2 + 3))
  4434  001D4A  2A4F               	incf	disp7s_job@q,f,c
  4435  001D4C  0E05               	movlw	5
  4436  001D4E  184F               	xorwf	disp7s_job@q,w,c
  4437  001D50  A4D8               	btfss	status,2,c
  4438  001D52  0012               	return	
  4439                           
  4440                           ;display.c: 147: {q=0x0;}
  4441  001D54  0E00               	movlw	0
  4442  001D56  6E4F               	movwf	disp7s_job@q,c
  4443  001D58  0012               	return		;funcret
  4444  001D5A                     __end_of_disp7s_job:
  4445                           	opt callstack 0
  4446                           
  4447 ;; *************** function _disp7s_mux_Q *****************
  4448 ;; Defined at:
  4449 ;;		line 97 in file "display.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  q               1    wreg     char 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  q               1   16[COMRAM] char 
  4454 ;;  i               1   17[COMRAM] char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4464 ;;      Params:         0       0       0       0       0       0       0       0       0
  4465 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4466 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4467 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4468 ;;Total ram usage:        8 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    6
  4471 ;; This function calls:
  4472 ;;		_disp7s_mux0_off
  4473 ;;		_disp7s_mux0_on
  4474 ;;		_disp7s_mux1_off
  4475 ;;		_disp7s_mux1_on
  4476 ;;		_disp7s_mux2_off
  4477 ;;		_disp7s_mux2_on
  4478 ;;		_disp7s_mux3_off
  4479 ;;		_disp7s_mux3_on
  4480 ;;		_disp7s_mux4_off
  4481 ;;		_disp7s_mux4_on
  4482 ;; This function is called by:
  4483 ;;		_disp7s_job
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text24
  4488  001992                     __ptext24:
  4489                           	opt callstack 0
  4490  001992                     _disp7s_mux_Q:
  4491                           	opt callstack 23
  4492                           
  4493                           ;incstack = 0
  4494                           ;disp7s_mux_Q@q stored from wreg
  4495  001992  6E11               	movwf	disp7s_mux_Q@q,c
  4496                           
  4497                           ;display.c: 99: int8_t i;;display.c: 100: for (i=0; i< (2 + 3); i++)
  4498  001994  0E00               	movlw	0
  4499  001996  6E12               	movwf	disp7s_mux_Q@i,c
  4500  001998                     l3642:
  4501                           
  4502                           ;display.c: 101: {;display.c: 102: if ( (1<<i) & (1<<q) )
  4503  001998  C011  F00B         	movff	disp7s_mux_Q@q,??_disp7s_mux_Q
  4504  00199C  0E01               	movlw	1
  4505  00199E  6E0C               	movwf	(??_disp7s_mux_Q+1)& (0+255),c
  4506  0019A0  0E00               	movlw	0
  4507  0019A2  6E0D               	movwf	(??_disp7s_mux_Q+2)& (0+255),c
  4508  0019A4  2A0B               	incf	??_disp7s_mux_Q,f,c
  4509  0019A6  D003               	goto	u3624
  4510  0019A8                     u3625:
  4511  0019A8  90D8               	bcf	status,0,c
  4512  0019AA  360C               	rlcf	??_disp7s_mux_Q+1,f,c
  4513  0019AC  360D               	rlcf	??_disp7s_mux_Q+2,f,c
  4514  0019AE                     u3624:
  4515  0019AE  2E0B               	decfsz	??_disp7s_mux_Q,f,c
  4516  0019B0  D7FB               	goto	u3625
  4517  0019B2  C012  F00E         	movff	disp7s_mux_Q@i,??_disp7s_mux_Q+3
  4518  0019B6  0E01               	movlw	1
  4519  0019B8  6E0F               	movwf	(??_disp7s_mux_Q+4)& (0+255),c
  4520  0019BA  0E00               	movlw	0
  4521  0019BC  6E10               	movwf	(??_disp7s_mux_Q+5)& (0+255),c
  4522  0019BE  2A0E               	incf	??_disp7s_mux_Q+3,f,c
  4523  0019C0  D003               	goto	u3634
  4524  0019C2                     u3635:
  4525  0019C2  90D8               	bcf	status,0,c
  4526  0019C4  360F               	rlcf	??_disp7s_mux_Q+4,f,c
  4527  0019C6  3610               	rlcf	??_disp7s_mux_Q+5,f,c
  4528  0019C8                     u3634:
  4529  0019C8  2E0E               	decfsz	??_disp7s_mux_Q+3,f,c
  4530  0019CA  D7FB               	goto	u3635
  4531  0019CC  500C               	movf	??_disp7s_mux_Q+1,w,c
  4532  0019CE  160F               	andwf	??_disp7s_mux_Q+4,f,c
  4533  0019D0  500D               	movf	??_disp7s_mux_Q+2,w,c
  4534  0019D2  1610               	andwf	??_disp7s_mux_Q+5,f,c
  4535  0019D4  500F               	movf	??_disp7s_mux_Q+4,w,c
  4536  0019D6  1010               	iorwf	??_disp7s_mux_Q+5,w,c
  4537  0019D8  B4D8               	btfsc	status,2,c
  4538  0019DA  D012               	goto	l3646
  4539                           
  4540                           ;display.c: 103: disp7s_mux[i].Qonoff[1]();
  4541  0019DC  5012               	movf	disp7s_mux_Q@i,w,c
  4542  0019DE  0D04               	mullw	4
  4543  0019E0  50F3               	movf	prodl,w,c
  4544  0019E2  0FD2               	addlw	low (_disp7s_mux+2)
  4545  0019E4  6ED9               	movwf	fsr2l,c
  4546  0019E6  6ADA               	clrf	fsr2h,c
  4547  0019E8  D801               	call	u3658
  4548  0019EA  D01C               	goto	u3669
  4549  0019EC                     u3658:
  4550  0019EC  0005               	push	
  4551  0019EE  6EFA               	movwf	pclath,c
  4552  0019F0  50DE               	movf	postinc2,w,c
  4553  0019F2  6EFD               	movwf	tosl,c
  4554  0019F4  50DE               	movf	postinc2,w,c
  4555  0019F6  6EFE               	movwf	tosh,c
  4556  0019F8  50F8               	movf	tblptru,w,c
  4557  0019FA  6EFF               	movwf	tosu,c
  4558  0019FC  50FA               	movf	pclath,w,c
  4559  0019FE  0012               	return		;indir
  4560  001A00                     l3646:
  4561                           
  4562                           ;display.c: 104: else;display.c: 105: disp7s_mux[i].Qonoff[0]();
  4563  001A00  5012               	movf	disp7s_mux_Q@i,w,c
  4564  001A02  0D04               	mullw	4
  4565  001A04  50F3               	movf	prodl,w,c
  4566  001A06  0FD0               	addlw	low _disp7s_mux
  4567  001A08  6ED9               	movwf	fsr2l,c
  4568  001A0A  6ADA               	clrf	fsr2h,c
  4569  001A0C  D801               	call	u3668
  4570  001A0E  D00A               	goto	u3669
  4571  001A10                     u3668:
  4572  001A10  0005               	push	
  4573  001A12  6EFA               	movwf	pclath,c
  4574  001A14  50DE               	movf	postinc2,w,c
  4575  001A16  6EFD               	movwf	tosl,c
  4576  001A18  50DE               	movf	postinc2,w,c
  4577  001A1A  6EFE               	movwf	tosh,c
  4578  001A1C  50F8               	movf	tblptru,w,c
  4579  001A1E  6EFF               	movwf	tosu,c
  4580  001A20  50FA               	movf	pclath,w,c
  4581  001A22  0012               	return		;indir
  4582  001A24                     u3669:
  4583  001A24  2A12               	incf	disp7s_mux_Q@i,f,c
  4584  001A26  5012               	movf	disp7s_mux_Q@i,w,c
  4585  001A28  0A80               	xorlw	128
  4586  001A2A  0F7B               	addlw	-133
  4587  001A2C  B0D8               	btfsc	status,0,c
  4588  001A2E  0012               	return	
  4589  001A30  D7B3               	goto	l3642
  4590  001A32                     __end_of_disp7s_mux_Q:
  4591                           	opt callstack 0
  4592                           
  4593 ;; *************** function _disp7s_init *****************
  4594 ;; Defined at:
  4595 ;;		line 112 in file "display.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  i               1   11[COMRAM] char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4604 ;; Tracked objects:
  4605 ;;		On entry : 3F/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0
  4610 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4612 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4613 ;;Total ram usage:        1 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    7
  4616 ;; This function calls:
  4617 ;;		_disp7s_mux_init
  4618 ;; This function is called by:
  4619 ;;		_main
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text25
  4624  001F6C                     __ptext25:
  4625                           	opt callstack 0
  4626  001F6C                     _disp7s_init:
  4627                           	opt callstack 23
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;display.c: 114: int8_t i;;display.c: 115: for (i=0; i<2; i++)
  4631                           
  4632                           ;incstack = 0
  4633  001F6C  0E00               	movlw	0
  4634  001F6E  6E0C               	movwf	disp7s_init@i,c
  4635  001F70                     l3776:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;display.c: 116: {pulsonic.disp7s.mode[i] = DISP7S_CHARS[OFF];}
  4639  001F70  0E0F               	movlw	low _DISP7S_CHARS
  4640  001F72  6EF6               	movwf	tblptrl,c
  4641  001F74                     	if	1	;There is more than 1 active tblptr byte
  4642  001F74  0E08               	movlw	high _DISP7S_CHARS
  4643  001F76  6EF7               	movwf	tblptrh,c
  4644  001F78                     	endif
  4645  001F78                     	if	0	;There are less than 3 active tblptr bytes
  4646  001F78                     	endif
  4647  001F78  0E3E               	movlw	low (_pulsonic+62)
  4648  001F7A  240C               	addwf	disp7s_init@i,w,c
  4649  001F7C  6ED9               	movwf	fsr2l,c
  4650  001F7E  6ADA               	clrf	fsr2h,c
  4651  001F80  0E01               	movlw	high (_pulsonic+62)
  4652  001F82  22DA               	addwfc	fsr2h,f,c
  4653  001F84  0008               	tblrd		*
  4654  001F86  CFF5 FFDF          	movff	tablat,indf2
  4655                           
  4656                           ; BSR set to: 0
  4657  001F8A  2A0C               	incf	disp7s_init@i,f,c
  4658                           
  4659                           ; BSR set to: 0
  4660  001F8C  500C               	movf	disp7s_init@i,w,c
  4661  001F8E  0A80               	xorlw	128
  4662  001F90  0F7E               	addlw	-130
  4663  001F92  A0D8               	btfss	status,0,c
  4664  001F94  D7ED               	goto	l3776
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;display.c: 118: for (i=0; i<3; i++)
  4668  001F96  0E00               	movlw	0
  4669  001F98  6E0C               	movwf	disp7s_init@i,c
  4670  001F9A                     l3788:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;display.c: 119: {pulsonic.disp7s.qty[i] = DISP7S_CHARS[OFF];}
  4674  001F9A  0E0F               	movlw	low _DISP7S_CHARS
  4675  001F9C  6EF6               	movwf	tblptrl,c
  4676  001F9E                     	if	1	;There is more than 1 active tblptr byte
  4677  001F9E  0E08               	movlw	high _DISP7S_CHARS
  4678  001FA0  6EF7               	movwf	tblptrh,c
  4679  001FA2                     	endif
  4680  001FA2                     	if	0	;There are less than 3 active tblptr bytes
  4681  001FA2                     	endif
  4682  001FA2  0E3B               	movlw	low (_pulsonic+59)
  4683  001FA4  240C               	addwf	disp7s_init@i,w,c
  4684  001FA6  6ED9               	movwf	fsr2l,c
  4685  001FA8  6ADA               	clrf	fsr2h,c
  4686  001FAA  0E01               	movlw	high (_pulsonic+59)
  4687  001FAC  22DA               	addwfc	fsr2h,f,c
  4688  001FAE  0008               	tblrd		*
  4689  001FB0  CFF5 FFDF          	movff	tablat,indf2
  4690                           
  4691                           ; BSR set to: 0
  4692  001FB4  2A0C               	incf	disp7s_init@i,f,c
  4693                           
  4694                           ; BSR set to: 0
  4695  001FB6  500C               	movf	disp7s_init@i,w,c
  4696  001FB8  0A80               	xorlw	128
  4697  001FBA  0F7D               	addlw	-131
  4698  001FBC  A0D8               	btfss	status,0,c
  4699  001FBE  D7ED               	goto	l3788
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;display.c: 121: TRISB = 0x00;
  4703  001FC0  0E00               	movlw	0
  4704  001FC2  6E93               	movwf	3987,c	;volatile
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;display.c: 122: disp7s_mux_init();
  4708  001FC4  EC54  F011         	call	_disp7s_mux_init	;wreg free
  4709  001FC8  0012               	return		;funcret
  4710  001FCA                     __end_of_disp7s_init:
  4711                           	opt callstack 0
  4712                           
  4713 ;; *************** function _disp7s_mux_init *****************
  4714 ;; Defined at:
  4715 ;;		line 83 in file "display.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  i               1   10[COMRAM] char 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 3F/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0
  4730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4732 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4733 ;;Total ram usage:        1 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    6
  4736 ;; This function calls:
  4737 ;;		_disp7s_mux0_off
  4738 ;;		_disp7s_mux0_on
  4739 ;;		_disp7s_mux1_off
  4740 ;;		_disp7s_mux1_on
  4741 ;;		_disp7s_mux2_off
  4742 ;;		_disp7s_mux2_on
  4743 ;;		_disp7s_mux3_off
  4744 ;;		_disp7s_mux3_on
  4745 ;;		_disp7s_mux4_off
  4746 ;;		_disp7s_mux4_on
  4747 ;; This function is called by:
  4748 ;;		_disp7s_init
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text26
  4753  0022A8                     __ptext26:
  4754                           	opt callstack 0
  4755  0022A8                     _disp7s_mux_init:
  4756                           	opt callstack 23
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;display.c: 85: int8_t i;;display.c: 86: for (i=0; i< (2 + 3); i++)
  4760                           
  4761                           ;incstack = 0
  4762  0022A8  0E00               	movlw	0
  4763  0022AA  6E0B               	movwf	disp7s_mux_init@i,c
  4764  0022AC                     l3628:
  4765                           
  4766                           ;display.c: 87: {;display.c: 88: disp7s_mux[i].Qonoff[0]();
  4767  0022AC  500B               	movf	disp7s_mux_init@i,w,c
  4768  0022AE  0D04               	mullw	4
  4769  0022B0  50F3               	movf	prodl,w,c
  4770  0022B2  0FD0               	addlw	low _disp7s_mux
  4771  0022B4  6ED9               	movwf	fsr2l,c
  4772  0022B6  6ADA               	clrf	fsr2h,c
  4773  0022B8  D801               	call	u3608
  4774  0022BA  D00A               	goto	u3609
  4775  0022BC                     u3608:
  4776  0022BC  0005               	push	
  4777  0022BE  6EFA               	movwf	pclath,c
  4778  0022C0  50DE               	movf	postinc2,w,c
  4779  0022C2  6EFD               	movwf	tosl,c
  4780  0022C4  50DE               	movf	postinc2,w,c
  4781  0022C6  6EFE               	movwf	tosh,c
  4782  0022C8  50F8               	movf	tblptru,w,c
  4783  0022CA  6EFF               	movwf	tosu,c
  4784  0022CC  50FA               	movf	pclath,w,c
  4785  0022CE  0012               	return		;indir
  4786  0022D0                     u3609:
  4787  0022D0  2A0B               	incf	disp7s_mux_init@i,f,c
  4788  0022D2  500B               	movf	disp7s_mux_init@i,w,c
  4789  0022D4  0A80               	xorlw	128
  4790  0022D6  0F7B               	addlw	-133
  4791  0022D8  A0D8               	btfss	status,0,c
  4792  0022DA  D7E8               	goto	l3628
  4793  0022DC  9892               	bcf	3986,4,c	;volatile
  4794                           
  4795                           ;display.c: 91: do{TRISA &= ~(1<<3);}while(0);
  4796  0022DE  9692               	bcf	3986,3,c	;volatile
  4797                           
  4798                           ;display.c: 92: do{TRISA &= ~(1<<2);}while(0);
  4799  0022E0  9492               	bcf	3986,2,c	;volatile
  4800                           
  4801                           ;display.c: 93: do{TRISA &= ~(1<<1);}while(0);
  4802  0022E2  9292               	bcf	3986,1,c	;volatile
  4803                           
  4804                           ;display.c: 94: do{TRISA &= ~(1<<0);}while(0);
  4805  0022E4  9092               	bcf	3986,0,c	;volatile
  4806  0022E6  0012               	return		;funcret
  4807  0022E8                     __end_of_disp7s_mux_init:
  4808                           	opt callstack 0
  4809                           
  4810 ;; *************** function _disp7s_mux4_off *****************
  4811 ;; Defined at:
  4812 ;;		line 41 in file "display.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    5
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_disp7s_mux_init
  4837 ;;		_disp7s_mux_Q
  4838 ;;		_disp7s_job
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text27
  4843  0025C6                     __ptext27:
  4844                           	opt callstack 0
  4845  0025C6                     _disp7s_mux4_off:
  4846                           	opt callstack 23
  4847                           
  4848                           ;incstack = 0
  4849                           ;display.c: 43: do{LATA |= 1<<0;}while(0);
  4850  0025C6  8089               	bsf	3977,0,c	;volatile
  4851  0025C8  0012               	return		;funcret
  4852  0025CA                     __end_of_disp7s_mux4_off:
  4853                           	opt callstack 0
  4854                           
  4855 ;; *************** function _disp7s_mux3_on *****************
  4856 ;; Defined at:
  4857 ;;		line 36 in file "display.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4874 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    5
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_disp7s_mux_init
  4882 ;;		_disp7s_mux_Q
  4883 ;;		_disp7s_job
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text28
  4888  0025CA                     __ptext28:
  4889                           	opt callstack 0
  4890  0025CA                     _disp7s_mux3_on:
  4891                           	opt callstack 23
  4892                           
  4893                           ;incstack = 0
  4894                           ;display.c: 38: do{LATA &= ~(1<<1);}while(0);
  4895  0025CA  9289               	bcf	3977,1,c	;volatile
  4896  0025CC  0012               	return		;funcret
  4897  0025CE                     __end_of_disp7s_mux3_on:
  4898                           	opt callstack 0
  4899                           
  4900 ;; *************** function _disp7s_mux3_off *****************
  4901 ;; Defined at:
  4902 ;;		line 32 in file "display.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4919 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    5
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_disp7s_mux_init
  4927 ;;		_disp7s_mux_Q
  4928 ;;		_disp7s_job
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text29
  4933  0025CE                     __ptext29:
  4934                           	opt callstack 0
  4935  0025CE                     _disp7s_mux3_off:
  4936                           	opt callstack 23
  4937                           
  4938                           ;incstack = 0
  4939                           ;display.c: 34: do{LATA |= 1<<1;}while(0);
  4940  0025CE  8289               	bsf	3977,1,c	;volatile
  4941  0025D0  0012               	return		;funcret
  4942  0025D2                     __end_of_disp7s_mux3_off:
  4943                           	opt callstack 0
  4944                           
  4945 ;; *************** function _disp7s_mux2_on *****************
  4946 ;; Defined at:
  4947 ;;		line 27 in file "display.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		status,2, status,0
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4964 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4965 ;;Total ram usage:        0 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    5
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_disp7s_mux_init
  4972 ;;		_disp7s_mux_Q
  4973 ;;		_disp7s_job
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text30
  4978  0025D2                     __ptext30:
  4979                           	opt callstack 0
  4980  0025D2                     _disp7s_mux2_on:
  4981                           	opt callstack 23
  4982                           
  4983                           ;incstack = 0
  4984                           ;display.c: 29: do{LATA &= ~(1<<2);}while(0);
  4985  0025D2  9489               	bcf	3977,2,c	;volatile
  4986  0025D4  0012               	return		;funcret
  4987  0025D6                     __end_of_disp7s_mux2_on:
  4988                           	opt callstack 0
  4989                           
  4990 ;; *************** function _disp7s_mux2_off *****************
  4991 ;; Defined at:
  4992 ;;		line 23 in file "display.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;		None
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5010 ;;Total ram usage:        0 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    5
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_disp7s_mux_init
  5017 ;;		_disp7s_mux_Q
  5018 ;;		_disp7s_job
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text31
  5023  0025D6                     __ptext31:
  5024                           	opt callstack 0
  5025  0025D6                     _disp7s_mux2_off:
  5026                           	opt callstack 23
  5027                           
  5028                           ;incstack = 0
  5029                           ;display.c: 25: do{LATA |= 1<<2;}while(0);
  5030  0025D6  8489               	bsf	3977,2,c	;volatile
  5031  0025D8  0012               	return		;funcret
  5032  0025DA                     __end_of_disp7s_mux2_off:
  5033                           	opt callstack 0
  5034                           
  5035 ;; *************** function _disp7s_mux1_on *****************
  5036 ;; Defined at:
  5037 ;;		line 18 in file "display.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		status,2, status,0
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5054 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    5
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_disp7s_mux_init
  5062 ;;		_disp7s_mux_Q
  5063 ;;		_disp7s_job
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text32
  5068  0025DA                     __ptext32:
  5069                           	opt callstack 0
  5070  0025DA                     _disp7s_mux1_on:
  5071                           	opt callstack 23
  5072                           
  5073                           ;incstack = 0
  5074                           ;display.c: 20: do{LATA &= ~(1<<3);}while(0);
  5075  0025DA  9689               	bcf	3977,3,c	;volatile
  5076  0025DC  0012               	return		;funcret
  5077  0025DE                     __end_of_disp7s_mux1_on:
  5078                           	opt callstack 0
  5079                           
  5080 ;; *************** function _disp7s_mux1_off *****************
  5081 ;; Defined at:
  5082 ;;		line 14 in file "display.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5096 ;;      Params:         0       0       0       0       0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5099 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    5
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_disp7s_mux_init
  5107 ;;		_disp7s_mux_Q
  5108 ;;		_disp7s_job
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text33
  5113  0025DE                     __ptext33:
  5114                           	opt callstack 0
  5115  0025DE                     _disp7s_mux1_off:
  5116                           	opt callstack 23
  5117                           
  5118                           ;incstack = 0
  5119                           ;display.c: 16: do{LATA |= 1<<3;}while(0);
  5120  0025DE  8689               	bsf	3977,3,c	;volatile
  5121  0025E0  0012               	return		;funcret
  5122  0025E2                     __end_of_disp7s_mux1_off:
  5123                           	opt callstack 0
  5124                           
  5125 ;; *************** function _disp7s_mux0_on *****************
  5126 ;; Defined at:
  5127 ;;		line 9 in file "display.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		status,2, status,0
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5144 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5145 ;;Total ram usage:        0 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    5
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_disp7s_mux_init
  5152 ;;		_disp7s_mux_Q
  5153 ;;		_disp7s_job
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text34
  5158  0025E2                     __ptext34:
  5159                           	opt callstack 0
  5160  0025E2                     _disp7s_mux0_on:
  5161                           	opt callstack 23
  5162                           
  5163                           ;incstack = 0
  5164                           ;display.c: 11: do{LATA &= ~(1<<4);}while(0);
  5165  0025E2  9889               	bcf	3977,4,c	;volatile
  5166  0025E4  0012               	return		;funcret
  5167  0025E6                     __end_of_disp7s_mux0_on:
  5168                           	opt callstack 0
  5169                           
  5170 ;; *************** function _disp7s_mux0_off *****************
  5171 ;; Defined at:
  5172 ;;		line 5 in file "display.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		status,2, status,0
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5189 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    5
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_disp7s_mux_init
  5197 ;;		_disp7s_mux_Q
  5198 ;;		_disp7s_job
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text35
  5203  0025E6                     __ptext35:
  5204                           	opt callstack 0
  5205  0025E6                     _disp7s_mux0_off:
  5206                           	opt callstack 23
  5207                           
  5208                           ;incstack = 0
  5209                           ;display.c: 7: do{LATA |= 1<<4;}while(0);
  5210  0025E6  8889               	bsf	3977,4,c	;volatile
  5211  0025E8  0012               	return		;funcret
  5212  0025EA                     __end_of_disp7s_mux0_off:
  5213                           	opt callstack 0
  5214                           
  5215 ;; *************** function _disp7s_mux4_on *****************
  5216 ;; Defined at:
  5217 ;;		line 45 in file "display.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;		None
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		status,2, status,0
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5231 ;;      Params:         0       0       0       0       0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5234 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5235 ;;Total ram usage:        0 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    5
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_disp7s_mux_init
  5242 ;;		_disp7s_mux_Q
  5243 ;;		_disp7s_job
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text36
  5248  0025EA                     __ptext36:
  5249                           	opt callstack 0
  5250  0025EA                     _disp7s_mux4_on:
  5251                           	opt callstack 23
  5252                           
  5253                           ;incstack = 0
  5254                           ;display.c: 47: do{LATA &= ~(1<<0);}while(0);
  5255  0025EA  9089               	bcf	3977,0,c	;volatile
  5256  0025EC  0012               	return		;funcret
  5257  0025EE                     __end_of_disp7s_mux4_on:
  5258                           	opt callstack 0
  5259                           
  5260 ;; *************** function _autoMode_job *****************
  5261 ;; Defined at:
  5262 ;;		line 29 in file "automode.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  cod_ret         1   32[COMRAM] char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      char 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 3F/0
  5273 ;;		On exit  : 3F/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0
  5277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        1 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    7
  5283 ;; This function calls:
  5284 ;;		_autoMode_kb
  5285 ;;		_mpap_isIdle
  5286 ;;		_mpap_movetoNozzle
  5287 ;;		_mpap_setupToHomming
  5288 ;;		_nozzle_isEnabled
  5289 ;;		_pump_isIdle
  5290 ;;		_pump_setTick
  5291 ;; This function is called by:
  5292 ;;		_main
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text37
  5297  0018EC                     __ptext37:
  5298                           	opt callstack 0
  5299  0018EC                     _autoMode_job:
  5300                           	opt callstack 23
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;automode.c: 31: int8_t cod_ret = 0;
  5304                           
  5305                           ;incstack = 0
  5306  0018EC  0E00               	movlw	0
  5307  0018EE  6E21               	movwf	autoMode_job@cod_ret,c
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;automode.c: 33: if (smain.focus.kb == FOCUS_KB_AUTOMODE)
  5311  0018F0  05B9               	decf	(_smain+1)& (0+255),w,b	;volatile
  5312  0018F2  A4D8               	btfss	status,2,c
  5313  0018F4  D003               	goto	l4706
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;automode.c: 34: {;automode.c: 35: cod_ret = autoMode_kb();
  5317  0018F6  ECAD  F00E         	call	_autoMode_kb	;wreg free
  5318  0018FA  6E21               	movwf	autoMode_job@cod_ret,c
  5319  0018FC                     l4706:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;automode.c: 36: };automode.c: 38: if (autoMode.sm0 == 0)
  5323  0018FC  51BE               	movf	(_autoMode+1)& (0+255),w,b
  5324  0018FE  A4D8               	btfss	status,2,c
  5325  001900  D005               	goto	l4712
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;automode.c: 39: {;automode.c: 40: mpap_setupToHomming();
  5329  001902  EC75  F012         	call	_mpap_setupToHomming	;wreg free
  5330  001906                     l4710:
  5331                           
  5332                           ;automode.c: 41: autoMode.sm0++;
  5333  001906  0100               	movlb	0	; () banked
  5334  001908  2BBE               	incf	(_autoMode+1)& (0+255),f,b
  5335                           
  5336                           ;automode.c: 42: }
  5337  00190A  D041               	goto	l751
  5338  00190C                     l4712:
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;automode.c: 43: else if (autoMode.sm0 == 1)
  5342  00190C  05BE               	decf	(_autoMode+1)& (0+255),w,b
  5343  00190E  A4D8               	btfss	status,2,c
  5344  001910  D006               	goto	l4718
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;automode.c: 44: {;automode.c: 45: if (mpap_isIdle())
  5348  001912  EC97  F012         	call	_mpap_isIdle	;wreg free
  5349  001916  0900               	iorlw	0
  5350  001918  A4D8               	btfss	status,2,c
  5351  00191A  D7F5               	goto	l4710
  5352  00191C  D038               	goto	l751
  5353  00191E                     l4718:
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;automode.c: 51: else if (autoMode.sm0 == 2)
  5357  00191E  0E02               	movlw	2
  5358  001920  19BE               	xorwf	(_autoMode+1)& (0+255),w,b
  5359  001922  A4D8               	btfss	status,2,c
  5360  001924  D019               	goto	l4730
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;automode.c: 52: {;automode.c: 53: if (nozzle_isEnabled(autoMode.n))
  5364  001926  51BD               	movf	_autoMode& (0+255),w,b
  5365  001928  6E1F               	movwf	nozzle_isEnabled@n,c
  5366  00192A  6A20               	clrf	nozzle_isEnabled@n+1,c
  5367  00192C  BE1F               	btfsc	nozzle_isEnabled@n,7,c
  5368  00192E  0620               	decf	nozzle_isEnabled@n+1,f,c
  5369  001930  EC85  F010         	call	_nozzle_isEnabled	;wreg free
  5370  001934  0900               	iorlw	0
  5371  001936  B4D8               	btfsc	status,2,c
  5372  001938  D006               	goto	l4726
  5373                           
  5374                           ;automode.c: 54: {;automode.c: 55: mpap_movetoNozzle(autoMode.n);
  5375  00193A  0100               	movlb	0	; () banked
  5376  00193C  51BD               	movf	_autoMode& (0+255),w,b
  5377  00193E  ECC4  F011         	call	_mpap_movetoNozzle
  5378                           
  5379                           ;automode.c: 56: autoMode.sm0++;
  5380  001942  0100               	movlb	0	; () banked
  5381  001944  2BBE               	incf	(_autoMode+1)& (0+255),f,b
  5382  001946                     l4726:
  5383                           
  5384                           ;automode.c: 57: };automode.c: 59: if (++autoMode.n == 8)
  5385  001946  0100               	movlb	0	; () banked
  5386  001948  2BBD               	incf	_autoMode& (0+255),f,b
  5387  00194A  0E08               	movlw	8
  5388  00194C  19BD               	xorwf	_autoMode& (0+255),w,b
  5389  00194E  A4D8               	btfss	status,2,c
  5390  001950  D01E               	goto	l751
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;automode.c: 60: {autoMode.n = 0x00;}
  5394  001952  0E00               	movlw	0
  5395  001954  6FBD               	movwf	_autoMode& (0+255),b
  5396  001956  D01B               	goto	l751
  5397  001958                     l4730:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;automode.c: 62: else if (autoMode.sm0 == 3)
  5401  001958  0E03               	movlw	3
  5402  00195A  19BE               	xorwf	(_autoMode+1)& (0+255),w,b
  5403  00195C  A4D8               	btfss	status,2,c
  5404  00195E  D00C               	goto	l4738
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;automode.c: 63: {;automode.c: 64: if (mpap_isIdle())
  5408  001960  EC97  F012         	call	_mpap_isIdle	;wreg free
  5409  001964  0900               	iorlw	0
  5410  001966  B4D8               	btfsc	status,2,c
  5411  001968  D012               	goto	l751
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;automode.c: 65: {;automode.c: 66: pump_setTick(1);
  5415  00196A  0E00               	movlw	0
  5416  00196C  6E0C               	movwf	pump_setTick@ticks+1,c
  5417  00196E  0E01               	movlw	1
  5418  001970  6E0B               	movwf	pump_setTick@ticks,c
  5419  001972  ECBA  F012         	call	_pump_setTick	;wreg free
  5420  001976  D7C7               	goto	l4710
  5421  001978                     l4738:
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;automode.c: 70: else if (autoMode.sm0 == 4)
  5425  001978  0E04               	movlw	4
  5426  00197A  19BE               	xorwf	(_autoMode+1)& (0+255),w,b
  5427  00197C  A4D8               	btfss	status,2,c
  5428  00197E  D007               	goto	l751
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;automode.c: 71: {;automode.c: 72: if (pump_isIdle())
  5432  001980  EC8F  F012         	call	_pump_isIdle	;wreg free
  5433  001984  0900               	iorlw	0
  5434  001986  B4D8               	btfsc	status,2,c
  5435  001988  D002               	goto	l751
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;automode.c: 73: {;automode.c: 74: autoMode.sm0 = 0x2;
  5439  00198A  0E02               	movlw	2
  5440  00198C  6FBE               	movwf	(_autoMode+1)& (0+255),b
  5441  00198E                     l751:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;automode.c: 75: };automode.c: 76: };automode.c: 77: return cod_ret;
  5445  00198E  5021               	movf	autoMode_job@cod_ret,w,c
  5446                           
  5447                           ; BSR set to: 0
  5448  001990  0012               	return		;funcret
  5449  001992                     __end_of_autoMode_job:
  5450                           	opt callstack 0
  5451                           
  5452 ;; *************** function _pump_setTick *****************
  5453 ;; Defined at:
  5454 ;;		line 8 in file "pump.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  ticks           2   10[COMRAM] unsigned int 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		None
  5463 ;; Tracked objects:
  5464 ;;		On entry : 3F/0
  5465 ;;		On exit  : 3F/0
  5466 ;;		Unchanged: 3F/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5468 ;;      Params:         2       0       0       0       0       0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5471 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5472 ;;Total ram usage:        2 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    5
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_autoMode_job
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text38
  5483  002574                     __ptext38:
  5484                           	opt callstack 0
  5485  002574                     _pump_setTick:
  5486                           	opt callstack 24
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;pump.c: 10: pump.ticks = ticks;
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;incstack = 0
  5493  002574  C00B  F0B5         	movff	pump_setTick@ticks,_pump
  5494  002578  C00C  F0B6         	movff	pump_setTick@ticks+1,_pump+1
  5495                           
  5496                           ; BSR set to: 0
  5497  00257C  0012               	return		;funcret
  5498  00257E                     __end_of_pump_setTick:
  5499                           	opt callstack 0
  5500                           
  5501 ;; *************** function _pump_isIdle *****************
  5502 ;; Defined at:
  5503 ;;		line 66 in file "pump.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      char 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 3F/0
  5514 ;;		On exit  : 3F/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5517 ;;      Params:         0       0       0       0       0       0       0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5520 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5521 ;;Total ram usage:        0 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    5
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_autoMode_job
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text39
  5532  00251E                     __ptext39:
  5533                           	opt callstack 0
  5534  00251E                     _pump_isIdle:
  5535                           	opt callstack 24
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;pump.c: 68: if (pump.ticks == 0)
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;incstack = 0
  5542  00251E  51B5               	movf	_pump& (0+255),w,b
  5543  002520  11B6               	iorwf	(_pump+1)& (0+255),w,b
  5544  002522  A4D8               	btfss	status,2,c
  5545  002524  D002               	goto	l3618
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;pump.c: 69: {return 1;}
  5549  002526  0E01               	movlw	1
  5550  002528  0012               	return	
  5551  00252A                     l3618:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;pump.c: 70: return 0;
  5555  00252A  0E00               	movlw	0
  5556                           
  5557                           ; BSR set to: 0
  5558  00252C  0012               	return		;funcret
  5559  00252E                     __end_of_pump_isIdle:
  5560                           	opt callstack 0
  5561                           
  5562 ;; *************** function _nozzle_isEnabled *****************
  5563 ;; Defined at:
  5564 ;;		line 6 in file "nozzle.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  n               2   30[COMRAM] int 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      char 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 3F/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5578 ;;      Params:         2       0       0       0       0       0       0       0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5581 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5582 ;;Total ram usage:        2 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    6
  5585 ;; This function calls:
  5586 ;;		___ftge
  5587 ;;		___wmul
  5588 ;; This function is called by:
  5589 ;;		_autoMode_job
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text40
  5594  00210A                     __ptext40:
  5595                           	opt callstack 0
  5596  00210A                     _nozzle_isEnabled:
  5597                           	opt callstack 23
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;nozzle.c: 8: if (pulsonic.nozzle[n].Q_mlh > 0.0)
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;incstack = 0
  5604  00210A  0E00               	movlw	0
  5605  00210C  6E16               	movwf	___ftge@ff1,c
  5606  00210E  0E00               	movlw	0
  5607  002110  6E17               	movwf	___ftge@ff1+1,c
  5608  002112  0E00               	movlw	0
  5609  002114  6E18               	movwf	___ftge@ff1+2,c
  5610  002116  C01F  F00B         	movff	nozzle_isEnabled@n,___wmul@multiplier
  5611  00211A  C020  F00C         	movff	nozzle_isEnabled@n+1,___wmul@multiplier+1
  5612  00211E  0E00               	movlw	0
  5613  002120  6E0E               	movwf	___wmul@multiplicand+1,c
  5614  002122  0E06               	movlw	6
  5615  002124  6E0D               	movwf	___wmul@multiplicand,c
  5616  002126  ECEF  F011         	call	___wmul	;wreg free
  5617  00212A  0E06               	movlw	low (_pulsonic+6)
  5618  00212C  240B               	addwf	?___wmul,w,c
  5619  00212E  6ED9               	movwf	fsr2l,c
  5620  002130  0E01               	movlw	high (_pulsonic+6)
  5621  002132  200C               	addwfc	?___wmul+1,w,c
  5622  002134  6EDA               	movwf	fsr2h,c
  5623  002136  CFDE F019          	movff	postinc2,___ftge@ff2
  5624  00213A  CFDE F01A          	movff	postinc2,___ftge@ff2+1
  5625  00213E  CFDD F01B          	movff	postdec2,___ftge@ff2+2
  5626  002142  ECE8  F00E         	call	___ftge	;wreg free
  5627  002146  B0D8               	btfsc	status,0,c
  5628  002148  D002               	goto	l4662
  5629                           
  5630                           ;nozzle.c: 9: return 1;
  5631  00214A  0E01               	movlw	1
  5632  00214C  0012               	return	
  5633  00214E                     l4662:
  5634                           
  5635                           ;nozzle.c: 10: return 0;
  5636  00214E  0E00               	movlw	0
  5637  002150  0012               	return		;funcret
  5638  002152                     __end_of_nozzle_isEnabled:
  5639                           	opt callstack 0
  5640                           
  5641 ;; *************** function _mpap_setupToHomming *****************
  5642 ;; Defined at:
  5643 ;;		line 67 in file "mpap.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;		None
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  1    wreg      void 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 3F/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5657 ;;      Params:         0       0       0       0       0       0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5660 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5661 ;;Total ram usage:        0 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    6
  5664 ;; This function calls:
  5665 ;;		_mpap_setupToTurn
  5666 ;; This function is called by:
  5667 ;;		_autoMode_job
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text41
  5672  0024EA                     __ptext41:
  5673                           	opt callstack 0
  5674  0024EA                     _mpap_setupToHomming:
  5675                           	opt callstack 23
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;mpap.c: 69: mpap_setupToTurn( -1 *( (8*200) +20));
  5679                           
  5680                           ;incstack = 0
  5681  0024EA  0EF9               	movlw	249
  5682  0024EC  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  5683  0024EE  0EAC               	movlw	172
  5684  0024F0  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  5685  0024F2  ECAC  F011         	call	_mpap_setupToTurn	;wreg free
  5686                           
  5687                           ;mpap.c: 72: mpap.mode = MPAP_HOMMING_MODE;
  5688  0024F6  0E02               	movlw	2
  5689  0024F8  6E4E               	movwf	_mpap+7,c	;volatile
  5690  0024FA  0012               	return		;funcret
  5691  0024FC                     __end_of_mpap_setupToHomming:
  5692                           	opt callstack 0
  5693                           
  5694 ;; *************** function _mpap_movetoNozzle *****************
  5695 ;; Defined at:
  5696 ;;		line 215 in file "mpap.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  n               1    wreg     char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  n               1   20[COMRAM] char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 3F/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0
  5711 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5713 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5714 ;;Total ram usage:        1 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    6
  5717 ;; This function calls:
  5718 ;;		___wmul
  5719 ;;		_mpap_setupToTurn
  5720 ;; This function is called by:
  5721 ;;		_autoMode_job
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text42
  5726  002388                     __ptext42:
  5727                           	opt callstack 0
  5728  002388                     _mpap_movetoNozzle:
  5729                           	opt callstack 23
  5730                           
  5731                           ;incstack = 0
  5732                           ;mpap_movetoNozzle@n stored from wreg
  5733  002388  6E15               	movwf	mpap_movetoNozzle@n,c
  5734                           
  5735                           ;mpap.c: 218: mpap_setupToTurn( (n*200) - mpap.numSteps_current);
  5736  00238A  5015               	movf	mpap_movetoNozzle@n,w,c
  5737  00238C  6E0B               	movwf	___wmul@multiplier,c
  5738  00238E  6A0C               	clrf	___wmul@multiplier+1,c
  5739  002390  BE0B               	btfsc	___wmul@multiplier,7,c
  5740  002392  060C               	decf	___wmul@multiplier+1,f,c
  5741  002394  0E00               	movlw	0
  5742  002396  6E0E               	movwf	___wmul@multiplicand+1,c
  5743  002398  0EC8               	movlw	200
  5744  00239A  6E0D               	movwf	___wmul@multiplicand,c
  5745  00239C  ECEF  F011         	call	___wmul	;wreg free
  5746  0023A0  5047               	movf	_mpap,w,c	;volatile
  5747  0023A2  5C0B               	subwf	?___wmul,w,c
  5748  0023A4  6E11               	movwf	mpap_setupToTurn@numSteps_tomove,c
  5749  0023A6  5048               	movf	_mpap+1,w,c	;volatile
  5750  0023A8  580C               	subwfb	?___wmul+1,w,c
  5751  0023AA  6E12               	movwf	mpap_setupToTurn@numSteps_tomove+1,c
  5752  0023AC  ECAC  F011         	call	_mpap_setupToTurn	;wreg free
  5753                           
  5754                           ;mpap.c: 220: mpap.mode = MPAP_NORMAL_MODE;
  5755  0023B0  0E03               	movlw	3
  5756  0023B2  6E4E               	movwf	_mpap+7,c	;volatile
  5757  0023B4  0012               	return		;funcret
  5758  0023B6                     __end_of_mpap_movetoNozzle:
  5759                           	opt callstack 0
  5760                           
  5761 ;; *************** function _mpap_setupToTurn *****************
  5762 ;; Defined at:
  5763 ;;		line 55 in file "mpap.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  numSteps_tom    2   16[COMRAM] int 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  1    wreg      void 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5777 ;;      Params:         2       0       0       0       0       0       0       0       0
  5778 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5780 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5781 ;;Total ram usage:        4 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    5
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_mpap_setupToHomming
  5788 ;;		_mpap_movetoNozzle
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text43
  5793  002358                     __ptext43:
  5794                           	opt callstack 0
  5795  002358                     _mpap_setupToTurn:
  5796                           	opt callstack 23
  5797                           
  5798                           ;mpap.c: 58: if (numSteps_tomove !=0)
  5799                           
  5800                           ;incstack = 0
  5801  002358  5011               	movf	mpap_setupToTurn@numSteps_tomove,w,c
  5802  00235A  1012               	iorwf	mpap_setupToTurn@numSteps_tomove+1,w,c
  5803  00235C  B4D8               	btfsc	status,2,c
  5804  00235E  0012               	return	
  5805                           
  5806                           ;mpap.c: 59: {;mpap.c: 60: mpap.KI = (numSteps_tomove<0)? -1: 1;
  5807  002360  BE12               	btfsc	mpap_setupToTurn@numSteps_tomove+1,7,c
  5808  002362  D005               	goto	l428
  5809  002364  0E00               	movlw	0
  5810  002366  6E14               	movwf	_mpap_setupToTurn$450+1,c
  5811  002368  0E01               	movlw	1
  5812  00236A  6E13               	movwf	_mpap_setupToTurn$450,c
  5813  00236C  D002               	goto	l430
  5814  00236E                     l428:
  5815  00236E  6813               	setf	_mpap_setupToTurn$450,c
  5816  002370  6814               	setf	_mpap_setupToTurn$450+1,c
  5817  002372                     l430:
  5818  002372  C013  F04D         	movff	_mpap_setupToTurn$450,_mpap+6	;volatile
  5819                           
  5820                           ;mpap.c: 62: mpap.counter_steps = 0;
  5821  002376  0E00               	movlw	0
  5822  002378  6E4A               	movwf	_mpap+3,c	;volatile
  5823  00237A  0E00               	movlw	0
  5824  00237C  6E49               	movwf	_mpap+2,c	;volatile
  5825                           
  5826                           ;mpap.c: 64: mpap.numSteps_tomove = numSteps_tomove;
  5827  00237E  C011  F04B         	movff	mpap_setupToTurn@numSteps_tomove,_mpap+4	;volatile
  5828  002382  C012  F04C         	movff	mpap_setupToTurn@numSteps_tomove+1,_mpap+5	;volatile
  5829  002386  0012               	return		;funcret
  5830  002388                     __end_of_mpap_setupToTurn:
  5831                           	opt callstack 0
  5832                           
  5833 ;; *************** function _mpap_isIdle *****************
  5834 ;; Defined at:
  5835 ;;		line 222 in file "mpap.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      char 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2
  5844 ;; Tracked objects:
  5845 ;;		On entry : 3F/0
  5846 ;;		On exit  : 3F/0
  5847 ;;		Unchanged: 3F/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5852 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    5
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_autoMode_job
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text44
  5864  00252E                     __ptext44:
  5865                           	opt callstack 0
  5866  00252E                     _mpap_isIdle:
  5867                           	opt callstack 24
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;mpap.c: 224: if (mpap.mode == MPAP_IDLE_MODE)
  5871                           
  5872                           ;incstack = 0
  5873  00252E  504E               	movf	_mpap+7,w,c	;volatile
  5874  002530  A4D8               	btfss	status,2,c
  5875  002532  D002               	goto	l3606
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;mpap.c: 225: {return 1;}
  5879  002534  0E01               	movlw	1
  5880  002536  0012               	return	
  5881  002538                     l3606:
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;mpap.c: 226: return 0;
  5885  002538  0E00               	movlw	0
  5886                           
  5887                           ; BSR set to: 0
  5888  00253A  0012               	return		;funcret
  5889  00253C                     __end_of_mpap_isIdle:
  5890                           	opt callstack 0
  5891                           
  5892 ;; *************** function _autoMode_kb *****************
  5893 ;; Defined at:
  5894 ;;		line 82 in file "automode.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  cod_ret         1   11[COMRAM] char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      char 
  5901 ;; Registers used:
  5902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 3F/0
  5905 ;;		On exit  : 3F/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0
  5909 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5911 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5912 ;;Total ram usage:        1 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    6
  5915 ;; This function calls:
  5916 ;;		_ikb_key_is_ready2read
  5917 ;;		_ikb_key_was_read
  5918 ;;		_visMode_init
  5919 ;; This function is called by:
  5920 ;;		_autoMode_job
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text45
  5925  001D5A                     __ptext45:
  5926                           	opt callstack 0
  5927  001D5A                     _autoMode_kb:
  5928                           	opt callstack 23
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;automode.c: 84: int8_t cod_ret = 0;
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;incstack = 0
  5935  001D5A  0E00               	movlw	0
  5936  001D5C  6E0C               	movwf	autoMode_kb@cod_ret,c
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;automode.c: 86: if (ikb_key_is_ready2read(0))
  5940  001D5E  0E00               	movlw	0
  5941  001D60  EC43  F012         	call	_ikb_key_is_ready2read
  5942  001D64  0900               	iorlw	0
  5943  001D66  B4D8               	btfsc	status,2,c
  5944  001D68  D008               	goto	l3664
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;automode.c: 87: {;automode.c: 88: ikb_key_was_read(0);
  5948  001D6A  0E00               	movlw	0
  5949  001D6C  EC6B  F012         	call	_ikb_key_was_read
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;automode.c: 90: visMode_init(0x00);
  5953  001D70  0E00               	movlw	0
  5954  001D72  EC9E  F012         	call	_visMode_init
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;automode.c: 91: cod_ret = 1;
  5958  001D76  0E01               	movlw	1
  5959  001D78  6E0C               	movwf	autoMode_kb@cod_ret,c
  5960  001D7A                     l3664:
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;automode.c: 92: };automode.c: 93: if (ikb_key_is_ready2read(1))
  5964  001D7A  0E01               	movlw	1
  5965  001D7C  EC43  F012         	call	_ikb_key_is_ready2read
  5966  001D80  0900               	iorlw	0
  5967  001D82  B4D8               	btfsc	status,2,c
  5968  001D84  D008               	goto	l3672
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;automode.c: 94: {;automode.c: 95: ikb_key_was_read(1);
  5972  001D86  0E01               	movlw	1
  5973  001D88  EC6B  F012         	call	_ikb_key_was_read
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;automode.c: 97: visMode_init((8+1)-1);
  5977  001D8C  0E08               	movlw	8
  5978  001D8E  EC9E  F012         	call	_visMode_init
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;automode.c: 98: cod_ret = 1;
  5982  001D92  0E01               	movlw	1
  5983  001D94  6E0C               	movwf	autoMode_kb@cod_ret,c
  5984  001D96                     l3672:
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;automode.c: 99: };automode.c: 100: if (ikb_key_is_ready2read(2))
  5988  001D96  0E02               	movlw	2
  5989  001D98  EC43  F012         	call	_ikb_key_is_ready2read
  5990  001D9C  0900               	iorlw	0
  5991  001D9E  B4D8               	btfsc	status,2,c
  5992  001DA0  D003               	goto	l769
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;automode.c: 101: {;automode.c: 102: ikb_key_was_read(2);
  5996  001DA2  0E02               	movlw	2
  5997  001DA4  EC6B  F012         	call	_ikb_key_was_read
  5998  001DA8                     l769:
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;automode.c: 104: };automode.c: 105: if (ikb_key_is_ready2read(3))
  6002  001DA8  0E03               	movlw	3
  6003  001DAA  EC43  F012         	call	_ikb_key_is_ready2read
  6004  001DAE  0900               	iorlw	0
  6005  001DB0  B4D8               	btfsc	status,2,c
  6006  001DB2  D003               	goto	l770
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;automode.c: 106: {;automode.c: 107: ikb_key_was_read(3);
  6010  001DB4  0E03               	movlw	3
  6011  001DB6  EC6B  F012         	call	_ikb_key_was_read
  6012  001DBA                     l770:
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;automode.c: 109: };automode.c: 110: if (ikb_key_is_ready2read(4))
  6016  001DBA  0E04               	movlw	4
  6017  001DBC  EC43  F012         	call	_ikb_key_is_ready2read
  6018  001DC0  0900               	iorlw	0
  6019  001DC2  B4D8               	btfsc	status,2,c
  6020  001DC4  D003               	goto	l3680
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;automode.c: 111: {;automode.c: 112: ikb_key_was_read(4);
  6024  001DC6  0E04               	movlw	4
  6025  001DC8  EC6B  F012         	call	_ikb_key_was_read
  6026  001DCC                     l3680:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;automode.c: 114: };automode.c: 115: return cod_ret;
  6030  001DCC  500C               	movf	autoMode_kb@cod_ret,w,c
  6031                           
  6032                           ; BSR set to: 0
  6033  001DCE  0012               	return		;funcret
  6034  001DD0                     __end_of_autoMode_kb:
  6035                           	opt callstack 0
  6036                           
  6037 ;; *************** function _visMode_init *****************
  6038 ;; Defined at:
  6039 ;;		line 14 in file "visualizerMode.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  numVista        1    wreg     char 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  numVista        1   10[COMRAM] char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2
  6048 ;; Tracked objects:
  6049 ;;		On entry : 3F/0
  6050 ;;		On exit  : 3F/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0
  6054 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6056 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6057 ;;Total ram usage:        1 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    5
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_autoMode_kb
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text46
  6068  00253C                     __ptext46:
  6069                           	opt callstack 0
  6070  00253C                     _visMode_init:
  6071                           	opt callstack 23
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;incstack = 0
  6075                           ;visMode_init@numVista stored from wreg
  6076  00253C  6E0B               	movwf	visMode_init@numVista,c
  6077                           
  6078                           ;visualizerMode.c: 16: visMode.numVista = numVista;
  6079  00253E  C00B  F0BC         	movff	visMode_init@numVista,_visMode+1
  6080                           
  6081                           ;visualizerMode.c: 17: visMode.disp7s_accessReq = 1;
  6082  002542  0E01               	movlw	1
  6083  002544  0100               	movlb	0	; () banked
  6084  002546  6FBB               	movwf	_visMode& (0+255),b
  6085                           
  6086                           ; BSR set to: 0
  6087  002548  0012               	return		;funcret
  6088  00254A                     __end_of_visMode_init:
  6089                           	opt callstack 0
  6090                           
  6091 ;; *************** function _ikb_key_was_read *****************
  6092 ;; Defined at:
  6093 ;;		line 434 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  k               1    wreg     unsigned char 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  k               1   10[COMRAM] unsigned char 
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  1    wreg      void 
  6100 ;; Registers used:
  6101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6102 ;; Tracked objects:
  6103 ;;		On entry : 3F/0
  6104 ;;		On exit  : 3F/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6107 ;;      Params:         0       0       0       0       0       0       0       0       0
  6108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6110 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6111 ;;Total ram usage:        1 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:    5
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_autoMode_kb
  6118 ;;		_visMode_kb
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text47
  6123  0024D6                     __ptext47:
  6124                           	opt callstack 0
  6125  0024D6                     _ikb_key_was_read:
  6126                           	opt callstack 23
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;incstack = 0
  6130                           ;ikb_key_was_read@k stored from wreg
  6131  0024D6  6E0B               	movwf	ikb_key_was_read@k,c
  6132                           
  6133                           ;ikb.c: 436: key[k].bf.ReadyToRead = 0;
  6134  0024D8  500B               	movf	ikb_key_was_read@k,w,c
  6135  0024DA  0D10               	mullw	16
  6136  0024DC  50F3               	movf	prodl,w,c
  6137  0024DE  0F6A               	addlw	low (_key+10)
  6138  0024E0  6ED9               	movwf	fsr2l,c
  6139  0024E2  6ADA               	clrf	fsr2h,c
  6140  0024E4  0100               	movlb	0	; () banked
  6141  0024E6  9CDF               	bcf	indf2,6,c
  6142                           
  6143                           ; BSR set to: 0
  6144  0024E8  0012               	return		;funcret
  6145  0024EA                     __end_of_ikb_key_was_read:
  6146                           	opt callstack 0
  6147                           
  6148 ;; *************** function _ikb_key_is_ready2read *****************
  6149 ;; Defined at:
  6150 ;;		line 426 in file "../../../../../../FIRWAR/eslibrary/ikb/ikb.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  k               1    wreg     unsigned char 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  k               1   10[COMRAM] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1    wreg      unsigned char 
  6157 ;; Registers used:
  6158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6159 ;; Tracked objects:
  6160 ;;		On entry : 3F/0
  6161 ;;		On exit  : 3F/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6164 ;;      Params:         0       0       0       0       0       0       0       0       0
  6165 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6167 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6168 ;;Total ram usage:        1 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    5
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_autoMode_kb
  6175 ;;		_visMode_kb
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text48
  6180  002486                     __ptext48:
  6181                           	opt callstack 0
  6182  002486                     _ikb_key_is_ready2read:
  6183                           	opt callstack 23
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;incstack = 0
  6187                           ;ikb_key_is_ready2read@k stored from wreg
  6188  002486  6E0B               	movwf	ikb_key_is_ready2read@k,c
  6189                           
  6190                           ;ikb.c: 428: return key[k].bf.ReadyToRead;
  6191  002488  500B               	movf	ikb_key_is_ready2read@k,w,c
  6192  00248A  0D10               	mullw	16
  6193  00248C  50F3               	movf	prodl,w,c
  6194  00248E  0F6A               	addlw	low (_key+10)
  6195  002490  6ED9               	movwf	fsr2l,c
  6196  002492  6ADA               	clrf	fsr2h,c
  6197  002494  0100               	movlb	0	; () banked
  6198  002496  ACDF               	btfss	indf2,6,c
  6199  002498  D002               	goto	u2920
  6200  00249A  0E01               	movlw	1
  6201  00249C  0012               	return	
  6202  00249E                     u2920:
  6203  00249E  0E00               	movlw	0
  6204                           
  6205                           ; BSR set to: 0
  6206  0024A0  0012               	return		;funcret
  6207  0024A2                     __end_of_ikb_key_is_ready2read:
  6208                           	opt callstack 0
  6209                           
  6210 ;; *************** function _autoMode_init *****************
  6211 ;; Defined at:
  6212 ;;		line 16 in file "automode.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  init            1    wreg     char 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  init            1   62[COMRAM] char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 3F/0
  6223 ;;		On exit  : 3F/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0
  6227 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6229 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6230 ;;Total ram usage:        3 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:   10
  6233 ;; This function calls:
  6234 ;;		___lwtoft
  6235 ;;		_disp7s_modeDisp_off
  6236 ;;		_disp7s_qtyDisp_writeFloat
  6237 ;;		_pulsonic_getTotalSum_mlh
  6238 ;; This function is called by:
  6239 ;;		_main
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text49
  6244  0021E2                     __ptext49:
  6245                           	opt callstack 0
  6246  0021E2                     _autoMode_init:
  6247                           	opt callstack 20
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;incstack = 0
  6251                           ;autoMode_init@init stored from wreg
  6252  0021E2  6E3F               	movwf	autoMode_init@init,c
  6253                           
  6254                           ;automode.c: 18: if (disp_owner == DISPOWNER_AUTOMODE)
  6255  0021E4  0100               	movlb	0	; () banked
  6256  0021E6  51CC               	movf	_disp_owner& (0+255),w,b
  6257  0021E8  A4D8               	btfss	status,2,c
  6258  0021EA  D016               	goto	l4692
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;automode.c: 19: {;automode.c: 20: disp7s_modeDisp_off();
  6262  0021EC  EC7E  F012         	call	_disp7s_modeDisp_off	;wreg free
  6263                           
  6264                           ;automode.c: 21: disp7s_qtyDisp_writeFloat( pulsonic_getTotalSum_mlh() );
  6265  0021F0  ECAB  F00D         	call	_pulsonic_getTotalSum_mlh	;wreg free
  6266  0021F4  C031  F040         	movff	?_pulsonic_getTotalSum_mlh,_autoMode_init$1603
  6267  0021F8  C032  F041         	movff	?_pulsonic_getTotalSum_mlh+1,_autoMode_init$1603+1
  6268                           
  6269                           ;automode.c: 21: disp7s_qtyDisp_writeFloat( pulsonic_getTotalSum_mlh() );
  6270  0021FC  C040  F013         	movff	_autoMode_init$1603,___lwtoft@c
  6271  002200  C041  F014         	movff	_autoMode_init$1603+1,___lwtoft@c+1
  6272  002204  EC02  F012         	call	___lwtoft	;wreg free
  6273  002208  C013  F03C         	movff	?___lwtoft,disp7s_qtyDisp_writeFloat@num
  6274  00220C  C014  F03D         	movff	?___lwtoft+1,disp7s_qtyDisp_writeFloat@num+1
  6275  002210  C015  F03E         	movff	?___lwtoft+2,disp7s_qtyDisp_writeFloat@num+2
  6276  002214  EC34  F012         	call	_disp7s_qtyDisp_writeFloat	;wreg free
  6277  002218                     l4692:
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;automode.c: 22: };automode.c: 23: if (init == AUTOMODE_INIT_RESTART)
  6281  002218  503F               	movf	autoMode_init@init,w,c
  6282  00221A  A4D8               	btfss	status,2,c
  6283  00221C  0012               	return	
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;automode.c: 24: {;automode.c: 25: autoMode.n = 0x0;
  6287  00221E  0E00               	movlw	0
  6288  002220  6FBD               	movwf	_autoMode& (0+255),b
  6289                           
  6290                           ; BSR set to: 0
  6291  002222  0012               	return		;funcret
  6292  002224                     __end_of_autoMode_init:
  6293                           	opt callstack 0
  6294                           
  6295 ;; *************** function _pulsonic_getTotalSum_mlh *****************
  6296 ;; Defined at:
  6297 ;;		line 25 in file "pulsonic.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  i               2   52[COMRAM] int 
  6302 ;;  acc             2   50[COMRAM] unsigned int 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  2   48[COMRAM] unsigned int 
  6305 ;; Registers used:
  6306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6312 ;;      Params:         2       0       0       0       0       0       0       0       0
  6313 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6315 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6316 ;;Total ram usage:        6 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    7
  6319 ;; This function calls:
  6320 ;;		___ftadd
  6321 ;;		___fttol
  6322 ;;		___lwtoft
  6323 ;;		___wmul
  6324 ;; This function is called by:
  6325 ;;		_autoMode_init
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text50
  6330  001B56                     __ptext50:
  6331                           	opt callstack 0
  6332  001B56                     _pulsonic_getTotalSum_mlh:
  6333                           	opt callstack 22
  6334                           
  6335                           ;pulsonic.c: 27: int i;;pulsonic.c: 28: uint16_t acc = 0;
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;incstack = 0
  6339  001B56  0E00               	movlw	0
  6340  001B58  6E34               	movwf	pulsonic_getTotalSum_mlh@acc+1,c
  6341  001B5A  0E00               	movlw	0
  6342  001B5C  6E33               	movwf	pulsonic_getTotalSum_mlh@acc,c
  6343                           
  6344                           ;pulsonic.c: 29: for (i=0; i<8; i++)
  6345  001B5E  0E00               	movlw	0
  6346  001B60  6E36               	movwf	pulsonic_getTotalSum_mlh@i+1,c
  6347  001B62  0E00               	movlw	0
  6348  001B64  6E35               	movwf	pulsonic_getTotalSum_mlh@i,c
  6349  001B66                     l4648:
  6350                           
  6351                           ;pulsonic.c: 30: {;pulsonic.c: 31: acc += pulsonic.nozzle[i].Q_mlh;
  6352  001B66  C035  F00B         	movff	pulsonic_getTotalSum_mlh@i,___wmul@multiplier
  6353  001B6A  C036  F00C         	movff	pulsonic_getTotalSum_mlh@i+1,___wmul@multiplier+1
  6354  001B6E  0E00               	movlw	0
  6355  001B70  6E0E               	movwf	___wmul@multiplicand+1,c
  6356  001B72  0E06               	movlw	6
  6357  001B74  6E0D               	movwf	___wmul@multiplicand,c
  6358  001B76  ECEF  F011         	call	___wmul	;wreg free
  6359  001B7A  0E06               	movlw	low (_pulsonic+6)
  6360  001B7C  240B               	addwf	?___wmul,w,c
  6361  001B7E  6ED9               	movwf	fsr2l,c
  6362  001B80  0E01               	movlw	high (_pulsonic+6)
  6363  001B82  200C               	addwfc	?___wmul+1,w,c
  6364  001B84  6EDA               	movwf	fsr2h,c
  6365  001B86  CFDE F019          	movff	postinc2,___ftadd@f2
  6366  001B8A  CFDE F01A          	movff	postinc2,___ftadd@f2+1
  6367  001B8E  CFDD F01B          	movff	postdec2,___ftadd@f2+2
  6368  001B92  C033  F013         	movff	pulsonic_getTotalSum_mlh@acc,___lwtoft@c
  6369  001B96  C034  F014         	movff	pulsonic_getTotalSum_mlh@acc+1,___lwtoft@c+1
  6370  001B9A  EC02  F012         	call	___lwtoft	;wreg free
  6371  001B9E  C013  F016         	movff	?___lwtoft,___ftadd@f1
  6372  001BA2  C014  F017         	movff	?___lwtoft+1,___ftadd@f1+1
  6373  001BA6  C015  F018         	movff	?___lwtoft+2,___ftadd@f1+2
  6374  001BAA  EC2F  F008         	call	___ftadd	;wreg free
  6375  001BAE  C016  F022         	movff	?___ftadd,___fttol@f1
  6376  001BB2  C017  F023         	movff	?___ftadd+1,___fttol@f1+1
  6377  001BB6  C018  F024         	movff	?___ftadd+2,___fttol@f1+2
  6378  001BBA  EC5B  F00B         	call	___fttol	;wreg free
  6379  001BBE  C022  F033         	movff	?___fttol,pulsonic_getTotalSum_mlh@acc
  6380  001BC2  C023  F034         	movff	?___fttol+1,pulsonic_getTotalSum_mlh@acc+1
  6381  001BC6  4A35               	infsnz	pulsonic_getTotalSum_mlh@i,f,c
  6382  001BC8  2A36               	incf	pulsonic_getTotalSum_mlh@i+1,f,c
  6383  001BCA  BE36               	btfsc	pulsonic_getTotalSum_mlh@i+1,7,c
  6384  001BCC  D7CC               	goto	l4648
  6385  001BCE  5036               	movf	pulsonic_getTotalSum_mlh@i+1,w,c
  6386  001BD0  E104               	bnz	u5500
  6387  001BD2  0E08               	movlw	8
  6388  001BD4  5C35               	subwf	pulsonic_getTotalSum_mlh@i,w,c
  6389  001BD6  A0D8               	btfss	status,0,c
  6390  001BD8  D7C6               	goto	l4648
  6391  001BDA                     u5500:
  6392                           
  6393                           ;pulsonic.c: 32: };pulsonic.c: 33: return acc;
  6394  001BDA  C033  F031         	movff	pulsonic_getTotalSum_mlh@acc,?_pulsonic_getTotalSum_mlh
  6395  001BDE  C034  F032         	movff	pulsonic_getTotalSum_mlh@acc+1,?_pulsonic_getTotalSum_mlh+1
  6396  001BE2  0012               	return		;funcret
  6397  001BE4                     __end_of_pulsonic_getTotalSum_mlh:
  6398                           	opt callstack 0
  6399                           
  6400 ;; *************** function ___wmul *****************
  6401 ;; Defined at:
  6402 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul16.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  multiplier      2   10[COMRAM] unsigned int 
  6405 ;;  multiplicand    2   12[COMRAM] unsigned int 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  product         2   14[COMRAM] unsigned int 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  2   10[COMRAM] unsigned int 
  6410 ;; Registers used:
  6411 ;;		wreg, status,2, status,0, prodl, prodh
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/1
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6417 ;;      Params:         4       0       0       0       0       0       0       0       0
  6418 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6420 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6421 ;;Total ram usage:        6 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    5
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_mpap_movetoNozzle
  6428 ;;		_disp7s_write_i
  6429 ;;		_pulsonic_getTotalSum_mlh
  6430 ;;		_nozzle_isEnabled
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text51
  6435  0023DE                     __ptext51:
  6436                           	opt callstack 0
  6437  0023DE                     ___wmul:
  6438                           	opt callstack 21
  6439                           
  6440                           ;incstack = 0
  6441  0023DE  500B               	movf	___wmul@multiplier,w,c
  6442  0023E0  020D               	mulwf	___wmul@multiplicand,c
  6443  0023E2  CFF3 F00F          	movff	prodl,___wmul@product
  6444  0023E6  CFF4 F010          	movff	prodh,___wmul@product+1
  6445  0023EA  500B               	movf	___wmul@multiplier,w,c
  6446  0023EC  020E               	mulwf	___wmul@multiplicand+1,c
  6447  0023EE  50F3               	movf	prodl,w,c
  6448  0023F0  2610               	addwf	___wmul@product+1,f,c
  6449  0023F2  500C               	movf	___wmul@multiplier+1,w,c
  6450  0023F4  020D               	mulwf	___wmul@multiplicand,c
  6451  0023F6  50F3               	movf	prodl,w,c
  6452  0023F8  2610               	addwf	___wmul@product+1,f,c
  6453  0023FA  C00F  F00B         	movff	___wmul@product,?___wmul
  6454  0023FE  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  6455  002402  0012               	return		;funcret
  6456  002404                     __end_of___wmul:
  6457                           	opt callstack 0
  6458                           
  6459 ;; *************** function ___lwtoft *****************
  6460 ;; Defined at:
  6461 ;;		line 28 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwtoft.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  c               2   18[COMRAM] unsigned int 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  3   18[COMRAM] float 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6475 ;;      Params:         3       0       0       0       0       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6478 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6479 ;;Total ram usage:        3 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:    6
  6482 ;; This function calls:
  6483 ;;		___ftpack
  6484 ;; This function is called by:
  6485 ;;		_ikey_parsing
  6486 ;;		_pulsonic_getTotalSum_mlh
  6487 ;;		_autoMode_init
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text52
  6492  002404                     __ptext52:
  6493                           	opt callstack 0
  6494  002404                     ___lwtoft:
  6495                           	opt callstack 22
  6496                           
  6497                           ;incstack = 0
  6498  002404  C013  F00B         	movff	___lwtoft@c,___ftpack@arg
  6499  002408  C014  F00C         	movff	___lwtoft@c+1,___ftpack@arg+1
  6500  00240C  6A0D               	clrf	___ftpack@arg+2,c
  6501  00240E  0E8E               	movlw	142
  6502  002410  6E0E               	movwf	___ftpack@exp,c
  6503  002412  0E00               	movlw	0
  6504  002414  6E0F               	movwf	___ftpack@sign,c
  6505  002416  EC1F  F00C         	call	___ftpack	;wreg free
  6506  00241A  C00B  F013         	movff	?___ftpack,?___lwtoft
  6507  00241E  C00C  F014         	movff	?___ftpack+1,?___lwtoft+1
  6508  002422  C00D  F015         	movff	?___ftpack+2,?___lwtoft+2
  6509  002426  0012               	return		;funcret
  6510  002428                     __end_of___lwtoft:
  6511                           	opt callstack 0
  6512                           
  6513 ;; *************** function _disp7s_qtyDisp_writeFloat *****************
  6514 ;; Defined at:
  6515 ;;		line 242 in file "display.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  num             3   59[COMRAM] float 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;		None
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  1    wreg      void 
  6522 ;; Registers used:
  6523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 3F/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6529 ;;      Params:         3       0       0       0       0       0       0       0       0
  6530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6532 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6533 ;;Total ram usage:        3 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    9
  6536 ;; This function calls:
  6537 ;;		_disp7s_write_f
  6538 ;; This function is called by:
  6539 ;;		_autoMode_init
  6540 ;;		_visMode_disp
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text53
  6545  002468                     __ptext53:
  6546                           	opt callstack 0
  6547  002468                     _disp7s_qtyDisp_writeFloat:
  6548                           	opt callstack 19
  6549                           
  6550                           ;display.c: 244: disp7s_write_f(pulsonic.disp7s.qty, 3, num);
  6551                           
  6552                           ;incstack = 0
  6553  002468  0E3B               	movlw	low (_pulsonic+59)
  6554  00246A  6E31               	movwf	disp7s_write_f@pDisp,c
  6555  00246C  0E01               	movlw	high (_pulsonic+59)
  6556  00246E  6E32               	movwf	disp7s_write_f@pDisp+1,c
  6557  002470  0E03               	movlw	3
  6558  002472  6E33               	movwf	disp7s_write_f@NUM_OF_DISP,c
  6559  002474  C03C  F034         	movff	disp7s_qtyDisp_writeFloat@num,disp7s_write_f@num
  6560  002478  C03D  F035         	movff	disp7s_qtyDisp_writeFloat@num+1,disp7s_write_f@num+1
  6561  00247C  C03E  F036         	movff	disp7s_qtyDisp_writeFloat@num+2,disp7s_write_f@num+2
  6562  002480  EC21  F007         	call	_disp7s_write_f	;wreg free
  6563                           
  6564                           ; BSR set to: 0
  6565  002484  0012               	return		;funcret
  6566  002486                     __end_of_disp7s_qtyDisp_writeFloat:
  6567                           	opt callstack 0
  6568                           
  6569 ;; *************** function _disp7s_write_f *****************
  6570 ;; Defined at:
  6571 ;;		line 187 in file "display.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  pDisp           2   48[COMRAM] PTR unsigned char 
  6574 ;;		 -> pulsonic.disp7s(5), pulsonic(64), 
  6575 ;;  NUM_OF_DISP     1   50[COMRAM] char 
  6576 ;;  num             3   51[COMRAM] char 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  buff           10    0[BANK0 ] unsigned char [10]
  6579 ;;  K10MULT         3   13[BANK0 ] unsigned char [10]
  6580 ;;  I               2   10[BANK0 ] int 
  6581 ;;  i               1   16[BANK0 ] char 
  6582 ;;  pi              1   12[BANK0 ] char 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 3F/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6592 ;;      Params:         6       0       0       0       0       0       0       0       0
  6593 ;;      Locals:         0      17       0       0       0       0       0       0       0
  6594 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6595 ;;      Totals:        11      17       0       0       0       0       0       0       0
  6596 ;;Total ram usage:       28 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    8
  6599 ;; This function calls:
  6600 ;;		___ftadd
  6601 ;;		___ftge
  6602 ;;		___ftmul
  6603 ;;		___fttol
  6604 ;;		_disp7s_off
  6605 ;;		_itoa
  6606 ;; This function is called by:
  6607 ;;		_disp7s_qtyDisp_writeFloat
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text54
  6612  000E42                     __ptext54:
  6613                           	opt callstack 0
  6614  000E42                     _disp7s_write_f:
  6615                           	opt callstack 19
  6616                           
  6617                           ;display.c: 189: double K10MULT;;display.c: 190: int16_t I;;display.c: 191: char buff[10
      +                          ];;display.c: 192: int8_t i;;display.c: 193: int8_t pi;;display.c: 195: K10MULT = 1;
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;incstack = 0
  6621  000E42  0E00               	movlw	0
  6622  000E44  0100               	movlb	0	; () banked
  6623  000E46  6FFB               	movwf	disp7s_write_f@K10MULT& (0+255),b
  6624  000E48  0E80               	movlw	128
  6625  000E4A  6FFC               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  6626  000E4C  0E3F               	movlw	63
  6627  000E4E  6FFD               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;display.c: 196: i = NUM_OF_DISP;
  6631  000E50  C033  F0FE         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_write_f@i
  6632                           
  6633                           ;display.c: 197: while (i--)
  6634  000E54  D014               	goto	l4452
  6635  000E56                     l4450:
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;display.c: 198: {K10MULT *=10;}
  6639  000E56  C0FB  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  6640  000E5A  C0FC  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  6641  000E5E  C0FD  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  6642  000E62  0E00               	movlw	0
  6643  000E64  6E16               	movwf	___ftmul@f2,c
  6644  000E66  0E20               	movlw	32
  6645  000E68  6E17               	movwf	___ftmul@f2+1,c
  6646  000E6A  0E41               	movlw	65
  6647  000E6C  6E18               	movwf	___ftmul@f2+2,c
  6648  000E6E  ECE1  F00A         	call	___ftmul	;wreg free
  6649  000E72  C013  F0FB         	movff	?___ftmul,disp7s_write_f@K10MULT
  6650  000E76  C014  F0FC         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  6651  000E7A  C015  F0FD         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  6652  000E7E                     l4452:
  6653  000E7E  0100               	movlb	0	; () banked
  6654  000E80  07FE               	decf	disp7s_write_f@i& (0+255),f,b
  6655  000E82  29FE               	incf	disp7s_write_f@i& (0+255),w,b
  6656  000E84  A4D8               	btfss	status,2,c
  6657  000E86  D7E7               	goto	l4450
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;display.c: 199: if (num >= K10MULT)
  6661  000E88  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  6662  000E8C  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  6663  000E90  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  6664  000E94  C0FB  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  6665  000E98  C0FC  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  6666  000E9C  C0FD  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  6667  000EA0  ECE8  F00E         	call	___ftge	;wreg free
  6668  000EA4  A0D8               	btfss	status,0,c
  6669  000EA6  D014               	goto	l4458
  6670                           
  6671                           ;display.c: 200: {num= K10MULT-1;}
  6672  000EA8  C0FB  F016         	movff	disp7s_write_f@K10MULT,___ftadd@f1
  6673  000EAC  C0FC  F017         	movff	disp7s_write_f@K10MULT+1,___ftadd@f1+1
  6674  000EB0  C0FD  F018         	movff	disp7s_write_f@K10MULT+2,___ftadd@f1+2
  6675  000EB4  0E00               	movlw	0
  6676  000EB6  6E19               	movwf	___ftadd@f2,c
  6677  000EB8  0E80               	movlw	128
  6678  000EBA  6E1A               	movwf	___ftadd@f2+1,c
  6679  000EBC  0EBF               	movlw	191
  6680  000EBE  6E1B               	movwf	___ftadd@f2+2,c
  6681  000EC0  EC2F  F008         	call	___ftadd	;wreg free
  6682  000EC4  C016  F034         	movff	?___ftadd,disp7s_write_f@num
  6683  000EC8  C017  F035         	movff	?___ftadd+1,disp7s_write_f@num+1
  6684  000ECC  C018  F036         	movff	?___ftadd+2,disp7s_write_f@num+2
  6685  000ED0                     l4458:
  6686                           
  6687                           ;display.c: 202: disp7s_off(pDisp, NUM_OF_DISP);
  6688  000ED0  C031  F00B         	movff	disp7s_write_f@pDisp,disp7s_off@pDisp
  6689  000ED4  C032  F00C         	movff	disp7s_write_f@pDisp+1,disp7s_off@pDisp+1
  6690  000ED8  C033  F00D         	movff	disp7s_write_f@NUM_OF_DISP,disp7s_off@NUM_OF_DISP
  6691  000EDC  EC74  F011         	call	_disp7s_off	;wreg free
  6692                           
  6693                           ;display.c: 206: K10MULT = 1;
  6694  000EE0  0E00               	movlw	0
  6695  000EE2  0100               	movlb	0	; () banked
  6696  000EE4  6FFB               	movwf	disp7s_write_f@K10MULT& (0+255),b
  6697  000EE6  0E80               	movlw	128
  6698  000EE8  6FFC               	movwf	(disp7s_write_f@K10MULT+1)& (0+255),b
  6699  000EEA  0E3F               	movlw	63
  6700  000EEC  6FFD               	movwf	(disp7s_write_f@K10MULT+2)& (0+255),b
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;display.c: 207: for (i=0; i<=NUM_OF_DISP; i++)
  6704  000EEE  0E00               	movlw	0
  6705  000EF0  6FFE               	movwf	disp7s_write_f@i& (0+255),b
  6706  000EF2  D074               	goto	l4488
  6707  000EF4                     l4464:
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;display.c: 208: {;display.c: 209: if (num< K10MULT)
  6711  000EF4  C034  F016         	movff	disp7s_write_f@num,___ftge@ff1
  6712  000EF8  C035  F017         	movff	disp7s_write_f@num+1,___ftge@ff1+1
  6713  000EFC  C036  F018         	movff	disp7s_write_f@num+2,___ftge@ff1+2
  6714  000F00  C0FB  F019         	movff	disp7s_write_f@K10MULT,___ftge@ff2
  6715  000F04  C0FC  F01A         	movff	disp7s_write_f@K10MULT+1,___ftge@ff2+1
  6716  000F08  C0FD  F01B         	movff	disp7s_write_f@K10MULT+2,___ftge@ff2+2
  6717  000F0C  ECE8  F00E         	call	___ftge	;wreg free
  6718  000F10  B0D8               	btfsc	status,0,c
  6719  000F12  D04E               	goto	l4484
  6720                           
  6721                           ;display.c: 210: {;display.c: 211: if (i<NUM_OF_DISP)
  6722  000F14  0100               	movlb	0	; () banked
  6723  000F16  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  6724  000F18  0A80               	xorlw	128
  6725  000F1A  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6726  000F1C  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  6727  000F1E  0A80               	xorlw	128
  6728  000F20  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  6729  000F22  B0D8               	btfsc	status,0,c
  6730  000F24  D036               	goto	l4480
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;display.c: 212: {;display.c: 213: I = (int16_t)(num*10);
  6734  000F26  0E00               	movlw	0
  6735  000F28  6E16               	movwf	___ftmul@f2,c
  6736  000F2A  0E20               	movlw	32
  6737  000F2C  6E17               	movwf	___ftmul@f2+1,c
  6738  000F2E  0E41               	movlw	65
  6739  000F30  6E18               	movwf	___ftmul@f2+2,c
  6740  000F32  C034  F013         	movff	disp7s_write_f@num,___ftmul@f1
  6741  000F36  C035  F014         	movff	disp7s_write_f@num+1,___ftmul@f1+1
  6742  000F3A  C036  F015         	movff	disp7s_write_f@num+2,___ftmul@f1+2
  6743  000F3E  ECE1  F00A         	call	___ftmul	;wreg free
  6744  000F42  C013  F022         	movff	?___ftmul,___fttol@f1
  6745  000F46  C014  F023         	movff	?___ftmul+1,___fttol@f1+1
  6746  000F4A  C015  F024         	movff	?___ftmul+2,___fttol@f1+2
  6747  000F4E  EC5B  F00B         	call	___fttol	;wreg free
  6748  000F52  C022  F0F8         	movff	?___fttol,disp7s_write_f@I
  6749  000F56  C023  F0F9         	movff	?___fttol+1,disp7s_write_f@I+1
  6750                           
  6751                           ;display.c: 216: if (i==0)
  6752  000F5A  0100               	movlb	0	; () banked
  6753  000F5C  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  6754  000F5E  A4D8               	btfss	status,2,c
  6755  000F60  D00D               	goto	l4474
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;display.c: 217: {pDisp[1]= DISP7S_NUMS[0];}
  6759  000F62  0E01               	movlw	low _DISP7S_NUMS
  6760  000F64  6EF6               	movwf	tblptrl,c
  6761  000F66                     	if	1	;There is more than 1 active tblptr byte
  6762  000F66  0E08               	movlw	high _DISP7S_NUMS
  6763  000F68  6EF7               	movwf	tblptrh,c
  6764  000F6A                     	endif
  6765  000F6A                     	if	0	;There are less than 3 active tblptr bytes
  6766  000F6A                     	endif
  6767  000F6A  EE20 F001          	lfsr	2,1
  6768  000F6E  5031               	movf	disp7s_write_f@pDisp,w,c
  6769  000F70  26D9               	addwf	fsr2l,f,c
  6770  000F72  5032               	movf	disp7s_write_f@pDisp+1,w,c
  6771  000F74  22DA               	addwfc	fsr2h,f,c
  6772  000F76  0008               	tblrd		*
  6773  000F78  CFF5 FFDF          	movff	tablat,indf2
  6774  000F7C                     l4474:
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;display.c: 219: pDisp[1] |= 0x80;
  6778  000F7C  EE20 F001          	lfsr	2,1
  6779  000F80  5031               	movf	disp7s_write_f@pDisp,w,c
  6780  000F82  26D9               	addwf	fsr2l,f,c
  6781  000F84  5032               	movf	disp7s_write_f@pDisp+1,w,c
  6782  000F86  22DA               	addwfc	fsr2h,f,c
  6783  000F88  0E00               	movlw	0
  6784  000F8A  8EDB               	bsf	plusw2,7,c
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;display.c: 220: pi = i;
  6788  000F8C  C0FE  F0FA         	movff	disp7s_write_f@i,disp7s_write_f@pi
  6789                           
  6790                           ;display.c: 221: break;
  6791  000F90  D02D               	goto	u5080
  6792  000F92                     l4480:
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;display.c: 223: else;display.c: 224: {;display.c: 225: I = (int16_t)(num);
  6796  000F92  C034  F022         	movff	disp7s_write_f@num,___fttol@f1
  6797  000F96  C035  F023         	movff	disp7s_write_f@num+1,___fttol@f1+1
  6798  000F9A  C036  F024         	movff	disp7s_write_f@num+2,___fttol@f1+2
  6799  000F9E  EC5B  F00B         	call	___fttol	;wreg free
  6800  000FA2  C022  F0F8         	movff	?___fttol,disp7s_write_f@I
  6801  000FA6  C023  F0F9         	movff	?___fttol+1,disp7s_write_f@I+1
  6802                           
  6803                           ;display.c: 226: pi = i-1;
  6804  000FAA  0100               	movlb	0	; () banked
  6805  000FAC  05FE               	decf	disp7s_write_f@i& (0+255),w,b
  6806  000FAE  6FFA               	movwf	disp7s_write_f@pi& (0+255),b
  6807  000FB0                     l4484:
  6808                           
  6809                           ;display.c: 227: };display.c: 228: };display.c: 229: K10MULT *= 10;
  6810  000FB0  C0FB  F013         	movff	disp7s_write_f@K10MULT,___ftmul@f1
  6811  000FB4  C0FC  F014         	movff	disp7s_write_f@K10MULT+1,___ftmul@f1+1
  6812  000FB8  C0FD  F015         	movff	disp7s_write_f@K10MULT+2,___ftmul@f1+2
  6813  000FBC  0E00               	movlw	0
  6814  000FBE  6E16               	movwf	___ftmul@f2,c
  6815  000FC0  0E20               	movlw	32
  6816  000FC2  6E17               	movwf	___ftmul@f2+1,c
  6817  000FC4  0E41               	movlw	65
  6818  000FC6  6E18               	movwf	___ftmul@f2+2,c
  6819  000FC8  ECE1  F00A         	call	___ftmul	;wreg free
  6820  000FCC  C013  F0FB         	movff	?___ftmul,disp7s_write_f@K10MULT
  6821  000FD0  C014  F0FC         	movff	?___ftmul+1,disp7s_write_f@K10MULT+1
  6822  000FD4  C015  F0FD         	movff	?___ftmul+2,disp7s_write_f@K10MULT+2
  6823  000FD8  0100               	movlb	0	; () banked
  6824  000FDA  2BFE               	incf	disp7s_write_f@i& (0+255),f,b
  6825  000FDC                     l4488:
  6826                           
  6827                           ; BSR set to: 0
  6828  000FDC  5033               	movf	disp7s_write_f@NUM_OF_DISP,w,c
  6829  000FDE  0A80               	xorlw	128
  6830  000FE0  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6831  000FE2  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  6832  000FE4  0A80               	xorlw	128
  6833  000FE6  5C37               	subwf	??_disp7s_write_f& (0+255),w,c
  6834  000FE8  B0D8               	btfsc	status,0,c
  6835  000FEA  D784               	goto	l4464
  6836  000FEC                     u5080:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;display.c: 230: };display.c: 232: itoa(buff, I, 10);
  6840  000FEC  0EEE               	movlw	low disp7s_write_f@buff
  6841  000FEE  6E1A               	movwf	itoa@buf,c
  6842  000FF0  C0F8  F01B         	movff	disp7s_write_f@I,itoa@val
  6843  000FF4  C0F9  F01C         	movff	disp7s_write_f@I+1,itoa@val+1
  6844  000FF8  0E00               	movlw	0
  6845  000FFA  6E1E               	movwf	itoa@base+1,c
  6846  000FFC  0E0A               	movlw	10
  6847  000FFE  6E1D               	movwf	itoa@base,c
  6848  001000  EC93  F011         	call	_itoa	;wreg free
  6849                           
  6850                           ;display.c: 234: i=0;
  6851  001004  0E00               	movlw	0
  6852  001006  0100               	movlb	0	; () banked
  6853  001008  6FFE               	movwf	disp7s_write_f@i& (0+255),b
  6854                           
  6855                           ;display.c: 235: while (buff[i] != '\0')
  6856  00100A  D021               	goto	l4500
  6857  00100C                     l4494:
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;display.c: 236: {;display.c: 237: pDisp[pi--] |= DISP7S_NUMS[ buff[i] - 0x30 ];
  6861  00100C  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  6862  00100E  0FEE               	addlw	low disp7s_write_f@buff
  6863  001010  6ED9               	movwf	fsr2l,c
  6864  001012  6ADA               	clrf	fsr2h,c
  6865  001014  50DF               	movf	indf2,w,c
  6866  001016  6E37               	movwf	??_disp7s_write_f& (0+255),c
  6867  001018  0ED0               	movlw	208
  6868  00101A  2637               	addwf	??_disp7s_write_f,f,c
  6869  00101C  5037               	movf	??_disp7s_write_f,w,c
  6870  00101E  0F01               	addlw	low _DISP7S_NUMS
  6871  001020  6E38               	movwf	(??_disp7s_write_f+1)& (0+255),c
  6872  001022  C038  FFF6         	movff	??_disp7s_write_f+1,tblptrl
  6873  001026                     	if	1	;There is more than 1 active tblptr byte
  6874  001026  0E08               	movlw	high __smallconst
  6875  001028  6EF7               	movwf	tblptrh,c
  6876  00102A                     	endif
  6877  00102A                     	if	0	;tblptru may be non-zero
  6878  00102A                     	endif
  6879  00102A                     	if	0	;tblptru may be non-zero
  6880  00102A                     	endif
  6881  00102A  0008               	tblrd		*
  6882  00102C  CFF5 F039          	movff	tablat,??_disp7s_write_f+2
  6883  001030  C0FA  F03A         	movff	disp7s_write_f@pi,??_disp7s_write_f+3
  6884  001034  6A3B               	clrf	(??_disp7s_write_f+4)& (0+255),c
  6885  001036  BE3A               	btfsc	(??_disp7s_write_f+3)& (0+255),7,c
  6886  001038  063B               	decf	(??_disp7s_write_f+4)& (0+255),f,c
  6887  00103A  503A               	movf	??_disp7s_write_f+3,w,c
  6888  00103C  2431               	addwf	disp7s_write_f@pDisp,w,c
  6889  00103E  6ED9               	movwf	fsr2l,c
  6890  001040  503B               	movf	??_disp7s_write_f+4,w,c
  6891  001042  2032               	addwfc	disp7s_write_f@pDisp+1,w,c
  6892  001044  6EDA               	movwf	fsr2h,c
  6893  001046  5039               	movf	??_disp7s_write_f+2,w,c
  6894  001048  12DF               	iorwf	indf2,f,c
  6895                           
  6896                           ; BSR set to: 0
  6897  00104A  07FA               	decf	disp7s_write_f@pi& (0+255),f,b
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;display.c: 238: i++;
  6901  00104C  2BFE               	incf	disp7s_write_f@i& (0+255),f,b
  6902  00104E                     l4500:
  6903                           
  6904                           ; BSR set to: 0
  6905  00104E  51FE               	movf	disp7s_write_f@i& (0+255),w,b
  6906  001050  0FEE               	addlw	low disp7s_write_f@buff
  6907  001052  6ED9               	movwf	fsr2l,c
  6908  001054  6ADA               	clrf	fsr2h,c
  6909  001056  50DF               	movf	indf2,w,c
  6910  001058  B4D8               	btfsc	status,2,c
  6911  00105A  0012               	return	
  6912  00105C  D7D7               	goto	l4494
  6913  00105E                     __end_of_disp7s_write_f:
  6914                           	opt callstack 0
  6915                           
  6916 ;; *************** function _itoa *****************
  6917 ;; Defined at:
  6918 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  buf             1   25[COMRAM] PTR unsigned char 
  6921 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  6922 ;;  val             2   26[COMRAM] int 
  6923 ;;  base            2   28[COMRAM] int 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  cp              1    0        PTR unsigned char 
  6926 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  1    wreg      PTR unsigned char 
  6929 ;; Registers used:
  6930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/1
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6936 ;;      Params:         5       0       0       0       0       0       0       0       0
  6937 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6939 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6940 ;;Total ram usage:        6 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    7
  6943 ;; This function calls:
  6944 ;;		_utoa
  6945 ;; This function is called by:
  6946 ;;		_disp7s_write_f
  6947 ;;		_disp7s_write_i
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text55
  6952  002326                     __ptext55:
  6953                           	opt callstack 0
  6954  002326                     _itoa:
  6955                           	opt callstack 19
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;incstack = 0
  6959  002326  AE1C               	btfss	itoa@val+1,7,c
  6960  002328  D00A               	goto	l4260
  6961  00232A  501A               	movf	itoa@buf,w,c
  6962  00232C  6ED9               	movwf	fsr2l,c
  6963  00232E  6ADA               	clrf	fsr2h,c
  6964  002330  0E2D               	movlw	45
  6965  002332  6EDF               	movwf	indf2,c
  6966  002334  2A1A               	incf	itoa@buf,f,c
  6967  002336  6C1B               	negf	itoa@val,c
  6968  002338  1E1C               	comf	itoa@val+1,f,c
  6969  00233A  B0D8               	btfsc	status,0,c
  6970  00233C  2A1C               	incf	itoa@val+1,f,c
  6971  00233E                     l4260:
  6972  00233E  C01A  F012         	movff	itoa@buf,utoa@buf
  6973  002342  C01B  F013         	movff	itoa@val,utoa@val
  6974  002346  C01C  F014         	movff	itoa@val+1,utoa@val+1
  6975  00234A  C01D  F015         	movff	itoa@base,utoa@base
  6976  00234E  C01E  F016         	movff	itoa@base+1,utoa@base+1
  6977  002352  EC19  F00D         	call	_utoa	;wreg free
  6978  002356  0012               	return		;funcret
  6979  002358                     __end_of_itoa:
  6980                           	opt callstack 0
  6981                           
  6982 ;; *************** function _utoa *****************
  6983 ;; Defined at:
  6984 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  buf             1   17[COMRAM] PTR unsigned char 
  6987 ;;		 -> disp7s_write_i@buff(10), disp7s_write_f@buff(10), 
  6988 ;;  val             2   18[COMRAM] unsigned int 
  6989 ;;  base            2   20[COMRAM] int 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  v               2   22[COMRAM] unsigned int 
  6992 ;;  c               1   24[COMRAM] unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      PTR unsigned char 
  6995 ;; Registers used:
  6996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/1
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7002 ;;      Params:         5       0       0       0       0       0       0       0       0
  7003 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7005 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7006 ;;Total ram usage:        8 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    6
  7009 ;; This function calls:
  7010 ;;		___lwdiv
  7011 ;;		___lwmod
  7012 ;; This function is called by:
  7013 ;;		_itoa
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text56
  7018  001A32                     __ptext56:
  7019                           	opt callstack 0
  7020  001A32                     _utoa:
  7021                           	opt callstack 19
  7022                           
  7023                           ;incstack = 0
  7024  001A32  C013  F017         	movff	utoa@val,utoa@v
  7025  001A36  C014  F018         	movff	utoa@val+1,utoa@v+1
  7026  001A3A                     l4216:
  7027  001A3A  C017  F00B         	movff	utoa@v,___lwdiv@dividend
  7028  001A3E  C018  F00C         	movff	utoa@v+1,___lwdiv@dividend+1
  7029  001A42  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  7030  001A46  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  7031  001A4A  EC11  F010         	call	___lwdiv	;wreg free
  7032  001A4E  C00B  F017         	movff	?___lwdiv,utoa@v
  7033  001A52  C00C  F018         	movff	?___lwdiv+1,utoa@v+1
  7034  001A56  2A12               	incf	utoa@buf,f,c
  7035  001A58  5017               	movf	utoa@v,w,c
  7036  001A5A  1018               	iorwf	utoa@v+1,w,c
  7037  001A5C  A4D8               	btfss	status,2,c
  7038  001A5E  D7ED               	goto	l4216
  7039  001A60  5012               	movf	utoa@buf,w,c
  7040  001A62  6ED9               	movwf	fsr2l,c
  7041  001A64  6ADA               	clrf	fsr2h,c
  7042  001A66  0E00               	movlw	0
  7043  001A68  6EDF               	movwf	indf2,c
  7044  001A6A  0612               	decf	utoa@buf,f,c
  7045  001A6C                     l4226:
  7046  001A6C  C013  F00B         	movff	utoa@val,___lwmod@dividend
  7047  001A70  C014  F00C         	movff	utoa@val+1,___lwmod@dividend+1
  7048  001A74  C015  F00D         	movff	utoa@base,___lwmod@divisor
  7049  001A78  C016  F00E         	movff	utoa@base+1,___lwmod@divisor+1
  7050  001A7C  EC12  F011         	call	___lwmod	;wreg free
  7051  001A80  500B               	movf	?___lwmod,w,c
  7052  001A82  6E19               	movwf	utoa@c,c
  7053  001A84  C013  F00B         	movff	utoa@val,___lwdiv@dividend
  7054  001A88  C014  F00C         	movff	utoa@val+1,___lwdiv@dividend+1
  7055  001A8C  C015  F00D         	movff	utoa@base,___lwdiv@divisor
  7056  001A90  C016  F00E         	movff	utoa@base+1,___lwdiv@divisor+1
  7057  001A94  EC11  F010         	call	___lwdiv	;wreg free
  7058  001A98  C00B  F013         	movff	?___lwdiv,utoa@val
  7059  001A9C  C00C  F014         	movff	?___lwdiv+1,utoa@val+1
  7060  001AA0  0E09               	movlw	9
  7061  001AA2  6419               	cpfsgt	utoa@c,c
  7062  001AA4  D002               	goto	l1530
  7063  001AA6  0E07               	movlw	7
  7064  001AA8  2619               	addwf	utoa@c,f,c
  7065  001AAA                     l1530:
  7066  001AAA  0E30               	movlw	48
  7067  001AAC  2619               	addwf	utoa@c,f,c
  7068  001AAE  5012               	movf	utoa@buf,w,c
  7069  001AB0  6ED9               	movwf	fsr2l,c
  7070  001AB2  6ADA               	clrf	fsr2h,c
  7071  001AB4  C019  FFDF         	movff	utoa@c,indf2
  7072  001AB8  0612               	decf	utoa@buf,f,c
  7073  001ABA  5013               	movf	utoa@val,w,c
  7074  001ABC  1014               	iorwf	utoa@val+1,w,c
  7075  001ABE  A4D8               	btfss	status,2,c
  7076  001AC0  D7D5               	goto	l4226
  7077                           
  7078                           ;	Return value of _utoa is never used
  7079  001AC2  2A12               	incf	utoa@buf,f,c
  7080  001AC4  0012               	return		;funcret
  7081  001AC6                     __end_of_utoa:
  7082                           	opt callstack 0
  7083                           
  7084 ;; *************** function ___lwmod *****************
  7085 ;; Defined at:
  7086 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  dividend        2   10[COMRAM] unsigned int 
  7089 ;;  divisor         2   12[COMRAM] unsigned int 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  counter         1   14[COMRAM] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  2   10[COMRAM] unsigned int 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/1
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7101 ;;      Params:         4       0       0       0       0       0       0       0       0
  7102 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7104 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7105 ;;Total ram usage:        5 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    5
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_utoa
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text57
  7116  002224                     __ptext57:
  7117                           	opt callstack 0
  7118  002224                     ___lwmod:
  7119                           	opt callstack 19
  7120                           
  7121                           ;incstack = 0
  7122  002224  500D               	movf	___lwmod@divisor,w,c
  7123  002226  100E               	iorwf	___lwmod@divisor+1,w,c
  7124  002228  B4D8               	btfsc	status,2,c
  7125  00222A  D018               	goto	l1348
  7126  00222C  0E01               	movlw	1
  7127  00222E  6E0F               	movwf	___lwmod@counter,c
  7128  002230  D004               	goto	l4168
  7129  002232                     l4166:
  7130  002232  90D8               	bcf	status,0,c
  7131  002234  360D               	rlcf	___lwmod@divisor,f,c
  7132  002236  360E               	rlcf	___lwmod@divisor+1,f,c
  7133  002238  2A0F               	incf	___lwmod@counter,f,c
  7134  00223A                     l4168:
  7135  00223A  AE0E               	btfss	___lwmod@divisor+1,7,c
  7136  00223C  D7FA               	goto	l4166
  7137  00223E                     u4500:
  7138  00223E  500D               	movf	___lwmod@divisor,w,c
  7139  002240  5C0B               	subwf	___lwmod@dividend,w,c
  7140  002242  500E               	movf	___lwmod@divisor+1,w,c
  7141  002244  580C               	subwfb	___lwmod@dividend+1,w,c
  7142  002246  A0D8               	btfss	status,0,c
  7143  002248  D004               	goto	l4174
  7144  00224A  500D               	movf	___lwmod@divisor,w,c
  7145  00224C  5E0B               	subwf	___lwmod@dividend,f,c
  7146  00224E  500E               	movf	___lwmod@divisor+1,w,c
  7147  002250  5A0C               	subwfb	___lwmod@dividend+1,f,c
  7148  002252                     l4174:
  7149  002252  90D8               	bcf	status,0,c
  7150  002254  320E               	rrcf	___lwmod@divisor+1,f,c
  7151  002256  320D               	rrcf	___lwmod@divisor,f,c
  7152  002258  2E0F               	decfsz	___lwmod@counter,f,c
  7153  00225A  D7F1               	goto	u4500
  7154  00225C                     l1348:
  7155  00225C  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  7156  002260  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  7157  002264  0012               	return		;funcret
  7158  002266                     __end_of___lwmod:
  7159                           	opt callstack 0
  7160                           
  7161 ;; *************** function ___lwdiv *****************
  7162 ;; Defined at:
  7163 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  dividend        2   10[COMRAM] unsigned int 
  7166 ;;  divisor         2   12[COMRAM] unsigned int 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  quotient        2   15[COMRAM] unsigned int 
  7169 ;;  counter         1   14[COMRAM] unsigned char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  2   10[COMRAM] unsigned int 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/1
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7179 ;;      Params:         4       0       0       0       0       0       0       0       0
  7180 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7182 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7183 ;;Total ram usage:        7 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    5
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_utoa
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text58
  7194  002022                     __ptext58:
  7195                           	opt callstack 0
  7196  002022                     ___lwdiv:
  7197                           	opt callstack 19
  7198                           
  7199                           ;incstack = 0
  7200  002022  0E00               	movlw	0
  7201  002024  6E11               	movwf	___lwdiv@quotient+1,c
  7202  002026  0E00               	movlw	0
  7203  002028  6E10               	movwf	___lwdiv@quotient,c
  7204  00202A  500D               	movf	___lwdiv@divisor,w,c
  7205  00202C  100E               	iorwf	___lwdiv@divisor+1,w,c
  7206  00202E  B4D8               	btfsc	status,2,c
  7207  002030  D01C               	goto	l1338
  7208  002032  0E01               	movlw	1
  7209  002034  6E0F               	movwf	___lwdiv@counter,c
  7210  002036  D004               	goto	l4148
  7211  002038                     l4146:
  7212  002038  90D8               	bcf	status,0,c
  7213  00203A  360D               	rlcf	___lwdiv@divisor,f,c
  7214  00203C  360E               	rlcf	___lwdiv@divisor+1,f,c
  7215  00203E  2A0F               	incf	___lwdiv@counter,f,c
  7216  002040                     l4148:
  7217  002040  AE0E               	btfss	___lwdiv@divisor+1,7,c
  7218  002042  D7FA               	goto	l4146
  7219  002044                     u4470:
  7220  002044  90D8               	bcf	status,0,c
  7221  002046  3610               	rlcf	___lwdiv@quotient,f,c
  7222  002048  3611               	rlcf	___lwdiv@quotient+1,f,c
  7223  00204A  500D               	movf	___lwdiv@divisor,w,c
  7224  00204C  5C0B               	subwf	___lwdiv@dividend,w,c
  7225  00204E  500E               	movf	___lwdiv@divisor+1,w,c
  7226  002050  580C               	subwfb	___lwdiv@dividend+1,w,c
  7227  002052  A0D8               	btfss	status,0,c
  7228  002054  D005               	goto	l4158
  7229  002056  500D               	movf	___lwdiv@divisor,w,c
  7230  002058  5E0B               	subwf	___lwdiv@dividend,f,c
  7231  00205A  500E               	movf	___lwdiv@divisor+1,w,c
  7232  00205C  5A0C               	subwfb	___lwdiv@dividend+1,f,c
  7233  00205E  8010               	bsf	___lwdiv@quotient,0,c
  7234  002060                     l4158:
  7235  002060  90D8               	bcf	status,0,c
  7236  002062  320E               	rrcf	___lwdiv@divisor+1,f,c
  7237  002064  320D               	rrcf	___lwdiv@divisor,f,c
  7238  002066  2E0F               	decfsz	___lwdiv@counter,f,c
  7239  002068  D7ED               	goto	u4470
  7240  00206A                     l1338:
  7241  00206A  C010  F00B         	movff	___lwdiv@quotient,?___lwdiv
  7242  00206E  C011  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7243  002072  0012               	return		;funcret
  7244  002074                     __end_of___lwdiv:
  7245                           	opt callstack 0
  7246                           
  7247 ;; *************** function ___fttol *****************
  7248 ;; Defined at:
  7249 ;;		line 44 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fttol.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  f1              3   33[COMRAM] float 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  lval            4   43[COMRAM] unsigned long 
  7254 ;;  exp1            1   47[COMRAM] unsigned char 
  7255 ;;  sign1           1   42[COMRAM] unsigned char 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  4   33[COMRAM] long 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7265 ;;      Params:         4       0       0       0       0       0       0       0       0
  7266 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7267 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7268 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7269 ;;Total ram usage:       15 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    5
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_pulsonic_getTotalSum_mlh
  7276 ;;		_disp7s_write_f
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text59
  7281  0016B6                     __ptext59:
  7282                           	opt callstack 0
  7283  0016B6                     ___fttol:
  7284                           	opt callstack 21
  7285                           
  7286                           ;incstack = 0
  7287  0016B6  C024  F026         	movff	___fttol@f1+2,??___fttol
  7288  0016BA  6A27               	clrf	(??___fttol+1)& (0+255),c
  7289  0016BC  6A28               	clrf	(??___fttol+2)& (0+255),c
  7290  0016BE  3423               	rlcf	___fttol@f1+1,w,c
  7291  0016C0  3626               	rlcf	??___fttol& (0+255),f,c
  7292  0016C2  E301               	bnc	u4951
  7293  0016C4  8027               	bsf	(??___fttol+1)& (0+255),0,c
  7294  0016C6                     u4951:
  7295  0016C6  5026               	movf	??___fttol,w,c
  7296  0016C8  6E30               	movwf	___fttol@exp1,c
  7297  0016CA  5030               	movf	___fttol@exp1,w,c
  7298  0016CC  A4D8               	btfss	status,2,c
  7299  0016CE  D009               	goto	l4406
  7300  0016D0                     u4960:
  7301  0016D0  0E00               	movlw	0
  7302  0016D2  6E22               	movwf	?___fttol,c
  7303  0016D4  0E00               	movlw	0
  7304  0016D6  6E23               	movwf	?___fttol+1,c
  7305  0016D8  0E00               	movlw	0
  7306  0016DA  6E24               	movwf	?___fttol+2,c
  7307  0016DC  0E00               	movlw	0
  7308  0016DE  6E25               	movwf	?___fttol+3,c
  7309  0016E0  0012               	return	
  7310  0016E2                     l4406:
  7311  0016E2  0E17               	movlw	23
  7312  0016E4  6E26               	movwf	??___fttol& (0+255),c
  7313  0016E6  C022  F027         	movff	___fttol@f1,??___fttol+1
  7314  0016EA  C023  F028         	movff	___fttol@f1+1,??___fttol+2
  7315  0016EE  C024  F029         	movff	___fttol@f1+2,??___fttol+3
  7316  0016F2  2826               	incf	??___fttol,w,c
  7317  0016F4  6E2A               	movwf	(??___fttol+4)& (0+255),c
  7318  0016F6  D004               	goto	u4970
  7319  0016F8                     u4975:
  7320  0016F8  90D8               	bcf	status,0,c
  7321  0016FA  3229               	rrcf	??___fttol+3,f,c
  7322  0016FC  3228               	rrcf	??___fttol+2,f,c
  7323  0016FE  3227               	rrcf	??___fttol+1,f,c
  7324  001700                     u4970:
  7325  001700  2E2A               	decfsz	(??___fttol+4)& (0+255),f,c
  7326  001702  D7FA               	goto	u4975
  7327  001704  5027               	movf	??___fttol+1,w,c
  7328  001706  6E2B               	movwf	___fttol@sign1,c
  7329  001708  8E23               	bsf	___fttol@f1+1,7,c
  7330  00170A  0EFF               	movlw	255
  7331  00170C  1622               	andwf	___fttol@f1,f,c
  7332  00170E  0EFF               	movlw	255
  7333  001710  1623               	andwf	___fttol@f1+1,f,c
  7334  001712  0E00               	movlw	0
  7335  001714  1624               	andwf	___fttol@f1+2,f,c
  7336  001716  5022               	movf	___fttol@f1,w,c
  7337  001718  6E2C               	movwf	___fttol@lval,c
  7338  00171A  5023               	movf	___fttol@f1+1,w,c
  7339  00171C  6E2D               	movwf	___fttol@lval+1,c
  7340  00171E  5024               	movf	___fttol@f1+2,w,c
  7341  001720  6E2E               	movwf	___fttol@lval+2,c
  7342  001722  6A2F               	clrf	___fttol@lval+3,c
  7343  001724  0E8E               	movlw	142
  7344  001726  5E30               	subwf	___fttol@exp1,f,c
  7345  001728  AE30               	btfss	___fttol@exp1,7,c
  7346  00172A  D00D               	goto	l4428
  7347  00172C  5030               	movf	___fttol@exp1,w,c
  7348  00172E  0A80               	xorlw	128
  7349  001730  0F8F               	addlw	143
  7350  001732  A0D8               	btfss	status,0,c
  7351  001734  D7CD               	goto	u4960
  7352  001736                     l4424:
  7353  001736  90D8               	bcf	status,0,c
  7354  001738  322F               	rrcf	___fttol@lval+3,f,c
  7355  00173A  322E               	rrcf	___fttol@lval+2,f,c
  7356  00173C  322D               	rrcf	___fttol@lval+1,f,c
  7357  00173E  322C               	rrcf	___fttol@lval,f,c
  7358  001740  3E30               	incfsz	___fttol@exp1,f,c
  7359  001742  D7F9               	goto	l4424
  7360  001744  D00D               	goto	u5010
  7361  001746                     l4428:
  7362  001746  0E17               	movlw	23
  7363  001748  6430               	cpfsgt	___fttol@exp1,c
  7364  00174A  D007               	goto	l4436
  7365  00174C  D7C1               	goto	u4960
  7366  00174E                     l4434:
  7367  00174E  90D8               	bcf	status,0,c
  7368  001750  362C               	rlcf	___fttol@lval,f,c
  7369  001752  362D               	rlcf	___fttol@lval+1,f,c
  7370  001754  362E               	rlcf	___fttol@lval+2,f,c
  7371  001756  362F               	rlcf	___fttol@lval+3,f,c
  7372  001758  0630               	decf	___fttol@exp1,f,c
  7373  00175A                     l4436:
  7374  00175A  5030               	movf	___fttol@exp1,w,c
  7375  00175C  A4D8               	btfss	status,2,c
  7376  00175E  D7F7               	goto	l4434
  7377  001760                     u5010:
  7378  001760  502B               	movf	___fttol@sign1,w,c
  7379  001762  B4D8               	btfsc	status,2,c
  7380  001764  D008               	goto	l4442
  7381  001766  1E2F               	comf	___fttol@lval+3,f,c
  7382  001768  1E2E               	comf	___fttol@lval+2,f,c
  7383  00176A  1E2D               	comf	___fttol@lval+1,f,c
  7384  00176C  6C2C               	negf	___fttol@lval,c
  7385  00176E  0E00               	movlw	0
  7386  001770  222D               	addwfc	___fttol@lval+1,f,c
  7387  001772  222E               	addwfc	___fttol@lval+2,f,c
  7388  001774  222F               	addwfc	___fttol@lval+3,f,c
  7389  001776                     l4442:
  7390  001776  C02C  F022         	movff	___fttol@lval,?___fttol
  7391  00177A  C02D  F023         	movff	___fttol@lval+1,?___fttol+1
  7392  00177E  C02E  F024         	movff	___fttol@lval+2,?___fttol+2
  7393  001782  C02F  F025         	movff	___fttol@lval+3,?___fttol+3
  7394  001786  0012               	return		;funcret
  7395  001788                     __end_of___fttol:
  7396                           	opt callstack 0
  7397                           
  7398 ;; *************** function ___ftmul *****************
  7399 ;; Defined at:
  7400 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftmul.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  f1              3   18[COMRAM] float 
  7403 ;;  f2              3   21[COMRAM] float 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;  f3_as_produc    3   28[COMRAM] unsigned um
  7406 ;;  sign            1   32[COMRAM] unsigned char 
  7407 ;;  cntr            1   31[COMRAM] unsigned char 
  7408 ;;  exp             1   27[COMRAM] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  3   18[COMRAM] float 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7418 ;;      Params:         6       0       0       0       0       0       0       0       0
  7419 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7420 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7421 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7422 ;;Total ram usage:       15 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    6
  7425 ;; This function calls:
  7426 ;;		___ftpack
  7427 ;; This function is called by:
  7428 ;;		_disp7s_write_f
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text60
  7433  0015C2                     __ptext60:
  7434                           	opt callstack 0
  7435  0015C2                     ___ftmul:
  7436                           	opt callstack 20
  7437                           
  7438                           ;incstack = 0
  7439  0015C2  C015  F019         	movff	___ftmul@f1+2,??___ftmul
  7440  0015C6  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  7441  0015C8  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  7442  0015CA  3414               	rlcf	___ftmul@f1+1,w,c
  7443  0015CC  3619               	rlcf	??___ftmul& (0+255),f,c
  7444  0015CE  E301               	bnc	u4861
  7445  0015D0  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  7446  0015D2                     u4861:
  7447  0015D2  5019               	movf	??___ftmul,w,c
  7448  0015D4  6E1C               	movwf	___ftmul@exp,c
  7449  0015D6  501C               	movf	___ftmul@exp,w,c
  7450  0015D8  A4D8               	btfss	status,2,c
  7451  0015DA  D007               	goto	l4340
  7452  0015DC  0E00               	movlw	0
  7453  0015DE  6E13               	movwf	?___ftmul,c
  7454  0015E0  0E00               	movlw	0
  7455  0015E2  6E14               	movwf	?___ftmul+1,c
  7456  0015E4  0E00               	movlw	0
  7457  0015E6  6E15               	movwf	?___ftmul+2,c
  7458  0015E8  0012               	return	
  7459  0015EA                     l4340:
  7460  0015EA  C018  F019         	movff	___ftmul@f2+2,??___ftmul
  7461  0015EE  6A1A               	clrf	(??___ftmul+1)& (0+255),c
  7462  0015F0  6A1B               	clrf	(??___ftmul+2)& (0+255),c
  7463  0015F2  3417               	rlcf	___ftmul@f2+1,w,c
  7464  0015F4  3619               	rlcf	??___ftmul& (0+255),f,c
  7465  0015F6  E301               	bnc	u4881
  7466  0015F8  801A               	bsf	(??___ftmul+1)& (0+255),0,c
  7467  0015FA                     u4881:
  7468  0015FA  5019               	movf	??___ftmul,w,c
  7469  0015FC  6E21               	movwf	___ftmul@sign,c
  7470  0015FE  5021               	movf	___ftmul@sign,w,c
  7471  001600  A4D8               	btfss	status,2,c
  7472  001602  D007               	goto	l4346
  7473  001604  0E00               	movlw	0
  7474  001606  6E13               	movwf	?___ftmul,c
  7475  001608  0E00               	movlw	0
  7476  00160A  6E14               	movwf	?___ftmul+1,c
  7477  00160C  0E00               	movlw	0
  7478  00160E  6E15               	movwf	?___ftmul+2,c
  7479  001610  0012               	return	
  7480  001612                     l4346:
  7481  001612  5021               	movf	___ftmul@sign,w,c
  7482  001614  0F7B               	addlw	123
  7483  001616  261C               	addwf	___ftmul@exp,f,c
  7484  001618  C015  F021         	movff	___ftmul@f1+2,___ftmul@sign
  7485  00161C  5018               	movf	___ftmul@f2+2,w,c
  7486  00161E  1A21               	xorwf	___ftmul@sign,f,c
  7487  001620  0E80               	movlw	128
  7488  001622  1621               	andwf	___ftmul@sign,f,c
  7489  001624  8E14               	bsf	___ftmul@f1+1,7,c
  7490  001626  8E17               	bsf	___ftmul@f2+1,7,c
  7491  001628  0EFF               	movlw	255
  7492  00162A  1616               	andwf	___ftmul@f2,f,c
  7493  00162C  0EFF               	movlw	255
  7494  00162E  1617               	andwf	___ftmul@f2+1,f,c
  7495  001630  0E00               	movlw	0
  7496  001632  1618               	andwf	___ftmul@f2+2,f,c
  7497  001634  0E00               	movlw	0
  7498  001636  6E1D               	movwf	___ftmul@f3_as_product,c
  7499  001638  0E00               	movlw	0
  7500  00163A  6E1E               	movwf	___ftmul@f3_as_product+1,c
  7501  00163C  0E00               	movlw	0
  7502  00163E  6E1F               	movwf	___ftmul@f3_as_product+2,c
  7503  001640  0E07               	movlw	7
  7504  001642  6E20               	movwf	___ftmul@cntr,c
  7505  001644                     l4360:
  7506  001644  A013               	btfss	___ftmul@f1,0,c
  7507  001646  D006               	goto	l4364
  7508  001648  5016               	movf	___ftmul@f2,w,c
  7509  00164A  261D               	addwf	___ftmul@f3_as_product,f,c
  7510  00164C  5017               	movf	___ftmul@f2+1,w,c
  7511  00164E  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  7512  001650  5018               	movf	___ftmul@f2+2,w,c
  7513  001652  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  7514  001654                     l4364:
  7515  001654  90D8               	bcf	status,0,c
  7516  001656  3215               	rrcf	___ftmul@f1+2,f,c
  7517  001658  3214               	rrcf	___ftmul@f1+1,f,c
  7518  00165A  3213               	rrcf	___ftmul@f1,f,c
  7519  00165C  90D8               	bcf	status,0,c
  7520  00165E  3616               	rlcf	___ftmul@f2,f,c
  7521  001660  3617               	rlcf	___ftmul@f2+1,f,c
  7522  001662  3618               	rlcf	___ftmul@f2+2,f,c
  7523  001664  2E20               	decfsz	___ftmul@cntr,f,c
  7524  001666  D7EE               	goto	l4360
  7525  001668  0E09               	movlw	9
  7526  00166A  6E20               	movwf	___ftmul@cntr,c
  7527  00166C                     l4370:
  7528  00166C  A013               	btfss	___ftmul@f1,0,c
  7529  00166E  D006               	goto	l4374
  7530  001670  5016               	movf	___ftmul@f2,w,c
  7531  001672  261D               	addwf	___ftmul@f3_as_product,f,c
  7532  001674  5017               	movf	___ftmul@f2+1,w,c
  7533  001676  221E               	addwfc	___ftmul@f3_as_product+1,f,c
  7534  001678  5018               	movf	___ftmul@f2+2,w,c
  7535  00167A  221F               	addwfc	___ftmul@f3_as_product+2,f,c
  7536  00167C                     l4374:
  7537  00167C  90D8               	bcf	status,0,c
  7538  00167E  3215               	rrcf	___ftmul@f1+2,f,c
  7539  001680  3214               	rrcf	___ftmul@f1+1,f,c
  7540  001682  3213               	rrcf	___ftmul@f1,f,c
  7541  001684  90D8               	bcf	status,0,c
  7542  001686  321F               	rrcf	___ftmul@f3_as_product+2,f,c
  7543  001688  321E               	rrcf	___ftmul@f3_as_product+1,f,c
  7544  00168A  321D               	rrcf	___ftmul@f3_as_product,f,c
  7545  00168C  2E20               	decfsz	___ftmul@cntr,f,c
  7546  00168E  D7EE               	goto	l4370
  7547  001690  C01D  F00B         	movff	___ftmul@f3_as_product,___ftpack@arg
  7548  001694  C01E  F00C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7549  001698  C01F  F00D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7550  00169C  C01C  F00E         	movff	___ftmul@exp,___ftpack@exp
  7551  0016A0  C021  F00F         	movff	___ftmul@sign,___ftpack@sign
  7552  0016A4  EC1F  F00C         	call	___ftpack	;wreg free
  7553  0016A8  C00B  F013         	movff	?___ftpack,?___ftmul
  7554  0016AC  C00C  F014         	movff	?___ftpack+1,?___ftmul+1
  7555  0016B0  C00D  F015         	movff	?___ftpack+2,?___ftmul+2
  7556  0016B4  0012               	return		;funcret
  7557  0016B6                     __end_of___ftmul:
  7558                           	opt callstack 0
  7559                           
  7560 ;; *************** function ___ftge *****************
  7561 ;; Defined at:
  7562 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftge.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  ff1             3   21[COMRAM] float 
  7565 ;;  ff2             3   24[COMRAM] float 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;		None               void
  7570 ;; Registers used:
  7571 ;;		wreg, status,2, status,0
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7577 ;;      Params:         6       0       0       0       0       0       0       0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7579 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7580 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7581 ;;Total ram usage:        9 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    5
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_ikey_parsing
  7588 ;;		_disp7s_write_f
  7589 ;;		_nozzle_isEnabled
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text61
  7594  001DD0                     __ptext61:
  7595                           	opt callstack 0
  7596  001DD0                     ___ftge:
  7597                           	opt callstack 21
  7598                           
  7599                           ;incstack = 0
  7600  001DD0  AE18               	btfss	___ftge@ff1+2,7,c
  7601  001DD2  D00F               	goto	l4386
  7602  001DD4  0E00               	movlw	0
  7603  001DD6  6E1C               	movwf	??___ftge& (0+255),c
  7604  001DD8  0E00               	movlw	0
  7605  001DDA  6E1D               	movwf	(??___ftge+1)& (0+255),c
  7606  001DDC  0E80               	movlw	128
  7607  001DDE  6E1E               	movwf	(??___ftge+2)& (0+255),c
  7608  001DE0  5016               	movf	___ftge@ff1,w,c
  7609  001DE2  5C1C               	subwf	??___ftge,w,c
  7610  001DE4  6E16               	movwf	___ftge@ff1,c
  7611  001DE6  5017               	movf	___ftge@ff1+1,w,c
  7612  001DE8  581D               	subwfb	??___ftge+1,w,c
  7613  001DEA  6E17               	movwf	___ftge@ff1+1,c
  7614  001DEC  5018               	movf	___ftge@ff1+2,w,c
  7615  001DEE  581E               	subwfb	??___ftge+2,w,c
  7616  001DF0  6E18               	movwf	___ftge@ff1+2,c
  7617  001DF2                     l4386:
  7618  001DF2  AE1B               	btfss	___ftge@ff2+2,7,c
  7619  001DF4  D00F               	goto	l4390
  7620  001DF6  0E00               	movlw	0
  7621  001DF8  6E1C               	movwf	??___ftge& (0+255),c
  7622  001DFA  0E00               	movlw	0
  7623  001DFC  6E1D               	movwf	(??___ftge+1)& (0+255),c
  7624  001DFE  0E80               	movlw	128
  7625  001E00  6E1E               	movwf	(??___ftge+2)& (0+255),c
  7626  001E02  5019               	movf	___ftge@ff2,w,c
  7627  001E04  5C1C               	subwf	??___ftge,w,c
  7628  001E06  6E19               	movwf	___ftge@ff2,c
  7629  001E08  501A               	movf	___ftge@ff2+1,w,c
  7630  001E0A  581D               	subwfb	??___ftge+1,w,c
  7631  001E0C  6E1A               	movwf	___ftge@ff2+1,c
  7632  001E0E  501B               	movf	___ftge@ff2+2,w,c
  7633  001E10  581E               	subwfb	??___ftge+2,w,c
  7634  001E12  6E1B               	movwf	___ftge@ff2+2,c
  7635  001E14                     l4390:
  7636  001E14  0E00               	movlw	0
  7637  001E16  1A16               	xorwf	___ftge@ff1,f,c
  7638  001E18  0E00               	movlw	0
  7639  001E1A  1A17               	xorwf	___ftge@ff1+1,f,c
  7640  001E1C  0E80               	movlw	128
  7641  001E1E  1A18               	xorwf	___ftge@ff1+2,f,c
  7642  001E20  0E00               	movlw	0
  7643  001E22  1A19               	xorwf	___ftge@ff2,f,c
  7644  001E24  0E00               	movlw	0
  7645  001E26  1A1A               	xorwf	___ftge@ff2+1,f,c
  7646  001E28  0E80               	movlw	128
  7647  001E2A  1A1B               	xorwf	___ftge@ff2+2,f,c
  7648  001E2C  5019               	movf	___ftge@ff2,w,c
  7649  001E2E  5C16               	subwf	___ftge@ff1,w,c
  7650  001E30  501A               	movf	___ftge@ff2+1,w,c
  7651  001E32  5817               	subwfb	___ftge@ff1+1,w,c
  7652  001E34  501B               	movf	___ftge@ff2+2,w,c
  7653  001E36  5818               	subwfb	___ftge@ff1+2,w,c
  7654  001E38  B0D8               	btfsc	status,0,c
  7655  001E3A  D002               	goto	l4396
  7656  001E3C  90D8               	bcf	status,0,c
  7657  001E3E  0012               	return	
  7658  001E40                     l4396:
  7659  001E40  80D8               	bsf	status,0,c
  7660  001E42  0012               	return		;funcret
  7661  001E44                     __end_of___ftge:
  7662                           	opt callstack 0
  7663                           
  7664 ;; *************** function ___ftadd *****************
  7665 ;; Defined at:
  7666 ;;		line 86 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/ftadd.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  f1              3   21[COMRAM] float 
  7669 ;;  f2              3   24[COMRAM] float 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;  exp1            1   32[COMRAM] unsigned char 
  7672 ;;  exp2            1   31[COMRAM] unsigned char 
  7673 ;;  sign            1   30[COMRAM] unsigned char 
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  3   21[COMRAM] float 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2, status,0, cstack
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7683 ;;      Params:         6       0       0       0       0       0       0       0       0
  7684 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7685 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7686 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7687 ;;Total ram usage:       12 bytes
  7688 ;; Hardware stack levels used:    1
  7689 ;; Hardware stack levels required when called:    6
  7690 ;; This function calls:
  7691 ;;		___ftpack
  7692 ;; This function is called by:
  7693 ;;		_pulsonic_getTotalSum_mlh
  7694 ;;		_disp7s_write_f
  7695 ;; This function uses a non-reentrant model
  7696 ;;
  7697                           
  7698                           	psect	text62
  7699  00105E                     __ptext62:
  7700                           	opt callstack 0
  7701  00105E                     ___ftadd:
  7702                           	opt callstack 20
  7703                           
  7704                           ;incstack = 0
  7705  00105E  C018  F01C         	movff	___ftadd@f1+2,??___ftadd
  7706  001062  6A1D               	clrf	(??___ftadd+1)& (0+255),c
  7707  001064  6A1E               	clrf	(??___ftadd+2)& (0+255),c
  7708  001066  3417               	rlcf	___ftadd@f1+1,w,c
  7709  001068  361C               	rlcf	??___ftadd& (0+255),f,c
  7710  00106A  E301               	bnc	u4651
  7711  00106C  801D               	bsf	(??___ftadd+1)& (0+255),0,c
  7712  00106E                     u4651:
  7713  00106E  501C               	movf	??___ftadd,w,c
  7714  001070  6E21               	movwf	___ftadd@exp1,c
  7715  001072  C01B  F01C         	movff	___ftadd@f2+2,??___ftadd
  7716  001076  6A1D               	clrf	(??___ftadd+1)& (0+255),c
  7717  001078  6A1E               	clrf	(??___ftadd+2)& (0+255),c
  7718  00107A  341A               	rlcf	___ftadd@f2+1,w,c
  7719  00107C  361C               	rlcf	??___ftadd& (0+255),f,c
  7720  00107E  E301               	bnc	u4661
  7721  001080  801D               	bsf	(??___ftadd+1)& (0+255),0,c
  7722  001082                     u4661:
  7723  001082  501C               	movf	??___ftadd,w,c
  7724  001084  6E20               	movwf	___ftadd@exp2,c
  7725  001086  5021               	movf	___ftadd@exp1,w,c
  7726  001088  B4D8               	btfsc	status,2,c
  7727  00108A  D00A               	goto	u4690
  7728  00108C  5020               	movf	___ftadd@exp2,w,c
  7729  00108E  5C21               	subwf	___ftadd@exp1,w,c
  7730  001090  B0D8               	btfsc	status,0,c
  7731  001092  D00D               	goto	l4272
  7732  001094  5021               	movf	___ftadd@exp1,w,c
  7733  001096  5C20               	subwf	___ftadd@exp2,w,c
  7734  001098  6E1C               	movwf	??___ftadd& (0+255),c
  7735  00109A  0E18               	movlw	24
  7736  00109C  641C               	cpfsgt	??___ftadd,c
  7737  00109E  D007               	goto	l4272
  7738  0010A0                     u4690:
  7739  0010A0  C019  F016         	movff	___ftadd@f2,?___ftadd
  7740  0010A4  C01A  F017         	movff	___ftadd@f2+1,?___ftadd+1
  7741  0010A8  C01B  F018         	movff	___ftadd@f2+2,?___ftadd+2
  7742  0010AC  0012               	return	
  7743  0010AE                     l4272:
  7744  0010AE  5020               	movf	___ftadd@exp2,w,c
  7745  0010B0  B4D8               	btfsc	status,2,c
  7746  0010B2  D00A               	goto	u4720
  7747  0010B4  5021               	movf	___ftadd@exp1,w,c
  7748  0010B6  5C20               	subwf	___ftadd@exp2,w,c
  7749  0010B8  B0D8               	btfsc	status,0,c
  7750  0010BA  D00D               	goto	l4278
  7751  0010BC  5020               	movf	___ftadd@exp2,w,c
  7752  0010BE  5C21               	subwf	___ftadd@exp1,w,c
  7753  0010C0  6E1C               	movwf	??___ftadd& (0+255),c
  7754  0010C2  0E18               	movlw	24
  7755  0010C4  641C               	cpfsgt	??___ftadd,c
  7756  0010C6  D007               	goto	l4278
  7757  0010C8                     u4720:
  7758  0010C8  C016  F016         	movff	___ftadd@f1,?___ftadd
  7759  0010CC  C017  F017         	movff	___ftadd@f1+1,?___ftadd+1
  7760  0010D0  C018  F018         	movff	___ftadd@f1+2,?___ftadd+2
  7761  0010D4  0012               	return	
  7762  0010D6                     l4278:
  7763  0010D6  0E06               	movlw	6
  7764  0010D8  6E1F               	movwf	___ftadd@sign,c
  7765  0010DA  BE18               	btfsc	___ftadd@f1+2,7,c
  7766  0010DC  8E1F               	bsf	___ftadd@sign,7,c
  7767  0010DE  BE1B               	btfsc	___ftadd@f2+2,7,c
  7768  0010E0  8C1F               	bsf	___ftadd@sign,6,c
  7769  0010E2  8E17               	bsf	___ftadd@f1+1,7,c
  7770  0010E4  0EFF               	movlw	255
  7771  0010E6  1616               	andwf	___ftadd@f1,f,c
  7772  0010E8  0EFF               	movlw	255
  7773  0010EA  1617               	andwf	___ftadd@f1+1,f,c
  7774  0010EC  0E00               	movlw	0
  7775  0010EE  1618               	andwf	___ftadd@f1+2,f,c
  7776  0010F0  8E1A               	bsf	___ftadd@f2+1,7,c
  7777  0010F2  0EFF               	movlw	255
  7778  0010F4  1619               	andwf	___ftadd@f2,f,c
  7779  0010F6  0EFF               	movlw	255
  7780  0010F8  161A               	andwf	___ftadd@f2+1,f,c
  7781  0010FA  0E00               	movlw	0
  7782  0010FC  161B               	andwf	___ftadd@f2+2,f,c
  7783  0010FE  5020               	movf	___ftadd@exp2,w,c
  7784  001100  5C21               	subwf	___ftadd@exp1,w,c
  7785  001102  B0D8               	btfsc	status,0,c
  7786  001104  D01B               	goto	l4304
  7787  001106                     u4750:
  7788  001106  90D8               	bcf	status,0,c
  7789  001108  3619               	rlcf	___ftadd@f2,f,c
  7790  00110A  361A               	rlcf	___ftadd@f2+1,f,c
  7791  00110C  361B               	rlcf	___ftadd@f2+2,f,c
  7792  00110E  0620               	decf	___ftadd@exp2,f,c
  7793  001110  5021               	movf	___ftadd@exp1,w,c
  7794  001112  1820               	xorwf	___ftadd@exp2,w,c
  7795  001114  B4D8               	btfsc	status,2,c
  7796  001116  D00D               	goto	l4302
  7797  001118  061F               	decf	___ftadd@sign,f,c
  7798  00111A  C01F  F01C         	movff	___ftadd@sign,??___ftadd
  7799  00111E  0E07               	movlw	7
  7800  001120  161C               	andwf	??___ftadd,f,c
  7801  001122  B4D8               	btfsc	status,2,c
  7802  001124  D006               	goto	l4302
  7803  001126  D7EF               	goto	u4750
  7804  001128                     l4300:
  7805  001128  90D8               	bcf	status,0,c
  7806  00112A  3218               	rrcf	___ftadd@f1+2,f,c
  7807  00112C  3217               	rrcf	___ftadd@f1+1,f,c
  7808  00112E  3216               	rrcf	___ftadd@f1,f,c
  7809  001130  2A21               	incf	___ftadd@exp1,f,c
  7810  001132                     l4302:
  7811  001132  5020               	movf	___ftadd@exp2,w,c
  7812  001134  1821               	xorwf	___ftadd@exp1,w,c
  7813  001136  B4D8               	btfsc	status,2,c
  7814  001138  D01F               	goto	u4820
  7815  00113A  D7F6               	goto	l4300
  7816  00113C                     l4304:
  7817  00113C  5021               	movf	___ftadd@exp1,w,c
  7818  00113E  5C20               	subwf	___ftadd@exp2,w,c
  7819  001140  B0D8               	btfsc	status,0,c
  7820  001142  D01A               	goto	u4820
  7821  001144                     u4790:
  7822  001144  90D8               	bcf	status,0,c
  7823  001146  3616               	rlcf	___ftadd@f1,f,c
  7824  001148  3617               	rlcf	___ftadd@f1+1,f,c
  7825  00114A  3618               	rlcf	___ftadd@f1+2,f,c
  7826  00114C  0621               	decf	___ftadd@exp1,f,c
  7827  00114E  5021               	movf	___ftadd@exp1,w,c
  7828  001150  1820               	xorwf	___ftadd@exp2,w,c
  7829  001152  B4D8               	btfsc	status,2,c
  7830  001154  D00D               	goto	l4314
  7831  001156  061F               	decf	___ftadd@sign,f,c
  7832  001158  C01F  F01C         	movff	___ftadd@sign,??___ftadd
  7833  00115C  0E07               	movlw	7
  7834  00115E  161C               	andwf	??___ftadd,f,c
  7835  001160  B4D8               	btfsc	status,2,c
  7836  001162  D006               	goto	l4314
  7837  001164  D7EF               	goto	u4790
  7838  001166                     l4312:
  7839  001166  90D8               	bcf	status,0,c
  7840  001168  321B               	rrcf	___ftadd@f2+2,f,c
  7841  00116A  321A               	rrcf	___ftadd@f2+1,f,c
  7842  00116C  3219               	rrcf	___ftadd@f2,f,c
  7843  00116E  2A20               	incf	___ftadd@exp2,f,c
  7844  001170                     l4314:
  7845  001170  5020               	movf	___ftadd@exp2,w,c
  7846  001172  1821               	xorwf	___ftadd@exp1,w,c
  7847  001174  A4D8               	btfss	status,2,c
  7848  001176  D7F7               	goto	l4312
  7849  001178                     u4820:
  7850  001178  AE1F               	btfss	___ftadd@sign,7,c
  7851  00117A  D00C               	goto	l1189
  7852  00117C  0EFF               	movlw	255
  7853  00117E  1A16               	xorwf	___ftadd@f1,f,c
  7854  001180  0EFF               	movlw	255
  7855  001182  1A17               	xorwf	___ftadd@f1+1,f,c
  7856  001184  0EFF               	movlw	255
  7857  001186  1A18               	xorwf	___ftadd@f1+2,f,c
  7858  001188  0E01               	movlw	1
  7859  00118A  2616               	addwf	___ftadd@f1,f,c
  7860  00118C  0E00               	movlw	0
  7861  00118E  2217               	addwfc	___ftadd@f1+1,f,c
  7862  001190  0E00               	movlw	0
  7863  001192  2218               	addwfc	___ftadd@f1+2,f,c
  7864  001194                     l1189:
  7865  001194  AC1F               	btfss	___ftadd@sign,6,c
  7866  001196  D00C               	goto	l4320
  7867  001198  0EFF               	movlw	255
  7868  00119A  1A19               	xorwf	___ftadd@f2,f,c
  7869  00119C  0EFF               	movlw	255
  7870  00119E  1A1A               	xorwf	___ftadd@f2+1,f,c
  7871  0011A0  0EFF               	movlw	255
  7872  0011A2  1A1B               	xorwf	___ftadd@f2+2,f,c
  7873  0011A4  0E01               	movlw	1
  7874  0011A6  2619               	addwf	___ftadd@f2,f,c
  7875  0011A8  0E00               	movlw	0
  7876  0011AA  221A               	addwfc	___ftadd@f2+1,f,c
  7877  0011AC  0E00               	movlw	0
  7878  0011AE  221B               	addwfc	___ftadd@f2+2,f,c
  7879  0011B0                     l4320:
  7880  0011B0  0E00               	movlw	0
  7881  0011B2  6E1F               	movwf	___ftadd@sign,c
  7882  0011B4  5016               	movf	___ftadd@f1,w,c
  7883  0011B6  2619               	addwf	___ftadd@f2,f,c
  7884  0011B8  5017               	movf	___ftadd@f1+1,w,c
  7885  0011BA  221A               	addwfc	___ftadd@f2+1,f,c
  7886  0011BC  5018               	movf	___ftadd@f1+2,w,c
  7887  0011BE  221B               	addwfc	___ftadd@f2+2,f,c
  7888  0011C0  AE1B               	btfss	___ftadd@f2+2,7,c
  7889  0011C2  D00E               	goto	l4330
  7890  0011C4  0EFF               	movlw	255
  7891  0011C6  1A19               	xorwf	___ftadd@f2,f,c
  7892  0011C8  0EFF               	movlw	255
  7893  0011CA  1A1A               	xorwf	___ftadd@f2+1,f,c
  7894  0011CC  0EFF               	movlw	255
  7895  0011CE  1A1B               	xorwf	___ftadd@f2+2,f,c
  7896  0011D0  0E01               	movlw	1
  7897  0011D2  2619               	addwf	___ftadd@f2,f,c
  7898  0011D4  0E00               	movlw	0
  7899  0011D6  221A               	addwfc	___ftadd@f2+1,f,c
  7900  0011D8  0E00               	movlw	0
  7901  0011DA  221B               	addwfc	___ftadd@f2+2,f,c
  7902  0011DC  0E01               	movlw	1
  7903  0011DE  6E1F               	movwf	___ftadd@sign,c
  7904  0011E0                     l4330:
  7905  0011E0  C019  F00B         	movff	___ftadd@f2,___ftpack@arg
  7906  0011E4  C01A  F00C         	movff	___ftadd@f2+1,___ftpack@arg+1
  7907  0011E8  C01B  F00D         	movff	___ftadd@f2+2,___ftpack@arg+2
  7908  0011EC  C021  F00E         	movff	___ftadd@exp1,___ftpack@exp
  7909  0011F0  C01F  F00F         	movff	___ftadd@sign,___ftpack@sign
  7910  0011F4  EC1F  F00C         	call	___ftpack	;wreg free
  7911  0011F8  C00B  F016         	movff	?___ftpack,?___ftadd
  7912  0011FC  C00C  F017         	movff	?___ftpack+1,?___ftadd+1
  7913  001200  C00D  F018         	movff	?___ftpack+2,?___ftadd+2
  7914  001204  0012               	return		;funcret
  7915  001206                     __end_of___ftadd:
  7916                           	opt callstack 0
  7917                           
  7918 ;; *************** function ___ftpack *****************
  7919 ;; Defined at:
  7920 ;;		line 62 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/float.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  arg             3   10[COMRAM] unsigned um
  7923 ;;  exp             1   13[COMRAM] unsigned char 
  7924 ;;  sign            1   14[COMRAM] unsigned char 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  3   10[COMRAM] float 
  7929 ;; Registers used:
  7930 ;;		wreg, status,2, status,0
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7936 ;;      Params:         5       0       0       0       0       0       0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7938 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7939 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7940 ;;Total ram usage:        8 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    5
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		___ftadd
  7947 ;;		___ftmul
  7948 ;;		___lwtoft
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text63
  7953  00183E                     __ptext63:
  7954                           	opt callstack 0
  7955  00183E                     ___ftpack:
  7956                           	opt callstack 20
  7957                           
  7958                           ;incstack = 0
  7959  00183E  500E               	movf	___ftpack@exp,w,c
  7960  001840  B4D8               	btfsc	status,2,c
  7961  001842  D005               	goto	u4530
  7962  001844  500B               	movf	___ftpack@arg,w,c
  7963  001846  100C               	iorwf	___ftpack@arg+1,w,c
  7964  001848  100D               	iorwf	___ftpack@arg+2,w,c
  7965  00184A  A4D8               	btfss	status,2,c
  7966  00184C  D00C               	goto	l4188
  7967  00184E                     u4530:
  7968  00184E  0E00               	movlw	0
  7969  001850  6E0B               	movwf	?___ftpack,c
  7970  001852  0E00               	movlw	0
  7971  001854  6E0C               	movwf	?___ftpack+1,c
  7972  001856  0E00               	movlw	0
  7973  001858  6E0D               	movwf	?___ftpack+2,c
  7974  00185A  0012               	return	
  7975  00185C                     l4186:
  7976  00185C  2A0E               	incf	___ftpack@exp,f,c
  7977  00185E  90D8               	bcf	status,0,c
  7978  001860  320D               	rrcf	___ftpack@arg+2,f,c
  7979  001862  320C               	rrcf	___ftpack@arg+1,f,c
  7980  001864  320B               	rrcf	___ftpack@arg,f,c
  7981  001866                     l4188:
  7982  001866  0E00               	movlw	0
  7983  001868  140B               	andwf	___ftpack@arg,w,c
  7984  00186A  6E10               	movwf	??___ftpack& (0+255),c
  7985  00186C  0E00               	movlw	0
  7986  00186E  140C               	andwf	___ftpack@arg+1,w,c
  7987  001870  6E11               	movwf	(??___ftpack+1)& (0+255),c
  7988  001872  0EFE               	movlw	254
  7989  001874  140D               	andwf	___ftpack@arg+2,w,c
  7990  001876  6E12               	movwf	(??___ftpack+2)& (0+255),c
  7991  001878  5010               	movf	??___ftpack,w,c
  7992  00187A  1011               	iorwf	??___ftpack+1,w,c
  7993  00187C  1012               	iorwf	??___ftpack+2,w,c
  7994  00187E  B4D8               	btfsc	status,2,c
  7995  001880  D00C               	goto	l4194
  7996  001882  D7EC               	goto	l4186
  7997  001884                     l4190:
  7998  001884  2A0E               	incf	___ftpack@exp,f,c
  7999  001886  0E01               	movlw	1
  8000  001888  260B               	addwf	___ftpack@arg,f,c
  8001  00188A  0E00               	movlw	0
  8002  00188C  220C               	addwfc	___ftpack@arg+1,f,c
  8003  00188E  0E00               	movlw	0
  8004  001890  220D               	addwfc	___ftpack@arg+2,f,c
  8005  001892  90D8               	bcf	status,0,c
  8006  001894  320D               	rrcf	___ftpack@arg+2,f,c
  8007  001896  320C               	rrcf	___ftpack@arg+1,f,c
  8008  001898  320B               	rrcf	___ftpack@arg,f,c
  8009  00189A                     l4194:
  8010  00189A  0E00               	movlw	0
  8011  00189C  140B               	andwf	___ftpack@arg,w,c
  8012  00189E  6E10               	movwf	??___ftpack& (0+255),c
  8013  0018A0  0E00               	movlw	0
  8014  0018A2  140C               	andwf	___ftpack@arg+1,w,c
  8015  0018A4  6E11               	movwf	(??___ftpack+1)& (0+255),c
  8016  0018A6  0EFF               	movlw	255
  8017  0018A8  140D               	andwf	___ftpack@arg+2,w,c
  8018  0018AA  6E12               	movwf	(??___ftpack+2)& (0+255),c
  8019  0018AC  5010               	movf	??___ftpack,w,c
  8020  0018AE  1011               	iorwf	??___ftpack+1,w,c
  8021  0018B0  1012               	iorwf	??___ftpack+2,w,c
  8022  0018B2  B4D8               	btfsc	status,2,c
  8023  0018B4  D006               	goto	l4198
  8024  0018B6  D7E6               	goto	l4190
  8025  0018B8                     l4196:
  8026  0018B8  060E               	decf	___ftpack@exp,f,c
  8027  0018BA  90D8               	bcf	status,0,c
  8028  0018BC  360B               	rlcf	___ftpack@arg,f,c
  8029  0018BE  360C               	rlcf	___ftpack@arg+1,f,c
  8030  0018C0  360D               	rlcf	___ftpack@arg+2,f,c
  8031  0018C2                     l4198:
  8032  0018C2  BE0C               	btfsc	___ftpack@arg+1,7,c
  8033  0018C4  D003               	goto	u4570
  8034  0018C6  0E02               	movlw	2
  8035  0018C8  600E               	cpfslt	___ftpack@exp,c
  8036  0018CA  D7F6               	goto	l4196
  8037  0018CC                     u4570:
  8038  0018CC  A00E               	btfss	___ftpack@exp,0,c
  8039  0018CE  9E0C               	bcf	___ftpack@arg+1,7,c
  8040  0018D0  90D8               	bcf	status,0,c
  8041  0018D2  320E               	rrcf	___ftpack@exp,f,c
  8042  0018D4  500E               	movf	___ftpack@exp,w,c
  8043  0018D6  120D               	iorwf	___ftpack@arg+2,f,c
  8044  0018D8  500F               	movf	___ftpack@sign,w,c
  8045  0018DA  A4D8               	btfss	status,2,c
  8046  0018DC  8E0D               	bsf	___ftpack@arg+2,7,c
  8047  0018DE  C00B  F00B         	movff	___ftpack@arg,?___ftpack
  8048  0018E2  C00C  F00C         	movff	___ftpack@arg+1,?___ftpack+1
  8049  0018E6  C00D  F00D         	movff	___ftpack@arg+2,?___ftpack+2
  8050  0018EA  0012               	return		;funcret
  8051  0018EC                     __end_of___ftpack:
  8052                           	opt callstack 0
  8053                           
  8054 ;; *************** function _disp7s_modeDisp_off *****************
  8055 ;; Defined at:
  8056 ;;		line 156 in file "display.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;		None
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 3F/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8073 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8074 ;;Total ram usage:        0 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:    6
  8077 ;; This function calls:
  8078 ;;		_disp7s_off
  8079 ;; This function is called by:
  8080 ;;		_autoMode_init
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text64
  8085  0024FC                     __ptext64:
  8086                           	opt callstack 0
  8087  0024FC                     _disp7s_modeDisp_off:
  8088                           	opt callstack 23
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;display.c: 158: disp7s_off(pulsonic.disp7s.mode, 2);
  8092                           
  8093                           ;incstack = 0
  8094  0024FC  0E3E               	movlw	low (_pulsonic+62)
  8095  0024FE  6E0B               	movwf	disp7s_off@pDisp,c
  8096  002500  0E01               	movlw	high (_pulsonic+62)
  8097  002502  6E0C               	movwf	disp7s_off@pDisp+1,c
  8098  002504  0E02               	movlw	2
  8099  002506  6E0D               	movwf	disp7s_off@NUM_OF_DISP,c
  8100  002508  EC74  F011         	call	_disp7s_off	;wreg free
  8101  00250C  0012               	return		;funcret
  8102  00250E                     __end_of_disp7s_modeDisp_off:
  8103                           	opt callstack 0
  8104                           
  8105 ;; *************** function _disp7s_off *****************
  8106 ;; Defined at:
  8107 ;;		line 150 in file "display.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  pDisp           2   10[COMRAM] PTR unsigned char 
  8110 ;;		 -> pulsonic.disp7s(5), pulsonic(64), 
  8111 ;;  NUM_OF_DISP     1   12[COMRAM] char 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  i               1   15[COMRAM] char 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8123 ;;      Params:         3       0       0       0       0       0       0       0       0
  8124 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8125 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8126 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8127 ;;Total ram usage:        6 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    5
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_disp7s_modeDisp_off
  8134 ;;		_disp7s_write_f
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text65
  8139  0022E8                     __ptext65:
  8140                           	opt callstack 0
  8141  0022E8                     _disp7s_off:
  8142                           	opt callstack 21
  8143                           
  8144                           ;display.c: 152: int8_t i;;display.c: 153: for (i=0; i<NUM_OF_DISP; i++)
  8145                           
  8146                           ;incstack = 0
  8147  0022E8  0E00               	movlw	0
  8148  0022EA  6E10               	movwf	disp7s_off@i,c
  8149  0022EC  D013               	goto	l4250
  8150  0022EE                     l4246:
  8151                           
  8152                           ;display.c: 154: {pDisp[i] = DISP7S_CHARS[OFF];}
  8153  0022EE  0E0F               	movlw	low _DISP7S_CHARS
  8154  0022F0  6EF6               	movwf	tblptrl,c
  8155  0022F2                     	if	1	;There is more than 1 active tblptr byte
  8156  0022F2  0E08               	movlw	high _DISP7S_CHARS
  8157  0022F4  6EF7               	movwf	tblptrh,c
  8158  0022F6                     	endif
  8159  0022F6                     	if	0	;There are less than 3 active tblptr bytes
  8160  0022F6                     	endif
  8161  0022F6  C010  F00E         	movff	disp7s_off@i,??_disp7s_off
  8162  0022FA  6A0F               	clrf	(??_disp7s_off+1)& (0+255),c
  8163  0022FC  BE0E               	btfsc	??_disp7s_off& (0+255),7,c
  8164  0022FE  060F               	decf	(??_disp7s_off+1)& (0+255),f,c
  8165  002300  500E               	movf	??_disp7s_off,w,c
  8166  002302  240B               	addwf	disp7s_off@pDisp,w,c
  8167  002304  6ED9               	movwf	fsr2l,c
  8168  002306  500F               	movf	??_disp7s_off+1,w,c
  8169  002308  200C               	addwfc	disp7s_off@pDisp+1,w,c
  8170  00230A  6EDA               	movwf	fsr2h,c
  8171  00230C  0008               	tblrd		*
  8172  00230E  CFF5 FFDF          	movff	tablat,indf2
  8173  002312  2A10               	incf	disp7s_off@i,f,c
  8174  002314                     l4250:
  8175  002314  5010               	movf	disp7s_off@i,w,c
  8176  002316  0A80               	xorlw	128
  8177  002318  6E0E               	movwf	??_disp7s_off& (0+255),c
  8178  00231A  500D               	movf	disp7s_off@NUM_OF_DISP,w,c
  8179  00231C  0A80               	xorlw	128
  8180  00231E  5C0E               	subwf	??_disp7s_off& (0+255),w,c
  8181  002320  B0D8               	btfsc	status,0,c
  8182  002322  0012               	return	
  8183  002324  D7E4               	goto	l4246
  8184  002326                     __end_of_disp7s_off:
  8185                           	opt callstack 0
  8186                           
  8187 ;; *************** function _INTERRUPCION *****************
  8188 ;; Defined at:
  8189 ;;		line 225 in file "main.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;		None
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8203 ;;      Params:         0       0       0       0       0       0       0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8205 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8206 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8207 ;;Total ram usage:        6 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; Hardware stack levels required when called:    4
  8210 ;; This function calls:
  8211 ;;		_mpap_job
  8212 ;; This function is called by:
  8213 ;;		Interrupt level 2
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	intcode
  8218  000008                     __pintcode:
  8219                           	opt callstack 0
  8220  000008                     _INTERRUPCION:
  8221                           	opt callstack 19
  8222                           
  8223                           ;incstack = 0
  8224  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8225  00000A  ED60  F010         	call	int_func,f	;refresh shadow registers
  8226                           
  8227                           	psect	intcode_body
  8228  0020C0                     __pintcode_body:
  8229                           	opt callstack 19
  8230  0020C0                     int_func:
  8231                           	opt callstack 19
  8232  0020C0  0006               	pop		; remove dummy address from shadow register refresh
  8233  0020C2  CFFA F005          	movff	pclath,??_INTERRUPCION
  8234  0020C6  CFFB F006          	movff	pclatu,??_INTERRUPCION+1
  8235  0020CA  CFD9 F007          	movff	fsr2l,??_INTERRUPCION+2
  8236  0020CE  CFDA F008          	movff	fsr2h,??_INTERRUPCION+3
  8237  0020D2  CFF3 F009          	movff	prodl,??_INTERRUPCION+4
  8238  0020D6  CFF4 F00A          	movff	prodh,??_INTERRUPCION+5
  8239                           
  8240                           ;main.c: 227: if (TMR0IF)
  8241  0020DA  A4F2               	btfss	4082,2,c	;volatile
  8242  0020DC  D008               	goto	i2l133
  8243                           
  8244                           ;main.c: 228: {;main.c: 229: isr_flag.f1ms = 1;
  8245  0020DE  0100               	movlb	0	; () banked
  8246  0020E0  81CF               	bsf	_isr_flag& (0+255),0,b	;volatile
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;main.c: 230: mpap_job();
  8250  0020E2  ECA9  F010         	call	_mpap_job	;wreg free
  8251                           
  8252                           ;main.c: 232: TMR0IF = 0;
  8253  0020E6  94F2               	bcf	4082,2,c	;volatile
  8254                           
  8255                           ;main.c: 233: TMR0H = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                           >> 8);
  8256  0020E8  68D7               	setf	4055,c	;volatile
  8257                           
  8258                           ;main.c: 234: TMR0L = (uint8_t)((uint16_t)((1UL<<16) - ( 1.0E-3 *48000000UL / (256*4)) )
      +                          );
  8259  0020EA  0ED1               	movlw	209
  8260  0020EC  6ED6               	movwf	4054,c	;volatile
  8261  0020EE                     i2l133:
  8262  0020EE  C00A  FFF4         	movff	??_INTERRUPCION+5,prodh
  8263  0020F2  C009  FFF3         	movff	??_INTERRUPCION+4,prodl
  8264  0020F6  C008  FFDA         	movff	??_INTERRUPCION+3,fsr2h
  8265  0020FA  C007  FFD9         	movff	??_INTERRUPCION+2,fsr2l
  8266  0020FE  C006  FFFB         	movff	??_INTERRUPCION+1,pclatu
  8267  002102  C005  FFFA         	movff	??_INTERRUPCION,pclath
  8268  002106  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8269  002108  0011               	retfie		f
  8270  00210A                     __end_of_INTERRUPCION:
  8271                           	opt callstack 0
  8272                           
  8273 ;; *************** function _mpap_job *****************
  8274 ;; Defined at:
  8275 ;;		line 140 in file "mpap.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  cod_ret         1    0        char 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      char 
  8282 ;; Registers used:
  8283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 3F/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8289 ;;      Params:         0       0       0       0       0       0       0       0       0
  8290 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8292 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8293 ;;Total ram usage:        1 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    3
  8296 ;; This function calls:
  8297 ;;		__mpap_off
  8298 ;;		_mpap_homming
  8299 ;;		_mpap_normal_mode
  8300 ;; This function is called by:
  8301 ;;		_INTERRUPCION
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text67
  8306  002152                     __ptext67:
  8307                           	opt callstack 0
  8308  002152                     _mpap_job:
  8309                           	opt callstack 19
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;mpap.c: 142: int8_t cod_ret;;mpap.c: 144: if (mpap.mode == MPAP_HOMMING_MODE)
  8313                           
  8314                           ;incstack = 0
  8315  002152  0E02               	movlw	2
  8316  002154  184E               	xorwf	_mpap+7,w,c	;volatile
  8317  002156  A4D8               	btfss	status,2,c
  8318  002158  D003               	goto	i2l4002
  8319                           
  8320                           ; BSR set to: 0
  8321  00215A  ECE5  F00F         	call	_mpap_homming	;wreg free
  8322  00215E  0012               	return	
  8323  002160                     i2l4002:
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;mpap.c: 147: else if (mpap.mode == MPAP_NORMAL_MODE)
  8327  002160  0E03               	movlw	3
  8328  002162  184E               	xorwf	_mpap+7,w,c	;volatile
  8329  002164  A4D8               	btfss	status,2,c
  8330  002166  D003               	goto	i2l4006
  8331                           
  8332                           ; BSR set to: 0
  8333  002168  ECCD  F010         	call	_mpap_normal_mode	;wreg free
  8334  00216C  0012               	return	
  8335  00216E                     i2l4006:
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;mpap.c: 150: else if (mpap.mode == MPAP_STALL_MODE)
  8339  00216E  044E               	decf	_mpap+7,w,c	;volatile
  8340  002170  A4D8               	btfss	status,2,c
  8341  002172  0012               	return	
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;mpap.c: 151: {;mpap.c: 152: mpap.numSteps_tomove = 0x00;
  8345  002174  0E00               	movlw	0
  8346  002176  6E4C               	movwf	_mpap+5,c	;volatile
  8347  002178  0E00               	movlw	0
  8348  00217A  6E4B               	movwf	_mpap+4,c	;volatile
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;mpap.c: 153: mpap_off();
  8352  00217C  D801               	call	i2u432_48
  8353  00217E  D00A               	goto	i2u432_49
  8354  002180                     i2u432_48:
  8355  002180  0005               	push	
  8356  002182  6EFA               	movwf	pclath,c
  8357  002184  51EC               	movf	_mpap_off& (0+255),w,b
  8358  002186  6EFD               	movwf	tosl,c
  8359  002188  51ED               	movf	(_mpap_off+1)& (0+255),w,b
  8360  00218A  6EFE               	movwf	tosh,c
  8361  00218C  50F8               	movf	tblptru,w,c
  8362  00218E  6EFF               	movwf	tosu,c
  8363  002190  50FA               	movf	pclath,w,c
  8364  002192  0012               	return		;indir
  8365  002194                     i2u432_49:
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;mpap.c: 155: mpap.mode = MPAP_IDLE_MODE;
  8369  002194  0E00               	movlw	0
  8370  002196  6E4E               	movwf	_mpap+7,c	;volatile
  8371  002198  0012               	return	
  8372  00219A                     __end_of_mpap_job:
  8373                           	opt callstack 0
  8374                           
  8375 ;; *************** function _mpap_normal_mode *****************
  8376 ;; Defined at:
  8377 ;;		line 120 in file "mpap.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;		None
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  cod_ret         1    1[COMRAM] char 
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      char 
  8384 ;; Registers used:
  8385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8386 ;; Tracked objects:
  8387 ;;		On entry : 3F/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8391 ;;      Params:         0       0       0       0       0       0       0       0       0
  8392 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8394 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8395 ;;Total ram usage:        1 bytes
  8396 ;; Hardware stack levels used:    1
  8397 ;; Hardware stack levels required when called:    2
  8398 ;; This function calls:
  8399 ;;		_mpap_do1step
  8400 ;; This function is called by:
  8401 ;;		_mpap_job
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text68
  8406  00219A                     __ptext68:
  8407                           	opt callstack 0
  8408  00219A                     _mpap_normal_mode:
  8409                           	opt callstack 19
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;mpap.c: 122: int8_t cod_ret = 0;
  8413                           
  8414                           ;incstack = 0
  8415  00219A  0E00               	movlw	0
  8416  00219C  6E02               	movwf	mpap_normal_mode@cod_ret,c
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;mpap.c: 123: if (mpap.numSteps_tomove!=0)
  8420  00219E  504B               	movf	_mpap+4,w,c	;volatile
  8421  0021A0  104C               	iorwf	_mpap+5,w,c	;volatile
  8422  0021A2  B4D8               	btfsc	status,2,c
  8423  0021A4  D01C               	goto	i2l450
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;mpap.c: 124: {;mpap.c: 125: mpap_do1step(mpap.KI);
  8427  0021A6  504D               	movf	_mpap+6,w,c	;volatile
  8428  0021A8  EC33  F011         	call	_mpap_do1step
  8429                           
  8430                           ;mpap.c: 127: mpap.counter_steps+= mpap.KI;
  8431  0021AC  504D               	movf	_mpap+6,w,c	;volatile
  8432  0021AE  2649               	addwf	_mpap+2,f,c	;volatile
  8433  0021B0  0E00               	movlw	0
  8434  0021B2  BE4D               	btfsc	_mpap+6,7,c	;volatile
  8435  0021B4  0EFF               	movlw	255
  8436  0021B6  224A               	addwfc	_mpap+3,f,c	;volatile
  8437                           
  8438                           ;mpap.c: 129: mpap.numSteps_current+= mpap.KI;
  8439  0021B8  504D               	movf	_mpap+6,w,c	;volatile
  8440  0021BA  2647               	addwf	_mpap,f,c	;volatile
  8441  0021BC  0E00               	movlw	0
  8442  0021BE  BE4D               	btfsc	_mpap+6,7,c	;volatile
  8443  0021C0  0EFF               	movlw	255
  8444  0021C2  2248               	addwfc	_mpap+1,f,c	;volatile
  8445                           
  8446                           ;mpap.c: 131: if ( mpap.counter_steps== mpap.numSteps_tomove)
  8447  0021C4  504B               	movf	_mpap+4,w,c	;volatile
  8448  0021C6  1849               	xorwf	_mpap+2,w,c	;volatile
  8449  0021C8  E10A               	bnz	i2l450
  8450  0021CA  504C               	movf	_mpap+5,w,c	;volatile
  8451  0021CC  184A               	xorwf	_mpap+3,w,c	;volatile
  8452  0021CE  A4D8               	btfss	status,2,c
  8453  0021D0  D006               	goto	i2l450
  8454                           
  8455                           ;mpap.c: 132: {;mpap.c: 133: mpap.numSteps_tomove = 0;
  8456  0021D2  0E00               	movlw	0
  8457  0021D4  6E4C               	movwf	_mpap+5,c	;volatile
  8458  0021D6  0E00               	movlw	0
  8459  0021D8  6E4B               	movwf	_mpap+4,c	;volatile
  8460                           
  8461                           ;mpap.c: 134: cod_ret = 1;
  8462  0021DA  0E01               	movlw	1
  8463  0021DC  6E02               	movwf	mpap_normal_mode@cod_ret,c
  8464  0021DE                     i2l450:
  8465                           
  8466                           ;mpap.c: 135: };mpap.c: 136: };mpap.c: 137: return cod_ret;
  8467  0021DE  5002               	movf	mpap_normal_mode@cod_ret,w,c
  8468  0021E0  0012               	return		;funcret
  8469  0021E2                     __end_of_mpap_normal_mode:
  8470                           	opt callstack 0
  8471                           
  8472 ;; *************** function _mpap_homming *****************
  8473 ;; Defined at:
  8474 ;;		line 96 in file "mpap.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;		None
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;  cod_ret         1    2[COMRAM] char 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      char 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 3F/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8488 ;;      Params:         0       0       0       0       0       0       0       0       0
  8489 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8490 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8491 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8492 ;;Total ram usage:        2 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    2
  8495 ;; This function calls:
  8496 ;;		_mpap_do1step
  8497 ;; This function is called by:
  8498 ;;		_mpap_job
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           	psect	text69
  8503  001FCA                     __ptext69:
  8504                           	opt callstack 0
  8505  001FCA                     _mpap_homming:
  8506                           	opt callstack 19
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;mpap.c: 98: int8_t cod_ret = 0;
  8510                           
  8511                           ;incstack = 0
  8512  001FCA  0E00               	movlw	0
  8513  001FCC  6E03               	movwf	mpap_homming@cod_ret,c
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;mpap.c: 99: if (mpap.numSteps_tomove!=0)
  8517  001FCE  504B               	movf	_mpap+4,w,c	;volatile
  8518  001FD0  104C               	iorwf	_mpap+5,w,c	;volatile
  8519  001FD2  B4D8               	btfsc	status,2,c
  8520  001FD4  D024               	goto	i2l444
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;mpap.c: 100: {;mpap.c: 101: mpap_do1step(mpap.KI);
  8524  001FD6  504D               	movf	_mpap+6,w,c	;volatile
  8525  001FD8  EC33  F011         	call	_mpap_do1step
  8526                           
  8527                           ;mpap.c: 103: mpap.counter_steps+= mpap.KI;
  8528  001FDC  504D               	movf	_mpap+6,w,c	;volatile
  8529  001FDE  2649               	addwf	_mpap+2,f,c	;volatile
  8530  001FE0  0E00               	movlw	0
  8531  001FE2  BE4D               	btfsc	_mpap+6,7,c	;volatile
  8532  001FE4  0EFF               	movlw	255
  8533  001FE6  224A               	addwfc	_mpap+3,f,c	;volatile
  8534                           
  8535                           ;mpap.c: 105: if (((PORTE & (1<<1))>>1) == 0)
  8536  001FE8  CF84 F002          	movff	3972,??_mpap_homming	;volatile
  8537  001FEC  90D8               	bcf	status,0,c
  8538  001FEE  3202               	rrcf	??_mpap_homming,f,c
  8539  001FF0  B002               	btfsc	??_mpap_homming,0,c
  8540  001FF2  D006               	goto	i2l3572
  8541                           
  8542                           ;mpap.c: 106: {;mpap.c: 107: mpap.numSteps_tomove = 0x0000;
  8543  001FF4  0E00               	movlw	0
  8544  001FF6  6E4C               	movwf	_mpap+5,c	;volatile
  8545  001FF8  0E00               	movlw	0
  8546  001FFA  6E4B               	movwf	_mpap+4,c	;volatile
  8547                           
  8548                           ;mpap.c: 108: cod_ret = 1;
  8549  001FFC  0E01               	movlw	1
  8550  001FFE  6E03               	movwf	mpap_homming@cod_ret,c
  8551  002000                     i2l3572:
  8552                           
  8553                           ;mpap.c: 109: };mpap.c: 110: if ( mpap.counter_steps == mpap.numSteps_tomove)
  8554  002000  504B               	movf	_mpap+4,w,c	;volatile
  8555  002002  1849               	xorwf	_mpap+2,w,c	;volatile
  8556  002004  E10C               	bnz	i2l444
  8557  002006  504C               	movf	_mpap+5,w,c	;volatile
  8558  002008  184A               	xorwf	_mpap+3,w,c	;volatile
  8559  00200A  A4D8               	btfss	status,2,c
  8560  00200C  D008               	goto	i2l444
  8561                           
  8562                           ;mpap.c: 111: {;mpap.c: 112: mpap.numSteps_tomove = 0x0000;
  8563  00200E  0E00               	movlw	0
  8564  002010  6E4C               	movwf	_mpap+5,c	;volatile
  8565  002012  0E00               	movlw	0
  8566  002014  6E4B               	movwf	_mpap+4,c	;volatile
  8567                           
  8568                           ;mpap.c: 113: cod_ret = 1;
  8569  002016  0E01               	movlw	1
  8570  002018  6E03               	movwf	mpap_homming@cod_ret,c
  8571                           
  8572                           ;mpap.c: 114: pulsonic.errors.flag.mpap_home_sensor = 1;
  8573  00201A  0101               	movlb	1	; () banked
  8574  00201C  813A               	bsf	(_pulsonic+58)& (0+255),0,b
  8575  00201E                     i2l444:
  8576                           
  8577                           ;mpap.c: 115: };mpap.c: 116: };mpap.c: 117: return cod_ret;
  8578  00201E  5003               	movf	mpap_homming@cod_ret,w,c
  8579  002020  0012               	return		;funcret
  8580  002022                     __end_of_mpap_homming:
  8581                           	opt callstack 0
  8582                           
  8583 ;; *************** function _mpap_do1step *****************
  8584 ;; Defined at:
  8585 ;;		line 76 in file "mpap.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  KI              1    wreg     char 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  KI              1    0[COMRAM] char 
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8594 ;; Tracked objects:
  8595 ;;		On entry : 3F/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8599 ;;      Params:         0       0       0       0       0       0       0       0       0
  8600 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8602 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8603 ;;Total ram usage:        1 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    1
  8606 ;; This function calls:
  8607 ;;		__mpap_step1
  8608 ;;		__mpap_step2
  8609 ;;		__mpap_step3
  8610 ;;		__mpap_step4
  8611 ;; This function is called by:
  8612 ;;		_mpap_homming
  8613 ;;		_mpap_normal_mode
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           	psect	text70
  8618  002266                     __ptext70:
  8619                           	opt callstack 0
  8620  002266                     _mpap_do1step:
  8621                           	opt callstack 19
  8622                           
  8623                           ;incstack = 0
  8624                           ;mpap_do1step@KI stored from wreg
  8625  002266  6E01               	movwf	mpap_do1step@KI,c
  8626                           
  8627                           ;mpap.c: 78: static int8_t i = -1;;mpap.c: 80: i= i + KI;
  8628  002268  5050               	movf	mpap_do1step@i,w,c
  8629  00226A  2401               	addwf	mpap_do1step@KI,w,c
  8630  00226C  6E50               	movwf	mpap_do1step@i,c
  8631                           
  8632                           ;mpap.c: 82: if (i>3){i=0;}
  8633  00226E  5050               	movf	mpap_do1step@i,w,c
  8634  002270  0A80               	xorlw	128
  8635  002272  0F7C               	addlw	-132
  8636  002274  A0D8               	btfss	status,0,c
  8637  002276  D002               	goto	i2l3362
  8638  002278  0E00               	movlw	0
  8639  00227A  6E50               	movwf	mpap_do1step@i,c
  8640  00227C                     i2l3362:
  8641                           
  8642                           ;mpap.c: 83: if (i<0){i=3;}
  8643  00227C  AE50               	btfss	mpap_do1step@i,7,c
  8644  00227E  D002               	goto	i2l3366
  8645  002280  0E03               	movlw	3
  8646  002282  6E50               	movwf	mpap_do1step@i,c
  8647  002284                     i2l3366:
  8648                           
  8649                           ;mpap.c: 85: mpap_step[i]();
  8650  002284  5050               	movf	mpap_do1step@i,w,c
  8651  002286  0D02               	mullw	2
  8652  002288  50F3               	movf	prodl,w,c
  8653  00228A  0FE4               	addlw	low _mpap_step
  8654  00228C  6ED9               	movwf	fsr2l,c
  8655  00228E  6ADA               	clrf	fsr2h,c
  8656  002290  D801               	call	i2u300_48
  8657  002292  0012               	return	
  8658  002294                     i2u300_48:
  8659  002294  0005               	push	
  8660  002296  6EFA               	movwf	pclath,c
  8661  002298  50DE               	movf	postinc2,w,c
  8662  00229A  6EFD               	movwf	tosl,c
  8663  00229C  50DE               	movf	postinc2,w,c
  8664  00229E  6EFE               	movwf	tosh,c
  8665  0022A0  50F8               	movf	tblptru,w,c
  8666  0022A2  6EFF               	movwf	tosu,c
  8667  0022A4  50FA               	movf	pclath,w,c
  8668  0022A6  0012               	return		;indir
  8669  0022A8                     __end_of_mpap_do1step:
  8670                           	opt callstack 0
  8671                           
  8672 ;; *************** function __mpap_step3 *****************
  8673 ;; Defined at:
  8674 ;;		line 21 in file "mpap.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;		None
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  1    wreg      void 
  8681 ;; Registers used:
  8682 ;;		status,2, status,0
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8688 ;;      Params:         0       0       0       0       0       0       0       0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8691 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8692 ;;Total ram usage:        0 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_mpap_do1step
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text71
  8702  00257E                     __ptext71:
  8703                           	opt callstack 0
  8704  00257E                     __mpap_step3:
  8705                           	opt callstack 19
  8706                           
  8707                           ;incstack = 0
  8708                           ;mpap.c: 23: do{LATD &= ~(1<<0);}while(0);
  8709  00257E  908C               	bcf	3980,0,c	;volatile
  8710                           
  8711                           ;mpap.c: 24: do{LATD |= 1<<1;}while(0);
  8712  002580  828C               	bsf	3980,1,c	;volatile
  8713                           
  8714                           ;mpap.c: 25: do{LATD &= ~(1<<2);}while(0);
  8715  002582  948C               	bcf	3980,2,c	;volatile
  8716                           
  8717                           ;mpap.c: 26: do{LATD &= ~(1<<3);}while(0);
  8718  002584  968C               	bcf	3980,3,c	;volatile
  8719  002586  0012               	return		;funcret
  8720  002588                     __end_of__mpap_step3:
  8721                           	opt callstack 0
  8722                           
  8723 ;; *************** function __mpap_step2 *****************
  8724 ;; Defined at:
  8725 ;;		line 13 in file "mpap.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;		None
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;		None
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  1    wreg      void 
  8732 ;; Registers used:
  8733 ;;		status,2, status,0
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8739 ;;      Params:         0       0       0       0       0       0       0       0       0
  8740 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8742 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8743 ;;Total ram usage:        0 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_mpap_do1step
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text72
  8753  002588                     __ptext72:
  8754                           	opt callstack 0
  8755  002588                     __mpap_step2:
  8756                           	opt callstack 19
  8757                           
  8758                           ;incstack = 0
  8759                           ;mpap.c: 15: do{LATD &= ~(1<<0);}while(0);
  8760  002588  908C               	bcf	3980,0,c	;volatile
  8761                           
  8762                           ;mpap.c: 16: do{LATD &= ~(1<<1);}while(0);
  8763  00258A  928C               	bcf	3980,1,c	;volatile
  8764                           
  8765                           ;mpap.c: 17: do{LATD |= 1<<2;}while(0);
  8766  00258C  848C               	bsf	3980,2,c	;volatile
  8767                           
  8768                           ;mpap.c: 18: do{LATD &= ~(1<<3);}while(0);
  8769  00258E  968C               	bcf	3980,3,c	;volatile
  8770  002590  0012               	return		;funcret
  8771  002592                     __end_of__mpap_step2:
  8772                           	opt callstack 0
  8773                           
  8774 ;; *************** function __mpap_step1 *****************
  8775 ;; Defined at:
  8776 ;;		line 5 in file "mpap.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;		None
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		status,2, status,0
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8790 ;;      Params:         0       0       0       0       0       0       0       0       0
  8791 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8793 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8794 ;;Total ram usage:        0 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_mpap_do1step
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text73
  8804  002592                     __ptext73:
  8805                           	opt callstack 0
  8806  002592                     __mpap_step1:
  8807                           	opt callstack 19
  8808                           
  8809                           ;incstack = 0
  8810                           ;mpap.c: 7: do{LATD &= ~(1<<0);}while(0);
  8811  002592  908C               	bcf	3980,0,c	;volatile
  8812                           
  8813                           ;mpap.c: 8: do{LATD &= ~(1<<1);}while(0);
  8814  002594  928C               	bcf	3980,1,c	;volatile
  8815                           
  8816                           ;mpap.c: 9: do{LATD &= ~(1<<2);}while(0);
  8817  002596  948C               	bcf	3980,2,c	;volatile
  8818                           
  8819                           ;mpap.c: 10: do{LATD |= 1<<3;}while(0);
  8820  002598  868C               	bsf	3980,3,c	;volatile
  8821  00259A  0012               	return		;funcret
  8822  00259C                     __end_of__mpap_step1:
  8823                           	opt callstack 0
  8824                           
  8825 ;; *************** function __mpap_step4 *****************
  8826 ;; Defined at:
  8827 ;;		line 29 in file "mpap.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		status,2, status,0
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8844 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8845 ;;Total ram usage:        0 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_mpap_do1step
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text74
  8855  00259C                     __ptext74:
  8856                           	opt callstack 0
  8857  00259C                     __mpap_step4:
  8858                           	opt callstack 19
  8859                           
  8860                           ;incstack = 0
  8861                           ;mpap.c: 31: do{LATD |= 1<<0;}while(0);
  8862  00259C  808C               	bsf	3980,0,c	;volatile
  8863                           
  8864                           ;mpap.c: 32: do{LATD &= ~(1<<1);}while(0);
  8865  00259E  928C               	bcf	3980,1,c	;volatile
  8866                           
  8867                           ;mpap.c: 33: do{LATD &= ~(1<<2);}while(0);
  8868  0025A0  948C               	bcf	3980,2,c	;volatile
  8869                           
  8870                           ;mpap.c: 34: do{LATD &= ~(1<<3);}while(0);
  8871  0025A2  968C               	bcf	3980,3,c	;volatile
  8872  0025A4  0012               	return		;funcret
  8873  0025A6                     __end_of__mpap_step4:
  8874                           	opt callstack 0
  8875                           
  8876 ;; *************** function __mpap_off *****************
  8877 ;; Defined at:
  8878 ;;		line 43 in file "mpap.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;		None
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;		None
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  1    wreg      void 
  8885 ;; Registers used:
  8886 ;;		status,2, status,0
  8887 ;; Tracked objects:
  8888 ;;		On entry : 3F/0
  8889 ;;		On exit  : 3F/0
  8890 ;;		Unchanged: 3F/0
  8891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8892 ;;      Params:         0       0       0       0       0       0       0       0       0
  8893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8896 ;;Total ram usage:        0 bytes
  8897 ;; Hardware stack levels used:    1
  8898 ;; This function calls:
  8899 ;;		Nothing
  8900 ;; This function is called by:
  8901 ;;		_mpap_job
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text75
  8906  0025A6                     __ptext75:
  8907                           	opt callstack 0
  8908  0025A6                     __mpap_off:
  8909                           	opt callstack 21
  8910                           
  8911                           ; BSR set to: 0
  8912                           
  8913                           ; BSR set to: 0
  8914                           
  8915                           ;incstack = 0
  8916                           ;mpap.c: 45: do{LATD &= ~(1<<0);}while(0);
  8917  0025A6  908C               	bcf	3980,0,c	;volatile
  8918                           
  8919                           ; BSR set to: 0
  8920                           
  8921                           ;mpap.c: 46: do{LATD &= ~(1<<1);}while(0);
  8922  0025A8  928C               	bcf	3980,1,c	;volatile
  8923                           
  8924                           ; BSR set to: 0
  8925                           
  8926                           ;mpap.c: 47: do{LATD &= ~(1<<2);}while(0);
  8927  0025AA  948C               	bcf	3980,2,c	;volatile
  8928                           
  8929                           ; BSR set to: 0
  8930                           
  8931                           ;mpap.c: 48: do{LATD &= ~(1<<3);}while(0);
  8932  0025AC  968C               	bcf	3980,3,c	;volatile
  8933                           
  8934                           ; BSR set to: 0
  8935  0025AE  0012               	return		;funcret
  8936  0025B0                     __end_of__mpap_off:
  8937                           	opt callstack 0
  8938                           
  8939                           	psect	text76
  8940  000000                     __ptext76:
  8941                           	opt callstack 0
  8942                           
  8943                           	psect	rparam
  8944  0000                     
  8945                           	psect	temp
  8946  000051                     btemp:
  8947                           	opt callstack 0
  8948  000051                     	ds	1
  8949  0000                     int$flags	set	btemp
  8950  0000                     wtemp8	set	btemp+1
  8951  0000                     ttemp5	set	btemp+1
  8952  0000                     ttemp6	set	btemp+4
  8953  0000                     ttemp7	set	btemp+8
  8954                           tosu	equ	0xFFF
  8955                           tosh	equ	0xFFE
  8956                           tosl	equ	0xFFD
  8957                           stkptr	equ	0xFFC
  8958                           pclatu	equ	0xFFB
  8959                           pclath	equ	0xFFA
  8960                           pcl	equ	0xFF9
  8961                           tblptru	equ	0xFF8
  8962                           tblptrh	equ	0xFF7
  8963                           tblptrl	equ	0xFF6
  8964                           tablat	equ	0xFF5
  8965                           prodh	equ	0xFF4
  8966                           prodl	equ	0xFF3
  8967                           indf0	equ	0xFEF
  8968                           postinc0	equ	0xFEE
  8969                           postdec0	equ	0xFED
  8970                           preinc0	equ	0xFEC
  8971                           plusw0	equ	0xFEB
  8972                           fsr0h	equ	0xFEA
  8973                           fsr0l	equ	0xFE9
  8974                           wreg	equ	0xFE8
  8975                           indf1	equ	0xFE7
  8976                           postinc1	equ	0xFE6
  8977                           postdec1	equ	0xFE5
  8978                           preinc1	equ	0xFE4
  8979                           plusw1	equ	0xFE3
  8980                           fsr1h	equ	0xFE2
  8981                           fsr1l	equ	0xFE1
  8982                           bsr	equ	0xFE0
  8983                           indf2	equ	0xFDF
  8984                           postinc2	equ	0xFDE
  8985                           postdec2	equ	0xFDD
  8986                           preinc2	equ	0xFDC
  8987                           plusw2	equ	0xFDB
  8988                           fsr2h	equ	0xFDA
  8989                           fsr2l	equ	0xFD9
  8990                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        31
    BSS         185
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      80
    BANK0           160     17     159
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_i@pDisp	PTR unsigned char  size(2) Largest target is 64
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[64]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> disp7s_write_i@buff(COMRAM[10]), disp7s_write_f@buff(BANK0[10]), 

    disp7s_write_f@pDisp	PTR unsigned char  size(2) Largest target is 64
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[64]), 

    disp7s_off@pDisp	PTR unsigned char  size(2) Largest target is 64
		 -> pulsonic.disp7s(BANK1[5]), pulsonic(BANK1[64]), 

    S502_disp7s_mux$Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    disp7s_mux.Qonoff	PTR FTN()void [2] size(2) Largest target is 1
		 -> disp7s_mux4_on(), disp7s_mux4_off(), disp7s_mux3_on(), disp7s_mux3_off(), 
		 -> disp7s_mux2_on(), disp7s_mux2_off(), disp7s_mux1_on(), disp7s_mux1_off(), 
		 -> disp7s_mux0_on(), disp7s_mux0_off(), 

    mpap_off	PTR FTN()void  size(2) Largest target is 1
		 -> _mpap_off(), 

    mpap_step	PTR FTN()void [4] size(2) Largest target is 1
		 -> _mpap_step4(), _mpap_step3(), _mpap_step2(), _mpap_step1(), 

    S244_key$keyDo	PTR FTN()void  size(2) Largest target is 0

    key.keyDo	PTR FTN()void  size(2) Largest target is 0

    S244_key$keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 

    key.keyRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> keyRead_pin_key4(), keyRead_pin_key3(), keyRead_pin_key2(), keyRead_pin_key1(), 
		 -> keyRead_pin_key0(), 


Critical Paths under _main in COMRAM

    _main->_visMode_job
    _visMode_job->_visMode_disp
    _visMode_kb->_ikb_key_is_ready2read
    _visMode_kb->_ikb_key_was_read
    _visMode_disp->_disp7s_qtyDisp_writeFloat
    _disp7s_qtyDisp_writeInt->_disp7s_write_i
    _disp7s_modeDisp_writeInt->_disp7s_write_i
    _disp7s_write_i->_itoa
    _ikb_job->_ikey_parsing
    _ikey_parsing->___ftge
    _disp7s_job->_disp7s_mux_Q
    _disp7s_init->_disp7s_mux_init
    _autoMode_job->_nozzle_isEnabled
    _nozzle_isEnabled->___ftge
    _mpap_setupToHomming->_mpap_setupToTurn
    _mpap_movetoNozzle->_mpap_setupToTurn
    _mpap_setupToTurn->___wmul
    _autoMode_kb->_ikb_key_is_ready2read
    _autoMode_kb->_ikb_key_was_read
    _autoMode_kb->_visMode_init
    _autoMode_init->_disp7s_qtyDisp_writeFloat
    _pulsonic_getTotalSum_mlh->___fttol
    ___lwtoft->___ftpack
    _disp7s_qtyDisp_writeFloat->_disp7s_write_f
    _disp7s_write_f->___fttol
    _itoa->_utoa
    _utoa->___lwdiv
    ___fttol->___ftadd
    ___fttol->___ftmul
    ___ftmul->___ftpack
    ___ftge->___lwtoft
    ___ftadd->___lwtoft
    _disp7s_modeDisp_off->_disp7s_off

Critical Paths under _INTERRUPCION in COMRAM

    _INTERRUPCION->_mpap_job
    _mpap_job->_mpap_homming
    _mpap_normal_mode->_mpap_do1step
    _mpap_homming->_mpap_do1step

Critical Paths under _main in BANK0

    _disp7s_qtyDisp_writeFloat->_disp7s_write_f

Critical Paths under _INTERRUPCION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPCION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPCION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPCION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPCION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPCION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPCION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPCION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   73212
                                             67 COMRAM     3     3      0
                      _autoMode_init
                       _autoMode_job
                        _disp7s_init
                         _disp7s_job
                           _ikb_init
                            _ikb_job
                          _mpap_sych
                      _pulsonic_init
                           _pump_job
                        _visMode_job
 ---------------------------------------------------------------------------------
 (1) _visMode_job                                          1     1      0   27164
                                             66 COMRAM     1     1      0
                       _visMode_disp
                         _visMode_kb
 ---------------------------------------------------------------------------------
 (2) _visMode_kb                                           1     1      0      69
                                             11 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
 ---------------------------------------------------------------------------------
 (2) _visMode_disp                                         4     4      0   27058
                                             62 COMRAM     4     4      0
           _disp7s_modeDisp_writeInt
      _disp7s_modeDisp_writeText_oil
          _disp7s_qtyDisp_writeFloat
            _disp7s_qtyDisp_writeInt
       _disp7s_qtyDisp_writeText_OFF
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeText_OFF                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeInt                              2     0      2    5220
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeText_oil                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_modeDisp_writeInt                             2     0      2    5220
                                             55 COMRAM     2     0      2
                     _disp7s_write_i
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_i                                      24    19      5    5099
                                             31 COMRAM    24    19      5
                             ___wmul
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               3     1      2     166
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _pump_job                                             1     1      0       8
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulsonic_init                                        1     1      0      68
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mpap_sych                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ikb_job                                              0     0      0    8390
                       _ikey_parsing
                          _ikey_scan
 ---------------------------------------------------------------------------------
 (2) _ikey_scan                                            2     2      0     463
                                             10 COMRAM     2     2      0
                   _keyRead_pin_key0 *
                   _keyRead_pin_key1 *
                   _keyRead_pin_key2 *
                   _keyRead_pin_key3 *
                   _keyRead_pin_key4 *
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key4                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key3                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _keyRead_pin_key0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ikey_parsing                                         5     5      0    7927
                                             30 COMRAM     5     5      0
                             ___ftge
                           ___lwtoft
                 _ikey_is_accessible
 ---------------------------------------------------------------------------------
 (3) _ikey_is_accessible                                   3     3      0      66
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ikb_init                                             1     1      0     200
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _disp7s_job                                           3     3      0     181
                                             18 COMRAM     3     3      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
                       _disp7s_mux_Q
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_Q                                         8     8      0     134
                                             10 COMRAM     8     8      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (1) _disp7s_init                                          1     1      0     204
                                             11 COMRAM     1     1      0
                    _disp7s_mux_init
 ---------------------------------------------------------------------------------
 (2) _disp7s_mux_init                                      1     1      0      68
                                             10 COMRAM     1     1      0
                    _disp7s_mux0_off *
                     _disp7s_mux0_on *
                    _disp7s_mux1_off *
                     _disp7s_mux1_on *
                    _disp7s_mux2_off *
                     _disp7s_mux2_on *
                    _disp7s_mux3_off *
                     _disp7s_mux3_on *
                    _disp7s_mux4_off *
                     _disp7s_mux4_on *
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux4_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux3_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux2_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux1_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_on                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disp7s_mux0_off                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autoMode_job                                         1     1      0    4813
                                             32 COMRAM     1     1      0
                        _autoMode_kb
                        _mpap_isIdle
                  _mpap_movetoNozzle
                _mpap_setupToHomming
                   _nozzle_isEnabled
                        _pump_isIdle
                       _pump_setTick
 ---------------------------------------------------------------------------------
 (2) _pump_setTick                                         2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _pump_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nozzle_isEnabled                                     2     0      2    2830
                                             30 COMRAM     2     0      2
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _mpap_setupToHomming                                  0     0      0     242
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (2) _mpap_movetoNozzle                                    1     1      0    1515
                                             20 COMRAM     1     1      0
                             ___wmul
                   _mpap_setupToTurn
 ---------------------------------------------------------------------------------
 (3) _mpap_setupToTurn                                     4     2      2     242
                                             16 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mpap_isIdle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _autoMode_kb                                          1     1      0      91
                                             11 COMRAM     1     1      0
              _ikb_key_is_ready2read
                   _ikb_key_was_read
                       _visMode_init
 ---------------------------------------------------------------------------------
 (3) _visMode_init                                         1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_key_was_read                                     1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ikb_key_is_ready2read                                1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _autoMode_init                                        3     3      0   31980
                                             62 COMRAM     3     3      0
                           ___lwtoft
                _disp7s_modeDisp_off
          _disp7s_qtyDisp_writeFloat
           _pulsonic_getTotalSum_mlh
 ---------------------------------------------------------------------------------
 (2) _pulsonic_getTotalSum_mlh                             6     4      2   11001
                                             48 COMRAM     6     4      2
                            ___ftadd
                            ___fttol
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1251
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    3824
                                             18 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _disp7s_qtyDisp_writeFloat                            3     0      3   16460
                                             59 COMRAM     3     0      3
                           ___lwtoft (ARG)
                     _disp7s_write_f
           _pulsonic_getTotalSum_mlh (ARG)
 ---------------------------------------------------------------------------------
 (4) _disp7s_write_f                                      28    22      6   16249
                                             48 COMRAM    11     5      6
                                              0 BANK0     17    17      0
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
                         _disp7s_off
                               _itoa
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 6     1      5    2496
                                             25 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 8     3      5    1723
                                             17 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     601
                                             10 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     641
                                             33 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4427
                                             18 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    1458
                                             21 COMRAM     9     3      6
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5118
                                             21 COMRAM    12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3253
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _disp7s_modeDisp_off                                  0     0      0     630
                         _disp7s_off
 ---------------------------------------------------------------------------------
 (5) _disp7s_off                                           6     3      3     630
                                             10 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPCION                                         6     6      0     101
                                              4 COMRAM     6     6      0
                           _mpap_job
 ---------------------------------------------------------------------------------
 (9) _mpap_job                                             1     1      0     101
                                              3 COMRAM     1     1      0
                          __mpap_off *
                       _mpap_homming
                   _mpap_normal_mode
 ---------------------------------------------------------------------------------
 (10) _mpap_normal_mode                                    1     1      0      46
                                              1 COMRAM     1     1      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (10) _mpap_homming                                        2     2      0      47
                                              1 COMRAM     2     2      0
                       _mpap_do1step
 ---------------------------------------------------------------------------------
 (11) _mpap_do1step                                        1     1      0      22
                                              0 COMRAM     1     1      0
                        __mpap_step1 *
                        __mpap_step2 *
                        __mpap_step3 *
                        __mpap_step4 *
 ---------------------------------------------------------------------------------
 (12) __mpap_step4                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) __mpap_step1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) __mpap_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autoMode_init
     ___lwtoft
       ___ftpack
     _disp7s_modeDisp_off
       _disp7s_off
     _disp7s_qtyDisp_writeFloat
       ___lwtoft (ARG)
         ___ftpack
       _disp7s_write_f (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftge
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         _disp7s_off
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _pulsonic_getTotalSum_mlh (ARG)
         ___ftadd
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___lwtoft
           ___ftpack
         ___wmul
     _pulsonic_getTotalSum_mlh
       ___ftadd
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lwtoft
         ___ftpack
       ___wmul
   _autoMode_job
     _autoMode_kb
       _ikb_key_is_ready2read
       _ikb_key_was_read
       _visMode_init
     _mpap_isIdle
     _mpap_movetoNozzle
       ___wmul
       _mpap_setupToTurn
         ___wmul (ARG)
     _mpap_setupToHomming
       _mpap_setupToTurn
         ___wmul (ARG)
     _nozzle_isEnabled
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___wmul
     _pump_isIdle
     _pump_setTick
   _disp7s_init
     _disp7s_mux_init
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _disp7s_job
     _disp7s_mux0_off *
     _disp7s_mux0_on *
     _disp7s_mux1_off *
     _disp7s_mux1_on *
     _disp7s_mux2_off *
     _disp7s_mux2_on *
     _disp7s_mux3_off *
     _disp7s_mux3_on *
     _disp7s_mux4_off *
     _disp7s_mux4_on *
     _disp7s_mux_Q *
       _disp7s_mux0_off *
       _disp7s_mux0_on *
       _disp7s_mux1_off *
       _disp7s_mux1_on *
       _disp7s_mux2_off *
       _disp7s_mux2_on *
       _disp7s_mux3_off *
       _disp7s_mux3_on *
       _disp7s_mux4_off *
       _disp7s_mux4_on *
   _ikb_init
   _ikb_job
     _ikey_parsing
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___lwtoft
         ___ftpack
       _ikey_is_accessible
     _ikey_scan
       _keyRead_pin_key0 *
       _keyRead_pin_key1 *
       _keyRead_pin_key2 *
       _keyRead_pin_key3 *
       _keyRead_pin_key4 *
   _mpap_sych
   _pulsonic_init
   _pump_job
   _visMode_job
     _visMode_disp
       _disp7s_modeDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_modeDisp_writeText_oil
       _disp7s_qtyDisp_writeFloat
         ___lwtoft (ARG)
           ___ftpack
         _disp7s_write_f (ARG)
           ___ftadd
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           _disp7s_off
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _pulsonic_getTotalSum_mlh (ARG)
           ___ftadd
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol
             ___ftadd (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___lwtoft
             ___ftpack
           ___wmul
       _disp7s_qtyDisp_writeInt
         _disp7s_write_i
           ___wmul
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
           _strlen
       _disp7s_qtyDisp_writeText_OFF
     _visMode_kb
       _ikb_key_is_ready2read
       _ikb_key_was_read

 _INTERRUPCION (ROOT)
   _mpap_job
     __mpap_off *
     _mpap_homming *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *
     _mpap_normal_mode *
       _mpap_do1step
         __mpap_step1 *
         __mpap_step2 *
         __mpap_step3 *
         __mpap_step4 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      20        0.0%
DATA                 0      0     12F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 14 17:54:32 2019

                 disp7s_write_f@K10MULT 00FB                      autoMode_kb@cod_ret 000C  
                 ??_mpap_setupToHomming 0015                             _pump_isIdle 251E  
                   ___wmul@multiplicand 000D                             __CFG_BORV$3 000000  
                 disp7s_write_i@K10MULT 0035                            ___ftadd@exp1 0021  
                          ___ftadd@exp2 0020                            ___ftadd@sign 001F  
                                   l108 1424                                     l301 0A3E  
                                   l118 14AC                                     l303 0AA0  
                                   l313 0D5C                                     l305 0AE4  
                                   l322 0E18                                     l307 0C30  
                                   l317 0D90                                     l430 2372  
                                   l319 0DC6                                     l290 08F4  
                                   l428 236E                                     l284 093E  
                                   l297 0998                                     l299 09FA  
                                   l751 198E                                     l770 1DBA  
                                   l845 1B2E                                     l846 1B40  
                                   l769 1DA8                                     _GIE 007F97  
                          __CFG_BOR$OFF 000000                                     _key 0060  
                                   prod 000FF3                                     tosl 000FFD  
                                   wreg 000FE8                  __size_of_pulsonic_init 0060  
                          _pump_setTick 2574                            ?_autoMode_kb 0001  
                          __CFG_LVP$OFF 000000                            __CFG_WDT$OFF 000000  
                                  l3014 242E                                    l3016 2430  
                                  l1338 206A                                    l1530 1AAA  
                                  l1348 225C                                    l1189 1194  
                                  l4300 1128                                    l4302 1132  
                                  l3414 1248                                    l4320 11B0  
                                  l4312 1166                                    l4304 113C  
                                  l4216 1A3A                                    l3344 20BC  
                                  l3432 131A                                    l3424 12BA  
                                  l3408 120A                                    l4250 2314  
                                  l4330 11E0                                    l4314 1170  
                                  l4146 2038                                    l4226 1A6C  
                                  l3426 12DA                                    l4340 15EA  
                                  l4148 2040                                    l4260 233E  
                                  l4500 104E                                    l3444 139E  
                                  l4246 22EE                                    l4190 1884  
                                  l4406 16E2                                    l4158 2060  
                                  l4174 2252                                    l4166 2232  
                                  l3606 2538                                    l4272 10AE  
                                  l4360 1644                                    l4424 1736  
                                  l4168 223A                                    l3704 1AF2  
                                  l4194 189A                                    l4186 185C  
                                  l4370 166C                                    l4346 1612  
                                  l4442 1776                                    l4434 174E  
                                  l4450 0E56                                    l3618 252A  
                                  l3642 1998                                    l4522 154E  
                                  l4514 150A                                    l4506 14C6  
                                  l3714 1B18                                    l3706 1AF6  
                                  l4196 18B8                                    l4188 1866  
                                  l4364 1654                                    l4436 175A  
                                  l4428 1746                                    l4452 0E7E  
                                  l3628 22AC                                    l3804 1F1A  
                                  l4508 14E2                                    l3724 1B52  
                                  l3716 1B1C                                    l4198 18C2  
                                  l4278 10D6                                    l4390 1E14  
                                  l4374 167C                                    l4710 1906  
                                  l3646 1A00                                    l4622 0CE2  
                                  l4614 0C20                                    l4534 15B2  
                                  l4518 1528                                    l4480 0F92  
                                  l4464 0EF4                                    l3680 1DCC  
                                  l3672 1D96                                    l3664 1D7A  
                                  l4712 190C                                    l3840 1CEE  
                                  l4608 0B96                                    l4552 0816  
                                  l4528 1570                                    l4386 1DF2  
                                  l4474 0F7C                                    l4458 0ED0  
                                  l4730 1958                                    l4706 18FC  
                                  l4570 08B4                                    l4396 1E40  
                                  l4484 0FB0                                    l3764 17C0  
                                  l4564 0884                                    l3940 1EDE  
                                  l4812 141C                                    l4494 100C  
                                  l4662 214E                                    l4726 1946  
                                  l4718 191E                                    l3846 1D2A  
                                  l4638 0E38                                    l4574 08D4  
                                  l4566 0894                                    l4830 144E  
                                  l4488 0FDC                                    l4648 1B66  
                                  l3776 1F70                                    l3928 1EC0  
                                  l4680 1CCE                                    l4752 23C8  
                                  l4824 143C                                    l4738 1978  
                                  l3962 1BFE                                    l4842 1472  
                                  l4692 2218                                    l3788 1F9A  
                                  l3982 1C36                                    l3966 1C0A  
                                  l4678 1CBC                                    l4758 23DA  
                                  l4846 147E                                    l3992 1C52  
                                  l3976 1C2A                                    l3978 1C2C  
                                  l4858 14A0                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                                  _LATD 000F8C                                    _LATE 000F8D  
                                  u3028 122C                                    u3029 1240  
                                  u3070 12AA                                    u5010 1760  
                                  u3138 1364                                    u3139 1378  
                                  u3068 1290                                    u3069 12A4  
                                  u3098 12FE                                    u3099 1312  
                                  u4500 223E                                    u4180 1BFA  
                                  u5080 0FEC                                    u2920 249E  
                                  u3608 22BC                                    u3624 19AE  
                                  u3609 22D0                                    u3625 19A8  
                                  u4530 184E                                    u3634 19C8  
                                  u3635 19C2                                    u5500 1BDA  
                                  u4470 2044                                    u4720 10C8  
                                  u4570 18CC                                    u3658 19EC  
                                  u4651 106E                                    u4820 1178  
                                  u3668 1A10                                    u4661 1082  
                                  u3669 1A24                                    u4750 1106  
                                  u3918 1CFE                                    u3919 1D12  
                                  u4690 10A0                                    u4861 15D2  
                                  u4790 1144                                    u4951 16C6  
                                  u4960 16D0                                    u4881 15FA  
                                  u4970 1700                                    u4975 16F8  
                                  _UCFG 000F6F          ?_disp7s_modeDisp_writeText_oil 0001  
                                  _UCON 000F6D                            __CFG_PWRT$ON 000000  
                 _ikb_key_is_ready2read 2486                                    _main 13A6  
                          ___ftpack@arg 000B                                    _itoa 2326  
                                  _mpap 0047                            ___ftpack@exp 000E  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  _pump 00B5                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  btemp 0051                                    _utoa 1A32  
       __end_of_disp7s_qtyDisp_writeInt 24BC                                    prodh 000FF4  
                                  prodl 000FF3                                    start 000E  
                        pulsonic_init@i 000B                           __CFG_IESO$OFF 000000  
                         __CFG_MCLRE$ON 000000                           ?_autoMode_job 0001  
                          ___ftmul@cntr 0020                    __end_of_DISP7S_CHARS 0811  
                          ___param_bank 000000                            ___ftmul@sign 0021  
                         _autoMode_init 21E2                           visMode_disp@c 0042  
                          ___fttol@exp1 0030                            ___fttol@lval 002C  
                     visMode_kb@cod_ret 000C                           __CFG_PLLDIV$5 000000  
                                 ?_main 0001                                   ?_itoa 001A  
                       __end_of___ftadd 1206                                   _CMCON 000FB4  
                                 ?_utoa 0012                         __end_of___ftmul 16B6  
                                 _T0CON 000FD5                         __end_of___fttol 1788  
                       __end_of___lwdiv 2074                         __end_of___lwmod 2266  
                                 i2l133 20EE                                   i2l450 21DE  
                                 i2l444 201E                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _PORTC 000F82  
                                 _PORTD 000F83                                   _PORTE 000F84  
                         __CFG_USBDIV$2 000000                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                        __CFG_FCMEN$OFF 000000                         __end_of_ikb_job 2560  
                         ?_INTERRUPCION 0001                         _disp7s_mux0_off 25E6  
                       _disp7s_mux1_off 25DE                         _disp7s_mux2_off 25D6  
                       _disp7s_mux3_off 25CE                         _disp7s_mux4_off 25C6  
                                 _smain 00B8                           ___ftpack@sign 000F  
                                 pclath 000FFA                                   tablat 000FF5  
                                 plusw2 000FDB              __size_of_mpap_movetoNozzle 002E  
                                 ttemp5 0052                                   ttemp6 0055  
                                 ttemp7 0059                                   utoa@c 0019  
                       _disp7s_mux_init 22A8                                   utoa@v 0017  
                                 status 000FD8                                   wtemp8 0052  
           __size_of_ikey_is_accessible 004C        __end_of_disp7s_modeDisp_writeInt 24D6  
                         ?_ikey_parsing 0001                    __size_of__mpap_step1 000A  
                  __size_of__mpap_step2 000A                    __size_of__mpap_step3 000A  
                  __size_of__mpap_step4 000A                          ??_autoMode_job 0021  
                         _pulsonic_init 1F0C                            ?_mpap_isIdle 0001  
                        ?_autoMode_init 0001                         __initialization 1E44  
                          __end_of_main 14B8                            __end_of_itoa 2358  
                          __end_of_utoa 1AC6                       ikb_key_was_read@k 000B  
    __size_of_disp7s_qtyDisp_writeFloat 001E                                  ??_main 0044  
                         ___fttol@sign1 002B                                  ??_itoa 001F  
                  __end_of_disp7s_mux_Q 1A32                                  ??_utoa 0017  
                         mpap_do1step@i 0050                           __activetblptr 000002  
                        ??_INTERRUPCION 0005                    __size_of_disp7s_init 005E  
                   autoMode_job@cod_ret 0021                                  _ADCON1 000FC1  
              __end_of_keyRead_pin_key0 25B8                __end_of_keyRead_pin_key1 2574  
              __end_of_keyRead_pin_key2 256A                __end_of_keyRead_pin_key3 25C6  
              __end_of_keyRead_pin_key4 25C0                  ?_ikb_key_is_ready2read 0001  
                      __end_of___ftpack 18EC                                  i2l4002 2160  
                                i2l4006 216E                                  i2l3362 227C  
                                i2l3366 2284                                  i2l3572 2000  
                      __end_of___lwtoft 2428                                  _TMR0IE 007F95  
                                _TMR0IF 007F92                          ??_ikey_parsing 001F  
                        __CFG_VREGEN$ON 000000               __size_of_nozzle_isEnabled 0048  
                        ?_pulsonic_init 0001                __end_of_mpap_normal_mode 21E2  
             disp7s_write_f@NUM_OF_DISP 0033                _error_requestToWriteDisp 00CB  
              _pulsonic_getTotalSum_mlh 1B56                        __end_of_ikb_init 183E  
                                ___ftge 1DD0                                  ___wmul 23DE  
                             ??___ftadd 001C                               ??___ftmul 0019  
                             ??___fttol 0026                               ??___lwdiv 000F  
                             ??___lwmod 000F                       ?_ikb_key_was_read 0001  
                                clear_0 1E7C                                  clear_1 1E88  
                                clear_2 1E94                        __end_of_mpap_job 219A  
                    ??_ikb_key_was_read 000B                      _autoMode_init$1603 0040  
                                _unlock 00CE                               ??_ikb_job 0024  
                                _strlen 2428                 __end_of_disp7s_mux0_off 25EA  
               __end_of_disp7s_mux1_off 25E2                   ___ftmul@f3_as_product 001D  
               __end_of_disp7s_mux2_off 25DA                 __end_of_disp7s_mux3_off 25D2  
               __end_of_disp7s_mux4_off 25CA       __end_of_disp7s_qtyDisp_writeFloat 2486  
              __end_of_mpap_setupToTurn 2388                            __pdataCOMRAM 0050  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                   ikey_is_accessible@k 000D                 __end_of_disp7s_mux_init 22E8  
                      __end_of_pump_job 1F0C                            ?_visMode_job 0001  
                  __size_of_autoMode_kb 0076                              __accesstop 0060  
               __end_of__initialization 1E9A                         __CFG_PBADEN$OFF 000000  
                         ?_mpap_do1step 0001                              ___ftadd@f1 0016  
                            ___ftadd@f2 0019                              ___ftge@ff1 0016  
                            ___ftge@ff2 0019                         disp7s_off@pDisp 000B  
                         ___rparam_used 000001                         ??_autoMode_init 003F  
                            ___ftmul@f1 0013                              ___ftmul@f2 0016  
                            ___fttol@f1 0022                          __pcstackCOMRAM 0001  
                          __pidataBANK0 244A                           ?_mpap_homming 0001  
                          ?_pump_isIdle 0001                      __size_of__mpap_off 000A  
                            ___lwtoft@c 0013                         visMode_disp@qty 003F  
     __size_of_disp7s_modeDisp_writeInt 001A               ?_disp7s_modeDisp_writeInt 0038  
                  __end_of_autoMode_job 1992                            _DISP7S_CHARS 080F  
                        mpap_do1step@KI 0001                              __pbssBANK0 0060  
                            __pbssBANK1 0100                      visMode_job@cod_ret 0043  
                        ??_mpap_do1step 0001                      __size_of_ikey_scan 01A0  
                       ??_pulsonic_init 000B             __end_of_mpap_setupToHomming 24FC  
                        ??_mpap_homming 0002                                 ?___ftge 0016  
                  __end_of_INTERRUPCION 210A                      __size_of_mpap_sych 0082  
                               ?___wmul 000B                   __size_of_disp7s_mux_Q 00A0  
                  __size_of_mpap_isIdle 000E                      mpap_movetoNozzle@n 0015  
                       disp7s_write_f@I 00F8                         disp7s_write_f@i 00FE  
                       disp7s_write_i@i 0037                ?_disp7s_qtyDisp_writeInt 0038  
                            _disp7s_job 1CE2                              _disp7s_off 22E8  
                            _disp7s_mux 00D0            __size_of_disp7s_modeDisp_off 0012  
                             ?___ftpack 000B                                 ?_strlen 000B  
                             ?___lwtoft 0013                 __size_of_disp7s_mux0_on 0004  
               __size_of_disp7s_mux1_on 0004                 __size_of_disp7s_mux2_on 0004  
               __size_of_disp7s_mux3_on 0004                 __size_of_disp7s_mux4_on 0004  
                      ?_disp7s_mux0_off 0001                        ?_disp7s_mux1_off 0001  
                      ?_disp7s_mux2_off 0001                        ?_disp7s_mux3_off 0001  
                      ?_disp7s_mux4_off 0001                    __end_of_ikey_parsing 0E42  
           pulsonic_getTotalSum_mlh@acc 0033                 __size_of_disp7s_write_f 021C  
               __size_of_disp7s_write_i 010A                              _disp_owner 00CC  
                      ?_disp7s_mux_init 0001                               ?_ikb_init 0001  
                     disp7s_write_f@num 0034                       disp7s_write_i@num 0023  
                     __end_of__mpap_off 25B0                            _disp7s_mux_Q 1992  
                      _nozzle_isEnabled 210A                               ?_mpap_job 0001  
                               __Hparam 0000                                 __Lparam 0000  
           disp7s_modeDisp_writeInt@num 0038               disp7s_write_i@NUM_OF_DISP 0022  
                       __size_of___ftge 0074                                 ___ftadd 105E  
                       __size_of___wmul 0026                                 ___ftmul 15C2  
                               ___fttol 16B6                       pump_setTick@ticks 000B  
                               ___lwdiv 2022                               ?_pump_job 0001  
                               ___lwmod 2224                            __psmallconst 0800  
                               __pcinit 1E44                              ??___ftpack 0010  
                               __ramtop 0800                                 __ptext0 13A6  
                               __ptext1 23B6                                 __ptext2 1AC6  
                               __ptext3 1C66                                 __ptext4 250E  
                               __ptext5 24A2                                 __ptext6 254A  
                               __ptext7 24BC                                 __ptext8 14B8  
                               __ptext9 2428                       __end_of_ikey_scan 13A6  
                               _ikb_job 2556                              ??___lwtoft 0016  
                       __size_of_strlen 0022                                 _group_x 00B0  
              _error_grantedToWriteDisp 00CA                 ??_ikb_key_is_ready2read 000B  
                               _visMode 00BB                       __end_of_mpap_sych 1C66  
               mpap_normal_mode@cod_ret 0002                              ??_ikb_init 000B  
                        __pintcode_body 20C0                    end_of_initialization 1E9A  
            __end_of_ikey_is_accessible 20C0                       ?_keyRead_pin_key0 0001  
                     ?_keyRead_pin_key1 0001                       ?_keyRead_pin_key2 0001  
                     ?_keyRead_pin_key3 0001                       ?_keyRead_pin_key4 0001  
            ??_pulsonic_getTotalSum_mlh 0033                           ??__mpap_step1 0001  
                         ??__mpap_step2 0001                           ??__mpap_step3 0001  
                         ??__mpap_step4 0001                    __size_of_visMode_job 0028  
                               itoa@buf 001A                                 itoa@val 001B  
                         __Lmediumconst 0000                                 int_func 20C0  
                    ??_keyRead_pin_key0 000B                      ??_keyRead_pin_key1 000B  
                    ??_keyRead_pin_key2 000B                      ??_keyRead_pin_key3 000B  
                    ??_keyRead_pin_key4 000B          ??_disp7s_qtyDisp_writeText_OFF 000B  
                   errorHandler_queue@c 00BF                     errorHandler_queue@i 00C5  
                            ??_mpap_job 0004                           _OIL_VISCOSITY 080B  
                     ?_mpap_normal_mode 0001                         main@c_access_kb 0044  
                               postdec1 000FE5                                 postdec2 000FDD  
                    ??_mpap_normal_mode 0002                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                ikb_key_is_ready2read@k 000B                              ??_pump_job 000B  
                               utoa@buf 0012                                 utoa@val 0013  
                           ?_disp7s_job 0001                             ?_disp7s_off 000B  
                               strlen@s 000B                           ?_visMode_disp 0001  
                         ?_visMode_init 0001                    __size_of_pump_isIdle 0010  
                 __size_of_autoMode_job 00A6                    __end_of_mpap_do1step 22A8  
                            _visMode_kb 1AC6                           ??_disp7s_init 000C  
                     ?_mpap_setupToTurn 0011                      ??_mpap_setupToTurn 0013  
                  __end_of_mpap_homming 2022               __size_of_ikb_key_was_read 0014  
          disp7s_qtyDisp_writeFloat@num 003C                              main@codapp 0046  
                   disp7s_write_f@pDisp 0031                     disp7s_write_i@pDisp 0020  
                 __size_of_INTERRUPCION 2102                             ___ftmul@exp 001C  
                          _autoMode_job 18EC                     __end_of__mpap_step1 259C  
                   __end_of__mpap_step2 2592                     __end_of__mpap_step3 2588  
                   __end_of__mpap_step4 25A6                     __end_of_DISP7S_NUMS 080B  
                        __end_of___ftge 1E44         mpap_setupToTurn@numSteps_tomove 0011  
                        ??_visMode_disp 003F                          ??_visMode_init 000B  
                 __size_of_ikey_parsing 0630                          __end_of___wmul 2404  
                         __pidataCOMRAM 25EE                          _disp7s_mux0_on 25E2  
                        _disp7s_mux1_on 25DA                          _disp7s_mux2_on 25D2  
                        _disp7s_mux3_on 25CA                          _disp7s_mux4_on 25EA  
                        __end_of_strlen 244A                       autoMode_init@init 003F  
                   start_initialization 1E44              ?_disp7s_qtyDisp_writeFloat 003C  
                         ?_pump_setTick 000B                           ??_autoMode_kb 000C  
                        _disp7s_write_f 0E42                          _disp7s_write_i 14B8  
                          _INTERRUPCION 0008                     __end_of_disp7s_init 1FCA  
                  visMode_init@numVista 000B                              ikey_scan@k 000C  
                   _disp7s_modeDisp_off 24FC                     __size_of_disp7s_job 0078  
                   __size_of_disp7s_off 003E                            _ikey_parsing 0812  
                 __end_of_autoMode_init 2224                                ??___ftge 001C  
                              ??___wmul 000F                             __pdataBANK0 00D0  
                __end_of_disp7s_mux0_on 25E6                  __end_of_disp7s_mux1_on 25DE  
                __end_of_disp7s_mux2_on 25D6                  __end_of_disp7s_mux3_on 25CE  
                __end_of_disp7s_mux4_on 25EE                    ?_disp7s_modeDisp_off 0001  
                           ?_visMode_kb 0001                                ??_strlen 000D  
                __end_of_disp7s_write_f 105E                  __end_of_disp7s_write_i 15C2  
                     __size_of___ftpack 00AE                __end_of_nozzle_isEnabled 2152  
                        ??_pump_setTick 000D                             __pbssCOMRAM 0047  
                     __size_of___lwtoft 0024                           __pcstackBANK0 00EE  
            disp7s_qtyDisp_writeInt@num 0038                        disp7s_mux_init@i 000B  
                          mpap_sych@sm0 00C3        __size_of_disp7s_qtyDisp_writeInt 001A  
      __end_of_pulsonic_getTotalSum_mlh 1BE4               pulsonic_getTotalSum_mlh@i 0035  
                   __end_of_autoMode_kb 1DD0                           ikey_parsing@k 0023  
                     __size_of_ikb_init 00B6                             __mpap_step1 2592  
                           __mpap_step2 2588                             __mpap_step3 257E  
                           __mpap_step4 259C                             _DISP7S_NUMS 0801  
                            mpap_sych@c 00C2                   __end_of_pulsonic_init 1F6C  
                             __mpap_off 25A6                           ??_mpap_isIdle 000B  
                      ___lwdiv@dividend 000B                       __size_of_mpap_job 0048  
                             __pintcode 0008                   __size_of_mpap_do1step 0042  
                              ?___ftadd 0016                                ?___ftmul 0013  
                              ?___fttol 0022                                ?___lwdiv 000B  
                              ?___lwmod 000B                   ??_disp7s_modeDisp_off 0011  
              _disp7s_modeDisp_writeInt 24BC                         ?_disp7s_mux0_on 0001  
                       ?_disp7s_mux1_on 0001                         ?_disp7s_mux2_on 0001  
                       ?_disp7s_mux3_on 0001                         ?_disp7s_mux4_on 0001  
          __size_of_mpap_setupToHomming 0012                               _machState 00CD  
                     __size_of_pump_job 0064                                ?_ikb_job 0001  
                      disp7s_write_f@pi 00FA                        disp7s_write_i@pi 0034  
                           __smallconst 0800                   __size_of_mpap_homming 0058  
                       ?_disp7s_write_f 0031                         ?_disp7s_write_i 0020  
                           _disp7s_init 1F6C                               _ikey_scan 1206  
        __size_of_ikb_key_is_ready2read 001C                        ___lwdiv@quotient 0010  
         __end_of_ikb_key_is_ready2read 24A2                        _ikb_key_was_read 24D6  
              __size_of_disp7s_mux0_off 0004                __size_of_disp7s_mux1_off 0004  
              __size_of_disp7s_mux2_off 0004                __size_of_disp7s_mux3_off 0004  
              __size_of_disp7s_mux4_off 0004                    __end_of_visMode_disp 1CE2  
                  __end_of_visMode_init 254A                               _mpap_step 00E4  
                             _mpap_sych 1BE4                          ___wmul@product 000F  
                          _mpap_do1step 2266                __size_of_disp7s_mux_init 0040  
                   __size_of_visMode_kb 0090                              ?__mpap_off 0001  
                              i2u300_48 2294                                i2u432_48 2180  
                              i2u432_49 2194                      _ikey_is_accessible 2074  
                          _mpap_homming 1FCA               __size_of_keyRead_pin_key0 0008  
             __size_of_keyRead_pin_key1 000A               __size_of_keyRead_pin_key2 000A  
             __size_of_keyRead_pin_key3 0006               __size_of_keyRead_pin_key4 0008  
                          ??_disp7s_job 0013                            ??_disp7s_off 000E  
                   __end_of_mpap_isIdle 253C         ??_disp7s_modeDisp_writeText_oil 000B  
                     ___wmul@multiplier 000B                     ?_ikey_is_accessible 0001  
                    disp7s_write_f@buff 00EE                               ikb_init@i 000B  
             __size_of_mpap_normal_mode 0048                      disp7s_write_i@buff 002A  
                 disp7s_off@NUM_OF_DISP 000D                              ?_ikey_scan 0001  
                           _autoMode_kb 1D5A                           ??_visMode_job 0043  
                             copy_data0 1E58                     mpap_homming@cod_ret 0003  
                            ?_mpap_sych 0001                    ??_ikey_is_accessible 000B  
                    __end_of_disp7s_job 1D5A                      __end_of_disp7s_off 2326  
             __size_of_mpap_setupToTurn 0030                                __Hrparam 0000  
                  __end_of_pump_setTick 257E                                __Lrparam 0000  
                  check_startSignal@sm0 00C9                    check_startSignal@sm1 00C8  
                         ??_pump_isIdle 000B                        __size_of___ftadd 01A8  
     __size_of_pulsonic_getTotalSum_mlh 008E                        __size_of___ftmul 00F4  
                      __size_of___fttol 00D2                        __size_of___lwdiv 0052  
             ?_pulsonic_getTotalSum_mlh 0031                        __size_of___lwmod 0042  
                              ___ftpack 183E                                ___lwtoft 2404  
  __end_of_disp7s_qtyDisp_writeText_OFF 251E   __size_of_disp7s_qtyDisp_writeText_OFF 0010  
          _disp7s_qtyDisp_writeText_OFF 250E                        __size_of_ikb_job 000A  
                         disp7s_mux_Q@i 0012                           disp7s_mux_Q@q 0011  
           ??_disp7s_qtyDisp_writeFloat 003F                   errorHandler_queue@sm0 00C4  
                       ___lwdiv@divisor 000D                 _disp7s_qtyDisp_writeInt 24A2  
                     check_oilLevel@sm0 00C7                       check_oilLevel@sm1 00C6  
                       ___lwdiv@counter 000F                                __ptext10 1EA8  
                              __ptext11 1F0C                                __ptext20 0812  
                              __ptext12 1BE4                                __ptext21 2074  
                              __ptext13 2556                                __ptext30 25D2  
                              __ptext22 1788                                __ptext14 1206  
                              __ptext31 25D6                                __ptext23 1CE2  
                              __ptext15 25C0                                __ptext40 210A  
                              __ptext32 25DA                                __ptext24 1992  
                              __ptext16 2560                                __ptext41 24EA  
                              __ptext33 25DE                                __ptext25 1F6C  
                              __ptext17 256A                                __ptext50 1B56  
                              __ptext42 2388                                __ptext34 25E2  
                              __ptext26 22A8                                __ptext18 25B0  
                              __ptext51 23DE                                __ptext43 2358  
                              __ptext35 25E6                                __ptext27 25C6  
                              __ptext19 25B8                                __ptext60 15C2  
                              __ptext52 2404                                __ptext44 252E  
                              __ptext36 25EA                                __ptext28 25CA  
                              __ptext61 1DD0                                __ptext53 2468  
                              __ptext45 1D5A                                __ptext37 18EC  
                              __ptext29 25CE                                __ptext70 2266  
                              __ptext62 105E                                __ptext54 0E42  
                              __ptext46 253C                                __ptext38 2574  
                              __ptext71 257E                                __ptext63 183E  
                              __ptext55 2326                                __ptext47 24D6  
                              __ptext39 251E                                __ptext72 2588  
                              __ptext64 24FC                                __ptext56 1A32  
                              __ptext48 2486                                __ptext73 2592  
                              __ptext65 22E8                                __ptext57 2224  
                              __ptext49 21E2                                __ptext74 259C  
                              __ptext58 2022                                __ptext75 25A6  
                              __ptext67 2152                                __ptext59 16B6  
                              __ptext76 0000                                __ptext68 219A  
                              __ptext69 1FCA                                _ikb_init 1788  
                  _mpap_setupToTurn$450 0013                                _autoMode 00BD  
                         __size_of_main 0112                           __size_of_itoa 0032  
                         __size_of_utoa 0094                     __end_of_visMode_job 23DE  
                              _isr_flag 00CF                                _mpap_job 2152  
                              _mpap_off 00EC                       ??_disp7s_mux0_off 000B  
                     ??_disp7s_mux1_off 000B                       ??_disp7s_mux2_off 000B  
                     ??_disp7s_mux3_off 000B                             ??__mpap_off 0001  
                     ??_disp7s_mux4_off 000B                       main@c_access_disp 0045  
                           _mpap_isIdle 252E                                int$flags 0051  
                     ??_disp7s_mux_init 000B                                _pump_job 1EA8  
                              _pulsonic 0100                       nozzle_isEnabled@n 001F  
                          ??_visMode_kb 000C                   __CFG_CPUDIV$OSC1_PLL2 000000  
                   __end_of_pump_isIdle 252E                       ?_nozzle_isEnabled 001F  
                             pump_job@c 00C1           ?_disp7s_qtyDisp_writeText_OFF 0001  
 __end_of_disp7s_modeDisp_writeText_oil 2556  __size_of_disp7s_modeDisp_writeText_oil 000C  
         _disp7s_modeDisp_writeText_oil 254A                             ??_ikey_scan 000B  
                 __size_of_visMode_disp 007C                                itoa@base 001D  
                 __size_of_visMode_init 000E                      ??_nozzle_isEnabled 0021  
                          disp7s_job@pq 0015                            disp7s_init@i 000C  
                              intlevel2 0000                     _mpap_setupToHomming 24EA  
                           ??_mpap_sych 000B                        ___lwmod@dividend 000B  
                          ?__mpap_step1 0001                            ?__mpap_step2 0001  
                          ?__mpap_step3 0001                            ?__mpap_step4 0001  
                         ?_disp7s_mux_Q 0001              ??_disp7s_modeDisp_writeInt 003A  
                     _mpap_movetoNozzle 2388                      __end_of_visMode_kb 1B56  
             _disp7s_qtyDisp_writeFloat 2468                        ??_disp7s_mux0_on 000B  
                      ??_disp7s_mux1_on 000B                        ??_disp7s_mux2_on 000B  
                      ??_disp7s_mux3_on 000B                        ??_disp7s_mux4_on 000B  
                    ?_mpap_movetoNozzle 0001                __end_of_ikb_key_was_read 24EA  
                      _keyRead_pin_key0 25B0                        _keyRead_pin_key1 256A  
                      _keyRead_pin_key2 2560                        _keyRead_pin_key3 25C0  
                      _keyRead_pin_key4 25B8                        ??_disp7s_write_f 0037  
                      ??_disp7s_write_i 0025                    ?_mpap_setupToHomming 0001  
                   ??_mpap_movetoNozzle 0015                            _visMode_disp 1C66  
                          _visMode_init 253C                                utoa@base 0015  
                           disp7s_job@q 004F                             disp7s_off@i 0010  
             ??_disp7s_qtyDisp_writeInt 003A                            ?_disp7s_init 0001  
                       ___lwmod@divisor 000D                        _mpap_normal_mode 219A  
                              strlen@cp 000D                         ___lwmod@counter 000F  
                __size_of_autoMode_init 0042                             _visMode_job 23B6  
                    __CFG_FOSC$HSPLL_HS 000000                   __size_of_pump_setTick 000A  
                        ??_disp7s_mux_Q 000B               __end_of_mpap_movetoNozzle 23B6  
                 __end_of_OIL_VISCOSITY 080F                        _mpap_setupToTurn 2358  
           __end_of_disp7s_modeDisp_off 250E  
